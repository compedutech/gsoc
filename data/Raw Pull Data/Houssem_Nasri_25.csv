pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1490782180,[GSOC23] - A - Implement a fully functional CVE auditing feature based on OVAL data,"## What does this PR change?

This is the first pull request of my GSoC project. The primary goal of the PR is to implement and test the OVAL-based CVE auditing algorithm as described in the associated RFC. It also includes a partial (but sufficient given the OVAL files we aim to consume)  implementation of the OVAL definition schema specification.

This implementation addresses OVALs produced by SUSE, RedHat, and Debian. Ubuntu will be addressed in a follow-up pull request.

### Usage guide
Since the download and syncing of OVAL data will be handled in a different PR, for now, you'll need to do it manually among other steps. This is important to ensure the CVE auditing is accurate. So, here's a guide on what you need to do to test the changes in this PR.

#### Step 1: Download and save OVAL data to the database
1. Download the OVAL file that corresponds to the OS of the client to audit *(check out the vulnerable package extractor javadoc .e.g. [`SUSEVulnerablePackageExtractor`](https://github.com/uyuni-project/uyuni/blob/6b40b5bc71024b12db74cac9f5c46da846aa49dd/java/code/src/com/suse/oval/vulnerablepkgextractor/SUSEVulnerablePackageExtractor.java) for sources to download from)* and place it somewhere on the Uyuni server.
2. Run this Java code and replace `<path_to_oval.xml>` with the path to the OVAL file you downloaded:
  ```java
OvalParser parser = new OvalParser();
OvalRootType root = parser.parse(new File(""<path_to_oval.xml>""));
OVALCleaner.cleanup(root, OsFamily.DEBIAN, ""11"");
OVALCachingFactory.savePlatformsVulnerablePackages(root);
  ```
#### Step 2: Refresh package list of clients to audit
This step is required in order to acquire the newly added CPE grain and store it in the database.

### TODO
- [x] Replace `log.error()` with `log.debug()`
- [x] Fix checkstyle errors
- [x] Add a usage guide to the PR description
- [x] Add before and after screenshots
- [ ] Fix cucumber failing tests

### What is missing
These are known limitations that will be addressed in subsequent pull requests.
- UI Integration (Python and React)
- Ubuntu support
- The downloading and synchronization of OVAL data
- Testing of the vulnerable package extractors
- Falling back to the old CVE auditing code if OVAL not available

### Useful links
- [The RFC](https://github.com/uyuni-project/uyuni-rfc/pull/80)

## GUI diff

**Before**

![image](https://github.com/uyuni-project/uyuni/assets/21198231/1c895318-a659-4e62-862a-d8d934ae2b68)

**After**

![image](https://github.com/uyuni-project/uyuni/assets/21198231/7cb4cce1-a0ae-4793-a5fc-6226b5063d58)

- [x] **DONE**

## Documentation
- API documentation added.
- [Documentation PR](https://github.com/uyuni-project/uyuni-docs/pull/2471)
- [x] **DONE**

## Test coverage
- Unit tests were added
- [x] **DONE**

## Links
- [x] **DONE**

## Changelogs

Make sure the changelogs entries you are adding are compliant with https://github.com/uyuni-project/uyuni/wiki/Contributing#changelogs and https://github.com/uyuni-project/uyuni/wiki/Contributing#uyuni-projectuyuni-repository

If you don't need a changelog check, please mark this checkbox:

- [ ] No changelog needed

If you uncheck the checkbox after the PR is created, you will need to re-run `changelog_test` (see below)


## Re-run a test

If you need to re-run a test, please mark the related checkbox, it will be unchecked automatically once it has re-run:

- [ ] Re-run test ""changelog_test""
- [ ] Re-run test ""backend_unittests_pgsql""
- [ ] Re-run test ""java_pgsql_tests""    
- [ ] Re-run test ""schema_migration_test_pgsql"" 
- [ ] Re-run test ""susemanager_unittests""
- [ ] Re-run test ""javascript_lint""
- [ ] Re-run test ""spacecmd_unittests""
",True,7466,https://api.github.com/repos/uyuni-project/uyuni/pulls/7466,https://github.com/uyuni-project/uyuni/pull/7466,closed,6747,411,95,91,16,117,16,0,"[{'name': 'java'}, {'name': 'java_lint_checkstyle'}, {'name': 'java_pgsql_tests'}, {'name': 'API'}, {'name': 'schema_migration_test_pgsql'}, {'name': 'database'}, {'name': 'schema_migration_test_oracle'}, {'name': 'ui'}, {'name': 'javascript_lint'}, {'name': 'secondary-features'}, {'name': 'testing'}, {'name': 'ruby_rubocop'}, {'name': 'data-model'}, {'name': 'xmlrpc'}, {'name': 'old-ui'}, {'name': 'needs-translation'}]",2023-08-26 20:24:30+00:00,2024-02-20 12:55:16+00:00,15352246.0,"177 days, 16:30:46","[{'comment_id': 1306575681, 'comment_body': ""## Asking for feedback on the salt modifications\r\n> Commits to review: https://github.com/uyuni-project/uyuni/pull/7466/commits/652f1222a5e3a3074ce0227b77b1ca0022fb238d https://github.com/uyuni-project/uyuni/pull/7466/commits/9adbb069cf2f0283cb32d658ec0fa136ffae96c2 https://github.com/uyuni-project/uyuni/pull/7466/commits/5c053f0651c33a037ce837a323d012be77cf8fa2\r\n- Newly registered systems will be assigned a CPE as part of the registration process, however, old systems must be migrated. The idea here is to set the CPE when users refresh their package list. The package refresh process can be slow, and users have to refresh the package list at least once for each of their systems to use the CVE auditing functionality. This is especially a concern for users with hundreds of systems.\r\n- Also, wanna confirm that adding a new grain to `susemanager-utils/susemanager-sls/src/grains/cpe_grain.py` is the best way to acquire the clients' CPE."", 'comment_created': datetime.datetime(2023, 8, 26, 23, 17, 14, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1314616236, 'comment_body': '@agraul Could you or someone from the Ion squad have a look at Houssems proposal above.\r\nThank you', 'comment_created': datetime.datetime(2023, 9, 4, 8, 36, 53, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1340757145, 'comment_body': '> SonarCloud: Call ""Optional#isPresent()"" before accessing the value. \r\n\r\nThis is a false positive bug because `test.getStateRef().isPresent()` is being called before calling `test.getStateRef().get()`', 'comment_created': datetime.datetime(2023, 9, 28, 23, 52, 37, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1341826509, 'comment_body': ""I rewrote the code using `ifPresent(stateRef -> ... )` and now SonarCloud doesn't detect it as a bug anymore."", 'comment_created': datetime.datetime(2023, 9, 29, 22, 5, 51, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1357906502, 'comment_body': ""I think it would be nice if this was part of Salt's core grains. We're already parsing the `CPE_NAME` to obtain some of the `os` grains, i.e. `/etc/os-release` is already read and parsed. "", 'comment_created': datetime.datetime(2023, 10, 13, 7, 59, 20, tzinfo=datetime.timezone.utc), 'commenter': 'agraul', 'type': 'User'}, {'comment_id': 1357910954, 'comment_body': ""Do you have example os-release files that show the differences you're accounting for? Those would be good to test this code."", 'comment_created': datetime.datetime(2023, 10, 13, 8, 3, 34, tzinfo=datetime.timezone.utc), 'commenter': 'agraul', 'type': 'User'}, {'comment_id': 1360822341, 'comment_body': ""This is an example of [RedHat 8 CPE](https://github.com/chef/os_release/blob/main/redhat_8), notice the 'GA' at the end. And this is the standard list of vulnerable RedHat 8 CPEs found in OVAL files:\r\n```xml\r\n   <affected_cpe_list>\r\n    <cpe>cpe:/a:redhat:enterprise_linux:8</cpe>\r\n    <cpe>cpe:/a:redhat:enterprise_linux:8::appstream</cpe>\r\n    <cpe>cpe:/a:redhat:enterprise_linux:8::crb</cpe>\r\n    <cpe>cpe:/a:redhat:enterprise_linux:8::highavailability</cpe>\r\n    <cpe>cpe:/a:redhat:enterprise_linux:8::nfv</cpe>\r\n    <cpe>cpe:/a:redhat:enterprise_linux:8::realtime</cpe>\r\n    <cpe>cpe:/a:redhat:enterprise_linux:8::resilientstorage</cpe>\r\n    <cpe>cpe:/a:redhat:enterprise_linux:8::sap</cpe>\r\n    <cpe>cpe:/a:redhat:enterprise_linux:8::sap_hana</cpe>\r\n    <cpe>cpe:/a:redhat:enterprise_linux:8::supplementary</cpe>\r\n    <cpe>cpe:/o:redhat:enterprise_linux:8</cpe>\r\n    <cpe>cpe:/o:redhat:enterprise_linux:8::baseos</cpe>\r\n   </affected_cpe_list>\r\n```\r\n\r\nAnd this is [Ubuntu 22.04 CPE](https://nvd.nist.gov/products/cpe/detail/8DE10C8A-477C-42FF-8F96-D8813B729D3A?namingFormat=2.3&orderBy=CPEURI&keyword=cpe%3A2.3%3Ao%3Acanonical%3Aubuntu_linux%3A*%3A*%3A*%3A*%3Alts%3A*%3A*%3A*&status=FINAL%2CDEPRECATED) with an LTS at the end. \r\n\r\nThe code actually doesn't account for these differences. Since OVAL files for Ubuntu and Debian don't contain CPEs we derive them in the backend. For systems to be matched successfully, the derived CPE in salt must match the derived CPE in the backend.\r\nhttps://github.com/uyuni-project/uyuni/blob/513ec82697c689d2fc638eaf1f614bc494f85dbb/java/code/src/com/suse/oval/vulnerablepkgextractor/DebianVulnerablePackagesExtractor.java#L82-L90"", 'comment_created': datetime.datetime(2023, 10, 16, 15, 7, 18, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1360830981, 'comment_body': 'Sounds good, so I need to open a PR in [openSUSE/salt](https://github.com/openSUSE/salt)?', 'comment_created': datetime.datetime(2023, 10, 16, 15, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1361614581, 'comment_body': 'Even better would be in the upstream repository [saltstack/salt](https://github.com/saltstack/salt/). We try to be aligned as much as possible with upstream Salt. It can take a while for them to review and merge PRs, so once we know they like the proposed change we can include it in openSUSE/salt.', 'comment_created': datetime.datetime(2023, 10, 17, 7, 16, 40, tzinfo=datetime.timezone.utc), 'commenter': 'agraul', 'type': 'User'}, {'comment_id': 1366652119, 'comment_body': 'This constructor does not seem to be used anywhere. Think we can remove it.', 'comment_created': datetime.datetime(2023, 10, 20, 8, 30, 32, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366729818, 'comment_body': ""I know this class was auto generated. But please don't leave empty javadoc comments"", 'comment_created': datetime.datetime(2023, 10, 20, 9, 35, 23, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366730017, 'comment_body': 'Same here', 'comment_created': datetime.datetime(2023, 10, 20, 9, 35, 33, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366730609, 'comment_body': 'Same here', 'comment_created': datetime.datetime(2023, 10, 20, 9, 36, 9, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366730769, 'comment_body': 'Same here', 'comment_created': datetime.datetime(2023, 10, 20, 9, 36, 17, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366736457, 'comment_body': ""More unused constructors here. If you don't plan on using them in the future please remove unused code."", 'comment_created': datetime.datetime(2023, 10, 20, 9, 41, 31, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366773551, 'comment_body': 'Please try to address remaining todos in the code. If taken care of it in a later PR please mention it. You can also create an issue in uyuni for remaining things todo', 'comment_created': datetime.datetime(2023, 10, 20, 10, 15, 57, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366792742, 'comment_body': ""IIUC if we throw an exception here the exception in `SUSEVulnerablePackageExtractor` (where is is called from) is never going to be thrown. I'd rather return an optional here already and have the exception thrown in the Extractor class"", 'comment_created': datetime.datetime(2023, 10, 20, 10, 28, 44, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366793413, 'comment_body': ""IIUC if we throw an exception here the exception in `SUSEVulnerablePackageExtractor` (where is is called from) is never going to be thrown. I'd rather return an optional here already and have the exception thrown in the Extractor class"", 'comment_created': datetime.datetime(2023, 10, 20, 10, 29, 28, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366795328, 'comment_body': 'same here', 'comment_created': datetime.datetime(2023, 10, 20, 10, 31, 27, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366811006, 'comment_body': ""Weird question: Why start with 101?\r\nAlso I noticed that the ids in my suseOvalPlatform table are growing unexpectedly fast.\r\nI've got 128 entries with the last one having an id of 2271602. Since we're using numeric type I don't think we're in danger of running into overflow here but still something worth investigation if you find the time."", 'comment_created': datetime.datetime(2023, 10, 20, 10, 47, 30, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366815807, 'comment_body': 'Same question as above. With the difference that ids seem to behave normally here.', 'comment_created': datetime.datetime(2023, 10, 20, 10, 49, 51, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366824005, 'comment_body': 'Why add the "":"" in the concatenation above, if you remove them here again?', 'comment_created': datetime.datetime(2023, 10, 20, 10, 58, 48, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366885809, 'comment_body': 'Should be removed to avoid spamming the logs or be debug at most', 'comment_created': datetime.datetime(2023, 10, 20, 12, 7, 2, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366887870, 'comment_body': 'Should be removed or changed to debug', 'comment_created': datetime.datetime(2023, 10, 20, 12, 8, 57, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366888157, 'comment_body': 'Same here', 'comment_created': datetime.datetime(2023, 10, 20, 12, 9, 7, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366889197, 'comment_body': 'Same here', 'comment_created': datetime.datetime(2023, 10, 20, 12, 9, 46, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366890848, 'comment_body': 'Nitpick: Maybe stick to all capital letters with this one as well', 'comment_created': datetime.datetime(2023, 10, 20, 12, 11, 31, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366918052, 'comment_body': 'That was taken care of in a previous commit, or am I wrong here?', 'comment_created': datetime.datetime(2023, 10, 20, 12, 37, 22, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366919793, 'comment_body': 'Setting status to `AFFECTED_PATCH_INAPPLICABLE` should do in this case if I am correct. Some thoughts @admd ?', 'comment_created': datetime.datetime(2023, 10, 20, 12, 39, 2, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366920983, 'comment_body': ""What's the problem here? Is this taken care of in another PR? "", 'comment_created': datetime.datetime(2023, 10, 20, 12, 40, 9, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1366924802, 'comment_body': 'This todo still needs to be taken care off.', 'comment_created': datetime.datetime(2023, 10, 20, 12, 43, 53, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1368294461, 'comment_body': ""If you don't plan to address this in this PR please add a card for it. We should try to avoid merging the code with leftover todos."", 'comment_created': datetime.datetime(2023, 10, 23, 8, 19, 29, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1368306283, 'comment_body': 'This message should be translated using the `t()` function', 'comment_created': datetime.datetime(2023, 10, 23, 8, 29, 25, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1368495555, 'comment_body': 'Is there any reason to have this logic in PSQL instead of Java? What are the advantages of having i there?\r\nWe are trying to have logic in store procedures/functions because it make it much harder to test and debug.', 'comment_created': datetime.datetime(2023, 10, 23, 11, 8, 31, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1368500177, 'comment_body': ""I'm not sure about this equals implementation. If the names are different is object equal?\r\nWe should not confuse the same DB entry with the Java object being equals. Hibernate uses the equals method to check if an object needs to be flushed to the database, so I think we need to also compare the name here."", 'comment_created': datetime.datetime(2023, 10, 23, 11, 13, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1368524884, 'comment_body': 'this table looks to be duplicated from the file 001-oval-add-tables.sql\r\n', 'comment_created': datetime.datetime(2023, 10, 23, 11, 37, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1368525414, 'comment_body': 'Some about this table, looks duplicated.', 'comment_created': datetime.datetime(2023, 10, 23, 11, 38, 24, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1368526933, 'comment_body': 'That is strange and should be a signal that something is not in good space. We should at least understand why the number is growing.', 'comment_created': datetime.datetime(2023, 10, 23, 11, 39, 58, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1369180745, 'comment_body': ""I'm not convinced this is a good idea, this way we end up having a lot of very specific styles that are only used in this specific view. The overrides here are very specific and that makes them fragile. If the underlying panel styles change, something here will surely get out of alignment as well."", 'comment_created': datetime.datetime(2023, 10, 23, 19, 32, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Etheryte', 'type': 'User'}, {'comment_id': 1369183465, 'comment_body': ""While the accordion pattern can be useful in many situations, I don't think this specific one works well. The core problem is that traditionally, clicking on a label element should toggle the relevant input, in this case the checkbox. Here it instead toggles the accordion, so it doesn't match user expectations.\r\n\r\nI would prefer to move the descriptions into tooltips since they're pretty short and then show exactly as the user interacts with the element, that way we can also keep the default expected behavior of the label click modifying the checkbox. What do you think @parlt91?"", 'comment_created': datetime.datetime(2023, 10, 23, 19, 35, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Etheryte', 'type': 'User'}, {'comment_id': 1370480939, 'comment_body': 'This filter is similar to the one at line 146. Should we use the same method?', 'comment_created': datetime.datetime(2023, 10, 24, 16, 17, 3, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1370482402, 'comment_body': 'If we only care about installed packages that are affected by the CVE should we load only the packages affected but the CVE that are installed, and this way avoid loading all packages to memory?', 'comment_created': datetime.datetime(2023, 10, 24, 16, 18, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1370495150, 'comment_body': 'I may be missing something in here, but where is this method called outside the unit tests?', 'comment_created': datetime.datetime(2023, 10, 24, 16, 28, 7, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1370510133, 'comment_body': 'I think it should be using ""StAX"" instead of Jaxb, at least according to the issue: https://github.com/uyuni-project/uyuni/issues/7108\r\n\r\nAlso, I\'m probably missing something but where is this class used outside tests?', 'comment_created': datetime.datetime(2023, 10, 24, 16, 38, 26, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1370513870, 'comment_body': ""I'm probably missing something, but where is this class used outside the test classes?"", 'comment_created': datetime.datetime(2023, 10, 24, 16, 40, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1370521605, 'comment_body': ""I think I found the reason, It's because the download and automatic extract is not yet implemented?"", 'comment_created': datetime.datetime(2023, 10, 24, 16, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1370522076, 'comment_body': 'I think I found the reason for not being called outside the tests. Is it because the download and automatic extract are not yet implemented?', 'comment_created': datetime.datetime(2023, 10, 24, 16, 46, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1370522149, 'comment_body': 'I think I found the reason for not being called outside the tests. Is it because the download and automatic extract are not yet implemented?', 'comment_created': datetime.datetime(2023, 10, 24, 16, 46, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1372218717, 'comment_body': 'Yes, exactly, the download and the writing to the database are implemented in [PR B](https://github.com/uyuni-project/uyuni/pull/7509), and the StAX parser is implemented in [PR C](https://github.com/uyuni-project/uyuni/pull/7510).', 'comment_created': datetime.datetime(2023, 10, 25, 19, 14, 14, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1373729954, 'comment_body': ""The primary reason is performance, this way, we can call procedures in batches. Even with this optimization, writing OVAL data to the database from a ~400 MB file takes 5 minutes on my machine, so it's kind of necessary."", 'comment_created': datetime.datetime(2023, 10, 26, 19, 39, 17, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1374326859, 'comment_body': 'Have you tried to use hibernate and flush the inserts after a certain number of inserts (the batch size)? What was the performance degradation on that?\r\nWe should consider performance vs maintenance of the code, and to do that we would need to compare performance times for each solution.', 'comment_created': datetime.datetime(2023, 10, 27, 9, 40, 52, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1375458049, 'comment_body': ""We remove the trailing `:` notice the `$` in the regex, not the ones in the middle. \r\n\r\nThere is a chance that I'm misusing the word 'trailing' here."", 'comment_created': datetime.datetime(2023, 10, 29, 15, 27, 28, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1375458277, 'comment_body': 'I agree, debug should be fine.', 'comment_created': datetime.datetime(2023, 10, 29, 15, 28, 43, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1375458434, 'comment_body': 'Hmm I thought I already changed it to LEAP', 'comment_created': datetime.datetime(2023, 10, 29, 15, 29, 51, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1375459888, 'comment_body': 'Keep in mind that `AFFECTED_PATCH_INAPPLICABLE` means a full patch is available, the same name was kept for backward compatibility but is not completely accurate. But given the context, I do agree that `AFFECTED_PATCH_INAPPLICABLE` is our best option here. Would like to hear what @admd has to say about this.', 'comment_created': datetime.datetime(2023, 10, 29, 15, 33, 51, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1375460181, 'comment_body': ""Currently, it's not. Images are audited with channels only. But I left a TODO for the future."", 'comment_created': datetime.datetime(2023, 10, 29, 15, 35, 28, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1375460275, 'comment_body': 'I think the first one is already taken care of, the second one only needs to be handled.', 'comment_created': datetime.datetime(2023, 10, 29, 15, 36, 23, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1375460468, 'comment_body': ""Ah okay, I use TODOs to not forget about things, but you're right I don't plan to work on this in the current PR unless it was brought up by someone."", 'comment_created': datetime.datetime(2023, 10, 29, 15, 37, 37, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1375460717, 'comment_body': 'Yep, this was just for the demo, the message also needs to vary between patch statuses. Right now, it shows the same description for all of them.', 'comment_created': datetime.datetime(2023, 10, 29, 15, 39, 7, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1375461388, 'comment_body': 'Yes, I tried Hibernate while flushing after inserting a batch and the performance was horrible, even with native queries. See [this](https://github.com/uyuni-project/uyuni-rfc/pull/80#discussion_r1257750349) for more details.', 'comment_created': datetime.datetime(2023, 10, 29, 15, 42, 51, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1375463885, 'comment_body': ""Starting with 101 was selected randomly.\r\n\r\nI think I found the reason behind the fast growing of IDs. Apparently `nextval('suse_oval_platform_id_seq')` is evaluated even when the platform/cpe we're trying to insert already exists (conflict detected). One solution is to not use `ON CONFLICT` and check for the existence of a platform with the same CPE before attempting to insert one.\r\n\r\n```sql\r\nINSERT INTO suseovalplatform(id, cpe)\r\nVALUES (nextval('suse_oval_platform_id_seq'), product_cpe_in)\r\nON CONFLICT(cpe) DO NOTHING;\r\n```"", 'comment_created': datetime.datetime(2023, 10, 29, 15, 57, 42, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1375465030, 'comment_body': 'I agree.', 'comment_created': datetime.datetime(2023, 10, 29, 16, 3, 59, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1375465931, 'comment_body': ""No, that's an optimization for the future, so I should remove the TODO."", 'comment_created': datetime.datetime(2023, 10, 29, 16, 10, 2, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1375466044, 'comment_body': 'Note to self: Remove the TODO', 'comment_created': datetime.datetime(2023, 10, 29, 16, 10, 44, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1387037995, 'comment_body': ""True, but there have been changes to this in PR B, so to not make it hard to resolve conflicts I'll keep it for now and handle it in PR B."", 'comment_created': datetime.datetime(2023, 11, 8, 18, 25, 30, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1387049107, 'comment_body': ""One constructor was not used in this PR but is used in PR B. I'm going to keep it to reduce conflicts."", 'comment_created': datetime.datetime(2023, 11, 8, 18, 35, 35, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1387049543, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 11, 8, 18, 35, 58, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1387057618, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 11, 8, 18, 44, 16, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1387124024, 'comment_body': 'See above. It behaves normally because, in the procedure definition that inserts vulnerable packages, I used an if statement instead of ON CONLIFCT clause to avoid duplicates. ', 'comment_created': datetime.datetime(2023, 11, 8, 19, 45, 27, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1387132709, 'comment_body': ""Fixed the growing problem. However, the id still starts from 101, I'll update it later. "", 'comment_created': datetime.datetime(2023, 11, 8, 19, 53, 50, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1387174747, 'comment_body': 'I set it to `AFFECTED_PATCH_INAPPLICABLE`.', 'comment_created': datetime.datetime(2023, 11, 8, 20, 39, 15, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1387180047, 'comment_body': 'Nice catch, this should be fixed now.', 'comment_created': datetime.datetime(2023, 11, 8, 20, 45, 4, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1387180095, 'comment_body': 'This too.', 'comment_created': datetime.datetime(2023, 11, 8, 20, 45, 7, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1390921252, 'comment_body': ""I agree with what you mentioned that we should stick with the behavior that clicking on the text ticks the checkboxes. We use tooltips to display descriptions all over the UI so that doesn't sound like a bad solution to me either."", 'comment_created': datetime.datetime(2023, 11, 13, 10, 25, 44, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1405199318, 'comment_body': ""Alexander responded in another comment. I'm resolving this."", 'comment_created': datetime.datetime(2023, 11, 25, 18, 46, 23, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1405218475, 'comment_body': '@Etheryte @parlt91 Thanks for the review and suggestions. I removed the accordion and replaced it with showing a tooltip message per your recommendations, but I thought it would be better to display the tooltip message for each client. Although the messages are static I think it would be more convenient for users to hover over the patch status on one client to learn more about it instead of scrolling up and down.\r\n\r\n![image](https://github.com/uyuni-project/uyuni/assets/21198231/348e9bae-d085-4087-bf89-ac370ad8f658)\r\n', 'comment_created': datetime.datetime(2023, 11, 25, 20, 7, 27, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1405218900, 'comment_body': ""The accordion approach was removed altogether so I'm resolving this."", 'comment_created': datetime.datetime(2023, 11, 25, 20, 9, 24, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1405219604, 'comment_body': ""Done. I'm assuming the generation of the translations will be done automatically. "", 'comment_created': datetime.datetime(2023, 11, 25, 20, 12, 28, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1405229173, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 11, 25, 20, 54, 55, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1405230710, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 11, 25, 21, 1, 50, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1405230735, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 11, 25, 21, 1, 57, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1405230792, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 11, 25, 21, 2, 6, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1405237005, 'comment_body': ""Nice catch but I don't think we can use the same method. In line 172, in addition to checking if a certain package is installed we also need to access the list of installed versions to be able to assert that all installed versions of the package are above the patched version, which is not possible with `isPackageInstalled`. I created another method to do exactly that.\r\n\r\nReading through the code at CVEAuditManagerOVAL after a while since I last touched it wasn't straightforward; it is not as clear as I hoped for. \r\n\r\nNote to self: Create smaller methods to abstract away common operations and make the code clearer."", 'comment_created': datetime.datetime(2023, 11, 25, 21, 32, 2, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1405260628, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 11, 25, 23, 28, 32, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1405261783, 'comment_body': 'I have a question: any idea how to replace Uyuni with SUSE Manager when the SUSE Manager theme is used?', 'comment_created': datetime.datetime(2023, 11, 25, 23, 33, 57, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1405410852, 'comment_body': 'Off the top of my head we don\'t have many places where we do different translations based on this. If you grep for `isUyuni` you can see a few places with examples, but I would suggest you discuss with @parlt91 before going down any one specific route.  \r\n\r\nIf you want to achieve the same result with less work, you could also consider rephrasing the tooltip, e.g. ""The client is affected by a vulnerability for which a patch has been released, but the patch can\'t be found in the relevant channels.""', 'comment_created': datetime.datetime(2023, 11, 26, 14, 31, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Etheryte', 'type': 'User'}, {'comment_id': 1406858144, 'comment_body': 'Thanks, I rephrased the tooltip messages to not mention Uyuni.', 'comment_created': datetime.datetime(2023, 11, 27, 22, 41, 47, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1406928887, 'comment_body': ""I'm all for the idea. There is already a query in PR D that could help in that regard. I think we can delay this until PR D is reviewed and take advantage of that query, this is especially useful to not create confusing conflicts with changes in the other PRs. If you agree I can resolve this and add it as a TODO to PR D?\r\n\r\nPS: I'm assuming PR A, B, C, and D will be merged at the same time, so the final version of the code won't load all packages.\r\n\r\n\r\nQuery in PR D:\r\nhttps://github.com/uyuni-project/uyuni/blob/4f5a7f459e7ff0e9577698c3f5a76e910d656790/java/code/src/com/redhat/rhn/common/db/datasource/xml/oval_queries.xml#L33"", 'comment_created': datetime.datetime(2023, 11, 28, 0, 15, 25, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1446421485, 'comment_body': 'Is there any reason to implement this logic in a store procedure instead of doing it in Java? If the reason is performance, do we have any metrics to compare them?\r\nMy concern is that code in psql are harder to maintain and test, and unless we have a clear benefit, I would avoid any new psql code in the project.', 'comment_created': datetime.datetime(2024, 1, 9, 17, 51, 6, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1446426213, 'comment_body': 'Do we need this index with the fix_version also included? Do you think adding the ""name"" column to the index would be enough?\r\nDid you find any performance problems where the index with also the fix_version index helped? \r\nMy concern is that fix_version can be null.', 'comment_created': datetime.datetime(2024, 1, 9, 17, 55, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1446430011, 'comment_body': ""I'm not sure if this is good. It creates a unique index in a column that can be nullable. It's allowed to do that, and we can have as many nulls as we want, but it looks at least strange."", 'comment_created': datetime.datetime(2024, 1, 9, 17, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1447029283, 'comment_body': 'why not using `lookup_cve(cve_name_in)` - this is handling also creating of the value if it does not exist.', 'comment_created': datetime.datetime(2024, 1, 10, 8, 21, 34, tzinfo=datetime.timezone.utc), 'commenter': 'mcalmer', 'type': 'User'}, {'comment_id': 1447030262, 'comment_body': 'I would suggest to create also a lookup_oval_platform function following the same ideas we already use for other tables.', 'comment_created': datetime.datetime(2024, 1, 10, 8, 22, 36, tzinfo=datetime.timezone.utc), 'commenter': 'mcalmer', 'type': 'User'}, {'comment_id': 1456054025, 'comment_body': ""Yes, the main reason is performance and mainly Hibernate behavior that doesn't optimize for performance. An OVAL sync operation could result in the running of 1 million insert queries in addition to the checks that need to be made before insertion to keep the database consistent and not trigger any errors *(Can't insert the same CVE twice in the rhnCve table)*.\r\n\r\nThe metrics I have were made before I took the new approach that doesn't require the insertion of OVAL definitions, tests, objects, and states in the database. According to this [comment](https://github.com/uyuni-project/uyuni-rfc/pull/80#discussion_r1257750349) I made a while ago the insertion of ≈100_000 objects (OVAL definitions, tests, objects, and states) took **≈10 minutes**. Now, running the `insert_product_vulnerable_packages` stored procedure ≈100_000 times takes **≈30 seconds** on my machine.\r\n\r\nThis is approximately the [state of the old code](https://github.com/HoussemNasri/uyuni/blob/oval-db/java/code/src/com/suse/oval/OVALCachingFactory.java) when the metrics were created.\r\n\r\n\r\n\r\n"", 'comment_created': datetime.datetime(2024, 1, 17, 16, 47, 5, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1456114376, 'comment_body': ""Nice catch, cpe should be NOT NULL (like the 'name' column in the rhnCve table) so I'll update the suseOVALPlatform table definition."", 'comment_created': datetime.datetime(2024, 1, 17, 17, 14, 12, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1456150056, 'comment_body': ""Using 'name' only in the index didn't introduce any noticeable performance degradations; it was actually slightly faster. But I'm curious why is fix_version being null and part of the index is a bad thing?"", 'comment_created': datetime.datetime(2024, 1, 17, 17, 30, 44, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1456158760, 'comment_body': ""Null's in an index that has unique are considered different values. In this case, since it's not a unique index it will not be a big problem. The only problem is if someone change this index to unique."", 'comment_created': datetime.datetime(2024, 1, 17, 17, 34, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1456163472, 'comment_body': 'ah, you are right. We already had this discussion :)\r\nGo on with it, but please look at MC comments about the look_up procedures', 'comment_created': datetime.datetime(2024, 1, 17, 17, 36, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1456297198, 'comment_body': ""I didn't know about it. But now that I look into it and know that it calls `insert_cve`, it will lead to CVE IDs growing exponentially, because of the calling of `nextval('rhn_cve_id_seq')` even when CVE already exists.\r\n\r\nThis is an [instance of the problem](https://github.com/uyuni-project/uyuni/pull/7466#discussion_r1366811006) that is now fixed in the suseOVALPlatform table.\r\n\r\n![image](https://github.com/uyuni-project/uyuni/assets/21198231/fab8442a-de76-41d0-9c04-4adb720faa90)\r\n"", 'comment_created': datetime.datetime(2024, 1, 17, 18, 44, 9, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1456336363, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2024, 1, 17, 19, 7, 21, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1456966227, 'comment_body': 'But insert is only called when a select failed because the entry does not exist', 'comment_created': datetime.datetime(2024, 1, 18, 6, 19, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mcalmer', 'type': 'User'}, {'comment_id': 1457673697, 'comment_body': 'and about the CVE lookup?', 'comment_created': datetime.datetime(2024, 1, 18, 16, 10, 39, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1457675134, 'comment_body': 'I think you forgot forgot to replace this code with the call to `lookup_oval_platform`', 'comment_created': datetime.datetime(2024, 1, 18, 16, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1457856099, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2024, 1, 18, 18, 49, 58, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1457856217, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2024, 1, 18, 18, 50, 6, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1457856950, 'comment_body': 'Ah okay, thank you for clarifying; I made the change.', 'comment_created': datetime.datetime(2024, 1, 18, 18, 50, 54, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1458040646, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2024, 1, 18, 22, 26, 27, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1458041313, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2024, 1, 18, 22, 27, 17, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1458041648, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2024, 1, 18, 22, 27, 42, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1458042469, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2024, 1, 18, 22, 28, 50, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1458043500, 'comment_body': 'Also, updated the ID sequence to start from 0.', 'comment_created': datetime.datetime(2024, 1, 18, 22, 30, 14, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1458044656, 'comment_body': 'Done. I removed it altogether.', 'comment_created': datetime.datetime(2024, 1, 18, 22, 32, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1458045457, 'comment_body': ""It's called LEAP now."", 'comment_created': datetime.datetime(2024, 1, 18, 22, 33, 8, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1458046657, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2024, 1, 18, 22, 34, 47, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1462613047, 'comment_body': 'https://github.com/saltstack/salt/pull/65905', 'comment_created': datetime.datetime(2024, 1, 23, 1, 10, 47, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1464851816, 'comment_body': ""Can we add the link to that PR as a comment at the top of the file? That way it'll be easier to track when we can drop it. Upstream Salt might take a while to review the patch."", 'comment_created': datetime.datetime(2024, 1, 24, 12, 35, 49, tzinfo=datetime.timezone.utc), 'commenter': 'agraul', 'type': 'User'}, {'comment_id': 1464885087, 'comment_body': ""This could raise an exception if, for whatever reason, `osrelease` is not in `grains`. `grains.get()` will then return`None`, which can't be added to a string. The easiest fix would be to use `os_release = grains.get('osrelease', '')`."", 'comment_created': datetime.datetime(2024, 1, 24, 13, 3, 57, tzinfo=datetime.timezone.utc), 'commenter': 'agraul', 'type': 'User'}]","[{'commit_sha': '4494c281abc492070937b2e79eee703eee965d85', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '930de98a47de7c91d8ca5e98d437a287403d1cb5', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a73a3019c05fcd02bee175d13eb215d64cc32d24', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ddb207a5eb4d2d75db3b215aa8f184a6d7f5de5', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad6b7b19ae58392703f6a2bc65b77fc383156b01', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d911054b44406e3b84cd9d23cebc29b84505db7', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b27c35f16fd934cea1e1bbada6c682e409847bf', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '317aeb01c27694f3c23369d3cbc6eb82685035ad', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47a76e722cd11309e9b92a53771ded94b0a817a4', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8da2c05990bb62943348804151a10ecac72eedd2', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b549d8b325527e704bc37580e83a2989ad3f1ec5', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '783209ba1b15817e3afee3f0521801259eaa302d', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ea184bc221004065bfc3fb526e692767fae3c82', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '214426fc037a8e1661affe291a4219aef0065997', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79afac31cc200be39b85f6df244ef2279233207c', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b914a73d6159f2fd4ba271bdc2208127c6d7f64f', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c048cba1ae4051680a22405688ec593458812b8a', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33b5f12eb760832c4ae95abe9ba33290e7f9e8af', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09b7b1f82133018ad4bcf1fb60667c01718b77f5', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87ad6065ae8756d955ee776398f46371ef9d0e3a', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a1311676a2344d884349a3dfb240794a79ec905', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '179cdd88926b20699f594a77b928d50540b08a22', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb787dd8df6633dc5916a8fc1f43eb8fcb8dba30', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49d9af64b9199925f811193d00b3c3b8e01a7fc5', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '439364d36bf73d68853ba5c241d7104a1fd49970', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41d0c9b6acbee498997d7e356cc0cb7a9d0a52e4', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d5d3a049b713a160062dcd46536eaca225b3998', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '049b1b4d90ecd5a6308c3909f1e4230916064482', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e39d8983b2d3a9ccc2ccb4fee07e25d3e651f2e3', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '342c81ee044a4f3e74e02f2fd4b388e47889ff7e', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7d8bd23fb574e518801c8ff399dd01a8e52b4fd', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1d9d4900c185756238fd0d2deb73cc88e1dec88', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5228099ca633b99945e6e3292f9f001b9462e91', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1aa48186d1a9fadd52f52336475aceabf0fdcfa2', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff127f5af9f76428fb421d5f0324fe5412e5a6cd', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00721660fcae3ce70f0629f6a11bff01502c3a7b', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f382a956a595d742cee45bfd3a1975af6145df8', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08d8f7e1037ca310abf5e18a96e2fc4e8e02f077', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7dbd6a25fc314dd6d9652ffb0eafb9356b2cae81', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '926efe25f01b8e194fd7577011db8a3c60748d4d', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a0019e099cb8e745ecf499dd6ad5c4a93f2a870', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea22edb088a542fa9d2db8fd142d0a6d84e72533', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a92aca8a9c8010e6123cb900a10014e25c5a1289', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a09a225bdb7c4416cee0b0dc7deac8f30163b4f', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcd9718cbe4415034f5986f4cefccf5985439112', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd476a00a8df1802c321f87b6fe8eb71b542c206', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3dbc0d4b6721de0db5563e39b11171721e4c94cd', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4da8e52e489d2e209e2a9564e5025ddc1a63754', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a286c2993e262616a80d3e611f8f6ad8d6b92ad', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90994f5085e639c39fa7d5153397b01a33a33c16', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0c5d88341a7ebc41d5cdf54b9894c84c22ec58b', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e17c92c93e199c5d3a77b0e2218ca2e3e13f9b5c', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b71d3b3082f6a8a14f516a6f7baeb44d99e3ccc', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '791e49c3bb4ebe40dee5e833cd00ba5c354d6daa', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c848b8f5b59efefc57cb76dd4abe109bdf3f24a', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '608782bad3fbb34cdf86f5f26f38a903dacbabf3', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e72b26f62d80e3b7196e37f81704412b48ea4493', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '877bb37af938939449e0144d30f462aeffa3a381', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8dedd46d76a8a609efea63f2209ae286ec7bf8aa', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fe23a476d91439687d46f83148814184f3cd341', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bf961fa28b53a176649a8bbb0cdb9359cc787b4', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9334cf5f92e378a0e33f49ac31afb0f3384e3c4d', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02bf13f57176e015dc2a365387f4507a630b079e', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f41dd3e9fc7c41a9d2c03dfb7ebaa00ca4b783d', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6134e0d0f9c1ab50d0949e7db750c70e86be767', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3fe02a401f1b138f05686468c914d849703ff40', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fda48e090728192e9ad8b149c2a72b08ddb7dc6', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21e7739d01d62c923880c95aed95cb5c5d8abfe5', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2929fda74b2df1d353e90a2ff76f54ed3d0e25a3', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '229bca612a8c8b8dcd5595b7f3c07a8f42326e75', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47505b664bc720d80ceeb5b3ddd4c5abe25a2410', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a8da26c59faa3190b932c49c13f3453c0109194', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '044bd8a2448d0ce273450510dfa07a90e192cd70', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f863ec4d99e85e35a6ba19fdb85afeb638076e3', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05e60ec92b125203f645d1205f8ade07983df147', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2935f71071e5eaf08ddddf973c3119bd8ec05ab0', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a04c91354ed57541f10b9612a47d3d96add8b8d8', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ab67c68ee1f9452335fa0573c4e700f6e17d0ed', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5182925b61e6a6976fc474b5bd9a85482fba06a0', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd2cbf5336f5de90c442b813c2d541ffd13a5051', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '664dfb43f605087ac1d8222310b03c8f8b7f7fc5', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '610b7195d5dd1f6ce70080242e3d6338aa57dbd5', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4329d93e29be8f9d56df7834325eeca71c5db1e', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c95939086f7844b39ccc37bebca1d1fa1af94ee', 'committer_username': 'cbosdo', 'committer_name': 'Cedric Bosdonnat', 'committer_email': None, 'commit_date': datetime.datetime(2010, 9, 13, 19, 27, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '082dd658e48c40e8fe8658008c0c224493c89fd9', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30ab50c1c7d1c76c860dc3649ba5847a44ee2efd', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03a83fbec41ca57ed5031b39c3258ac3c5f56302', 'committer_username': 'agraul', 'committer_name': 'Alexander Graul', 'committer_email': 'agraul@suse.com', 'commit_date': datetime.datetime(2016, 5, 13, 19, 53, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07c9da4cd51bf4539a67acb8174d9c363381e9dd', 'committer_username': 'agraul', 'committer_name': 'Alexander Graul', 'committer_email': 'agraul@suse.com', 'commit_date': datetime.datetime(2016, 5, 13, 19, 53, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32ac9242109e182f45d4edea6fb21b3bf69f9d3d', 'committer_username': 'parlt91', 'committer_name': 'Pascal Arlt', 'committer_email': 'parlt@suse.de', 'commit_date': datetime.datetime(2017, 9, 6, 13, 40, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab8a46b88747cfa9bc2e3722f9a78eb1290f929e', 'committer_username': 'parlt91', 'committer_name': 'Pascal Arlt', 'committer_email': 'parlt@suse.de', 'commit_date': datetime.datetime(2017, 9, 6, 13, 40, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45328abedf008440759e67a098a7f28a463d2e13', 'committer_username': 'parlt91', 'committer_name': 'Pascal Arlt', 'committer_email': 'parlt@suse.de', 'commit_date': datetime.datetime(2017, 9, 6, 13, 40, 28, tzinfo=datetime.timezone.utc)}]",Houssem Nasri,21198231,houssemnasri2001@gmail.com,User,,97,,255,63
1506912686,[GSOC23] - B - Enable the downloading and synchronization of OVAL data,"## What does this PR change?

This is the implementation of the OVAL downloader component as stated in the linked RFC. Also adds support for SLE & Leap Micro OVAL-based CVE auditing.
## TODO
- [x] Replace `log.error()` with `log.debug()`
- [x] Fix checkstyle errors

### Useful Links
- [The RFC](https://github.com/uyuni-project/uyuni-rfc/pull/80)
## GUI diff

No difference.

Before:

After:
![Screenshot from 2024-05-11 16-51-42](https://github.com/uyuni-project/uyuni/assets/21198231/2db70576-3572-42bc-82a2-82440e95fdba)

- [ ] **DONE**

## Documentation
- No documentation needed: **add explanation. This can't be used if there is a GUI diff**
- No documentation needed: only internal and user invisible changes
- Documentation issue was created: [Link for SUSE Manager contributors](https://github.com/SUSE/spacewalk/issues/new?template=ISSUE_TEMPLATE_DOCUMENTATION.md&labels=documentation&projects=SUSE/spacewalk/31), [Link for community contributors](https://github.com/uyuni-project/uyuni-docs/issues/new).
- API documentation added: please review the Wiki page [Writing Documentation for the API](https://github.com/uyuni-project/uyuni/wiki/Writing-documentation-for-the-API) if you have any changes to API documentation.
- (OPTIONAL) [Documentation PR](https://github.com/uyuni-project/uyuni-docs/pulls)

- [ ] **DONE**

## Test coverage
- No tests: **add explanation**
- No tests: already covered
- Unit tests were added
- Cucumber tests were added

- [ ] **DONE**

## Links

Fixes #
Tracks # **add downstream PR, if any**

- [ ] **DONE**

## Changelogs

Make sure the changelogs entries you are adding are compliant with https://github.com/uyuni-project/uyuni/wiki/Contributing#changelogs and https://github.com/uyuni-project/uyuni/wiki/Contributing#uyuni-projectuyuni-repository

If you don't need a changelog check, please mark this checkbox:

- [ ] No changelog needed

If you uncheck the checkbox after the PR is created, you will need to re-run `changelog_test` (see below)


## Re-run a test

If you need to re-run a test, please mark the related checkbox, it will be unchecked automatically once it has re-run:

- [ ] Re-run test ""changelog_test""
- [ ] Re-run test ""backend_unittests_pgsql""
- [ ] Re-run test ""java_pgsql_tests""
- [ ] Re-run test ""schema_migration_test_pgsql""
- [ ] Re-run test ""susemanager_unittests""
- [ ] Re-run test ""javascript_lint""
- [ ] Re-run test ""spacecmd_unittests""
",False,7509,https://api.github.com/repos/uyuni-project/uyuni/pulls/7509,https://github.com/uyuni-project/uyuni/pull/7509,open,1676,89,47,63,4,91,13,1,"[{'name': 'java'}, {'name': 'java_lint_checkstyle'}, {'name': 'java_pgsql_tests'}, {'name': 'API'}, {'name': 'schema_migration_test_pgsql'}, {'name': 'database'}, {'name': 'schema_migration_test_oracle'}, {'name': 'ui'}, {'name': 'javascript_lint'}, {'name': 'data-model'}, {'name': 'xmlrpc'}, {'name': 'old-ui'}, {'name': 'needs-translation'}]",2023-09-07 21:22:19+00:00,,0.0,,"[{'comment_id': 1509344358, 'comment_body': 'I think that instead of loading all servers into memory to transform into a list of `OVALProduct`, it would be better to load only the necessary information, that is, a distinct list of `os` and `release`, something like:\r\n\r\n`select distinct os, release from rhnServer;`\r\n\r\nIn addition to retrieving much less information into memory, using `distinct` is enough to prevent you from processing the same product multiple times, which I believe is happening in the current version of the code.', 'comment_created': datetime.datetime(2024, 3, 1, 17, 53, 47, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509491322, 'comment_body': 'If you have several servers with the same `os` and `release`, the resulting list will contain the same product multiple times. In that case a `Set` would be preferable, or use the `distinct` clause in a query as suggested in the other comment.', 'comment_created': datetime.datetime(2024, 3, 1, 20, 19, 18, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509495745, 'comment_body': 'If you don\'t retrieve all the servers into memory, as suggested in the other comment, these changes in the `Server` class aren\'t necessary anymore. I suggest that you create a method in `OsFamily` enum to retrieve the constant based on the os name (`os` column), something like:\r\n\r\n```\r\npublic static Optional<OsFamily> getByOsName(String osName) {\r\n\treturn Arrays.stream(values()).filter(\r\n\t        // Feel free to determine the suitable condition for matching osName and OsFamily.\r\n\t\tf -> f.fullname().equals(osName) || f.shortname.equals(osName)\r\n\t).findFirst();\r\n}\r\n```\r\n\r\nEven if for some reason you decide to keep loading the entire `Server` entities, this method would be quite simpler by delegating the responsibility for matching `os` from database to `OsFamily` enum. Something like:\r\n\r\n```\r\npublic Optional<CVEAuditManagerOVAL.OVALProduct> toOVALProduct() {\r\n    String osRelease = getRelease();\r\n    if (isRHEL()) {\r\n        osRelease = osRelease.replace(""\\\\..*"", """");\r\n    }\r\n    CVEAuditManagerOVAL.OVALProduct ovalProduct = null;\r\n    Optional<OsFamily> family = OsFamily.getByOsName(getOs());\r\n    if (family.isPresent() && family.get().isSupportedRelease(osRelease)) {\r\n        ovalProduct = new CVEAuditManagerOVAL.OVALProduct(family.get(), osRelease);\r\n    }\r\n    return Optional.ofNullable(ovalProduct);\r\n}\r\n```', 'comment_created': datetime.datetime(2024, 3, 1, 20, 24, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509498903, 'comment_body': 'I would log this as `log.info()`, it would not pollute the logs since it is going to run only once a day.', 'comment_created': datetime.datetime(2024, 3, 1, 20, 27, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509498996, 'comment_body': 'Same here.', 'comment_created': datetime.datetime(2024, 3, 1, 20, 27, 8, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509501231, 'comment_body': 'If `productsToSync` contains the same product multiple times, the same product will be downloaded and processed multiple times.', 'comment_created': datetime.datetime(2024, 3, 1, 20, 30, 14, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509508859, 'comment_body': 'Consider extract a method to reuse the code when processing the patch file (L365-371)', 'comment_created': datetime.datetime(2024, 3, 1, 20, 38, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509534544, 'comment_body': 'This `CVEAuditManagerOVAL.listImagesByPatchStatus()` method is currently only delegating to `CVEAuditManager.listImagesByPatchStatus()`. Is it being considered ""ready"" here? I mean, if it is the case that the images are not going to be audited using OVAL data, why should we call a `CVEAuditManagerOVAL` here only for delegating to `CVEAuditManager`?', 'comment_created': datetime.datetime(2024, 3, 1, 21, 4, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509535747, 'comment_body': '2024', 'comment_created': datetime.datetime(2024, 3, 1, 21, 5, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509591318, 'comment_body': '2024', 'comment_created': datetime.datetime(2024, 3, 1, 21, 49, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509591407, 'comment_body': '2024', 'comment_created': datetime.datetime(2024, 3, 1, 21, 49, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509611652, 'comment_body': 'Is 10 seconds enough?', 'comment_created': datetime.datetime(2024, 3, 1, 21, 57, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509617514, 'comment_body': 'No patch information available in any source?', 'comment_created': datetime.datetime(2024, 3, 1, 22, 5, 40, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509618449, 'comment_body': '2024', 'comment_created': datetime.datetime(2024, 3, 1, 22, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509618653, 'comment_body': '2024', 'comment_created': datetime.datetime(2024, 3, 1, 22, 7, 29, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509618914, 'comment_body': '2024', 'comment_created': datetime.datetime(2024, 3, 1, 22, 7, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509619741, 'comment_body': ""I'm not really sure if `scc` directory is the best place to put this `json` file since it is not coming from SCC. We just need to confirm that."", 'comment_created': datetime.datetime(2024, 3, 1, 22, 9, 5, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509627215, 'comment_body': ""To be honest, the first time I read this comment I was a little bit confused because I thought you was explaining the attribute, but actually you're explaining why having it is important. Maybe you can clarify a little bit."", 'comment_created': datetime.datetime(2024, 3, 1, 22, 13, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509627954, 'comment_body': 'Same here.', 'comment_created': datetime.datetime(2024, 3, 1, 22, 14, 29, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509628366, 'comment_body': 'And here.', 'comment_created': datetime.datetime(2024, 3, 1, 22, 14, 46, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509628554, 'comment_body': '2024', 'comment_created': datetime.datetime(2024, 3, 1, 22, 14, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509629007, 'comment_body': '2024', 'comment_created': datetime.datetime(2024, 3, 1, 22, 15, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509629296, 'comment_body': '2024', 'comment_created': datetime.datetime(2024, 3, 1, 22, 15, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1509629700, 'comment_body': '2024', 'comment_created': datetime.datetime(2024, 3, 1, 22, 16, 10, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1510919310, 'comment_body': ""We have two different themes with their own branding colors so we can't use hardcoded color values like this. The easiest solution here would be to use classes such as `bg-success`, `bg-warning`, or `bg-danger`, would those suffice to do what you want to do here?"", 'comment_created': datetime.datetime(2024, 3, 4, 10, 13, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Etheryte', 'type': 'User'}, {'comment_id': 1510923643, 'comment_body': ""This isn't really a global component in the same sense that e.g. buttons or inputs are, it would be preferable to make this an isolated module instead. See for example `web/html/src/manager/content-management/shared/components/panels/filters-project/filters-project.module.css` and how it's used in code. Note that you will need to use your style in the component code differently once you make this change."", 'comment_created': datetime.datetime(2024, 3, 4, 10, 17, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Etheryte', 'type': 'User'}, {'comment_id': 1516231497, 'comment_body': 'Can you point me to what are the expected values on to be passed and the ones existing on the table. The order of arguments in this function looks to be on inverted order.', 'comment_created': datetime.datetime(2024, 3, 7, 14, 19, 54, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1516255450, 'comment_body': ""can't we re-use the condition `ServerConstants.REDHAT.equals(getOsFamily())` instead of creating a new variable to defined RedHat?"", 'comment_created': datetime.datetime(2024, 3, 7, 14, 33, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1516256128, 'comment_body': ""Can't we re-use the existing variable for REDHAT?"", 'comment_created': datetime.datetime(2024, 3, 7, 14, 33, 54, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1516477755, 'comment_body': 'I agree with Welder in here, we should not load all the systems. We have deployments with more than 10k systems. This would load all of them when we should have a few of different OS flavors.', 'comment_created': datetime.datetime(2024, 3, 7, 16, 30, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1516508960, 'comment_body': 'Or transform these getters to a stream and share the code. The main goal is to reuse the code :)', 'comment_created': datetime.datetime(2024, 3, 7, 16, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1516528284, 'comment_body': 'This needs to come from a configuration property.', 'comment_created': datetime.datetime(2024, 3, 7, 17, 7, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1516533534, 'comment_body': 'This will copy the file to a location under `/var/log/rhn/ovals/`. This is not a log file. If this is a permanent file we need to store we should define a better location. IF the file is temporary and will be deleted after processing, uyuni already have a cache/temporary location defined which can be used (I think is `/var/cache/rhn/`.', 'comment_created': datetime.datetime(2024, 3, 7, 17, 11, 25, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1516545204, 'comment_body': ""I'm not sure if we need all these getCompression methods. It only checking the file extension and then uses it on this method only to perform and if else chain. Why not do we use it directly in a switch?"", 'comment_created': datetime.datetime(2024, 3, 7, 17, 20, 6, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1516548747, 'comment_body': 'this replace is strange. Why not just remove the extension? Normally the files have the format `...oval.xml.bz2`. If we remove the `.bz2` we get the file named. With the replace, we could be changing the file name since the string can appear on any place.', 'comment_created': datetime.datetime(2024, 3, 7, 17, 23, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1516548924, 'comment_body': 'same as above', 'comment_created': datetime.datetime(2024, 3, 7, 17, 23, 22, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1516555387, 'comment_body': 'This file I think is used just for testing. Looking at the one that will be shipped to customers the name of this OS is different. In here called `openSUSE_LEAP` and on the other file is `LEAP`. What should be the name?', 'comment_created': datetime.datetime(2024, 3, 7, 17, 28, 51, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1518637989, 'comment_body': 'This could have resulted in OVAL data being re-synchronized unnecessarily for the same product, nice catch!', 'comment_created': datetime.datetime(2024, 3, 9, 18, 10, 9, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1527285910, 'comment_body': ""At the moment, patch information is sourced from channels. Eventually, we'll start using OVAL patch info to gather additional metadata not available through channels, such as patch status (e.g., in QA or released). The patch info source was added to the JSON file, to prevent compatibility problems in the future.\r\n\r\nActually, the RedHat OVAL vulnerability and patch definitions are sourced from the same file, but that is a special case. Usually, the vulnerability definitions and patch definitions will be in separate files."", 'comment_created': datetime.datetime(2024, 3, 16, 21, 47, 46, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1527286299, 'comment_body': '`productsToSync` is now a set.', 'comment_created': datetime.datetime(2024, 3, 16, 21, 48, 50, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1527288231, 'comment_body': ""Nice catch! It was a typo. Right now, I'm thinking of using a symbolic link to the OVAL config file in `susemanager-sync-data` since they contain the same data. @rjmateus what do you think?\r\n\r\n"", 'comment_created': datetime.datetime(2024, 3, 16, 21, 54, 53, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1527597509, 'comment_body': ""Good point, I'm removing it and deleting the OVALCompressionMethod enum altogether."", 'comment_created': datetime.datetime(2024, 3, 17, 19, 27, 45, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1527597555, 'comment_body': ""The goal was to remove the extension but as you said this would remove the extension string if it occurred inside the filename. It's fixed now."", 'comment_created': datetime.datetime(2024, 3, 17, 19, 27, 54, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1527597617, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2024, 3, 17, 19, 28, 17, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1555081361, 'comment_body': ""> Is 10 seconds enough?\r\n\r\nIt should be. I never hit a timeout while set to 10 seconds and I don't have the fastest network (usually below 1 MB). I'll set it to 15 seconds by default and make it configurable as Ricardo suggested."", 'comment_created': datetime.datetime(2024, 4, 7, 20, 28, 8, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1555090885, 'comment_body': ""The param cpe is the CPE of the system to scan. It is extracted as a salt grain and stored in the rhnServer table. You can find examples of it [here](https://github.com/chef/os_release). The plat.cpe is the CPE that we extract from OVAL files. \r\n\r\nWe want to check if the CPE of the system corresponds to any CPEs we extracted from OVAL files. We could do that by searching for exact equality but that wouldn't match if the system has a CPE like `cpe:/o:redhat:enterprise_linux:8.0:GA` considering that this is the standard list of vulnerable RedHat 8 CPEs found in OVAL files:\r\n\r\n```xml\r\n   <affected_cpe_list>\r\n    <cpe>cpe:/a:redhat:enterprise_linux:8</cpe>\r\n    <cpe>cpe:/a:redhat:enterprise_linux:8::appstream</cpe>\r\n    <cpe>cpe:/a:redhat:enterprise_linux:8::crb</cpe>\r\n    <cpe>cpe:/a:redhat:enterprise_linux:8::highavailability</cpe>\r\n    <cpe>cpe:/a:redhat:enterprise_linux:8::nfv</cpe>\r\n    <cpe>cpe:/a:redhat:enterprise_linux:8::realtime</cpe>\r\n    <cpe>cpe:/a:redhat:enterprise_linux:8::resilientstorage</cpe>\r\n    <cpe>cpe:/a:redhat:enterprise_linux:8::sap</cpe>\r\n    <cpe>cpe:/a:redhat:enterprise_linux:8::sap_hana</cpe>\r\n    <cpe>cpe:/a:redhat:enterprise_linux:8::supplementary</cpe>\r\n    <cpe>cpe:/o:redhat:enterprise_linux:8</cpe>\r\n    <cpe>cpe:/o:redhat:enterprise_linux:8::baseos</cpe>\r\n   </affected_cpe_list>\r\n```\r\n\r\nSo we check for prefixes."", 'comment_created': datetime.datetime(2024, 4, 7, 21, 34, 11, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1555091615, 'comment_body': 'A cache location would be ideal. However, I would leave it to the users to decide whether to delete the file after processing or not (through configuration). It can also be useful for debugging. ', 'comment_created': datetime.datetime(2024, 4, 7, 21, 39, 33, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1561710914, 'comment_body': ""To move faster, I'm increasing the read and connection timeouts to 15 seconds for now and will create an issue to make it configurable. The issue is tracked [here](https://github.com/orgs/uyuni-project/projects/3/views/1?pane=issue&itemId=59489477) and will be converted to a real GitHub issue once this PR is merged."", 'comment_created': datetime.datetime(2024, 4, 11, 21, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1561714811, 'comment_body': 'Done. OVAL data is now cached under `/var/cache/rhn/ovals`.', 'comment_created': datetime.datetime(2024, 4, 11, 21, 3, 30, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1561846735, 'comment_body': 'Done. toOVALProduct now exists in OsReleasePair, the DTO I created for fetching only the OS and release versions of the server table.', 'comment_created': datetime.datetime(2024, 4, 11, 23, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1562340326, 'comment_body': 'Looks good to me', 'comment_created': datetime.datetime(2024, 4, 12, 10, 4, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1598196493, 'comment_body': 'All of these strings need a translation wrapper `t()`.', 'comment_created': datetime.datetime(2024, 5, 13, 9, 50, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Etheryte', 'type': 'User'}, {'comment_id': 1598200517, 'comment_body': ""This isn't a very good way to indicate an error, I think it would make more sense to show an error toast, log an error with more details about what went wrong, and then render the field empty."", 'comment_created': datetime.datetime(2024, 5, 13, 9, 53, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Etheryte', 'type': 'User'}, {'comment_id': 1598201717, 'comment_body': ""If reasonably possible, it might be good to aggregate showing the toast though, so if the underlying data is broken and the user has 25 rows showing, they don't get 25 error toasts. (Logging the error is imo fine, whichever way is more convenient for you.)"", 'comment_created': datetime.datetime(2024, 5, 13, 9, 53, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Etheryte', 'type': 'User'}, {'comment_id': 1600194979, 'comment_body': ""Both solutions sound good, but I'm leaning toward the logging solution. The error in question is unlikely to occur; if it does, it's likely due to an incompatibility between the frontend and backend server, so it's better to aim for the simpler solution."", 'comment_created': datetime.datetime(2024, 5, 14, 14, 55, 57, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1601096751, 'comment_body': '```suggestion\r\n      return ""OVAL data out of sync. Potential missed vulnerabilities"";\r\n```\r\n\r\nNitpick: ^^', 'comment_created': datetime.datetime(2024, 5, 15, 7, 22, 22, tzinfo=datetime.timezone.utc), 'commenter': 'admd', 'type': 'User'}, {'comment_id': 1601105136, 'comment_body': '```suggestion\r\n      return ""Server product channels out of sync; no patch information available"";\r\n```', 'comment_created': datetime.datetime(2024, 5, 15, 7, 29, 5, tzinfo=datetime.timezone.utc), 'commenter': 'admd', 'type': 'User'}, {'comment_id': 1601912689, 'comment_body': ""I think you are missing some sql files where this insert needs to be added. This SQL file will only run in the upgrade, but for new installations it's not called. Look at what you have add to rhnTaskoTask.sql file."", 'comment_created': datetime.datetime(2024, 5, 15, 16, 7, 25, tzinfo=datetime.timezone.utc), 'commenter': 'rjmateus', 'type': 'User'}, {'comment_id': 1602178352, 'comment_body': 'Sounds good to me. 👍', 'comment_created': datetime.datetime(2024, 5, 15, 19, 59, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Etheryte', 'type': 'User'}, {'comment_id': 1603196857, 'comment_body': 'Thanks, it should be fixed now.', 'comment_created': datetime.datetime(2024, 5, 16, 11, 48, 16, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1605252590, 'comment_body': ""@HoussemNasri in https://ftp.suse.com/pub/projects/security/oval/ I see leap.micro.5.4 and leap.micro.5.5, shouldn't these versions be included here and in the configuration file?"", 'comment_created': datetime.datetime(2024, 5, 17, 16, 11, 50, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1605254089, 'comment_body': 'Version 5.4 is present in the configuration file but not here, and version 5.5 is in the repository and not here or in the configuration file.', 'comment_created': datetime.datetime(2024, 5, 17, 16, 13, 8, tzinfo=datetime.timezone.utc), 'commenter': 'wweellddeerr', 'type': 'User'}, {'comment_id': 1605906733, 'comment_body': ""The reason is two folds: \r\n1. Currently it's not clear how images would be audited using OVAL data, primarily because it's not possible to extract the CPE (or the operating system) of the image without deploying it. @cbosdo suggested that we can derive the CPE from the channels assigned to the image, but I haven't had time to experiment with the feasibility of that option and what edge cases we might encounter, so the best decision I saw, was to keep using channels for auditing images temporarily.\r\n2. The reason for having `listImagesByPatchStatus` even though it is just delegating to `CVEAuditManager` is just a matter of taste; having a single entry point where all the CVE auditing logic would reside seemed reasonable from an architectural pov."", 'comment_created': datetime.datetime(2024, 5, 18, 22, 36, 57, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1605907430, 'comment_body': ""Good catch, I can't quite remember why I didn't include it, probably just a typo, thanks!"", 'comment_created': datetime.datetime(2024, 5, 18, 22, 44, 28, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1606111654, 'comment_body': ""It looks like symlinks could cause issues during packaging: https://github.com/uyuni-project/uyuni/pull/563. I'll add a script to update the OVAL config file, similar to the approach taken in that PR."", 'comment_created': datetime.datetime(2024, 5, 19, 22, 15, 25, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1606345484, 'comment_body': 'SL Micro 6.0 is will be released in coming weeks, would be good to already add entry for it.', 'comment_created': datetime.datetime(2024, 5, 20, 7, 7, 52, tzinfo=datetime.timezone.utc), 'commenter': 'admd', 'type': 'User'}, {'comment_id': 1606345950, 'comment_body': '6.0 will be releasing soo, we should add it here as well.', 'comment_created': datetime.datetime(2024, 5, 20, 7, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'admd', 'type': 'User'}, {'comment_id': 1606346692, 'comment_body': 'Same as other 2. 15.6 will be released soon and we can already entry for it.', 'comment_created': datetime.datetime(2024, 5, 20, 7, 9, 14, tzinfo=datetime.timezone.utc), 'commenter': 'admd', 'type': 'User'}, {'comment_id': 1606360902, 'comment_body': '@HoussemNasri can you please create an issue that Oval based scanning will be limited to systems only and not to images and this will be TODO that one might pickup in the future. Maybe also add the comment in this method about this , that @wweellddeerr has pointed out.', 'comment_created': datetime.datetime(2024, 5, 20, 7, 21, 37, tzinfo=datetime.timezone.utc), 'commenter': 'admd', 'type': 'User'}, {'comment_id': 1606365549, 'comment_body': 'Good point! Ideally, we should not put it here but I see why Houssem chose this place. All of our channel info resides here in this directory and it kinda made sense to keep things together.\r\n\r\n@HoussemNasri would it be easy to move this under new directory e.g `/usr/share/susemanager/oval`', 'comment_created': datetime.datetime(2024, 5, 20, 7, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'admd', 'type': 'User'}, {'comment_id': 1606765491, 'comment_body': 'I ended up with a completely different message that includes more details, please have a look, and see if it needs to be rephrased, thanks!', 'comment_created': datetime.datetime(2024, 5, 20, 13, 13, 41, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1606765717, 'comment_body': 'This one is also changed.', 'comment_created': datetime.datetime(2024, 5, 20, 13, 13, 52, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1607070763, 'comment_body': '```suggestion\r\n        ""OVAL data is out of sync, so the server was scanned using errata metadata from channels. This could mean that the server\'s OS isn\'t supported by OVAL-based CVE auditing, or that OVAL data needs to be synced.""\r\n```\r\nNitPick:This is a good  message to be added in the documentation  but for UI probably a bit too long. A bit concise message might be better. ', 'comment_created': datetime.datetime(2024, 5, 20, 17, 43, 25, tzinfo=datetime.timezone.utc), 'commenter': 'admd', 'type': 'User'}, {'comment_id': 1608165000, 'comment_body': 'Thanks, I reverted back to the shorter message.', 'comment_created': datetime.datetime(2024, 5, 21, 11, 32, 40, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1608165419, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2024, 5, 21, 11, 32, 58, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1608165589, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2024, 5, 21, 11, 33, 5, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1608173591, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2024, 5, 21, 11, 40, 3, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1608174639, 'comment_body': 'I created an item in the project board: https://github.com/orgs/uyuni-project/projects/3/views/1?pane=issue&itemId=63725688. Will transfer into a real issue once PR is merged.', 'comment_created': datetime.datetime(2024, 5, 21, 11, 40, 50, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1608187783, 'comment_body': 'Done. I have added an entry to the OVAL config file too, it points to an empty URL for now.', 'comment_created': datetime.datetime(2024, 5, 21, 11, 51, 38, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1608476599, 'comment_body': 'I think here and below, the errors we log are also fine as tooltips, so `return t(""CVE audit data sources were not supplied by server"")` and `return t(""Invalid scan data sources"")` work imo. But this is a minor nitpick.', 'comment_created': datetime.datetime(2024, 5, 21, 14, 52, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Etheryte', 'type': 'User'}, {'comment_id': 1632654145, 'comment_body': 'This should be in `/usr/share/susemanager/oval/oval.config.json` if I am not mistaken. ', 'comment_created': datetime.datetime(2024, 6, 10, 6, 37, 7, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1632655839, 'comment_body': ""If so you'll also have to add `%dir /usr/share/susemanager/oval`"", 'comment_created': datetime.datetime(2024, 6, 10, 6, 38, 57, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1632661846, 'comment_body': ""This file will eventually have to be moved to `susemanager-schema-5.0.7-to-susemanager-schema-5.0.8\r\n` for current release or later depending on when we'll merge."", 'comment_created': datetime.datetime(2024, 6, 10, 6, 45, 21, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1632751420, 'comment_body': ""There is a problem when running `getProductsToSync()` for SLES systems.\r\nThe query we use (`SELECT DISTINCT s.os, s.release FROM rhnServer s;`) returns\r\n```\r\n    os     | release \r\n-----------+---------\r\n SLES      | 15.5\r\n SLES      | 15.3\r\n SLES      | 12.5\r\n SLES      | 15.4\r\n```\r\nbut both here and in the `oval.config.json` we have only versions (11,12,15) for SLES systems.\r\nSo we'll need some extra handling here by either striping the SP version  or including the SP versions here and in the config file.\r\nI don't have a SLED available by I assume that it's going to be the same thing there."", 'comment_created': datetime.datetime(2024, 6, 10, 7, 47, 12, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1632940370, 'comment_body': 'I was trying to save OVAL data for SLES 12 (`OVALProduct(OsFamily.SUSE_LINUX_ENTERPRISE_SERVER, ""12""));`). The download of the OVAL data is successful, however saving vulnerable packages failes somewhere within this loop. The same thing happens with SLES 11, however it works with SLES 15. Could you check out what\'s going wrong here? There might be other products with similar problems.', 'comment_created': datetime.datetime(2024, 6, 10, 9, 32, 52, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1659970419, 'comment_body': ""The problem originates from the usage of `&gt;=`. The older OVAL data used to indicate the exact release versions of the product being vulnerable using `==`, I implemented a workaround by allowing the usage of `>=` and treating it as an `==`, this is inaccurate and needs to be treated later. I have only found a few usages of this pattern, so I think it's okay to delay handling it in order to move faster.\r\n\r\n![image](https://github.com/uyuni-project/uyuni/assets/21198231/30dce75c-0d56-480b-be01-732008c4f1d4)\r\n"", 'comment_created': datetime.datetime(2024, 6, 29, 20, 7, 29, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1659970644, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2024, 6, 29, 20, 9, 24, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1659970941, 'comment_body': 'I went with the stripping solution. It is the same approach used for matching OVAL metadata and RHEL servers.', 'comment_created': datetime.datetime(2024, 6, 29, 20, 11, 37, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1671894117, 'comment_body': ""`replace` won't do here. To use regex it needs to be `replaceAll`"", 'comment_created': datetime.datetime(2024, 7, 10, 8, 55, 11, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1671986633, 'comment_body': ""Do you know if there's potential side effects of this workaround? We are missing potential vulnerabilities with this IIUC?\r\nCould you create a follow-up card so we don't forget to handle this, if we don't do it in this PR?\r\nThank you"", 'comment_created': datetime.datetime(2024, 7, 10, 10, 1, 32, tzinfo=datetime.timezone.utc), 'commenter': 'parlt91', 'type': 'User'}, {'comment_id': 1673253267, 'comment_body': 'If the OVAL metadata indicates that versions of module SLE HPC 12 or above are vulnerable to a specific vulnerability, the current workaround only identifies SLE HPC 12 as vulnerable. Consequently, if users scan for SLE HPC 15, it will incorrectly reports it as not vulnerable.\r\n\r\nFrom my analysis of several OVAL files, this pattern is typically applied to modules rather than specific distributions. In these OVAL files, the affected module is listed alongside the distributions that have the module pre-installed. Therefore, the only scenario where a vulnerability might be missed is if the module was installed manually.\r\n\r\n![image](https://github.com/uyuni-project/uyuni/assets/21198231/1e063ef7-65fb-4629-830e-cf6d8f535c78)\r\n\r\nI have considered multiple solutions, but none are quick fixes that can be integrated into this PR. While the impact of the workaround is limited, a more thorough analysis is required to assess the impact accurately.\r\n\r\nIn the meantime, I have added a ""To Open"" issue card item to the project board.', 'comment_created': datetime.datetime(2024, 7, 11, 0, 52, 39, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}]","[{'commit_sha': '02cd9a7df45c6877e0132bb515c08a51db8afdab', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd25a13589c1c2493c52072cc36b3cb3a910c0d06', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8adb801c21a594416a83a6dad7b5a104e727daa7', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a790343fcede9e13a4ae154fe17200441e419872', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0b5d6925c42a88d2417e4bf16310f801612da6d', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2237e27feb1a2e4ae57ea44fc536f1169cfd7b58', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec1b8a7a58dfb7908d6336f255b7295b9fa2e8b5', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a6299a5533a2654e5b175f726a78b01ffe634a2', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10b55b61685835930cc1e39e1de1aee959b952eb', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23874a3a8856f1d97f7650c65bfa17348cd45e82', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ae8867982c4e8466481a0cfb6934c2ebccae3b4', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ad653f734df23d0d39a1abbf6307eb653046a34', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aeeafc6e06a7906e7e0ae48387adc99eaf95f5b4', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0de95cf4b2ca85b2804ceb0d4cd9f7670a03deba', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcdc79fc70bb017af6b2e1dd55d06f075c8056be', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '154b4259fd63d62b5668d2b7c8b910499634cf9c', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1975ff01d9f050be2b07bded7c27283404f9231e', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91e26be7ed6911f379722bf70787e2834b9d756f', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac69a156d538d176843c4df9ae40156232ee8c21', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2578426c4a0c962adc1087e3144e5641d5d00af1', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96877b7dc86b7d840da03debe84c075efbe824bd', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2668ccf46205599f2671aec3b2d7988743589ca', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e81cbb0f7a2d8dfe167ee2264013de6bc22e937e', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68006ab8e1b73bef8ab36c505a56abea7c20ab73', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e2ef50e2088b55704d8d5fc0fb2b2706f479f7f', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e72a8a51dd44543d17d55d746f698f628e009c3', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b997ebae8c552df212d2da70d52a97a891dcf91', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8f09496fd2d29860d346a8d738c8db135bc6cd9', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bfab8edc66979a7722e8607b3bc4dd617804da1', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'baa4d732ff8c69736fbd071c717921963b38273d', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c13b084511448d9836c46b80c4069eae7c15c944', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '121d0374c38c57c66f4be120fcd64997f9e0d2f9', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6de746e09770c1c9ddad293a2b064963ecb500c', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b05e66a90c166672b319ce65226a4d677e34189', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a90f803a8cad6650665cb7246ffae66b36f19cac', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdedd8e1497ca434c50f31120a43e5b6e4c472ee', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb1c977d2e53379d310ad1ea030613272091e7f7', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9309e5f8aa95cb6ac11c2751099ee93485103018', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59944032207d5e8f8d37e2b693dc9f9752eb3e21', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '810b81eb4ce8c13530bf692d91d868e0aa8d9620', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '198439e8d759c2206b28614be94a66cb97303a7e', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae5fdc9ce0eb34c3b8887a7035410e6ac6b51528', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad211aba8bc7aeee2820878a6062a8049321ba59', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68335ca922a510b7d4b69947f665611b51f64d76', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c663e527f5e2ff2c0400149bf8220b66203e8313', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74f6e46831e1faa649afdf58ecb4748bdcbd8c9f', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c747db8ba9cc8b6f005888a7574d7db194563595', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9878dc21966144dc23a5784729f905844930c1a4', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f51d7099a279b74d8237dc7dc8245b4114310ba', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07ac1adb0c9935763008e890b7b7f3c43a881354', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eff620d32a1aa7ec4c0a42099c5c150b732477ee', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb3fe45e4ffe0ffc58150e44dffeb5453ea1c20e', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9439d8481d599778a8ef841d36a5a1fd4cde023', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e71f475eac46730055c6ae14cca9cd5d26c7f4a1', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aaf44a8e8edbcfe5015552363c93f631aeb30030', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1deed4f40f6c9ec9ffdfd749692d81eed472878', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c3e16b66f5b63e132711ad748e78a719c1d67c8', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '615e82804838a2d3e7b2c397ca0bfeae47a5b1dc', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c0d28e746131f36193efa3878e04370eb1b8958', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c369e64c0582ce84654f15f52130affd6ae58294', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f107ff55f9fb26d4ff52e0dc138ea1391e7d2f3e', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '827d78caddb874c0388df54f6139dfbc9810a06d', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21cd9789df90071b4034c34e5cf91b914d69c0bc', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}]",Houssem Nasri,21198231,houssemnasri2001@gmail.com,User,,97,,255,63
1506923816,[GSOC23] - C - Implement a StAX parser for OVAL files,"**NOTE: Please start the review from commit 15624fb579660ac2b8198338a9738d25ee8d988d, the other commits are reviewed in https://github.com/uyuni-project/uyuni/pull/7509.**
## What does this PR change?

Introduce a StAX parser (instead of the current JAXB parser) for OVAL files to increase memory efficiency when parsing large OVAL files.

### Useful Links
- [The RFC](https://github.com/uyuni-project/uyuni-rfc/pull/80)
## GUI diff

No difference.

Before:

After:

- [ ] **DONE**

## Documentation
- No documentation needed: **add explanation. This can't be used if there is a GUI diff**
- No documentation needed: only internal and user invisible changes
- Documentation issue was created: [Link for SUSE Manager contributors](https://github.com/SUSE/spacewalk/issues/new?template=ISSUE_TEMPLATE_DOCUMENTATION.md&labels=documentation&projects=SUSE/spacewalk/31), [Link for community contributors](https://github.com/uyuni-project/uyuni-docs/issues/new).
- API documentation added: please review the Wiki page [Writing Documentation for the API](https://github.com/uyuni-project/uyuni/wiki/Writing-documentation-for-the-API) if you have any changes to API documentation.
- (OPTIONAL) [Documentation PR](https://github.com/uyuni-project/uyuni-docs/pulls)

- [ ] **DONE**

## Test coverage
- No tests: **add explanation**
- No tests: already covered
- Unit tests were added
- Cucumber tests were added

- [ ] **DONE**

## Links

Fixes #
Tracks # **add downstream PR, if any**

- [ ] **DONE**

## Changelogs

Make sure the changelogs entries you are adding are compliant with https://github.com/uyuni-project/uyuni/wiki/Contributing#changelogs and https://github.com/uyuni-project/uyuni/wiki/Contributing#uyuni-projectuyuni-repository

If you don't need a changelog check, please mark this checkbox:

- [ ] No changelog needed

If you uncheck the checkbox after the PR is created, you will need to re-run `changelog_test` (see below)


## Re-run a test

If you need to re-run a test, please mark the related checkbox, it will be unchecked automatically once it has re-run:

- [ ] Re-run test ""changelog_test""
- [ ] Re-run test ""backend_unittests_pgsql""
- [ ] Re-run test ""java_pgsql_tests""
- [ ] Re-run test ""schema_migration_test_pgsql""
- [ ] Re-run test ""susemanager_unittests""
- [ ] Re-run test ""javascript_lint""
- [ ] Re-run test ""spacecmd_unittests""
",False,7510,https://api.github.com/repos/uyuni-project/uyuni/pulls/7510,https://github.com/uyuni-project/uyuni/pull/7510,open,8552,424,113,64,12,5,12,0,"[{'name': 'java'}, {'name': 'java_lint_checkstyle'}, {'name': 'java_pgsql_tests'}, {'name': 'schema_migration_test_pgsql'}, {'name': 'database'}, {'name': 'schema_migration_test_oracle'}, {'name': 'ui'}, {'name': 'javascript_lint'}, {'name': 'data-model'}, {'name': 'xmlrpc'}, {'name': 'old-ui'}, {'name': 'needs-translation'}]",2023-09-07 21:36:50+00:00,,0.0,,"[{'comment_id': 1319172390, 'comment_body': '## XML parsers should not be vulnerable to XXE attacks\n\n<!--SONAR_ISSUE_KEY:AYpxxNrYGkSI09c_SQgI-->Disable access to external entities in XML parsing. <p>See more on <a href=""https://sonarcloud.io/project/issues?id=uyuni-project_uyuni&issues=AYpxxNrYGkSI09c_SQgI&open=AYpxxNrYGkSI09c_SQgI&pullRequest=7510"">SonarCloud</a></p>\n\n[Show more details](https://github.com/uyuni-project/uyuni/security/code-scanning/403)', 'comment_created': datetime.datetime(2023, 9, 7, 22, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'github-advanced-security[bot]', 'type': 'Bot'}, {'comment_id': 1328123483, 'comment_body': '## XML parsers should not be vulnerable to XXE attacks\n\n<!--SONAR_ISSUE_KEY:AYpxxNrYGkSI09c_SQgI-->Disable access to external entities in XML parsing. <p>See more on <a href=""https://sonarcloud.io/project/issues?id=uyuni-project_uyuni&issues=AYpxxNrYGkSI09c_SQgI&open=AYpxxNrYGkSI09c_SQgI&pullRequest=7510"">SonarCloud</a></p>\n\n[Show more details](https://github.com/uyuni-project/uyuni/security/code-scanning/404)', 'comment_created': datetime.datetime(2023, 9, 17, 17, 50, 43, tzinfo=datetime.timezone.utc), 'commenter': 'github-advanced-security[bot]', 'type': 'Bot'}, {'comment_id': 1328123485, 'comment_body': '## XML parsers should not be vulnerable to XXE attacks\n\n<!--SONAR_ISSUE_KEY:AYqkQ9wZDhDGr-l16ruL-->Disable access to external entities in XML parsing. <p>See more on <a href=""https://sonarcloud.io/project/issues?id=uyuni-project_uyuni&issues=AYqkQ9wZDhDGr-l16ruL&open=AYqkQ9wZDhDGr-l16ruL&pullRequest=7510"">SonarCloud</a></p>\n\n[Show more details](https://github.com/uyuni-project/uyuni/security/code-scanning/405)', 'comment_created': datetime.datetime(2023, 9, 17, 17, 50, 43, tzinfo=datetime.timezone.utc), 'commenter': 'github-advanced-security[bot]', 'type': 'Bot'}, {'comment_id': 1373795091, 'comment_body': '## XML parsers should not be vulnerable to XXE attacks\n\n<!--SONAR_ISSUE_KEY:AYttuyVgT4Fn06VNannR-->Disable access to external entities in XML parsing. <p>See more on <a href=""https://sonarcloud.io/project/issues?id=uyuni-project_uyuni&issues=AYttuyVgT4Fn06VNannR&open=AYttuyVgT4Fn06VNannR&pullRequest=7510"">SonarCloud</a></p>\n\n[Show more details](https://github.com/uyuni-project/uyuni/security/code-scanning/413)', 'comment_created': datetime.datetime(2023, 10, 26, 20, 44, 35, tzinfo=datetime.timezone.utc), 'commenter': 'github-advanced-security[bot]', 'type': 'Bot'}, {'comment_id': 1373795093, 'comment_body': '## XML parsers should not be vulnerable to XXE attacks\n\n<!--SONAR_ISSUE_KEY:AYttuyVgT4Fn06VNannS-->Disable access to external entities in XML parsing. <p>See more on <a href=""https://sonarcloud.io/project/issues?id=uyuni-project_uyuni&issues=AYttuyVgT4Fn06VNannS&open=AYttuyVgT4Fn06VNannS&pullRequest=7510"">SonarCloud</a></p>\n\n[Show more details](https://github.com/uyuni-project/uyuni/security/code-scanning/414)', 'comment_created': datetime.datetime(2023, 10, 26, 20, 44, 35, tzinfo=datetime.timezone.utc), 'commenter': 'github-advanced-security[bot]', 'type': 'Bot'}]","[{'commit_sha': '3706544cdb1f47a3501c5dfb5d41f7174b3a3ac2', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10f1ff47903e45c35d2c1bf1c737565120dec5a9', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f879c193e2c0381d2c7cc7657b6bf1e51d886e42', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdc3fd362839f6b598b75576ccdb88e7c7435358', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21143b625262fadfdc215c0cc5cdf61a3a2f4e3c', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbcf10b77a14d06f474b7fce7a8918f7d85c00c0', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ea98d4fb377b91b304dfd8fb9299ada523286b6', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c99e1fe83bfbc03daabf8a53af01883c4e0e4c6', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5b0dab1348b7cf8670ad66ceea469e605dda2b4', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c852808dd6fedf7b5b706a2a7ae7d664143fe1b6', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '413addd21776ce25345a9c44854b879c9267fe31', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7e29bb199d8e58fdafa4069c67afb33350a88d0', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e063813574f4b4f5f98dd65b82630ee1da48cf69', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bab67f229afb76a802107a8e542a56c07b83ee7', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a44684cc68b760c8907d3b2665d8d96798fdb48', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'beeb38f5e002d0585b70e90be501f55c5445ee8a', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee950cc9ad2040ab8bafaa9af95106dd24de1679', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cd8fd40f1206d2253e1f7c518ed8e450d3fef6f', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08d9959bebca9e8987b3360bcaa1cc4965356b0b', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8002093e3e292f9a7601c3dbd21636b11978d0c7', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '295e5e37474b1c59a12e89ed5f2db820ba3884c0', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0002433eb3f79812447828f5b6ece28235163aa0', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4534115b895bf1761f8c2f058e2d382189c28573', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b47a0f4e118195e658799f3165fc18071524f6f', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa8d35d2147bcf7aa95e94084138d5ad96a8227c', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b765810be6a5bed0ef94f32a296f1c09fd0670c', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '178330265035cee168df7da3c2dd64886e48e210', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb3eda84ff689e91e429398bf07a5e7d1f5280bd', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6097a3bc168799f291a4ac0a4f2841a25797108', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b91e998d86cf8c57f14545130cab8bb2284dacf0', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14aa942e450bbac60803ccd68ac3665cf1734171', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90b455628e2a015617bc5f3321cd69e06f664d22', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '474c27edf108d6d8c529b72d3e4e4be839e88dc8', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '029b707353bfbaf7b9683a4a94c4d55b5b80c89a', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c8f74b498890bc254e45aa6caba0f950b03165f', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '444be72c9583a356d40c526324f2c92bbbfd25fa', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2807b08498b0edffd647850cf8afb43300a6635', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d7505aebd677c0b8fb3a32239ef209dac7f5476', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '652bab22de8a2c2db64afaa438827dbab855533d', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbe33c27f5ed8a774e7e4e4c4e567c1489c54688', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb50b6b36048022fcec2e1c189705dd3ad462176', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23c10e62f58dfbcc4f0b5954ff192ed6868e679d', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '590bf96034d0a65f1fea628013b93efc0b84650c', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6346ce1fdc4a62b883f83f59228958a36e7008ca', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35f53d06728e4f36f5c7adcda749d7d19a53fb3e', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a8fa2d2efd28fa562a2e2bf959443dbeb211fd1', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28f908ee71b432b314886feea84f90b43556e50e', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af68432d67d6bb92a06daed7757db119f241bbad', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b76745410b7f4b7242a0a665242378a30be9a4c', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8abe7b36952d038694958f7deadc06f465da2dba', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '178e3e96cac079999155197284a4bdb0b5eb663c', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '359085ea31ea8c57e0690af0c2a8fdf18596862a', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf2cb3a6818ae288fbfa5d45fa2f4c865c97b9be', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47c19cfd34c03b177fbfebb3c823133d07b20914', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b599adfc68375cfff9fb7dfdd4b4ef0fee0adbe', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5aa75635b92300ad52baae604d645beded07c193', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15624fb579660ac2b8198338a9738d25ee8d988d', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '554d9e619efbcf8a8480fea06a9f021b998644d1', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c6eb7a4949015d7f905872161a4de7888f04333', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02ce8dc9311add5b7e3d81072d247640ce3f5b44', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '922f8c181e0676ac572bd17058e2d93c57b8d9df', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbaaed3f6e581d1600b88d4f3b197778c7e78d78', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a5f2c71d7bba00158a765dda92b0e28d3bdd240', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddb3055868756175e825e8c3d54ec8e0b9b176ff', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}]",Houssem Nasri,21198231,houssemnasri2001@gmail.com,User,,97,,255,63
1524421129,[GSOC23] - D - Define RPC endpoints for listing the affected packages regarding a CVE,"## What does this PR change?

Scanning for a CVE from the web UI will give you whether your system is vulnerable or not along with patches to apply. But you don't know what packages need to be patched. This information is not important if Uyuni could apply the patch automatically, but if the patch is unavailable, you'll need to know what packages to patch manually. The goal of this pull request is to provide users with the list of packages to be patched regarding a particular CVE. All from Spacecmd.

## GUI diff

No difference.

- [X] **DONE**

## Documentation
- No documentation needed: **add explanation. This can't be used if there is a GUI diff**
- No documentation needed: only internal and user invisible changes
- Documentation issue was created: [Link for SUSE Manager contributors](https://github.com/SUSE/spacewalk/issues/new?template=ISSUE_TEMPLATE_DOCUMENTATION.md&labels=documentation&projects=SUSE/spacewalk/31), [Link for community contributors](https://github.com/uyuni-project/uyuni-docs/issues/new).
- API documentation added: please review the Wiki page [Writing Documentation for the API](https://github.com/uyuni-project/uyuni/wiki/Writing-documentation-for-the-API) if you have any changes to API documentation.
- (OPTIONAL) [Documentation PR](https://github.com/uyuni-project/uyuni-docs/pulls)

- [ ] **DONE**

## Test coverage
- No tests: **add explanation**
- No tests: already covered
- Unit tests were added
- Cucumber tests were added

- [ ] **DONE**

## Links

- [x] **DONE**

## Changelogs

Make sure the changelogs entries you are adding are compliant with https://github.com/uyuni-project/uyuni/wiki/Contributing#changelogs and https://github.com/uyuni-project/uyuni/wiki/Contributing#uyuni-projectuyuni-repository

If you don't need a changelog check, please mark this checkbox:

- [ ] No changelog needed

If you uncheck the checkbox after the PR is created, you will need to re-run `changelog_test` (see below)


## Re-run a test

If you need to re-run a test, please mark the related checkbox, it will be unchecked automatically once it has re-run:

- [ ] Re-run test ""changelog_test""
- [ ] Re-run test ""backend_unittests_pgsql""
- [ ] Re-run test ""java_pgsql_tests""
- [ ] Re-run test ""schema_migration_test_pgsql""
- [ ] Re-run test ""susemanager_unittests""
- [ ] Re-run test ""javascript_lint""
- [ ] Re-run test ""spacecmd_unittests""
",False,7570,https://api.github.com/repos/uyuni-project/uyuni/pulls/7570,https://github.com/uyuni-project/uyuni/pull/7570,open,7124,413,93,53,12,0,13,0,"[{'name': 'java'}, {'name': 'java_lint_checkstyle'}, {'name': 'java_pgsql_tests'}, {'name': 'API'}, {'name': 'schema_migration_test_pgsql'}, {'name': 'database'}, {'name': 'schema_migration_test_oracle'}, {'name': 'ui'}, {'name': 'javascript_lint'}, {'name': 'data-model'}, {'name': 'xmlrpc'}, {'name': 'old-ui'}, {'name': 'needs-translation'}]",2023-09-21 09:02:19+00:00,,0.0,,[],"[{'commit_sha': '3706544cdb1f47a3501c5dfb5d41f7174b3a3ac2', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10f1ff47903e45c35d2c1bf1c737565120dec5a9', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f879c193e2c0381d2c7cc7657b6bf1e51d886e42', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdc3fd362839f6b598b75576ccdb88e7c7435358', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21143b625262fadfdc215c0cc5cdf61a3a2f4e3c', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3517c70fd3e09133372c8813c6ca7e1c5f7af89c', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3f67fdaa880d226622202eec8dd6140bbb5644b', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23a09853efead1f7dd934bafecee1a0352016c0b', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b1d0e513698ba5f15e0ff324e6dcc3e83443042', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab5cec074539a4c2cf785965b03c3515c085c2f8', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca856f61b46ba20f358504b75ff861b3507360b5', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34600426287c3a2f10927cc4ee9b78a4880000c4', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cec42da5da0e23bb35503cdab8c69614bdb63011', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a773f4df37877dd850a6a894c37aeb7b70a7c866', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38b6ff5031b779f88485d4fd0c531bbb34e71053', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a74eb4f4150dfb203f3b00f7b309fada253e3632', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b564bba6f8a17f0dec2b5be799c876b37c6dee34', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c2de764a3dc047ff635547dd418d3dfa9e9de4b', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b9637ddc743cccb3938762ee244adf0b4a00803', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c61beaa9e2be3d252826a78ce1d1e08bd97f6d94', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4e9e34ca51b7c3bb963ed28d4aa7340f57eaeef', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd661e52d09cf1913a8e3153cd8ae7f3afdfba49d', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a28268034c46cd006b9c930f8dffa06e19a3ae7', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4b508b95e0363a663f3c48fd6d6edc6ffa56818', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64d2af4ae635b8c322fd589ebae0deb243df98e9', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '011b7d6f40e8d040e68e8c623c2d5fee638318c6', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '458c85dd6800ef94c4dd1d02f56bbca742071b82', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9eceed5fa32e605da2d202aa9c1637d846d4342d', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a384da0b59800ca103500a5efe8e01c2f3add53', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2ea10cd63445cf8d3032eb5a4a19d6956b5c87c', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '467383838cedc4fdcae42d9d607be76fb4fa7f19', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bfcfee0f59625e43cef27bd4d8058125c9e1a7e', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aca288455008a0d7be21b3297b620c1d02b9e6cd', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c209eb810cbaf675da552d102299ac59c623da61', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3998d8000b09e305bb823ab5aec71485c916d76', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dff12f5acca07753e06aac0ea0a88d9c0ab64806', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5677c69489c6ade6ab412b81e3215f49e92fc8d9', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7d28bd7fb8e3e142c85c7ea3581a05070d0f2e7', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26d042051d29bad962871fbe446832286fb83ef3', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6412461c934b5c64a0b9a342ecbc0909b8a0698a', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '973a5356ce2e088d87ac68866b6793822e521d2a', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff1f32d89ca40629548a36f27cfc16e5b3d5959a', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4dd840ebba4bad91a305803218b446f84f074686', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '463466ab70020c45ef453240a7d17e3790f72182', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bf1c1a7808d685cd0d4b332cc9619c3e9e2c6df', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a9b455fdd1e20981ca60836d7970972bfe7165e', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bc3e81b2cdc2fa9d9c72ab9620a62ef1566d35b', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e7b017df16844eafa10d23899e8f1cce8c7c0cf', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e0d12cbbf6fbb1c03dc2191f689f7d66dc60b60', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c9603a14f3b770e297d8c8008415a6e80fe717d', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97abdbd3ddd2cc24606bd5bd6b1080fb46f87006', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37ee1a697728a3bc05f49423ff16268e7dd8d178', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f5a7f459e7ff0e9577698c3f5a76e910d656790', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}]",Houssem Nasri,21198231,houssemnasri2001@gmail.com,User,,97,,255,63
1527811260,[WIP][GSOC23] - E - Update CVE Audit documentation,"# Description

Hi! I'm a GSoC contributor for Uyuni working on the [OVAL-based CVE auditing project](https://github.com/openSUSE/mentoring/issues/197).

My project involves many changes to the CVE auditing feature in Uyuni which necessitates changes to documentation too. Changes that need to be documented involve:
1. **Enhancements to Patch Statuses:** Additional patch statuses were added to provide more context to users about their systems.
2. **OVAL Data Synchronization:** The quality of CVE audits now depends strongly on the available OVAL data, so having OVAL data in sync is recommended *(not doing so will yield inaccurate results)* before doing any CVE audits.
- etc...

# Target branches

Which documentation version does this PR apply to?
- [x] master (Default)
- [ ] manager-4.3

# Links
- Related development PR 
   - https://github.com/uyuni-project/uyuni/pull/7466
   - https://github.com/uyuni-project/uyuni/pull/7509
   - https://github.com/uyuni-project/uyuni/pull/7510
   - https://github.com/uyuni-project/uyuni/pull/7570
",False,2471,https://api.github.com/repos/uyuni-project/uyuni-docs/pulls/2471,https://github.com/uyuni-project/uyuni-docs/pull/2471,open,73,13,2,10,1,6,1,0,[{'name': 'zFeature not ready'}],2023-09-24 20:27:23+00:00,,0.0,,"[{'comment_id': 1433629733, 'comment_body': ""I'd prefer a definition list such as:\r\n\r\n```suggestion\r\nChannels::\r\nChannels include the updated software packages, which include patches, and provide insights into the essential patches required to address vulnerabilities.\r\n\r\nOVAL::\r\nIn contrast, OVAL data supplies information about the vulnerabilities themselves and the packages that render a system vulnerable to a CVE.\r\n```"", 'comment_created': datetime.datetime(2023, 12, 21, 7, 4, 56, tzinfo=datetime.timezone.utc), 'commenter': 'keichwa', 'type': 'User'}, {'comment_id': 1433633473, 'comment_body': 'To better support the segmentation process for creating templates for localization (l10n), we prefer a 1-line per sentence style:\r\n\r\n```suggestion\r\nWhile it is possible to conduct CVE audits using only channels data, synchronizing OVAL data enhances the accuracy of the results, particularly in cases involving zero-day vulnerabilities or partially patched vulnerabilities.\r\n```', 'comment_created': datetime.datetime(2023, 12, 21, 7, 8, 44, tzinfo=datetime.timezone.utc), 'commenter': 'keichwa', 'type': 'User'}, {'comment_id': 1433635026, 'comment_body': '```suggestion\r\nOVAL data is also much more lightweight than channels data.\r\nFor example, OVAL data for {opensuse} Leap 15.4 is around 50{nbsp}MB.\r\n```', 'comment_created': datetime.datetime(2023, 12, 21, 7, 10, 6, tzinfo=datetime.timezone.utc), 'commenter': 'keichwa', 'type': 'User'}, {'comment_id': 1433635858, 'comment_body': '```suggestion\r\nBy default, OVAL data is updated at 23:00 every day.\r\nWe recommend that before you begin a CVE audit you refresh the data to ensure you have the latest vulnerabilities metadata.\r\n```', 'comment_created': datetime.datetime(2023, 12, 21, 7, 10, 44, tzinfo=datetime.timezone.utc), 'commenter': 'keichwa', 'type': 'User'}, {'comment_id': 1433637012, 'comment_body': '```suggestion\r\n\r\nAllow the task to complete before continuing with the CVE\xa0audit.\r\n```', 'comment_created': datetime.datetime(2023, 12, 21, 7, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'keichwa', 'type': 'User'}, {'comment_id': 1433641385, 'comment_body': ""I'm not sure about the sentence end.  Here is my proposal\r\n```suggestion\r\nThe CPE of newly registered clients will be automatically collected and saved to the database.\r\nHowever, for existing clients, it is necessary to execute the ``Update Packages List`` action at least once.\r\n```"", 'comment_created': datetime.datetime(2023, 12, 21, 7, 15, 14, tzinfo=datetime.timezone.utc), 'commenter': 'keichwa', 'type': 'User'}]","[{'commit_sha': '2bf2c7ffa827fdfa5322c17eddc9ae0b05182506', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b92b80645b9587daa5aed1749990d171981c369', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6621cf97bd6196f67b268dde5452bead554b8b98', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0881c96a5318e95a09dad60b30a71c17be18ab1', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d672bc177b1e531a7c95d41a3f9319f2897973f', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41cd82582a6e2a329320de5c18b27a108421a394', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80f2cd4deb4694a6d0cab57c51ceef60af7eb5a9', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a75f124a0b596053c2773fc0151ba7c6dd4f9c2', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4965bda9ae5024c7de622003c89070b35901125f', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8304af0c9d51c9a98136e209cbbe622bbc6af5b', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}]",Houssem Nasri,21198231,houssemnasri2001@gmail.com,User,,97,,255,63
1518091720,Fix NoClassDefFoundError when opening notifications,"## What does this PR change?

The problem is that `Class#forName` can throw a `LinkageError` or `ExceptionInInitializerError` which wouldn't be caught by the current catch statement. Eventually, since `configureMailer()` is called during class initialization, the exception will be caught by the classloader and translated into `NoClassDefFoundError`. However, I still don't know why exactly an Error was thrown in the first place nor I can reproduce the other behaviors reported like the WebUI not responding. 

To reproduce, replace the content of `configureMailer()` with `throw new LinkageError();`, and then try to visit the notifications page. In the logs, you'll get a similar exception to what was reported in the linked issue. One difference is that the exception starts from `prepareUserNotifications` not `dataUnread`.

## GUI diff

No difference.

- [x] **DONE**

## Documentation
- No documentation needed.

- [x] **DONE**

## Test coverage
- No tests.

- [x] **DONE**

## Links

Fixes https://github.com/uyuni-project/uyuni/issues/6918

- [x] **DONE**

## Changelogs

Make sure the changelogs entries you are adding are compliant with https://github.com/uyuni-project/uyuni/wiki/Contributing#changelogs and https://github.com/uyuni-project/uyuni/wiki/Contributing#uyuni-projectuyuni-repository

If you don't need a changelog check, please mark this checkbox:

- [ ] No changelog needed

If you uncheck the checkbox after the PR is created, you will need to re-run `changelog_test` (see below)


## Re-run a test

If you need to re-run a test, please mark the related checkbox, it will be unchecked automatically once it has re-run:

- [x] Re-run test ""changelog_test""
- [ ] Re-run test ""backend_unittests_pgsql""
- [ ] Re-run test ""java_pgsql_tests"" 
- [ ] Re-run test ""schema_migration_test_pgsql""
- [ ] Re-run test ""susemanager_unittests""
- [ ] Re-run test ""javascript_lint""
- [ ] Re-run test ""spacecmd_unittests""
",True,7556,https://api.github.com/repos/uyuni-project/uyuni/pulls/7556,https://github.com/uyuni-project/uyuni/pull/7556,closed,8,6,3,4,6,0,6,0,"[{'name': 'java'}, {'name': 'java_lint_checkstyle'}, {'name': 'java_pgsql_tests'}, {'name': 'API'}, {'name': 'data-model'}, {'name': 'old-ui'}]",2023-09-16 03:04:22+00:00,2023-09-30 11:42:18+00:00,1240676.0,"14 days, 8:37:56",[],"[{'commit_sha': '4493561e9a81888830cbe7848acf62e04b272cff', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7643a9282c4546374e0cacd71ad9c78e2f690017', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f15265bd7c72750c1463b5503d1860e2fe15c80d', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ab18e763c25a859c53a1115bf011f5753c452ad', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}]",Houssem Nasri,21198231,houssemnasri2001@gmail.com,User,,97,,255,63
1381282337,Stay consistent with the Create/Refresh buttons order,"## What does this PR change?
On the Images List page, the buttons are ordered: Import, Refresh, while on other pages like the Profiles one, the order is Refresh, Create. This PR modifies the Profiles and Stores pages button ordering to stay consistent with the Image List page.
## GUI diff


Before:
*The refresh button used to precede the create button on the profiles and stores pages*

After:
![Screenshot from 2023-06-06 18-51-30](https://github.com/uyuni-project/uyuni/assets/21198231/ebf33ae0-5b68-411f-b2c9-423355ceb7a4)
![Screenshot from 2023-06-06 18-51-33](https://github.com/uyuni-project/uyuni/assets/21198231/f9eff408-10f2-4ca9-99dc-03ba9d78bd66)
- [x] **DONE**

## Documentation
- No documentation needed: **add explanation. This can't be used if there is a GUI diff**
- No documentation needed: only internal and user invisible changes
- Documentation issue was created: [Link for SUSE Manager contributors](https://github.com/SUSE/spacewalk/issues/new?template=ISSUE_TEMPLATE_DOCUMENTATION.md&labels=documentation&projects=SUSE/spacewalk/31), [Link for community contributors](https://github.com/uyuni-project/uyuni-docs/issues/new).
- API documentation added: please review the Wiki page [Writing Documentation for the API](https://github.com/uyuni-project/uyuni/wiki/Writing-documentation-for-the-API) if you have any changes to API documentation.
- (OPTIONAL) [Documentation PR](https://github.com/uyuni-project/uyuni-docs/pulls)

- [ ] **DONE**

## Test coverage
- No tests: already covered

- [x] **DONE**

## Links

Fixes #360 

- [x] **DONE**

## Changelogs

Make sure the changelogs entries you are adding are compliant with https://github.com/uyuni-project/uyuni/wiki/Contributing#changelogs and https://github.com/uyuni-project/uyuni/wiki/Contributing#uyuni-projectuyuni-repository

If you don't need a changelog check, please mark this checkbox:

- [ ] No changelog needed

If you uncheck the checkbox after the PR is created, you will need to re-run `changelog_test` (see below)


## Re-run a test

If you need to re-run a test, please mark the related checkbox, it will be unchecked automatically once it has re-run:

- [x] Re-run test ""changelog_test""
- [ ] Re-run test ""backend_unittests_pgsql""
- [ ] Re-run test ""java_pgsql_tests""
- [ ] Re-run test ""schema_migration_test_pgsql""
- [ ] Re-run test ""susemanager_unittests""
- [ ] Re-run test ""javascript_lint""
- [ ] Re-run test ""spacecmd_unittests""
",True,7102,https://api.github.com/repos/uyuni-project/uyuni/pulls/7102,https://github.com/uyuni-project/uyuni/pull/7102,closed,4,2,3,5,1,2,3,0,"[{'name': 'ui'}, {'name': 'javascript_lint'}, {'name': 'needs-translation'}]",2023-06-06 18:03:04+00:00,2023-06-07 16:09:41+00:00,79597.0,22:06:37,"[{'comment_id': 1221107975, 'comment_body': 'It would be better to make this shorter. How about something like:\r\n```\r\nAlign the order of the Refresh and Create buttons for more consistency\r\n```', 'comment_created': datetime.datetime(2023, 6, 7, 8, 3, 43, tzinfo=datetime.timezone.utc), 'commenter': 'cbosdo', 'type': 'User'}, {'comment_id': 1221506474, 'comment_body': ""Yes, it sounds better, it's updated now"", 'comment_created': datetime.datetime(2023, 6, 7, 12, 27, 40, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}]","[{'commit_sha': '2aa2fee44bac01a4db9a08b941b57fbeb84b0dac', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d6c5a185f51c452ed58ff1e4cbe509ebd957bc8', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f26db6011749b1f27a0f354f2615c79436135311', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c6fac4d7a933cbfa97bc637ce47597a110ac1df', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ac1c3f10d4885fa6922e2bdafb742d409224ce8', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}]",Houssem Nasri,21198231,houssemnasri2001@gmail.com,User,,97,,255,63
1398820579,Fix CSV download exception,"## What does this PR change?
The CSV download would throw an exception when attempting to download patches, packages or system groups as CSV.

The bug can be explained in two parts. First, pageData was expected to be of type `List<SystemSearchResult>` however, this was never the case since the type of pageData is dependent on the type of data to be downloaded. If, for example, packages are being downloaded, then the type will be `List<PackageOverview`. Hence why I changed it to `List<BaseDto>` to be able to assign to it list of patches or system groups too. 

The second part concerns the use of `SystemSearchResult` in `CSVTag`, which remains unclear. Nevertheless, through an analysis of the program flow, it appeared that `makePartialResult()` would never be invoked and as such, it was removed. For the same reason, `mergeWithPartialResult()` was also removed. 

The systems CSV download was functioning correctly as it was relying on other classes for CSV export.

## GUI diff

No difference.

- [x] **DONE**

## Documentation
- No documentation needed: only internal and user invisible changes

- [x] **DONE**

## Test coverage
- No tests

- [x] **DONE**

## Links

Fixes #6631 

- [x] **DONE**

## Changelogs

Make sure the changelogs entries you are adding are compliant with https://github.com/uyuni-project/uyuni/wiki/Contributing#changelogs and https://github.com/uyuni-project/uyuni/wiki/Contributing#uyuni-projectuyuni-repository

If you don't need a changelog check, please mark this checkbox:

- [ ] No changelog needed

If you uncheck the checkbox after the PR is created, you will need to re-run `changelog_test` (see below)


## Re-run a test

If you need to re-run a test, please mark the related checkbox, it will be unchecked automatically once it has re-run:

- [x] Re-run test ""changelog_test""
- [ ] Re-run test ""backend_unittests_pgsql"" (Test skipped, there are no changes to test)
- [ ] Re-run test ""java_pgsql_tests""
- [ ] Re-run test ""schema_migration_test_pgsql""
- [ ] Re-run test ""susemanager_unittests""
- [ ] Re-run test ""javascript_lint""
- [ ] Re-run test ""spacecmd_unittests""
",True,7163,https://api.github.com/repos/uyuni-project/uyuni/pulls/7163,https://github.com/uyuni-project/uyuni/pull/7163,closed,35,74,3,4,5,5,5,0,"[{'name': 'java'}, {'name': 'java_lint_checkstyle'}, {'name': 'java_pgsql_tests'}, {'name': 'API'}, {'name': 'old-ui'}]",2023-06-19 20:43:14+00:00,2023-07-04 11:45:05+00:00,1263711.0,"14 days, 15:01:51","[{'comment_id': 1250451284, 'comment_body': 'This will be read by users. A more detailed message would be helpful. If there is a bug report you can link to it', 'comment_created': datetime.datetime(2023, 7, 3, 8, 10, 14, tzinfo=datetime.timezone.utc), 'commenter': 'cbosdo', 'type': 'User'}, {'comment_id': 1250932995, 'comment_body': ""Is the GitHub issue considered a bug report? I saw bsc#... being linked in other entries but I don't know what it stands for."", 'comment_created': datetime.datetime(2023, 7, 3, 13, 57, 56, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}, {'comment_id': 1251010948, 'comment_body': 'bsc stands for bugzilla.suse.com. We can probably use gh#1234 for github, but there is no convention yet. Maybe @deneb-alpha has an opinion on that', 'comment_created': datetime.datetime(2023, 7, 3, 15, 6, 25, tzinfo=datetime.timezone.utc), 'commenter': 'cbosdo', 'type': 'User'}, {'comment_id': 1251048650, 'comment_body': 'Nitpicking: this whole end block can be simplified by using `ListUtils.typedList()`, which checks the elements in the list and throws an `IllegalArgumentException` if any of them are of the wrong type. It will go through all the elements, so it might not be the best approach in case of large data sets, but it is more explicit on what you\'re trying to achieve:\r\n\r\n```java\r\n        List<BaseDto> pageData = (List<BaseDto>) session.getAttribute(paramPageData);\r\n        if (null == pageData) {\r\n            throw new IllegalArgumentException(""Missing value for session attribute, "" + paramPageData);\r\n        }\r\n        // Check the actual runtime type of the elements\r\n        return ListUtils.typedList(pageData, BaseDto.class);\r\n```\r\n\r\nAlso, if we are not sure about the type we should define `pageData` as `List<?>` until we check it, but I guess that after your change we don\'t expect the type to be different, right?', 'comment_created': datetime.datetime(2023, 7, 3, 15, 38, 47, tzinfo=datetime.timezone.utc), 'commenter': 'mackdk', 'type': 'User'}, {'comment_id': 1251360655, 'comment_body': 'Thanks for the tip! It looks cleaner now.\r\n\r\nThe decision to use BaseDto as the generic type of pageData was based on the observation that all objects we want to download as CSV are descendant of it. Using List<?> is a valid option, but I decided not to use it to have more type safety and get rid of all the IDE warnings.', 'comment_created': datetime.datetime(2023, 7, 4, 0, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'HoussemNasri', 'type': 'User'}]","[{'commit_sha': 'd8ebca394c2b1d357a1edabe7f10928f34e93d03', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ff03aa056cedb98481ffd2d69363f8867de3632', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a5099e756662bf74aabf3e4dd129f3203a9a489', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2ddead3a2a5da315dc229a641b37345d66dfbdf', 'committer_username': 'HoussemNasri', 'committer_name': 'Houssem Nasri', 'committer_email': 'houssemnasri2001@gmail.com', 'commit_date': datetime.datetime(2016, 8, 23, 13, 27, 22, tzinfo=datetime.timezone.utc)}]",Houssem Nasri,21198231,houssemnasri2001@gmail.com,User,,97,,255,63

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
143291989,uyuni,uyuni-project/uyuni,Java,177,427,38,477,87079,490,104,78,"[{'id': 1567887877, 'number': 7734, 'closed': datetime.datetime(2023, 10, 23, 11, 1, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 21, 20, 56, 18, tzinfo=datetime.timezone.utc), 'time_taken': 137136.0, 'time_delta': '1 day, 14:05:36', 'additions': 30, 'deletions': 1, 'state': 'closed'}, {'id': 1547330244, 'number': 7656, 'closed': datetime.datetime(2023, 10, 10, 12, 7, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 9, 7, 37, 52, tzinfo=datetime.timezone.utc), 'time_taken': 102573.0, 'time_delta': '1 day, 4:29:33', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1537240018, 'number': 7617, 'closed': datetime.datetime(2023, 10, 11, 13, 1, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 1, 23, 24, 48, tzinfo=datetime.timezone.utc), 'time_taken': 826581.0, 'time_delta': '9 days, 13:36:21', 'additions': 34, 'deletions': 25, 'state': 'closed'}, {'id': 1524421129, 'number': 7570, 'closed': None, 'created': datetime.datetime(2023, 9, 21, 9, 2, 19, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 7124, 'deletions': 413, 'state': 'open'}, {'id': 1518091720, 'number': 7556, 'closed': datetime.datetime(2023, 9, 30, 11, 42, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 16, 3, 4, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1240676.0, 'time_delta': '14 days, 8:37:56', 'additions': 8, 'deletions': 6, 'state': 'closed'}, {'id': 1506935178, 'number': 7511, 'closed': datetime.datetime(2023, 9, 9, 19, 53, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 7, 21, 52, 6, tzinfo=datetime.timezone.utc), 'time_taken': 165684.0, 'time_delta': '1 day, 22:01:24', 'additions': 7737, 'deletions': 460, 'state': 'closed'}, {'id': 1506923816, 'number': 7510, 'closed': None, 'created': datetime.datetime(2023, 9, 7, 21, 36, 50, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 8552, 'deletions': 424, 'state': 'open'}, {'id': 1506912686, 'number': 7509, 'closed': None, 'created': datetime.datetime(2023, 9, 7, 21, 22, 19, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1676, 'deletions': 89, 'state': 'open'}, {'id': 1490782180, 'number': 7466, 'closed': datetime.datetime(2024, 2, 20, 12, 55, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 26, 20, 24, 30, tzinfo=datetime.timezone.utc), 'time_taken': 15352246.0, 'time_delta': '177 days, 16:30:46', 'additions': 6747, 'deletions': 411, 'state': 'closed'}, {'id': 1458127291, 'number': 7335, 'closed': datetime.datetime(2023, 8, 14, 20, 16, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 13, 34, 15, tzinfo=datetime.timezone.utc), 'time_taken': 1147311.0, 'time_delta': '13 days, 6:41:51', 'additions': 6935, 'deletions': 425, 'state': 'closed'}, {'id': 1415822475, 'number': 7227, 'closed': datetime.datetime(2023, 8, 4, 17, 52, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 1, 7, 18, 24, tzinfo=datetime.timezone.utc), 'time_taken': 2975638.0, 'time_delta': '34 days, 10:33:58', 'additions': 3577, 'deletions': 0, 'state': 'closed'}, {'id': 1398820579, 'number': 7163, 'closed': datetime.datetime(2023, 7, 4, 11, 45, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 19, 20, 43, 14, tzinfo=datetime.timezone.utc), 'time_taken': 1263711.0, 'time_delta': '14 days, 15:01:51', 'additions': 35, 'deletions': 74, 'state': 'closed'}, {'id': 1381282337, 'number': 7102, 'closed': datetime.datetime(2023, 6, 7, 16, 9, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 6, 18, 3, 4, tzinfo=datetime.timezone.utc), 'time_taken': 79597.0, 'time_delta': '22:06:37', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 1302320244, 'number': 6819, 'closed': datetime.datetime(2023, 9, 22, 1, 40, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 4, 21, 41, 9, tzinfo=datetime.timezone.utc), 'time_taken': 14702389.0, 'time_delta': '170 days, 3:59:49', 'additions': 153, 'deletions': 150, 'state': 'closed'}, {'id': 1281335031, 'number': 6751, 'closed': datetime.datetime(2023, 4, 4, 21, 36, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 18, 21, 30, 1, tzinfo=datetime.timezone.utc), 'time_taken': 1469172.0, 'time_delta': '17 days, 0:06:12', 'additions': 4421, 'deletions': 1742841, 'state': 'closed'}]"
147513059,uyuni-docs,uyuni-project/uyuni-docs,SCSS,98,22,13,107,7385,66,95,16,"[{'id': 1527811260, 'number': 2471, 'closed': None, 'created': datetime.datetime(2023, 9, 24, 20, 27, 23, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 73, 'deletions': 13, 'state': 'open'}]"
