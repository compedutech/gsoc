pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
669099316,"Restructure, remove TUF remnants, add tests folder to make tests pass","**The following PR is part of the Google Summer of Code 2021 program**

**Description of pull request:**
The goal of this PR is to:
- Remove traces from the `rust-tuf` repository.
- Add a tests folder that would allow both unit tests & doc tests to pass.
- Restructure in-toto similar to the Python & Golang implementations.

**About Restructuring**
The first two points, removing `rust-tuf` and adding tests folder, make sense. Since restructuring may mean bigger changes, I would like to justify the reason behind my new structure. **_These are based on what I know about in-toto, so if you have any advice or corrections, it would be highly appreciated!_**

![image](https://user-images.githubusercontent.com/34288846/121795253-fbe3be80-cbc3-11eb-9c68-f36d56898d55.png)

I removed the client file (mostly TUF in there). Additionally, I also saw the Python & Golang implementation use a models file/folder instead of a metadata file and thought that it would be a good way to organize the layout & links. To do that, I took the `Link` struct outside of the interchange folder and into models. Within models, I also created a helper function with functions dealing with paths (e.g. `VirtualTargetPath` struct and `safepath` function).

What I've noticed with this change is that the imports may become longer (e.g. `use in_toto::models::link::metadata::{LinkMetadataBuilder};`, which is more jargony sounding than `use in_toto::metadata::{LinkMetadataBuilder, VirtualTargetPath};`. To address that, I shortened the path to `in_toto::models::{Link, ..}`. If there are better import suggestions, please let me know!

![image](https://user-images.githubusercontent.com/34288846/121795332-904e2100-cbc4-11eb-8881-bb1e7c53430b.png)

**Fast follow**
After this PR is merged, I plan on adding some CI through Github actions. I will also make a Github issue detailing my google summer of code project (Develop `in-toto-rs` capabilities to support rebuilderd), which will largely be working with `Link`s & `LinkMetadataBuilder`.",True,5,https://api.github.com/repos/in-toto/in-toto-rs/pulls/5,https://github.com/in-toto/in-toto-rs/pull/5,closed,968,2977,34,7,2,12,0,0,[],2021-06-13 18:56:46+00:00,2021-06-29 18:05:24+00:00,1379318.0,"15 days, 23:08:38","[{'comment_id': 651211448, 'comment_body': ""Let's call this file verifylib.rs? That'll keep it consistent with the runlib naming, as well as the other implementations."", 'comment_created': datetime.datetime(2021, 6, 14, 19, 18, 22, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 651222131, 'comment_body': 'Possibly a silly question, but do we need both `LinkMetadata` here and `Link` in `src/models/link/mod.rs`? Can we roll them into one?', 'comment_created': datetime.datetime(2021, 6, 14, 19, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 652342988, 'comment_body': 'I think that makes sense! Thank you for the suggestion :D ', 'comment_created': datetime.datetime(2021, 6, 16, 4, 35, 50, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 652344633, 'comment_body': ""Hmm, I'm not too sure. `LinkMetadata` and `Link` were originally from 2 different locations, actually. \r\n- `Link` was originally one of the TUF `Role` enum (with the other option being `Layout` but commented out because it's unimplemented). \r\n- `LinkMetadata` was located in the `interchange` cjson folder. It is in a file called `shims.rs` inside the cjson folder and includes more detailed functionalities such as writing links (that we're using in our examples folder)\r\n\r\nIf we role them into one, would we change the `LinkMetadataBuilder` (what we've been calling for link generation into `LinkBuilder`? "", 'comment_created': datetime.datetime(2021, 6, 16, 4, 41, 1, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 653848311, 'comment_body': 'btw, I think this is missing the actual type field itself. The original code had `typ`.', 'comment_created': datetime.datetime(2021, 6, 17, 18, 48, 1, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 654684827, 'comment_body': 'I actually removed the field typ because it was related to TUF role, and doesn\'t say anything aside from ""Link"" (or ""layout"" I\'m guessing once we implement layout).\r\n\r\nShould it not have been deleted?', 'comment_created': datetime.datetime(2021, 6, 18, 21, 31, 28, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 654698411, 'comment_body': 'Sure, I think it\'s okay to use ""link"" directly since we have fewer instances. But we still need to account for that field? plus, the serde statement now applies to `name` if I\'m not mistaken?', 'comment_created': datetime.datetime(2021, 6, 18, 22, 22, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 658293507, 'comment_body': 'Perhaps not too big of a concern, but I believe those two errors will re-appear on a later date...', 'comment_created': datetime.datetime(2021, 6, 24, 21, 27, 39, tzinfo=datetime.timezone.utc), 'commenter': 'SantiagoTorres', 'type': 'User'}, {'comment_id': 658294390, 'comment_body': 'I wonder if these identifiers can be removed and instead we use a path abstraction from a perhaps more mature stdlib (it.s been a couple of years).', 'comment_created': datetime.datetime(2021, 6, 24, 21, 29, 19, tzinfo=datetime.timezone.utc), 'commenter': 'SantiagoTorres', 'type': 'User'}, {'comment_id': 658294880, 'comment_body': 'e.g., I wonder if instead of dealing with string slices here we can manage things using std::path. This may be something we can address as a standalone issue.', 'comment_created': datetime.datetime(2021, 6, 24, 21, 30, 19, tzinfo=datetime.timezone.utc), 'commenter': 'SantiagoTorres', 'type': 'User'}, {'comment_id': 661170805, 'comment_body': ""Gotcha, so leaving the path handling to std::path since it's more complete"", 'comment_created': datetime.datetime(2021, 6, 30, 6, 37, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 661171078, 'comment_body': 'Thank you! I will definitely keep this issue in mind when working on this project and make sure MissingMetadata is included in Error handling.', 'comment_created': datetime.datetime(2021, 6, 30, 6, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}]","[{'commit_sha': '460005784e5b1dd76e2304d448b1c617ceff8f03', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f697571ebd0b8a4d122fa86b132be8acc06700d6', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '283df875abc2ca7e5bc276735bbe41f30a68cd9e', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d6d2b5cbbe3bb0542d1f2e2849827ce79a2da02', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21bd18eb33dac4643ceffe880fe8651f111dd250', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36f36127344e21de1cf0fec750ea6a8b58f956c7', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e254c4393f1daa8da392865f428ba51643a385c7', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}]",Joy Liu,34288846,,User,,32,,35,36
671024704,Add Simple CI Workflow,"This PR adds the following Github Actions to in-toto push & pr workflows:
- `cargo check`
- `cargo test`
- `cargo fmt` (stylecheck using [rustfmt](https://github.com/rust-lang/rustfmt))
- `cargo clippy` (lint using [rust clippy](https://github.com/rust-lang/rust-clippy))",True,6,https://api.github.com/repos/in-toto/in-toto-rs/pulls/6,https://github.com/in-toto/in-toto-rs/pull/6,closed,50,0,1,1,1,4,0,0,[],2021-06-16 05:26:49+00:00,2021-06-22 19:03:23+00:00,567394.0,"6 days, 13:36:34","[{'comment_id': 652360232, 'comment_body': 'Do we want this to run for all, or just to master? (Currently set up as all)', 'comment_created': datetime.datetime(2021, 6, 16, 5, 27, 5, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 654701847, 'comment_body': ""We want CI workflows for PRs, if that's what you're asking."", 'comment_created': datetime.datetime(2021, 6, 18, 22, 37, 14, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 654873287, 'comment_body': 'Sounds good. I was asking if we want to just run this for PRs from a branch to the master branch, or PRs to any branch overall. I think all would do fine.', 'comment_created': datetime.datetime(2021, 6, 20, 4, 11, 9, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 656503137, 'comment_body': 'All sounds great!', 'comment_created': datetime.datetime(2021, 6, 22, 19, 3, 8, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}]","[{'commit_sha': '015a49392a90af5e37294b1a293bc7fdfe145723', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}]",Joy Liu,34288846,,User,,32,,35,36
680578352,Implement in_toto_run,"**The following PR is part of the Google Summer of Code 2021 program.**

The in-toto GSoC project is to **develop in-toto-rs capabilities to support rebuilderd** (Issue https://github.com/in-toto/in-toto-rs/issues/4), which includes two parts:
1. Add `runlib.rs`; implement link generation using `in_toto_run`.
2. Use `in_toto_run` and link generation within rebuilderd.

This PR addresses part 1.

**Features**
- [x] Skeleton of `runlib` with TODOs
- [x] Function `record_artifacts` - recursive traversal and hashing of paths provided
- [x] Function `run_command` - executes commands on a software supply chain step & return byproducts (stderr & stdoutput)
- [x] Link Generation given materials, products, and byproducts provided
- [x] Generate Signed Link
- [x] Example Usage of `in_toto_run`

**Keep-in-minds**
- Error handling in functions
- LinkMetadata vs LinkMetadataBuilder vs Link vs SignedArtifacts
- Comments mentioned in https://github.com/in-toto/in-toto-rs/pull/5

**This pull request fulfills the following requirements:**
- [x] Tests have been added for the bug fix or new feature
- [x] Docs have been added for the bug fix or new feature",True,7,https://api.github.com/repos/in-toto/in-toto-rs/pulls/7,https://github.com/in-toto/in-toto-rs/pull/7,closed,921,320,22,28,2,27,0,0,[],2021-06-30 06:44:02+00:00,2021-08-12 20:46:01+00:00,3765719.0,"43 days, 14:01:59","[{'comment_id': 661175895, 'comment_body': 'Next step is definitely error handling here instead of unwrapping in various places, as well as handling edge cases (e.g. symbolic links).', 'comment_created': datetime.datetime(2021, 6, 30, 6, 46, 17, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 662552580, 'comment_body': '```suggestion\r\n/// record_artifacts is a function that traverses through the passed slice of paths, hashes the content of files\r\n```', 'comment_created': datetime.datetime(2021, 7, 1, 19, 51, 15, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 662556610, 'comment_body': ""Can we use `.code` here to directly fetch the return value and cast it to string? I don't think we'd even need the `.success` conditional.\r\n\r\nAlso, if the command was successful, we want the return code to be `0`, not `1`."", 'comment_created': datetime.datetime(2021, 7, 1, 19, 59, 9, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 662559073, 'comment_body': 'https://doc.rust-lang.org/std/process/struct.Command.html#method.current_dir\r\n\r\nI think this may help with this.', 'comment_created': datetime.datetime(2021, 7, 1, 20, 4, 16, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 662581703, 'comment_body': 'Thank you!', 'comment_created': datetime.datetime(2021, 7, 1, 20, 46, 5, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 663150095, 'comment_body': 'I realized the usage of `VirtualTargetPath` to check that the argument is a path is not necessarily valid. Should we check with 3rd party or manually (e.g. starts with ""./"")', 'comment_created': datetime.datetime(2021, 7, 2, 17, 12, 54, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 663150763, 'comment_body': 'Should we make the path arguments `&[&str]` or `Vec<String>` (or maybe `Vec<VirtualTargetPath>`?)', 'comment_created': datetime.datetime(2021, 7, 2, 17, 14, 24, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 663150969, 'comment_body': 'Same with `name` and other params (&str vs String)', 'comment_created': datetime.datetime(2021, 7, 2, 17, 14, 51, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 663427159, 'comment_body': 'After a discussion with @adityasaky, we decided to stick with more accessible types like string slices as opposed to custom types such as `VirtualTargetPath` for function parameters (similar to other in-toto implementations) and handle those conversions internally.', 'comment_created': datetime.datetime(2021, 7, 4, 0, 42, 40, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 667630087, 'comment_body': 'Is this a valid usage of `Error::Programming` or should I create a specific error for this situation?', 'comment_created': datetime.datetime(2021, 7, 12, 5, 16, 8, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 685491183, 'comment_body': 'This should likely be removed.', 'comment_created': datetime.datetime(2021, 8, 9, 20, 15, 53, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 685491954, 'comment_body': 'Is this comment a remnant of the original code?', 'comment_created': datetime.datetime(2021, 8, 9, 20, 17, 13, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 685516679, 'comment_body': ""I'm guessing we're not using this anywhere right now?"", 'comment_created': datetime.datetime(2021, 8, 9, 20, 58, 58, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 685517146, 'comment_body': 'hi in_toto how do u do', 'comment_created': datetime.datetime(2021, 8, 9, 20, 59, 45, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 686942994, 'comment_body': ""I'm not entirely sure about the logic following this. If cmd_args is empty, then return empty? when would this happen?"", 'comment_created': datetime.datetime(2021, 8, 11, 15, 30, tzinfo=datetime.timezone.utc), 'commenter': 'SantiagoTorres', 'type': 'User'}, {'comment_id': 687090719, 'comment_body': 'Is there a reason this is a better alternative instead of the derived description?', 'comment_created': datetime.datetime(2021, 8, 11, 18, 52, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SantiagoTorres', 'type': 'User'}, {'comment_id': 687091255, 'comment_body': 'I think this can go yeah...', 'comment_created': datetime.datetime(2021, 8, 11, 18, 53, 20, tzinfo=datetime.timezone.utc), 'commenter': 'SantiagoTorres', 'type': 'User'}, {'comment_id': 687096831, 'comment_body': ""Hmm, I don't think this should be a programming error, as this could occur when not-a-bug happens right? what do you think?"", 'comment_created': datetime.datetime(2021, 8, 11, 19, 1, 41, tzinfo=datetime.timezone.utc), 'commenter': 'SantiagoTorres', 'type': 'User'}, {'comment_id': 687104468, 'comment_body': 'An explanation as to why this makes tests pass would be great haha', 'comment_created': datetime.datetime(2021, 8, 11, 19, 13, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SantiagoTorres', 'type': 'User'}, {'comment_id': 687110004, 'comment_body': 'Am I missing something or is the _type field missing?', 'comment_created': datetime.datetime(2021, 8, 11, 19, 22, 35, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687110677, 'comment_body': 'We had the _type field here. The serde rename statement now applies to the name field? If so, it may be messing up the structure of the final metadata?', 'comment_created': datetime.datetime(2021, 8, 11, 19, 23, 43, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687272899, 'comment_body': 'My reasoning at the time is that this is a link but converted into the json format, and since we have `Link` as a struct, it made more sense to name this a json.', 'comment_created': datetime.datetime(2021, 8, 12, 0, 3, 37, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 687964773, 'comment_body': 'That makes sense. This was the absolute path check earlier. Removed for now', 'comment_created': datetime.datetime(2021, 8, 12, 17, 55, 32, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 687965772, 'comment_body': 'Hmm yeah, this was copied over from the other implementations on how the link file should be named if we decide to save it.', 'comment_created': datetime.datetime(2021, 8, 12, 17, 57, 4, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 687967591, 'comment_body': 'If no `cmd_args` are provided (e.g. input is `&[]`), the `let executable = cmd_args[0];` line would fail. Because of the data type of `cmd_args` is `&[&str]`, providing an empty slice as the input is definitely possible (maybe to denote for no cmd_args supplied). In that case, there would be no byproducts and an empty BTreeMap would be returned.', 'comment_created': datetime.datetime(2021, 8, 12, 17, 59, 43, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 687983216, 'comment_body': ""I see. I don't have a problem with leaving it in or taking it out."", 'comment_created': datetime.datetime(2021, 8, 12, 18, 22, 46, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 688044329, 'comment_body': 'Gotcha. I looked at the errors and the one that came closest to its meaning (""Walkdir encountered an invalid path format. This might be because of something internal or maybe the paths you supplied were invalid"") is `IllegalArgument` error (or maybe `Opaque`), or maybe implementing a new error specific to this use case. Replaced with IllegalArgument, but let me know if something else would be better.', 'comment_created': datetime.datetime(2021, 8, 12, 19, 59, 12, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}]","[{'commit_sha': '6b9cd304b952fdf67273e2d70110af779b57427a', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8de0e55b5423d8593649baf2c46e2e92c44249b', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd99f0a61b8b3409f57640d4a7bc46b8255bc862', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6170a36d6af8518fccf09d10e3a37e430ef3fca', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a35d8b1eb0a82d1af7cbba759c486016794351b', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c01646a82fb1e0d61f08e29eb64243975053d91', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27e12d3ea025b0d1898c353167b42b6ea3e4bc2e', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb93298d94c45a7184e24f1dd878ca33b1af5bc0', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e0ddf5400c777409250453c11e5f68674b88ce0', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdfab27f23c3e0ed1f69ef9f4e57056ff2478578', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eff788c32ed4d2e0d8aded5574bd7c8862588fbc', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '640b370a2acf35387217bbbc828c387469aad57d', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46d9a4254fb40346a61ff68fb8428fc4696e2a3b', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '890372c33a878aa39b07803264af705422ac253a', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '228bc3501593e8ffe84f29b3ce4bc25cc7c6f984', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e6fb7dc6eb9ca1569d253eedb312ebca013502d', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99762ee440a0dc449f49da274ae6f6f3beb5c34d', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e83e00532223be124221760b3e9a7c655323fdd', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '402083db1bafa16b890174eee307d2db4722466b', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '714b8c1cc1de6091e127af40d941f262e102d40e', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2805e3920dfc231acb61cfdc50610546b64a4063', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7eae8c97c491c724db2efb6284214fb835909200', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02d44c1704ebd5f5eff809e88c8975c0f0579a2d', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6639884a1fb10c99d8a3c21a1e7e0df5717db12b', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59e2b14d597119e54a81025ef97f27de1baeb8b8', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8531f1ad13ee9e77358934df84e795a8bbd2746', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26023c93fe73c3c184f68d6206e3dbbcf135cb9e', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5e6479960b66dd4efcf808f56a837e2078e6dcc', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}]",Joy Liu,34288846,,User,,32,,35,36
711616323,"Make CI (fmt, clippy) pass, fill in TODOs in documentation","- [x] Run `cargo fmt`
- [x] Address clippy warnings
- [x] Address TODOs within `cargo doc`",True,8,https://api.github.com/repos/in-toto/in-toto-rs/pulls/8,https://github.com/in-toto/in-toto-rs/pull/8,closed,30,27,7,3,1,0,0,0,[],2021-08-12 21:15:02+00:00,2021-08-12 21:58:21+00:00,2599.0,0:43:19,[],"[{'commit_sha': '0b0a6896d84b7d27366c2acdd38758020bf7310b', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '765e156678a0347a60d5bc6668e46c4f036f67d5', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '226cd6270f0d6461296b84d3a367446a94ab540f', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}]",Joy Liu,34288846,,User,,32,,35,36
707498443,Integrate in-toto (link attestations) with rebuilderd ,"**The following PR is part of the Google Summer of Code 2021 program.**

The in-toto GSoC project is to **develop in-toto-rs capabilities to support rebuilderd** (Issue https://github.com/in-toto/in-toto-rs/issues/4), which includes two parts:
1. Add `runlib.rs`; implement link generation using `in_toto_run`.
2. Use `in_toto_run` and link generation within rebuilderd.

This PR addresses part 2.

**Features**
- [x] Make relevant changes to `rebuilderd.db` with SQL migrations (add `has_attestation` field to `packages`, remove `attestation` field from `packages`, and add `attestation` to `builds` to store link attestation)
- [x] Update models to reflect db changes
- [x] Integrate `in_toto_run` function to run and generate link attestation based on rebuild with contextual link name
- [x] Store `attestation` and `has_attestation` in DB when `Build` is good
- [x] Create API endpoint for rebuilderd to get link attestation data from db.",True,1,https://api.github.com/repos/in-toto/rebuilderd/pulls/1,https://github.com/in-toto/rebuilderd/pull/1,closed,203,38,15,1,2,33,0,0,[],2021-08-10 17:07:07+00:00,2021-08-16 20:30:35+00:00,530608.0,"6 days, 3:23:28","[{'comment_id': 686249489, 'comment_body': 'Should `let input...` be in the next line? I sense some editor shenanigans. :smile: ', 'comment_created': datetime.datetime(2021, 8, 10, 19, 9, 27, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687083414, 'comment_body': 'Hahaha good catch! Indeed, I will fix the formatting for this.', 'comment_created': datetime.datetime(2021, 8, 11, 18, 41, 39, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 687757333, 'comment_body': '```suggestion\r\nupdate packages set has_attestation=true where build_id in (select id from builds where attestation is not null);\r\n```', 'comment_created': datetime.datetime(2021, 8, 12, 14, 18, 5, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687760721, 'comment_body': ""Probably more editor shenanigans, but we don't want this line (and others like it) getting moved around, as it can litter the history :)"", 'comment_created': datetime.datetime(2021, 8, 12, 14, 21, 50, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687761508, 'comment_body': 'Some of these newlines may have been on purpose to help with readability...', 'comment_created': datetime.datetime(2021, 8, 12, 14, 22, 44, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687762116, 'comment_body': 'Curious, is this the work of some code formatting plugin in your editor?', 'comment_created': datetime.datetime(2021, 8, 12, 14, 23, 26, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687762253, 'comment_body': 'Here as well', 'comment_created': datetime.datetime(2021, 8, 12, 14, 23, 35, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687764372, 'comment_body': 'I believe at least `Ok` can go to the next line', 'comment_created': datetime.datetime(2021, 8, 12, 14, 25, 58, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687765174, 'comment_body': ""Let's undo the indent changes IMO."", 'comment_created': datetime.datetime(2021, 8, 12, 14, 26, 43, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687765743, 'comment_body': ""I think we don't need a change here."", 'comment_created': datetime.datetime(2021, 8, 12, 14, 27, 24, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687765988, 'comment_body': 'same here.', 'comment_created': datetime.datetime(2021, 8, 12, 14, 27, 40, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687766102, 'comment_body': 'and here', 'comment_created': datetime.datetime(2021, 8, 12, 14, 27, 48, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687766153, 'comment_body': 'and here', 'comment_created': datetime.datetime(2021, 8, 12, 14, 27, 52, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687766391, 'comment_body': 'probably here as well', 'comment_created': datetime.datetime(2021, 8, 12, 14, 28, 3, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687766820, 'comment_body': 'In this file, I think this is where the first change should be (apart from the imports).', 'comment_created': datetime.datetime(2021, 8, 12, 14, 28, 32, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687767151, 'comment_body': 'not related to this change', 'comment_created': datetime.datetime(2021, 8, 12, 14, 28, 53, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687767671, 'comment_body': 'This can be deleted I think? Line 168 and 169 seem to be doing this now.', 'comment_created': datetime.datetime(2021, 8, 12, 14, 29, 27, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687767871, 'comment_body': 'not related to this change', 'comment_created': datetime.datetime(2021, 8, 12, 14, 29, 41, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687767976, 'comment_body': 'not related to this change', 'comment_created': datetime.datetime(2021, 8, 12, 14, 29, 50, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687768033, 'comment_body': 'not related to this change', 'comment_created': datetime.datetime(2021, 8, 12, 14, 29, 54, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687768108, 'comment_body': 'not related to this change', 'comment_created': datetime.datetime(2021, 8, 12, 14, 29, 59, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687768207, 'comment_body': 'not related to this change', 'comment_created': datetime.datetime(2021, 8, 12, 14, 30, 5, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687768315, 'comment_body': 'not related to this change', 'comment_created': datetime.datetime(2021, 8, 12, 14, 30, 13, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 687769904, 'comment_body': ""TODO: let's get that PR merged and cut a release so that we can replace the import here."", 'comment_created': datetime.datetime(2021, 8, 12, 14, 31, 56, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 688062268, 'comment_body': 'Huh, what do you mean? Is the formatting below incorrect\r\n![image](https://user-images.githubusercontent.com/34288846/129265058-3171bb9e-bd77-4731-b8c5-c20d00b06ad3.png)\r\n', 'comment_created': datetime.datetime(2021, 8, 12, 20, 29, 2, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 688062808, 'comment_body': 'Oof editor :""))))', 'comment_created': datetime.datetime(2021, 8, 12, 20, 29, 50, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 688071619, 'comment_body': 'X""D', 'comment_created': datetime.datetime(2021, 8, 12, 20, 44, 11, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 688077950, 'comment_body': 'Yes! Thank you', 'comment_created': datetime.datetime(2021, 8, 12, 20, 54, 54, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 688078386, 'comment_body': ':"")', 'comment_created': datetime.datetime(2021, 8, 12, 20, 55, 37, tzinfo=datetime.timezone.utc), 'commenter': 'joyliu-q', 'type': 'User'}, {'comment_id': 688595014, 'comment_body': 'This can now be 0.1.1! :tada: ', 'comment_created': datetime.datetime(2021, 8, 13, 15, 20, 39, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}, {'comment_id': 689101040, 'comment_body': '+1', 'comment_created': datetime.datetime(2021, 8, 15, 14, 50, 31, tzinfo=datetime.timezone.utc), 'commenter': 'SantiagoTorres', 'type': 'User'}, {'comment_id': 689101257, 'comment_body': 'Can we update this pls?', 'comment_created': datetime.datetime(2021, 8, 15, 14, 51, 57, tzinfo=datetime.timezone.utc), 'commenter': 'SantiagoTorres', 'type': 'User'}, {'comment_id': 689588159, 'comment_body': ""I'm not familiar with rust code formatting opinions to answer if it's correct or incorrect, but the change itself felt like it was some autoformatter rather than you changing it around. IMO we can leave it out of the diff :)"", 'comment_created': datetime.datetime(2021, 8, 16, 14, 29, 8, tzinfo=datetime.timezone.utc), 'commenter': 'adityasaky', 'type': 'User'}]","[{'commit_sha': '6ee44d4c9c12f31a0879ccd31fd7ebfaba9c8b88', 'committer_username': 'joyliu-q', 'committer_name': 'Joy Liu', 'committer_email': None, 'commit_date': datetime.datetime(2017, 12, 5, 23, 32, 37, tzinfo=datetime.timezone.utc)}]",Joy Liu,34288846,,User,,32,,35,36

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
261595965,in-toto-rs,in-toto/in-toto-rs,Rust,14,32,9,14,225,10,5,6,"[{'id': 752805743, 'number': 14, 'closed': datetime.datetime(2022, 3, 30, 3, 4, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 7, 4, 1, 57, tzinfo=datetime.timezone.utc), 'time_taken': 15030133.0, 'time_delta': '173 days, 23:02:13', 'additions': 81, 'deletions': 13, 'state': 'closed'}, {'id': 711616323, 'number': 8, 'closed': datetime.datetime(2021, 8, 12, 21, 58, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 21, 15, 2, tzinfo=datetime.timezone.utc), 'time_taken': 2599.0, 'time_delta': '0:43:19', 'additions': 30, 'deletions': 27, 'state': 'closed'}, {'id': 680578352, 'number': 7, 'closed': datetime.datetime(2021, 8, 12, 20, 46, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 6, 44, 2, tzinfo=datetime.timezone.utc), 'time_taken': 3765719.0, 'time_delta': '43 days, 14:01:59', 'additions': 921, 'deletions': 320, 'state': 'closed'}, {'id': 671024704, 'number': 6, 'closed': datetime.datetime(2021, 6, 22, 19, 3, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 16, 5, 26, 49, tzinfo=datetime.timezone.utc), 'time_taken': 567394.0, 'time_delta': '6 days, 13:36:34', 'additions': 50, 'deletions': 0, 'state': 'closed'}, {'id': 669099316, 'number': 5, 'closed': datetime.datetime(2021, 6, 29, 18, 5, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 13, 18, 56, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1379318.0, 'time_delta': '15 days, 23:08:38', 'additions': 968, 'deletions': 2977, 'state': 'closed'}]"
393492646,rebuilderd,in-toto/rebuilderd,Rust,3,3,3,8,386,1,2,0,"[{'id': 726067652, 'number': 3, 'closed': datetime.datetime(2021, 9, 2, 17, 54, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 2, 16, 1, 25, tzinfo=datetime.timezone.utc), 'time_taken': 6798.0, 'time_delta': '1:53:18', 'additions': 1129, 'deletions': 319, 'state': 'closed'}, {'id': 725995507, 'number': 2, 'closed': datetime.datetime(2021, 9, 2, 14, 48, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 2, 14, 45, 32, tzinfo=datetime.timezone.utc), 'time_taken': 164.0, 'time_delta': '0:02:44', 'additions': 605, 'deletions': 177, 'state': 'closed'}, {'id': 707498443, 'number': 1, 'closed': datetime.datetime(2021, 8, 16, 20, 30, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 10, 17, 7, 7, tzinfo=datetime.timezone.utc), 'time_taken': 530608.0, 'time_delta': '6 days, 3:23:28', 'additions': 203, 'deletions': 38, 'state': 'closed'}]"
