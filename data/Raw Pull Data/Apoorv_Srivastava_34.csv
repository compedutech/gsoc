pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
663544734,Fix #3288: Add model layer for checkpointing,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
Fixes #3288

Updated the protobufs to implement checkpointing.
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3271,https://api.github.com/repos/oppia/oppia-android/pulls/3271,https://github.com/oppia/oppia-android/pull/3271,closed,97,1,4,14,12,29,0,3,[],2021-06-07 13:02:55+00:00,2021-06-17 04:00:43+00:00,831468.0,"9 days, 14:57:48","[{'comment_id': 648507188, 'comment_body': ""We can't change the meaning if existing values--they need to be preserved or migrated to a reasonable replacement.\r\n\r\nTo that end, I think you want to keep the same ordinals but just add the new enums that we're going to use (no migration should be necessary)."", 'comment_created': datetime.datetime(2021, 6, 9, 17, 6, 31, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 649014294, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 10, 9, 27, 17, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 649453201, 'comment_body': 'Extra space here', 'comment_created': datetime.datetime(2021, 6, 10, 19, 10, 54, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 649453453, 'comment_body': 'Here as well', 'comment_created': datetime.datetime(2021, 6, 10, 19, 11, 18, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 649682029, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 11, 4, 30, 4, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 649682045, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 11, 4, 30, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 649739154, 'comment_body': 'This file needs to be declared here as well \r\nhttps://github.com/oppia/oppia-android/blob/develop/model/BUILD.bazel\r\n@BenHenning correct?', 'comment_created': datetime.datetime(2021, 6, 11, 7, 2, 49, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 649747568, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 11, 7, 17, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 649889769, 'comment_body': 'Nit: `Map` instead of `map`', 'comment_created': datetime.datetime(2021, 6, 11, 11, 2, 48, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 649890304, 'comment_body': 'Nit: `The index ...` instead of `The Index`', 'comment_created': datetime.datetime(2021, 6, 11, 11, 3, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 649891105, 'comment_body': 'Why do we need this title? I was thinking we can get the required information from `exploration_id` present in map.', 'comment_created': datetime.datetime(2021, 6, 11, 11, 5, 28, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 649892057, 'comment_body': 'Why do we need this state_name ?', 'comment_created': datetime.datetime(2021, 6, 11, 11, 7, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 649892259, 'comment_body': 'Nit : `Structure `', 'comment_created': datetime.datetime(2021, 6, 11, 11, 7, 47, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 649892592, 'comment_body': 'Also here you have written `exploration_id` but in line 13 its `explorationId`. Suggest using only one of these: `exploration_id `', 'comment_created': datetime.datetime(2021, 6, 11, 11, 8, 28, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 649893375, 'comment_body': 'Make this `1` and `exploration_title ` should be 2. \r\nTwo reasons behind this:\r\n1. Normally we keep id on top.\r\n2. It fits alphabetically too.', 'comment_created': datetime.datetime(2021, 6, 11, 11, 9, 52, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 649947704, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 11, 12, 45, 27, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 649947764, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 11, 12, 45, 32, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 649949362, 'comment_body': 'changed to `Structure`', 'comment_created': datetime.datetime(2021, 6, 11, 12, 48, 5, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 649951257, 'comment_body': 'the explorationId in `line 13` does not refer to the variable, it refers to the id of the exploration. \r\nRephrased the comment in line 13.', 'comment_created': datetime.datetime(2021, 6, 11, 12, 50, 54, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 649951340, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 11, 12, 51, 2, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 649961502, 'comment_body': ""The exploration title will be displayed to the user when the storage runs out. If the user deletes a topic with saved progress, we won't get the exploration title."", 'comment_created': datetime.datetime(2021, 6, 11, 13, 5, 29, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 649964394, 'comment_body': ""state_name is used to make the implementation slightly simpler because the current codebase has a function that retrieves a state using the state's name.\r\n\r\nShould I remove this?"", 'comment_created': datetime.datetime(2021, 6, 11, 13, 9, 32, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 650309045, 'comment_body': 'Nit: use //:oppia_api_visibility here.', 'comment_created': datetime.datetime(2021, 6, 11, 23, 29, 3, tzinfo=datetime.timezone.utc), 'commenter': 'fsharpasharp', 'type': 'User'}, {'comment_id': 650343240, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 12, 4, 22, 18, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 650379651, 'comment_body': 'Why are we not adding the new states after COMPLETED?  (i.e. IN_PROGRESS_SAVED = 5 and IN_PROGRESS_NOT_SAVED = 6)In general we should avoid making updates to existing proto fields ', 'comment_created': datetime.datetime(2021, 6, 12, 11, 2, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 650382338, 'comment_body': 'moved the two new states after COMPLETED.', 'comment_created': datetime.datetime(2021, 6, 12, 11, 31, 37, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 650716883, 'comment_body': 'Okay.\r\nI suggest instead of saving `state_name` here when you are fetching the information from database to send it to app layer in that function you can use multiple data providers to fetch the information of checkpoint as well as state_name from two different database and then combine it and then send it to app layer.\r\n\r\n@BenHenning Any thoughts on this?', 'comment_created': datetime.datetime(2021, 6, 14, 7, 46, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 650717286, 'comment_body': 'Okay. Thanks.', 'comment_created': datetime.datetime(2021, 6, 14, 7, 47, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 651929424, 'comment_body': 'Resolving this as it is correct.', 'comment_created': datetime.datetime(2021, 6, 15, 15, 53, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}]","[{'commit_sha': '2d2079fe906227dc7f812f9a66aeb05e85f2f739', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c898197087701f757e8891272fbaa6a266dd37ae', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acfc6a46ace821482e4bf1af14e12ed3e74f6184', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7c6134d3a53a0c5987d689940603d5de3e43d6d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94757a2ceb8820c4adeb7762bd398433172d7b6e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec4ce5b7242908574218b9cb3861e5fb8f6c6516', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fb646ec429da968273f6c14028e2371a64a9a7b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18153c3b382afa108124e719bbbc5fea70b51aa6', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffd1dd2628254e5d11caeb852be08a02d1c18d1b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f10baf3adf7d8bc754e7d4e91cba661af5318cee', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c215064668487d23f76c8fd9650506078d8ae03', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3cdee8ad6eedd54b91635635de495f4eff06c41', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09eb7e05cfa564abd374185620030d88df6aafb3', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ef9d50d176902948af5a95ed55c0503f055f941', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}]",Apoorv Srivastava,53645584,,User,,28,,0,7
672218471,Fix #3319: Create controller to save and retrieve checkpoints,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation

Fixes #3319 
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3337,https://api.github.com/repos/oppia/oppia-android/pulls/3337,https://github.com/oppia/oppia-android/pull/3337,closed,920,1,7,8,11,32,0,1,[],2021-06-17 05:17:30+00:00,2021-07-06 13:36:29+00:00,1671539.0,"19 days, 8:18:59","[{'comment_id': 653235607, 'comment_body': 'Could you also explain constructor parameters here with kdocs references just a better practice for documentation.', 'comment_created': datetime.datetime(2021, 6, 17, 5, 27, 54, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 653236008, 'comment_body': 'Are you using this ?', 'comment_created': datetime.datetime(2021, 6, 17, 5, 28, 57, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 653239931, 'comment_body': 'here I am checking the size of the database before saving it to return the appropriate deferred result (limit exceeded or not exceeded).', 'comment_created': datetime.datetime(2021, 6, 17, 5, 39, 14, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 653540438, 'comment_body': 'Resolving this based upon our conversation', 'comment_created': datetime.datetime(2021, 6, 17, 12, 59, 14, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 653545395, 'comment_body': ""I was thinking to keep this constant in the build config or maybe a config file since it's quite easy to change this constant from here. @BenHenning @rt4914 Your thoughts ?"", 'comment_created': datetime.datetime(2021, 6, 17, 13, 5, 27, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 654235742, 'comment_body': 'Why do we need to send null here but in rest of the case we are sending an enum value?', 'comment_created': datetime.datetime(2021, 6, 18, 8, 16, 13, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 654236352, 'comment_body': '@BenHenning @rt4914 The enum class here and below and replicated should we use a single enum class here or using two different classes is fine? I prefer we should use a single enum class instead of duplicating them for the particular scenario.', 'comment_created': datetime.datetime(2021, 6, 18, 8, 17, 3, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 654250893, 'comment_body': 'We should use exceptionsController here @vinitamurthi correct?', 'comment_created': datetime.datetime(2021, 6, 18, 8, 38, 56, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 654251300, 'comment_body': 'Could you use more specific variable names here and elsewhere', 'comment_created': datetime.datetime(2021, 6, 18, 8, 39, 37, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 654253851, 'comment_body': '```suggestion\r\n      getDeferredResult(\r\n```', 'comment_created': datetime.datetime(2021, 6, 18, 8, 43, 25, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 654255316, 'comment_body': 'Why explorationId is null here? ', 'comment_created': datetime.datetime(2021, 6, 18, 8, 45, 41, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 654256978, 'comment_body': '```suggestion\r\n  private suspend fun getExplorationCheckpointStatusResult(\r\n```', 'comment_created': datetime.datetime(2021, 6, 18, 8, 48, 10, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 654362452, 'comment_body': 'null is being sent in cases where we only need to know if the operation was successful or not. (for example when we delete a checkpoint). ', 'comment_created': datetime.datetime(2021, 6, 18, 11, 41, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 654363148, 'comment_body': 'This naming makes the function names consistent with other controllers.', 'comment_created': datetime.datetime(2021, 6, 18, 11, 42, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 654363278, 'comment_body': 'This naming makes the variable names consistent with other controllers.', 'comment_created': datetime.datetime(2021, 6, 18, 11, 42, 37, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 654364278, 'comment_body': 'The line makes it consistent with other controllers.', 'comment_created': datetime.datetime(2021, 6, 18, 11, 44, 34, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 654364997, 'comment_body': 'The result sent does not depend upon the explorationId. ', 'comment_created': datetime.datetime(2021, 6, 18, 11, 45, 51, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 655622070, 'comment_body': '@aggarwalpulkit596 Yes we can wrap this into single enum.', 'comment_created': datetime.datetime(2021, 6, 21, 18, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 655623690, 'comment_body': 'I think the current code is correct.', 'comment_created': datetime.datetime(2021, 6, 21, 18, 46, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 655624736, 'comment_body': 'We can keep it anywhere but is possible to add a test case where can check this value ? If yes, then this value can be kept anywhere else your idea sounds good.', 'comment_created': datetime.datetime(2021, 6, 21, 18, 48, 35, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 655625263, 'comment_body': 'Remove this blank line', 'comment_created': datetime.datetime(2021, 6, 21, 18, 49, 25, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 655625553, 'comment_body': 'Nit here and elsewhere:\r\n`val saveCheckpointLiveData = saveCheckpoint(firstTestProfile, index = 0).toLiveData()`', 'comment_created': datetime.datetime(2021, 6, 21, 18, 49, 54, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 656185510, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 22, 12, 47, 17, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 656185918, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 22, 12, 47, 42, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 657599408, 'comment_body': ""@MaskedCarrot let's move this to build config\r\n"", 'comment_created': datetime.datetime(2021, 6, 24, 3, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 657599470, 'comment_body': 'Okay', 'comment_created': datetime.datetime(2021, 6, 24, 3, 32, 4, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 657599556, 'comment_body': 'Okay makes sense', 'comment_created': datetime.datetime(2021, 6, 24, 3, 32, 29, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 657600040, 'comment_body': 'Also keep only one enum instead of two.', 'comment_created': datetime.datetime(2021, 6, 24, 3, 34, 16, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 661446970, 'comment_body': 'moved this enum to a separate class because this enum will be used from other classes', 'comment_created': datetime.datetime(2021, 6, 30, 12, 56, 53, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 661980339, 'comment_body': 'Is this moved or not? I am bit confused.', 'comment_created': datetime.datetime(2021, 7, 1, 5, 13, 50, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 661980780, 'comment_body': 'Using a dagger constant as per @vinitamurthi suggestion\r\n', 'comment_created': datetime.datetime(2021, 7, 1, 5, 15, 5, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 661983023, 'comment_body': 'The enum `ExplorationCheckpointState` is now in a new file because we will have to access the database states from other controllers. The enum `ExplorationCheckpointActionStatus` is still in the checkpoint controller because it is needed to send appropriate async results after the save/retrieve/delete operation.', 'comment_created': datetime.datetime(2021, 7, 1, 5, 21, 53, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}]","[{'commit_sha': '51148fdb061126df311306e3bbf7f87cf30d2ab5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89b44bab962c5f7ff7a5fc750cea0781970d20f5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee7a8ab7ba1427fe2048e489502e23a5569b9b43', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47ed8787ba5772415b3ba6ae8132ad1d4da95043', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51100bba8e28653d297af5fc29fdd1d81354320a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14f2805472f0fcd735da3cc8638673ae958e52ed', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79f430b43c09fd1c83cb3e79e8733576e5237a02', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a46bed34daa3d9a1a401002a0812bd4e40fee05b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}]",Apoorv Srivastava,53645584,,User,,28,,0,7
682571436,Fixes part of #3325: Add ExplorationStorageModule to UI tests,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Fixes part of #3325 

This PR is stacked on top of PR #3337 

This PR adds the ExplorationStorageModule to UI tests so that the app layer tests do not fail once the mechanism to save checkpoints is introduced.

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3400,https://api.github.com/repos/oppia/oppia-android/pulls/3400,https://github.com/oppia/oppia-android/pull/3400,closed,285,95,95,14,4,0,0,1,[],2021-07-02 11:59:21+00:00,2021-07-08 09:39:46+00:00,510025.0,"5 days, 21:40:25",[],"[{'commit_sha': '51148fdb061126df311306e3bbf7f87cf30d2ab5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89b44bab962c5f7ff7a5fc750cea0781970d20f5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee7a8ab7ba1427fe2048e489502e23a5569b9b43', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47ed8787ba5772415b3ba6ae8132ad1d4da95043', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51100bba8e28653d297af5fc29fdd1d81354320a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14f2805472f0fcd735da3cc8638673ae958e52ed', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79f430b43c09fd1c83cb3e79e8733576e5237a02', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a46bed34daa3d9a1a401002a0812bd4e40fee05b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72bf72810bae28ae3662cb08ce80fea9d55ee7ab', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '894ef7d70224127bd05ca0c5e056a504ce6ef61f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5f0818a630419c55f86f1f6c11d22991bf3b5e0', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebd7ec5644d0b90e8b2e30c2eb7d9daff85f591f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5825b727e9a26682621cf35bde0d8c174e60a3f0', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1db302b29dd9e2279a5caac00420f566312e9dc4', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}]",Apoorv Srivastava,53645584,,User,,28,,0,7
683625109,Fix #3325: Domain layer mechanism for saving checkpoints.,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation

Fixes #3325 

<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.

## Tests

test class | Screenshot
--- | ---
ExplorationActivityTest (Tests ignored here are due to an existing issue.) | ![Screenshot from 2021-07-07 22-36-43](https://user-images.githubusercontent.com/53645584/124801179-30a12680-df74-11eb-822f-8285a53b9895.png)

",True,3408,https://api.github.com/repos/oppia/oppia-android/pulls/3408,https://github.com/oppia/oppia-android/pull/3408,closed,1933,197,25,60,6,116,0,2,[],2021-07-05 11:35:20+00:00,2021-07-16 04:47:59+00:00,925959.0,"10 days, 17:12:39","[{'comment_id': 664244227, 'comment_body': 'Separate point, but please make sure to add braces for single-line cases like this. We only omit braces if the entire if + statement fits on the same line. See: https://developer.android.com/kotlin/style-guide#braces.', 'comment_created': datetime.datetime(2021, 7, 6, 5, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 664244815, 'comment_body': ""This seems hacky. We shouldn't call retrieveData() unless we actually want to observe the result (& we probably should here--consider that any failures in this block of code will likely silently fail and not be surfaced to the application or user which will result in broken behavior that we can't investigate). In the very least, we should always log the result of a background operation.\r\n\r\nI don't have anything against this idea in principle (that we want to entirely save the checkpoint in the background), but if it's important to observe the result then we should probably combine it with one of the existing DataProviders already being observed by StateFragment. Further, the operation to call recordExplorationCheckpoint itself isn't particularly expensive--it's already deferring execution to a background thread. To simplify, consider:\r\n- Calling recordExplorationCheckpoint directly rather than deferring to the background dispatcher\r\n- Update recordExplorationCheckpoint to return a Deferred (we should also make sure that this method cannot be called by the UI layer which might require some refactoring of your controller, maybe into multiple classes)\r\n- Observe the deferred here; when it finishes you can pull the save state & notify that the ephemeral state DataProvider has an update\r\n- Update EphemeralState to include details on the current checkpoint save status\r\n- In the async method for the ephemeral state DataProvider, have it compute the EphemeralState such that it includes the current save state\r\n- Use the new value in StateFragment to make decisions based on when the user wants to exit the exploration\r\n\r\nI think the results in a net simplification:\r\n- No need for the extra threading here\r\n- We can avoid a call to retrieveData() by just using Deferred directly since all of this is happening in the domain layer\r\n- We can avoid the extra DataProvider to fetch the checkpoint save status\r\n- We can avoid blocking the UI on the above DataProvider to determine what to show the user when they try to exit"", 'comment_created': datetime.datetime(2021, 7, 6, 5, 27, 15, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 664246111, 'comment_body': 'Note comment capitalization for consistency.', 'comment_created': datetime.datetime(2021, 7, 6, 5, 30, 33, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 664246373, 'comment_body': 'This seems hacky. There are probably more elegant alternatives, but before I get into that: do we actually need to special case this? Why not just treat it like any other interaction?', 'comment_created': datetime.datetime(2021, 7, 6, 5, 31, 23, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 664282187, 'comment_body': '@BenHenning even if we return a deferred from `recordExplorationCheckpoint` function we still have to use a suspend function to wait for it to complete. So in turn we will have to use a background dispatcher.', 'comment_created': datetime.datetime(2021, 7, 6, 6, 53, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 665100123, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 7, 7, 6, 50, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 665102341, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 7, 7, 10, 33, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 665106665, 'comment_body': 'saving works as expected using `invokeOnCompletion` on the deferred.', 'comment_created': datetime.datetime(2021, 7, 7, 7, 17, 23, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 665115781, 'comment_body': 'If we do this like any other interaction, then checkpoints will be saved twice, once when the answer is submitted on behalf of the continue interaction, and then the second time when the learner moves to the next state. ', 'comment_created': datetime.datetime(2021, 7, 7, 7, 31, 19, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 665525607, 'comment_body': 'can we have some constants for these values\r\ninvalid_topic_id,invalid_story_id, invalid_exp_id', 'comment_created': datetime.datetime(2021, 7, 7, 16, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 665526673, 'comment_body': 'are we using this?', 'comment_created': datetime.datetime(2021, 7, 7, 16, 23, 41, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 665529417, 'comment_body': ""```suggestion\r\n    // The new observer should observe the completed second state\r\n    // since it's the current pending state.\r\n```"", 'comment_created': datetime.datetime(2021, 7, 7, 16, 27, 22, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 665529873, 'comment_body': 'ditto for others', 'comment_created': datetime.datetime(2021, 7, 7, 16, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 665594120, 'comment_body': ""Can't we just keep the default value instead of setting it for every function call"", 'comment_created': datetime.datetime(2021, 7, 7, 17, 59, 38, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 665595034, 'comment_body': 'Why are we using experimental API ? @BenHenning @rt4914 can we use it ?\r\n', 'comment_created': datetime.datetime(2021, 7, 7, 18, 0, 53, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 665597153, 'comment_body': 'Also, do we really need to add 3 different variables? Seems like a lot of added dependency.', 'comment_created': datetime.datetime(2021, 7, 7, 18, 4, 8, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 665598488, 'comment_body': ""Why don't we need to save it for continue state? I'm a bit confused here."", 'comment_created': datetime.datetime(2021, 7, 7, 18, 6, 14, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 665598735, 'comment_body': 'indentation seems incorrect', 'comment_created': datetime.datetime(2021, 7, 7, 18, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 665600045, 'comment_body': 'Could you add a comment here for the underlying logic involved?', 'comment_created': datetime.datetime(2021, 7, 7, 18, 8, 47, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 665605048, 'comment_body': 'explorationId was already present for loading the exploration, profiled, topicId and storyId are added to mark the chapter as IN_PROGRESS_SAVED/NOT_SAVED. ProfileId is also used to save checkpoints.', 'comment_created': datetime.datetime(2021, 7, 7, 18, 16, 28, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 665606150, 'comment_body': 'this value has to be changed to true if we are testing anything related to checkpointing. The next PR contains the changes and tests that use this.', 'comment_created': datetime.datetime(2021, 7, 7, 18, 18, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 665608091, 'comment_body': 'removed this.', 'comment_created': datetime.datetime(2021, 7, 7, 18, 21, 18, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 665608176, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 7, 18, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 665610642, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 7, 18, 25, 13, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 665619032, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 7, 18, 38, 24, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 665622987, 'comment_body': 'We are not saving checkpoint after the answer is submitted on behalf of continue interaction because once the function submitAnswer completes and the exploration goes into viewing state, the stateFragment moves the exploration to the next state without any user interaction. So saving here as we do in any other interaction will cause us to save one unnecessary checkpoint.', 'comment_created': datetime.datetime(2021, 7, 7, 18, 44, 34, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 665659567, 'comment_body': 'indentation is auto-formated.', 'comment_created': datetime.datetime(2021, 7, 7, 19, 45, 24, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 665679021, 'comment_body': ""Isn't that also true for other interactions? I'm not sure that I see an important distinction here for why 'Continue' should be handled differently."", 'comment_created': datetime.datetime(2021, 7, 7, 20, 18, 9, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665679508, 'comment_body': 'For posterity: we discussed this over chat & suggested that we should use invokeOnCompletion with getCompleted rather than a DataProvider or suspend function.', 'comment_created': datetime.datetime(2021, 7, 7, 20, 18, 58, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665687492, 'comment_body': 'for any other interaction, after submitting the correct answer the user has  to press the continue button to go to the next state, so the user interacts with the UI twice before reaching the next state but with states with continue interaction, the user only interacts once with the UI when they press the continue button.\n\nso since their are no user interactions between the two checkpoints of continue interaction, we can skip saving one checkpoint', 'comment_created': datetime.datetime(2021, 7, 7, 20, 32, 56, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 666008448, 'comment_body': 'KDocs should always have a base summary fragment. Suggest just saying something like:\r\n\r\n```kotlin\r\n/**\r\n * Returns an [ExplorationCheckpoint] ...\r\n */\r\n```\r\n\r\nAlso, note that spacing continuation for an at-clause is +4 spaces.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 3, 14, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 666009264, 'comment_body': 'We ought to never use VisibleForTesting. Can we test this through the methods that call it, instead? Ie, that verifies the expected production behavior: under some conditions, those public API functions should result in a checkpoint being saved.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 4, 21, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 666009759, 'comment_body': ""Continuation is wrong here for at-clause: should be +4 from the '@'."", 'comment_created': datetime.datetime(2021, 7, 8, 9, 4, 59, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 666010486, 'comment_body': 'Please add an issue for this TODO or resolve it.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 6, 7, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 666084953, 'comment_body': '@BenHenning In the earlier approach, we had to acquire `exploration progress lock` twice, first to create a checkpoint and then again to update the `checkpointState` once the save operation has completed. This created a race condition that if the user exits the exploration after the save operation has started but has not finished, we might end up with the wrong `checkpointState`.\r\n\r\nBut with the current approach, we kick off the saving process, wait for it to complete and then update the checkpoint state without releasing the lock, so I think this eliminates the race condition. WDYT?', 'comment_created': datetime.datetime(2021, 7, 8, 10, 51, 42, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 666099971, 'comment_body': 'done.\r\nI will keep this in mind in future.', 'comment_created': datetime.datetime(2021, 7, 8, 11, 15, 52, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 666100080, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 8, 11, 16, 4, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 666126695, 'comment_body': 'For this PR, this function is being used to test if checkpoints are being saved, since the function to save checkpoints in the production code returns a deferred so for testing, this function creates a dataProvider from that deferred.\r\n\r\nFor the next PR this function will be used to save checkpoints so that we can have multiple checkpoints saved in the database to properly test those features of checkpointing that are not directly related with saving checkpoints.\r\n\r\nIf we remove this function, we can create `dataProviders` from the deferred in the classes `ExplorationCheckpointControllerTest` and `ExplorationCheckpointTestHelper` (added in the next PR).\r\n\r\n@BenHenning WDYT?\r\n', 'comment_created': datetime.datetime(2021, 7, 8, 11, 59, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 666319321, 'comment_body': 'Can we make the tag a bit clearer. CHECKPOINTING to me seems vague. Also avoid keeping it in all caps', 'comment_created': datetime.datetime(2021, 7, 8, 15, 51, 47, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 666319906, 'comment_body': ""Shouldn't it be a `Deferred<CheckpointState>` here? "", 'comment_created': datetime.datetime(2021, 7, 8, 15, 52, 29, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 666345752, 'comment_body': '@aggarwalpulkit596 Not sure about this. Will need to defer to @BenHenning on this.', 'comment_created': datetime.datetime(2021, 7, 8, 16, 26, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 666372626, 'comment_body': 'updated CHECKPOINTING to Lightweight checkpointing', 'comment_created': datetime.datetime(2021, 7, 8, 17, 4, 27, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 666372777, 'comment_body': 'updated the docs', 'comment_created': datetime.datetime(2021, 7, 8, 17, 4, 40, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 668180704, 'comment_body': ""Either this function is part of the class's API (which means it should be public/internal & have a KDoc explaining out to use it) in which case it'll have dedicated tests, or it's a helper for other functions in this controller & should be tested indirectly through those. In neither case should VIsibleForTesting be needed.\r\n\r\nIt seems like the latter since you have the async version of this function above. Could we use that to test this, instead?"", 'comment_created': datetime.datetime(2021, 7, 12, 19, 0, 35, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668181650, 'comment_body': ""I think it's necessary here since otherwise it's quite difficult to use Deferred. We also technically use the experimental API throughout the codebase (mostly for tests), and it seems pretty stable since it's been around for a few years now. This seems fine to me.\r\n\r\nHowever, @prayutsu we should also add this argument to the Bazel builds for tests & binaries, too."", 'comment_created': datetime.datetime(2021, 7, 12, 19, 2, 7, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668182763, 'comment_body': ""I don't think it does--we're still waiting for the save checkpoint Deferred to finish and we don't block the DataProvider on that. Things could change between submit answer and the saving completed which could introduce more data races. Ideally, we should ensure eventual consistency (i.e. regardless of the order of operations, the final outcome is still the correct one)."", 'comment_created': datetime.datetime(2021, 7, 12, 19, 4, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668191854, 'comment_body': ""@BenHenning  I have one question out of curiosity.  We will have to acquire lock to change anything in an exploration and since we are only releasing lock once the saving process is complete, shouldn't this ensure that the there is no race condition,"", 'comment_created': datetime.datetime(2021, 7, 12, 19, 19, 2, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 668565821, 'comment_body': 'added a TODO and filled a new issue for this #3467 ', 'comment_created': datetime.datetime(2021, 7, 13, 8, 56, 31, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 668905163, 'comment_body': 'This statement to me is a bit unclear. What `exception above` is this referring to? Maybe instead of mentioning it that way, provide the actual exception name ', 'comment_created': datetime.datetime(2021, 7, 13, 16, 2, 15, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 668905484, 'comment_body': 'Indentation here seems off. Maybe follow the same pattern as the lines above (i.e. put `If the size...` onwards as a new paragraph', 'comment_created': datetime.datetime(2021, 7, 13, 16, 2, 39, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 668907491, 'comment_body': 'Maybe add the same comment for why the hint index is -1 over here', 'comment_created': datetime.datetime(2021, 7, 13, 16, 4, 46, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 668907728, 'comment_body': 'Add a comment as to why the hint index is -1 here', 'comment_created': datetime.datetime(2021, 7, 13, 16, 5, 2, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 668909590, 'comment_body': ""Do we need a test for the case where the player reaches 'Continue' ? I think you have some special casing for that scenario right?"", 'comment_created': datetime.datetime(2021, 7, 13, 16, 7, 21, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 668910512, 'comment_body': 'Maybe CHECKPOINT_UNSAVED?', 'comment_created': datetime.datetime(2021, 7, 13, 16, 8, 29, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 668959011, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 13, 17, 10, 57, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 668959060, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 13, 17, 11, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 668959085, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 13, 17, 11, 3, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 668959131, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 13, 17, 11, 6, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 668959647, 'comment_body': 'changed the kdoc explanation.', 'comment_created': datetime.datetime(2021, 7, 13, 17, 11, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 668962686, 'comment_body': ""I don't think we need any additional test case for that because in the case of `Continue` we have just optimized a bit by saving one checkpoint instead of two."", 'comment_created': datetime.datetime(2021, 7, 13, 17, 16, 3, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669215863, 'comment_body': 'Please add these as ``@param``s to the KDoc above.', 'comment_created': datetime.datetime(2021, 7, 14, 1, 31, 43, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 669216162, 'comment_body': 'Maybe it might be clearer to instead pass in a value that indicates whether exploration progress should be saved, such as ``shouldSavePartialProgress``. The current name reads more as ""is this feature enabled"" rather than providing a condition under which the feature behaves differently. Ditto everywhere (including the parameter name for startPlayingExploration).', 'comment_created': datetime.datetime(2021, 7, 14, 1, 32, 40, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 669216982, 'comment_body': ""```suggestion\r\n   * Processes the result obtained upon complete execution of the function\r\n```\r\n\r\nNote the verb tense and the fact that the initial sentence of a method's KDoc summary is a sentence fragment. Ditto elsewhere."", 'comment_created': datetime.datetime(2021, 7, 14, 1, 35, 9, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 669217105, 'comment_body': ""Nit: at-clause summaries don't end in punctuation unless they have multiple snetences."", 'comment_created': datetime.datetime(2021, 7, 14, 1, 35, 30, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 669217297, 'comment_body': ""Suggest defining ``val`` here rather than using a ``lateinit var`` (the latter doesn't seem necessary in this context)."", 'comment_created': datetime.datetime(2021, 7, 14, 1, 36, 7, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 669217519, 'comment_body': 'Nit: end with punctuation.', 'comment_created': datetime.datetime(2021, 7, 14, 1, 36, 48, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 669218955, 'comment_body': '```suggestion\r\n    return ExplorationCheckpoint.newBuilder().apply {\r\n      addAllCompletedStatesInCheckpoint(previousStates.map { state ->\r\n        CompletedStateInCheckpoint.newBuilder().apply {\r\n          completedState = state.completedState\r\n          stateName = state.state.name\r\n        }.build()\r\n      })\r\n      pendingStateName = pendingTopState.name\r\n      hintIndex = revealedHintIndex\r\n      this.solutionIsRevealed = solutionIsRevealed\r\n      addAllPendingUserAnswers(currentDialogInteractions)\r\n      this.stateIndex = stateIndex\r\n      this.explorationVersion = explorationVersion\r\n      this.explorationTitle = explorationTitle\r\n      timestampOfFirstCheckpoint = timestamp\r\n    }.build()\r\n```\r\n\r\nMore Kotlin-idiomatic (per the ``map``), and conveniently in one expression to avoid saving the builder to a val (per the ``apply``).', 'comment_created': datetime.datetime(2021, 7, 14, 1, 41, 19, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 669219339, 'comment_body': ""There are a lot of branches in recordChapterAsInProgressNotSaved. Please make sure to add more tests to cover all of the different scenarios in which that method runs to ensure it's well covered."", 'comment_created': datetime.datetime(2021, 7, 14, 1, 42, 31, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 669221741, 'comment_body': '@MaskedCarrot that would be the case if not for the gap. The current flow is essentially:\r\n\r\n- Main thread (from UI class): perform some state change (such as submitting an answer)\r\n- Main thread (from progress controller): initiate save; acquire lock\r\n- Main thread (from checkpoint controller): call storeDataWithCustomChannelAsync\r\n- Main thread (from progress controller): call invokeOnCompletion\r\n- Main thread (from progress controller): return back to UI class with DataProvider corresponding to operation; release lock (not exactly; the critical section is smaller than indicated here but this better illustrates the point)\r\n- Background thread A (from checkpoint controller): initiate save operations, then finish\r\n- Background thread A (from progress controller via invokeOnCompletion callback): acquire lock, retrieve results & notify UI layer that the state data provider has changed, release lock\r\n\r\nNotice that two different threads are acquiring the lock at different times. The time it takes from when the UI thread releases the lock to invokeOnCompletion being called is potential for a race condition to occur.', 'comment_created': datetime.datetime(2021, 7, 14, 1, 50, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 669222326, 'comment_body': ""This seems like a dependency inversion, but I'm not sure what the alternative is at the moment."", 'comment_created': datetime.datetime(2021, 7, 14, 1, 51, 51, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 669222572, 'comment_body': ""Shouldn't this method also notify that the state DataProvider has changed since there's now new data to report to the UI? That part seems important to ensure the UI gets the most up-to-date snapshot of the current state of the controller has possible (to ensure the 'eventual consistency' principle I mentioned in my other comment)."", 'comment_created': datetime.datetime(2021, 7, 14, 1, 52, 34, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 669289585, 'comment_body': 'added more tests', 'comment_created': datetime.datetime(2021, 7, 14, 5, 0, 2, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669289616, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 14, 5, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669289641, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 14, 5, 0, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669289701, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 14, 5, 0, 15, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669289726, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 14, 5, 0, 17, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669289735, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 14, 5, 0, 19, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669289759, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 14, 5, 0, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669289785, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 14, 5, 0, 23, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669304796, 'comment_body': 'The expression `this.stateIndex = stateIndex`  is being interpreted as `ExplorationCheckpointBuilder.stateIndex =  ExplorationCheckpointBuilder.stateIndex`\r\n\r\nSo reverting back to original.', 'comment_created': datetime.datetime(2021, 7, 14, 5, 39, 23, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669314278, 'comment_body': 'As per your earlier comment, we should modify the ephemeral state to store the save state and then use the currentStateDataProvider to pull the save state in the state fragment when the user exits the exploration. But the exploration exits from the ExplorationActivtity and the currentStateDataProvider is in StateFragmentPresenter. So in order to get the save state in ExplorationActivity, we will have to get the currentStateDataProvider in ExplorationActivity, observe it and then pull the save state from there, now since we are reacquiring lock to compute ephemeral state I think we should just check the save state directly without modifying the ephemeral state.\r\n', 'comment_created': datetime.datetime(2021, 7, 14, 6, 1, 47, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669383942, 'comment_body': 'Understood. Thanks for the explanation.', 'comment_created': datetime.datetime(2021, 7, 14, 8, 2, 15, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669478751, 'comment_body': 'I think we should then verify that the optimization works as intended right? ', 'comment_created': datetime.datetime(2021, 7, 14, 10, 13, 33, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 669505886, 'comment_body': 'added a test that verifies that the optimization works as intended.', 'comment_created': datetime.datetime(2021, 7, 14, 10, 56, 50, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670046468, 'comment_body': 'Here & elsewhere: should this have a TODO for conditionally setting it true/false based on the completion status?', 'comment_created': datetime.datetime(2021, 7, 15, 0, 48, 51, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670046668, 'comment_body': 'Reminder to address this comment fully @prayutsu.', 'comment_created': datetime.datetime(2021, 7, 15, 0, 49, 24, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670046801, 'comment_body': ""Typo in word 'fail'"", 'comment_created': datetime.datetime(2021, 7, 15, 0, 49, 50, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670106165, 'comment_body': '```suggestion\r\n   * @param newCheckpointState is the latest checkpoint state that is returned upon\r\n   *      completion of the save operation for checkpoints either successfully or unsuccessfully.\r\n```\r\n\r\nContinuation is +4 from the normal KDoc spacing.', 'comment_created': datetime.datetime(2021, 7, 15, 3, 28, 51, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670106260, 'comment_body': 'Please provide context on what race condition is being referred to here.', 'comment_created': datetime.datetime(2021, 7, 15, 3, 29, 17, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670106355, 'comment_body': '```suggestion\r\n        // Only mark checkpoint if current state is pending state. This ensures that checkpoints\r\n```', 'comment_created': datetime.datetime(2021, 7, 15, 3, 29, 36, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670106483, 'comment_body': ""```suggestion\r\n   * Checks if checkpointing is enabled, if checkpointing is enabled this function creates a\r\n```\r\n\r\nSpacing is wrong for the KDoc (should just be 1 space from the '*'). Please fix here & anywhere else in the PR."", 'comment_created': datetime.datetime(2021, 7, 15, 3, 30, 1, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670106914, 'comment_body': ""I'm confused--wasn't the entire point of moving the saving to this controller to avoid the complexity of observing the save state in the UI layer? Couldn't we just save a value in StateFragment and call down to it from ExplorationActivity to see if it's set? That seems a lot simpler to me unless I'm missing something."", 'comment_created': datetime.datetime(2021, 7, 15, 3, 31, 36, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670108197, 'comment_body': 'My concern is that this special case is a bit too specific. I think what might be helpful is if you introduce a helper method to check whether the interaction auto-continues and, if it doesn\'t, then you save the exploration checkpoint. That helper could be as simple as:\r\n\r\n```kotlin\r\nprivate fun doesInteractionAutoContinue(interactionId: String): Boolean =\r\n  interactionId == ""Continue""\r\n```\r\n\r\nThis provides context as to why we\'re skipping it, and isolates the non-generic bit to a separate helper that could, in the future, be refactored if we add more auto-continuation interactions. ', 'comment_created': datetime.datetime(2021, 7, 15, 3, 36, 9, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670134497, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 15, 5, 1, 52, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670134563, 'comment_body': 'Do you mean these words: `early-failure` ?', 'comment_created': datetime.datetime(2021, 7, 15, 5, 2, 1, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670134604, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 15, 5, 2, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670134657, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 15, 5, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670134734, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 15, 5, 2, 29, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670135045, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 15, 5, 3, 23, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670136340, 'comment_body': 'changed the approach to the dataProvider approach.', 'comment_created': datetime.datetime(2021, 7, 15, 5, 7, 31, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670137894, 'comment_body': ""removed `visible for testing`. Now, this function is part of the class's API and is being used in testing."", 'comment_created': datetime.datetime(2021, 7, 15, 5, 12, 2, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670380062, 'comment_body': 'added the helper function.', 'comment_created': datetime.datetime(2021, 7, 15, 11, 34, 46, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670907518, 'comment_body': '```suggestion\r\n  /** Returns whether the specified interaction automatically continues the user to the next state upon completion. */\r\n```\r\n\r\nNeeds line wrapping.', 'comment_created': datetime.datetime(2021, 7, 16, 1, 41, 37, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670907664, 'comment_body': 'Nit: remove extra newline at the beginning of the message for consistency with other enums/messages.', 'comment_created': datetime.datetime(2021, 7, 16, 1, 42, 3, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670907897, 'comment_body': '```suggestion\r\n  // The current status of checkpointing the exploration.\r\n```\r\n\r\nMight be a bit clearer.', 'comment_created': datetime.datetime(2021, 7, 16, 1, 42, 52, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670908243, 'comment_body': '``may still fail to load``', 'comment_created': datetime.datetime(2021, 7, 16, 1, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670908952, 'comment_body': 'Latest changes now include this per discussion in the team meeting.', 'comment_created': datetime.datetime(2021, 7, 16, 1, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670909830, 'comment_body': '@prayutsu reminder.', 'comment_created': datetime.datetime(2021, 7, 16, 1, 49, 1, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670931798, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 16, 3, 2, 15, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670931810, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 16, 3, 2, 19, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670931848, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 16, 3, 2, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670931986, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 16, 3, 2, 54, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670953953, 'comment_body': '@MaskedCarrot Kindly follow up with @prayutsu and make sure it get resolved.', 'comment_created': datetime.datetime(2021, 7, 16, 4, 21, 52, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 670962354, 'comment_body': 'Marking as resolved as already done', 'comment_created': datetime.datetime(2021, 7, 16, 4, 47, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 670962409, 'comment_body': 'Marking as resolved as already done\r\n\r\n', 'comment_created': datetime.datetime(2021, 7, 16, 4, 47, 10, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 670966246, 'comment_body': ""Sorry, I'm not sure why I kept at-mentioning Abhay. @MaskedCarrot I meant to at-mention you. This needs to be resolved."", 'comment_created': datetime.datetime(2021, 7, 16, 4, 59, 9, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}]","[{'commit_sha': '51148fdb061126df311306e3bbf7f87cf30d2ab5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89b44bab962c5f7ff7a5fc750cea0781970d20f5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee7a8ab7ba1427fe2048e489502e23a5569b9b43', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47ed8787ba5772415b3ba6ae8132ad1d4da95043', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51100bba8e28653d297af5fc29fdd1d81354320a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14f2805472f0fcd735da3cc8638673ae958e52ed', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79f430b43c09fd1c83cb3e79e8733576e5237a02', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a46bed34daa3d9a1a401002a0812bd4e40fee05b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b62ec7fb77bddd4455e421911341106a41826073', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4b2380f90234e1d8feab24986b9b3b62f869651', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '372b786c71307b569e80ab0a454cec4f88648d0f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72bf72810bae28ae3662cb08ce80fea9d55ee7ab', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '894ef7d70224127bd05ca0c5e056a504ce6ef61f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5f0818a630419c55f86f1f6c11d22991bf3b5e0', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c26397541ded9f9165e8b07b24e71004ad668efb', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebd7ec5644d0b90e8b2e30c2eb7d9daff85f591f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5825b727e9a26682621cf35bde0d8c174e60a3f0', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee26301f6ff1cf69f18beddf19c60cf7a423d02d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5994f0a7b903c9358126db9dc46f344e58eb03de', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cfca4d2e0ff2d21752f3dd2212e487129082163', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fc512d898e95ed01c66604c91afdb2f0d5bb180', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30a281712349b32e47921750b59fbd3c8eca6980', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09bf7d7b5454555def3f7b225d308708d9a748dd', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12cc20993662788e1128baf2daad4f4039d81135', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04a36954fd4ca90e4ee8f8c9d0a4845fe86982aa', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cf493a1beaf2f5080cdebaeb2cd380f3bbc7817', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cdb4b9b708a8b158a95c836df91264d41fe8b54', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd45d6699a88b19f836af6ff3b4e993284ab1b96', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b35283a46777bfef54ae7923a03c400b0b9c9aa', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e9e3b5424f278b989a0d93a0e6867f91d856549', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b8adc53915ceea2f0ee551658849c68fe4f9269', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c545ec5f74edf81157471486960b7f1cf0c6fe3c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b089b92df1c5587423540088bd79e1aab17d5b0', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24806cddbe35451cff892a2f424552d09b8c0d3d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '125cd512f42b4884b619747442fe8dc028738673', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24192a876159f49a24804d50b9e7a774ae6d5cdb', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66b909d6d33b7b355e12ec3bc9827c39e0e27b38', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2826879ac980aca05495efab0ca107834d85139', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef2580fe9e414a374d452bcdcd7f2be8337afaf2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2965601823153080a2438f500c90ea1e3e5b8f77', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4393fe8c5eb922572ce05136c28bcd47a718dc1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '796330039af873f6521fa3f4a9d9492a1b2fae26', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00828b1768bb3aa63ae74250bbdb9d3268d1c554', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c20d8a62b9c2657e0585e000a8b6b7ba42081d06', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ff28e9d1c02d3e0e59d5da89582014284dfb198', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '603b6790739d9add6b39af9efa5dafdfc8825f09', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c27b99a1c49dc92c38a9b204ff25b6bfbfbadc70', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d23d5a52545a5313c08b371685e01382f45419e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c95fa898dd0d84db45bee3cc91e42d3908b44f1f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ce88172f95655695d1f5296162ccdcd956397bd', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5869c4915687b6a3a70bf67b53c48b8271c26bc', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7321596a1506040bd391905598a2e10161f82b87', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ea247cfbb53c524b3dfd336bb25077e7515dfab', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '567998e24a2752bd0c3b106914128c27a9ce31d0', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd38002dbd6cf9ad394cd28d67c149d7de5dbc06c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e4ee29ad5a20de410a8f25a9beca32458934571', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96f448dd926195d5f2abef3ec4443124c2c1886e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46b989ad17ff503d5edc55270341607c62829eae', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16b3cf4f29d40f0a1e301fa5306140edafe5502c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b6ee57474f9e7c7f07618cecf1acfb38d3e2dc5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}]",Apoorv Srivastava,53645584,,User,,28,,0,7
682970742,Fix #3327: Create app layer mechanism for saving checkpoints.,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->
## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->

Fixes #3327 

This PR is stacked on top of PR #3403

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.


## Testing the changes made in this PR

1. Checkpointing is disabled by default until a mechanism to resume checkpoints is also implemented. However it can be enabled by changing the value of the variable isCheckpointingEnabled and shouldSavePartialProgresss to true in TopicLessonsFragment.

2. Since size limit imposed on checkpoint database is set to 2MB, therefore the ProgressDatabaseFull dialog won’t be visible until checkpoint database exceeds 2MB in size So to view the ProgressDatabaseFull dialog box, enable checkpointing and then set the size limit to 0 in ExplorationStorageModule.


## Tests

Test | Espresso test result
---| ---
ExplorationActivityTest | ![Screenshot from 2021-07-06 10-23-43](https://user-images.githubusercontent.com/53645584/124545231-4a445000-de46-11eb-842d-e2cd248e0661.png)


## Dialog boxes after this PR

This PR introduces the following three dialog boxes: 

1. **StopExplorationDialog**: Visible to the user when the exit an exploration that is saved and size of checkpoint database has not exceeded.
2. **UnsavedProgressDialog**: Visible to the user when the progress is not saved ( this can happen if checkpointing fails or the lesson was previously completed). This dialog box is also visible to the user when they exit a practice session.
3. **ProgressDatabaseFullDialog**: Visible to the user when the progress is saved but the checkpoint database has exceeded the size limit.

<img src=""https://user-images.githubusercontent.com/53645584/124349148-6b6d2c80-dc0b-11eb-9a69-5fd44f5a587b.jpg"" align=""left"" height=""450"" width=""230"" >

<img src=""https://user-images.githubusercontent.com/53645584/124349494-e551e580-dc0c-11eb-8fef-021998a45df9.jpg"" align=""left"" height=""450"" width=""230"" >

<img src=""https://user-images.githubusercontent.com/53645584/124349480-d2d7ac00-dc0c-11eb-9a4e-bc9f5c6357cd.jpg"" align=""left"" height=""450"" width=""230"" >

",True,3402,https://api.github.com/repos/oppia/oppia-android/pulls/3402,https://github.com/oppia/oppia-android/pull/3402,closed,1475,95,33,126,18,58,1,2,[{'name': 'PR: LGTM'}],2021-07-03 05:30:28+00:00,2021-07-16 10:01:26+00:00,1139458.0,"13 days, 4:30:58","[{'comment_id': 666284076, 'comment_body': 'Why do we need to use `!!` complier should handle this since we have already added a null check', 'comment_created': datetime.datetime(2021, 7, 8, 15, 9, 34, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 666291107, 'comment_body': '`oldestExplorationId`  can be null but `deleteExplorationProgressById` expects it to be not null. `oldestExplorationId` will be null if there was some error while retrieving the oldest checkpoint.', 'comment_created': datetime.datetime(2021, 7, 8, 15, 17, 56, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 666316680, 'comment_body': 'Add `@param` and `@return` annotations (here and below)', 'comment_created': datetime.datetime(2021, 7, 8, 15, 48, 29, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 666339010, 'comment_body': 'can we update the comment in a bit more understandable way? ', 'comment_created': datetime.datetime(2021, 7, 8, 16, 16, 59, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 666344284, 'comment_body': 'Do we need to update this in all test files? if any?', 'comment_created': datetime.datetime(2021, 7, 8, 16, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 666386192, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 8, 17, 24, 47, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 666395444, 'comment_body': '` TestExplorationStorageModule` is added to the test file where we need to change the size of the checkpoint database to test a few specific checkpointing features. \r\n\r\nThe test files that need this module are:\r\n\r\n1. ExplorationActivityTest\r\n2. ExplorationDataControllerTest\r\n3. ExplorationProgressControllerTest\r\n4. ExplorationCheckpointControllerTest', 'comment_created': datetime.datetime(2021, 7, 8, 17, 38, 54, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 666395612, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 8, 17, 39, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 666396954, 'comment_body': '`!!` removing this gives an error.', 'comment_created': datetime.datetime(2021, 7, 8, 17, 41, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 668553112, 'comment_body': 'Removed `!!`\r\n', 'comment_created': datetime.datetime(2021, 7, 13, 8, 40, 44, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669597491, 'comment_body': 'These consts are getting used only in `Presenter`. Lets shift them there and make it private.', 'comment_created': datetime.datetime(2021, 7, 14, 13, 7, 5, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 669602341, 'comment_body': 'I think this was named considering the `oldest progress` concept in mind but here we can use `explorationId` as it will always be either null or Id of the current exploration.\r\n\r\nWDYT?\r\n\r\nSame for Title.', 'comment_created': datetime.datetime(2021, 7, 14, 13, 13, 7, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 669602824, 'comment_body': 'Add `KDoc` to these public functions.', 'comment_created': datetime.datetime(2021, 7, 14, 13, 13, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 669602869, 'comment_body': 'Add `KDoc` to these public functions.', 'comment_created': datetime.datetime(2021, 7, 14, 13, 13, 43, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 669602941, 'comment_body': 'Add `KDoc` to these public functions.', 'comment_created': datetime.datetime(2021, 7, 14, 13, 13, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 669605407, 'comment_body': 'It should be `ExplorationActivity`', 'comment_created': datetime.datetime(2021, 7, 14, 13, 16, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 669606627, 'comment_body': 'Make this private', 'comment_created': datetime.datetime(2021, 7, 14, 13, 18, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 669607154, 'comment_body': 'Nit space\r\n`/* backflowScreen= */ null,`', 'comment_created': datetime.datetime(2021, 7, 14, 13, 18, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 669607993, 'comment_body': 'Why was this removed? We need this check to make sure the app is accessible by all and tests pass on it.', 'comment_created': datetime.datetime(2021, 7, 14, 13, 19, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 669615299, 'comment_body': '@rt4914 This will not be the id of the current exploration instead it is the explorationId of the exploration which has the oldest saved progress in the database.', 'comment_created': datetime.datetime(2021, 7, 14, 13, 28, 39, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669671480, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 14, 14, 31, 51, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669671510, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 14, 14, 31, 52, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669671533, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 14, 14, 31, 54, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669671556, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 14, 14, 31, 55, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669671592, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 14, 14, 31, 57, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669671628, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 14, 14, 31, 58, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669671656, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 14, 14, 32, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669671685, 'comment_body': 'renamed this to `oldestCheckpointExplorationId`', 'comment_created': datetime.datetime(2021, 7, 14, 14, 32, 2, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669671775, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 14, 14, 32, 7, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669680397, 'comment_body': ""Don't use this function, we use testcoroutinedispatchers class and ignore using this wait fucntion"", 'comment_created': datetime.datetime(2021, 7, 14, 14, 41, 13, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 669681137, 'comment_body': 'Are all test in this class passing on robolectric?', 'comment_created': datetime.datetime(2021, 7, 14, 14, 42, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 669686931, 'comment_body': 'Yes, all tests added here are passing on robolectric', 'comment_created': datetime.datetime(2021, 7, 14, 14, 48, 17, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 669694409, 'comment_body': 'This function is not being used by any of the tests added in this PR. `waitForMatch` has a TODO to solve this.', 'comment_created': datetime.datetime(2021, 7, 14, 14, 56, 6, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670074350, 'comment_body': 'Ack.', 'comment_created': datetime.datetime(2021, 7, 15, 2, 15, 43, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670082297, 'comment_body': 'remove this function as this is not getting used by any function', 'comment_created': datetime.datetime(2021, 7, 15, 2, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 670109488, 'comment_body': 'Function KDocs shouldn\'t start with ""This function..."". Instead, start with the verb.\r\n\r\nDitto everywhere in this PR.', 'comment_created': datetime.datetime(2021, 7, 15, 3, 41, 1, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670110097, 'comment_body': 'The verb tense & capitalization is wrong here & above--please update to be consistent with the broader codebase & our conventions.', 'comment_created': datetime.datetime(2021, 7, 15, 3, 43, 5, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670110324, 'comment_body': ""Please never create strings programmatically--we should always use variable interpolation from strings.xml so that translators can rearrange the string correctly. Ditto anywhere else this might've been done in this PR."", 'comment_created': datetime.datetime(2021, 7, 15, 3, 43, 59, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670110719, 'comment_body': ""This experience seems confusing to me--'Continue' doesn't indicate to the user that they are about to delete progress. What do the PRD & mocks specify in this case?"", 'comment_created': datetime.datetime(2021, 7, 15, 3, 45, 29, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670111086, 'comment_body': ""We shouldn't use exceptions in this way. Exceptions should only be used in exceptional cases. Here, we expect these errors to potentially happen which means returning an enum status would probably be clearer & avoids the potential confusion that these exceptions are catching actual errors vs. legitimate states.\r\n\r\nAlso, conceptually it's a successful state if the checkpoint can't be saved for some detected reason. AsyncResult's error state should also be exception/reserved for unexpected issues that are detected."", 'comment_created': datetime.datetime(2021, 7, 15, 3, 46, 57, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670154425, 'comment_body': 'changed the approach to dataProvider approach so this is above changes are no longer needed.', 'comment_created': datetime.datetime(2021, 7, 15, 5, 54, 44, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670156097, 'comment_body': 'The mocks say continue. Although they also say click to continue in the dialog description. What should the buttons be here?\r\n\r\n![Screenshot from 2021-07-15 11-27-51](https://user-images.githubusercontent.com/53645584/125736406-10d35be4-f54e-43dc-ab6d-7ea4bd7d8418.png)\r\n', 'comment_created': datetime.datetime(2021, 7, 15, 5, 58, 23, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670159566, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 15, 6, 5, 2, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670159580, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 15, 6, 5, 3, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670166791, 'comment_body': 'changed this to use variable interpolation.', 'comment_created': datetime.datetime(2021, 7, 15, 6, 20, 10, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670244157, 'comment_body': 'And also if I add the line ""Click continue to proceed"", do I add it in continuation with the dialog description or after leaving a line like shown in the mock?', 'comment_created': datetime.datetime(2021, 7, 15, 8, 22, 34, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670250646, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 15, 8, 31, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670656302, 'comment_body': 'These names can be a bit misleading.', 'comment_created': datetime.datetime(2021, 7, 15, 17, 5, 55, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670904483, 'comment_body': '```suggestion\r\n    // This function is not needed because there is no progress that is being saved in training\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 1, 31, 22, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670904671, 'comment_body': ""So I think my concern here is that the training session experience shouldn't even show the flow that results in progress being deleted (i.e. I'd expect the old dialog to show up & neither of these methods to get called)."", 'comment_created': datetime.datetime(2021, 7, 16, 1, 31, 55, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670904905, 'comment_body': ""I'm not sure that I understand @MaskedCarrot. What does the current UI look like?"", 'comment_created': datetime.datetime(2021, 7, 16, 1, 32, 45, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670905513, 'comment_body': 'These actually should have tests to verify that their buttons perform the expected results.', 'comment_created': datetime.datetime(2021, 7, 16, 1, 34, 52, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670930081, 'comment_body': 'There are tests to verify the buttons works correctly in ExplorationActivityTest', 'comment_created': datetime.datetime(2021, 7, 16, 2, 56, 35, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670933265, 'comment_body': 'The current UI looks like this \r\n\r\n<img src=""https://user-images.githubusercontent.com/53645584/124349480-d2d7ac00-dc0c-11eb-9a4e-bc9f5c6357cd.jpg"" align=""left"" height=""450"" width=""230"" >', 'comment_created': datetime.datetime(2021, 7, 16, 3, 7, 44, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670933660, 'comment_body': ""The user still sees the old dialog box with every thing is exactly the same as it was from the user's viewpoint.\r\nBut the code for this has changed since from explorations progress also has to be deleted. \r\n\r\nSince all the existing dialog boxes have progress associated with them (saved, unsaved and databaseFull), so should I file a new issue that after milestone 1 the training session should have a new dialog box?"", 'comment_created': datetime.datetime(2021, 7, 16, 3, 8, 52, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 670934318, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 16, 3, 11, 22, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 671105649, 'comment_body': 'As discussed over chat, we resolved the confusion & the code has been cleaned up to be a lot clearer.', 'comment_created': datetime.datetime(2021, 7, 16, 9, 30, 57, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671106233, 'comment_body': ""As discussed in chat, nearly all files should have tests to verify them in isolation but we're making an exception here for this PR since the dialogs are still being tested via ExplorationActivityTest."", 'comment_created': datetime.datetime(2021, 7, 16, 9, 31, 42, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}]","[{'commit_sha': '51148fdb061126df311306e3bbf7f87cf30d2ab5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89b44bab962c5f7ff7a5fc750cea0781970d20f5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee7a8ab7ba1427fe2048e489502e23a5569b9b43', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47ed8787ba5772415b3ba6ae8132ad1d4da95043', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51100bba8e28653d297af5fc29fdd1d81354320a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14f2805472f0fcd735da3cc8638673ae958e52ed', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79f430b43c09fd1c83cb3e79e8733576e5237a02', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a46bed34daa3d9a1a401002a0812bd4e40fee05b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b62ec7fb77bddd4455e421911341106a41826073', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4b2380f90234e1d8feab24986b9b3b62f869651', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '372b786c71307b569e80ab0a454cec4f88648d0f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72bf72810bae28ae3662cb08ce80fea9d55ee7ab', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '894ef7d70224127bd05ca0c5e056a504ce6ef61f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5f0818a630419c55f86f1f6c11d22991bf3b5e0', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c26397541ded9f9165e8b07b24e71004ad668efb', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebd7ec5644d0b90e8b2e30c2eb7d9daff85f591f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5825b727e9a26682621cf35bde0d8c174e60a3f0', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee26301f6ff1cf69f18beddf19c60cf7a423d02d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cb5dea7df0db3ae0c470d6e0dee163748863ed2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '026a25f6203204a6d412cbdc6d986e0121348319', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ecd9520b672385612440fad0a1875a45b9b4883', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c32da023eafc592e1f495c9e4ea8a2c88fc3e05', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5994f0a7b903c9358126db9dc46f344e58eb03de', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cfca4d2e0ff2d21752f3dd2212e487129082163', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fc512d898e95ed01c66604c91afdb2f0d5bb180', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adef42c28ebf9867d83285d6413b213a0779ac8c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1a967c5a19f0976f4f38330b82fe6649e4b1869', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3b332fa27ce344f9219f98f4cf81cdfb1915bfa', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47f71afea6b06db0b9d6ac4dec043582dbaf7747', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8356eec3e4db3f105f018094dd8a631bf8010b5d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eda66b4465733d4c451530bf1b8d20312d2541ea', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2fc5083bf386271033a32e77c7d543b98717f9d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c70a400fee7f75d9a9d338369e4035801c13ef3', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f457f0b8deb7f849aae31738843795d2ab50303c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55a556ac260914c28efc117bdfeb255024ea124a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5102e03ec80857122bb31110aa1d925e8f1e1d9', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66eaa53370f78ae990dad9b1ae49129e91a69f5a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0b259c5d47495413bd3c470e34d3959b047f49f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30a281712349b32e47921750b59fbd3c8eca6980', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09bf7d7b5454555def3f7b225d308708d9a748dd', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12cc20993662788e1128baf2daad4f4039d81135', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04a36954fd4ca90e4ee8f8c9d0a4845fe86982aa', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cf493a1beaf2f5080cdebaeb2cd380f3bbc7817', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cdb4b9b708a8b158a95c836df91264d41fe8b54', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd45d6699a88b19f836af6ff3b4e993284ab1b96', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad51ecec6b8ecc5b72fa9df3121767eebf8b814c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a22dd34076cf8b1b750c320d826930e3b3e48d5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06e728575ad5a557a98ea283ee387a3be40d2f81', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da584930ed32bb77044efa97ad5bbe01bf2054f8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '302e224a3ea6affeadc0937c68ef00887230c80d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b35283a46777bfef54ae7923a03c400b0b9c9aa', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e9e3b5424f278b989a0d93a0e6867f91d856549', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4af8bd9763efc95cf4b83ad62f035ef41392a4c7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b8adc53915ceea2f0ee551658849c68fe4f9269', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3690079c3a9998dcf030b5d9505632cabc4135ab', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bdb9b95829a1b7a8b0da1ccec345dc1a85e6ea0', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c97035071a37c540b640e30daada74457974efdb', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f756c3d90338fe03aecb84c74494e5ae0b10ad10', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c545ec5f74edf81157471486960b7f1cf0c6fe3c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b089b92df1c5587423540088bd79e1aab17d5b0', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3801b69cad01eeb73700d49b776eea6f42953052', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc5da30d8b2e6324a344444bf27b007c4d9e7d3c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24806cddbe35451cff892a2f424552d09b8c0d3d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '125cd512f42b4884b619747442fe8dc028738673', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24192a876159f49a24804d50b9e7a774ae6d5cdb', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19c3535cb616b4c70513087488363aef8060c855', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66b909d6d33b7b355e12ec3bc9827c39e0e27b38', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ea06f1049aa8905ca43688337303adc0f071900', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2826879ac980aca05495efab0ca107834d85139', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef2580fe9e414a374d452bcdcd7f2be8337afaf2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2965601823153080a2438f500c90ea1e3e5b8f77', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4393fe8c5eb922572ce05136c28bcd47a718dc1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12414e7860815c25b408d8318d0fd0cef12fd0a1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f92ac187a4ad7045956b4f14610a624d7096bc55', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '796330039af873f6521fa3f4a9d9492a1b2fae26', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00828b1768bb3aa63ae74250bbdb9d3268d1c554', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c20d8a62b9c2657e0585e000a8b6b7ba42081d06', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ff28e9d1c02d3e0e59d5da89582014284dfb198', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cc19b88f228e0646185fbf4d0a68f4d58e60a46', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '897b22e96556048972d6c487d6ee60a9c264c8d2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '603b6790739d9add6b39af9efa5dafdfc8825f09', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d35650c8071085dce70fd9ac10a3a36d4823963', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c9a6f5732ed836cc8eac300df142f3d82fbda98', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c27b99a1c49dc92c38a9b204ff25b6bfbfbadc70', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd76f44b1b83a4f717a357f918415fa3e96873540', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d23d5a52545a5313c08b371685e01382f45419e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aaaa6158b7fbde865a97595e1474e8ad9cb439bc', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32bf6bc43c37ea411b14289e4b19e90e35b1a30a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c95fa898dd0d84db45bee3cc91e42d3908b44f1f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ddaad2d77d4fe7bd16919f5390ccdcde57b3ca8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ce88172f95655695d1f5296162ccdcd956397bd', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5869c4915687b6a3a70bf67b53c48b8271c26bc', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47d620a210a48953dde9317e007d5e9bff5fea59', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10a1f4b372a7137a5989d45012fbf0f0394e266e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e49e54ad4c99346cb6bcdcac89610b7b934f827c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7321596a1506040bd391905598a2e10161f82b87', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b788af88565cd876dadbe9594edbdde260f17f0e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ea247cfbb53c524b3dfd336bb25077e7515dfab', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '059f36d0a03d4585ff9225baf762679c24e56e9c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0dc43f486ea03da402301714bf07382ab53a242', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b973d0b2c83911b9b23ac37b67d70a0b57f49a0b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bef2fecc54a81a51468b9489aa19d27e6a699c86', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c662af4f6f5d47e2c59530d7add403f0898beaf3', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '567998e24a2752bd0c3b106914128c27a9ce31d0', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd38002dbd6cf9ad394cd28d67c149d7de5dbc06c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a445b9172d2388d354218e8962d2b77af81bc27f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e4ee29ad5a20de410a8f25a9beca32458934571', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f762c99fab01d4e3f61bc861362ad498a32a9a8e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3c7f97e27746c8e9458b0651c899b8de911f988', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd77bbc1d59087efa6707eb6da943661f2233a53', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96f448dd926195d5f2abef3ec4443124c2c1886e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffe0846aabcf2e25b000955d832c612d73320057', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46b989ad17ff503d5edc55270341607c62829eae', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af714a49a2f5fd63961f965f8e7bff3b50dd11c3', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5de4704ee06f5d39eae0359a5151fdf383cf7b03', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16b3cf4f29d40f0a1e301fa5306140edafe5502c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c8ccd8a64027509930bbfd41ef1f110fb67e65c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aece72d1f95c7c1d5f642dcb38391376ee5c1228', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa62510fa22bde31ea78869ab3594fca0ec36eae', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b6ee57474f9e7c7f07618cecf1acfb38d3e2dc5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da201e4181886e197ab1218892200d460c036620', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76bbc258b703350fdc3876735b9b681544c86d25', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1996f29bdc109802495814f60b728796afa96b2b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1947d69a216087a34af2c45f25c8b8c9d61b141', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a6b22c9c838c18ade9b06bbb1aa20f2bdf17212', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca1ba6ebd50682c9695ad300b722d0e66cdd790f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}]",Apoorv Srivastava,53645584,,User,,28,,0,7
691976660,Fix #3487: Make changes to UI to indicate partial progress of explorations.,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->

Fixes #3487 

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.

## Espresso Tests

#### RecentlyPlayedFragmentTest
![Screenshot from 2021-07-18 12-46-35](https://user-images.githubusercontent.com/53645584/126060176-13e40e20-101b-42de-bd0f-caddfd702089.png)

#### TopicLessonsFragmentTest
![Screenshot from 2021-07-27 14-35-46](https://user-images.githubusercontent.com/53645584/127128811-27bbd70f-7098-4dc1-8748-fac49faac78f.png)

 <img src=""https://user-images.githubusercontent.com/53645584/127629274-e4550a79-1949-40b0-8df1-07cf8989952f.jpeg"" width=""200"" height=""400""> 

## Steps to see these changes or a real/emulator device
1. Change the value of the variables `shouldSavePartialProgress` and `isCheckpointingEnabled` to true in TopicLessonsFragmentPresenter or replace topicLessonsFragmentPresneter with[ this ](https://gist.github.com/MaskedCarrot/78050f3c96c64fddd3efaec182cc2d4e) file.
2. Run the app
3. start any exploration from the topic lessons tab. Exit it partially complete.
4. see changes.


",True,3500,https://api.github.com/repos/oppia/oppia-android/pulls/3500,https://github.com/oppia/oppia-android/pull/3500,closed,2663,527,21,22,17,89,0,1,[],2021-07-17 19:17:14+00:00,2021-08-10 22:47:23+00:00,2086209.0,"24 days, 3:30:09","[{'comment_id': 671802505, 'comment_body': 'This test was incorrectly passing on robolectic and was failing on espresso.\r\n\r\nTitle on RecentlyPlayedActivtiy changes depending upon the chapters played. But it takes time to update the title. Adding delay after launching the activity makes this test fail on robolectric too. \r\n\r\nThis test is now passing.', 'comment_created': datetime.datetime(2021, 7, 18, 8, 6, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 675433278, 'comment_body': 'Can we move it to helper function since this is being written here twice?\r\n', 'comment_created': datetime.datetime(2021, 7, 23, 9, 39, 3, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 675433750, 'comment_body': 'can we use lateinit instead of making it nullable?', 'comment_created': datetime.datetime(2021, 7, 23, 9, 39, 51, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 675433993, 'comment_body': 'Cleanup logs', 'comment_created': datetime.datetime(2021, 7, 23, 9, 40, 17, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 677262880, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 27, 9, 6, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 677262920, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 27, 9, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 677263912, 'comment_body': 'This makes it consistent with `chapterFinishedArcPaint`. Doing these two with a helper function and `chapterFinishedArcPaint` without a helper function might be slightly misleading.', 'comment_created': datetime.datetime(2021, 7, 27, 9, 7, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 677264080, 'comment_body': 'WDYT?', 'comment_created': datetime.datetime(2021, 7, 27, 9, 7, 37, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 679830775, 'comment_body': 'Since that is also using a similar process i would suggest moving both of them to a helper function.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 45, 16, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 679831355, 'comment_body': 'Can you all caps here?', 'comment_created': datetime.datetime(2021, 7, 30, 10, 46, 25, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 679862727, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 30, 11, 46, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 679862786, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 30, 11, 46, 32, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 681420532, 'comment_body': 'Please add tests related to content description also.\r\nSimilar to `testLessonsPlayFragment_loadRatiosTopic_completeStoryProgress_contentDescriptionIsCorrect`\r\nlike\r\n`testLessonsPlayFragment_loadRatiosTopic_partialStoryProgress_contentDescriptionIsCorrect`', 'comment_created': datetime.datetime(2021, 8, 3, 4, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 681451998, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 3, 5, 46, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 682376477, 'comment_body': ""This removal seems unrelated to your PR, please revert.\r\n\r\n(If this file isn't actually needed, I suggest removing it in a separate PR)."", 'comment_created': datetime.datetime(2021, 8, 4, 7, 52, 31, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682377440, 'comment_body': 'Can the file be deleted if all of its contents are being deleted?', 'comment_created': datetime.datetime(2021, 8, 4, 7, 53, 49, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682381445, 'comment_body': 'I suggest also adding a test for the combined case to make sure all three types are correctly combined & sorted.', 'comment_created': datetime.datetime(2021, 8, 4, 7, 59, 21, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682381943, 'comment_body': ""Why shorten 'correct'? There seems to be plenty of test name room, and 'Crt' doesn't conventionally mean 'correct' (which means people will likely struggle when trying to understand this & other updated test names below)."", 'comment_created': datetime.datetime(2021, 8, 4, 8, 0, 2, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682382508, 'comment_body': ""```suggestion\r\n  fun testPromotedList_markFracStory0Exp0StartedNotCompleted_ongoingStoryListCorrect() {\r\n```\r\n\r\nAlternative naming that might help with the 'correct' issue. Ditto for other tests.\r\n\r\nNote that it's also fine to follow different abbreviation rules for the longer test names. The previous ones help provide context by being more explicit, anyway."", 'comment_created': datetime.datetime(2021, 8, 4, 8, 0, 46, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682383606, 'comment_body': ""Does 'recently played' still make sense in this context given that concept sort of doesn't exist anymore (or, rather, it's non-specific since there are multiple states that lead to 'recently played')?"", 'comment_created': datetime.datetime(2021, 8, 4, 8, 2, 15, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682384277, 'comment_body': ""This test indicates potentially wrong logic unless I missed something in the PRD. 'Recently played' should only be lessons that are in-progress, not completed ones."", 'comment_created': datetime.datetime(2021, 8, 4, 8, 3, 14, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682385233, 'comment_body': ""When exactly does this case happen? Aren't all chapters effectively not started, in-progress saved, in-progress not saved, or completed at this point in the UX?"", 'comment_created': datetime.datetime(2021, 8, 4, 8, 4, 31, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682390542, 'comment_body': ""Similarly, is this still needed since the concept of recently played has changed here? Ditto for all other 'recently played' methods in this class."", 'comment_created': datetime.datetime(2021, 8, 4, 8, 11, 52, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682398443, 'comment_body': 'Nice test scenario to cover & for the next two.', 'comment_created': datetime.datetime(2021, 8, 4, 8, 22, 40, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682399522, 'comment_body': '```suggestion\r\n  fun testMarkChapterAsStartedNotCompleted_onOneProfile_notStartedOnOtherProfile() {\r\n```\r\n\r\nPlease fix this (preexisting) typo in other similar test names.', 'comment_created': datetime.datetime(2021, 8, 4, 8, 24, 11, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682642556, 'comment_body': 'This part slightly confuses me, we used to call those chapters as recently played which were marked as `STARTED_NOT_COMPLETED` but now a lesson that was left partially complete by the learner can be marked as either \r\n- `STARTED_NOT_COMPLETED` (if the lesson was left partially completed before we introduced checkpointing)\r\n- `IN_PROGRESS_SAVED`\r\n- `IN_PROGRESS_NOT_SAVED`\r\n\r\nSo I think we should call a lesson as recently played if the lesson has been left partially complete by the user.\r\nSimilarly, with stories, we should only call a story as recently played if it has one or more lessons fully/partially completed but all lessons are not completed.\r\n\r\n@BenHenning  WDYT?', 'comment_created': datetime.datetime(2021, 8, 4, 13, 58, 7, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 682655604, 'comment_body': 'Following this above explanation, this test checks that since we have only one lesson of the story 0 of fractions topic partially complete, so the size of onGoingStoryList should be equal to 1.', 'comment_created': datetime.datetime(2021, 8, 4, 14, 12, 13, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 682657851, 'comment_body': 'This can happen for those lessons which were left partially complete by the user before they updated the app to a version that supports checkpointing.', 'comment_created': datetime.datetime(2021, 8, 4, 14, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 682938490, 'comment_body': 'deleted this file because it is no longer used as we have defined checkpoint state as a message in exploration.proto.', 'comment_created': datetime.datetime(2021, 8, 4, 20, 32, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 682938556, 'comment_body': 'done.', 'comment_created': datetime.datetime(2021, 8, 4, 20, 32, 28, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 682938585, 'comment_body': ""reverted 'Crt` to `Correct`."", 'comment_created': datetime.datetime(2021, 8, 4, 20, 32, 31, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 682938624, 'comment_body': 'removed this test and the function that marked the lesson as recently played in storyProgressTestHelper.', 'comment_created': datetime.datetime(2021, 8, 4, 20, 32, 36, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 682938998, 'comment_body': 'removed this because recently played now includes in_progress_saved, in_progress_not_saved and started_not_completed.', 'comment_created': datetime.datetime(2021, 8, 4, 20, 33, 11, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 682939074, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 4, 20, 33, 16, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 682939358, 'comment_body': 'reverted this file.', 'comment_created': datetime.datetime(2021, 8, 4, 20, 33, 40, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 682987598, 'comment_body': 'added a test to verify the ongoing list is correct when one lesson each for each of the three chapterPlayStates.', 'comment_created': datetime.datetime(2021, 8, 4, 21, 58, 16, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 683212837, 'comment_body': ""Prefer not adding this since it'll affect everyone."", 'comment_created': datetime.datetime(2021, 8, 5, 7, 48, 29, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683213698, 'comment_body': 'Ditto here for ``Crt`` per my earlier comment. Consider:\r\n\r\n``testStoryList_markLessons_progressSaved_notSaved_startedNotDone_ongoingListCorrect``\r\n\r\nWould that work?', 'comment_created': datetime.datetime(2021, 8, 5, 7, 49, 37, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683214367, 'comment_body': '```suggestion\r\n   * Marks all lessons as started, but not completed. For specifics on parameters and nuances, see:\r\n```\r\n\r\nPrefer expanding this out. Ditto for other KDocs.', 'comment_created': datetime.datetime(2021, 8, 5, 7, 50, 33, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683215522, 'comment_body': 'Hmm. I might have mis-saw something, but it seems yesterday like the file was just being emptied & not deleted. It looks correct now, though. Thanks!', 'comment_created': datetime.datetime(2021, 8, 5, 7, 52, 12, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683218214, 'comment_body': 'Ah, so the main issue here (& the reason we need to keep all the ""started_not_completed"" stuff) is for interoperability? If that\'s the case, I actually lean toward us just dropping the enum entirely and, when reading progress, revert the state back to NOT_COMPLETED if we encounter that type. This reduces a pretty large surface area that we need to maintain in the codebase, and given that we don\'t have very many users of the app it should have small impact on the existing userbase. It also self-corrects reasonably well when you start playing lessons again.\r\n\r\nLonger-term (e.g. the pathway from lightweight to full checkpointing) we will need to ensure interoperability, but given the cost here it doesn\'t seem worth the complexity given the app is still pre-release.', 'comment_created': datetime.datetime(2021, 8, 5, 7, 55, 57, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683258473, 'comment_body': '@BenHenning Do you mean we change the state of the lessons marked as STARTED_NOT_COMPLETED to NOT_STARTED? if so can we change the lessons that are STARTED_NOT_COMPLETED to IN_PROGRESS_NOT_SAVED because these lessons were started but do not have any progress saved for them?', 'comment_created': datetime.datetime(2021, 8, 5, 8, 50, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 683265565, 'comment_body': 'I accidentally modified this file in one of the commits, so I reverted this file back to its original state in my last commit. I used `git checkout commitId -- .idea/runConfigurations.xml` to do this. Is it the right way to handle these kinds of situations?', 'comment_created': datetime.datetime(2021, 8, 5, 8, 59, 19, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 683761179, 'comment_body': 'yes that works, changed the test name', 'comment_created': datetime.datetime(2021, 8, 5, 20, 21, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 683775389, 'comment_body': 'Dropping the enum would just mean the following, \r\n- removing the function that marks lessons as started not completed in storyProgressController\r\n- removing started not completed lessons from the promoted story list\r\n- removing all the tests that check app behaviour when the lesson is marked as started_not_completed.\r\n\r\nApart from the above points, I think there should not be any other work (since this PR already has those tests for in_progress_saved/not_saved which we will be removing for started_not_completed.) \r\n\r\nSo I think we should drop started_not_completed in a separate PR while fixing this issue #3479  because lessons will be marked as in_progress_saved/not_saved only after that is merged (until then we will be marking lessons as started_not_completed).\r\n\r\n@BenHenning WDYT?', 'comment_created': datetime.datetime(2021, 8, 5, 20, 46, 6, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 683776083, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 5, 20, 47, 14, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 683993328, 'comment_body': ""following up with Ben's earlier comment regarding the `Crt` -> Correct. \r\n\r\n```kt\r\nfun testLessonsFragment_ratiosTopic_partialStoryProgressInExp0_contentDescriptionIsCorrect()\r\n```"", 'comment_created': datetime.datetime(2021, 8, 6, 6, 56, 41, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 683993620, 'comment_body': 'We can apply the same with other test naming, and this will also prevent the 100 char limit.  ', 'comment_created': datetime.datetime(2021, 8, 6, 6, 57, 12, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 683994135, 'comment_body': '```suggestion\r\n  private fun verifyChapterCompletedIconIsDisplayedAtPosition(itemPosition: Int) {\r\n```', 'comment_created': datetime.datetime(2021, 8, 6, 6, 58, 12, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 683994436, 'comment_body': 'This will help in understanding what exactly the function do and for what it is required', 'comment_created': datetime.datetime(2021, 8, 6, 6, 58, 51, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 683994496, 'comment_body': '```suggestion\r\n  private fun verifyPartialProgressIconIsDisplayedAtPosition(itemPosition: Int) {\r\n```', 'comment_created': datetime.datetime(2021, 8, 6, 6, 58, 57, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 683994578, 'comment_body': '```suggestion\r\n  private fun verifyChapterPlayStateIconIsNotVisibleAtPosition(itemPosition: Int) {\r\n```', 'comment_created': datetime.datetime(2021, 8, 6, 6, 59, 8, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 683994620, 'comment_body': '```suggestion\r\n  private fun verifyChapterPlayStateIconIsVisibleAtPosition(itemPosition: Int) {\r\n```', 'comment_created': datetime.datetime(2021, 8, 6, 6, 59, 14, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 683995697, 'comment_body': '```suggestion\r\n  private fun verifyChapterPlayStateIconContentDescriptionMatchesAtPosition(\r\n```', 'comment_created': datetime.datetime(2021, 8, 6, 7, 1, 22, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 683996414, 'comment_body': 'Add description of arguments in kdoc using  `@param ` ', 'comment_created': datetime.datetime(2021, 8, 6, 7, 2, 47, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 683996665, 'comment_body': 'Add description of arguments in kdoc using  `@param ` ', 'comment_created': datetime.datetime(2021, 8, 6, 7, 3, 18, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 683996726, 'comment_body': 'Add description of arguments in kdoc using  `@param ` ', 'comment_created': datetime.datetime(2021, 8, 6, 7, 3, 22, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 683996768, 'comment_body': 'Add description of arguments in kdoc using  `@param ` ', 'comment_created': datetime.datetime(2021, 8, 6, 7, 3, 28, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 683996813, 'comment_body': 'Add description of arguments in kdoc using  `@param ` ', 'comment_created': datetime.datetime(2021, 8, 6, 7, 3, 33, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 683996966, 'comment_body': 'Add description of arguments in kdoc using  `@param ` ', 'comment_created': datetime.datetime(2021, 8, 6, 7, 3, 52, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 683997004, 'comment_body': 'Add description of arguments in kdoc using  `@param ` ', 'comment_created': datetime.datetime(2021, 8, 6, 7, 3, 56, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 683997034, 'comment_body': 'Add description of arguments in kdoc using  `@param ` ', 'comment_created': datetime.datetime(2021, 8, 6, 7, 4, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 683997081, 'comment_body': 'Add description of arguments in kdoc using  `@param ` ', 'comment_created': datetime.datetime(2021, 8, 6, 7, 4, 6, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 683997197, 'comment_body': 'ditto for all', 'comment_created': datetime.datetime(2021, 8, 6, 7, 4, 20, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 683997771, 'comment_body': 'we can remove this if not needed', 'comment_created': datetime.datetime(2021, 8, 6, 7, 5, 34, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 684457674, 'comment_body': 'added param to the kdoc of the first method for all chapterPlayState. All other methods mention the name of the first function in the comments for more details.', 'comment_created': datetime.datetime(2021, 8, 6, 19, 24, 24, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 684457761, 'comment_body': 'added to markInProgressNotSavedTestTopic0Story0Exp0', 'comment_created': datetime.datetime(2021, 8, 6, 19, 24, 36, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 684457855, 'comment_body': 'added to markInProgressSavedTestTopic0Story0Exp0', 'comment_created': datetime.datetime(2021, 8, 6, 19, 24, 47, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 684457953, 'comment_body': 'added to markStartedNotCompletedTestTopic1Story2Exp0', 'comment_created': datetime.datetime(2021, 8, 6, 19, 24, 58, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 684458088, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 6, 19, 25, 14, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 684458144, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 6, 19, 25, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 684458189, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 6, 19, 25, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 684458223, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 6, 19, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 684458242, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 6, 19, 25, 31, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 684458254, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 6, 19, 25, 33, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 684458269, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 6, 19, 25, 35, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 684458292, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 6, 19, 25, 39, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 684458303, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 6, 19, 25, 40, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 684458327, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 6, 19, 25, 42, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 684458357, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 6, 19, 25, 45, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 684458396, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 6, 19, 25, 50, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 684458444, 'comment_body': 'I think we should keep this comment because, this comment tells that the following tests are related to those chapters that are started.', 'comment_created': datetime.datetime(2021, 8, 6, 19, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 685537166, 'comment_body': '```suggestion\r\n   * Marks all lessons as started, but not yet completed. For specifics on parameters and nuances, see:\r\n```', 'comment_created': datetime.datetime(2021, 8, 9, 21, 34, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685537394, 'comment_body': ""I don't think this was fully resolved, but I left a newer comment."", 'comment_created': datetime.datetime(2021, 8, 9, 21, 35, 11, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685538557, 'comment_body': ""Generally, I recommend not using commands like ``git commit -a`` since then you can carefully control what you stage for commit. My workflow is usually:\r\n\r\n```\r\ngit add app/*\r\ngit add domain/*\r\n...\r\ngit status\r\ngit commit\r\n```\r\n\r\n(And then I fill in the error message using a command-line text editor). This helps me avoid adding unrelated files. Note that the 'git status' specifies exactly which files will be committed."", 'comment_created': datetime.datetime(2021, 8, 9, 21, 37, 22, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685540656, 'comment_body': '> @BenHenning Do you mean we change the state of the lessons marked as STARTED_NOT_COMPLETED to NOT_STARTED? if so can we change the lessons that are STARTED_NOT_COMPLETED to IN_PROGRESS_NOT_SAVED because these lessons were started but do not have any progress saved for them?\r\n\r\nYes, this is exactly what I meant.\r\n\r\n\r\n\r\n> Dropping the enum would just mean the following,\r\n> \r\n> * removing the function that marks lessons as started not completed in storyProgressController\r\n> * removing started not completed lessons from the promoted story list\r\n> * removing all the tests that check app behaviour when the lesson is marked as started_not_completed.\r\n> \r\n> Apart from the above points, I think there should not be any other work (since this PR already has those tests for in_progress_saved/not_saved which we will be removing for started_not_completed.)\r\n> \r\n> So I think we should drop started_not_completed in a separate PR while fixing this issue #3479 because lessons will be marked as in_progress_saved/not_saved only after that is merged (until then we will be marking lessons as started_not_completed).\r\n> \r\n> @BenHenning WDYT?\r\n\r\nFixing this as part of #3479 sounds good to me, so long as it does get fixed. Could you file an issue to explicitly track this particular task & make sure it gets tracked in your project accordingly? It can be resolved in the same PR that resolves #3479, but being explicit with a separate task will help ensure we can track the solution.', 'comment_created': datetime.datetime(2021, 8, 9, 21, 41, 26, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685548268, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 9, 21, 56, 23, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 685548532, 'comment_body': 'thanks.', 'comment_created': datetime.datetime(2021, 8, 9, 21, 56, 57, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 685549726, 'comment_body': 'Filed a new issue (#3662) to solve this. Also added todos.', 'comment_created': datetime.datetime(2021, 8, 9, 21, 59, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}]","[{'commit_sha': '3c316cbb5d8dd493e7b899a84c73f7a17ffa9f25', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '521490aeca05d1d7c6ce27fb9a46eaeb1fcd0abd', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fea9a961879cd8317ed59247c5aefec75e994c7a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8398cdfc5de0f994007119f3e75c5ba278bba593', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c059b774b098ef82501e33de9354a5d46dcd0eec', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1eb649a7b6b7e3d3e65dc9ded31fc5aaa84d762', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bc3d36e3cbe3e3e8b4f60cd44241aafd882b70f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ada3dbf5230912128d91492b56452038afebc24', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf91ac4ce56842f936c2126b225b732aece3c068', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3347b6d89fee606058e20109207070bc56e50e9', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c88a453278ec6ee3976c1d7cd0aa9057463dcd79', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e169f3fbe06a5edab14d716fd213e50d935d64ad', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20a70902ee9b2a5758aacf98366a0eb5507de046', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29ade0d03732871fe5e25bdda53f8424b9d818b5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea7ee0bd94551370de9effcd0519de7350d9210b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e25804faff7e80313153be6551b8a28682b57f4e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6ca0992c0520246c491e09cdd02f4be044bdd1f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15241a5c0557d5b0e10373a380cf5956fd289af7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e31c649b19ff1eedbdca19ce055f0d5700ad72f0', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c16793d1702f4cc368cd2dff6b59ff725013625', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3dbf1e13b38f889da196f96512dcaa252688e89c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ffb3faf2de06e1a51a6238bff5f7fe9e4f41ce4', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}]",Apoorv Srivastava,53645584,,User,,28,,0,7
708227118,Fix #3488: Domain layer mechanism to resume explorations.,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation

Fix #3488 
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [ ] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.

### Espresso Tests
#### ExplorationActivityTest
![Screenshot from 2021-08-20 03-04-28](https://user-images.githubusercontent.com/53645584/130150246-71e9d4f0-6cee-480e-b229-f741ec6f30fb.png)

#### StateFragmentTest (only the new test added)
![Screenshot from 2021-08-20 03-24-41](https://user-images.githubusercontent.com/53645584/130150290-3710199a-b3c8-4118-9a5a-e272d729f7ff.png)


",True,3668,https://api.github.com/repos/oppia/oppia-android/pulls/3668,https://github.com/oppia/oppia-android/pull/3668,closed,1812,241,20,86,10,87,0,1,[],2021-08-11 05:22:49+00:00,2021-08-21 22:16:19+00:00,924810.0,"10 days, 16:53:30","[{'comment_id': 686940404, 'comment_body': ""Since we are passing this to every function call and the value is the same too, shouldn't we make it a default argument in the function definition itself? \r\n@BenHenning @rt4914 Your thoughts?"", 'comment_created': datetime.datetime(2021, 8, 11, 15, 27, 17, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 686948246, 'comment_body': 'Kdocs missing', 'comment_created': datetime.datetime(2021, 8, 11, 15, 35, 59, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 687068659, 'comment_body': 'This is a temporary measure, it is changed in the following PRs ( when we add update the app layer mechanism to start exploration.)', 'comment_created': datetime.datetime(2021, 8, 11, 18, 18, 58, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 687256149, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 11, 23, 16, 28, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 688330580, 'comment_body': 'I think I lean toward this being explicit given that one ""happy path"" is passing something non-default in.', 'comment_created': datetime.datetime(2021, 8, 13, 8, 14, 38, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688332662, 'comment_body': ""FWIW, KDocs aren't required for private members (per https://developer.android.com/kotlin/style-guide#usage), but they're definitely fine to add."", 'comment_created': datetime.datetime(2021, 8, 13, 8, 17, 56, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688334498, 'comment_body': ""This feels a bit like something that should be in the progress class itself since it's all about properly initializing the progress state. I suggest moving it over to keep this controller a bit more focused on its direct public API implementations."", 'comment_created': datetime.datetime(2021, 8, 13, 8, 20, 52, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688335706, 'comment_body': '```suggestion\r\n    return when (helpIndex.indexTypeCase) {\r\n      HelpIndex.IndexTypeCase.HINT_INDEX -> {\r\n        pendingStateHintList.forEachIndexed { index, hint ->\r\n          if (index < helpIndex.hintIndex) {\r\n            // Mark all hints as visible and revealed which have an index less than that stored in\r\n            // the HintState.\r\n            listOf(hint.toBuilder().setHintIsRevealed(true).build())\r\n          } else if (index == helpIndex.hintIndex) {\r\n            // Add the currently shown hint to the updated hint list and set hintIsRevealed\r\n            // depending upon if the current hint was revealed or not.\r\n            listOf(hint.toBuilder().setHintIsRevealed(helpIndex.isAllVisibleHelpRevealed).build())\r\n          } else {\r\n            // Add all the remaining hints that are not yet visible to the user to the updated hint\r\n            // list.\r\n            listOf(hint.toBuilder().setHintIsRevealed(false).build())\r\n          }\r\n        }\r\n      }\r\n      HelpIndex.IndexTypeCase.SHOW_SOLUTION, HelpIndex.IndexTypeCase.EVERYTHING_REVEALED -> {\r\n        // All the hints are visible and revealed if helpIndex.indexTypeCase is equal to\r\n        // SHOW_SOLUTION or EVERYTHING_REVEALED.\r\n        pendingStateHintList.forEach { hint ->\r\n          listOf(hint.toBuilder().setHintIsRevealed(true).build())\r\n        }\r\n      }\r\n      else -> pendingStateHintList\r\n    }\r\n```\r\n\r\nBetter to avoid mutable state. Ditto elsewhere.', 'comment_created': datetime.datetime(2021, 8, 13, 8, 22, 47, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688336343, 'comment_body': '```suggestion\r\n   * @return [List] of [EphemeralState]s containing all the states that were completed before the\r\n```', 'comment_created': datetime.datetime(2021, 8, 13, 8, 23, 53, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688336719, 'comment_body': 'Per the above suggestion, you could use ``mapIndexed`` here, instead, to avoid the mutable list.', 'comment_created': datetime.datetime(2021, 8, 13, 8, 24, 31, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688337834, 'comment_body': 'I think this means that the next hint will default to the first hint\'s initial triggering criteria vs. the ""next hint"" criteria (per the diagram in HintHandler\'s documentation). Is that expected from a UX/product perspective?', 'comment_created': datetime.datetime(2021, 8, 13, 8, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688991478, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 21, 0, 44, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 688991500, 'comment_body': 'changed to mapIndexed', 'comment_created': datetime.datetime(2021, 8, 14, 21, 0, 56, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 688991505, 'comment_body': 'changed to mapIndexed', 'comment_created': datetime.datetime(2021, 8, 14, 21, 1, 6, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 688991527, 'comment_body': 'moved to exploration progress', 'comment_created': datetime.datetime(2021, 8, 14, 21, 1, 22, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 688991852, 'comment_body': 'actually, it does not matter what we set the delay here because the delay is recomputed based on the ephemeral state before anything is visible to the user. I set it to -1 as a default value because elsewhere we are using -1 to indicate that no timer should be scheduled.', 'comment_created': datetime.datetime(2021, 8, 14, 21, 5, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 689263808, 'comment_body': 'Add a `@param` annotation here', 'comment_created': datetime.datetime(2021, 8, 16, 6, 17, 49, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 689263980, 'comment_body': 'Add a `@return` annotation as well', 'comment_created': datetime.datetime(2021, 8, 16, 6, 18, 14, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 689264073, 'comment_body': 'Add an `@return` annotation too', 'comment_created': datetime.datetime(2021, 8, 16, 6, 18, 32, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 689265107, 'comment_body': 'Avoid modifying existing proto fields. Instead you can deprecate fields 5 and 6 and keep 7 as is.\r\ni.e. \r\n```\r\nreserved 5,6;\r\n\r\n// ....\r\nstring exploration_title = 7;\r\n\r\n// ...\r\nstring exploration_version = 8;\r\n\r\n.....\r\nHelpIndex help_index = 10;\r\n```', 'comment_created': datetime.datetime(2021, 8, 16, 6, 21, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 689447698, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 16, 11, 17, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 689447722, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 16, 11, 17, 22, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 689447757, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 16, 11, 17, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 689447786, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 16, 11, 17, 27, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 691823012, 'comment_body': '```suggestion\r\n   * Restores the hint handler to a previously cached state so that the user can continue where they\r\n   * left off.\r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 6, 31, 40, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691823284, 'comment_body': '```suggestion\r\n   * @param helpIndex the cached state of hints/solution from the checkpoint\r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 6, 32, 8, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691823866, 'comment_body': '```suggestion\r\n   * @param hintCount the total number of hints available in the restored pending state\r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 6, 33, 18, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691824251, 'comment_body': 'Please add HintHandler-specific tests for the new behaviors introduced in this method.', 'comment_created': datetime.datetime(2021, 8, 19, 6, 33, 57, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691832506, 'comment_body': ""This is semantically a bit strange. We'd expect a new state to have no answers to continue with.\r\n\r\nMaybe instead we should have an API for HintHandler that's resuming for a given state, e.g. something like:\r\n\r\n``fun resumeHintsForSavedState(trackedWrongAnswerCount: Int, helpIndex: HelpIndex, state: State)``\r\n\r\nwhere we call that instead of this method in the event that we're restoring things. I think that'll simplify stuff a bit since it also avoids needing to restore the HintHandler in ExplorationProgress (which seems a bit odd since that class otherwise doesn't care at all about HintHandler)."", 'comment_created': datetime.datetime(2021, 8, 19, 6, 48, 57, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691833181, 'comment_body': ""I suggest instead just making this resume & doing the check at the callsite since it avoids needing to recheck the state in multiple places. You can also reduce the hedging in the documentation since things become much more crisp: it's just restoring state, no conditions."", 'comment_created': datetime.datetime(2021, 8, 19, 6, 50, 6, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691835241, 'comment_body': ""Here & elsewhere in the updated/new tests: what is this verification attempting to ensure? It seems unnecessary.\r\n\r\nEdit: I realized this is needed for tests that then use the retrieved state so I revise this comment to only correspond to tests that don't use the current state."", 'comment_created': datetime.datetime(2021, 8, 19, 6, 53, 49, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691836320, 'comment_body': 'Can this fit on one line?\r\n\r\n```suggestion\r\n    assertThat(currentState.checkpointState).isEqualTo(CheckpointState.CHECKPOINT_UNSAVED)\r\n```\r\n\r\nPrefer to pack everything onto one line unless it needs to wrap. Ditto elsewhere.', 'comment_created': datetime.datetime(2021, 8, 19, 6, 55, 43, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691837047, 'comment_body': ""```suggestion\r\n  fun testCheckpointing_saveCheckpoint_checkCheckpointStateIsSuccessful() {\r\n```\r\n\r\nWe should be a bit more specific as to what 'correct' is when we can be.\r\n\r\nDitto for the other new tests."", 'comment_created': datetime.datetime(2021, 8, 19, 6, 56, 49, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691837531, 'comment_body': ""Why was this hit in this test? I'm not seeing anything in the arrangement that would result in the database being full."", 'comment_created': datetime.datetime(2021, 8, 19, 6, 57, 38, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691839671, 'comment_body': '```suggestion\r\n    testCoroutineDispatchers.advanceTimeBy(TimeUnit.SECONDS.toMillis(30))\r\n    endExploration()\r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 7, 1, 11, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691839888, 'comment_body': '```suggestion\r\n\r\n    // Verify that the helpIndex.IndexTypeCase is equal EVERYTHING_IS_REVEALED because all available\r\n```\r\n\r\nFor this & the above comment, we should make sure the arrange, act, and assert blocks are clearly spearated in the test.\r\n\r\nDitto for the other tests.', 'comment_created': datetime.datetime(2021, 8, 19, 7, 1, 37, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691841086, 'comment_body': 'Overall, the new tests are really good.\r\n\r\nI suggest also adding 1 test that completes a few states, resumes, completes a few more, then resumes again and finishes the exploration to demonstrate multiple start/stops & that a restored exploration can be successfully finished.\r\n\r\nI also suggest adding a test that shows finishing an exploration results in no/an empty checkpoint being saved (unless this test already exists?).', 'comment_created': datetime.datetime(2021, 8, 19, 7, 3, 39, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 692098098, 'comment_body': 'I have changed the size limit allocated to the checkpoint database, for testing this controller the size is set to 150 Bytes. This value is set so that the checkpoint database exceeds the allocated size limit when the second checkpoint is saved for TEST_EXPLORATION_ID_2', 'comment_created': datetime.datetime(2021, 8, 19, 13, 14, 7, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692241953, 'comment_body': 'added more tests.', 'comment_created': datetime.datetime(2021, 8, 19, 15, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692242170, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 15, 37, 41, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692242538, 'comment_body': 'updated test names', 'comment_created': datetime.datetime(2021, 8, 19, 15, 37, 59, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692243258, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 15, 38, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692243578, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 15, 38, 44, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692243723, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 15, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692243831, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 15, 38, 55, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692243947, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 15, 39, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692244128, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 15, 39, 7, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692456389, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 20, 20, 53, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693259172, 'comment_body': ""Why doesn't this work on Robolectric?"", 'comment_created': datetime.datetime(2021, 8, 20, 23, 10, 58, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693265276, 'comment_body': '```suggestion\r\n   * once when the the exploration is resumed.\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 23, 36, 40, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693265291, 'comment_body': '```suggestion\r\n   * @param state the restored pending state\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 23, 36, 45, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693265385, 'comment_body': '```suggestion\r\n   * Starts watching for potential hints to be shown when the exploration is resumed (e.g. if a\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 23, 37, 8, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693266261, 'comment_body': '```suggestion\r\n  fun testCheckpointing_revealedHintIsVisible_resumeExp_wait10Seconds_solutionIsNotVisible() {\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 23, 41, 27, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693266476, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2021, 8, 20, 23, 42, 30, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693266568, 'comment_body': ""Should this instead be verifying that the solution isn't visible, and that the index type is not SHOW_SOLUTION?"", 'comment_created': datetime.datetime(2021, 8, 20, 23, 42, 56, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693267090, 'comment_body': 'Suggest reverting since this can still fit on one line.', 'comment_created': datetime.datetime(2021, 8, 20, 23, 45, 24, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693267748, 'comment_body': '```suggestion\r\n        SHOW_SOLUTION, EVERYTHING_REVEALED -> {\r\n          // 1 is subtracted from the hint count because hints are indexed from 0.\r\n          lastRevealedHintIndex = state.interaction.hintCount - 1\r\n          latestAvailableHintIndex = state.interaction.hintCount - 1\r\n          solutionIsAvailable = true\r\n          solutionIsRevealed = helpIndex.indexTypeCase == EVERYTHING_REVEALED\r\n        }\r\n```\r\n\r\nSimplification.', 'comment_created': datetime.datetime(2021, 8, 20, 23, 48, 29, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693268166, 'comment_body': '```suggestion\r\n        NEXT_AVAILABLE_HINT_INDEX, LATEST_REVEALED_HINT_INDEX -> {\r\n          lastRevealedHintIndex = if (helpIndex.indexTypeCase == NEXT_AVAILABLE_HINT_INDEX) {\r\n            helpIndex.nextAvailableHintIndex - 1\r\n          } else helpIndex.nextAvailableHintIndex\r\n          latestAvailableHintIndex = helpIndex.nextAvailableHintIndex\r\n          solutionIsAvailable = false\r\n          solutionIsRevealed = false\r\n        }\r\n```\r\n\r\nSimplification (may require directly importing NEXT_AVAILABLE_HINT_INDEX).', 'comment_created': datetime.datetime(2021, 8, 20, 23, 49, 50, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693268348, 'comment_body': '```suggestion\r\n      NetworkConnectionDebugUtilModule::class\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 23, 50, 50, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693268810, 'comment_body': '```suggestion\r\n```\r\n\r\nThe ``val state`` bit is part of the arrangement block. Ditto for other similar tests.', 'comment_created': datetime.datetime(2021, 8, 20, 23, 52, 46, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693269095, 'comment_body': 'For each of these new tests where the monitor is called, please also add corresponding tests that verify the current HelpIndex state.', 'comment_created': datetime.datetime(2021, 8, 20, 23, 54, 17, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693269217, 'comment_body': 'These are really nice tests to verify that restoration works as expected. Please also add the two other missing cases & related wait tests) for SHOW_SOLUTION and EVERYTHING_REVEALED.', 'comment_created': datetime.datetime(2021, 8, 20, 23, 54, 53, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693269537, 'comment_body': 'Can we also verify that the checkpoint is empty?', 'comment_created': datetime.datetime(2021, 8, 20, 23, 56, 34, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693269760, 'comment_body': 'Ah. Can you add a single line comment explaining that here to help contextualize it?', 'comment_created': datetime.datetime(2021, 8, 20, 23, 57, 32, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693270508, 'comment_body': ""Copying from https://github.com/oppia/oppia-android/pull/3668#discussion_r691835241 since that comment seemed to break on GitHub somehow.\r\n\r\nHere & elsewhere in the updated/new tests: what is this verification attempting to ensure? It seems unnecessary.\r\n\r\nEdit: I realized this is needed for tests that then use the retrieved state so I revise this comment to only correspond to tests that don't use the current state."", 'comment_created': datetime.datetime(2021, 8, 21, 0, 1, 41, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693274786, 'comment_body': ""This does not work on robolectric because we can't move past the drag and drop state of the exploration on robolectric yet. \r\n\r\nAlso the logic for deleting progress is being tested in exploration activity test by the testing the altert dialog boxes."", 'comment_created': datetime.datetime(2021, 8, 21, 0, 27, 18, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693277430, 'comment_body': 'There will be no empty checkpoint saved here, the most recent checkpoint that is saved in this case is when the user comes to the terminal state (i.e. the pending state changes). After that when the user clicks on the ""Return to Topic"" button, the saved progress for this lesson will be deleted.', 'comment_created': datetime.datetime(2021, 8, 21, 0, 45, 27, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693277526, 'comment_body': 'We are verifying that the progress is deleted successfully on clicking the ""Return to topic"" button in StateFragmentTest', 'comment_created': datetime.datetime(2021, 8, 21, 0, 46, 14, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693278447, 'comment_body': 'added an assert statement to ensure the solution is not revealed. \r\nAlso, checking that the index type is `last revealed hint index`  instead of verifying that it is not `show solution` also ensures that the index type case is not some other value (for example index type not set)', 'comment_created': datetime.datetime(2021, 8, 21, 0, 52, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693278457, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 21, 0, 52, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693278460, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 21, 0, 52, 27, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693278462, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 21, 0, 52, 28, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693278465, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 21, 0, 52, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693278467, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 21, 0, 52, 32, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693278483, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 21, 0, 52, 34, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693278506, 'comment_body': 'simplified', 'comment_created': datetime.datetime(2021, 8, 21, 0, 52, 46, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693278509, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 21, 0, 52, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693278514, 'comment_body': 'done while resolving conflicts', 'comment_created': datetime.datetime(2021, 8, 21, 0, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693278531, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 21, 0, 52, 53, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693289657, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 21, 2, 24, 36, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693324274, 'comment_body': ""Ah, I misread the code before. Honestly, it's probably more readable the other way since we can't simplify it like the solution cases."", 'comment_created': datetime.datetime(2021, 8, 21, 8, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693324576, 'comment_body': ""```suggestion\r\n  fun testResumeHints_stateWithOneHint_hintRevealed_wait30Seconds_helpIndexHasSolution() {\r\n```\r\n\r\nOtherwise it's slightly confusing that it's jumping straight to the solution.\r\n\r\nAlso, typo in 'revealed' here & elsewhere. Please fix."", 'comment_created': datetime.datetime(2021, 8, 21, 8, 24, 3, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693324775, 'comment_body': ""Thanks for clarifying that! Sometimes it's hard to review merge commits."", 'comment_created': datetime.datetime(2021, 8, 21, 8, 27, 14, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693324905, 'comment_body': 'Ah, drag and drop is definitely an issue then. Thanks for clarifying.\r\n\r\nAnd FWIW it should be possible to test AlertDialogs in Robolectric.', 'comment_created': datetime.datetime(2021, 8, 21, 8, 28, 24, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693342005, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 21, 11, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693345914, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 21, 11, 59, 2, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693347097, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 21, 12, 11, 41, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}]","[{'commit_sha': 'd66c0148b5974b6aab63f3712ed0f8af78c8422e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b0bfb6f034c5807545bb9d92fc71b41382548dc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc7c5136d060bc1b7d0442a5d55d2930a09285d7', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a64024c235017b3ac6100e81e9815e7e3831514', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4aa847e5dc4dc770a37f852bc89218d4b6a3e12', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77c4fb70cd708641533adb951fcc96548186d227', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0deb6504ff1b3c2af069498edf0d231ae10e79a8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7b78d14db3265b9efe9290b4dacc4f68e260387', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1036c25dbade6dc1046210e84c708dde1257dbd0', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46e35f0370982377715ba65488b6391bc800b39e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '846d808dd65fbdd844f16e8dfe009c3aacec9196', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '863688f89a27ea6fe6ed5ec70b206981e468288f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c04252948c9bf64322bde4a893376c1cf5267676', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '218e07074abb479edaa2ac279c344662a8558fad', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebeb0e578ba7d9cc1ced9b9dd2d57033e04d3021', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ed23236c558653bcbee7d814534af391878fea8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c41c23a9ef048dfa6cc1c6e4893569501aa0a91d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '496aff77fb3297c844f846b0e996cdaa1d51c9ca', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05ff96242f61cfcd7cadaf8f83816ea6d6add0c6', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84375611c272f48935aa2b50882a4602e3074af1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e264a0b766fbe8e8c3123577d3792f54718483a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c3f4321ed64dd731e29206e66deb427094cb939', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5738c09304d88886d93aca27551d252ab9d4251e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9245e517e6ad4786b565d86350c2a679f91dd3e9', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '641e8ded0cd9024de1666a31439709cd5970bb76', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da6d06541e584d2b4a4d50d9f9b9429dd3ad011d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2955c0cb67a52e538e64b405c082145e08b9a50b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf3fcb4b125053f5efecbeac25f1b3fb88e1019a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5aba93fdd17d4cc69949b27f3337757943326c6', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e648ea000b0924b82f45442f693a370621a255f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7071c0bddcb6f18ec88f7de02195f7f6df3500c2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b023759febbdc7fed699c9b6bc038d349d34be1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6ce739c455a3556ed65ff8521e50916a21a414f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '739d72b86c4fb5415b34d7cd86e86f4a231acda7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85c44071fa2ee1ef4dac11a87dacf24e82e1f1ec', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2a337368633efbe7f55a1f9913143561b22ecce', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '591b45b11f2179500c366563acd91d79eaff1f67', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c568b6e448da503a6fe3dbe9dc425f303bf998fe', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c01d2ccd85a4ac57d1aa7419996f35fe4b29cde1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80ec45a3744af702c9fd9073083b3397059b1147', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4aeb1b8a465b3588dfc786e349239bb6c58bffe1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8014e8053ff3345e14fb92c416256effa47dd4ca', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17c08b62de74814fb1521b334b7ae6ffaaf751ce', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22fd63ed11df5321d24e6777e93b0e5169935acd', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de49a312aaefc68672bca572fb79b664ad515d9a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6659858f0b85a0bf0c51f23af600769eac64b938', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3787fe89fc7832bb1bb5fa2c24dff17b538b1363', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3142aa9682c0cb6dcc44940b1c0db3a0abf71db', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8526167a64273037dfe1c7d55557d994a9cf0f1a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abecc74e175d28b77a625937f97f9bdc4ae59d5c', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '109c346345c98e0a94fc5348e2a340eb0a2ac2d4', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '994cdea9020b1e940c04d333bbb20fe4f5afcb90', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41294d08730004a45b4048532e0cee67b99400fd', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a905c704f100f6610cdae9a8db68ef794f3040e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff734094abd677b1143f677e8e51eece2895d0b0', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d4dcfc77857b0e6e87bbdde1e149400ad9124ee', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '465711d7b088494af26c4052cafa8ac46c690ba7', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15ea3683b30c436d3efaec7c8b7fa5f16f38ed07', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '028e4cef5dd0c9468a401a847fe21c1db3974b25', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '486cf5b4b4f1758cbfd97d216e844b5c96a90cb4', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f7beb3d04be406ee3b5d06cb2047ae1c449a655', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e5b94593b25fc361bc83800b3e535cafaa064bf', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2fea908a65af8c11b5ed135f59cec38e807f251', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1622c00d33f584ae727f0c9c4434ad773bc80a2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd531024296282c281971255c48f118594ce440c7', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40f07baf519e971ff6e2c8aa7f63fce6449f0599', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a89640e7266d038e8c50f580af0cf1fa4c293502', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '958932ff1ae29b61f743a563d1bf8a4cf44cfb85', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92347bd043e33cf716e8213f40c6af1ffcd30bea', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1aa94c923bbeb10914645c306fc9301859d70658', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '777afbbec617b999afa7c77019c419e38aef50aa', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae66b5132089b887261c0540900c4dd00c8a1eac', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19c9e09315c622baff46979e40d801cada5bab64', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '335e2169cd7340a787f705ef84eec90229255da2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94d69630c3aea982b20ee85df807985b217b074f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b77adc796cc858c5e56c13554a5c7293324a266', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8a40a6024d0107a53c5131b7554e98f8731f293', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6014263487c12b20331c3bbb247898b03797acf', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '539cce0eb8c30628cc4f236488f8632711082e98', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0adcd6542df6bed1639c274ef171045667df70ee', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20f61e57feb893815b9f4f088933bd28239a84f7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8145242ba677db53beb755da8c3839ac0141a35c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '643ba8874ffdf33dc3aeb4443a939d62224cca88', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f44b2744af7f19212d5ec5223ac86c05a78e6d35', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e19051a56fc049cb9fc95fe006ca186a977a0165', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67e7bbde1144c5611fcd5e6c95ab378cc6d87e25', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}]",Apoorv Srivastava,53645584,,User,,28,,0,7
710620669,Fix #3490 Add resume lesson activity [Blocked on #3488],"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->

Fixes #3490 

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [ ] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.


## Final result
#### Mobile
<img src=""https://user-images.githubusercontent.com/53645584/127312752-52223154-dce6-4639-a323-2fc2d5b9590a.jpeg"" width=""200"" height=""355"">  <img src=""https://user-images.githubusercontent.com/53645584/127316556-36d4f50a-fcb6-4812-b172-9c1a5b3ca0ec.jpeg"" width=""355"" height=""200"">

#### Tablet

<img src=""https://user-images.githubusercontent.com/53645584/127344982-1a60d6d8-c934-41e4-bfe1-d0efc7ed9850.png"" width=""300"" height=""420""> <img src=""https://user-images.githubusercontent.com/53645584/127344588-df7bccb6-3698-438c-9683-2a783dbb90fa.png"" width=""420"" height=""300"">

### Espresso test
#### ResumeLessonActivityTest
![Screenshot from 2021-08-20 14-57-26](https://user-images.githubusercontent.com/53645584/130214763-e94572c7-9a73-4a57-a848-a84ef65bf183.png)

#### ResumeLessonFragmentTest
![Screenshot from 2021-08-20 14-56-19](https://user-images.githubusercontent.com/53645584/130214759-536cb9e2-5e85-4567-afd5-b06a7255250d.png)
![Screenshot from 2021-08-20 15-11-46](https://user-images.githubusercontent.com/53645584/130214765-4a789b1a-1dd9-4ed8-9bff-1fcf8f3fb925.png)

",True,3670,https://api.github.com/repos/oppia/oppia-android/pulls/3670,https://github.com/oppia/oppia-android/pull/3670,closed,1555,0,24,128,14,60,0,2,[],2021-08-12 10:10:49+00:00,2021-08-22 04:42:43+00:00,844314.0,"9 days, 18:31:54","[{'comment_id': 688340081, 'comment_body': '```suggestion\r\n   * Retrieves a chapter given a topic ID, story ID, and exploration ID.\r\n```\r\n\r\nNit on Oxford comma.', 'comment_created': datetime.datetime(2021, 8, 13, 8, 29, 43, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688341080, 'comment_body': 'Please add tests for this new method.', 'comment_created': datetime.datetime(2021, 8, 13, 8, 31, 19, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688341456, 'comment_body': 'Nit: a blank doc line should exist between the at-clause block and the summary fragment. Ditto elsewhere in the PR.', 'comment_created': datetime.datetime(2021, 8, 13, 8, 31, 58, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688341925, 'comment_body': 'Should be on one line (in general, prefer to keep all statements on one line unless they need to be wrapped.\r\n\r\nDitto elsewhere in the PR (including for ResumeLessonActivity).', 'comment_created': datetime.datetime(2021, 8, 13, 8, 32, 43, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688342981, 'comment_body': 'Nit: extra space before ``Returns``', 'comment_created': datetime.datetime(2021, 8, 13, 8, 34, 22, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688343617, 'comment_body': '```suggestion\r\n * The viewModel that provides a [ChapterSummary] and [ExplorationCheckpoint] for the exploration\r\n```', 'comment_created': datetime.datetime(2021, 8, 13, 8, 35, 31, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688343914, 'comment_body': '```suggestion\r\n  /** The [ExplorationCheckpoint] that may be used to resume the exploration. */\r\n```', 'comment_created': datetime.datetime(2021, 8, 13, 8, 35, 56, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688995956, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 21, 51, 46, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 688995984, 'comment_body': 'added tests for this method', 'comment_created': datetime.datetime(2021, 8, 14, 21, 51, 59, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 688996009, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 21, 52, 24, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 688996017, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 21, 52, 31, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 688996036, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 21, 52, 39, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 688996142, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 21, 54, 15, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 688996155, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 21, 54, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 689809740, 'comment_body': 'EOF is missing, add one blank line at the end.', 'comment_created': datetime.datetime(2021, 8, 16, 19, 42, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 689809867, 'comment_body': 'EOF is missing, add one blank line at the end.', 'comment_created': datetime.datetime(2021, 8, 16, 19, 42, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 689810201, 'comment_body': 'Why is this `px`? Normally we keep all values as `dp`', 'comment_created': datetime.datetime(2021, 8, 16, 19, 43, 22, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 689811769, 'comment_body': 'Instead of `profileId`/ `ProfileId`/`PROFILE_ID`, etc. use `internalProfileId`/`InternalProfileId`/`INTERNAL_PROFILE_ID` everywhere.\r\n\r\nBasically when its `Int` we use `internalProfileId` as `ProfileId` is actually a model in our proto.', 'comment_created': datetime.datetime(2021, 8, 16, 19, 46, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 690642238, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 17, 19, 0, 12, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 690642258, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 17, 19, 0, 14, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 690642274, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 17, 19, 0, 15, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 690642300, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 17, 19, 0, 17, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 691033273, 'comment_body': 'Unused val?', 'comment_created': datetime.datetime(2021, 8, 18, 8, 46, 34, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691033800, 'comment_body': ""Please don't do this--domain controllers should return DataProviders. LiveData are for the UI layer, not the domain layer."", 'comment_created': datetime.datetime(2021, 8, 18, 8, 47, 11, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691034958, 'comment_body': 'If you need a failure case then I suggest returning AsyncResult.failure() in the original DataProvider.', 'comment_created': datetime.datetime(2021, 8, 18, 8, 48, 29, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691035320, 'comment_body': '```suggestion\r\n   * Indicates that the chapter for the specified exploration, story, and topic ID was not found.\r\n```\r\n\r\nNits on keeping consistency when referring to structure IDs.', 'comment_created': datetime.datetime(2021, 8, 18, 8, 49, 3, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691036009, 'comment_body': ""We shouldn't be catching a generic exception like this--how do you know the correct one was caught? Also, it's considered an antipattern to use exceptions for control flow. Instead, return a result or introduce a mechanism to check for existence to make the determination that the chapter doesn't exist."", 'comment_created': datetime.datetime(2021, 8, 18, 8, 49, 55, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691576727, 'comment_body': 'Please use `paddingStart` and `paddingEnd` here and everywhere else in this PR.\r\n\r\nLeft/Right does not translate well for RTL', 'comment_created': datetime.datetime(2021, 8, 18, 20, 22, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 691577224, 'comment_body': 'Do not mention paddingTop and paddingBottom. Instead mention `minHeight = 48dp` as we need this to make this correctly accessible', 'comment_created': datetime.datetime(2021, 8, 18, 20, 23, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 691577334, 'comment_body': 'Do not mention paddingTop and paddingBottom. Instead mention `minHeight = 48dp` as we need this to make this correctly accessible', 'comment_created': datetime.datetime(2021, 8, 18, 20, 23, 52, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 691577432, 'comment_body': 'Please use paddingStart and paddingEnd here and everywhere else in this PR.\r\n\r\nLeft/Right does not translate well for RTL', 'comment_created': datetime.datetime(2021, 8, 18, 20, 24, 1, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 691615397, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 18, 21, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 691615415, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 18, 21, 25, 55, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 691615424, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 18, 21, 25, 56, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 691615457, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 18, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 691673606, 'comment_body': 'removed', 'comment_created': datetime.datetime(2021, 8, 18, 23, 37, 6, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 691673685, 'comment_body': 'updated retrieveChapter', 'comment_created': datetime.datetime(2021, 8, 18, 23, 37, 22, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 691673814, 'comment_body': 'updated retrieveChapter', 'comment_created': datetime.datetime(2021, 8, 18, 23, 37, 40, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 691673879, 'comment_body': 'updated retrieveChapter', 'comment_created': datetime.datetime(2021, 8, 18, 23, 37, 49, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 691673943, 'comment_body': 'updated retrieveChapter', 'comment_created': datetime.datetime(2021, 8, 18, 23, 37, 59, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 691688814, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 0, 20, 12, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 691871164, 'comment_body': 'This if/else needs braces per https://developer.android.com/kotlin/style-guide#braces.', 'comment_created': datetime.datetime(2021, 8, 19, 7, 50, 14, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691871590, 'comment_body': ""A nit: but I also suggest inverting the if/else condition so that the default cause is success (since that's the expected happy path)."", 'comment_created': datetime.datetime(2021, 8, 19, 7, 50, 53, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691872108, 'comment_body': ""It's probably still worth verifying that AsyncResult includes the correct failure."", 'comment_created': datetime.datetime(2021, 8, 19, 7, 51, 34, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 692309295, 'comment_body': 'updated the test to verify the error on failure.', 'comment_created': datetime.datetime(2021, 8, 19, 16, 41, 38, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692310527, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 16, 43, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692677073, 'comment_body': 'add kdoc and espresso test result screenshot', 'comment_created': datetime.datetime(2021, 8, 20, 5, 32, 24, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 692677262, 'comment_body': '```suggestion\r\n      ).check(matches(withText(""Resume Lesson"")))\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 5, 32, 57, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 692677325, 'comment_body': 'ditto', 'comment_created': datetime.datetime(2021, 8, 20, 5, 33, 10, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 692678202, 'comment_body': 'add kdoc and espresso result screenshot for mobile and tablet', 'comment_created': datetime.datetime(2021, 8, 20, 5, 35, 33, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 692816220, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 20, 9, 44, 39, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692816239, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 20, 9, 44, 41, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692816293, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 20, 9, 44, 47, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692816343, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 20, 9, 44, 52, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693318278, 'comment_body': 'Newline before this (newlines generally always separate class members except fields which are optional).', 'comment_created': datetime.datetime(2021, 8, 21, 7, 20, 25, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693337386, 'comment_body': 'Why are we ignoring this test case?\r\nAdd reason in format `@Ignore TODO ... ` and add TODO of issue which will fix this. ', 'comment_created': datetime.datetime(2021, 8, 21, 10, 31, 5, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 693342620, 'comment_body': 'ignore is not required, this test is for tablets and it fails on mobile, so I added this while testing the tests on espresso', 'comment_created': datetime.datetime(2021, 8, 21, 11, 25, 3, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693342647, 'comment_body': 'ignore is not required, this test is for tablets and it fails on mobile, so I added this while testing the tests on espresso', 'comment_created': datetime.datetime(2021, 8, 21, 11, 25, 17, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693343143, 'comment_body': 'removed this', 'comment_created': datetime.datetime(2021, 8, 21, 11, 30, 11, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693343163, 'comment_body': 'removed ignore', 'comment_created': datetime.datetime(2021, 8, 21, 11, 30, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}]","[{'commit_sha': 'd66c0148b5974b6aab63f3712ed0f8af78c8422e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b0bfb6f034c5807545bb9d92fc71b41382548dc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc7c5136d060bc1b7d0442a5d55d2930a09285d7', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a64024c235017b3ac6100e81e9815e7e3831514', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4aa847e5dc4dc770a37f852bc89218d4b6a3e12', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77c4fb70cd708641533adb951fcc96548186d227', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0deb6504ff1b3c2af069498edf0d231ae10e79a8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7b78d14db3265b9efe9290b4dacc4f68e260387', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1036c25dbade6dc1046210e84c708dde1257dbd0', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46e35f0370982377715ba65488b6391bc800b39e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '846d808dd65fbdd844f16e8dfe009c3aacec9196', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '863688f89a27ea6fe6ed5ec70b206981e468288f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c04252948c9bf64322bde4a893376c1cf5267676', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '218e07074abb479edaa2ac279c344662a8558fad', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebeb0e578ba7d9cc1ced9b9dd2d57033e04d3021', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ed23236c558653bcbee7d814534af391878fea8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c41c23a9ef048dfa6cc1c6e4893569501aa0a91d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '496aff77fb3297c844f846b0e996cdaa1d51c9ca', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05ff96242f61cfcd7cadaf8f83816ea6d6add0c6', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84375611c272f48935aa2b50882a4602e3074af1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e264a0b766fbe8e8c3123577d3792f54718483a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c3f4321ed64dd731e29206e66deb427094cb939', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5738c09304d88886d93aca27551d252ab9d4251e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9245e517e6ad4786b565d86350c2a679f91dd3e9', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '641e8ded0cd9024de1666a31439709cd5970bb76', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da6d06541e584d2b4a4d50d9f9b9429dd3ad011d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2955c0cb67a52e538e64b405c082145e08b9a50b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf3fcb4b125053f5efecbeac25f1b3fb88e1019a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5aba93fdd17d4cc69949b27f3337757943326c6', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e648ea000b0924b82f45442f693a370621a255f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6de5ec1e4183208256a75bd4115422b13528fb8e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2768cfc1c22a82e2cf535cb6364f87d27e9ae327', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7071c0bddcb6f18ec88f7de02195f7f6df3500c2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b023759febbdc7fed699c9b6bc038d349d34be1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6ce739c455a3556ed65ff8521e50916a21a414f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42e80c5752e865ca554482229c28cb682fa60e8f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ba0249be01a4a8f91ecdadb702277b3c086edbd', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2dd1e93e19a91d1114499a2f8c6c83b5611742a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '033412bbc1de32dea963531b3704757ba816cbb5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '739d72b86c4fb5415b34d7cd86e86f4a231acda7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d7b9707ad6510f9eab7be9f0fc5e3e1157752e5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85c44071fa2ee1ef4dac11a87dacf24e82e1f1ec', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2a337368633efbe7f55a1f9913143561b22ecce', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '591b45b11f2179500c366563acd91d79eaff1f67', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c568b6e448da503a6fe3dbe9dc425f303bf998fe', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85ff535c5fd9e0d0684b83af77b03e3d7b948237', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d666ed5b7fec96ceae4ddb7a810b2ccb077e21f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c01d2ccd85a4ac57d1aa7419996f35fe4b29cde1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80ec45a3744af702c9fd9073083b3397059b1147', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be2cfd4db196b691c5b1c3e14ff53bdf4ea8afa9', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c0e3318c73315dbafcce577d5e25025a1c8817f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd43f9ca0216bb3b4bbda442a8f292cc91827e153', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4aeb1b8a465b3588dfc786e349239bb6c58bffe1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8014e8053ff3345e14fb92c416256effa47dd4ca', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38c5396e150691d1c12f001364feacefa77b38d8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1403ccda65793e174008f18070b74d8e5c7a1f66', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17c08b62de74814fb1521b334b7ae6ffaaf751ce', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22fd63ed11df5321d24e6777e93b0e5169935acd', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de49a312aaefc68672bca572fb79b664ad515d9a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6659858f0b85a0bf0c51f23af600769eac64b938', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3787fe89fc7832bb1bb5fa2c24dff17b538b1363', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3142aa9682c0cb6dcc44940b1c0db3a0abf71db', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4332ff2a1f70443fee366ba5a85307f8d02961f8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '432896463fb634266a6e76a4353a3ba1c963344c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8526167a64273037dfe1c7d55557d994a9cf0f1a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df2a2e285b11a99658eee9c5735674d2ca8842eb', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '551720e7bf2c8b0b3a53208f3fea900a0d893068', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abecc74e175d28b77a625937f97f9bdc4ae59d5c', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '109c346345c98e0a94fc5348e2a340eb0a2ac2d4', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '994cdea9020b1e940c04d333bbb20fe4f5afcb90', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41294d08730004a45b4048532e0cee67b99400fd', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3f285464846bc208ae36fd3055f2d421a35e26f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a905c704f100f6610cdae9a8db68ef794f3040e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff734094abd677b1143f677e8e51eece2895d0b0', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d4dcfc77857b0e6e87bbdde1e149400ad9124ee', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9e9c79486638a307e6e809442edc235410ac5a8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '465711d7b088494af26c4052cafa8ac46c690ba7', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15ea3683b30c436d3efaec7c8b7fa5f16f38ed07', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9199b73b36a8b7073973404cf41d5e3df406c1f1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '028e4cef5dd0c9468a401a847fe21c1db3974b25', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '486cf5b4b4f1758cbfd97d216e844b5c96a90cb4', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f7beb3d04be406ee3b5d06cb2047ae1c449a655', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e5b94593b25fc361bc83800b3e535cafaa064bf', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2fea908a65af8c11b5ed135f59cec38e807f251', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1622c00d33f584ae727f0c9c4434ad773bc80a2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd531024296282c281971255c48f118594ce440c7', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40f07baf519e971ff6e2c8aa7f63fce6449f0599', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a89640e7266d038e8c50f580af0cf1fa4c293502', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '958932ff1ae29b61f743a563d1bf8a4cf44cfb85', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92347bd043e33cf716e8213f40c6af1ffcd30bea', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1aa94c923bbeb10914645c306fc9301859d70658', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '777afbbec617b999afa7c77019c419e38aef50aa', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c161cd972e54f698478a0f4501ec22701ab4407c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62bd9baea90871e692c264e6168a0cd8b5d866da', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2993db91bf039d556dc3b5aa668828792e6c4b3e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8b95b8f4b1ead3488eac951af2334c1b5351c8e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '740f8e3c771ea6a0b2a0404d2e6501acad3208a1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae66b5132089b887261c0540900c4dd00c8a1eac', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b68d28882a7c8c5e778f38770487ecb9db943a2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19c9e09315c622baff46979e40d801cada5bab64', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '335e2169cd7340a787f705ef84eec90229255da2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94d69630c3aea982b20ee85df807985b217b074f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b77adc796cc858c5e56c13554a5c7293324a266', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8a40a6024d0107a53c5131b7554e98f8731f293', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21b44b066ffae7f585a700169fcf5c1cb88f1e18', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0493d5b31a792292ea441d2d36a6c00863915eb5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2155609e3a889c415e50dd04b1b31f7556a325ce', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ab0cd30c70d99af92c121c1498e4efa270b876b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6014263487c12b20331c3bbb247898b03797acf', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '539cce0eb8c30628cc4f236488f8632711082e98', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1028d9c976deddac88f3193a4baff5cce660db10', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2cad6687a23fd8e452c7cdf530213504131bf95', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab8f5485a7f7a5cc5de2d2bbd16d823499dd9450', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0adcd6542df6bed1639c274ef171045667df70ee', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '021446e84402d33115d0442828c8873ab55d0559', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20f61e57feb893815b9f4f088933bd28239a84f7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f5a1965bd840ac1e9fcd565686b3bf7136df778', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af955c8316f9f191f3de51f98b10612818c3abea', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8145242ba677db53beb755da8c3839ac0141a35c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe2450e557c080289556007999826103672b5f44', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '643ba8874ffdf33dc3aeb4443a939d62224cca88', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f44b2744af7f19212d5ec5223ac86c05a78e6d35', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e19051a56fc049cb9fc95fe006ca186a977a0165', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67e7bbde1144c5611fcd5e6c95ab378cc6d87e25', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '770c16a23f216da6ecffccc29af447beab4cd67e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc2d2c01c6ddcfd2ec4d955187a4af967aff6363', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c89eb444b0fc7216774bba6cc99f97c0e3bbb34', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa86a2e3c75c4e5703bbb24e6fd458ba9a96fea8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}]",Apoorv Srivastava,53645584,,User,,28,,0,7
710800406,Fix #3491 and #3479: App layer mechanism to resume exploration ,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Fixes #3491 and #3479 

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.

### Espresso Tests
#### StateFragmentTest
![Screenshot from 2021-08-21 04-19-15](https://user-images.githubusercontent.com/53645584/130322381-e52a67c9-562e-4c88-861f-1b84dbd2d2ab.png)

#### ExplorationActivityTest
![Screenshot from 2021-08-21 04-47-49](https://user-images.githubusercontent.com/53645584/130322392-7755faa8-c405-4168-b903-7f203ddc7703.png)

#### TopicLessonsFragmentTest
![Screenshot from 2021-08-21 18-37-18](https://user-images.githubusercontent.com/53645584/130323032-1a0a767b-86b7-4166-9844-c403e4fab905.png)


",True,3672,https://api.github.com/repos/oppia/oppia-android/pulls/3672,https://github.com/oppia/oppia-android/pull/3672,closed,1574,323,32,163,6,48,0,2,[],2021-08-12 12:12:13+00:00,2021-08-22 08:32:15+00:00,850802.0,"9 days, 20:20:02","[{'comment_id': 688144708, 'comment_body': ""There are two erros due to this code:\r\n\r\n1. If the exploration version doesn't match, both resume lesson and exploration activity are opened one after the other, when only one should have been opened.\r\n\r\n\r\nI think the reason because exploration Activity and ResumeLessonActivity is starting are starting (one after the other) if the exploration doesn't match is since when the exploration versions don't match we start first call play exploration (that loads exploration and then saved checkpoint) and then open exploration activity, in the mean time version of exploration is updated (because play exploration saves a new checkpoint), the observer is notified and this time resume exploration activity is opened.\r\n\r\n\r\n\r\n\r\n2. This error will surely not occur in real-world scenarios so I am not sure that if we should take care of this: if the exploration version is updated while the user is in the exploration (cannot occur in real-world scenarios), when the user clicks back to go back to the topic lessons fragment, upon returning to the topic lessons fragment they are automatically taken back to the exploration.\r\n\r\nI am not sure why this is happening, but I think it might be because the version is now updated so the observer (that matched the version in the topic lessons fragment) starts the exploration again.\r\n"", 'comment_created': datetime.datetime(2021, 8, 12, 23, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 688344746, 'comment_body': '```suggestion\r\n              ""Checkpoint with the exploration $explorationId was not found "" +\r\n                ""for profile ${profileId.internalId}.""\r\n```', 'comment_created': datetime.datetime(2021, 8, 13, 8, 37, 22, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688344931, 'comment_body': 'Needs KDoc & tests.', 'comment_created': datetime.datetime(2021, 8, 13, 8, 37, 39, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688345741, 'comment_body': 'We should be using ExplorationRetriever here, instead, so that this can work correctly when loading from proto (we currently support loading topic data from both protos and json).', 'comment_created': datetime.datetime(2021, 8, 13, 8, 38, 56, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688348123, 'comment_body': 'If we need to check at all locations whether there is compatibility, and in that case we just abandon the checkpoint & start over, why not move the version check into the DataProvider that provides the checkpoint, return a default, and short-circuit to ExplorationActivity if no checkpoint was found?', 'comment_created': datetime.datetime(2021, 8, 13, 8, 42, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688348964, 'comment_body': '```suggestion\r\n          // ChapterPlayState will be NOT_STARTED because this function only recommends the first\r\n          // story of un-started topics.\r\n```', 'comment_created': datetime.datetime(2021, 8, 13, 8, 44, 4, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688350332, 'comment_body': ""My suggestion elsewhere to change the flow to navigate based on the state of the checkpoint DataProvider might solve this (presuming we're doing that in ExplorationFragment) since we wouldn't be passing in an actual checkpoint to initiate the exploration if it's incompatible. Merging the two DataProviders together should avoid the race condition described here."", 'comment_created': datetime.datetime(2021, 8, 13, 8, 46, 15, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 690264303, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 17, 11, 4, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 690264404, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 17, 11, 4, 56, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 690264440, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 17, 11, 4, 59, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 690790426, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 17, 23, 29, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 690790596, 'comment_body': 'As per our chat, used `removeObserver`', 'comment_created': datetime.datetime(2021, 8, 17, 23, 29, 53, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 691747342, 'comment_body': 'as per chats in hangouts, used removeObserver.', 'comment_created': datetime.datetime(2021, 8, 19, 3, 19, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 691890781, 'comment_body': ""Should be moved outside the ``let`` block since it's unrelated."", 'comment_created': datetime.datetime(2021, 8, 19, 8, 17, 13, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691892472, 'comment_body': 'Can this name be more specific? Maybe ``nextChapterProgress``?', 'comment_created': datetime.datetime(2021, 8, 19, 8, 19, 24, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691893096, 'comment_body': ""Out of curiosity, why are these needed now? I wouldn't expect these to be needed for a test suite that's just verifying the module providers."", 'comment_created': datetime.datetime(2021, 8, 19, 8, 20, 19, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691894942, 'comment_body': 'Please add KDocs for all currently undocumented non-private members in this class & remove the exemption from scripts/assets/kdoc_validity_exemptions.textproto.', 'comment_created': datetime.datetime(2021, 8, 19, 8, 22, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691895736, 'comment_body': '```suggestion\r\n   * @param profileId the profile ID for which the checkpoint has to be saved\r\n```\r\n\r\nDitto elsewhere in the PR.', 'comment_created': datetime.datetime(2021, 8, 19, 8, 23, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691899888, 'comment_body': 'Could you also add a verification line for state name in the previous test? Otherwise it seems a bit like update*() could do nothing & both tests would still pass (it\'s not obvious what the ""difference"" state being verified here is).\r\n\r\nDitto for the other similar tests here.', 'comment_created': datetime.datetime(2021, 8, 19, 8, 29, 23, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691900341, 'comment_body': 'Here & elsewhere: should we also be verifying that the version is used correctly (i.e. saved in the checkpoint)?\r\n\r\nSuggest also adding a test case for a different version being used.', 'comment_created': datetime.datetime(2021, 8, 19, 8, 29, 55, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691900751, 'comment_body': 'This & above seem odd--why does a ratios checkpoint have fractions values in it?', 'comment_created': datetime.datetime(2021, 8, 19, 8, 30, 29, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691903618, 'comment_body': '```suggestion\r\n  fun testController_saveIncompatibleCheckpoint_checkpointCheckpointIsNotCompatible() {\r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 8, 34, 15, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691903968, 'comment_body': ""For this & all other tests: I suggest verifying the specific failure that's occurring to make sure that it's the failure you expect it to be."", 'comment_created': datetime.datetime(2021, 8, 19, 8, 34, 39, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691905869, 'comment_body': ""Also, typo in name? 'checkpointCheckpoint'"", 'comment_created': datetime.datetime(2021, 8, 19, 8, 36, 59, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691906351, 'comment_body': 'Suggest instead: ``FRACTIONS_STORY_0_EXPLORATION_0_OLD_VERSION`` and ``FRACTIONS_STORY_0_EXPLORATION_0_CURRENT_VERSION`` names to be more specific.', 'comment_created': datetime.datetime(2021, 8, 19, 8, 37, 39, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691908270, 'comment_body': ""Is the null property actually necessary? I don't think we do this in other observers."", 'comment_created': datetime.datetime(2021, 8, 19, 8, 40, 11, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 692381315, 'comment_body': 'there are not needed here, removed them.', 'comment_created': datetime.datetime(2021, 8, 19, 18, 26, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692381323, 'comment_body': 'updated name.', 'comment_created': datetime.datetime(2021, 8, 19, 18, 26, 27, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692381374, 'comment_body': 'moved outside `let`', 'comment_created': datetime.datetime(2021, 8, 19, 18, 26, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692381407, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 18, 26, 33, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692381449, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 18, 26, 36, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692382350, 'comment_body': 'updated.', 'comment_created': datetime.datetime(2021, 8, 19, 18, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692382392, 'comment_body': 'updated test name', 'comment_created': datetime.datetime(2021, 8, 19, 18, 27, 59, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692382412, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 18, 28, 1, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692382435, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 18, 28, 3, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692382462, 'comment_body': 'removed the null property', 'comment_created': datetime.datetime(2021, 8, 19, 18, 28, 6, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692396277, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 18, 49, 3, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692397844, 'comment_body': 'we can only retrieve checkpoints if the version saved in the checkpoint matches with the current exploration version. Otherwise, a failure result is returned.', 'comment_created': datetime.datetime(2021, 8, 19, 18, 51, 16, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692487811, 'comment_body': 'Added these back. Removing this is causing the tests to fail because we are injecting explorationcheckpointController here, which uses these dependencies.', 'comment_created': datetime.datetime(2021, 8, 19, 21, 7, 33, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692658349, 'comment_body': ""Shouldn't we call it outside this if and else condition instead?"", 'comment_created': datetime.datetime(2021, 8, 20, 4, 50, 15, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 692672378, 'comment_body': 'Do we need this?', 'comment_created': datetime.datetime(2021, 8, 20, 5, 24, 26, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 692673740, 'comment_body': 'Are we using this?', 'comment_created': datetime.datetime(2021, 8, 20, 5, 25, 57, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 692820377, 'comment_body': 'yes, we inject explorationCheckpointController here and we use these there.', 'comment_created': datetime.datetime(2021, 8, 20, 9, 51, 35, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692821235, 'comment_body': 'I think moving this outside the if-else will make it trigger when the async result becomes pending', 'comment_created': datetime.datetime(2021, 8, 20, 9, 52, 59, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692823611, 'comment_body': 'remvoed', 'comment_created': datetime.datetime(2021, 8, 20, 9, 56, 44, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693319011, 'comment_body': 'Thanks--I think that this really improved the clarity of the tests!', 'comment_created': datetime.datetime(2021, 8, 21, 7, 27, 14, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693319119, 'comment_body': 'We also generally always want to use the switch logic when possible to ensure tests are verifying both the JSON & proto pipelines (in Gradle & Bazel, respectively).', 'comment_created': datetime.datetime(2021, 8, 21, 7, 28, 12, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693319413, 'comment_body': '```suggestion\r\n/** An old, not up-to-date version of Fractions topic, story 0, exploration 0. */\r\n```', 'comment_created': datetime.datetime(2021, 8, 21, 7, 31, 15, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}]","[{'commit_sha': 'd66c0148b5974b6aab63f3712ed0f8af78c8422e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b0bfb6f034c5807545bb9d92fc71b41382548dc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc7c5136d060bc1b7d0442a5d55d2930a09285d7', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a64024c235017b3ac6100e81e9815e7e3831514', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4aa847e5dc4dc770a37f852bc89218d4b6a3e12', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77c4fb70cd708641533adb951fcc96548186d227', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0deb6504ff1b3c2af069498edf0d231ae10e79a8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7b78d14db3265b9efe9290b4dacc4f68e260387', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1036c25dbade6dc1046210e84c708dde1257dbd0', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46e35f0370982377715ba65488b6391bc800b39e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '846d808dd65fbdd844f16e8dfe009c3aacec9196', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '863688f89a27ea6fe6ed5ec70b206981e468288f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c04252948c9bf64322bde4a893376c1cf5267676', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '218e07074abb479edaa2ac279c344662a8558fad', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebeb0e578ba7d9cc1ced9b9dd2d57033e04d3021', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ed23236c558653bcbee7d814534af391878fea8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c41c23a9ef048dfa6cc1c6e4893569501aa0a91d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '496aff77fb3297c844f846b0e996cdaa1d51c9ca', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05ff96242f61cfcd7cadaf8f83816ea6d6add0c6', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84375611c272f48935aa2b50882a4602e3074af1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e264a0b766fbe8e8c3123577d3792f54718483a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c3f4321ed64dd731e29206e66deb427094cb939', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5738c09304d88886d93aca27551d252ab9d4251e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9245e517e6ad4786b565d86350c2a679f91dd3e9', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '641e8ded0cd9024de1666a31439709cd5970bb76', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da6d06541e584d2b4a4d50d9f9b9429dd3ad011d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2955c0cb67a52e538e64b405c082145e08b9a50b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf3fcb4b125053f5efecbeac25f1b3fb88e1019a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5aba93fdd17d4cc69949b27f3337757943326c6', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e648ea000b0924b82f45442f693a370621a255f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6de5ec1e4183208256a75bd4115422b13528fb8e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2768cfc1c22a82e2cf535cb6364f87d27e9ae327', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7071c0bddcb6f18ec88f7de02195f7f6df3500c2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b023759febbdc7fed699c9b6bc038d349d34be1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6ce739c455a3556ed65ff8521e50916a21a414f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42e80c5752e865ca554482229c28cb682fa60e8f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c082134845e7c6340eb4576542d3321e01b4f30a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ba0249be01a4a8f91ecdadb702277b3c086edbd', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2dd1e93e19a91d1114499a2f8c6c83b5611742a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '033412bbc1de32dea963531b3704757ba816cbb5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f53c3c3e4d9cf2b42ddddb7d83a69ac8691debe1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '739d72b86c4fb5415b34d7cd86e86f4a231acda7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c0af1ca0c439a3098333d8b57691add209f0cf8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d7b9707ad6510f9eab7be9f0fc5e3e1157752e5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85c44071fa2ee1ef4dac11a87dacf24e82e1f1ec', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2a337368633efbe7f55a1f9913143561b22ecce', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '591b45b11f2179500c366563acd91d79eaff1f67', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c568b6e448da503a6fe3dbe9dc425f303bf998fe', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85ff535c5fd9e0d0684b83af77b03e3d7b948237', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d666ed5b7fec96ceae4ddb7a810b2ccb077e21f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c01d2ccd85a4ac57d1aa7419996f35fe4b29cde1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80ec45a3744af702c9fd9073083b3397059b1147', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be2cfd4db196b691c5b1c3e14ff53bdf4ea8afa9', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c0e3318c73315dbafcce577d5e25025a1c8817f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd43f9ca0216bb3b4bbda442a8f292cc91827e153', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4aeb1b8a465b3588dfc786e349239bb6c58bffe1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8014e8053ff3345e14fb92c416256effa47dd4ca', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38c5396e150691d1c12f001364feacefa77b38d8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1403ccda65793e174008f18070b74d8e5c7a1f66', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40a910617d447890fef2244a5330fc869deaabf7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17c08b62de74814fb1521b334b7ae6ffaaf751ce', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22fd63ed11df5321d24e6777e93b0e5169935acd', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de49a312aaefc68672bca572fb79b664ad515d9a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6659858f0b85a0bf0c51f23af600769eac64b938', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3787fe89fc7832bb1bb5fa2c24dff17b538b1363', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3142aa9682c0cb6dcc44940b1c0db3a0abf71db', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4332ff2a1f70443fee366ba5a85307f8d02961f8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '432896463fb634266a6e76a4353a3ba1c963344c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8526167a64273037dfe1c7d55557d994a9cf0f1a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df2a2e285b11a99658eee9c5735674d2ca8842eb', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '551720e7bf2c8b0b3a53208f3fea900a0d893068', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abecc74e175d28b77a625937f97f9bdc4ae59d5c', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '109c346345c98e0a94fc5348e2a340eb0a2ac2d4', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '725c8b77ba6f317fe5e636942f50f8c0f331d863', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '954fe79495ee53d26752554b6839f2301f054ce7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '994cdea9020b1e940c04d333bbb20fe4f5afcb90', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '062506e8514775d8a8e2bd9f3acf39fa4b88c455', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41294d08730004a45b4048532e0cee67b99400fd', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3f285464846bc208ae36fd3055f2d421a35e26f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '550c2f9666b5cbfbd4d367ceabbed6c610967cde', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3068e6b18a42fa9a84eec6aaf53672d009c2dec9', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a905c704f100f6610cdae9a8db68ef794f3040e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff734094abd677b1143f677e8e51eece2895d0b0', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2e3e81208ac437156fdcd706eccc8fb643c3951', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9b0db302db486c1264611e037c5aa136a46eab7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9509cd3090abde0d520a4878fdb740e62ce39f1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d4dcfc77857b0e6e87bbdde1e149400ad9124ee', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9e9c79486638a307e6e809442edc235410ac5a8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '465711d7b088494af26c4052cafa8ac46c690ba7', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15ea3683b30c436d3efaec7c8b7fa5f16f38ed07', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9199b73b36a8b7073973404cf41d5e3df406c1f1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '028e4cef5dd0c9468a401a847fe21c1db3974b25', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '486cf5b4b4f1758cbfd97d216e844b5c96a90cb4', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f7beb3d04be406ee3b5d06cb2047ae1c449a655', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e5b94593b25fc361bc83800b3e535cafaa064bf', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2fea908a65af8c11b5ed135f59cec38e807f251', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1622c00d33f584ae727f0c9c4434ad773bc80a2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd531024296282c281971255c48f118594ce440c7', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40f07baf519e971ff6e2c8aa7f63fce6449f0599', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a89640e7266d038e8c50f580af0cf1fa4c293502', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '958932ff1ae29b61f743a563d1bf8a4cf44cfb85', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92347bd043e33cf716e8213f40c6af1ffcd30bea', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1aa94c923bbeb10914645c306fc9301859d70658', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '777afbbec617b999afa7c77019c419e38aef50aa', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c161cd972e54f698478a0f4501ec22701ab4407c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62bd9baea90871e692c264e6168a0cd8b5d866da', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2993db91bf039d556dc3b5aa668828792e6c4b3e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ada09081b7b2aeb929e18e0684cd38c7d3667008', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8b95b8f4b1ead3488eac951af2334c1b5351c8e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7607754048194e8797032e00017645b0b590a91b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9ae8621c196ccbf31283ab51462f758af46628c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7aed04cc351815cdd75b5f8d34cabbcf6ca278c9', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '740f8e3c771ea6a0b2a0404d2e6501acad3208a1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c96cda30e327f2ff5b17a7cca761e8d3dd6a6481', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8162802d289fea4869bd863e9c5b17403515626b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae66b5132089b887261c0540900c4dd00c8a1eac', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b68d28882a7c8c5e778f38770487ecb9db943a2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4efc511bd4b7f1b2cfe2f585ef2f907bc4bd21fe', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6881fd71d6927ec943f17e2a6288772045272d01', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa7b702695f23799a5088d67d4acee30218caa27', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19c9e09315c622baff46979e40d801cada5bab64', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '335e2169cd7340a787f705ef84eec90229255da2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94d69630c3aea982b20ee85df807985b217b074f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b77adc796cc858c5e56c13554a5c7293324a266', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8a40a6024d0107a53c5131b7554e98f8731f293', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21b44b066ffae7f585a700169fcf5c1cb88f1e18', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0493d5b31a792292ea441d2d36a6c00863915eb5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2155609e3a889c415e50dd04b1b31f7556a325ce', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71548539b5dcc7d25b1496baa5daea47df28543e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ab0cd30c70d99af92c121c1498e4efa270b876b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8b320462e0f58273793abbd7ffb687bfe862f65', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80b3610cea056715b8c2d67c28074dd5cd8769c2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6014263487c12b20331c3bbb247898b03797acf', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '539cce0eb8c30628cc4f236488f8632711082e98', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1028d9c976deddac88f3193a4baff5cce660db10', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6472fba42e4f4820b88c0c8281b3a1d421fda2b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44b1741dcb87088239a6773353b186eb4183b195', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '609d4abe3457477afd4d3b6deb023419039fc1e8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2cad6687a23fd8e452c7cdf530213504131bf95', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab8f5485a7f7a5cc5de2d2bbd16d823499dd9450', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea30c1aaac11ed963eb069d7675d62cb45f97f4c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '717d4069cc6f44a9f05ba589c9cc51d74a85d9c8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0adcd6542df6bed1639c274ef171045667df70ee', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '021446e84402d33115d0442828c8873ab55d0559', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20f61e57feb893815b9f4f088933bd28239a84f7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f5a1965bd840ac1e9fcd565686b3bf7136df778', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af955c8316f9f191f3de51f98b10612818c3abea', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17e6a0455d6abb25b7a85dfcbcce6e2f0a03c699', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6fc1996d50c9812014681ea163258a60d1738e5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8145242ba677db53beb755da8c3839ac0141a35c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe2450e557c080289556007999826103672b5f44', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43c7804d8b413869c11af681ed1b268a310b2d95', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '643ba8874ffdf33dc3aeb4443a939d62224cca88', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f44b2744af7f19212d5ec5223ac86c05a78e6d35', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e19051a56fc049cb9fc95fe006ca186a977a0165', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67e7bbde1144c5611fcd5e6c95ab378cc6d87e25', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '770c16a23f216da6ecffccc29af447beab4cd67e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc2d2c01c6ddcfd2ec4d955187a4af967aff6363', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e69d614e58dc9216b2c7e14ba7f0f2f7b72f524', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c89eb444b0fc7216774bba6cc99f97c0e3bbb34', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5db47ef49aac6a865833c7f000d845082257aba6', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85ceb2e69b4355d4c9f36f2059f6f95386b38a5b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20d843f3c8378eca87350d7cc3970ec90bf5a083', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}]",Apoorv Srivastava,53645584,,User,,28,,0,7
710800406,Fix #3491 and #3479: App layer mechanism to resume exploration ,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Fixes #3491 and #3479 

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.

### Espresso Tests
#### StateFragmentTest
![Screenshot from 2021-08-21 04-19-15](https://user-images.githubusercontent.com/53645584/130322381-e52a67c9-562e-4c88-861f-1b84dbd2d2ab.png)

#### ExplorationActivityTest
![Screenshot from 2021-08-21 04-47-49](https://user-images.githubusercontent.com/53645584/130322392-7755faa8-c405-4168-b903-7f203ddc7703.png)

#### TopicLessonsFragmentTest
![Screenshot from 2021-08-21 18-37-18](https://user-images.githubusercontent.com/53645584/130323032-1a0a767b-86b7-4166-9844-c403e4fab905.png)


",True,3672,https://api.github.com/repos/oppia/oppia-android/pulls/3672,https://github.com/oppia/oppia-android/pull/3672,closed,1574,323,32,163,6,48,0,2,[],2021-08-12 12:12:13+00:00,2021-08-22 08:32:15+00:00,850802.0,"9 days, 20:20:02","[{'comment_id': 688144708, 'comment_body': ""There are two erros due to this code:\r\n\r\n1. If the exploration version doesn't match, both resume lesson and exploration activity are opened one after the other, when only one should have been opened.\r\n\r\n\r\nI think the reason because exploration Activity and ResumeLessonActivity is starting are starting (one after the other) if the exploration doesn't match is since when the exploration versions don't match we start first call play exploration (that loads exploration and then saved checkpoint) and then open exploration activity, in the mean time version of exploration is updated (because play exploration saves a new checkpoint), the observer is notified and this time resume exploration activity is opened.\r\n\r\n\r\n\r\n\r\n2. This error will surely not occur in real-world scenarios so I am not sure that if we should take care of this: if the exploration version is updated while the user is in the exploration (cannot occur in real-world scenarios), when the user clicks back to go back to the topic lessons fragment, upon returning to the topic lessons fragment they are automatically taken back to the exploration.\r\n\r\nI am not sure why this is happening, but I think it might be because the version is now updated so the observer (that matched the version in the topic lessons fragment) starts the exploration again.\r\n"", 'comment_created': datetime.datetime(2021, 8, 12, 23, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 688344746, 'comment_body': '```suggestion\r\n              ""Checkpoint with the exploration $explorationId was not found "" +\r\n                ""for profile ${profileId.internalId}.""\r\n```', 'comment_created': datetime.datetime(2021, 8, 13, 8, 37, 22, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688344931, 'comment_body': 'Needs KDoc & tests.', 'comment_created': datetime.datetime(2021, 8, 13, 8, 37, 39, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688345741, 'comment_body': 'We should be using ExplorationRetriever here, instead, so that this can work correctly when loading from proto (we currently support loading topic data from both protos and json).', 'comment_created': datetime.datetime(2021, 8, 13, 8, 38, 56, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688348123, 'comment_body': 'If we need to check at all locations whether there is compatibility, and in that case we just abandon the checkpoint & start over, why not move the version check into the DataProvider that provides the checkpoint, return a default, and short-circuit to ExplorationActivity if no checkpoint was found?', 'comment_created': datetime.datetime(2021, 8, 13, 8, 42, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688348964, 'comment_body': '```suggestion\r\n          // ChapterPlayState will be NOT_STARTED because this function only recommends the first\r\n          // story of un-started topics.\r\n```', 'comment_created': datetime.datetime(2021, 8, 13, 8, 44, 4, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688350332, 'comment_body': ""My suggestion elsewhere to change the flow to navigate based on the state of the checkpoint DataProvider might solve this (presuming we're doing that in ExplorationFragment) since we wouldn't be passing in an actual checkpoint to initiate the exploration if it's incompatible. Merging the two DataProviders together should avoid the race condition described here."", 'comment_created': datetime.datetime(2021, 8, 13, 8, 46, 15, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 690264303, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 17, 11, 4, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 690264404, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 17, 11, 4, 56, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 690264440, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 17, 11, 4, 59, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 690790426, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 17, 23, 29, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 690790596, 'comment_body': 'As per our chat, used `removeObserver`', 'comment_created': datetime.datetime(2021, 8, 17, 23, 29, 53, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 691747342, 'comment_body': 'as per chats in hangouts, used removeObserver.', 'comment_created': datetime.datetime(2021, 8, 19, 3, 19, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 691890781, 'comment_body': ""Should be moved outside the ``let`` block since it's unrelated."", 'comment_created': datetime.datetime(2021, 8, 19, 8, 17, 13, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691892472, 'comment_body': 'Can this name be more specific? Maybe ``nextChapterProgress``?', 'comment_created': datetime.datetime(2021, 8, 19, 8, 19, 24, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691893096, 'comment_body': ""Out of curiosity, why are these needed now? I wouldn't expect these to be needed for a test suite that's just verifying the module providers."", 'comment_created': datetime.datetime(2021, 8, 19, 8, 20, 19, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691894942, 'comment_body': 'Please add KDocs for all currently undocumented non-private members in this class & remove the exemption from scripts/assets/kdoc_validity_exemptions.textproto.', 'comment_created': datetime.datetime(2021, 8, 19, 8, 22, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691895736, 'comment_body': '```suggestion\r\n   * @param profileId the profile ID for which the checkpoint has to be saved\r\n```\r\n\r\nDitto elsewhere in the PR.', 'comment_created': datetime.datetime(2021, 8, 19, 8, 23, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691899888, 'comment_body': 'Could you also add a verification line for state name in the previous test? Otherwise it seems a bit like update*() could do nothing & both tests would still pass (it\'s not obvious what the ""difference"" state being verified here is).\r\n\r\nDitto for the other similar tests here.', 'comment_created': datetime.datetime(2021, 8, 19, 8, 29, 23, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691900341, 'comment_body': 'Here & elsewhere: should we also be verifying that the version is used correctly (i.e. saved in the checkpoint)?\r\n\r\nSuggest also adding a test case for a different version being used.', 'comment_created': datetime.datetime(2021, 8, 19, 8, 29, 55, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691900751, 'comment_body': 'This & above seem odd--why does a ratios checkpoint have fractions values in it?', 'comment_created': datetime.datetime(2021, 8, 19, 8, 30, 29, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691903618, 'comment_body': '```suggestion\r\n  fun testController_saveIncompatibleCheckpoint_checkpointCheckpointIsNotCompatible() {\r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 8, 34, 15, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691903968, 'comment_body': ""For this & all other tests: I suggest verifying the specific failure that's occurring to make sure that it's the failure you expect it to be."", 'comment_created': datetime.datetime(2021, 8, 19, 8, 34, 39, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691905869, 'comment_body': ""Also, typo in name? 'checkpointCheckpoint'"", 'comment_created': datetime.datetime(2021, 8, 19, 8, 36, 59, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691906351, 'comment_body': 'Suggest instead: ``FRACTIONS_STORY_0_EXPLORATION_0_OLD_VERSION`` and ``FRACTIONS_STORY_0_EXPLORATION_0_CURRENT_VERSION`` names to be more specific.', 'comment_created': datetime.datetime(2021, 8, 19, 8, 37, 39, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691908270, 'comment_body': ""Is the null property actually necessary? I don't think we do this in other observers."", 'comment_created': datetime.datetime(2021, 8, 19, 8, 40, 11, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 692381315, 'comment_body': 'there are not needed here, removed them.', 'comment_created': datetime.datetime(2021, 8, 19, 18, 26, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692381323, 'comment_body': 'updated name.', 'comment_created': datetime.datetime(2021, 8, 19, 18, 26, 27, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692381374, 'comment_body': 'moved outside `let`', 'comment_created': datetime.datetime(2021, 8, 19, 18, 26, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692381407, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 18, 26, 33, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692381449, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 18, 26, 36, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692382350, 'comment_body': 'updated.', 'comment_created': datetime.datetime(2021, 8, 19, 18, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692382392, 'comment_body': 'updated test name', 'comment_created': datetime.datetime(2021, 8, 19, 18, 27, 59, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692382412, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 18, 28, 1, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692382435, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 18, 28, 3, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692382462, 'comment_body': 'removed the null property', 'comment_created': datetime.datetime(2021, 8, 19, 18, 28, 6, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692396277, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 18, 49, 3, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692397844, 'comment_body': 'we can only retrieve checkpoints if the version saved in the checkpoint matches with the current exploration version. Otherwise, a failure result is returned.', 'comment_created': datetime.datetime(2021, 8, 19, 18, 51, 16, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692487811, 'comment_body': 'Added these back. Removing this is causing the tests to fail because we are injecting explorationcheckpointController here, which uses these dependencies.', 'comment_created': datetime.datetime(2021, 8, 19, 21, 7, 33, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692658349, 'comment_body': ""Shouldn't we call it outside this if and else condition instead?"", 'comment_created': datetime.datetime(2021, 8, 20, 4, 50, 15, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 692672378, 'comment_body': 'Do we need this?', 'comment_created': datetime.datetime(2021, 8, 20, 5, 24, 26, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 692673740, 'comment_body': 'Are we using this?', 'comment_created': datetime.datetime(2021, 8, 20, 5, 25, 57, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 692820377, 'comment_body': 'yes, we inject explorationCheckpointController here and we use these there.', 'comment_created': datetime.datetime(2021, 8, 20, 9, 51, 35, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692821235, 'comment_body': 'I think moving this outside the if-else will make it trigger when the async result becomes pending', 'comment_created': datetime.datetime(2021, 8, 20, 9, 52, 59, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 692823611, 'comment_body': 'remvoed', 'comment_created': datetime.datetime(2021, 8, 20, 9, 56, 44, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 693319011, 'comment_body': 'Thanks--I think that this really improved the clarity of the tests!', 'comment_created': datetime.datetime(2021, 8, 21, 7, 27, 14, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693319119, 'comment_body': 'We also generally always want to use the switch logic when possible to ensure tests are verifying both the JSON & proto pipelines (in Gradle & Bazel, respectively).', 'comment_created': datetime.datetime(2021, 8, 21, 7, 28, 12, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693319413, 'comment_body': '```suggestion\r\n/** An old, not up-to-date version of Fractions topic, story 0, exploration 0. */\r\n```', 'comment_created': datetime.datetime(2021, 8, 21, 7, 31, 15, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}]","[{'commit_sha': 'd66c0148b5974b6aab63f3712ed0f8af78c8422e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b0bfb6f034c5807545bb9d92fc71b41382548dc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc7c5136d060bc1b7d0442a5d55d2930a09285d7', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a64024c235017b3ac6100e81e9815e7e3831514', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4aa847e5dc4dc770a37f852bc89218d4b6a3e12', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77c4fb70cd708641533adb951fcc96548186d227', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0deb6504ff1b3c2af069498edf0d231ae10e79a8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7b78d14db3265b9efe9290b4dacc4f68e260387', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1036c25dbade6dc1046210e84c708dde1257dbd0', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46e35f0370982377715ba65488b6391bc800b39e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '846d808dd65fbdd844f16e8dfe009c3aacec9196', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '863688f89a27ea6fe6ed5ec70b206981e468288f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c04252948c9bf64322bde4a893376c1cf5267676', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '218e07074abb479edaa2ac279c344662a8558fad', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebeb0e578ba7d9cc1ced9b9dd2d57033e04d3021', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ed23236c558653bcbee7d814534af391878fea8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c41c23a9ef048dfa6cc1c6e4893569501aa0a91d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '496aff77fb3297c844f846b0e996cdaa1d51c9ca', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05ff96242f61cfcd7cadaf8f83816ea6d6add0c6', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84375611c272f48935aa2b50882a4602e3074af1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e264a0b766fbe8e8c3123577d3792f54718483a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c3f4321ed64dd731e29206e66deb427094cb939', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5738c09304d88886d93aca27551d252ab9d4251e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9245e517e6ad4786b565d86350c2a679f91dd3e9', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '641e8ded0cd9024de1666a31439709cd5970bb76', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da6d06541e584d2b4a4d50d9f9b9429dd3ad011d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2955c0cb67a52e538e64b405c082145e08b9a50b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf3fcb4b125053f5efecbeac25f1b3fb88e1019a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5aba93fdd17d4cc69949b27f3337757943326c6', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e648ea000b0924b82f45442f693a370621a255f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6de5ec1e4183208256a75bd4115422b13528fb8e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2768cfc1c22a82e2cf535cb6364f87d27e9ae327', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7071c0bddcb6f18ec88f7de02195f7f6df3500c2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b023759febbdc7fed699c9b6bc038d349d34be1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6ce739c455a3556ed65ff8521e50916a21a414f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42e80c5752e865ca554482229c28cb682fa60e8f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c082134845e7c6340eb4576542d3321e01b4f30a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ba0249be01a4a8f91ecdadb702277b3c086edbd', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2dd1e93e19a91d1114499a2f8c6c83b5611742a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '033412bbc1de32dea963531b3704757ba816cbb5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f53c3c3e4d9cf2b42ddddb7d83a69ac8691debe1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '739d72b86c4fb5415b34d7cd86e86f4a231acda7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c0af1ca0c439a3098333d8b57691add209f0cf8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d7b9707ad6510f9eab7be9f0fc5e3e1157752e5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85c44071fa2ee1ef4dac11a87dacf24e82e1f1ec', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2a337368633efbe7f55a1f9913143561b22ecce', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '591b45b11f2179500c366563acd91d79eaff1f67', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c568b6e448da503a6fe3dbe9dc425f303bf998fe', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85ff535c5fd9e0d0684b83af77b03e3d7b948237', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d666ed5b7fec96ceae4ddb7a810b2ccb077e21f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c01d2ccd85a4ac57d1aa7419996f35fe4b29cde1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80ec45a3744af702c9fd9073083b3397059b1147', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be2cfd4db196b691c5b1c3e14ff53bdf4ea8afa9', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c0e3318c73315dbafcce577d5e25025a1c8817f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd43f9ca0216bb3b4bbda442a8f292cc91827e153', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4aeb1b8a465b3588dfc786e349239bb6c58bffe1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8014e8053ff3345e14fb92c416256effa47dd4ca', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38c5396e150691d1c12f001364feacefa77b38d8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1403ccda65793e174008f18070b74d8e5c7a1f66', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40a910617d447890fef2244a5330fc869deaabf7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17c08b62de74814fb1521b334b7ae6ffaaf751ce', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22fd63ed11df5321d24e6777e93b0e5169935acd', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de49a312aaefc68672bca572fb79b664ad515d9a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6659858f0b85a0bf0c51f23af600769eac64b938', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3787fe89fc7832bb1bb5fa2c24dff17b538b1363', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3142aa9682c0cb6dcc44940b1c0db3a0abf71db', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4332ff2a1f70443fee366ba5a85307f8d02961f8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '432896463fb634266a6e76a4353a3ba1c963344c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8526167a64273037dfe1c7d55557d994a9cf0f1a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df2a2e285b11a99658eee9c5735674d2ca8842eb', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '551720e7bf2c8b0b3a53208f3fea900a0d893068', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abecc74e175d28b77a625937f97f9bdc4ae59d5c', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '109c346345c98e0a94fc5348e2a340eb0a2ac2d4', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '725c8b77ba6f317fe5e636942f50f8c0f331d863', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '954fe79495ee53d26752554b6839f2301f054ce7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '994cdea9020b1e940c04d333bbb20fe4f5afcb90', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '062506e8514775d8a8e2bd9f3acf39fa4b88c455', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41294d08730004a45b4048532e0cee67b99400fd', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3f285464846bc208ae36fd3055f2d421a35e26f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '550c2f9666b5cbfbd4d367ceabbed6c610967cde', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3068e6b18a42fa9a84eec6aaf53672d009c2dec9', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a905c704f100f6610cdae9a8db68ef794f3040e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff734094abd677b1143f677e8e51eece2895d0b0', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2e3e81208ac437156fdcd706eccc8fb643c3951', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9b0db302db486c1264611e037c5aa136a46eab7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9509cd3090abde0d520a4878fdb740e62ce39f1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d4dcfc77857b0e6e87bbdde1e149400ad9124ee', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9e9c79486638a307e6e809442edc235410ac5a8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '465711d7b088494af26c4052cafa8ac46c690ba7', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15ea3683b30c436d3efaec7c8b7fa5f16f38ed07', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9199b73b36a8b7073973404cf41d5e3df406c1f1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '028e4cef5dd0c9468a401a847fe21c1db3974b25', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '486cf5b4b4f1758cbfd97d216e844b5c96a90cb4', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f7beb3d04be406ee3b5d06cb2047ae1c449a655', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e5b94593b25fc361bc83800b3e535cafaa064bf', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2fea908a65af8c11b5ed135f59cec38e807f251', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1622c00d33f584ae727f0c9c4434ad773bc80a2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd531024296282c281971255c48f118594ce440c7', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40f07baf519e971ff6e2c8aa7f63fce6449f0599', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a89640e7266d038e8c50f580af0cf1fa4c293502', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '958932ff1ae29b61f743a563d1bf8a4cf44cfb85', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92347bd043e33cf716e8213f40c6af1ffcd30bea', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1aa94c923bbeb10914645c306fc9301859d70658', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '777afbbec617b999afa7c77019c419e38aef50aa', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c161cd972e54f698478a0f4501ec22701ab4407c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62bd9baea90871e692c264e6168a0cd8b5d866da', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2993db91bf039d556dc3b5aa668828792e6c4b3e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ada09081b7b2aeb929e18e0684cd38c7d3667008', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8b95b8f4b1ead3488eac951af2334c1b5351c8e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7607754048194e8797032e00017645b0b590a91b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9ae8621c196ccbf31283ab51462f758af46628c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7aed04cc351815cdd75b5f8d34cabbcf6ca278c9', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '740f8e3c771ea6a0b2a0404d2e6501acad3208a1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c96cda30e327f2ff5b17a7cca761e8d3dd6a6481', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8162802d289fea4869bd863e9c5b17403515626b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae66b5132089b887261c0540900c4dd00c8a1eac', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b68d28882a7c8c5e778f38770487ecb9db943a2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4efc511bd4b7f1b2cfe2f585ef2f907bc4bd21fe', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6881fd71d6927ec943f17e2a6288772045272d01', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa7b702695f23799a5088d67d4acee30218caa27', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19c9e09315c622baff46979e40d801cada5bab64', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '335e2169cd7340a787f705ef84eec90229255da2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94d69630c3aea982b20ee85df807985b217b074f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b77adc796cc858c5e56c13554a5c7293324a266', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8a40a6024d0107a53c5131b7554e98f8731f293', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21b44b066ffae7f585a700169fcf5c1cb88f1e18', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0493d5b31a792292ea441d2d36a6c00863915eb5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2155609e3a889c415e50dd04b1b31f7556a325ce', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71548539b5dcc7d25b1496baa5daea47df28543e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ab0cd30c70d99af92c121c1498e4efa270b876b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8b320462e0f58273793abbd7ffb687bfe862f65', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80b3610cea056715b8c2d67c28074dd5cd8769c2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6014263487c12b20331c3bbb247898b03797acf', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '539cce0eb8c30628cc4f236488f8632711082e98', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1028d9c976deddac88f3193a4baff5cce660db10', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6472fba42e4f4820b88c0c8281b3a1d421fda2b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44b1741dcb87088239a6773353b186eb4183b195', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '609d4abe3457477afd4d3b6deb023419039fc1e8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2cad6687a23fd8e452c7cdf530213504131bf95', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab8f5485a7f7a5cc5de2d2bbd16d823499dd9450', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea30c1aaac11ed963eb069d7675d62cb45f97f4c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '717d4069cc6f44a9f05ba589c9cc51d74a85d9c8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0adcd6542df6bed1639c274ef171045667df70ee', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '021446e84402d33115d0442828c8873ab55d0559', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20f61e57feb893815b9f4f088933bd28239a84f7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f5a1965bd840ac1e9fcd565686b3bf7136df778', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af955c8316f9f191f3de51f98b10612818c3abea', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17e6a0455d6abb25b7a85dfcbcce6e2f0a03c699', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6fc1996d50c9812014681ea163258a60d1738e5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8145242ba677db53beb755da8c3839ac0141a35c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe2450e557c080289556007999826103672b5f44', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43c7804d8b413869c11af681ed1b268a310b2d95', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '643ba8874ffdf33dc3aeb4443a939d62224cca88', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f44b2744af7f19212d5ec5223ac86c05a78e6d35', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e19051a56fc049cb9fc95fe006ca186a977a0165', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67e7bbde1144c5611fcd5e6c95ab378cc6d87e25', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '770c16a23f216da6ecffccc29af447beab4cd67e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc2d2c01c6ddcfd2ec4d955187a4af967aff6363', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e69d614e58dc9216b2c7e14ba7f0f2f7b72f524', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c89eb444b0fc7216774bba6cc99f97c0e3bbb34', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5db47ef49aac6a865833c7f000d845082257aba6', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85ceb2e69b4355d4c9f36f2059f6f95386b38a5b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20d843f3c8378eca87350d7cc3970ec90bf5a083', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}]",Apoorv Srivastava,53645584,,User,,28,,0,7
712992762,Fix #3662: Complete lightweight checkpointing,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Fixes #3662

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [ ] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.


### Final Result

https://user-images.githubusercontent.com/53645584/130246749-7c139a11-a806-4683-b3bc-f5717ade88aa.mp4

### Espresso Tests
#### StateFragmentTest
![Screenshot from 2021-08-21 04-19-07](https://user-images.githubusercontent.com/53645584/130302264-5220c2be-63c6-4494-87d3-269edd44fdd1.png)

#### ExplorationActivityTest
![Screenshot from 2021-08-20 03-04-28](https://user-images.githubusercontent.com/53645584/130302233-07b5d8cf-93c4-46b6-89a0-b97325117d4e.png)



",True,3686,https://api.github.com/repos/oppia/oppia-android/pulls/3686,https://github.com/oppia/oppia-android/pull/3686,closed,2,965,7,179,9,7,0,1,[],2021-08-15 19:55:39+00:00,2021-08-22 20:10:41+00:00,605702.0,"7 days, 0:15:02","[{'comment_id': 691045963, 'comment_body': 'Is this test/test name correct? It seems contradictory (& has a capitalization typo).', 'comment_created': datetime.datetime(2021, 8, 18, 9, 2, 28, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691047500, 'comment_body': 'Nothing is actually being changed here--how is the feature being enabled?', 'comment_created': datetime.datetime(2021, 8, 18, 9, 4, 27, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691751694, 'comment_body': 'checkpointing was enabled in PR (#3672), I have linked that PR with this issue.', 'comment_created': datetime.datetime(2021, 8, 19, 3, 31, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 691752121, 'comment_body': 'this test is testing the ongoing list when one chapter is marked as in progress saved and another is marked as in progress not saved. I have updated the test name to `fun testStoryList_markLessonInProgressSaved_anotherLessonInProgressNotSaved_ongoingListCorrect()` to clearly indicate this.', 'comment_created': datetime.datetime(2021, 8, 19, 3, 33, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MaskedCarrot', 'type': 'User'}, {'comment_id': 691849464, 'comment_body': ""Ah, that's much clearer--thanks!"", 'comment_created': datetime.datetime(2021, 8, 19, 7, 17, 31, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691850072, 'comment_body': ""Ah, we actually have a TODO check in place now that will reopen issues if they're closed with TODOs still checked into the codebase. I actually suggest that you remove the TODOs in the same PR that's resolving them since that's what's normally expected."", 'comment_created': datetime.datetime(2021, 8, 19, 7, 18, 35, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693270874, 'comment_body': 'Looks resolved now.', 'comment_created': datetime.datetime(2021, 8, 21, 0, 3, 28, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}]","[{'commit_sha': 'd66c0148b5974b6aab63f3712ed0f8af78c8422e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b0bfb6f034c5807545bb9d92fc71b41382548dc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc7c5136d060bc1b7d0442a5d55d2930a09285d7', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a64024c235017b3ac6100e81e9815e7e3831514', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4aa847e5dc4dc770a37f852bc89218d4b6a3e12', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77c4fb70cd708641533adb951fcc96548186d227', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0deb6504ff1b3c2af069498edf0d231ae10e79a8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7b78d14db3265b9efe9290b4dacc4f68e260387', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1036c25dbade6dc1046210e84c708dde1257dbd0', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46e35f0370982377715ba65488b6391bc800b39e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '846d808dd65fbdd844f16e8dfe009c3aacec9196', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '863688f89a27ea6fe6ed5ec70b206981e468288f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c04252948c9bf64322bde4a893376c1cf5267676', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '218e07074abb479edaa2ac279c344662a8558fad', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebeb0e578ba7d9cc1ced9b9dd2d57033e04d3021', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ed23236c558653bcbee7d814534af391878fea8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c41c23a9ef048dfa6cc1c6e4893569501aa0a91d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '496aff77fb3297c844f846b0e996cdaa1d51c9ca', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05ff96242f61cfcd7cadaf8f83816ea6d6add0c6', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84375611c272f48935aa2b50882a4602e3074af1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e264a0b766fbe8e8c3123577d3792f54718483a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c3f4321ed64dd731e29206e66deb427094cb939', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5738c09304d88886d93aca27551d252ab9d4251e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9245e517e6ad4786b565d86350c2a679f91dd3e9', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '641e8ded0cd9024de1666a31439709cd5970bb76', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da6d06541e584d2b4a4d50d9f9b9429dd3ad011d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2955c0cb67a52e538e64b405c082145e08b9a50b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf3fcb4b125053f5efecbeac25f1b3fb88e1019a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5aba93fdd17d4cc69949b27f3337757943326c6', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e648ea000b0924b82f45442f693a370621a255f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6de5ec1e4183208256a75bd4115422b13528fb8e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2768cfc1c22a82e2cf535cb6364f87d27e9ae327', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7071c0bddcb6f18ec88f7de02195f7f6df3500c2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b023759febbdc7fed699c9b6bc038d349d34be1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6ce739c455a3556ed65ff8521e50916a21a414f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42e80c5752e865ca554482229c28cb682fa60e8f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c082134845e7c6340eb4576542d3321e01b4f30a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ba0249be01a4a8f91ecdadb702277b3c086edbd', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2dd1e93e19a91d1114499a2f8c6c83b5611742a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '033412bbc1de32dea963531b3704757ba816cbb5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f53c3c3e4d9cf2b42ddddb7d83a69ac8691debe1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '739d72b86c4fb5415b34d7cd86e86f4a231acda7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c0af1ca0c439a3098333d8b57691add209f0cf8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d7b9707ad6510f9eab7be9f0fc5e3e1157752e5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85c44071fa2ee1ef4dac11a87dacf24e82e1f1ec', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2a337368633efbe7f55a1f9913143561b22ecce', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '591b45b11f2179500c366563acd91d79eaff1f67', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c568b6e448da503a6fe3dbe9dc425f303bf998fe', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85ff535c5fd9e0d0684b83af77b03e3d7b948237', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d666ed5b7fec96ceae4ddb7a810b2ccb077e21f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c01d2ccd85a4ac57d1aa7419996f35fe4b29cde1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80ec45a3744af702c9fd9073083b3397059b1147', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be2cfd4db196b691c5b1c3e14ff53bdf4ea8afa9', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c0e3318c73315dbafcce577d5e25025a1c8817f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd43f9ca0216bb3b4bbda442a8f292cc91827e153', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4aeb1b8a465b3588dfc786e349239bb6c58bffe1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8014e8053ff3345e14fb92c416256effa47dd4ca', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38c5396e150691d1c12f001364feacefa77b38d8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1403ccda65793e174008f18070b74d8e5c7a1f66', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40a910617d447890fef2244a5330fc869deaabf7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '647a92e97189125c7e3dec0e8042172acb56f47a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17c08b62de74814fb1521b334b7ae6ffaaf751ce', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22fd63ed11df5321d24e6777e93b0e5169935acd', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de49a312aaefc68672bca572fb79b664ad515d9a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6659858f0b85a0bf0c51f23af600769eac64b938', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3787fe89fc7832bb1bb5fa2c24dff17b538b1363', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3142aa9682c0cb6dcc44940b1c0db3a0abf71db', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4332ff2a1f70443fee366ba5a85307f8d02961f8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '432896463fb634266a6e76a4353a3ba1c963344c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8526167a64273037dfe1c7d55557d994a9cf0f1a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df2a2e285b11a99658eee9c5735674d2ca8842eb', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '551720e7bf2c8b0b3a53208f3fea900a0d893068', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abecc74e175d28b77a625937f97f9bdc4ae59d5c', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '109c346345c98e0a94fc5348e2a340eb0a2ac2d4', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '725c8b77ba6f317fe5e636942f50f8c0f331d863', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '954fe79495ee53d26752554b6839f2301f054ce7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '994cdea9020b1e940c04d333bbb20fe4f5afcb90', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '062506e8514775d8a8e2bd9f3acf39fa4b88c455', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41294d08730004a45b4048532e0cee67b99400fd', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3f285464846bc208ae36fd3055f2d421a35e26f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '550c2f9666b5cbfbd4d367ceabbed6c610967cde', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3068e6b18a42fa9a84eec6aaf53672d009c2dec9', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a905c704f100f6610cdae9a8db68ef794f3040e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff734094abd677b1143f677e8e51eece2895d0b0', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2e3e81208ac437156fdcd706eccc8fb643c3951', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9b0db302db486c1264611e037c5aa136a46eab7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9509cd3090abde0d520a4878fdb740e62ce39f1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4494603ae1c307a3db229b36adc9d8d95172aab4', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d4dcfc77857b0e6e87bbdde1e149400ad9124ee', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9e9c79486638a307e6e809442edc235410ac5a8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '465711d7b088494af26c4052cafa8ac46c690ba7', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15ea3683b30c436d3efaec7c8b7fa5f16f38ed07', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9199b73b36a8b7073973404cf41d5e3df406c1f1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '028e4cef5dd0c9468a401a847fe21c1db3974b25', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '486cf5b4b4f1758cbfd97d216e844b5c96a90cb4', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22287e9e30d2bc632cf4cfe28ac3ac3002327577', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f7beb3d04be406ee3b5d06cb2047ae1c449a655', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e5b94593b25fc361bc83800b3e535cafaa064bf', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2fea908a65af8c11b5ed135f59cec38e807f251', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1622c00d33f584ae727f0c9c4434ad773bc80a2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd531024296282c281971255c48f118594ce440c7', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40f07baf519e971ff6e2c8aa7f63fce6449f0599', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a89640e7266d038e8c50f580af0cf1fa4c293502', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '958932ff1ae29b61f743a563d1bf8a4cf44cfb85', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92347bd043e33cf716e8213f40c6af1ffcd30bea', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1aa94c923bbeb10914645c306fc9301859d70658', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '777afbbec617b999afa7c77019c419e38aef50aa', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c161cd972e54f698478a0f4501ec22701ab4407c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62bd9baea90871e692c264e6168a0cd8b5d866da', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2993db91bf039d556dc3b5aa668828792e6c4b3e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ada09081b7b2aeb929e18e0684cd38c7d3667008', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8b95b8f4b1ead3488eac951af2334c1b5351c8e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7607754048194e8797032e00017645b0b590a91b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9ae8621c196ccbf31283ab51462f758af46628c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7aed04cc351815cdd75b5f8d34cabbcf6ca278c9', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '740f8e3c771ea6a0b2a0404d2e6501acad3208a1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c96cda30e327f2ff5b17a7cca761e8d3dd6a6481', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8162802d289fea4869bd863e9c5b17403515626b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae66b5132089b887261c0540900c4dd00c8a1eac', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b68d28882a7c8c5e778f38770487ecb9db943a2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4efc511bd4b7f1b2cfe2f585ef2f907bc4bd21fe', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6881fd71d6927ec943f17e2a6288772045272d01', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7563888391b99c940dd26443bad1895439df81f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f1a13062e8b1c779ffad422851c73cc20015a33', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa7b702695f23799a5088d67d4acee30218caa27', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50dfd46af1b1bdeffd48a4aa41cedee17f51eeb0', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19c9e09315c622baff46979e40d801cada5bab64', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '335e2169cd7340a787f705ef84eec90229255da2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94d69630c3aea982b20ee85df807985b217b074f', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b77adc796cc858c5e56c13554a5c7293324a266', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8a40a6024d0107a53c5131b7554e98f8731f293', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21b44b066ffae7f585a700169fcf5c1cb88f1e18', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0493d5b31a792292ea441d2d36a6c00863915eb5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2155609e3a889c415e50dd04b1b31f7556a325ce', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71548539b5dcc7d25b1496baa5daea47df28543e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ab0cd30c70d99af92c121c1498e4efa270b876b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8b320462e0f58273793abbd7ffb687bfe862f65', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80b3610cea056715b8c2d67c28074dd5cd8769c2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ce27a99742a06ac8052f9ecf81a903325a9de53', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6014263487c12b20331c3bbb247898b03797acf', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '539cce0eb8c30628cc4f236488f8632711082e98', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1028d9c976deddac88f3193a4baff5cce660db10', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6472fba42e4f4820b88c0c8281b3a1d421fda2b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44b1741dcb87088239a6773353b186eb4183b195', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '609d4abe3457477afd4d3b6deb023419039fc1e8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c718be9a3b3ac03ca86f123b2ebf8df9d47208c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec74dde370f7d90c1cf23f825eb7659641d2b374', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2cad6687a23fd8e452c7cdf530213504131bf95', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab8f5485a7f7a5cc5de2d2bbd16d823499dd9450', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea30c1aaac11ed963eb069d7675d62cb45f97f4c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '717d4069cc6f44a9f05ba589c9cc51d74a85d9c8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0adcd6542df6bed1639c274ef171045667df70ee', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '021446e84402d33115d0442828c8873ab55d0559', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20f61e57feb893815b9f4f088933bd28239a84f7', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f5a1965bd840ac1e9fcd565686b3bf7136df778', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af955c8316f9f191f3de51f98b10612818c3abea', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17e6a0455d6abb25b7a85dfcbcce6e2f0a03c699', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6fc1996d50c9812014681ea163258a60d1738e5', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65f394cbe79cffb9c5a3d617dc0081c08f1c4612', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8145242ba677db53beb755da8c3839ac0141a35c', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe2450e557c080289556007999826103672b5f44', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43c7804d8b413869c11af681ed1b268a310b2d95', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '560ccde5c2c20e7beac366cb33e3742b20fffebf', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '643ba8874ffdf33dc3aeb4443a939d62224cca88', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f44b2744af7f19212d5ec5223ac86c05a78e6d35', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e19051a56fc049cb9fc95fe006ca186a977a0165', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67e7bbde1144c5611fcd5e6c95ab378cc6d87e25', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '770c16a23f216da6ecffccc29af447beab4cd67e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc2d2c01c6ddcfd2ec4d955187a4af967aff6363', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e69d614e58dc9216b2c7e14ba7f0f2f7b72f524', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd539d25eb03f0714532e7a155c2bee7705a89f14', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c89eb444b0fc7216774bba6cc99f97c0e3bbb34', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5db47ef49aac6a865833c7f000d845082257aba6', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca37c2312520621a80ba9bf56ad25dc2453939b3', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85ceb2e69b4355d4c9f36f2059f6f95386b38a5b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dfc082b11cc4850619c792cb3c92faae0ef5e24', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20d843f3c8378eca87350d7cc3970ec90bf5a083', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73723ae7e51d95e6f96ca21f9fb1533bd5f25a19', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc988d33a8e29d7a6e9abcb68b47b241eef1288d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}]",Apoorv Srivastava,53645584,,User,,28,,0,7

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
148093817,oppia-android,oppia/oppia-android,Kotlin,506,306,21,172,2042,498,137,13,"[{'id': 924703603, 'number': 4339, 'closed': datetime.datetime(2022, 5, 3, 21, 20, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 30, 18, 18, 57, tzinfo=datetime.timezone.utc), 'time_taken': 270078.0, 'time_delta': '3 days, 3:01:18', 'additions': 15, 'deletions': 7, 'state': 'closed'}, {'id': 924702909, 'number': 4338, 'closed': datetime.datetime(2022, 4, 30, 18, 14, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 30, 18, 14, 8, tzinfo=datetime.timezone.utc), 'time_taken': 33.0, 'time_delta': '0:00:33', 'additions': 15, 'deletions': 7, 'state': 'closed'}, {'id': 717370858, 'number': 3717, 'closed': datetime.datetime(2021, 8, 23, 7, 18, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 22, 20, 38, 32, tzinfo=datetime.timezone.utc), 'time_taken': 38425.0, 'time_delta': '10:40:25', 'additions': 0, 'deletions': 5, 'state': 'closed'}, {'id': 712992762, 'number': 3686, 'closed': datetime.datetime(2021, 8, 22, 20, 10, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 15, 19, 55, 39, tzinfo=datetime.timezone.utc), 'time_taken': 605702.0, 'time_delta': '7 days, 0:15:02', 'additions': 2, 'deletions': 965, 'state': 'closed'}, {'id': 710800406, 'number': 3672, 'closed': datetime.datetime(2021, 8, 22, 8, 32, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 12, 12, 13, tzinfo=datetime.timezone.utc), 'time_taken': 850802.0, 'time_delta': '9 days, 20:20:02', 'additions': 1574, 'deletions': 323, 'state': 'closed'}, {'id': 710620669, 'number': 3670, 'closed': datetime.datetime(2021, 8, 22, 4, 42, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 10, 10, 49, tzinfo=datetime.timezone.utc), 'time_taken': 844314.0, 'time_delta': '9 days, 18:31:54', 'additions': 1555, 'deletions': 0, 'state': 'closed'}, {'id': 708227118, 'number': 3668, 'closed': datetime.datetime(2021, 8, 21, 22, 16, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 11, 5, 22, 49, tzinfo=datetime.timezone.utc), 'time_taken': 924810.0, 'time_delta': '10 days, 16:53:30', 'additions': 1812, 'deletions': 241, 'state': 'closed'}, {'id': 706107638, 'number': 3659, 'closed': datetime.datetime(2021, 8, 19, 8, 7, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 8, 21, 14, 39, tzinfo=datetime.timezone.utc), 'time_taken': 903145.0, 'time_delta': '10 days, 10:52:25', 'additions': 5378, 'deletions': 1464, 'state': 'closed'}, {'id': 700744124, 'number': 3627, 'closed': datetime.datetime(2021, 8, 12, 12, 46, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 31, 17, 39, 3, tzinfo=datetime.timezone.utc), 'time_taken': 1019229.0, 'time_delta': '11 days, 19:07:09', 'additions': 2475, 'deletions': 50, 'state': 'closed'}, {'id': 697855063, 'number': 3595, 'closed': datetime.datetime(2021, 8, 12, 12, 43, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 13, 18, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1380254.0, 'time_delta': '15 days, 23:24:14', 'additions': 3149, 'deletions': 7379, 'state': 'closed'}, {'id': 693657337, 'number': 3507, 'closed': datetime.datetime(2021, 8, 11, 5, 21, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 20, 17, 30, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1857062.0, 'time_delta': '21 days, 11:51:02', 'additions': 3886, 'deletions': 683, 'state': 'closed'}, {'id': 691976660, 'number': 3500, 'closed': datetime.datetime(2021, 8, 10, 22, 47, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 17, 19, 17, 14, tzinfo=datetime.timezone.utc), 'time_taken': 2086209.0, 'time_delta': '24 days, 3:30:09', 'additions': 2663, 'deletions': 527, 'state': 'closed'}, {'id': 691231645, 'number': 3483, 'closed': datetime.datetime(2021, 7, 16, 10, 46, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 6, 29, 24, tzinfo=datetime.timezone.utc), 'time_taken': 15427.0, 'time_delta': '4:17:07', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 683625109, 'number': 3408, 'closed': datetime.datetime(2021, 7, 16, 4, 47, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 11, 35, 20, tzinfo=datetime.timezone.utc), 'time_taken': 925959.0, 'time_delta': '10 days, 17:12:39', 'additions': 1933, 'deletions': 197, 'state': 'closed'}, {'id': 682972004, 'number': 3403, 'closed': datetime.datetime(2021, 7, 7, 7, 19, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 3, 5, 43, 16, tzinfo=datetime.timezone.utc), 'time_taken': 351397.0, 'time_delta': '4 days, 1:36:37', 'additions': 668, 'deletions': 8, 'state': 'closed'}, {'id': 682970742, 'number': 3402, 'closed': datetime.datetime(2021, 7, 16, 10, 1, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 3, 5, 30, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1139458.0, 'time_delta': '13 days, 4:30:58', 'additions': 1475, 'deletions': 95, 'state': 'closed'}, {'id': 682571436, 'number': 3400, 'closed': datetime.datetime(2021, 7, 8, 9, 39, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 11, 59, 21, tzinfo=datetime.timezone.utc), 'time_taken': 510025.0, 'time_delta': '5 days, 21:40:25', 'additions': 285, 'deletions': 95, 'state': 'closed'}, {'id': 682416493, 'number': 3399, 'closed': datetime.datetime(2021, 7, 3, 5, 43, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 7, 52, 56, tzinfo=datetime.timezone.utc), 'time_taken': 78611.0, 'time_delta': '21:50:11', 'additions': 642, 'deletions': 6, 'state': 'closed'}, {'id': 675465564, 'number': 3358, 'closed': datetime.datetime(2021, 7, 2, 12, 10, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 14, 16, 42, tzinfo=datetime.timezone.utc), 'time_taken': 856437.0, 'time_delta': '9 days, 21:53:57', 'additions': 209, 'deletions': 6, 'state': 'closed'}, {'id': 672218471, 'number': 3337, 'closed': datetime.datetime(2021, 7, 6, 13, 36, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 17, 5, 17, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1671539.0, 'time_delta': '19 days, 8:18:59', 'additions': 920, 'deletions': 1, 'state': 'closed'}, {'id': 663549035, 'number': 3272, 'closed': datetime.datetime(2021, 6, 17, 5, 30, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 7, 13, 7, 16, tzinfo=datetime.timezone.utc), 'time_taken': 836623.0, 'time_delta': '9 days, 16:23:43', 'additions': 878, 'deletions': 2, 'state': 'closed'}, {'id': 663544734, 'number': 3271, 'closed': datetime.datetime(2021, 6, 17, 4, 0, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 7, 13, 2, 55, tzinfo=datetime.timezone.utc), 'time_taken': 831468.0, 'time_delta': '9 days, 14:57:48', 'additions': 97, 'deletions': 1, 'state': 'closed'}, {'id': 624871124, 'number': 3136, 'closed': datetime.datetime(2021, 4, 29, 1, 0, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 28, 5, 54, 29, tzinfo=datetime.timezone.utc), 'time_taken': 68742.0, 'time_delta': '19:05:42', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 587487333, 'number': 2862, 'closed': datetime.datetime(2021, 6, 21, 18, 48, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 9, 5, 53, 9, tzinfo=datetime.timezone.utc), 'time_taken': 9032142.0, 'time_delta': '104 days, 12:55:42', 'additions': 566, 'deletions': 8, 'state': 'closed'}, {'id': 575780976, 'number': 2744, 'closed': datetime.datetime(2021, 3, 4, 17, 37, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 18, 15, 42, 1, tzinfo=datetime.timezone.utc), 'time_taken': 1216503.0, 'time_delta': '14 days, 1:55:03', 'additions': 250, 'deletions': 1, 'state': 'closed'}, {'id': 570297220, 'number': 2670, 'closed': datetime.datetime(2021, 2, 28, 19, 15, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 9, 13, 24, 20, tzinfo=datetime.timezone.utc), 'time_taken': 1662684.0, 'time_delta': '19 days, 5:51:24', 'additions': 78, 'deletions': 14, 'state': 'closed'}, {'id': 565022340, 'number': 2597, 'closed': datetime.datetime(2021, 2, 3, 6, 22, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 1, 9, 32, 28, tzinfo=datetime.timezone.utc), 'time_taken': 161402.0, 'time_delta': '1 day, 20:50:02', 'additions': 23, 'deletions': 19, 'state': 'closed'}, {'id': 556284518, 'number': 2499, 'closed': datetime.datetime(2021, 1, 30, 1, 37, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 17, 6, 22, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1106084.0, 'time_delta': '12 days, 19:14:44', 'additions': 71, 'deletions': 58, 'state': 'closed'}, {'id': 556187268, 'number': 2493, 'closed': datetime.datetime(2021, 1, 21, 2, 3, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 16, 15, 3, 49, tzinfo=datetime.timezone.utc), 'time_taken': 385162.0, 'time_delta': '4 days, 10:59:22', 'additions': 23, 'deletions': 4, 'state': 'closed'}, {'id': 555417404, 'number': 2478, 'closed': datetime.datetime(2021, 1, 21, 10, 26, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 15, 5, 42, 53, tzinfo=datetime.timezone.utc), 'time_taken': 535426.0, 'time_delta': '6 days, 4:43:46', 'additions': 32, 'deletions': 19, 'state': 'closed'}, {'id': 550090276, 'number': 2411, 'closed': datetime.datetime(2021, 1, 15, 6, 25, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 6, 7, 32, 52, tzinfo=datetime.timezone.utc), 'time_taken': 773530.0, 'time_delta': '8 days, 22:52:10', 'additions': 1337, 'deletions': 1716, 'state': 'closed'}, {'id': 550062789, 'number': 2410, 'closed': datetime.datetime(2021, 1, 6, 7, 5, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 6, 7, 4, 13, tzinfo=datetime.timezone.utc), 'time_taken': 48.0, 'time_delta': '0:00:48', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 548855995, 'number': 2393, 'closed': datetime.datetime(2021, 1, 5, 12, 25, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 5, 9, 52, 45, tzinfo=datetime.timezone.utc), 'time_taken': 9185.0, 'time_delta': '2:33:05', 'additions': 8, 'deletions': 0, 'state': 'closed'}, {'id': 545550507, 'number': 2318, 'closed': datetime.datetime(2021, 1, 16, 15, 7, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 25, 8, 24, 58, tzinfo=datetime.timezone.utc), 'time_taken': 1924981.0, 'time_delta': '22 days, 6:43:01', 'additions': 35, 'deletions': 6, 'state': 'closed'}, {'id': 545366746, 'number': 2308, 'closed': datetime.datetime(2021, 1, 17, 6, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 24, 13, 31, 8, tzinfo=datetime.timezone.utc), 'time_taken': 2048752.0, 'time_delta': '23 days, 17:05:52', 'additions': 43, 'deletions': 27, 'state': 'closed'}, {'id': 532356117, 'number': 2226, 'closed': datetime.datetime(2020, 12, 4, 7, 46, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 4, 7, 45, 54, tzinfo=datetime.timezone.utc), 'time_taken': 60.0, 'time_delta': '0:01:00', 'additions': 37, 'deletions': 4, 'state': 'closed'}, {'id': 527530083, 'number': 2168, 'closed': datetime.datetime(2020, 12, 4, 8, 35, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 25, 15, 35, 31, tzinfo=datetime.timezone.utc), 'time_taken': 752418.0, 'time_delta': '8 days, 17:00:18', 'additions': 25, 'deletions': 4, 'state': 'closed'}, {'id': 511260054, 'number': 2050, 'closed': datetime.datetime(2020, 10, 29, 7, 36, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 28, 3, 52, 31, tzinfo=datetime.timezone.utc), 'time_taken': 99851.0, 'time_delta': '1 day, 3:44:11', 'additions': 137, 'deletions': 97, 'state': 'closed'}, {'id': 510056196, 'number': 2046, 'closed': datetime.datetime(2020, 10, 28, 8, 32, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 26, 14, 9, 20, tzinfo=datetime.timezone.utc), 'time_taken': 152593.0, 'time_delta': '1 day, 18:23:13', 'additions': 692, 'deletions': 686, 'state': 'closed'}, {'id': 498931726, 'number': 1937, 'closed': datetime.datetime(2020, 10, 27, 8, 10, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 7, 2, 8, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1749759.0, 'time_delta': '20 days, 6:02:39', 'additions': 270, 'deletions': 1, 'state': 'closed'}, {'id': 497752410, 'number': 1934, 'closed': datetime.datetime(2020, 10, 6, 18, 13, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 5, 10, 27, 56, tzinfo=datetime.timezone.utc), 'time_taken': 114313.0, 'time_delta': '1 day, 7:45:13', 'additions': 446, 'deletions': 1, 'state': 'closed'}, {'id': 489674544, 'number': 1862, 'closed': datetime.datetime(2020, 12, 24, 13, 31, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 19, 6, 0, 56, tzinfo=datetime.timezone.utc), 'time_taken': 8321424.0, 'time_delta': '96 days, 7:30:24', 'additions': 22, 'deletions': 16, 'state': 'closed'}, {'id': 489386679, 'number': 1860, 'closed': datetime.datetime(2020, 9, 19, 6, 0, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 18, 15, 25, 17, tzinfo=datetime.timezone.utc), 'time_taken': 52504.0, 'time_delta': '14:35:04', 'additions': 35, 'deletions': 8, 'state': 'closed'}, {'id': 489376852, 'number': 1859, 'closed': datetime.datetime(2020, 9, 18, 15, 23, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 18, 15, 8, 2, tzinfo=datetime.timezone.utc), 'time_taken': 919.0, 'time_delta': '0:15:19', 'additions': 16, 'deletions': 5, 'state': 'closed'}, {'id': 489362959, 'number': 1858, 'closed': datetime.datetime(2020, 9, 18, 14, 44, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 18, 14, 44, 44, tzinfo=datetime.timezone.utc), 'time_taken': 2.0, 'time_delta': '0:00:02', 'additions': 32, 'deletions': 5, 'state': 'closed'}, {'id': 489360420, 'number': 1857, 'closed': datetime.datetime(2020, 9, 18, 14, 40, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 18, 14, 40, 55, tzinfo=datetime.timezone.utc), 'time_taken': 3.0, 'time_delta': '0:00:03', 'additions': 32, 'deletions': 5, 'state': 'closed'}, {'id': 489355375, 'number': 1856, 'closed': datetime.datetime(2020, 9, 18, 14, 32, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 18, 14, 32, 22, tzinfo=datetime.timezone.utc), 'time_taken': 4.0, 'time_delta': '0:00:04', 'additions': 32, 'deletions': 5, 'state': 'closed'}]"
