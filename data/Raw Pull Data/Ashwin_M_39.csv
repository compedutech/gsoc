pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
668459415,USPTO Loader,"## Description
Adds support for loading USPTO datasets. 


----
TO DO:
- [X] Add support for MIT and STEREO
- [ ] Add Support for precomputed_split loader
- [ ] Add support for custom split
- [ ] Add support for reactant, reagent separation 
- [x] Add support for 50k
- [x] Add support for Full
- [x] Update Docs

<!-- Please include a summary of the change and which issue is fixed.
Please also include relevant motivation and context.
List any dependencies that are required for this change. -->


## Type of change

Please check the option that is related to your PR.

- [ ] Bug fix (non-breaking change which fixes an issue)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
  - In this case, we recommend to discuss your modification on GitHub issues before creating the PR
- [X] Documentations (modification for documents)

## Checklist

- [X] My code follows [the style guidelines of this project](https://deepchem.readthedocs.io/en/latest/development_guide/coding.html)
  - [X] Run `yapf -i <modified file>` and check no errors (**yapf version must be  0.22.0**)
  - [X] Run `mypy -p deepchem` and check no errors
  - [X] Run `flake8 <modified file> --count` and check no errors
- [ ] I have performed a self-review of my own code
- [ ] I have commented my code, particularly in hard-to-understand areas
- [x] I have made corresponding changes to the documentation
- [ ] I have added tests that prove my fix is effective or that my feature works
- [ ] New unit tests pass locally with my changes
- [ ] I have checked my code and corrected any misspellings
",True,2546,https://api.github.com/repos/deepchem/deepchem/pulls/2546,https://github.com/deepchem/deepchem/pull/2546,closed,149,84,1,33,9,18,0,0,[],2021-06-11 18:56:05+00:00,2021-07-09 16:03:26+00:00,2408841.0,"27 days, 21:07:21","[{'comment_id': 650214626, 'comment_body': '""Patent""', 'comment_created': datetime.datetime(2021, 6, 11, 19, 17, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ncfrey', 'type': 'User'}, {'comment_id': 650215333, 'comment_body': 'Is it possible to combine these into a single dataset with an additional label that specifies for each point whether it is in train/val/test? That way you can load a single dataset (like `_MolnetLoader`) expects, and do a sort of dummy split that constructs train/val/test.', 'comment_created': datetime.datetime(2021, 6, 11, 19, 19, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ncfrey', 'type': 'User'}, {'comment_id': 650217246, 'comment_body': 'Rather than bypass the splitter, you may need to write a new splitter that looks for a `train/val/test` label to do the split on. This could be generically useful for datasets where the sets are already specified.', 'comment_created': datetime.datetime(2021, 6, 11, 19, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ncfrey', 'type': 'User'}, {'comment_id': 650220559, 'comment_body': 'Whoops! this was in the original file as well, I shall fix it.', 'comment_created': datetime.datetime(2021, 6, 11, 19, 30, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Suzukazole', 'type': 'User'}, {'comment_id': 650222497, 'comment_body': 'I had thought about this as well, I shall give this a try.', 'comment_created': datetime.datetime(2021, 6, 11, 19, 34, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Suzukazole', 'type': 'User'}, {'comment_id': 650223773, 'comment_body': 'It seems a bit hacky, but I think it should be possible. Do you think I should try writing a custom splitter or just go for this?', 'comment_created': datetime.datetime(2021, 6, 11, 19, 37, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Suzukazole', 'type': 'User'}, {'comment_id': 650229076, 'comment_body': 'You could have a toggle in `_MolnetLoader` that goes something as `use_original_splits=False`, and extend it to handle those cases where the original split exists. In this case, you can also decide whether to override `splitter` or not, if it is not `None`. \r\n', 'comment_created': datetime.datetime(2021, 6, 11, 19, 48, 59, tzinfo=datetime.timezone.utc), 'commenter': 'vsomnath', 'type': 'User'}, {'comment_id': 650496304, 'comment_body': '`use_original_splits=False`, otherwise you will have to change this for all loaders.', 'comment_created': datetime.datetime(2021, 6, 13, 9, 17, 47, tzinfo=datetime.timezone.utc), 'commenter': 'vsomnath', 'type': 'User'}, {'comment_id': 650496354, 'comment_body': 'You already know this, but also add tasks and transformers', 'comment_created': datetime.datetime(2021, 6, 13, 9, 18, 14, tzinfo=datetime.timezone.utc), 'commenter': 'vsomnath', 'type': 'User'}, {'comment_id': 650497086, 'comment_body': 'The download tasks for both subsets are repetitive, and they only differ in the files. I would say create train, test and valid urls and files first, and then just do something like\r\n```\r\ndc.utils.data_utils.download_url(url=train_url, dest_dir=self.data_dir)\r\n```', 'comment_created': datetime.datetime(2021, 6, 13, 9, 25, tzinfo=datetime.timezone.utc), 'commenter': 'vsomnath', 'type': 'User'}, {'comment_id': 650498362, 'comment_body': 'Alright, I shall do that!\r\n', 'comment_created': datetime.datetime(2021, 6, 13, 9, 36, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Suzukazole', 'type': 'User'}, {'comment_id': 650498480, 'comment_body': ""Doesn't ```Optional``` account for it?"", 'comment_created': datetime.datetime(2021, 6, 13, 9, 36, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Suzukazole', 'type': 'User'}, {'comment_id': 650500797, 'comment_body': '`Optional` is just for type check', 'comment_created': datetime.datetime(2021, 6, 13, 9, 57, 45, tzinfo=datetime.timezone.utc), 'commenter': 'vsomnath', 'type': 'User'}, {'comment_id': 650585972, 'comment_body': 'Can you add the new argument to the docstring?  Be sure to include a sentence, ""If this is True, the splitter argument is ignored.""  Likewise add a sentence to the description of the splitter argument: ""If precomputed_splits is True, this is ignored.""', 'comment_created': datetime.datetime(2021, 6, 13, 22, 30, 3, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 650586012, 'comment_body': 'This function will need a docstring.', 'comment_created': datetime.datetime(2021, 6, 13, 22, 30, 30, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 650642496, 'comment_body': 'yup! I will update it once I am done with the other methods.', 'comment_created': datetime.datetime(2021, 6, 14, 4, 28, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Suzukazole', 'type': 'User'}, {'comment_id': 664284111, 'comment_body': 'Paper title is changed, update it!', 'comment_created': datetime.datetime(2021, 7, 6, 6, 56, 24, tzinfo=datetime.timezone.utc), 'commenter': 'vsomnath', 'type': 'User'}, {'comment_id': 664308415, 'comment_body': 'Will do!', 'comment_created': datetime.datetime(2021, 7, 6, 7, 35, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Suzukazole', 'type': 'User'}]","[{'commit_sha': 'a3608dddfbbbed716a6d3de8e3a032ae0359f367', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e8bc721dbde25528fbc862ae19dbfd11bb654b2', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8af488ee4a247dff3b1b672a0dd294d11e0b3b27', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e99b649298f62b8ef5ca38832e6fc23c2bf9f9c2', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f9a2ed610fa6fa3cdbf524138aac86d8c82f8d1', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '370750ec82af50dcf781d8b60830a67402e3d17f', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '140761ddb64d1d0a55b5537f886fc21fab63b330', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e9365320af092d067bf4f0a4d95069e154bc4e2', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95f43b86bfb1a81fedcc8fe7a2330299926749ef', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6b17fa221dc5c91c360a77e858a4c45e40eaf0c', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e74bcd76aceaeadc264f432750c532554e9ef9cc', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd332fca24f39b44116a6905cd67696b907cd0b68', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f58d2b887e6584e2754cc34c0fe0aaf855fb27c2', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4826bb6e40c91db4367108ea8f1cf8d1f95dbaac', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '014a57fb6db9cf568cca249ce7cc7fe3924106eb', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '738479f3e7dee10493a81a024f778dfe8781097e', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e2543c4aeb6bc78693a71fe2ff96059ef198b98', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'afd68c432a42305aad726eaff6e39976b3db453c', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66ca1dd5b02b5e502cc3f34b5006a333baa70333', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86a581d248c3e6ebd3d8de5c523dd07f53f4f2ce', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1f9d6ce8478fe7d48e5140bb6fca229ac471e36', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb3a4a9a80d0f4c899601006449dcbc0655713f5', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '514803828fe607ed06a41ac55bf5de80ef06f39a', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a78ae25184f0f3954f1e870f6e124bf15e252a9e', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cedd9b90e5ac75ebe8b11806371d077dac91cb3', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c4020cab1a0de1b0a5d4415ee6b72f86d20300e', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a87c36fe87d923a29ff9a9c41e7bc1ee0a17b9b', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73b3648a504b8b79cd1161ebda3c7fe62e54d006', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f39ff96529da2ca685ff9f7300cbbf6b44037ea0', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a84aa7227d5354f33ec23f3dcd0d2d2e9a42c473', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7fe94032904efabd0d525b96d3f1c07d9bb9065', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd82a56009bdc8e39b3ca1c824566c4a26408d592', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '482818844093bd7416945dbb128270e6db0efca0', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}]",Ashwin Murali,65379684,,User,,7,,14,13
678194294,Add DummyFeaturizer ,"

## Description
Adds Dummy Featurizer that simply returns a given datapoint. This will be useful in loading datasets that do not require featurization. 


<!-- Please include a summary of the change and which issue is fixed.
Please also include relevant motivation and context.
List any dependencies that are required for this change. -->


## Type of change

Please check the option that is related to your PR.

- [ ] Bug fix (non-breaking change which fixes an issue)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
  - In this case, we recommend to discuss your modification on GitHub issues before creating the PR
- [x] Documentations (modification for documents)

## Checklist

- [X] My code follows [the style guidelines of this project](https://deepchem.readthedocs.io/en/latest/development_guide/coding.html)
  - [X] Run `yapf -i <modified file>` and check no errors (**yapf version must be  0.22.0**)
  - [X] Run `mypy -p deepchem` and check no errors
  - [X] Run `flake8 <modified file> --count` and check no errors
- [X] I have performed a self-review of my own code
- [ ] I have commented my code, particularly in hard-to-understand areas
- [X] I have made corresponding changes to the documentation
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] New unit tests pass locally with my changes
- [x] I have checked my code and corrected any misspellings
",True,2570,https://api.github.com/repos/deepchem/deepchem/pulls/2570,https://github.com/deepchem/deepchem/pull/2570,closed,70,0,4,18,3,6,0,0,[],2021-06-25 21:37:49+00:00,2021-07-02 02:50:50+00:00,537181.0,"6 days, 5:13:01","[{'comment_id': 659068336, 'comment_body': 'Can you add a usage example here?', 'comment_created': datetime.datetime(2021, 6, 25, 22, 33, 48, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 659068879, 'comment_body': 'Can you add this to `docs/source/api_reference/featurizers.rst`? That will ensure the docs render the featurizer', 'comment_created': datetime.datetime(2021, 6, 25, 22, 34, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 659069152, 'comment_body': ""Also, this isn't an abstract class since it has a concrete implementation. Can you expand the docstring to explain why we'd want a no-op featurizer like this and when users should think of using it?"", 'comment_created': datetime.datetime(2021, 6, 25, 22, 35, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 659069238, 'comment_body': 'Can you add some simple unit tests for this class?', 'comment_created': datetime.datetime(2021, 6, 25, 22, 36, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 659071386, 'comment_body': 'will do!', 'comment_created': datetime.datetime(2021, 6, 25, 22, 44, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Suzukazole', 'type': 'User'}, {'comment_id': 661823400, 'comment_body': ""Might want to add here that it's particularly useful in pipelines like loading a MolNet dataset where a featurizer is required."", 'comment_created': datetime.datetime(2021, 6, 30, 21, 28, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ncfrey', 'type': 'User'}]","[{'commit_sha': '5ef46b3542bf79df3e41a5be9c2b4c39579e719c', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da34283c878268fb0afc31a1d7cc761ca5d087e4', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b52516bd6f675a0aa8163699f43e2872e17b5fdb', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b869ab712009e226c0289977635c3027e02987c', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88c53c8fed2a1819aad8fe2545926b8a1267a076', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f4ac72f88cc27ad3ace61e1defbb180144e6388', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43d8fb0b83ac33a58b4bafdb1e0e269fcbb1b80d', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6eff6222907e5836501b6795e87e7f78bb1ccfec', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '959d9b2677ae9fdb1d1990b665ea07c565fd789b', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be291475601657cbcd3903679c77c2860b543308', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcf745f009f57f14f66726c82d3372a055ad818e', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acd9ccfdec59d95eca11bc3c9187c9322292aeae', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08080bc515ea946b9cfa9d8383e2fff2c46b29ce', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa3537c1800ce710efa625d39f05c9ad55fd6828', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ded1a5d2f3aeb56f5199a3dfd36a00a340d0042c', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52757ec41180b0a15f7738d585b59e27b9c1ba43', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73ca9f5c043f6332ff2607baf64fbaa1a54ac93b', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9013da9886d2bba4a1ae092b46fc5ebcd66eac37', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}]",Ashwin Murali,65379684,,User,,7,,14,13
690045847, Reaction Split Transformer,"## Description
Adds the transformer that splits the reaction SMILES into the source and target strings required for a translation setting. 

TODO:
- [x] Add transformer
- [x] Add option to perform reagent mixing(extends the loader) 
- [x] Update documentation
- [x] Add tests for separation and mixing.

<!-- Please include a summary of the change and which issue is fixed.
Please also include relevant motivation and context.
List any dependencies that are required for this change. -->


## Type of change

Please check the option that is related to your PR.

- [ ] Bug fix (non-breaking change which fixes an issue)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
  - In this case, we recommend to discuss your modification on GitHub issues before creating the PR
- [X] Documentations (modification for documents)

## Checklist

- [X] My code follows [the style guidelines of this project](https://deepchem.readthedocs.io/en/latest/development_guide/coding.html)
  - [X] Run `yapf -i <modified file>` and check no errors (**yapf version must be  0.22.0**)
  - [x] Run `mypy -p deepchem` and check no errors
  - [X] Run `flake8 <modified file> --count` and check no errors
- [x] I have performed a self-review of my own code
- [x] I have commented my code, particularly in hard-to-understand areas
- [x] I have made corresponding changes to the documentation
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] New unit tests pass locally with my changes
- [x] I have checked my code and corrected any misspellings
",True,2597,https://api.github.com/repos/deepchem/deepchem/pulls/2597,https://github.com/deepchem/deepchem/pull/2597,closed,176,0,4,21,1,16,0,0,[],2021-07-14 16:10:02+00:00,2021-07-28 01:51:32+00:00,1158090.0,"13 days, 9:41:30","[{'comment_id': 669772087, 'comment_body': 'Make sure to add a docstring here with a usage example ', 'comment_created': datetime.datetime(2021, 7, 14, 16, 28, 39, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 669773110, 'comment_body': 'In the docstring make sure to carefully explain the input format expected. Is the reaction input format SMARTS or some other standard reaction format type?', 'comment_created': datetime.datetime(2021, 7, 14, 16, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 669773383, 'comment_body': 'Make sure to add the new transformer to the transformer docs and to add some unit tests', 'comment_created': datetime.datetime(2021, 7, 14, 16, 30, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 669775381, 'comment_body': 'yep! I will add those. The input is expected in the reaction SMILES (reactant>reagent>product) format, and can also handle the case when there are no reagents i.e reactant>>product format. ', 'comment_created': datetime.datetime(2021, 7, 14, 16, 33, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Suzukazole', 'type': 'User'}, {'comment_id': 669776983, 'comment_body': 'Will do!', 'comment_created': datetime.datetime(2021, 7, 14, 16, 35, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Suzukazole', 'type': 'User'}, {'comment_id': 674169173, 'comment_body': 'Make sure to clean up comments before merge here', 'comment_created': datetime.datetime(2021, 7, 21, 16, 57, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 674169614, 'comment_body': ""I'd suggest putting this into an auxiliary datafile and keeping the test file itself simpler. That's the style we follow elsewhere in the tests"", 'comment_created': datetime.datetime(2021, 7, 21, 16, 58, 25, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 674171313, 'comment_body': 'Make sure the docstring is formatted correctly. yapf sometimes messes this up so you might need to fix manually', 'comment_created': datetime.datetime(2021, 7, 21, 17, 0, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 674171497, 'comment_body': 'Docstring formatting issue here too', 'comment_created': datetime.datetime(2021, 7, 21, 17, 0, 51, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 674173576, 'comment_body': 'What is mixed training? Can you add more text above that explains the concept?', 'comment_created': datetime.datetime(2021, 7, 21, 17, 3, 58, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 674175149, 'comment_body': 'Just do a text break like\r\n```\r\nWhen mixed training is disabled, you get the following outputs\r\n\r\n>>> trans_disable = ...\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 17, 6, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 674175347, 'comment_body': 'Can you simplify this to have only 2 reactions instead of 3? Will make it easier to read', 'comment_created': datetime.datetime(2021, 7, 21, 17, 6, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 674182018, 'comment_body': 'Alright, I will fix that.', 'comment_created': datetime.datetime(2021, 7, 21, 17, 16, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Suzukazole', 'type': 'User'}, {'comment_id': 674183580, 'comment_body': 'Yup, I will do that. Only 2 are needed to demonstrate the mixed training functionality.', 'comment_created': datetime.datetime(2021, 7, 21, 17, 18, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Suzukazole', 'type': 'User'}, {'comment_id': 674184626, 'comment_body': ""It just refers to the fact that the reagents and reactants are no longer separated by a '>'. I will clarify this on the doc as well!"", 'comment_created': datetime.datetime(2021, 7, 21, 17, 20, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Suzukazole', 'type': 'User'}, {'comment_id': 676352290, 'comment_body': 'Not sure what the current convention is on testing, but in the past, I remember seeing a  `setUp` method for the `TestXYZ` class. @rbharath: This one and the old style are fine by me though.', 'comment_created': datetime.datetime(2021, 7, 26, 7, 20, 43, tzinfo=datetime.timezone.utc), 'commenter': 'vsomnath', 'type': 'User'}]","[{'commit_sha': '7066d096fa091591970163b207bcebca13c11b33', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1966d163710420ae10b37f7891c07bbf64d16caf', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f46d8a0a7c6cc0d87f68c6222282ed43e16bc822', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3d7798ece76dbf4a983d04dde477d055ac7caef', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f75a278ea25231698798848c61ebb5784677c6a', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19e7974656cb072f3f88b209de1f1cea55257e64', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18c15976f59d74f10bc8d1e95223a38e681f8255', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c543df08533116246d5a515bb8b08d5f7585a503', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '971eee593b6090d758653db3667d6c99849f0858', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1705fcb1ad478118fede9f9dd16c1e7b004c134c', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea70f88417dbd0a68337dfa69783c2ee93f5ff1a', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41c8989fcf0c9103349701fe7b1ba465ddc9b0d1', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7da392a6ab5f34bdd4b9121715200ca2ef78e6be', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69773a6b428e89427b7d944642679b075c2d163f', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84574e2148eeefdfa91908df4ef08e48b99c4290', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '628ddfc9d76d61c9b341720f6eb92282d285533a', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa2d523760fde04f704a374238808f51aa166413', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '718791ecbd0f1aa780f978b790f6aa33b91ac010', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70af35b8992a276d87099fbb776c1f4ce3a0e53f', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53b9d42d741b411b1ef990626de2745497bfdf02', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54ed4814b3874c6e1331428069330949537068f1', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}]",Ashwin Murali,65379684,,User,,7,,14,13
712505987,Reaction Featurizer,"
## Description

Adds RxnFeaturizer class, combines functionality of RobertaTokenizerFast and RxnSplitTransformer to tokenize chemical reactions. 
## Type of change

Please check the option that is related to your PR.

- [ ] Bug fix (non-breaking change which fixes an issue)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
  - In this case, we recommend to discuss your modification on GitHub issues before creating the PR
- [ ] Documentations (modification for documents)

## Checklist

- [X] My code follows [the style guidelines of this project](https://deepchem.readthedocs.io/en/latest/development_guide/coding.html)
  - [x] Run `yapf -i <modified file>` and check no errors (**yapf version must be  0.22.0**)
  - [x] Run `mypy -p deepchem` and check no errors
  - [x] Run `flake8 <modified file> --count` and check no errors
  - [x] Run `python -m doctest <modified file>` and check no errors
- [x] I have performed a self-review of my own code
- [x] I have commented my code, particularly in hard-to-understand areas
- [x] I have made corresponding changes to the documentation
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] New unit tests pass locally with my changes
- [x] I have checked my code and corrected any misspellings
",True,2656,https://api.github.com/repos/deepchem/deepchem/pulls/2656,https://github.com/deepchem/deepchem/pull/2656,closed,172,23,5,28,1,11,0,0,[],2021-08-13 16:57:50+00:00,2021-09-10 03:59:17+00:00,2372487.0,"27 days, 11:01:27","[{'comment_id': 693241403, 'comment_body': 'Add usage example', 'comment_created': datetime.datetime(2021, 8, 20, 22, 8, 26, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 693241518, 'comment_body': 'Add docstring', 'comment_created': datetime.datetime(2021, 8, 20, 22, 8, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 693241707, 'comment_body': 'Unit tests', 'comment_created': datetime.datetime(2021, 8, 20, 22, 9, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 696948394, 'comment_body': 'done!', 'comment_created': datetime.datetime(2021, 8, 26, 20, 17, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Suzukazole', 'type': 'User'}, {'comment_id': 697115472, 'comment_body': 'Maybe this should go before the attempt to import RxnFeaturizer?', 'comment_created': datetime.datetime(2021, 8, 27, 2, 50, 51, tzinfo=datetime.timezone.utc), 'commenter': 'alat-rights', 'type': 'User'}, {'comment_id': 697115710, 'comment_body': 'should this be wrapped up in the try block along with RobertaTokenizerFast?', 'comment_created': datetime.datetime(2021, 8, 27, 2, 51, 41, tzinfo=datetime.timezone.utc), 'commenter': 'alat-rights', 'type': 'User'}, {'comment_id': 700423504, 'comment_body': 'yeah that makes sense, since it would use transformers as well.\r\n', 'comment_created': datetime.datetime(2021, 9, 1, 17, 31, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Suzukazole', 'type': 'User'}, {'comment_id': 700454277, 'comment_body': 'Ah the issue here is the default value! This requires HuggingFace Transformer to be installed since `RxnFeaturizer` requires HuggingFace to be installed. Maybe set this by default to be a string ""rxnfeaturizer"" and initialize it internally in the method instead', 'comment_created': datetime.datetime(2021, 9, 1, 18, 15, 47, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 701377502, 'comment_body': 'I tried to change it to the string args, but the checks still seem to fail.', 'comment_created': datetime.datetime(2021, 9, 2, 19, 50, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Suzukazole', 'type': 'User'}, {'comment_id': 705697988, 'comment_body': 'done!\r\n', 'comment_created': datetime.datetime(2021, 9, 9, 21, 5, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Suzukazole', 'type': 'User'}, {'comment_id': 705698031, 'comment_body': 'done!\r\n', 'comment_created': datetime.datetime(2021, 9, 9, 21, 5, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Suzukazole', 'type': 'User'}]","[{'commit_sha': '3e50553db32037322eb1ee81fffb893975cb9eb9', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38605df54a8c1ec2dfd51929d37549bcf0ab69ec', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '115ac779fede0d322ce132923fb81ce01ef74e8c', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bcd6286b8a9433955153522ad669fb21830f7bf', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '846e1ebb36f15cfce5634e58b84442825ce45129', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '712b0c89799452df4a1512439918e9176052bfcd', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '605dd5e8d14d431a277cedf8353c26acf340e7b8', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b619533884ce5f76ec0030ee81f0ee9920df6b7', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd91dbca8dfeae483bf86f4d4654a8e07fd91f8f', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f0bc3ab75b8a2046da0774fe36f2be727c86922', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '557807715b4b3dc4f307bd8920e02d42b186c64c', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1944d069d03636236c59dca05588a1fcdee2eb98', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ceed6e24e5783d276b2ecbaf19c282a48fd1b9b2', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc7a29859ff5749348fa28456fd5b999495a3264', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33309736dbb81117c7bad1e316f6dea510ea05a4', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '897ad347dfdb171959f21341fcbc528f77d5dfb1', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19378d579768fb5af31edc6388b7c2ac1fffd640', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d103f5a44c253f713cafacfb74cf2e01208c8fb', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24fcb804e26323aad39193b3abc49db321bd7231', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '972dfc9d313f0da2af54476b316aa866440146ae', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c26c2fb46d5663e07c2646896fa7693a7a1e3e3c', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '851d08f1b610f1624b2befe2eb466f49c8cc6722', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1b95e9064499e43709014f1a25305d81ef93aa0', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7230eb5dea4dcfbd85801189b12eb9bc12c15f6', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a75121e52693bcf5bf0c878ea4f479e538462b5c', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d517f7cee5fef42df69d1bef41bd8c97222c896', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48d1807bc7da34959f2ec61695fa6869e03d2249', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b488c54159cc451a969d5539135078ae2775ea70', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}]",Ashwin Murali,65379684,,User,,7,,14,13
703753951,Fix splitter errors for datasets without labels,"
## Description

Some datasets without labels such as USPTO, Swiss-Prot are not compatible with the splitters as the get_shard_size method looks for the length of y, which in this case is None. This is a crack at getting around this issue, I was able to load in and split the USPTO datasets with this. 


## Type of change

Please check the option that is related to your PR.

- [X] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
  - In this case, we recommend to discuss your modification on GitHub issues before creating the PR
- [ ] Documentations (modification for documents)

## Checklist

- [X] My code follows [the style guidelines of this project](https://deepchem.readthedocs.io/en/latest/development_guide/coding.html)
  - [X] Run `yapf -i <modified file>` and check no errors (**yapf version must be  0.22.0**)
  - [X] Run `mypy -p deepchem` and check no errors
  - [X] Run `flake8 <modified file> --count` and check no errors
- [ ] I have performed a self-review of my own code
- [ ] I have commented my code, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] I have added tests that prove my fix is effective or that my feature works
- [ ] New unit tests pass locally with my changes
- [ ] I have checked my code and corrected any misspellings
",True,2641,https://api.github.com/repos/deepchem/deepchem/pulls/2641,https://github.com/deepchem/deepchem/pull/2641,closed,46,8,3,6,2,6,0,0,[],2021-08-04 17:20:05+00:00,2021-08-23 20:05:26+00:00,1651521.0,"19 days, 2:45:21","[{'comment_id': 685256397, 'comment_body': ""So here I'm thinking more if we do\r\n```\r\ndataset = dc.data.DiskDataset.from_numpy(X)\r\nassert dataset.get_shard_size() == 100\r\n```\r\nThe idea is we want to check that datasets without labels work correctly :)"", 'comment_created': datetime.datetime(2021, 8, 9, 14, 42, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 685402346, 'comment_body': 'yup! will add that ', 'comment_created': datetime.datetime(2021, 8, 9, 17, 52, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Suzukazole', 'type': 'User'}, {'comment_id': 687294474, 'comment_body': 'Is this supposed to be in this PR?', 'comment_created': datetime.datetime(2021, 8, 12, 1, 11, 24, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 687294767, 'comment_body': 'This should be fixed! Can you raise a separate issue for this and we can get a fix going?', 'comment_created': datetime.datetime(2021, 8, 12, 1, 12, 18, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 687295358, 'comment_body': 'Oh I see this is used in the test.', 'comment_created': datetime.datetime(2021, 8, 12, 1, 14, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 687394176, 'comment_body': 'Yup will do!', 'comment_created': datetime.datetime(2021, 8, 12, 5, 16, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Suzukazole', 'type': 'User'}]","[{'commit_sha': '4970501a119bcd1387abe3a77daca35a506f1778', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ae5640f83ba5dad81ff484c59b5f72b84d00251', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f114ba67938cfc371acaf76db5455c60be9417b6', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3573cca264ea7c21c30bb0b9b9fd195caecaea0c', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5104ddd1b220d471c3c049332aef3ea78e224f63', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c99d126044d44d7b2563abb7586d8e5723eca3d9', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}]",Ashwin Murali,65379684,,User,,7,,14,13
707645033,"Update PR template and docs with doctest, pytest","
## Description

Small changes to the documentation and the PR template, which adds a section on running unit tests and doctests locally. 

## Type of change

Please check the option that is related to your PR.

- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
  - In this case, we recommend to discuss your modification on GitHub issues before creating the PR
- [X] Documentations (modification for documents)

## Checklist

- [ ] My code follows [the style guidelines of this project](https://deepchem.readthedocs.io/en/latest/development_guide/coding.html)
  - [ ] Run `yapf -i <modified file>` and check no errors (**yapf version must be  0.22.0**)
  - [ ] Run `mypy -p deepchem` and check no errors
  - [ ] Run `flake8 <modified file> --count` and check no errors
- [ ] I have performed a self-review of my own code
- [ ] I have commented my code, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] I have added tests that prove my fix is effective or that my feature works
- [ ] New unit tests pass locally with my changes
- [ ] I have checked my code and corrected any misspellings
",True,2651,https://api.github.com/repos/deepchem/deepchem/pulls/2651,https://github.com/deepchem/deepchem/pull/2651,closed,13,2,2,3,0,0,0,0,[],2021-08-10 19:58:22+00:00,2021-08-12 01:22:50+00:00,105868.0,"1 day, 5:24:28",[],"[{'commit_sha': 'c0511605f188991f3a4261d373cbbd4b9dc50e6e', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05896d0c047e365072add4517bea4fad0f3e4442', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fe48b45dae15ad9e1a01ef3aa808e725f7ce944', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}]",Ashwin Murali,65379684,,User,,7,,14,13
685402507,Add section on setting up symbolic link,"
## Description

Adds a small section to the docs regarding setting up a symbolic link to the current development directory when installing DeepChem from source. This will be useful for developers to test their feature locally. 

## Type of change

Please check the option that is related to your PR.

- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
  - In this case, we recommend to discuss your modification on GitHub issues before creating the PR
- [X] Documentations (modification for documents)

## Checklist

- [ ] My code follows [the style guidelines of this project](https://deepchem.readthedocs.io/en/latest/development_guide/coding.html)
  - [ ] Run `yapf -i <modified file>` and check no errors (**yapf version must be  0.22.0**)
  - [ ] Run `mypy -p deepchem` and check no errors
  - [ ] Run `flake8 <modified file> --count` and check no errors
- [ ] I have performed a self-review of my own code
- [ ] I have commented my code, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] I have added tests that prove my fix is effective or that my feature works
- [ ] New unit tests pass locally with my changes
- [ ] I have checked my code and corrected any misspellings
",True,2587,https://api.github.com/repos/deepchem/deepchem/pulls/2587,https://github.com/deepchem/deepchem/pull/2587,closed,11,0,1,2,1,0,0,0,[],2021-07-07 18:05:00+00:00,2021-07-08 14:02:04+00:00,71824.0,19:57:04,[],"[{'commit_sha': 'c4919fcc89adc65c71364662e2a6ac4590493476', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9447df6ed2930fc4495b60c5ac2ecacc6348b9f1', 'committer_username': 'Suzukazole', 'committer_name': 'Ashwin Murali', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 15, 2, 15, 18, tzinfo=datetime.timezone.utc)}]",Ashwin Murali,65379684,,User,,7,,14,13

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
43098215,deepchem,deepchem/deepchem,Python,1650,5354,144,247,10525,622,15,163,"[{'id': 999198953, 'number': 2998, 'closed': None, 'created': datetime.datetime(2022, 7, 18, 10, 30, 34, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 6429, 'deletions': 0, 'state': 'open'}, {'id': 748715048, 'number': 2709, 'closed': None, 'created': datetime.datetime(2021, 10, 4, 8, 58, 56, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 2942, 'deletions': 0, 'state': 'open'}, {'id': 712505987, 'number': 2656, 'closed': datetime.datetime(2021, 9, 10, 3, 59, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 13, 16, 57, 50, tzinfo=datetime.timezone.utc), 'time_taken': 2372487.0, 'time_delta': '27 days, 11:01:27', 'additions': 172, 'deletions': 23, 'state': 'closed'}, {'id': 707645033, 'number': 2651, 'closed': datetime.datetime(2021, 8, 12, 1, 22, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 10, 19, 58, 22, tzinfo=datetime.timezone.utc), 'time_taken': 105868.0, 'time_delta': '1 day, 5:24:28', 'additions': 13, 'deletions': 2, 'state': 'closed'}, {'id': 704853556, 'number': 2643, 'closed': datetime.datetime(2021, 8, 6, 19, 17, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 5, 16, 29, 47, tzinfo=datetime.timezone.utc), 'time_taken': 96461.0, 'time_delta': '1 day, 2:47:41', 'additions': 7, 'deletions': 12, 'state': 'closed'}, {'id': 703753951, 'number': 2641, 'closed': datetime.datetime(2021, 8, 23, 20, 5, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 17, 20, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1651521.0, 'time_delta': '19 days, 2:45:21', 'additions': 46, 'deletions': 8, 'state': 'closed'}, {'id': 698918716, 'number': 2628, 'closed': datetime.datetime(2021, 7, 29, 19, 2, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 28, 18, 20, 23, tzinfo=datetime.timezone.utc), 'time_taken': 88944.0, 'time_delta': '1 day, 0:42:24', 'additions': 49, 'deletions': 26, 'state': 'closed'}, {'id': 690045847, 'number': 2597, 'closed': datetime.datetime(2021, 7, 28, 1, 51, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 14, 16, 10, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1158090.0, 'time_delta': '13 days, 9:41:30', 'additions': 176, 'deletions': 0, 'state': 'closed'}, {'id': 685402507, 'number': 2587, 'closed': datetime.datetime(2021, 7, 8, 14, 2, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 18, 5, tzinfo=datetime.timezone.utc), 'time_taken': 71824.0, 'time_delta': '19:57:04', 'additions': 11, 'deletions': 0, 'state': 'closed'}, {'id': 683857146, 'number': 2583, 'closed': datetime.datetime(2023, 4, 5, 23, 39, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 17, 41, 39, tzinfo=datetime.timezone.utc), 'time_taken': 55231088.0, 'time_delta': '639 days, 5:58:08', 'additions': 8, 'deletions': 8, 'state': 'closed'}, {'id': 678194294, 'number': 2570, 'closed': datetime.datetime(2021, 7, 2, 2, 50, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 25, 21, 37, 49, tzinfo=datetime.timezone.utc), 'time_taken': 537181.0, 'time_delta': '6 days, 5:13:01', 'additions': 70, 'deletions': 0, 'state': 'closed'}, {'id': 668459415, 'number': 2546, 'closed': datetime.datetime(2021, 7, 9, 16, 3, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 18, 56, 5, tzinfo=datetime.timezone.utc), 'time_taken': 2408841.0, 'time_delta': '27 days, 21:07:21', 'additions': 149, 'deletions': 84, 'state': 'closed'}, {'id': 650604952, 'number': 2525, 'closed': datetime.datetime(2021, 6, 26, 7, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 22, 10, 24, 26, tzinfo=datetime.timezone.utc), 'time_taken': 3014674.0, 'time_delta': '34 days, 21:24:34', 'additions': 53, 'deletions': 115, 'state': 'closed'}, {'id': 590524300, 'number': 2435, 'closed': datetime.datetime(2021, 3, 22, 20, 29, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 11, 5, 21, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1004864.0, 'time_delta': '11 days, 15:07:44', 'additions': 313, 'deletions': 361, 'state': 'closed'}]"
