pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1375586395,Organize arguments of functions and apply colorblind_safe option,"**Checklist**
Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR.

- [x] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html)
- [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).
You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically
- [x] Please add tests to cover your changes if applicable.
- [x] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure.
- [x] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information).

Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description.

**Description**
This is part of the Google Summer of Code project. My contribution consists of two parts.
One part is organizing arguments of functions in visualization.py. This change helps users to set arguments without referencing documents frequently.
For example, hinton does not have figsize, but other functions such as plot_energy_level do. Also, the order of the arguments varies from function to function, so the user had to see the official document.
I addressed these issues by making the following modifications
First, arguments that many functions should have in common, such as fig and ax, are now keyword arguments.
Second, the order of the arguments was aligned as required arguments, function-specific ones, and common ones, making it easier for the user to remember and use.
```
# before
hinton(rho, xlabels=None, ylabels=None, title=None, 
       ax=None, cmap=None, label_top=True, color_style='scaled')
# after
hinton(rho, x_basis=None, y_basis=None, color_style=""scaled"",
       label_top=True, *, cmap=None, colorbar=True, fig=None, ax=None)
```
The other is applying colorblind_safe to them. QuTiP has colorblind_safe as a setting option, but most functions did not change their color corresponding to colorblind_safe. Now, they change their plot colors when you change the colorblind_safe option and you can change color if you do not like the default color.
For example, when quite.settings.colorblind_safe=False, a plot by plot_spin_distribution is the left plot. On the other hand, when quite.settings.colorblind_safe=False, it outputs the right plot in the different colormap (cividis). This is perceptually uniform. Of course, you can change the colormap as you like.
<img width=""500"" alt=""colorblind_safe"" src=""https://github.com/qutip/qutip/assets/72233550/0e7dd73a-7dc3-42c3-960f-2f92afa31033"">
",True,2170,https://api.github.com/repos/qutip/qutip/pulls/2170,https://github.com/qutip/qutip/pull/2170,closed,406,503,6,58,12,49,0,0,[],2023-06-02 11:07:46+00:00,2023-07-07 20:31:47+00:00,3057841.0,"35 days, 9:24:01","[{'comment_id': 1220054609, 'comment_body': 'This will never be used as it will be overwritten by either `cm.Greys_r` or `cm.RdBu` in the getter.', 'comment_created': datetime.datetime(2023, 6, 6, 17, 30, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1220058603, 'comment_body': ""I am not usre this deserve it's own file, or even it's own class.\r\nA simple `_get_cmap` function in `visualization.py` could do the same."", 'comment_created': datetime.datetime(2023, 6, 6, 17, 34, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1220060994, 'comment_body': 'Here, what kind of options are supported by `figure_options` and `axes_options` is not clear to me.', 'comment_created': datetime.datetime(2023, 6, 6, 17, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1220063964, 'comment_body': 'I would remove the `figsize` argument. If users want to control the image size, they could provide `fig` and `ax`.', 'comment_created': datetime.datetime(2023, 6, 6, 17, 40, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1220093251, 'comment_body': 'When going over the old function, please try to clean then and fix issues, etc.\r\n\r\nHere labels will not be generated it and operator ket (column stacked density matrix) is passed.\r\nIt also raise an error when `rho` is a super operator that is not made of qubits, which should be included in the docstring or generalized.\r\n\r\nThere are probably many issues like this. You can only leave comment (`#TODO : Add label`) if there are too many to fix.', 'comment_created': datetime.datetime(2023, 6, 6, 18, 7, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1221420495, 'comment_body': 'Actually, I am thinking the same idea. I deleted the class and made a function to set color.', 'comment_created': datetime.datetime(2023, 6, 7, 11, 29, 11, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1221438525, 'comment_body': 'Hi. I changed arguments. \r\nFigure_options gives figsize, dpi, etc... to a Figure object and axes_options works almost the same as figure_options do, but beginners may not know which contains the title argument. \r\nHence, I deleted them because you can preset these options to Figure and Axes objects. Instead, I added x and y labels, title and cmap (also figsize?). Most people are satisfied with that, I think. ', 'comment_created': datetime.datetime(2023, 6, 7, 11, 41, 15, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1226459375, 'comment_body': 'Could you look at colorblind friendly color map such as `Cividis` https://matplotlib.org/stable/users/prev_whats_new/whats_new_2.2.html#cividis-colormap', 'comment_created': datetime.datetime(2023, 6, 12, 10, 42, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1226513289, 'comment_body': 'Have you though about using keyword only arguments?\r\n`hinton(rho, ..., *, figure=None, axes=None)`\r\nMaybe setting `figure` etc. as keyword only would make sense.', 'comment_created': datetime.datetime(2023, 6, 12, 11, 30, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1241981734, 'comment_body': ""Would \r\n```\r\naxes[0].set_title('Coherent state')\r\nplot_fock_distribution(rho_coherent, fig=fig, ax=axes[0]);\r\n``` \r\nwork? Since you are using pre made axes and plot, do we need to output?"", 'comment_created': datetime.datetime(2023, 6, 26, 10, 37, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1242011189, 'comment_body': 'This note format is recognized by the documentation builder and will look nice on the website.\r\n```suggestion\r\n    .. note:: \r\n    \r\n        colorblind_safe does not apply because of its unique colormap\r\n```', 'comment_created': datetime.datetime(2023, 6, 26, 11, 3, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1242034233, 'comment_body': 'The figure is never used, should we accept a list of axes of the right length?', 'comment_created': datetime.datetime(2023, 6, 26, 11, 18, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1242890238, 'comment_body': 'Of course, that works. We do not need to output.', 'comment_created': datetime.datetime(2023, 6, 26, 22, 46, 57, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1247735641, 'comment_body': 'Thanks for your suggestion. I replaced them', 'comment_created': datetime.datetime(2023, 6, 30, 10, 56, 28, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1247896263, 'comment_body': 'I deleted the else part. This function works if only axes are passed to.', 'comment_created': datetime.datetime(2023, 6, 30, 13, 56, 16, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1250725819, 'comment_body': ""Let's remove this function."", 'comment_created': datetime.datetime(2023, 7, 3, 11, 16, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1250728206, 'comment_body': ""```suggestion\r\n    if projection not in ('2d', '3d'):\r\n        raise ValueError('Unexpected value of projection keyword argument')\r\n    fig, ax = _is_fig_and_ax(fig, ax, projection)\r\n```"", 'comment_created': datetime.datetime(2023, 7, 3, 11, 18, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1250759180, 'comment_body': '```suggestion\r\n    alpha_max : float, default=7.5\r\n```', 'comment_created': datetime.datetime(2023, 7, 3, 11, 44, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1250762878, 'comment_body': '```suggestion\r\n    x_basis : list of strings, optional\r\n```', 'comment_created': datetime.datetime(2023, 7, 3, 11, 48, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1251236413, 'comment_body': '`sphereplot` is included twice.', 'comment_created': datetime.datetime(2023, 7, 3, 19, 57, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1251240421, 'comment_body': '```suggestion\r\n        raise ValueError(\r\n            f""got {len(ticklabels)} ticklabels but needed {len(ticks)}""\r\n        )\r\n```', 'comment_created': datetime.datetime(2023, 7, 3, 20, 1, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1251240662, 'comment_body': '```suggestion\r\n        raise ValueError(\r\n            ""axis must be either \'x\' or \'y\'""\r\n        )\r\n```', 'comment_created': datetime.datetime(2023, 7, 3, 20, 1, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1251242832, 'comment_body': 'A cyclic map would be better when using ""phase"" `color_style`.', 'comment_created': datetime.datetime(2023, 7, 3, 20, 4, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1251249370, 'comment_body': 'The `colorbar` is too close to the plot.', 'comment_created': datetime.datetime(2023, 7, 3, 20, 10, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1251252683, 'comment_body': '`theta` and `phi` should range between `[0, pi]` and `[0, 2 pi]`.\r\nIt is not clear in the documentation but other range create bad plots.\r\nCould you add a comment for this in the documentation.', 'comment_created': datetime.datetime(2023, 7, 3, 20, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1251255572, 'comment_body': ""In hinton, `x_basis` default is [`|0>`, `|1>`, ...], but here it's `x_basis` and the default is no labels."", 'comment_created': datetime.datetime(2023, 7, 3, 20, 19, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1251258087, 'comment_body': 'Improvement that could come later: scale should be larger than the first Hamiltonian. \r\n', 'comment_created': datetime.datetime(2023, 7, 3, 20, 21, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1251259678, 'comment_body': '`offset` just control the x label, maybe change it for that.\r\nThe color, alpha could be options inputs.', 'comment_created': datetime.datetime(2023, 7, 3, 20, 24, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1251259824, 'comment_body': ""Let's remove it."", 'comment_created': datetime.datetime(2023, 7, 3, 20, 25, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1251261213, 'comment_body': 'Could use an input for the smoothness.\r\nThe `200` in `xvec = np.linspace(-alpha_max, alpha_max, 200)` could be `N`.', 'comment_created': datetime.datetime(2023, 7, 3, 20, 27, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1251261501, 'comment_body': ""Let's remove."", 'comment_created': datetime.datetime(2023, 7, 3, 20, 28, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1251262193, 'comment_body': ""Let's remove `title` like we did elsewhere."", 'comment_created': datetime.datetime(2023, 7, 3, 20, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1251265678, 'comment_body': 'These `THETA` and `PHI` are  not the same as the ones from `sphereplot` (they need to be 2d), but have the same range limit.', 'comment_created': datetime.datetime(2023, 7, 3, 20, 33, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1251902695, 'comment_body': 'This is for ```sphereplot```, right? I added ``` pad=.05```', 'comment_created': datetime.datetime(2023, 7, 4, 11, 31, 25, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1251918504, 'comment_body': 'Hi. In that case, deleting alpha and adding xvec and yvec (default is None or np.linspace(-7.5, 7.5, 200)) may be better. What do you think of this idea?', 'comment_created': datetime.datetime(2023, 7, 4, 11, 47, 16, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1251959883, 'comment_body': 'I think ```offset``` is good. Shifting x ticklabels with it is easier than shifting x ticklabels by specifying their positions.\r\nI added ```color``` option. Thanks!\r\nI will not add ```alpha```. I do not know when users want to change alpha.', 'comment_created': datetime.datetime(2023, 7, 4, 12, 23, 48, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1251984541, 'comment_body': 'Sorry. What do you mean by that? I hope you add details with this plot.\r\n<img width=""594"" alt=""plot_energy_levels"" src=""https://github.com/qutip/qutip/assets/72233550/3bb7eee7-d346-4be6-a20b-82e2c5e83b67"">\r\n', 'comment_created': datetime.datetime(2023, 7, 4, 12, 46, 4, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1252040235, 'comment_body': 'I used codes in hinton. I used try exception just in case (like when users pass superoperator).\r\n[default_ticklabels.pdf](https://github.com/qutip/qutip/files/11949816/default_ticklabels.pdf)\r\n', 'comment_created': datetime.datetime(2023, 7, 4, 13, 35, 1, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1252262382, 'comment_body': 'This scale `[-2, 0, 2]` on the left is not great for explaining the second set of values which range is wider.\r\nit get harder to read the more Hamiltonian there are.\r\nAdding another scale on the right could be useful.\r\nI do not expect you to fix this there.', 'comment_created': datetime.datetime(2023, 7, 4, 17, 52, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1252262561, 'comment_body': 'Looks fine. Thank you.', 'comment_created': datetime.datetime(2023, 7, 4, 17, 52, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1252264400, 'comment_body': 'But this only allows to shift labels, not use more useful ones. We never actually check that the state is a single fock state and it could be used with tensored space if we allow customs labels.', 'comment_created': datetime.datetime(2023, 7, 4, 17, 56, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1252274201, 'comment_body': 'yes this would be fine.', 'comment_created': datetime.datetime(2023, 7, 4, 18, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1252914954, 'comment_body': 'Here is a sample use.\r\n<img width=""528"" alt=""wigner"" src=""https://github.com/qutip/qutip/assets/72233550/18921533-85cf-4803-a21e-e416e4414e41"">\r\n', 'comment_created': datetime.datetime(2023, 7, 5, 10, 42, 39, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1252962712, 'comment_body': 'Now, users can set xticklabels.\r\n<img width=""625"" alt=""fock"" src=""https://github.com/qutip/qutip/assets/72233550/712aa5b2-002f-4ade-af26-9cfa247f4f24"">\r\n', 'comment_created': datetime.datetime(2023, 7, 5, 11, 22, 44, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1253004216, 'comment_body': 'I tried, but they do not look good. I will not do it for now.', 'comment_created': datetime.datetime(2023, 7, 5, 12, 1, 21, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1254889097, 'comment_body': 'Why is there a `try, except` clause here?', 'comment_created': datetime.datetime(2023, 7, 6, 20, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1255637120, 'comment_body': 'That code makes bra and ket like labels by using dimensions of Qobj. If it does not exist, when users want to see superoperators, the code outputs an error because of their dimensions. I believe showing plot is more important than adding labels.\r\n[superoperator.pdf](https://github.com/qutip/qutip/files/11980951/superoperator.pdf)\r\n', 'comment_created': datetime.datetime(2023, 7, 7, 10, 48, 56, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1255666027, 'comment_body': 'Dimensions exist for all Qobj including superoperators.\r\nIf `_default_cb_labels` does not support superoperator, we could add that support or use\r\n```suggestion\r\n        if not M.issuper:\r\n            x_basis, y_basis = _default_cb_labels(x_basis, y_basis, M)\r\n```\r\nto make clear this is a special case.', 'comment_created': datetime.datetime(2023, 7, 7, 11, 13, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1255768515, 'comment_body': 'Hi. I do not know that dimensions exist for all Qobj. I used the shape of Qobj and the code should work for all Qobj now. I deleted _default_cb_labels because this is made to follow pep8 and we no longer need it.', 'comment_created': datetime.datetime(2023, 7, 7, 12, 44, 18, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}]","[{'commit_sha': '0e48b29cd84a2267bd151da3ea156c4949018fea', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd1a4c67d0ea55f6eb2f661843fbd887a1decfb2', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9365b223b56c20c3ac81c718ba79c02d11f72df3', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a043efe6ad4698c55922adfe12a9dc5e743712fe', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b6ec74f0102fd3754b2953896b3ac312c44ca36', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e71b23558d678eda35c871a08c037130df394f8', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2172e749c08d757f550f242d4b72acd76cf82b75', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a654901947faf1e9650e1f7535502f4cee882f9d', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92317c13b7afd46a6efa847774b169138526784a', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '201e691003fd454e857ebdd29ce2a7dbfd167538', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '693541e6a5cb484a09a7a29ed0ccf5570a1ae4ef', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b85d5fac0a7f61233961297a55a33e4fa3d13c70', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e60820e96acd73ce09dbeec9f9ba74b19f67bfde', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fbd9f9cbdfe502b89d6f063e132a4d2284b928d', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd40c75cbde3d3dafce0b26e3c947f42b25c7e84', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5997b12dded2ddb49e32c43dfe6901f3f5c08277', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f49d631bde8668db4e7a25a32c52b594fad0171', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '439405ab41a11bc7dd699cc07d8b5306607a1e91', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bd999f14e18d8c02c4dea119081b8b8ec78f0bb', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac72dc86f2b37d9a0b31d21207b59de00a725774', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71e40370fb4aacd0435d529d772ea7f0d007671e', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'deae31d4b67c720f15ced260fb8ccd9f17d7c524', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1754d16b02f39a154d469945d8c778af6b18e03b', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec7493694620334b1dbee2d4f99f154a2c1d6995', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fddbf12ed00497f18bbee97f7c3dbfa47be82a0', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '607a8e4ebf9015518cc773b4ae8f1856967e48c3', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '459f9ce47f0769cd0aa6b39bcbc311071e5597b9', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fbdd767e973df547b774da8602d1047f5ee9cea', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02bf1959f2b79e552ca0832213f226e37393c779', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f40e18a9c916a4909e6cf11d7c80826e3d7e5cef', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79554626c518c1f98c3b6a4e26e635ceb3a4f99a', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f4c0e4d9b97e0879f155472dcbc031bd7e855d1', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b724b6e3d9d68fdb29768846e82d1b5939d4a263', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9c17033a5aefda99394ad8ef712be505ce9a791', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21fa48bdbfaed084c59a9106602081589312e1ff', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1dabc310d66a3a31528444ecc1a7f6e9f513bec6', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c372c75ff0ba39382384b5fea0502b30f3447eb8', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60ea3d36f02fa59225c7cd807b2fa9951961bf35', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2b78801c3fe4bb43d650982a04e58413d349f7b', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e879b14762c84c16dc2fef39ef31bde9ff64d4f', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '249235e19ce255d6a6f0cced0e35f7ed900c7ff2', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '813e47401fd32b0e1f301f533fc4ff757906ea0d', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57770cb22c4b6d067e3b951014dfab2c69972c2e', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c8ab129188c275ebccfa104a3919cf66c83c708', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abf922820e6473b78c60dea577a871a40f217b2d', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c0414988a2444d7c9d431e1d04275708f015f31', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d86ec639103644c64c45f12c78b5e6597139bfe', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e201728f3fb1193e7db95e965e308373fd0171e', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11fcab9318280710aff3e5b8a6a03b2d06eb77a2', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b97b5163cf91e2b4e01659ca90064a00c77821fc', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e4d75964513a565d94ca6ae06b894be5591fe32', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20ccd55af8c9e3277741afa94c508cb6ed06e66e', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39498f2e387850404768fbdb975b8053cdf62511', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84708e7bcd328eaf6dbc6d2176ab1f6846bef7e8', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18f26f33cc9ac905c37739150952a9e4cda2437e', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d0e92b4e67a356efc3a7299ba8a8ea2c3cba43f', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbf8671be063f8b35b679352e11e4ad323288776', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e98bb7b6596ea8e1ff94279fcec106f29e326fcb', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}]",Yuji TAMAKOSHI,72233550,,User,,7,,0,4
1426290761,Add pytest for visualization.py,"**Checklist**
Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR.

- [x] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html)
- [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).
You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically
- [x] Please add tests to cover your changes if applicable.
- [x] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure.
- [x] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information).

Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description.

**Description**
pytest for #2170 ",True,2192,https://api.github.com/repos/qutip/qutip/pulls/2192,https://github.com/qutip/qutip/pull/2192,closed,388,0,2,11,8,6,0,0,[],2023-07-09 12:29:37+00:00,2023-07-17 14:01:40+00:00,696723.0,"8 days, 1:32:03","[{'comment_id': 1258107109, 'comment_body': ""- It's better not to call qutip function in the parametrization step, if there is a bug in that function, it stop all tests from running.\r\n- It's better to just parametrize on the variable we actually are interested in. All the `None` make it unclear what it tested in that particular test. It also makes test hard to read in the log:\r\n```\r\nqutip/tests/test_visualization.py::test_hinton[rho0-None-None-scaled-True-None-None-None-None] PASSED [ 16%]\r\nqutip/tests/test_visualization.py::test_hinton[rho1-None-None-scaled-True-None-None-None-None] PASSED [ 16%]\r\nqutip/tests/test_visualization.py::test_hinton[rho2-None-None-scaled-True-None-None-None-None] PASSED [ 16%]\r\nqutip/tests/test_visualization.py::test_hinton[rho3-None-None-scaled-True-None-None-None-None] PASSED [ 16%]\r\nqutip/tests/test_visualization.py::test_hinton[rho4-x_basis4-None-scaled-True-None-None-None-None] PASSED [ 16%]\r\nqutip/tests/test_visualization.py::test_hinton[rho5-None-y_basis5-scaled-True-None-None-None-None] PASSED [ 16%]\r\nqutip/tests/test_visualization.py::test_hinton[rho6-None-None-scaled-True-None-None-None-None] PASSED [ 16%]\r\nqutip/tests/test_visualization.py::test_hinton[rho7-None-None-threshold-True-None-None-None-None] PASSED [ 16%]\r\nqutip/tests/test_visualization.py::test_hinton[rho8-None-None-phase-True-None-None-None-None] PASSED [ 16%]\r\nqutip/tests/test_visualization.py::test_hinton_ValueError[rho0-None-None-scaled-True-None-None-None-None-Input quantum object must be an operator or superoperator.] PASSED [ 16%]\r\nqutip/tests/test_visualization.py::test_hinton_ValueError[rho1-None-None-color_style-True-None-None-None-None-Unknown color style color_style for Hinton diagrams.] PASSED [ 16%]\r\nqutip/tests/test_visualization.py::test_hinton_ValueError[rho2-None-None-scaled-True-None-None-None-None-Hinton plots of superoperators are currently only supported for qubits.] PASSED [ 16%]\r\n```\r\n\r\n\r\n```suggestion\r\n\r\ndef to_oper_bra(oper):\r\n    return qutip.operator_to_vector(oper).dag()\r\n    \r\ndef to_oper(oper):\r\n    return oper\r\n\r\n@pytest.mark.parametrize('transform, args', [\r\n    (to_oper, {}),\r\n    (qutip.operator_to_vector(), {}),\r\n    (to_oper_bra, {}),\r\n    (qutip.to_super(), {}),\r\n    (to_oper, {'x_basis': [1, 2, 3, 4, 5]),\r\n    (to_oper, {'y_basis': [1, 2, 3, 4, 5]),\r\n    (to_oper, {'color_style': 'threshold'),\r\n    (to_oper, {'color_style': 'phase'),\r\n])\r\ndef test_hinton(transform, args):\r\n    rho = transform(qutip.rand_dm(5))\r\n    fig, ax = qutip.hinton(rho, **args)\r\n```"", 'comment_created': datetime.datetime(2023, 7, 10, 11, 25, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1265181284, 'comment_body': 'The error can be triggered without monkeypatch.\r\nThe input ket most simply be made of kets of different space size:\r\n`ket = qutip.basis(3) & qutip.basis(2)`', 'comment_created': datetime.datetime(2023, 7, 17, 10, 53, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1265183278, 'comment_body': 'This is never used...', 'comment_created': datetime.datetime(2023, 7, 17, 10, 55, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1265190701, 'comment_body': '`transform` here is not needed.', 'comment_created': datetime.datetime(2023, 7, 17, 11, 3, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1265320558, 'comment_body': 'Thank you! It looks nice.', 'comment_created': datetime.datetime(2023, 7, 17, 12, 59, 46, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}]","[{'commit_sha': '558031607a811710147feee3aa7b4d7bcb328bf6', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0959610bfe64c27ee931106dd38655e736e2a660', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '330f067ef6e30cd9976f5f12ca482c77dad0467e', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a5c8ea9703d75270cddc4bb83b652d97a025c93', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28dbdaa8e25b28e78ca6ffd537f3287d14385d33', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5033be9323517c4897e3d32255f20f6d47aadf3', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd244b66e12b9dd032c1704577de3cb5119bb572', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c5175a4f3374ef0d13d259d157cd9dcf03d5c3f', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '070e0e469fa40305e46b93abd1a7a13053b01e5d', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be35c0d9107ff5e63e2c9799e756f52d47205e9b', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '385746c25d245a6c9600461e5e9ab22f6b1275b3', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}]",Yuji TAMAKOSHI,72233550,,User,,7,,0,4
1426714409,Update plot_wigner_sphere and delete matrix_histogram_complex,"**Checklist**
Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR.

- [x] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html)
- [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).
You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically
- [x] Please add tests to cover your changes if applicable.
- [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure.
- [x] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information).

Do the same change for plot_wigner_sphere and matrix_histogram as #2170 did.
#2170 
1. The arguments in plot_wigner_sphere is now similar to those of other functions. Of course, it change its color as users set qutip.settings.colorblind_safe=True.
```
def plot_wigner_sphere(wigner, reflections=False, *, cmap=None,
                       colorbar=True, fig=None, ax=None):
```
2. matrix_histogram and matrix_histogram_complex combined into one function. The new matrix_histogram can change bar_style and color_style. Here is an example.
<img width=""894"" alt=""matrix_histogram"" src=""https://github.com/qutip/qutip/assets/72233550/a4c94bba-06f8-474f-b6cf-88e0385d7d5a"">
",True,2193,https://api.github.com/repos/qutip/qutip/pulls/2193,https://github.com/qutip/qutip/pull/2193,closed,363,263,6,37,9,8,0,0,[],2023-07-10 03:40:02+00:00,2023-07-19 12:47:24+00:00,810442.0,"9 days, 9:07:22","[{'comment_id': 1262676707, 'comment_body': ""I think it's these bullet list that cause the issues with the documentation.\r\nThe indentation is needed."", 'comment_created': datetime.datetime(2023, 7, 13, 14, 50, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1263713910, 'comment_body': 'Thanks! This solved the problem. The other two are in matrix_histogram.', 'comment_created': datetime.datetime(2023, 7, 14, 13, 4, 39, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1265520392, 'comment_body': 'The text looks strange in the documentation.\r\n![image](https://github.com/qutip/qutip/assets/17770236/e752ff1f-96c6-4f9d-8ed3-1282c5dbdb58)\r\n', 'comment_created': datetime.datetime(2023, 7, 17, 15, 12, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1265522006, 'comment_body': 'Could you rename this variable, it is used later with values no longer the default.', 'comment_created': datetime.datetime(2023, 7, 17, 15, 13, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1265526766, 'comment_body': ""This overwrite the `bars_alpha`, you can fix with:\r\n```suggestion\r\n    if default_opts['threshold'] is not None:\r\n        colors[:, 3] *= 1 * (bar_M >= default_opts['threshold'])\r\n```"", 'comment_created': datetime.datetime(2023, 7, 17, 15, 17, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1266685936, 'comment_body': 'Thanks! I fixed it.', 'comment_created': datetime.datetime(2023, 7, 18, 12, 17, 53, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1266692164, 'comment_body': 'I changed the code to use ```options``` argument instead of default_opts and changed the default value from ```None``` to ```{}```. ', 'comment_created': datetime.datetime(2023, 7, 18, 12, 23, 41, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1266877086, 'comment_body': '```suggestion\r\n            not set, all bars are colored according to the color map.\r\n\r\n```', 'comment_created': datetime.datetime(2023, 7, 18, 14, 38, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}]","[{'commit_sha': '7fef759645f934fdb0fff39eab0d1279275c9f52', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '441ccd52a8845a8f854ee5c7f5e530db59285e89', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10ef55778ac59095cefa724ce20a673aa6fa70a4', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb9cfcd0e9daad9488f2d49e075e4a6d61c8d33e', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bd647b6f0a5574e50fe4cabf09f005ab283efbb', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81e6b899ee30a48e9153580cf3d20ace9463ca8f', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5f481f87a10a75bca2c5861ad1d8fbb46c0bb45', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab5f0e508473df9ad11945b5fba5bcfece92610e', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c68282323fd43d7bd106698d205ce69709e883b8', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0351ee53d0fc4e5088b38580946eb7376cc45b59', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65731c80d54b4e904f264c74da5b7108825f87e8', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36cb02196c93707996fd84a31c30464e29823c8b', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '394ab6d0042ca28384b3820263e8d2bc46a84006', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27ab9e919cd82332dd43ed61d85c75593e8d9dff', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '062c1fa071ab467fc0bb0c73f5b390eda1fcdefe', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6cd8da718ee002cc62d2b91f0306c5d653f5aa8', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0feb2deb8d0d93cbedab94c96ca384ad6d72cb5', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4c005b9ab16ababc9b584c4d7f38812a51f8d9b', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ada27eecaeaf5e5d80c930894445f77da08129b', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e0d02ff17ce0335fa4802d110eb7893d83e1ff3', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '477926e25ccc6ec1b325be7819d776e3b4d4a0bf', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc953e6f5eca3531ebe692c06108a36ae0ed86a3', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5991da7aa0afcae9afceb87f6f7ef799591fb992', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9e776ceeffd68f87a631c07c5a340b8968be265', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eed69ab9a4a7d2e6d4787d33e7a1f5f93c3e0994', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03256ef592b03dd1fd19f4a07c5bd5b2c5dab1d1', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2cdd69f61d853a678b2cafd493779735294e921', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f996c0f05a36839b8bd75921851f08989ae2ca77', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e652b3faa7e292bd78cd2c5eabc73daa895164d7', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10cd3909dd00000bdc9619537351b74e88a7abd3', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fef43f4f0301bd2b14868fc98b7135e6f017dd87', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87d9023819797a7113bfbbb113cef14a8cd2fae7', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c24db0816ebccf11cbbd024c0317ac9a1653ecfb', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37add2e3b209fbfd1b14d2a84a43a0e9bd0d0cc6', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1712eca2288d7395be21153aa608cae50cc4605f', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd95a1a73482078bc4d14b96c5a95d410f0d9cfc0', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22f94faa645b42ff74d0e61a7ce8cf950f33fc2f', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}]",Yuji TAMAKOSHI,72233550,,User,,7,,0,4
1484364468,Sort arguments of sphereplot,"**Checklist**
Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR.

- [x] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html)
- [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).
You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically
- [x] Please add tests to cover your changes if applicable.
- [x] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure.
- [x] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information).

**Description**
sphereplot and plot_spin_distribution accepts a matrix of values, theta and phi, but the order of them is different and not intuitive to users.
```
def sphereplot(theta, phi, values, ...
```
```
def plot_spin_distribution(P, THETA, PHI, ...
```",True,2219,https://api.github.com/repos/qutip/qutip/pulls/2219,https://github.com/qutip/qutip/pull/2219,closed,16,25,5,2,2,0,0,0,[],2023-08-22 09:17:14+00:00,2023-08-22 13:45:36+00:00,16102.0,4:28:22,[],"[{'commit_sha': '63821f67ed199880f45780eb584def7cd95660cb', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de289aa95535406656916ed978eb1db775c1b62d', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}]",Yuji TAMAKOSHI,72233550,,User,,7,,0,4
1416618956,Change notebook to follow qutip PR#2170,I made changes on arguments of functions in visualization.py in [#2170](https://github.com/qutip/qutip/pull/2170). This PR follows it.,True,66,https://api.github.com/repos/qutip/qutip-tutorials/pulls/66,https://github.com/qutip/qutip-tutorials/pull/66,closed,112,75,9,8,4,2,0,0,[],2023-07-02 07:17:36+00:00,2023-07-13 13:06:36+00:00,971340.0,"11 days, 5:49:00","[{'comment_id': 1250212375, 'comment_body': 'could demonstrate using h_labels here?', 'comment_created': datetime.datetime(2023, 7, 3, 4, 46, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nwlambert', 'type': 'User'}, {'comment_id': 1250228975, 'comment_body': 'Hi. I added a h_labels demo.\r\n<img width=""662"" alt=""h_label_demo"" src=""https://github.com/qutip/qutip-tutorials/assets/72233550/7cca0655-8417-498c-9c8a-f0ce772f8448"">\r\n', 'comment_created': datetime.datetime(2023, 7, 3, 4, 59, 25, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}]","[{'commit_sha': 'a8044092e3ea9b0695a709254ea23a0d8da499c7', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cdfedba7b48011f73b117060e20c0619bdca7fa', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18fd03fb59b1db2260e7652830e450fdf191dc58', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '529ba0f9fadacf810a0055b4888925f2a66fc0d2', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52ad2d897824a085a03d78ee0e0e3e4228536b95', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20cbf283915952d9c4b230b8636107ac68c821c2', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d82b2f96e3acd78c0b6cc60ec62be2fa403d49c', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c265ab8f8f0d01a9efbd2c22a4815a2f6b91611e', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}]",Yuji TAMAKOSHI,72233550,,User,,7,,0,4
1476911074,Delete matrix_histogram_complex,"We removed ```matrix_histogram_complex```. I replaced it with ```matrix_histogram```. 
Related to [#2193](https://github.com/qutip/qutip/pull/2193)",True,68,https://api.github.com/repos/qutip/qutip-tutorials/pulls/68,https://github.com/qutip/qutip-tutorials/pull/68,closed,2,1,1,1,2,0,0,0,[],2023-08-16 06:32:04+00:00,2023-08-17 12:14:01+00:00,106917.0,"1 day, 5:41:57",[],"[{'commit_sha': 'b7f9ccfec60d6ba221acccc2da36583c3251dfdf', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}]",Yuji TAMAKOSHI,72233550,,User,,7,,0,4
1446088396,Add animation functions,"**Description**
I enabled plot functions in visualization.py to make animations when users put time evolutions. You can see animations with ```%matplotlib notebook%``` on jupyter notebook, but it sometimes does not work. In that case, ```make_html_video``` helps users to save and see animations.",True,2203,https://api.github.com/repos/qutip/qutip/pulls/2203,https://github.com/qutip/qutip/pull/2203,closed,1312,287,7,24,10,25,0,0,[],2023-07-24 06:03:44+00:00,2023-08-21 13:33:23+00:00,2446179.0,"28 days, 7:29:39","[{'comment_id': 1279148752, 'comment_body': 'Function that start with `_` are not mean to be made public and included here.\r\nYou can still import them using:\r\n```\r\nfrom .visualization import (_cyclic_cmap, _diverging_cmap, ...)\r\n```\r\n', 'comment_created': datetime.datetime(2023, 7, 31, 11, 12, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1279466816, 'comment_body': ""```suggestion\r\n           'anim_schmidt']\r\n```"", 'comment_created': datetime.datetime(2023, 7, 31, 15, 15, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1279471078, 'comment_body': ""pyplot is imported twice\r\nQutip's import should ideally be in a block instead if mixed here are there.\r\nPlease clean / sort these import.\r\n"", 'comment_created': datetime.datetime(2023, 7, 31, 15, 18, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1279512364, 'comment_body': ""Using `%matplotlib notebook` I can show animation in a notebook without writing it to a file.\r\nNo `save`, thus no issue with codex and it's somewhat interactive as I can zoom in.\r\nThis function is therefore not needed. We can just return the animation object and let the user see it as is, or save it in a file if desired."", 'comment_created': datetime.datetime(2023, 7, 31, 15, 50, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1283828087, 'comment_body': 'Thanks for your info. I will change them to return fig and ani, but we need ```make_html_video```. In my case, I can use the interactive mode in one jupyter notebook, but not in the other and the google colab. ', 'comment_created': datetime.datetime(2023, 8, 3, 23, 58, 23, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1290404855, 'comment_body': '```suggestion\r\n    M : `qutip.Qobj` or list of `qutip.Qobj` instances\r\n```', 'comment_created': datetime.datetime(2023, 8, 10, 16, 38, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1290456738, 'comment_body': 'We removed the `title` argument in the last PR since the users can add his own using ax.\r\nThis should also be removed.', 'comment_created': datetime.datetime(2023, 8, 10, 17, 24, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1290583587, 'comment_body': ""Should we ask for the rho's dims to match?\r\nOtherwise it will not make a continuous animation."", 'comment_created': datetime.datetime(2023, 8, 10, 19, 21, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1290600816, 'comment_body': ""Does this need to be inside to loop so it's applied to all artists?"", 'comment_created': datetime.datetime(2023, 8, 10, 19, 38, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1291370253, 'comment_body': 'No. This is already applied to all artists. ', 'comment_created': datetime.datetime(2023, 8, 11, 13, 54, 26, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1293176716, 'comment_body': 'I added an inner function to assert shapes.', 'comment_created': datetime.datetime(2023, 8, 14, 8, 48, 1, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1293363877, 'comment_body': 'Not the right description.', 'comment_created': datetime.datetime(2023, 8, 14, 11, 52, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1293364830, 'comment_body': 'Ipython is optional.', 'comment_created': datetime.datetime(2023, 8, 14, 11, 53, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1293369262, 'comment_body': 'Should this be `steps = len(wigner)`', 'comment_created': datetime.datetime(2023, 8, 14, 11, 58, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1293373859, 'comment_body': 'Why not \r\n```suggestion\r\n        output = animation.ArtistAnimation(\r\n            fig, artist_list, interval=50,\r\n            blit=True, repeat_delay=1000\r\n        )\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 12, 4, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1294395326, 'comment_body': 'Thank you for you advice in the last meeting. The code below is useful to show animations in a non-interactive mode so I deleted ```make_html_video``` \r\n```\r\nfrom IPython.display import HTML\r\nHTML(ani.to_jshtml())\r\n```', 'comment_created': datetime.datetime(2023, 8, 15, 9, 47, 9, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1294395635, 'comment_body': 'I deleted ```make_html_video```', 'comment_created': datetime.datetime(2023, 8, 15, 9, 47, 31, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1297561371, 'comment_body': 'Why do you close the figure?\r\nIt stop me from having it shown in the notebook with `%matplotlib notebook`.\r\n', 'comment_created': datetime.datetime(2023, 8, 17, 17, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1298421563, 'comment_body': 'Thanks. This is a mistake.', 'comment_created': datetime.datetime(2023, 8, 18, 12, 57, 6, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1298485091, 'comment_body': 'wigners cannot must vbe arrays, not Qobj, thus cannot be extracted from result...', 'comment_created': datetime.datetime(2023, 8, 18, 13, 56, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1298487951, 'comment_body': ""This also don't takes Qobj as input, thus result will not work..."", 'comment_created': datetime.datetime(2023, 8, 18, 13, 59, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1298488436, 'comment_body': 'Here also.', 'comment_created': datetime.datetime(2023, 8, 18, 13, 59, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1298493390, 'comment_body': '`results` sometime do not save the states and `result.states` is None.\r\nI would check that case and raise an error telling the users to add `options={""store_states"": True}` to the simulation.', 'comment_created': datetime.datetime(2023, 8, 18, 14, 4, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1299287185, 'comment_body': 'I added an assertion. ```result.states``` returns a list so it raises an error when the length of it is zero.', 'comment_created': datetime.datetime(2023, 8, 20, 1, 39, 32, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1299979473, 'comment_body': '```suggestion\r\n            raise ValueError(\'Nothing to visualize. You might have forgotten \'\r\n                             \'to set options={""store_states"": True}.\')\r\n```', 'comment_created': datetime.datetime(2023, 8, 21, 11, 24, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}]","[{'commit_sha': '5ed3d45e00307c2f3929579c34b28e10220ea036', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '865821b0a85dca9ebe20fe03455d30533260d271', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b27777edefc302c109b12fdea7fd472f55cb4bb', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90cdf5528058d78ef554d98b618048a2d00d6dae', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4f6f6fe329c7204ac8fbc0761f87ce09d60f39f', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0fb1a447886d1d4a563880a9087b6695c82a555', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '689aa8fcf066f9967bd60231bee175ad8bde990b', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd849d418128c3fd055f2b86e35b1deb005bcef24', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8dda154d010c2fa502b4ecd22a6e6e3f1cd41d58', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1f72fcfb2c09b12719662d846d728989e15af0c', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2c5e203ffeb1303dcc7f54638453b4739789e26', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '475c7a9f798f2516a78b096df576740e7a07c3c1', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '581c1c2f01db898cb22554db33f3a161b3222b5a', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c32a0f206ae8d9f4fe06a958c8b86743fc4c51b', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c75e3e78cad6249fd1876fe93a142120329fc57', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e276ddec788cc7c56b5b8152e327f62d9809479f', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f13001b877092f60e1795a70aed59c5113c6bdb0', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddda95f07b6803f89920e4f70f81ea0945c76dd8', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30be73f93be2b24d52d3d17dc1af6b621b6221c9', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10b8bdaad944e41b85b8719b6a4578b2fc64452f', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86afea6d39631354605e98e085e737f318834b3e', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e70da5eea3b6aee3c0008caf64e06056cdfe2608', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '956f2f2e4f7e675fb06aa02a7914da1f4921efa1', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c0fb0cd42f50924322685bb36a52bb3458f6db9', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}]",Yuji TAMAKOSHI,72233550,,User,,7,,0,4
1473300045,Add animation demo,tutorial for animation functions,True,67,https://api.github.com/repos/qutip/qutip-tutorials/pulls/67,https://github.com/qutip/qutip-tutorials/pull/67,closed,228,23,5,24,7,13,0,0,[],2023-08-13 09:14:48+00:00,2023-08-26 06:24:19+00:00,1112971.0,"12 days, 21:09:31","[{'comment_id': 1295345865, 'comment_body': ""I would change the first example to ''time evolution of a qubit'', and the second to ''time evolution of a cavity mode''"", 'comment_created': datetime.datetime(2023, 8, 16, 3, 39, 50, tzinfo=datetime.timezone.utc), 'commenter': 'nwlambert', 'type': 'User'}, {'comment_id': 1295347318, 'comment_body': 'I would change this example to something like:\r\n\r\n```\r\npsi0 = basis(2,0)\r\ntlist = np.linspace(0, 2 * np.pi, 50)\r\nc_ops = [np.sqrt(0.1) * destroy(2).dag()]\r\nresults = mesolve(H, psi0, tlist, c_ops, [])`\r\n```\r\n\r\nAnd perhaps add a little more explanation', 'comment_created': datetime.datetime(2023, 8, 16, 3, 43, 30, tzinfo=datetime.timezone.utc), 'commenter': 'nwlambert', 'type': 'User'}, {'comment_id': 1295347870, 'comment_body': 'Time evolution of a cavity mode', 'comment_created': datetime.datetime(2023, 8, 16, 3, 44, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nwlambert', 'type': 'User'}, {'comment_id': 1295350544, 'comment_body': 'Try for this example something like a displaced cavity?\r\n\r\n```\r\n#cavity annihilation operator\r\nN_cut = 5\r\na = destroy(N_cut)\r\n\r\n#cavity Hamiltonian with constant displacement\r\nH = a.dag() * a + 0.5 * (a+a.dag())\r\n\r\n# initial state\r\npsi0 = basis(N_cut, 0)\r\n\r\n# list of times for which the solver should store the state vector\r\ntlist = np.linspace(0, 10, 100)\r\n\r\nc_ops = [np.sqrt(0.1)  * a]\r\n\r\nresults = mesolve(H, psi0, tlist, c_ops, [])\r\n\r\n```\r\n\r\nYou might need to play with the parameters a little bit, to get something reasonable.  Also you could consider making the displacement term time-dependent (just a cosine pre-factor on the a+a.dag() term)', 'comment_created': datetime.datetime(2023, 8, 16, 3, 51, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nwlambert', 'type': 'User'}, {'comment_id': 1295350974, 'comment_body': 'I think this needs some explanation?', 'comment_created': datetime.datetime(2023, 8, 16, 3, 52, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nwlambert', 'type': 'User'}, {'comment_id': 1295351698, 'comment_body': 'typo here', 'comment_created': datetime.datetime(2023, 8, 16, 3, 54, 10, tzinfo=datetime.timezone.utc), 'commenter': 'nwlambert', 'type': 'User'}, {'comment_id': 1295352063, 'comment_body': 'Again, the two examples below could do with some some more tutorial-like explanation', 'comment_created': datetime.datetime(2023, 8, 16, 3, 54, 59, tzinfo=datetime.timezone.utc), 'commenter': 'nwlambert', 'type': 'User'}, {'comment_id': 1303517850, 'comment_body': ""If a user is running in a notebook, IPython should already be installed since it's a requirement to jupyter..."", 'comment_created': datetime.datetime(2023, 8, 23, 20, 39, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Ericgig', 'type': 'User'}, {'comment_id': 1304248041, 'comment_body': 'Thanks for your info. I deleted it and actually use ```HTML(ani.to_jshtml())``` to make an animation.', 'comment_created': datetime.datetime(2023, 8, 24, 12, 28, 15, tzinfo=datetime.timezone.utc), 'commenter': 'tamakoshi2001', 'type': 'User'}, {'comment_id': 1305598150, 'comment_body': 'Just a small suggestion for clarity:\r\n""You can make an animation with accompanying plots. Note that you cannot have it with additional accompanying animations.""', 'comment_created': datetime.datetime(2023, 8, 25, 12, 28, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nwlambert', 'type': 'User'}, {'comment_id': 1305598708, 'comment_body': 'small suggestion for clarity:\r\n>You can do it as you do to a normal plot.', 'comment_created': datetime.datetime(2023, 8, 25, 12, 28, 57, tzinfo=datetime.timezone.utc), 'commenter': 'nwlambert', 'type': 'User'}, {'comment_id': 1305598994, 'comment_body': 'dependes -> depends', 'comment_created': datetime.datetime(2023, 8, 25, 12, 29, 10, tzinfo=datetime.timezone.utc), 'commenter': 'nwlambert', 'type': 'User'}, {'comment_id': 1305600401, 'comment_body': 'another small suggestion:\r\n\r\n>QuTiP has `qutip.Qobj` to store quantum states, but it also uses `np.array` to store data for some other functions.', 'comment_created': datetime.datetime(2023, 8, 25, 12, 30, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nwlambert', 'type': 'User'}]","[{'commit_sha': '1f0db0453ed53fa09bdaeb475591430fcf255aeb', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f8bbdf2c65e732821b8e44a2f7b3b42181f55bd', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ced4b3acae6e0ba44c84f9610982ad10e053cdda', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f867e29ab5965b9cbac088299b50ec3cbb608099', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1b242dd3ebf9f86ffd4c9f789e520e202e3599c', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2359422d267b268cad61b78c7876b9ab3389ef6a', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '820d6ec842ebe2ac9dd8555b1f3e08d322deb17f', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f3ab7846c03f5bdb3e13dcc26eec29da60fa33d', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96329b5c7c73cd98a65cc24658fd2b42d7874c91', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2f60bbf88c62f4b0871f0724363f100539fdae6', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2f222c208659c02bbeae2f0f292ffbfb9e0e1f6', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3be3f6a44d3039a17a444c91740c13d627010cb0', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2e5f2ea4eb81bbf1617d3ec95549d2bcf89f159', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'baab38d82a0edc0251b5fec0ecf833a422320436', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2965fc0eb01e35073efb466d7d8264c88c8e340d', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '861eb14720d93acc198a186a2ba0a4f6bf008479', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48f97c241f154db51bba32229593c5e3ddeafeb0', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ad116065650fb899dc21f4b5bca76f3e281379b', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26fb463d376a50792467317da00908b513850527', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96ca39cf0ff42fa84d4a114cd4d0feebbff71cff', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '600146a52b2ed9aa7e5280371ac6d7af235123d8', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e91f5aab77e9f171c828d2cb7bec34eddc62e9f0', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2a388a4f849c0051e6138f91af7d64d74c0717c', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd2d2e75e8de717bf41990d7784cadd93f14aaa5', 'committer_username': 'tamakoshi2001', 'committer_name': 'Yuji TAMAKOSHI', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 22, 50, 23, tzinfo=datetime.timezone.utc)}]",Yuji TAMAKOSHI,72233550,,User,,7,,0,4

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
6136261,qutip,qutip/qutip,Python,631,1660,77,168,11025,140,19,21,"[{'id': 1484364468, 'number': 2219, 'closed': datetime.datetime(2023, 8, 22, 13, 45, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 22, 9, 17, 14, tzinfo=datetime.timezone.utc), 'time_taken': 16102.0, 'time_delta': '4:28:22', 'additions': 16, 'deletions': 25, 'state': 'closed'}, {'id': 1446088396, 'number': 2203, 'closed': datetime.datetime(2023, 8, 21, 13, 33, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 24, 6, 3, 44, tzinfo=datetime.timezone.utc), 'time_taken': 2446179.0, 'time_delta': '28 days, 7:29:39', 'additions': 1312, 'deletions': 287, 'state': 'closed'}, {'id': 1426714409, 'number': 2193, 'closed': datetime.datetime(2023, 7, 19, 12, 47, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 10, 3, 40, 2, tzinfo=datetime.timezone.utc), 'time_taken': 810442.0, 'time_delta': '9 days, 9:07:22', 'additions': 363, 'deletions': 263, 'state': 'closed'}, {'id': 1426290761, 'number': 2192, 'closed': datetime.datetime(2023, 7, 17, 14, 1, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 9, 12, 29, 37, tzinfo=datetime.timezone.utc), 'time_taken': 696723.0, 'time_delta': '8 days, 1:32:03', 'additions': 388, 'deletions': 0, 'state': 'closed'}, {'id': 1375586395, 'number': 2170, 'closed': datetime.datetime(2023, 7, 7, 20, 31, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 2, 11, 7, 46, tzinfo=datetime.timezone.utc), 'time_taken': 3057841.0, 'time_delta': '35 days, 9:24:01', 'additions': 406, 'deletions': 503, 'state': 'closed'}, {'id': 1275466338, 'number': 2120, 'closed': datetime.datetime(2023, 3, 15, 15, 41, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 14, 17, 14, 44, tzinfo=datetime.timezone.utc), 'time_taken': 80783.0, 'time_delta': '22:26:23', 'additions': 6, 'deletions': 12, 'state': 'closed'}, {'id': 1267942523, 'number': 2113, 'closed': datetime.datetime(2023, 3, 15, 17, 18, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 8, 14, 13, 16, tzinfo=datetime.timezone.utc), 'time_taken': 615885.0, 'time_delta': '7 days, 3:04:45', 'additions': 10, 'deletions': 4, 'state': 'closed'}]"
498226104,qutip-tutorials,qutip/qutip-tutorials,Jinja,34,34,10,12,514,14,7,5,"[{'id': 1484374549, 'number': 69, 'closed': datetime.datetime(2023, 8, 24, 16, 34, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 22, 9, 23, 2, tzinfo=datetime.timezone.utc), 'time_taken': 198707.0, 'time_delta': '2 days, 7:11:47', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1476911074, 'number': 68, 'closed': datetime.datetime(2023, 8, 17, 12, 14, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 16, 6, 32, 4, tzinfo=datetime.timezone.utc), 'time_taken': 106917.0, 'time_delta': '1 day, 5:41:57', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 1473300045, 'number': 67, 'closed': datetime.datetime(2023, 8, 26, 6, 24, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 13, 9, 14, 48, tzinfo=datetime.timezone.utc), 'time_taken': 1112971.0, 'time_delta': '12 days, 21:09:31', 'additions': 228, 'deletions': 23, 'state': 'closed'}, {'id': 1416618956, 'number': 66, 'closed': datetime.datetime(2023, 7, 13, 13, 6, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 2, 7, 17, 36, tzinfo=datetime.timezone.utc), 'time_taken': 971340.0, 'time_delta': '11 days, 5:49:00', 'additions': 112, 'deletions': 75, 'state': 'closed'}]"
