pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
664619514,Command Palette For Godot,"<!--
Pull requests should always be made for the `master` branch first, as that's
where development happens and the source of all future stable release branches.

Relevant fixes are cherry-picked for stable branches as needed.

Do not create a pull request for stable branches unless the change is already
available in the `master` branch and it cannot be easily cherry-picked.
Alternatively, if the change is only relevant for that branch (e.g. rendering
fixes for the 3.2 branch).
-->

GSoC Command Palette project
This is a work in progress PR
",True,49417,https://api.github.com/repos/godotengine/godot/pulls/49417,https://github.com/godotengine/godot/pull/49417,closed,576,59,15,1,12,83,3,0,"[{'name': 'feature proposal'}, {'name': 'topic:editor'}, {'name': 'usability'}]",2021-06-08 09:57:19+00:00,2021-08-10 16:55:23+00:00,5468284.0,"63 days, 6:58:04","[{'comment_id': 647303688, 'comment_body': 'This would need to be freed with `memdelete(actions_list)`, but i think simply not making this a pointer is better.\r\nYou would use a `List<String> actions_list` instead. You would then call get_action_list with a reference instead `get_action_list(&actions_list)`', 'comment_created': datetime.datetime(2021, 6, 8, 10, 6, 7, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 652580666, 'comment_body': 'it needs to be `ev`, not `p_shortcut`.', 'comment_created': datetime.datetime(2021, 6, 16, 10, 59, 45, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 663723551, 'comment_body': 'This needs to be freed when you are done using it. Using `memdelete(...)`', 'comment_created': datetime.datetime(2021, 7, 5, 8, 5, 49, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 663726800, 'comment_body': 'Instead of an else printing an error, we have a built-in macro to exist if something went wrong. You should use this:\r\n`ERR_FAIL_COND(!action_list)`. \r\n\r\nIf you want you can add a message too with `ERR_FAIL_COND_MSG(!action_list,""Failed to fetch action_list."")`, but I am not sure it is needed here, as the default message might be enough.', 'comment_created': datetime.datetime(2021, 7, 5, 8, 10, 55, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 663731914, 'comment_body': 'No need for a local variable, you can call `search_text.is_empty()` instead.', 'comment_created': datetime.datetime(2021, 7, 5, 8, 18, 54, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 663736824, 'comment_body': 'Instead of creating a function only for that, you could connect the LineEdit signal like that:\r\n`command_search_box->connect(""text_changed"", callable_mp(this, &EditorCommandPalette::_update_command_search).unbind(1));`', 'comment_created': datetime.datetime(2021, 7, 5, 8, 25, 54, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 663737474, 'comment_body': 'This should be removed if it does nothing but print something.', 'comment_created': datetime.datetime(2021, 7, 5, 8, 26, 52, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 663739635, 'comment_body': 'We print things only when something wrong happen internally. I am not sure this is a case a user could face in a normal use, but if it is the case, the message should be removed. If not, then you should use this instead:\r\n`ERR_FAIL_COND(!selected_option)`', 'comment_created': datetime.datetime(2021, 7, 5, 8, 29, 48, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 663740194, 'comment_body': 'no need to create a function for that, just call hide directly.', 'comment_created': datetime.datetime(2021, 7, 5, 8, 30, 36, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 663740716, 'comment_body': 'Same here. Connect the signal with: `command_search_box->connect(""text_submitted"", callable_mp(this, &EditorCommandPalette::_confirmed).unbind(1));`', 'comment_created': datetime.datetime(2021, 7, 5, 8, 31, 16, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 663740999, 'comment_body': 'This does not need to b e a function either.', 'comment_created': datetime.datetime(2021, 7, 5, 8, 31, 40, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 663743316, 'comment_body': 'Remove prints that are not needed.', 'comment_created': datetime.datetime(2021, 7, 5, 8, 35, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 663744687, 'comment_body': ""As `p_command` if very often the same as p_name, I would likely move p_command as the last argument and give it a default value of `''`. Then, if it is empty, we use `p_name` instead of `p_command` as the command name.\r\n\r\nAlso, I would rename it `p_command_name`"", 'comment_created': datetime.datetime(2021, 7, 5, 8, 37, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 663764387, 'comment_body': 'In the new commit that variable is used 3 times so I guess having a local variable is fine.', 'comment_created': datetime.datetime(2021, 7, 5, 9, 4, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 663766161, 'comment_body': 'But why even use `List<String>*` if it could be `List<String>`.', 'comment_created': datetime.datetime(2021, 7, 5, 9, 7, 10, tzinfo=datetime.timezone.utc), 'commenter': 'KoBeWi', 'type': 'User'}, {'comment_id': 663854229, 'comment_body': 'Yep', 'comment_created': datetime.datetime(2021, 7, 5, 11, 23, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 663854335, 'comment_body': 'sure', 'comment_created': datetime.datetime(2021, 7, 5, 11, 23, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 663854425, 'comment_body': 'yep', 'comment_created': datetime.datetime(2021, 7, 5, 11, 23, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 663854674, 'comment_body': 'yep\r\n', 'comment_created': datetime.datetime(2021, 7, 5, 11, 24, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 663855733, 'comment_body': 'in the recent commit, I just made it as a class member.', 'comment_created': datetime.datetime(2021, 7, 5, 11, 26, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 663855844, 'comment_body': 'yep', 'comment_created': datetime.datetime(2021, 7, 5, 11, 26, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 663856129, 'comment_body': 'yep', 'comment_created': datetime.datetime(2021, 7, 5, 11, 26, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 663858042, 'comment_body': 'yep, it was just for debugging purpose.', 'comment_created': datetime.datetime(2021, 7, 5, 11, 29, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 663858182, 'comment_body': 'yep', 'comment_created': datetime.datetime(2021, 7, 5, 11, 30, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 663858326, 'comment_body': 'yep', 'comment_created': datetime.datetime(2021, 7, 5, 11, 30, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 663862186, 'comment_body': 'No, you should remove the `if (command_keys != nullptr) {` and move `ERR_FAIL_COND(!command_keys);` at the top of your code.', 'comment_created': datetime.datetime(2021, 7, 5, 11, 36, 50, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 663862966, 'comment_body': 'usually we use `p_command_name.is_empty()`, it is faster.', 'comment_created': datetime.datetime(2021, 7, 5, 11, 38, 13, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 663863302, 'comment_body': 'same here use `!selected_command.is_empty()`', 'comment_created': datetime.datetime(2021, 7, 5, 11, 38, 52, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 663863418, 'comment_body': 'to be removed.', 'comment_created': datetime.datetime(2021, 7, 5, 11, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 663865062, 'comment_body': 'oops... ðŸ˜…', 'comment_created': datetime.datetime(2021, 7, 5, 11, 41, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 663865194, 'comment_body': ""This still needs to be freed, it's a pointer to a list. You still need to call `memdelete(...)` to free it.\r\nIf you go that route, you should define a C++ destructor where to call it: \r\n```\r\nEditorCommandPalette::~EditorCommandPalette() {\r\n  memdelete(command_keys);\r\n}\r\n``` \r\nBut otherwise, you can simply use a `List<String>` instead (not a `List<String>*`)"", 'comment_created': datetime.datetime(2021, 7, 5, 11, 42, 9, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 663865918, 'comment_body': ""You're still not freeing it in the latest commit. But as @KoBeWi suggest, you could simply use a `List<String>` (not a pointer) instead. It would be freed with the object."", 'comment_created': datetime.datetime(2021, 7, 5, 11, 43, 27, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 663909753, 'comment_body': 'This can be moved to the top of _update_command_search() since it is only needed there.', 'comment_created': datetime.datetime(2021, 7, 5, 12, 54, 38, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 664147741, 'comment_body': ""The condition already checks for `empty_search`, so `empty_search ? 0 : ` part is not necessary.\r\n\r\nEDIT:\r\nI see this code is *inspired* by Quick Open. But there the condition had *||* instead of *&&*, that's why it was checked the second time."", 'comment_created': datetime.datetime(2021, 7, 5, 22, 50, 5, tzinfo=datetime.timezone.utc), 'commenter': 'KoBeWi', 'type': 'User'}, {'comment_id': 664151851, 'comment_body': ""This method seems to only operate on the command palette, it does nothing in the editor. Wouldn't it be better to remove the signal and just call the `execute_command()` directly withing command palette?"", 'comment_created': datetime.datetime(2021, 7, 5, 23, 13, 4, tzinfo=datetime.timezone.utc), 'commenter': 'KoBeWi', 'type': 'User'}, {'comment_id': 664152701, 'comment_body': ""I don't get this condition. `Shortcut` will never be `InputEventShortcut`, so not sure why are you checking this. Unless there is some implicit conversion I'm not aware of ðŸ¤”"", 'comment_created': datetime.datetime(2021, 7, 5, 23, 17, 53, tzinfo=datetime.timezone.utc), 'commenter': 'KoBeWi', 'type': 'User'}, {'comment_id': 664155822, 'comment_body': 'This variable seems unused.', 'comment_created': datetime.datetime(2021, 7, 5, 23, 35, 52, tzinfo=datetime.timezone.utc), 'commenter': 'KoBeWi', 'type': 'User'}, {'comment_id': 664156374, 'comment_body': '```suggestion\r\n\tvoid set_selected_command(String);\r\n```\r\nTypo.', 'comment_created': datetime.datetime(2021, 7, 5, 23, 39, 17, tzinfo=datetime.timezone.utc), 'commenter': 'KoBeWi', 'type': 'User'}, {'comment_id': 664157121, 'comment_body': 'Unused variable (and redundant).', 'comment_created': datetime.datetime(2021, 7, 5, 23, 43, tzinfo=datetime.timezone.utc), 'commenter': 'KoBeWi', 'type': 'User'}, {'comment_id': 664157388, 'comment_body': 'Could be renamed to `get_command_palette()`. ""Editor palette"" might be mistaken for e.g. color palette.', 'comment_created': datetime.datetime(2021, 7, 5, 23, 44, 41, tzinfo=datetime.timezone.utc), 'commenter': 'KoBeWi', 'type': 'User'}, {'comment_id': 664235383, 'comment_body': ""so that check was just to make sure that `InputEventShortcut::shortcut` value to never get assigned with an `InputEventShortcut`. don't know if that is really possible but as it is a public function checking it is good right?"", 'comment_created': datetime.datetime(2021, 7, 6, 4, 57, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 664235676, 'comment_body': 'yes i will remove it.', 'comment_created': datetime.datetime(2021, 7, 6, 4, 58, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 664235703, 'comment_body': 'yep', 'comment_created': datetime.datetime(2021, 7, 6, 4, 58, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 664236060, 'comment_body': 'oops.. ðŸ˜…', 'comment_created': datetime.datetime(2021, 7, 6, 4, 59, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 664383024, 'comment_body': ""But these two are completely different types, you'd get compilation error on wrong use. The check will never be true. (You could try for yourself)"", 'comment_created': datetime.datetime(2021, 7, 6, 9, 15, 56, tzinfo=datetime.timezone.utc), 'commenter': 'KoBeWi', 'type': 'User'}, {'comment_id': 664435853, 'comment_body': ""@KoBeWi is right here. This check is useless.\r\nI believe you wrongly interpreted my advice. This check needs to be inside the `ShortCut::set_shortcut` function, as it's place where we do not want to assign such event to a shortcut.\r\n\r\nAlso, `ERR_FAIL_COND(Object::cast_to<InputEventShortcut>(*p_shortcut))` is enough, no need to add`!= nullptr`. (casting nullptr to a bool result in `false`)"", 'comment_created': datetime.datetime(2021, 7, 6, 10, 32, 2, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 664438502, 'comment_body': 'The p_command_name argument should be renamed p_command_key for consistency.', 'comment_created': datetime.datetime(2021, 7, 6, 10, 36, 9, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 664440220, 'comment_body': ""What? no, you shouldn't use a value in a tooltip (that could be translated) to identify the command to execute.\r\nTreeItem has a method to set/get metadata, you should use this instead. You set the metadata to the command_key value at TreeItem's creation time and get it here with get_metadata."", 'comment_created': datetime.datetime(2021, 7, 6, 10, 38, 57, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 664441710, 'comment_body': '```suggestion\r\n\t// Unhandled key Input - used for performance reasons - This is called a lot less than _unhandled_input since it ignores MouseMotion, etc.\r\n```\r\n(not really related, but since you are modifying this code anyways...)', 'comment_created': datetime.datetime(2021, 7, 6, 10, 41, 23, tzinfo=datetime.timezone.utc), 'commenter': 'KoBeWi', 'type': 'User'}, {'comment_id': 664554602, 'comment_body': 'Ok', 'comment_created': datetime.datetime(2021, 7, 6, 13, 27, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 664577314, 'comment_body': 'yep changed.\r\n', 'comment_created': datetime.datetime(2021, 7, 6, 13, 54, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 676136079, 'comment_body': '```suggestion\r\n\t\t\tr.score = _score_path(search_text, r.display_name.to_lower());\r\n```\r\nThis is what I meant by my previous comment. `empty_search` is *always* false here.', 'comment_created': datetime.datetime(2021, 7, 25, 12, 9, 53, tzinfo=datetime.timezone.utc), 'commenter': 'KoBeWi', 'type': 'User'}, {'comment_id': 681808300, 'comment_body': ""~~I think `key_name` in `add_command()` should be `section_name`, although maybe I misunderstand it's purpose.~~ EDIT: Right, I get it now...\r\n\r\nBut in `remove_command` it should definitely be `command_name`."", 'comment_created': datetime.datetime(2021, 8, 3, 14, 22, 12, tzinfo=datetime.timezone.utc), 'commenter': 'KoBeWi', 'type': 'User'}, {'comment_id': 681878631, 'comment_body': 'I think for `remove_command` it should be `key_name` because this function just removes the `Command` from the `commands: HashMap<String, Command>` and `command_name` is a member of `Command` Struct.', 'comment_created': datetime.datetime(2021, 8, 3, 15, 38, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 681882198, 'comment_body': '```suggestion\r\n\t\t\t\tif (!first_section) {\r\n```\r\nMatter of style preference, but comparing with `nullptr` is unnecessary and longer.', 'comment_created': datetime.datetime(2021, 8, 3, 15, 42, 31, tzinfo=datetime.timezone.utc), 'commenter': 'KoBeWi', 'type': 'User'}, {'comment_id': 681890197, 'comment_body': ""I don't see these names show up anywhere. You probably need to call `set_column_titles_visible(true)`, otherwise it's useless to set them."", 'comment_created': datetime.datetime(2021, 8, 3, 15, 52, 1, tzinfo=datetime.timezone.utc), 'commenter': 'KoBeWi', 'type': 'User'}, {'comment_id': 681893338, 'comment_body': ""Ah, I thought it's the same as `command_name` in `add_command()`. Nevermind then."", 'comment_created': datetime.datetime(2021, 8, 3, 15, 55, 46, tzinfo=datetime.timezone.utc), 'commenter': 'KoBeWi', 'type': 'User'}, {'comment_id': 681898174, 'comment_body': 'Yep.\r\n', 'comment_created': datetime.datetime(2021, 8, 3, 16, 1, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 681899894, 'comment_body': 'thanks, changed.\r\n', 'comment_created': datetime.datetime(2021, 8, 3, 16, 3, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 682142202, 'comment_body': ""Once again, but `add_command` doesn't need the `arguments` parameter. `Callable.bind()` is available in GDScript too."", 'comment_created': datetime.datetime(2021, 8, 3, 22, 25, 32, tzinfo=datetime.timezone.utc), 'commenter': 'KoBeWi', 'type': 'User'}, {'comment_id': 682521186, 'comment_body': 'To be removed.', 'comment_created': datetime.datetime(2021, 8, 4, 11, 16, 21, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 686331482, 'comment_body': 'Should `p_keycode` be of type `Key` instead of `uint32_t`?', 'comment_created': datetime.datetime(2021, 8, 10, 21, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'aaronfranke', 'type': 'User'}, {'comment_id': 686366029, 'comment_body': 'Documentation generated, but nothing written?', 'comment_created': datetime.datetime(2021, 8, 10, 22, 36, 14, tzinfo=datetime.timezone.utc), 'commenter': 'EricEzaM', 'type': 'User'}, {'comment_id': 686369784, 'comment_body': 'Capitalise the S in `search`', 'comment_created': datetime.datetime(2021, 8, 10, 22, 45, 13, tzinfo=datetime.timezone.utc), 'commenter': 'EricEzaM', 'type': 'User'}, {'comment_id': 686370345, 'comment_body': '`p_` is reserved for parameters/arguments to the method. Locally defined variables should not have this. In this case, it should just be `command`.', 'comment_created': datetime.datetime(2021, 8, 10, 22, 46, 30, tzinfo=datetime.timezone.utc), 'commenter': 'EricEzaM', 'type': 'User'}, {'comment_id': 686370431, 'comment_body': 'Remove `p_`.', 'comment_created': datetime.datetime(2021, 8, 10, 22, 46, 42, tzinfo=datetime.timezone.utc), 'commenter': 'EricEzaM', 'type': 'User'}, {'comment_id': 686370509, 'comment_body': 'Remove `p_`.', 'comment_created': datetime.datetime(2021, 8, 10, 22, 46, 52, tzinfo=datetime.timezone.utc), 'commenter': 'EricEzaM', 'type': 'User'}, {'comment_id': 686372324, 'comment_body': 'Remove `p_`.', 'comment_created': datetime.datetime(2021, 8, 10, 22, 51, 9, tzinfo=datetime.timezone.utc), 'commenter': 'EricEzaM', 'type': 'User'}, {'comment_id': 686373805, 'comment_body': ""I think I understand the rationale of `InputEventShortcut` but it needs to be well documented what it is for (it seems the answer is it is exclusively for this command palette system).\r\n\r\nIt could be a bit confusing, as it is an `InputEvent` which stores a reference to a shortcut... which stores a reference to an `InputEvent`. Theoretically you could set it up so they reference eachother and have an infinite loop. It took me a bit of time to figure out why this was used - I don't think it is very intuitive, and as such should be well document _both_ in code and in the docs."", 'comment_created': datetime.datetime(2021, 8, 10, 22, 54, 44, tzinfo=datetime.timezone.utc), 'commenter': 'EricEzaM', 'type': 'User'}, {'comment_id': 686376362, 'comment_body': 'This should be using `.is_valid()` on the Ref.', 'comment_created': datetime.datetime(2021, 8, 10, 23, 0, 39, tzinfo=datetime.timezone.utc), 'commenter': 'EricEzaM', 'type': 'User'}, {'comment_id': 686377323, 'comment_body': 'You refer to `EditorAction` here... but there is no such thing as `EditorAction`. I assume this is a remnant of some changes that got deleted.', 'comment_created': datetime.datetime(2021, 8, 10, 23, 3, 12, tzinfo=datetime.timezone.utc), 'commenter': 'EricEzaM', 'type': 'User'}, {'comment_id': 686386539, 'comment_body': 'Needs some consistency... Here you capitalise every word, but below in the search box every word is lowercase. They should likely both be sentence case, as there are no proper nouns.\r\n\r\n`No matching commands found`\r\n`Search for a command`', 'comment_created': datetime.datetime(2021, 8, 10, 23, 28, 9, tzinfo=datetime.timezone.utc), 'commenter': 'EricEzaM', 'type': 'User'}, {'comment_id': 686387171, 'comment_body': 'I would probably add a comment in places where you add special conditions for `InputEventShortcut`, stating why that exception is made. In this case the method is `unhandled_key_input`... so why is `InputEventShortcut` allowed? \r\n\r\n(I understand why, I am just pointing out that you could save people who are looking at it for the first time from digging around the codebase to figure it out)', 'comment_created': datetime.datetime(2021, 8, 10, 23, 29, 44, tzinfo=datetime.timezone.utc), 'commenter': 'EricEzaM', 'type': 'User'}, {'comment_id': 686441251, 'comment_body': 'I forgot to mention, I don\'t really like this shortcut AND command function. I don\'t think it should have the side effect of also registering the command in editor settings. Personally I think they should be separate. More verbose, yes, but the function shouldn\'t have external side effects IMO.\r\n\r\n```cpp\r\np->add_shortcut(ED_SHORTCUT_AND_COMMAND(""editor/quick_open_script"", TTR(""Quick Open Script...""), KEY_MASK_CMD + KEY_MASK_ALT + KEY_O), FILE_QUICK_OPEN_SCRIPT);\r\n\r\n// becomes...\r\n\r\nRef<Shortcut> sc = ED_SHORTCUT(""editor/quick_open_script"", TTR(""Quick Open Script...""), KEY_MASK_CMD + KEY_MASK_ALT + KEY_O)\r\nEditorCommandPalette::get_singleton()->add_shortcut_command(sc->get_name(), ""editor/quick_open_script"", sc);\r\np->add_shortcut(sc, FILE_QUICK_OPEN_SCRIPT);\r\n\r\nOr you could add utility methods:\r\nED_ADD_COMMAND(sc->get_name(), ""editor/quick_open_script"", p_shortcut);\r\n```\r\n\r\nYou could also defer the name check to the add_command methods to simplify the above suggestion.\r\n\r\n```cpp\r\nif (p_command_name.is_empty()) {\r\n\tp_command_name = p_name;\r\n}\r\n```', 'comment_created': datetime.datetime(2021, 8, 11, 2, 14, 43, tzinfo=datetime.timezone.utc), 'commenter': 'EricEzaM', 'type': 'User'}, {'comment_id': 686572600, 'comment_body': ""> I forgot to mention, I don't really like this shortcut AND command function. I don't think it should have the side effect of also registering the command in editor settings. Personally I think they should be separate. More verbose, yes, but the function shouldn't have external side effects IMO.\r\n\r\nI disagree on that. This is a function that is supposed to be called very often in the codebase, going for 2 functions would be a pain to deal with, as it would mean 3 lines of codes everytime you need both a shortcut and a command. The most common use case is to add both, so I think a dedicated function here makes sense."", 'comment_created': datetime.datetime(2021, 8, 11, 7, 31, 39, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 686604293, 'comment_body': 'IMO if the most common use case is to add both I would have just made `ED_SHORTCUT` do that, and added `ED_SHORTCUT_NO_COMMAND` for the few shortcuts which should not be exposed as commands.', 'comment_created': datetime.datetime(2021, 8, 11, 8, 15, 7, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 686607563, 'comment_body': ""Well, I kind of agree, but I meant the most common use case compared to adding only the command (without registering the shortcut). For now I don't know which proportion of the shortcuts makes sense to be added commands too.\r\n"", 'comment_created': datetime.datetime(2021, 8, 11, 8, 19, 32, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 686611865, 'comment_body': ""Yeah, I see where you are coming from. Personally I try to avoid functions which have 'and' in the name (ideally following srp) or make calls to external classes which have 'side effects'. \r\n\r\nAt the end of the day this is fine (and very nitpicky on my end) because the use of this method is limited to a very specific case."", 'comment_created': datetime.datetime(2021, 8, 11, 8, 25, 1, tzinfo=datetime.timezone.utc), 'commenter': 'EricEzaM', 'type': 'User'}, {'comment_id': 686618083, 'comment_body': '@EricEzaM To be fair, in general I would agree with you. But I think here the case is special because we kind of use this function as kind of a macro to avoid duplication of code. In the long run I believe it avoids mistakes.\r\nAlso, right now the macro is in `editor_command_palette.h`,  but I agree it could also be move to another place to avoid including the editor shortcuts header there. But well, not sure it would have been worth to create a file only for that.', 'comment_created': datetime.datetime(2021, 8, 11, 8, 32, 47, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 688973903, 'comment_body': ""I agree. I'm pretty sure the original PR from @me2beats specifically called them `EditorAction` which was way more clear and in line with the expected concept. Ideally, a Command Pallete is merely *one way* in which a supposed `EditorAction` could be executed. Shortcuts are *another* way. But then you could also have entirely alternate, scripted means of executing an `EditorAction` (e.g. a custom EditorPlugin that applies a vim-like editing interface over the entire Godot Editor).\r\n\r\nThe `EditorAction`s shouldn't be tied directly to the notion of input events *or* shortcuts. They are simply a singular collection of globally accessible commands that can be categorized, filtered, sorted, executed, and contributed to by both engine code and script code."", 'comment_created': datetime.datetime(2021, 8, 14, 17, 49, 10, tzinfo=datetime.timezone.utc), 'commenter': 'willnationsdev', 'type': 'User'}, {'comment_id': 688974009, 'comment_body': ""It's a holdover from a previous PR that this was built from."", 'comment_created': datetime.datetime(2021, 8, 14, 17, 50, 23, tzinfo=datetime.timezone.utc), 'commenter': 'willnationsdev', 'type': 'User'}, {'comment_id': 691144901, 'comment_body': ""Try to avoid writing `ERR_FAIL_COND` without a message. Can you please add a message as to why this is not allowed? e.g.\r\n`Cannot set set a shortcut event to an instance of InputEventShortcut`\r\n\r\n@Bhu1-V, Or if you feel like adding this to your PR @YeldhamDev - I don't feel it is worth for me to create a whole new PR for myself :P"", 'comment_created': datetime.datetime(2021, 8, 18, 11, 23, 50, tzinfo=datetime.timezone.utc), 'commenter': 'EricEzaM', 'type': 'User'}, {'comment_id': 691422107, 'comment_body': 'Done! Now, could you be a pal give an approval to that PR? :stuck_out_tongue_closed_eyes:', 'comment_created': datetime.datetime(2021, 8, 18, 16, 34, 24, tzinfo=datetime.timezone.utc), 'commenter': 'YeldhamDev', 'type': 'User'}]","[{'commit_sha': 'a0a019a99826d7afbe701a3157324e8ccc1edf80', 'committer_username': 'Bhu1-V', 'committer_name': 'Pun1sher', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 1, 11, 5, 57, tzinfo=datetime.timezone.utc)}]",Pun1sher,70578657,,User,,22,,6,2
708967307,command palette improvements,"<!--
Pull requests should always be made for the `master` branch first, as that's
where development happens and the source of all future stable release branches.

Relevant fixes are cherry-picked for stable branches as needed.

Do not create a pull request for stable branches unless the change is already
available in the `master` branch and it cannot be easily cherry-picked.
Alternatively, if the change is only relevant for that branch (e.g. rendering
fixes for the 3.2 branch).
-->

This PR [fixes](https://github.com/godotengine/godot/pull/49417#pullrequestreview-726900118): 

1. Adding Command Palette as a Menu option.
2. Empty search shows all the available commands.
3. ok button of the command palette works.
4. other code fixes.
",True,51512,https://api.github.com/repos/godotengine/godot/pulls/51512,https://github.com/godotengine/godot/pull/51512,closed,40,43,6,1,9,21,2,0,"[{'name': 'enhancement'}, {'name': 'topic:editor'}]",2021-08-11 13:42:52+00:00,2021-08-15 14:01:50+00:00,346738.0,"4 days, 0:18:58","[{'comment_id': 686879120, 'comment_body': 'It would be better to change this to ""Filter commands"".', 'comment_created': datetime.datetime(2021, 8, 11, 14, 20, 22, tzinfo=datetime.timezone.utc), 'commenter': 'YeldhamDev', 'type': 'User'}, {'comment_id': 686880289, 'comment_body': ""```suggestion\r\n\r\n```\r\nThere's no reason to change this value."", 'comment_created': datetime.datetime(2021, 8, 11, 14, 21, 35, tzinfo=datetime.timezone.utc), 'commenter': 'YeldhamDev', 'type': 'User'}, {'comment_id': 686881758, 'comment_body': 'This looks wrong.', 'comment_created': datetime.datetime(2021, 8, 11, 14, 22, 59, tzinfo=datetime.timezone.utc), 'commenter': 'YeldhamDev', 'type': 'User'}, {'comment_id': 686882701, 'comment_body': 'Some code left behind?', 'comment_created': datetime.datetime(2021, 8, 11, 14, 24, 2, tzinfo=datetime.timezone.utc), 'commenter': 'EricEzaM', 'type': 'User'}, {'comment_id': 686883687, 'comment_body': ""This shouldn't be necessary. Command = Control on windows, so you should just be able to set it to `KEY_MASK_CMD | KEY_MASK_SHIFT | KEY_P` and it should work on both operating systems."", 'comment_created': datetime.datetime(2021, 8, 11, 14, 25, 5, tzinfo=datetime.timezone.utc), 'commenter': 'EricEzaM', 'type': 'User'}, {'comment_id': 686888197, 'comment_body': 'sure.\r\n', 'comment_created': datetime.datetime(2021, 8, 11, 14, 29, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 686889243, 'comment_body': 'okay', 'comment_created': datetime.datetime(2021, 8, 11, 14, 30, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 686890376, 'comment_body': 'my bad forgot to remove it.', 'comment_created': datetime.datetime(2021, 8, 11, 14, 32, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 686893388, 'comment_body': '```suggestion\r\n\tERR_FAIL_COND_MSG(!commands.has(p_key_name), ""The Command \'"" + String(p_key_name) + ""\' doesn\'t exist. Unable to remove it."");\r\n```', 'comment_created': datetime.datetime(2021, 8, 11, 14, 35, 19, tzinfo=datetime.timezone.utc), 'commenter': 'KoBeWi', 'type': 'User'}, {'comment_id': 686894007, 'comment_body': '```suggestion\r\n\t\t\tconnect(""confirmed"", callable_mp(this, &EditorCommandPalette::_confirmed));\r\n\t\t\tcommand_search_box->set_clear_button_enabled(true);\r\n```', 'comment_created': datetime.datetime(2021, 8, 11, 14, 35, 58, tzinfo=datetime.timezone.utc), 'commenter': 'KoBeWi', 'type': 'User'}, {'comment_id': 686894361, 'comment_body': 'sure', 'comment_created': datetime.datetime(2021, 8, 11, 14, 36, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 686895105, 'comment_body': 'Also ""exists"".', 'comment_created': datetime.datetime(2021, 8, 11, 14, 37, 4, tzinfo=datetime.timezone.utc), 'commenter': 'YeldhamDev', 'type': 'User'}, {'comment_id': 687066032, 'comment_body': 'Is the command palette ever removed for this to be necessary?', 'comment_created': datetime.datetime(2021, 8, 11, 18, 15, 6, tzinfo=datetime.timezone.utc), 'commenter': 'YeldhamDev', 'type': 'User'}, {'comment_id': 687070117, 'comment_body': '```suggestion\r\n\tcommand_search_box->set_placeholder(TTR(""Filter commands""));\r\n```', 'comment_created': datetime.datetime(2021, 8, 11, 18, 21, 8, tzinfo=datetime.timezone.utc), 'commenter': 'YeldhamDev', 'type': 'User'}, {'comment_id': 687120997, 'comment_body': ""Yeah that's unnecessary. And even if it was removed, it's still not necessary."", 'comment_created': datetime.datetime(2021, 8, 11, 19, 40, 27, tzinfo=datetime.timezone.utc), 'commenter': 'KoBeWi', 'type': 'User'}, {'comment_id': 688236078, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 13, 4, 32, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}, {'comment_id': 688863917, 'comment_body': ""I'm quite sure this could be placed in the constructor."", 'comment_created': datetime.datetime(2021, 8, 14, 4, 54, 49, tzinfo=datetime.timezone.utc), 'commenter': 'YeldhamDev', 'type': 'User'}, {'comment_id': 688939567, 'comment_body': '```suggestion\r\n\tERR_FAIL_COND_MSG(commands.has(p_key_name), ""The Command \'"" + String(p_command_name) + ""\' already exists. Unable to add it."");\r\n```\r\nThis was correct.', 'comment_created': datetime.datetime(2021, 8, 14, 14, 55, 11, tzinfo=datetime.timezone.utc), 'commenter': 'KoBeWi', 'type': 'User'}, {'comment_id': 688939936, 'comment_body': '```suggestion\r\n\tERR_FAIL_COND_MSG(commands.has(p_key_name), ""The Command \'"" + String(p_command_name) + ""\' already exists. Unable to add it."");\r\n```\r\n\r\nThis was also correct. Yes, English can be confusing at times. :stuck_out_tongue: ', 'comment_created': datetime.datetime(2021, 8, 14, 14, 58, 43, tzinfo=datetime.timezone.utc), 'commenter': 'YeldhamDev', 'type': 'User'}, {'comment_id': 689025256, 'comment_body': 'I assume you added this because of the low separation width in the right border. That is due to a regression in `Tree`, so this is unnecessary.', 'comment_created': datetime.datetime(2021, 8, 15, 3, 59, 47, tzinfo=datetime.timezone.utc), 'commenter': 'YeldhamDev', 'type': 'User'}, {'comment_id': 689036310, 'comment_body': 'yes, okay I will remove it.', 'comment_created': datetime.datetime(2021, 8, 15, 6, 7, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Bhu1-V', 'type': 'User'}]","[{'commit_sha': 'a0205e4f344eece7d681df9911ff9ddc371aaefc', 'committer_username': 'Bhu1-V', 'committer_name': 'Pun1sher', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 1, 11, 5, 57, tzinfo=datetime.timezone.utc)}]",Pun1sher,70578657,,User,,22,,6,2
712191307,`EditorCommandPalette` Documentation.,"<!--
Pull requests should always be made for the `master` branch first, as that's
where development happens and the source of all future stable release branches.

Relevant fixes are cherry-picked for stable branches as needed.

Do not create a pull request for stable branches unless the change is already
available in the `master` branch and it cannot be easily cherry-picked.
Alternatively, if the change is only relevant for that branch (e.g. rendering
fixes for the 3.2 branch).
-->

`EditorCommandPalette` Documentation.",True,51615,https://api.github.com/repos/godotengine/godot/pulls/51615,https://github.com/godotengine/godot/pull/51615,closed,26,0,2,1,1,0,2,0,"[{'name': 'enhancement'}, {'name': 'documentation'}]",2021-08-13 09:05:14+00:00,2021-09-15 21:25:55+00:00,2895641.0,"33 days, 12:20:41",[],"[{'commit_sha': 'cc566c548577426d7a596b00135cfc120b8b8e71', 'committer_username': 'Bhu1-V', 'committer_name': 'Pun1sher', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 1, 11, 5, 57, tzinfo=datetime.timezone.utc)}]",Pun1sher,70578657,,User,,22,,6,2
713014385,Minor tweaks/fixes for the Command Palette,"Had the wish for these changes to be made, but didn't want to keep bothering the student. So I just waited so I could do them myself.

- Fix first section being hidden by being scrolled up on popup.
- Made sections non-selectable. This prevents the dialog from trying to open a command with it, resulting in an error message.
- Took the time to also disable selecting the sections in the shortcut tab in the Editor Settings as well.
- Removed the ""No matches found"" when no commands are found given the search string. It implementation felt hacky, and I honestly don't feel it was really needed.
- General code tidy up.",True,51703,https://api.github.com/repos/godotengine/godot/pulls/51703,https://github.com/godotengine/godot/pull/51703,closed,59,53,3,1,2,6,3,0,"[{'name': 'bug'}, {'name': 'enhancement'}, {'name': 'topic:editor'}]",2021-08-15 22:51:17+00:00,2021-08-19 05:12:39+00:00,282082.0,"3 days, 6:21:22","[{'comment_id': 691649061, 'comment_body': 'Should this be TTR(""None"")? Not 100% sure but I think the shortcut name could be the translated version here? And I think None is translated in shortcut...On mobile atm, I will check later ðŸ˜Š', 'comment_created': datetime.datetime(2021, 8, 18, 22, 33, 46, tzinfo=datetime.timezone.utc), 'commenter': 'EricEzaM', 'type': 'User'}, {'comment_id': 691661093, 'comment_body': 'I\'m honestly having trouble finding where that could even be set as ""None"".', 'comment_created': datetime.datetime(2021, 8, 18, 23, 3, 27, tzinfo=datetime.timezone.utc), 'commenter': 'YeldhamDev', 'type': 'User'}, {'comment_id': 691676901, 'comment_body': 'I think it is here\r\n\r\nhttps://github.com/godotengine/godot/blob/31dfdcb69eb4d98a399243f5fc93b8e14b2e808a/editor/editor_command_palette.cpp#L141\r\n\r\nBut indeed it does not appear to be translated.', 'comment_created': datetime.datetime(2021, 8, 18, 23, 46, 25, tzinfo=datetime.timezone.utc), 'commenter': 'EricEzaM', 'type': 'User'}, {'comment_id': 691677552, 'comment_body': 'Also here:\r\n\r\nhttps://github.com/godotengine/godot/blob/31dfdcb69eb4d98a399243f5fc93b8e14b2e808a/scene/gui/shortcut.cpp#L58', 'comment_created': datetime.datetime(2021, 8, 18, 23, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'EricEzaM', 'type': 'User'}, {'comment_id': 691677654, 'comment_body': 'Neither are translated - so no worries.', 'comment_created': datetime.datetime(2021, 8, 18, 23, 48, 28, tzinfo=datetime.timezone.utc), 'commenter': 'EricEzaM', 'type': 'User'}, {'comment_id': 691677925, 'comment_body': 'Seems to never be exposed to the editor, so it makes sense.', 'comment_created': datetime.datetime(2021, 8, 18, 23, 49, 1, tzinfo=datetime.timezone.utc), 'commenter': 'YeldhamDev', 'type': 'User'}]","[{'commit_sha': '9819be756297c69e0c6b314bef6d45b0bc5227c1', 'committer_username': 'YeldhamDev', 'committer_name': 'Michael Alexsander', 'committer_email': 'michaelalexsander@protonmail.com', 'commit_date': datetime.datetime(2017, 8, 5, 1, 5, 42, tzinfo=datetime.timezone.utc)}]",Michael Alexsander,30739239,michaelalexsander@protonmail.com,User,,11,,0,78

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
15634981,godot,godotengine/godot,C++,19955,88154,1515,2965,66510,13348,14,2846,"[{'id': 712191307, 'number': 51615, 'closed': datetime.datetime(2021, 9, 15, 21, 25, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 13, 9, 5, 14, tzinfo=datetime.timezone.utc), 'time_taken': 2895641.0, 'time_delta': '33 days, 12:20:41', 'additions': 26, 'deletions': 0, 'state': 'closed'}, {'id': 709000570, 'number': 51515, 'closed': datetime.datetime(2021, 8, 11, 15, 36, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 11, 14, 2, 58, tzinfo=datetime.timezone.utc), 'time_taken': 5586.0, 'time_delta': '1:33:06', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 708967307, 'number': 51512, 'closed': datetime.datetime(2021, 8, 15, 14, 1, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 11, 13, 42, 52, tzinfo=datetime.timezone.utc), 'time_taken': 346738.0, 'time_delta': '4 days, 0:18:58', 'additions': 40, 'deletions': 43, 'state': 'closed'}, {'id': 664619514, 'number': 49417, 'closed': datetime.datetime(2021, 8, 10, 16, 55, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 9, 57, 19, tzinfo=datetime.timezone.utc), 'time_taken': 5468284.0, 'time_delta': '63 days, 6:58:04', 'additions': 576, 'deletions': 59, 'state': 'closed'}, {'id': 608484233, 'number': 47611, 'closed': datetime.datetime(2021, 4, 19, 8, 38, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 4, 4, 18, 27, tzinfo=datetime.timezone.utc), 'time_taken': 1311630.0, 'time_delta': '15 days, 4:20:30', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 592736520, 'number': 47017, 'closed': datetime.datetime(2021, 11, 18, 12, 2, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 15, 5, 10, 18, tzinfo=datetime.timezone.utc), 'time_taken': 21451922.0, 'time_delta': '248 days, 6:52:02', 'additions': 18, 'deletions': 1, 'state': 'closed'}, {'id': 589043235, 'number': 46853, 'closed': datetime.datetime(2023, 4, 20, 14, 5, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 10, 4, 46, 57, tzinfo=datetime.timezone.utc), 'time_taken': 66647922.0, 'time_delta': '771 days, 9:18:42', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 588073705, 'number': 46825, 'closed': datetime.datetime(2021, 3, 15, 5, 11, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 9, 14, 42, 36, tzinfo=datetime.timezone.utc), 'time_taken': 484105.0, 'time_delta': '5 days, 14:28:25', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 586565546, 'number': 46784, 'closed': datetime.datetime(2021, 3, 9, 8, 58, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 8, 8, 22, 30, tzinfo=datetime.timezone.utc), 'time_taken': 88557.0, 'time_delta': '1 day, 0:35:57', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 518592950, 'number': 43441, 'closed': datetime.datetime(2020, 11, 10, 17, 10, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 10, 16, 1, 43, tzinfo=datetime.timezone.utc), 'time_taken': 4100.0, 'time_delta': '1:08:20', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 517188578, 'number': 43384, 'closed': datetime.datetime(2020, 11, 10, 14, 54, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 7, 20, 29, 47, tzinfo=datetime.timezone.utc), 'time_taken': 239074.0, 'time_delta': '2 days, 18:24:34', 'additions': 0, 'deletions': 0, 'state': 'closed'}]"
