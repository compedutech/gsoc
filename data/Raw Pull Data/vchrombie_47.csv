pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
435205827,[qm-elk] Add support for QM data enrichment,"This PR adds a new enricher for handling the gitlab data used for quality models.
- [x] enricher
- [x] configurations
- [ ] schema
- [ ] tests

#### micro-mordred configurations

project.json
```
{
    ""amfoss"": {
        ""gitlabqm:issue"": [
            ""https://gitlab.com/amfoss/cms-mobile""
        ],
        ""gitlabqm:merge"": [
            ""https://gitlab.com/amfoss/cms-mobile""
        ]
    }
}
```

setup.cfg
```
[gitlabqm:issue]
api-token = xxxx
raw_index = gitlabqm-issues_raw
enriched_index = gitlabqm-issues_enriched
sleep-for-rate = true
category = issue
no-archive = true

[gitlabqm:merge]
api-token = xxxx
raw_index = gitlabqm-merge_raw
enriched_index = gitlabqm-merge_enriched
sleep-for-rate = true
category = merge_request
no-archive = true
```
",False,892,https://api.github.com/repos/chaoss/grimoirelab-elk/pulls/892,https://github.com/chaoss/grimoirelab-elk/pull/892,closed,293,0,3,3,11,34,0,0,[],2020-06-16 13:14:39+00:00,2020-06-23 12:47:21+00:00,603162.0,"6 days, 23:32:42","[{'comment_id': 440847657, 'comment_body': ""Hi @valeriocos \r\nI understand that this enricher doesn't really deal with identities, I tried removing these function but faced errors if these are not added.\r\n\r\nDo you know any workaround for this or any enrichers which don't deal with the identities?"", 'comment_created': datetime.datetime(2020, 6, 16, 13, 26, 35, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 440848952, 'comment_body': 'I got this uuid function implementation from perceval and crossminer/scava project.\r\nDo you have any comments on this?\r\n\r\nI think we can move this to the qmenrich.py file as this might be needed for all the enrichers. :thinking: ', 'comment_created': datetime.datetime(2020, 6, 16, 13, 28, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 440860620, 'comment_body': 'Please check the google_hits enricher: \r\n- https://github.com/chaoss/grimoirelab-elk/blob/master/grimoire_elk/enriched/google_hits.py#L38\r\n- https://github.com/chaoss/grimoirelab-elk/blob/master/grimoire_elk/enriched/google_hits.py#L32', 'comment_created': datetime.datetime(2020, 6, 16, 13, 44, 8, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 440863639, 'comment_body': ""Ok, thanks @valeriocos. I'll check them. :+1:"", 'comment_created': datetime.datetime(2020, 6, 16, 13, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 440869120, 'comment_body': 'Since the unique field of the document is `id` as defined by the method `get_field_unique_id`, the attribute should be `id`.\r\nIn ELK, the id is composed by a concatenation of terms, this is useful to know where the item comes from. For instance in gerrit, we concatenate the ids coming from upstream and time info (when needed):\r\n- https://github.com/chaoss/grimoirelab-elk/blob/master/grimoire_elk/enriched/gerrit.py#L311\r\n- https://github.com/chaoss/grimoirelab-elk/blob/master/grimoire_elk/enriched/gerrit.py#L401\r\n- https://github.com/chaoss/grimoirelab-elk/blob/master/grimoire_elk/enriched/gerrit.py#L218\r\n\r\nIf you like the approach below, we can remove the uuid method. In case you want to keep the `uuid` method, it could be imported from Perceval (since the latter is a depenency of ELK): `from perceval.backend import uuid`', 'comment_created': datetime.datetime(2020, 6, 16, 13, 55, 1, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 440869356, 'comment_body': ""yes, that's a good idea, please check the comment https://github.com/chaoss/grimoirelab-elk/pull/892/files#r440869120"", 'comment_created': datetime.datetime(2020, 6, 16, 13, 55, 16, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 440871775, 'comment_body': ""you're welcome"", 'comment_created': datetime.datetime(2020, 6, 16, 13, 57, 51, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 441055960, 'comment_body': ""Thanks for the detailed explanation @valeriocos. It really helped a lot.\r\n\r\n> Since the unique field of the document is `id` as defined by the method `get_field_unique_id`, the attribute should be `id`.\r\n\r\nYes, I understood the mistake. \r\n\r\nSo, as we can have `id` or `uuid` as the unique id, what do you suggest?\r\n\r\nWe can implement something like \r\n```\r\n            eitem['state'] = issue['state']\r\n            eitem['id'] = '{}_issue_{}'.format(eitem['state'], eitem['uuid'])\r\n```\r\n\r\n> In case you want to keep the `uuid` method, it could be imported from Perceval (since the latter is a depenency of ELK): `from perceval.backend import uuid`\r\n\r\nperfect! thanks."", 'comment_created': datetime.datetime(2020, 6, 16, 18, 24, 8, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 441142968, 'comment_body': 'I have updated the PR, let me know what do you think.\r\nThanks.', 'comment_created': datetime.datetime(2020, 6, 16, 21, 8, 19, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 441367366, 'comment_body': 'This can be removed if not used', 'comment_created': datetime.datetime(2020, 6, 17, 8, 19, 15, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 441375902, 'comment_body': 'please indent the dict:\r\n```\r\n    def add_extra_data(self):\r\n        eitem = {\r\n            \'metric_class\': ""issues"",\r\n            \'metric_type\': ""LineChart"",\r\n            \'metric_es_compute\': ""sample"",\r\n            \'metric_id\': ""issues.numberOpenIssues"",\r\n            \'metric_desc\': ""The number of issues opened on a current date."",\r\n            \'metric_name\': ""Number of Open Issues""\r\n        }\r\n```', 'comment_created': datetime.datetime(2020, 6, 17, 8, 33, 17, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 441377455, 'comment_body': 'The datetime import can be removed, the code below should return an equivalent result:\r\n```\r\n    def normalized_date(self, dt):\r\n        processed_dt = str_to_datetime(dt).replace(hour=0, minute=0, second=0, microsecond=0)\r\n        return processed_dt.isoformat()\r\n```', 'comment_created': datetime.datetime(2020, 6, 17, 8, 35, 50, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 441390456, 'comment_body': 'grimoire_fields are missing\r\n\r\n```\r\neitem.update(self.get_grimoire_fields(dt, ""xxx""))\r\n```', 'comment_created': datetime.datetime(2020, 6, 17, 8, 55, 44, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 441391520, 'comment_body': 'why this method is called `filter_items`? I understand that it iterates over the raw data to derive metrics per day. With the current implementation the metric is calculated for the whole index (which may include multiple repos)', 'comment_created': datetime.datetime(2020, 6, 17, 8, 57, 21, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 441393288, 'comment_body': 'Instead of using search_fields.project, it would be better to get the attribute `origin`, which is included in all Perceval docs and contains the repo URL.\r\n\r\nIs there a specific reason to use `search_fields.project`?', 'comment_created': datetime.datetime(2020, 6, 17, 9, 0, 13, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 441397635, 'comment_body': 'Can you explain why this loop is needed?', 'comment_created': datetime.datetime(2020, 6, 17, 9, 7, 33, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 441397902, 'comment_body': 'Can you explain the purpose of the method `enrich_issue`?', 'comment_created': datetime.datetime(2020, 6, 17, 9, 8, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 441406526, 'comment_body': ""This statement allows to generate only a document per `dt`. In this case, it seems that the statement `eitem['state'] = issue['state']` isn't correct, since it will store the value of the first issue on `dt` (there may be other issues with a different status on the same `dt`). The same applies to the attribute added by `add_project`, there may be other issues from different repos.\r\n\r\nAm I missing something?"", 'comment_created': datetime.datetime(2020, 6, 17, 9, 22, 2, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 441409123, 'comment_body': 'Is this mapping needed?', 'comment_created': datetime.datetime(2020, 6, 17, 9, 25, 55, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 441410284, 'comment_body': 'why `DATE_ITEMS` is defined at this level, would be better to declare it as an instance variable (like self.users)?', 'comment_created': datetime.datetime(2020, 6, 17, 9, 27, 43, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 441454591, 'comment_body': 'perfect! thanks.', 'comment_created': datetime.datetime(2020, 6, 17, 10, 45, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 441458348, 'comment_body': 'There is no particular reason for this. I was thinking about what field to use and derive the project name (instead of something like URL).\r\nBut, when we are expanding to other data sources, `origin` sounds more feasible than `search_fields.project`.\r\n\r\nI will change it. Thanks. :)', 'comment_created': datetime.datetime(2020, 6, 17, 10, 52, 42, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 441459316, 'comment_body': 'I was planning to implement the same enricher for merge requests too, so I just had the if the condition for now. ', 'comment_created': datetime.datetime(2020, 6, 17, 10, 54, 40, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 441459680, 'comment_body': 'that sounds better!\r\nthanks for the suggestion. :)', 'comment_created': datetime.datetime(2020, 6, 17, 10, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 441460747, 'comment_body': ""> I understand that it iterates over the raw data to derive metrics per day. \r\n\r\nYes.\r\n\r\n> why this method is called `filter_items`?\r\n\r\nI just had it with no reason, I'll update it with a good name. :sweat_smile: "", 'comment_created': datetime.datetime(2020, 6, 17, 10, 57, 31, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 441461843, 'comment_body': 'uhm, the steps are\r\n\r\n1. extract the metrics day-wise\r\n2. iterate over the issue to generate the enriched items\r\n\r\nbut I think this can be improved :thinking: \r\n\r\nlet me try another thing and I will get back to you.', 'comment_created': datetime.datetime(2020, 6, 17, 10, 59, 49, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 441465357, 'comment_body': ""> This statement allows to generate only a document per dt. In this case, it seems that the statement eitem['state'] = issue['state'] isn't correct, since it will store the value of the first issue on dt (there may be other issues with a different status on the same dt).\r\n\r\nAh ya, this is a mistake, thanks for pointing out it. I will fix this and get back to you. I understood the problem.\r\n\r\n> The same applies to the attribute added by add_project, there may be other issues from different repos.\r\n\r\n~~uhm, this I need to check. I'll check it.~~\r\nmy bad, you are right @valeriocos \r\nthis is wrong, I will try to fix it"", 'comment_created': datetime.datetime(2020, 6, 17, 11, 7, 12, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 441465809, 'comment_body': ""if we remove that, wouldn't that be an empty mapping?"", 'comment_created': datetime.datetime(2020, 6, 17, 11, 8, 5, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 441492875, 'comment_body': 'no worries, thank you for looking at this', 'comment_created': datetime.datetime(2020, 6, 17, 12, 3, 18, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 441493903, 'comment_body': 'Yes, like the enricher for google_hits: https://github.com/chaoss/grimoirelab-elk/blob/master/grimoire_elk/enriched/google_hits.py.\r\n\r\nBy default, ELK uploads a default mapping (ref https://github.com/chaoss/grimoirelab-elk/blob/master/grimoire_elk/elastic_mapping.py#L31)', 'comment_created': datetime.datetime(2020, 6, 17, 12, 5, 21, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 441869599, 'comment_body': ""Hi @valeriocos \r\nI replaced it as you suggested.\r\nThe enrichment went fine, without any problem but I encountered a problem while performing an assessment.\r\n\r\n```\r\nErrors: Problem creating the assessment [Errno 2] No such file or directory: 'prosoul/static/prosoul/assessment_csv_https://gitlab.com/amfoss/cms-mobile.csv'\r\n```\r\n\r\nSo, when the project name is URL, it has '/' which is leading to path error.\r\n\r\nSo, I reverted it back to `search_fields.project` for the time being. "", 'comment_created': datetime.datetime(2020, 6, 17, 22, 31, 41, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 441872378, 'comment_body': 'I added a new commit, which kinda rewrites the implementation. \r\nI made a complex (atleast I felt :sweat_smile:) data structure for extracting all the date items which looks something like this\r\n```\r\n{\r\n  ""cms-mobile"" : {\r\n    ""opened"" : {\r\n      ""2020-09-09"" : 9,\r\n      ""2020-09-08"" : 4,\r\n      ""2020-09-07"" : 1\r\n    },\r\n    ""closed"" : {\r\n      ""2020-09-09"" : 9,\r\n      ""2020-09-08"" : 4,\r\n      ""2020-09-07"" : 1\r\n    }\r\n  },\r\n  ""cms"" : {\r\n    ""opened"" : {\r\n      ""2020-09-09"" : 9,\r\n      ""2020-09-08"" : 4,\r\n      ""2020-09-07"" : 1\r\n    },\r\n    ""closed"" : {\r\n      ""2020-09-09"" : 9,\r\n      ""2020-09-08"" : 4,\r\n      ""2020-09-07"" : 1\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nI\'m resolving this, for now, please feel free to reopen or open a new one in case you have any comments on it.\r\nThanks.', 'comment_created': datetime.datetime(2020, 6, 17, 22, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 441872578, 'comment_body': 'I had the same name, but will surely change to some meaningful name before merging. :sweat_smile: \r\nI will keep this on the note but resolving it right now.\r\nThanks.', 'comment_created': datetime.datetime(2020, 6, 17, 22, 40, 36, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 441873131, 'comment_body': ""> Can you explain why this loop is needed?\r\n\r\nChanged the logic :grimacing:, please review and provide your comments when you are free.\r\nI'm resolving this, for now, feel free to open a new one for review comment.\r\nThanks."", 'comment_created': datetime.datetime(2020, 6, 17, 22, 42, 23, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}]","[{'commit_sha': 'a0d66a3167c26d77f021a13f74ae6b55a6189505', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f872b13dc4b8b15da2e11df8a6492ac582530766', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '945af7e4d4da4baba1bcb0ab5ffca5a1f4123e33', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}]",Venu Vardhan Reddy Tekula,25265451,vt2182@nyu.edu,User,,167,,112,203
438547312,[qm-elk] Add support for QM data enrichment,"This PR contains _gitlabqm_ and _gitqm_ enrichers.

metrics discussion for gitqm: https://github.com/vchrombie/gsoc/issues/9
output example for gitqm: [gist-file-gitqm](https://gist.github.com/vchrombie/f3c193a5b43b509b1b33d83e169873c6#file-gitqm)

#### micro-mordred configurations

project.json
```
{
    ""potioncraft"" : {
        ""gitqm"": [
            ""https://github.com/vchrombie/gsoc.git""
        ],
        ""gitlabqm:issue"": [
            ""https://gitlab.com/amfoss/cms-mobile""
        ],
        ""gitlabqm:merge"": [
            ""https://gitlab.com/amfoss/cms-mobile""
        ]
    }
}
```

setup.cfg
```
[gitqm]
raw_index = gitqm_raw
enriched_index = gitqm
category = commit

[gitlabqm:issue]
api-token = xxxx
raw_index = gitlabqm-issues_raw
enriched_index = gitlabqm
sleep-for-rate = true
category = issue
no-archive = true

[gitlabqm:merge]
api-token = xxxx
raw_index = gitlabqm-merge_raw
enriched_index = gitlabqm
sleep-for-rate = true
category = merge_request
no-archive = true
```
",False,902,https://api.github.com/repos/chaoss/grimoirelab-elk/pulls/902,https://github.com/chaoss/grimoirelab-elk/pull/902,closed,521,0,4,2,3,12,0,0,[],2020-06-23 12:46:32+00:00,2020-07-30 20:51:45+00:00,3225913.0,"37 days, 8:05:13","[{'comment_id': 444891066, 'comment_body': 'As we already discussed the `files_changed`\r\n\r\n> It can be either the number of unique files changed per day or all files that changed at least once in a day.\r\n\r\nI understand that the current implementation falls under all the files changed at least once in a day. I can give an example.\r\n\r\nlet\'s say we have 2 commits on a single day\r\n\r\n```\r\n{\r\n        ""CommitDate"": ""Tue Jun 9 00:29:16 2020 +0530"",\r\n        ""commit"": ""26538381eb447667b0b035e38a8830805bd6acbb"",\r\n\t""files"": [\r\n            {\r\n                ""file"": ""README.md"",\r\n            },\r\n            {\r\n                ""file"": ""work/week-1/readme.md"",\r\n            }\r\n        ]\r\n},\r\n{\r\n\t""CommitDate"": ""Tue Jun 9 01:52:30 2020 +0530"",\r\n\t""commit"": ""f15384ce01207dc274082d0f608ce3264797d271"",\r\n\t""files"": [\r\n            {\r\n                ""file"": ""README.md"",\r\n            }\r\n        ]\r\n}\r\n```\r\n\r\nso, the result will be\r\n\r\ncommits = 2\r\nfiles_changed = 3\r\n\r\nI want to ask if this is the expected behavior or if I didn\'t understand it correctly. Please let me know your views on this.', 'comment_created': datetime.datetime(2020, 6, 24, 13, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 444900818, 'comment_body': 'Yes, this looks like the expected behavior. Do you think the behavior should be different?', 'comment_created': datetime.datetime(2020, 6, 24, 13, 40, 7, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 444903901, 'comment_body': '> Yes, this looks like the expected behavior. \r\n\r\nThanks for clarifying. :smile: \r\n\r\n> Do you think the behavior should be different?\r\n\r\nActually no, but I had some second thoughts on it so I thought of clarifying it. :grimacing: ', 'comment_created': datetime.datetime(2020, 6, 24, 13, 44, 21, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 444907969, 'comment_body': 'cool, thanks for taking the time to clarify it', 'comment_created': datetime.datetime(2020, 6, 24, 13, 50, 10, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 457509856, 'comment_body': 'The `.git` can be optional. For instance when you try to clone a repo on GitHub, you can use `repo-url.git` or `repo-url`.', 'comment_created': datetime.datetime(2020, 7, 20, 15, 46, 17, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 457510719, 'comment_body': ""I tested the code on https://gitlab.com/Bitergia/devops/indexwarrior, and got a key error on `file['action']`\r\n\r\n```\r\n@@ -90,7 +90,7 @@ class GitQMEnrich(QMEnrich):\r\n         for file in files:\r\n             added += int(file['added']) if file['added'].isdigit() else 0\r\n             removed += int(file['removed']) if file['removed'].isdigit() else 0\r\n-            actions += 1 if file['action'] else 0\r\n+            actions += 1 if 'action' in file else 0\r\n             files_changed.append(file['file'])\r\n```"", 'comment_created': datetime.datetime(2020, 7, 20, 15, 47, 22, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 457518545, 'comment_body': 'The timezone seems to produce multiple entries for the same date (repo: https:/gitlab.com/Bitergia/devops/indexwarrior). \r\n\r\n![captura_565](https://user-images.githubusercontent.com/6515067/87958793-4347f480-cab2-11ea-92b5-7bd8f098b99c.png)\r\n\r\n', 'comment_created': datetime.datetime(2020, 7, 20, 15, 56, 53, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 457521490, 'comment_body': 'The timezone is included in the normalized date (repo: https:/gitlab.com/Bitergia/devops/indexwarrior). Does it make sense to have all results in UTC+0\r\n![captura_566](https://user-images.githubusercontent.com/6515067/87959252-e4cf4600-cab2-11ea-9e1a-7136945ffeb9.png)\r\n', 'comment_created': datetime.datetime(2020, 7, 20, 16, 0, 34, tzinfo=datetime.timezone.utc), 'commenter': 'valeriocos', 'type': 'User'}, {'comment_id': 460550397, 'comment_body': 'Okay, I will check it.', 'comment_created': datetime.datetime(2020, 7, 26, 17, 4, 22, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 460550467, 'comment_body': ""Yes, thanks for the catch. I'll fix this."", 'comment_created': datetime.datetime(2020, 7, 26, 17, 4, 46, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 460550634, 'comment_body': 'Thanks for reporting this. I faced a similar issue while implementing the pipermailqm enricher. I will update the normalizing date function.', 'comment_created': datetime.datetime(2020, 7, 26, 17, 6, 1, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 460550713, 'comment_body': 'Yes, it is possible I guess. I have done that in pipermailqm enricher. I will update it.', 'comment_created': datetime.datetime(2020, 7, 26, 17, 6, 52, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}]","[{'commit_sha': '8b709bf480ac14c15630b1c8e6cb1ac72941ecea', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e620dc5c9c7df79048f07037527d0e9bf023396', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}]",Venu Vardhan Reddy Tekula,25265451,vt2182@nyu.edu,User,,167,,112,203
433524210,[docs] Update Getting-Started.md result image,"The GrimoireLab got updated to a newer version (ES & Kibiter 6.8.6). This PR updates the Getting-Started.md installation result section with the latest snapshot of it.

I was thinking to leave the rest of the sections, for now, anticipating some new contributors. So, updating just the installation section. ",True,476,https://api.github.com/repos/chaoss/grimoirelab-sirmordred/pulls/476,https://github.com/chaoss/grimoirelab-sirmordred/pull/476,closed,1,1,1,1,0,0,0,0,[],2020-06-12 07:52:58+00:00,2020-06-18 07:35:57+00:00,517379.0,"5 days, 23:42:59",[],"[{'commit_sha': '9b23afa952712f429b85657b763ab199ada23f15', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}]",Venu Vardhan Reddy Tekula,25265451,vt2182@nyu.edu,User,,167,,112,203
459593254,[qm-elk] Add support for QM data enrichment,"This PR contains the following enrichers
- _gitlabqm_
- _gitqm_
- _pipermailqm_
- _meetupqm_
- _githubqm_

metrics discussion: [metric labelled issues](https://github.com/vchrombie/gsoc/issues?q=is%3Aissue+label%3Ametrics+)
more information: https://github.com/vchrombie/gsoc/issues/6

#### micro-mordred configurations

project.json
```
{
  ""potioncraft"": {
    ""gitqm"": [
      ""https://gitlab.com/Bitergia/devops/indexwarrior""
    ] ,
    ""gitlabqm:issue"": [
      ""https://gitlab.com/Bitergia/devops%2Findexwarrior""
    ] ,
    ""gitlabqm:merge"": [
      ""https://gitlab.com/Bitergia/devops%2Findexwarrior""
    ] ,
    ""pipermailqm"": [
      ""https://lists.linuxfoundation.org/pipermail/grimoirelab-discussions/""
    ] ,
    ""meetupqm"": [
      ""GitLab-Meetup-Group""
    ] ,
    ""githubqm:issue"": [
      ""https://github.com/chaoss/grimoirelab""
    ] ,
    ""githubqm:pull"": [
      ""https://github.com/chaoss/grimoirelab""
    ]
  }
}
```

setup.cfg
```
[gitqm]
raw_index = gitqm_raw
enriched_index = gitqm_enriched
category = commit

[gitlabqm:issue]
api-token = xxxx
raw_index = gitlabqm_issues_raw
enriched_index = gitlabqm_issues_enriched
sleep-for-rate = true
category = issue
no-archive = true

[gitlabqm:merge]
api-token = xxxx
raw_index = gitlabqm_mrs_raw
enriched_index = gitlabqm_mrs_enriched
sleep-for-rate = true
category = merge_request
no-archive = true

[pipermailqm]
raw_index = pipermailqm_raw
enriched_index = pipermailqm_enriched

[meetupqm]
raw_index = meetupqm_raw
enriched_index = meetupqm_enriched
api-token = xxxx
sleep-for-rate = true
sleep-time = ""300""
no-archive = true

[githubqm:issue]
raw_index = githubqm_issues_raw
enriched_index = githubqm_issues_enriched
api-token = xxxx
sleep-for-rate = true
sleep-time = 300
category = issue
no-archive = true

[githubqm:pull]
raw_index = githubqm_prs_raw
enriched_index = githubqm_prs_enriched
api-token = xxxx
sleep-for-rate = true
sleep-time = 300
category = pull_request
no-archive = true
```",False,926,https://api.github.com/repos/chaoss/grimoirelab-elk/pulls/926,https://github.com/chaoss/grimoirelab-elk/pull/926,closed,19605,1,14,10,3,0,0,0,[],2020-07-30 20:50:35+00:00,2021-09-11 14:47:40+00:00,35229425.0,"407 days, 17:57:05",[],"[{'commit_sha': '191a6306b67823f35313a254f6628011c73bce6f', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c115400e43d1d78987f3017721b6af28d6a8f3d4', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfcd5f4700b41673d636d0c8e7f0d9da2a9c930c', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a1244b2e0e89ea85405d4804b3d7722be8a18f4', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f66cfea09385664e14a7f08d99d913927d7a379', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1794545f4d4c9ef1c5402c9f4300f402ba1c6107', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85165712cb0e9dece1b8eb32f878ab5aadc5c5b9', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bf8129e94bef88257bad3d268451119ae15a4b0', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66e8dd8018ae4e2e9240d3e6d2c6c8a00dce4269', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e2ae5ada38d756ba4efc840566a9926b8e98c87', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}]",Venu Vardhan Reddy Tekula,25265451,vt2182@nyu.edu,User,,167,,112,203
470530844,[doc] Update prosoul-grimoirelab.md,"This PR aims for updating the documentation and workflow of how to use prosoul with grimoirelab.
Open for suggestions/improvements. :slightly_smiling_face: 

~~There is a little work pending/incomplete. I will complete it soon.~~",False,216,https://api.github.com/repos/Bitergia/prosoul/pulls/216,https://github.com/Bitergia/prosoul/pull/216,open,205,20,2,1,0,3,0,0,[],2020-08-20 00:39:28+00:00,,0.0,,"[{'comment_id': 474310549, 'comment_body': ""Would it be good if we can automate the alias adding?\r\n\r\nI understand that we can add an alias to the enriched indices using sirmordred by having an entry in the [aliases.json](https://github.com/chaoss/grimoirelab-sirmordred/blob/master/aliases.json). \r\nRef: https://github.com/chaoss/grimoirelab-sirmordred/pull/486\r\n\r\nSo, we can add a common alias (`all_qm_data`) to all the enriched QM enriched indices.\r\n\r\nThe only disadvantage I see is all the enriched indices will be a part of the assessment.\r\nIf we enrich `githubqm:pull` but we don't want it in the assessment, then we have to manually remove the alias."", 'comment_created': datetime.datetime(2020, 8, 20, 22, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 474313955, 'comment_body': '\r\nWould it be good if we can automate the alias adding?\r\n\r\nI understand that we can add an alias to the prosoul indices. [prosoul_assess.py#L754](https://github.com/Bitergia/prosoul/blob/master/django-prosoul/prosoul/prosoul_assess.py#L754)\r\n\r\nSo, we can add a common alias (`all_results_alias`) to all the prosoul indices.\r\n\r\n```\r\nall_results_alias = es_index + ""_results""\r\n# all_results_alias = all_qm_data_results\r\n\r\nes_conn.indices.update_aliases({\r\n    ""actions"": [\r\n        {""add"": {""index"": null_scores_index, ""alias"": all_scores_alias}},\r\n+       {""add"": {""index"": null_scores_index, ""alias"": all_results_alias}},\r\n        {""add"": {""index"": scores_index, ""alias"": all_scores_alias}},\r\n+       {""add"": {""index"": scores_index, ""alias"": all_results_alias}},\r\n        {""add"": {""index"": null_scores_quarters_index, ""alias"": all_scores_quarters_alias}},\r\n+       {""add"": {""index"": null_scores_quarters_index, ""alias"": all_results_alias}},\r\n        {""add"": {""index"": scores_quarters_index, ""alias"": all_scores_quarters_alias}},\r\n+       {""add"": {""index"": scores_quarters_index, ""alias"": all_results_alias}},\r\n    ]\r\n})\r\n```\r\n\r\nWDYT?', 'comment_created': datetime.datetime(2020, 8, 20, 22, 50, 18, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}, {'comment_id': 475057531, 'comment_body': 'We can add the [prosoul with the grimoirelab](https://raw.githubusercontent.com/vchrombie/prosoul/update-images/doc/prosoul-grimoirelab.png) image here, once the PR #213 is good to go.\r\n\r\nWDYT?', 'comment_created': datetime.datetime(2020, 8, 22, 7, 14, 10, tzinfo=datetime.timezone.utc), 'commenter': 'vchrombie', 'type': 'User'}]","[{'commit_sha': 'c31f39ecdb527e31377cf464938817cce7a78016', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}]",Venu Vardhan Reddy Tekula,25265451,vt2182@nyu.edu,User,,167,,112,203
470367123,[docker] Update docker-compose.yml,"This PR updates the docker-compose file with the ES/Kibiter 6.8 images and also to the latest format.
I have tested this docker-compose solution and it works perfectly fine. :tada: 

Please let me know if you have any suggestions. :slightly_smiling_face: 

Fixes #214 ",False,215,https://api.github.com/repos/Bitergia/prosoul/pulls/215,https://github.com/Bitergia/prosoul/pull/215,open,35,24,1,1,0,0,0,0,[],2020-08-19 19:00:58+00:00,,0.0,,[],"[{'commit_sha': '7c1f29218a37271cdda82daaa9dc310fbb4fc76a', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}]",Venu Vardhan Reddy Tekula,25265451,vt2182@nyu.edu,User,,167,,112,203
468511660,[doc] Update the repo with the latest images,"This PR updates the repository with the latest architecture image and adds a few other images like prosoul with grimoirelab and prosoul logo.

Please let me know if you have any suggestions for the PR.",False,213,https://api.github.com/repos/Bitergia/prosoul/pulls/213,https://github.com/Bitergia/prosoul/pull/213,open,0,14,5,1,0,0,0,0,[],2020-08-16 23:22:40+00:00,,0.0,,[],"[{'commit_sha': '839885fe2e324b5338d6d7564438c259d0398cd9', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}]",Venu Vardhan Reddy Tekula,25265451,vt2182@nyu.edu,User,,167,,112,203
471302879,[doc] Add instructions for QM Enrichers,"This code adds the instructions and examples to execute the qm enricher backends.

Let me know if you have any suggestions. :slightly_smiling_face: ",False,486,https://api.github.com/repos/chaoss/grimoirelab-sirmordred/pulls/486,https://github.com/chaoss/grimoirelab-sirmordred/pull/486,closed,165,1,1,5,2,0,0,0,[],2020-08-21 00:14:08+00:00,2021-09-11 14:49:13+00:00,33402905.0,"386 days, 14:35:05",[],"[{'commit_sha': '8b7f71d6bd1065bbfc5e7ae4ca3362a5dd1513b4', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44d7c87f9be5e925edb32467c62c04f895838513', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b5fade2ea7ec1b586a257b0834b3a80a0c9226f', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85b8e587ba67675a8a44dfc860bdb578b6b1f768', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '253233bffe765ca9b60268cf4d4f1de38e5c09f3', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}]",Venu Vardhan Reddy Tekula,25265451,vt2182@nyu.edu,User,,167,,112,203
468510236,[qm] Add qm dashboard,"This PR adds the QM dashboard to the repository.

Please let me know if you have any suggestions for the PR or the panel.

EDIT: I just now read about the documentation of each panel in the `docs/` folder. I will add the required documentation.",False,470,https://api.github.com/repos/chaoss/grimoirelab-sigils/pulls/470,https://github.com/chaoss/grimoirelab-sigils/pull/470,closed,247,0,1,1,1,0,0,0,[],2020-08-16 23:10:49+00:00,2021-09-11 14:48:27+00:00,33752258.0,"390 days, 15:37:38",[],"[{'commit_sha': 'c4e66805bd4bd90fedb573f7d0b7a2cb607f15fd', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}]",Venu Vardhan Reddy Tekula,25265451,vt2182@nyu.edu,User,,167,,112,203
468508839,Update documentation about Kidash,"This PR updates the README.md about Kidash and adds its usage and relevant links.

I found one more reference in this repository, [CONTRIBUTING.md#installing-kidash](https://github.com/chaoss/grimoirelab-sigils/blob/master/CONTRIBUTING.md#installing-kidash). Can I update the information here too?

Please let me know if you have any suggestions for the PR.",True,469,https://api.github.com/repos/chaoss/grimoirelab-sigils/pulls/469,https://github.com/chaoss/grimoirelab-sigils/pull/469,closed,6,3,1,1,2,2,0,0,[],2020-08-16 22:59:38+00:00,2020-08-20 07:26:44+00:00,289626.0,"3 days, 8:27:06","[{'comment_id': 471414288, 'comment_body': 'I think you missed the last `s`: `--split-index_patterns`', 'comment_created': datetime.datetime(2020, 8, 17, 11, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'alpgarcia', 'type': 'User'}, {'comment_id': 471414667, 'comment_body': 'I would add `--split-index_patterns` here too because is the usual way to go and all dashboards within sigils were exported that way.', 'comment_created': datetime.datetime(2020, 8, 17, 11, 26, 37, tzinfo=datetime.timezone.utc), 'commenter': 'alpgarcia', 'type': 'User'}]","[{'commit_sha': 'fd0567936157109573843096f026d5d557a5f8ba', 'committer_username': 'vchrombie', 'committer_name': 'Venu Vardhan Reddy Tekula', 'committer_email': 'vt2182@nyu.edu', 'commit_date': datetime.datetime(2017, 1, 21, 12, 45, 8, tzinfo=datetime.timezone.utc)}]",Venu Vardhan Reddy Tekula,25265451,vt2182@nyu.edu,User,,167,,112,203

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
43443738,grimoirelab-elk,chaoss/grimoirelab-elk,Python,121,59,16,52,3389,51,5,12,"[{'id': 875314693, 'number': 1040, 'closed': None, 'created': datetime.datetime(2022, 3, 9, 13, 35, 16, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 6, 'deletions': 1, 'state': 'open'}, {'id': 675721734, 'number': 990, 'closed': datetime.datetime(2021, 7, 21, 10, 56, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 20, 2, 2, tzinfo=datetime.timezone.utc), 'time_taken': 2472880.0, 'time_delta': '28 days, 14:54:40', 'additions': 23, 'deletions': 36, 'state': 'closed'}, {'id': 675479540, 'number': 989, 'closed': datetime.datetime(2021, 7, 21, 10, 10, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 14, 32, 44, tzinfo=datetime.timezone.utc), 'time_taken': 2489851.0, 'time_delta': '28 days, 19:37:31', 'additions': 78, 'deletions': 11, 'state': 'closed'}, {'id': 675464406, 'number': 988, 'closed': datetime.datetime(2021, 7, 20, 16, 45, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 14, 15, 26, tzinfo=datetime.timezone.utc), 'time_taken': 2428230.0, 'time_delta': '28 days, 2:30:30', 'additions': 730, 'deletions': 789, 'state': 'closed'}, {'id': 559197106, 'number': 957, 'closed': datetime.datetime(2021, 1, 21, 15, 59, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 21, 13, 27, 18, tzinfo=datetime.timezone.utc), 'time_taken': 9130.0, 'time_delta': '2:32:10', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 555053470, 'number': 956, 'closed': datetime.datetime(2021, 1, 17, 15, 59, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 14, 16, 36, 40, tzinfo=datetime.timezone.utc), 'time_taken': 256961.0, 'time_delta': '2 days, 23:22:41', 'additions': 92, 'deletions': 196, 'state': 'closed'}, {'id': 527364155, 'number': 952, 'closed': datetime.datetime(2020, 12, 2, 8, 56, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 25, 11, 5, 49, tzinfo=datetime.timezone.utc), 'time_taken': 597057.0, 'time_delta': '6 days, 21:50:57', 'additions': 164, 'deletions': 38, 'state': 'closed'}, {'id': 459593254, 'number': 926, 'closed': datetime.datetime(2021, 9, 11, 14, 47, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 30, 20, 50, 35, tzinfo=datetime.timezone.utc), 'time_taken': 35229425.0, 'time_delta': '407 days, 17:57:05', 'additions': 19605, 'deletions': 1, 'state': 'closed'}, {'id': 438547312, 'number': 902, 'closed': datetime.datetime(2020, 7, 30, 20, 51, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 23, 12, 46, 32, tzinfo=datetime.timezone.utc), 'time_taken': 3225913.0, 'time_delta': '37 days, 8:05:13', 'additions': 521, 'deletions': 0, 'state': 'closed'}, {'id': 435205827, 'number': 892, 'closed': datetime.datetime(2020, 6, 23, 12, 47, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 16, 13, 14, 39, tzinfo=datetime.timezone.utc), 'time_taken': 603162.0, 'time_delta': '6 days, 23:32:42', 'additions': 293, 'deletions': 0, 'state': 'closed'}, {'id': 423475264, 'number': 881, 'closed': None, 'created': datetime.datetime(2020, 5, 26, 21, 33, 3, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 2647, 'deletions': 0, 'state': 'open'}, {'id': 391911037, 'number': 815, 'closed': datetime.datetime(2020, 3, 22, 10, 39, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 21, 20, 31, 5, tzinfo=datetime.timezone.utc), 'time_taken': 50878.0, 'time_delta': '14:07:58', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 391753870, 'number': 814, 'closed': datetime.datetime(2020, 3, 22, 11, 50, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 20, 21, 46, 35, tzinfo=datetime.timezone.utc), 'time_taken': 137031.0, 'time_delta': '1 day, 14:03:51', 'additions': 26, 'deletions': 26, 'state': 'closed'}, {'id': 391738629, 'number': 812, 'closed': datetime.datetime(2020, 3, 22, 11, 49, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 20, 20, 59, 42, tzinfo=datetime.timezone.utc), 'time_taken': 139799.0, 'time_delta': '1 day, 14:49:59', 'additions': 53, 'deletions': 48, 'state': 'closed'}, {'id': 378722466, 'number': 788, 'closed': datetime.datetime(2020, 2, 23, 17, 9, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 23, 16, 13, 18, tzinfo=datetime.timezone.utc), 'time_taken': 3359.0, 'time_delta': '0:55:59', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 377710180, 'number': 787, 'closed': datetime.datetime(2020, 2, 20, 12, 1, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 20, 11, 47, 25, tzinfo=datetime.timezone.utc), 'time_taken': 835.0, 'time_delta': '0:13:55', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 325024014, 'number': 699, 'closed': datetime.datetime(2019, 10, 6, 12, 29, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 6, 11, 18, 36, tzinfo=datetime.timezone.utc), 'time_taken': 4236.0, 'time_delta': '1:10:36', 'additions': 0, 'deletions': 153, 'state': 'closed'}]"
66461717,grimoirelab-sirmordred,chaoss/grimoirelab-sirmordred,Python,119,37,17,52,1414,21,79,6,"[{'id': 1209663855, 'number': 582, 'closed': None, 'created': datetime.datetime(2023, 1, 19, 8, 40, 29, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 71, 'deletions': 71, 'state': 'open'}, {'id': 886988696, 'number': 535, 'closed': datetime.datetime(2022, 3, 25, 6, 52, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 23, 9, 40, 41, tzinfo=datetime.timezone.utc), 'time_taken': 162692.0, 'time_delta': '1 day, 21:11:32', 'additions': 12, 'deletions': 0, 'state': 'closed'}, {'id': 555623588, 'number': 499, 'closed': datetime.datetime(2021, 1, 17, 16, 4, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 15, 10, 59, 28, tzinfo=datetime.timezone.utc), 'time_taken': 191124.0, 'time_delta': '2 days, 5:05:24', 'additions': 81, 'deletions': 35, 'state': 'closed'}, {'id': 515339469, 'number': 494, 'closed': datetime.datetime(2020, 11, 4, 16, 56, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 4, 12, 2, 25, tzinfo=datetime.timezone.utc), 'time_taken': 17660.0, 'time_delta': '4:54:20', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 515337685, 'number': 493, 'closed': datetime.datetime(2020, 11, 4, 16, 54, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 4, 11, 58, 59, tzinfo=datetime.timezone.utc), 'time_taken': 17746.0, 'time_delta': '4:55:46', 'additions': 0, 'deletions': 3, 'state': 'closed'}, {'id': 471302879, 'number': 486, 'closed': datetime.datetime(2021, 9, 11, 14, 49, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 21, 0, 14, 8, tzinfo=datetime.timezone.utc), 'time_taken': 33402905.0, 'time_delta': '386 days, 14:35:05', 'additions': 165, 'deletions': 1, 'state': 'closed'}, {'id': 433524210, 'number': 476, 'closed': datetime.datetime(2020, 6, 18, 7, 35, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 12, 7, 52, 58, tzinfo=datetime.timezone.utc), 'time_taken': 517379.0, 'time_delta': '5 days, 23:42:59', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 397180457, 'number': 450, 'closed': datetime.datetime(2020, 4, 2, 17, 28, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 1, 19, 11, 9, tzinfo=datetime.timezone.utc), 'time_taken': 80269.0, 'time_delta': '22:17:49', 'additions': 61, 'deletions': 84, 'state': 'closed'}, {'id': 388794158, 'number': 431, 'closed': datetime.datetime(2020, 3, 15, 19, 21, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 15, 18, 53, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1692.0, 'time_delta': '0:28:12', 'additions': 2, 'deletions': 2, 'state': 'closed'}]"
115392981,prosoul,Bitergia/prosoul,Python,8,17,6,4,359,13,4,3,"[{'id': 470530844, 'number': 216, 'closed': None, 'created': datetime.datetime(2020, 8, 20, 0, 39, 28, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 205, 'deletions': 20, 'state': 'open'}, {'id': 470367123, 'number': 215, 'closed': None, 'created': datetime.datetime(2020, 8, 19, 19, 0, 58, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 35, 'deletions': 24, 'state': 'open'}, {'id': 468511660, 'number': 213, 'closed': None, 'created': datetime.datetime(2020, 8, 16, 23, 22, 40, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 0, 'deletions': 14, 'state': 'open'}, {'id': 403747713, 'number': 212, 'closed': datetime.datetime(2020, 4, 15, 13, 42, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 15, 13, 5, 48, tzinfo=datetime.timezone.utc), 'time_taken': 2200.0, 'time_delta': '0:36:40', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 401614840, 'number': 210, 'closed': datetime.datetime(2020, 4, 10, 8, 22, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 9, 19, 55, 29, tzinfo=datetime.timezone.utc), 'time_taken': 44842.0, 'time_delta': '12:27:22', 'additions': 110, 'deletions': 87, 'state': 'closed'}, {'id': 400739079, 'number': 209, 'closed': datetime.datetime(2020, 4, 8, 10, 13, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 8, 9, 38, 48, tzinfo=datetime.timezone.utc), 'time_taken': 2095.0, 'time_delta': '0:34:55', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 395877672, 'number': 207, 'closed': datetime.datetime(2020, 3, 31, 13, 49, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 30, 20, 18, 31, tzinfo=datetime.timezone.utc), 'time_taken': 63059.0, 'time_delta': '17:30:59', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 395833613, 'number': 206, 'closed': datetime.datetime(2020, 3, 31, 8, 30, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 30, 18, 51, 26, tzinfo=datetime.timezone.utc), 'time_taken': 49137.0, 'time_delta': '13:38:57', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 393857693, 'number': 203, 'closed': datetime.datetime(2020, 3, 26, 7, 37, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 25, 22, 24, 13, tzinfo=datetime.timezone.utc), 'time_taken': 33186.0, 'time_delta': '9:13:06', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 382429408, 'number': 201, 'closed': datetime.datetime(2020, 3, 2, 15, 22, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 2, 14, 54, 7, tzinfo=datetime.timezone.utc), 'time_taken': 1707.0, 'time_delta': '0:28:27', 'additions': 57, 'deletions': 26, 'state': 'closed'}, {'id': 382091661, 'number': 200, 'closed': datetime.datetime(2020, 3, 1, 21, 7, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 1, 20, 38, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1751.0, 'time_delta': '0:29:11', 'additions': 14, 'deletions': 0, 'state': 'closed'}, {'id': 382088818, 'number': 199, 'closed': datetime.datetime(2020, 3, 1, 21, 4, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 1, 20, 15, 15, tzinfo=datetime.timezone.utc), 'time_taken': 2927.0, 'time_delta': '0:48:47', 'additions': 326, 'deletions': 33, 'state': 'closed'}, {'id': 372560723, 'number': 196, 'closed': datetime.datetime(2020, 2, 7, 19, 31, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 7, 19, 18, 27, tzinfo=datetime.timezone.utc), 'time_taken': 789.0, 'time_delta': '0:13:09', 'additions': 8, 'deletions': 9, 'state': 'closed'}]"
61798641,grimoirelab-sigils,chaoss/grimoirelab-sigils,Python,85,34,18,27,1099,19,16,2,"[{'id': 468510236, 'number': 470, 'closed': datetime.datetime(2021, 9, 11, 14, 48, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 16, 23, 10, 49, tzinfo=datetime.timezone.utc), 'time_taken': 33752258.0, 'time_delta': '390 days, 15:37:38', 'additions': 247, 'deletions': 0, 'state': 'closed'}, {'id': 468508839, 'number': 469, 'closed': datetime.datetime(2020, 8, 20, 7, 26, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 16, 22, 59, 38, tzinfo=datetime.timezone.utc), 'time_taken': 289626.0, 'time_delta': '3 days, 8:27:06', 'additions': 6, 'deletions': 3, 'state': 'closed'}]"
