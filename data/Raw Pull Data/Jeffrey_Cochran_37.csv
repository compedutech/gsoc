pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
696135202,Updated softbody handling to allow for area/softbody collision detection and application of area gravity,"<!--
Pull requests should always be made for the `master` branch first, as that's
where development happens and the source of all future stable release branches.

Relevant fixes are cherry-picked for stable branches as needed.

Do not create a pull request for stable branches unless the change is already
available in the `master` branch and it cannot be easily cherry-picked.
Alternatively, if the change is only relevant for that branch (e.g. rendering
fixes for the 3.2 branch).
-->
- Fixes [Issue #36693](https://github.com/godotengine/godot/issues/36693) 
- Added detection for soft-body-area collisions. The implementation is based on the current detection for rigid-body-area collisions. 
- Added area-specific gravity to softbody `predict_motion` so that soft-bodies are affected by changes in gravity that may result from intersection with an area.
- Attached is a small scene that illustrates the use of this update: [softbody-areas.zip](https://github.com/godotengine/godot/files/6992032/softbody-areas.zip)
",True,50785,https://api.github.com/repos/godotengine/godot/pulls/50785,https://github.com/godotengine/godot/pull/50785,closed,215,14,9,1,7,11,3,0,"[{'name': 'enhancement'}, {'name': 'topic:physics'}, {'name': 'topic:3d'}]",2021-07-23 18:25:27+00:00,2021-08-16 14:32:07+00:00,2059600.0,"23 days, 20:06:40","[{'comment_id': 676736049, 'comment_body': 'This method name has changed to `interacts_with` in a recent PR, so it will need a rebase before merging.', 'comment_created': datetime.datetime(2021, 7, 26, 15, 56, 6, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 676764904, 'comment_body': 'The name of the class is probably clear enough without this comment, but the separation line between the two classes does seem useful.', 'comment_created': datetime.datetime(2021, 7, 26, 16, 32, 43, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 676765193, 'comment_body': 'The commented lines can be removed here.', 'comment_created': datetime.datetime(2021, 7, 26, 16, 33, 10, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 676765656, 'comment_body': 'No need for this extra blank line.', 'comment_created': datetime.datetime(2021, 7, 26, 16, 33, 43, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 676766966, 'comment_body': 'I would rather remove `area_linear_dam` and `area_angular_damp` completely and rename the method `_compute_area_gravity` since damping values are not used for soft bodies.', 'comment_created': datetime.datetime(2021, 7, 26, 16, 35, 17, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 676773167, 'comment_body': 'It would be safer to use `static_cast` like in the other cases to get compiler checks (in case something changes in the future it would be nice for the compiler to catch it).', 'comment_created': datetime.datetime(2021, 7, 26, 16, 43, 30, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 676773747, 'comment_body': 'It seems this struct could be in common with rigid bodies, maybe moved to `area_3d_sw.h` (either in global scope instead of being internal to a class, or in Area3DSW with public access).', 'comment_created': datetime.datetime(2021, 7, 26, 16, 44, 18, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 676774178, 'comment_body': 'No need for the commented line.', 'comment_created': datetime.datetime(2021, 7, 26, 16, 44, 52, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 681881165, 'comment_body': 'Yeah, agreed.', 'comment_created': datetime.datetime(2021, 8, 3, 15, 41, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jeffrey-cochran', 'type': 'User'}, {'comment_id': 681881979, 'comment_body': 'but that one was my favorite', 'comment_created': datetime.datetime(2021, 8, 3, 15, 42, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jeffrey-cochran', 'type': 'User'}, {'comment_id': 682710456, 'comment_body': 'This method should be renamed to `_compute_area_gravity` or something more generic. Apart from that it all looks fine!', 'comment_created': datetime.datetime(2021, 8, 4, 15, 11, 30, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}]","[{'commit_sha': '14640fb6c555ac5e2298f0c2b5091e1c70991f9c', 'committer_username': 'jeffrey-cochran', 'committer_name': 'Jeffrey Cochran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 29, 3, 24, 49, tzinfo=datetime.timezone.utc)}]",Jeffrey Cochran,13093421,,User,,41,,9,6
713658420,Created an area-specific wind force that interacts with soft bodies,"<!--
Pull requests should always be made for the `master` branch first, as that's
where development happens and the source of all future stable release branches.

Relevant fixes are cherry-picked for stable branches as needed.

Do not create a pull request for stable branches unless the change is already
available in the `master` branch and it cannot be easily cherry-picked.
Alternatively, if the change is only relevant for that branch (e.g. rendering
fixes for the 3.2 branch).
-->

- Fulfills proposal [#2291](https://github.com/godotengine/godot-proposals/issues/2591)
- Adds four parameters to the physics overrides of an Area3D that characterize a wind force, which interacts with all soft bodies intersecting the Area3D.
- Builds on the progress made in PR #50785 
-  Attached is a demo project: [softbody_wind_force.zip](https://github.com/godotengine/godot/files/7002971/softbody_wind_force.zip)

",True,51751,https://api.github.com/repos/godotengine/godot/pulls/51751,https://github.com/godotengine/godot/pull/51751,closed,224,19,10,1,1,37,3,0,"[{'name': 'enhancement'}, {'name': 'topic:physics'}, {'name': 'topic:3d'}]",2021-08-16 18:34:31+00:00,2021-08-23 23:48:19+00:00,623628.0,"7 days, 5:13:48","[{'comment_id': 689797188, 'comment_body': 'For the area node, it would be more practical for the user to have just a `NodePath` property instead of entering the source and direction vectors by hand (the physics server parameters can stay the same though, since servers don\'t work with nodes).\r\n\r\nYou can set the property this way to restrict it to Node3D only:\r\n`ADD_PROPERTY(PropertyInfo(Variant::NODE_PATH, ""wind_source"", PROPERTY_HINT_NODE_PATH_VALID_TYPES, ""Node3D""), ""set_wind_source"", ""get_wind_source"");`\r\nAnd then you can have just one member `wind_source_path` and set both source and direction from the `Node3D`.\r\n\r\nWhat you can do then is to have a private method like `initialize_wind()` which sets the wind parameters in the physics server based on force, source and direction:\r\n1. If force is < epsilon or source path is empty, just set wind force 0 and return\r\n2. Get the `Node3D` node and set the source and direction based on its transform\r\n```\r\nNode3D *p_wind_source = Object::cast_to<Node3D>(get_node(p_wind_source_path));\r\nERR_FAIL_NULL(p_wind_source)\r\n// Set force, source and direction in the physics server\r\n```\r\n\r\nThe other thing to handle is that `get_node()` method can be called only when the node is already in the scene tree.\r\n\r\nSo in the wind source accessor, you can do this initialization only when the area node is in the scene (otherwise it would try to do it when the node is loaded but before it\'s added to the tree), checked this way:\r\n`if (is_inside_tree()) { ... }`\r\nThat case in this accessor is for handling a change of wind source while the game is running.\r\n\r\nAnd the second thing you would need is to do this initialization when entering the tree, in `Area3D::_notification` on `NOTIFICATION_ENTER_TREE`.', 'comment_created': datetime.datetime(2021, 8, 16, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 689798558, 'comment_body': 'The argument could be `const Vector3 &p_wind_source` to avoid a copy (but based on my previous suggestion the type will probably change to `const NodePath &p_wind_source_path`)', 'comment_created': datetime.datetime(2021, 8, 16, 19, 23, 13, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 689798888, 'comment_body': 'Missing initial values.', 'comment_created': datetime.datetime(2021, 8, 16, 19, 23, 46, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 689799254, 'comment_body': 'Could be `const Vector3&` to avoid copy, same for wind direction.', 'comment_created': datetime.datetime(2021, 8, 16, 19, 24, 30, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 689799515, 'comment_body': 'Blank line should stay.', 'comment_created': datetime.datetime(2021, 8, 16, 19, 24, 54, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 689801066, 'comment_body': 'This extra member is not needed, you can use `face.n[0]`, `face.n[1]`, `face.n[2]` to access the nodes directly.', 'comment_created': datetime.datetime(2021, 8, 16, 19, 27, 25, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 689811074, 'comment_body': ""There could be an easy optimization here, by checking if any area has wind_force while checking gravity. If the wind force is always < epsilon and pressure is also < epsilon, this method doesn't have to run."", 'comment_created': datetime.datetime(2021, 8, 16, 19, 44, 53, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 689811248, 'comment_body': ""This loop doesn't have to run if pressure < epsilon."", 'comment_created': datetime.datetime(2021, 8, 16, 19, 45, 12, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 689811785, 'comment_body': 'not needed, areas should be already sorted while applying gravity.', 'comment_created': datetime.datetime(2021, 8, 16, 19, 46, 10, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 689812063, 'comment_body': ""This loop could be also avoided when there's no wind force in any area."", 'comment_created': datetime.datetime(2021, 8, 16, 19, 46, 41, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 689812877, 'comment_body': ""It's missing exiting the loop when stopped is true, and setting stopped to true on REPLACE mode like gravity does. Otherwise it doesn't respect the replace override mode as it keeps going through more areas."", 'comment_created': datetime.datetime(2021, 8, 16, 19, 48, 9, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 689813244, 'comment_body': 'This could be split in several lines with local variables to make it more readable.', 'comment_created': datetime.datetime(2021, 8, 16, 19, 48, 52, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 689934776, 'comment_body': 'One last thing I forgot is comments need a trailing period (coding style).', 'comment_created': datetime.datetime(2021, 8, 16, 23, 55, 41, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 690545359, 'comment_body': 'this is what was causing the bug in the gui for me. good catch', 'comment_created': datetime.datetime(2021, 8, 17, 16, 44, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jeffrey-cochran', 'type': 'User'}, {'comment_id': 690546703, 'comment_body': ""Is there a reason the other `real_t` parameters there don't have initial values?"", 'comment_created': datetime.datetime(2021, 8, 17, 16, 45, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jeffrey-cochran', 'type': 'User'}, {'comment_id': 690563721, 'comment_body': ""They are initialized in the constructor, which is how it was done before. We're changing the codebase to initialization in member declaration as a new coding style, but some parts of the code are still not updated."", 'comment_created': datetime.datetime(2021, 8, 17, 17, 8, 4, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 690664968, 'comment_body': ""per conversation, I'll address in a later PR"", 'comment_created': datetime.datetime(2021, 8, 17, 19, 35, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jeffrey-cochran', 'type': 'User'}, {'comment_id': 690791040, 'comment_body': '```suggestion\r\n\t\t\tConstant to set/get the magnitude of area-specific wind force.\r\n```', 'comment_created': datetime.datetime(2021, 8, 17, 23, 31, 17, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 690791119, 'comment_body': '```suggestion\r\n\t\t\tThe exponential rate at which wind force decreases with distance from its origin.\r\n```', 'comment_created': datetime.datetime(2021, 8, 17, 23, 31, 30, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 690791179, 'comment_body': '```suggestion\r\n\t\t\tThe magnitude of area-specific wind force.\r\n```', 'comment_created': datetime.datetime(2021, 8, 17, 23, 31, 42, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 690791501, 'comment_body': ""```suggestion\r\n\t\t\tThe [Node3D] which is used to specify the the direction and origin of an area-specific wind force. The direction is opposite to the z-axis of the [Node3D]'s local transform, and its origin is the origin of the [Node3D]'s local transform.\r\n```"", 'comment_created': datetime.datetime(2021, 8, 17, 23, 32, 38, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 690791666, 'comment_body': 'Missing trailing period.', 'comment_created': datetime.datetime(2021, 8, 17, 23, 33, 1, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 690793605, 'comment_body': 'Needs `p_` prefix for method argument.', 'comment_created': datetime.datetime(2021, 8, 17, 23, 38, 18, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 690795513, 'comment_body': 'This could return `const NodePath &` to avoid a copy.', 'comment_created': datetime.datetime(2021, 8, 17, 23, 43, 33, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 690795697, 'comment_body': 'Could return `const Vector3 &` to avoid a copy, same for wind direction.', 'comment_created': datetime.datetime(2021, 8, 17, 23, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 690795911, 'comment_body': 'These two could then be `const Vector3 &` type to avoid copies.', 'comment_created': datetime.datetime(2021, 8, 17, 23, 44, 43, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 690796785, 'comment_body': 'This method should also set a wind force of 0 when the source path is not set or cleared (condition `wind_source_path.is_empty()`).', 'comment_created': datetime.datetime(2021, 8, 17, 23, 47, 25, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 690798059, 'comment_body': ""This should also have an error on negative values, for the case where it's called by script."", 'comment_created': datetime.datetime(2021, 8, 17, 23, 50, 41, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 690798625, 'comment_body': 'Same here, there should be an error for negative values for cases where the physics server is called directly.', 'comment_created': datetime.datetime(2021, 8, 17, 23, 52, 9, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 690799139, 'comment_body': 'It would be more practical to use a positive range instead, and negate the value in the wind code.', 'comment_created': datetime.datetime(2021, 8, 17, 23, 53, 45, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 691257579, 'comment_body': 'I added in error the call that area_3d makes to area_3d_sw to set the param, which should catch this', 'comment_created': datetime.datetime(2021, 8, 18, 13, 50, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jeffrey-cochran', 'type': 'User'}, {'comment_id': 692535405, 'comment_body': 'The error condition should be `wind_force_magnitude < 0`, and it should be before setting the value, so it can return without setting the wrong value when it fails.', 'comment_created': datetime.datetime(2021, 8, 19, 22, 48, 9, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 692535591, 'comment_body': 'Same as the previous one, and the condition should check `wind_attenuation_factor ` instead of `wind_force_magnitude`.', 'comment_created': datetime.datetime(2021, 8, 19, 22, 48, 40, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 692537626, 'comment_body': 'This check should be at the beginning of the method, otherwise `get_node(wind_source_path)` will fail anyway and return early.', 'comment_created': datetime.datetime(2021, 8, 19, 22, 50, 58, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 693533488, 'comment_body': ""LOL man I must've been pretty tired at this point. Thanks for catching these."", 'comment_created': datetime.datetime(2021, 8, 22, 17, 36, 23, tzinfo=datetime.timezone.utc), 'commenter': 'jeffrey-cochran', 'type': 'User'}, {'comment_id': 694202388, 'comment_body': 'No problem :) The error is still after setting the value in the latest version, it should be before.', 'comment_created': datetime.datetime(2021, 8, 23, 18, 16, 47, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}, {'comment_id': 694203076, 'comment_body': 'Same, the error should be before setting the value.', 'comment_created': datetime.datetime(2021, 8, 23, 18, 17, 48, tzinfo=datetime.timezone.utc), 'commenter': 'pouleyKetchoupp', 'type': 'User'}]","[{'commit_sha': 'e806397196968cdfc97c1e53bb5cd208e40ae9b2', 'committer_username': 'jeffrey-cochran', 'committer_name': 'Jeffrey Cochran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 29, 3, 24, 49, tzinfo=datetime.timezone.utc)}]",Jeffrey Cochran,13093421,,User,,41,,9,6

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
15634981,godot,godotengine/godot,C++,19967,88178,1515,2965,66512,13381,14,2861,"[{'id': 713658420, 'number': 51751, 'closed': datetime.datetime(2021, 8, 23, 23, 48, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 16, 18, 34, 31, tzinfo=datetime.timezone.utc), 'time_taken': 623628.0, 'time_delta': '7 days, 5:13:48', 'additions': 224, 'deletions': 19, 'state': 'closed'}, {'id': 696135202, 'number': 50785, 'closed': datetime.datetime(2021, 8, 16, 14, 32, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 23, 18, 25, 27, tzinfo=datetime.timezone.utc), 'time_taken': 2059600.0, 'time_delta': '23 days, 20:06:40', 'additions': 215, 'deletions': 14, 'state': 'closed'}, {'id': 617127849, 'number': 47964, 'closed': datetime.datetime(2022, 1, 28, 9, 28, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 16, 21, 13, 9, tzinfo=datetime.timezone.utc), 'time_taken': 24754494.0, 'time_delta': '286 days, 12:14:54', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
