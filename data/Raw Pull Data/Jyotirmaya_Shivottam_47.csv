pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
419329550,EPE00004 : Implementation of a Ray-Tracing and Radiative Transfer module,"Added an EPE containing details on the implementation, vis-a-vis einsteinpy/einsteinpy#105 and einsteinpy/einsteinpy#106.",False,4,https://api.github.com/repos/einsteinpy/EinsteinPy-EPEs/pulls/4,https://github.com/einsteinpy/EinsteinPy-EPEs/pull/4,open,500,0,6,3,0,0,0,0,[],2020-05-18 08:08:25+00:00,,0.0,,[],"[{'commit_sha': '15a630fbc505da3cdc1dcbe0157774c1c5c02d28', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a28f213a4a17ef8d26052f016a8fbfc0389ad975', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3476e6ffb5086eca77d6589cc2692f1909330c24', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}]",Jyotirmaya Shivottam,31299799,,User,,58,,16,26
433237980,Refactor - Metric & Utils,"<!-- Please fill below the issue number which this code fixes -->
Fixes #113, #141, #410, #507, #508, #514 , #515.
Notes on fixes:
1. #508 - Requires discussion
2. #507 -`time_velocity` methods, across `<Metric>_utils` modules, have been [moved to and repackaged into 1 function in `coordinates.utils`](https://github.com/einsteinpy/einsteinpy/blob/78bf5d942cbb12393852f8e4d7a8426f1ffe6f23/src/einsteinpy/coordinates/utils.py#L209-L250), renamed as `v_t()`. This function uses the supplied metric and 3-Velocity, and the expression for spacetime interval: $g_{ab} u^a u ^b = 0 or 1$ (null-like or time-like), to determine the timelike component of 4-Velocity, and hence it bypasses the method used in previous `Schwarzschild`, `Kerr` and `KerrNewman` classes.

#### Touched modules:
* `einsteinpy.metric`
* `einsteinpy.utils`
* `einsteinpy.coordinates.utils`
*  `geodesic`
* `examples`
* `plotting.geodesic`
* `test_metric`
* `test_utils`
* `test_coordinates/test_utils`
* `test_geodesic`
* `test_examples`
* `test_plotting/test_geodesic`

##### Other files
* `index.ipynb`
* `docs/source/jupyter.rst`
* `docs/source/user_guide`
* `docs/source/api/`
* `docs/source/examples/`
* `.codeclimate.yml`
* `CHANGELOG`

#### Current changes:
1. New `Metric` class added and old `metric` API removed.
2. Moved `calculate_trajectory()` from `metric` to `geodesic` and `time_velocity()` (now `v_t()`) to `coordinates.utils`.
3. Merged most utility functions from `utils` into `metric` (only file untouched is `scalar_factor.py`)
4. Modified `geodesic`, `examples` and example Jupyter Notebooks to work with new API.
5. Added some new utilities to `coordinates.utils`.
6. Added tests for new API (`metric`, `utils`, `geodesic`, `examples`, `plotting`)
7. Moved `calculate_trajectory()` tests from `test_metric` to `test_geodesic`.


#### Pending changes:
- [x] Alter code, after discussion on #508 - Factor removed.
- [x] Modify examples to use new API
- [x] Add functionality of `calculate_trajectory` to `geodesic` and create a warning in metric classes.
- [x] Add tests (can refactor old tests).
- [x] Fix CodeFactor and CodeClimate issues. - Linked to #113.
- [x] Add a changelog.
- [x] Update User Guide.
- [x] Update `index.ipynb`.
- [x] Review list of issues fixed.
- [x] Check if scaling in #367 is fixed now. Add a comment regarding the smooth plot.

- Issues, after review:
    - #122 - Check Kerr and Schwarzschild methods.
    - #239 - Example notebooks for `metric` - After the review.
    - #517 - Spin Factor is redundant in `bodies` - Discuss.


",True,512,https://api.github.com/repos/einsteinpy/einsteinpy/pulls/512,https://github.com/einsteinpy/einsteinpy/pull/512,closed,45630,45005,59,24,32,92,4,0,"[{'name': '2 - Ready'}, {'name': 'changelog entry needed'}, {'name': 'metric'}, {'name': 'GSoC'}]",2020-06-11 17:37:51+00:00,2020-06-24 19:31:43+00:00,1130032.0,"13 days, 1:53:52","[{'comment_id': 440861244, 'comment_body': 'Change to Base.', 'comment_created': datetime.datetime(2020, 6, 16, 13, 45, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 440871089, 'comment_body': 'Add a warning.\r\n', 'comment_created': datetime.datetime(2020, 6, 16, 13, 57, 15, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 442835695, 'comment_body': 'Added in docstring for `metric_covariant` and `metric_contravariant`.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 19, 17, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 442948031, 'comment_body': 'Need a better solution to hide attributes.', 'comment_created': datetime.datetime(2020, 6, 19, 16, 52, 48, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443190667, 'comment_body': '```suggestion\r\n    time_like : bool, optional\r\n```\r\n\r\nAll the docstrings should comply with https://numpydoc.readthedocs.io/en/latest/example.html', 'comment_created': datetime.datetime(2020, 6, 21, 7, 25, 26, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443190754, 'comment_body': '```suggestion\r\n        init_vec : ~numpy.array\r\n```', 'comment_created': datetime.datetime(2020, 6, 21, 7, 26, 29, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443190803, 'comment_body': 'I would like to change the name of this parameter once we start using coordinates ', 'comment_created': datetime.datetime(2020, 6, 21, 7, 26, 56, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443190856, 'comment_body': '```suggestion\r\n        return_cartesian : bool, optional\r\n```\r\nDo this at every place', 'comment_created': datetime.datetime(2020, 6, 21, 7, 27, 21, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443190895, 'comment_body': 'Is this necessary? ', 'comment_created': datetime.datetime(2020, 6, 21, 7, 27, 49, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443190936, 'comment_body': '```suggestion\r\n        stop_on_singularity : bool, optional\r\n```', 'comment_created': datetime.datetime(2020, 6, 21, 7, 28, 32, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443191035, 'comment_body': 'This line should be removed? \r\nAnd perhaps more details on the class.', 'comment_created': datetime.datetime(2020, 6, 21, 7, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443191373, 'comment_body': 'We planned to remove this? ', 'comment_created': datetime.datetime(2020, 6, 21, 7, 34, 14, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443191455, 'comment_body': '```suggestion\r\n        alpha = self.alpha(M, a)\r\n```', 'comment_created': datetime.datetime(2020, 6, 21, 7, 35, 23, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443191485, 'comment_body': '```suggestion\r\n        alpha = self.alpha(M, a)\r\n```', 'comment_created': datetime.datetime(2020, 6, 21, 7, 35, 43, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443191785, 'comment_body': 'This documentation should be somewhere else.', 'comment_created': datetime.datetime(2020, 6, 21, 7, 39, 59, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443191804, 'comment_body': '```suggestion\r\n        alpha = self.alpha(M, a)\r\n```', 'comment_created': datetime.datetime(2020, 6, 21, 7, 40, 20, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443191833, 'comment_body': '```suggestion\r\n        rho2 = self.rho(r, theta, M, a) ** 2\r\n```', 'comment_created': datetime.datetime(2020, 6, 21, 7, 40, 36, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443191944, 'comment_body': ""```suggestion\r\n        Deprecated in 0.4.0.\r\n```\r\nAs you already removed the code from here, let's say that it's deprecated."", 'comment_created': datetime.datetime(2020, 6, 21, 7, 41, 57, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443191994, 'comment_body': 'No need to mention this', 'comment_created': datetime.datetime(2020, 6, 21, 7, 42, 33, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443192093, 'comment_body': '```suggestion\r\n        alpha = super().alpha(M, a)\r\n```\r\nUse `super` everywhere', 'comment_created': datetime.datetime(2020, 6, 21, 7, 44, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443192134, 'comment_body': 'Much needed', 'comment_created': datetime.datetime(2020, 6, 21, 7, 44, 28, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443192220, 'comment_body': 'Why not in `__init__`', 'comment_created': datetime.datetime(2020, 6, 21, 7, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443192244, 'comment_body': 'Same problem', 'comment_created': datetime.datetime(2020, 6, 21, 7, 46, 8, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443192741, 'comment_body': '```suggestion\r\n        if self.coords == ""KS"":\r\n            return self._ch_sym_ks(x_vec)\r\n        return self._ch_sym_bl(x_vec)\r\n```', 'comment_created': datetime.datetime(2020, 6, 21, 7, 52, 35, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443192792, 'comment_body': 'Why is this private?', 'comment_created': datetime.datetime(2020, 6, 21, 7, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443192850, 'comment_body': ""I don't like this design"", 'comment_created': datetime.datetime(2020, 6, 21, 7, 53, 50, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443193195, 'comment_body': 'Oh Thanks', 'comment_created': datetime.datetime(2020, 6, 21, 7, 58, 17, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443193348, 'comment_body': 'Why is this commented out?', 'comment_created': datetime.datetime(2020, 6, 21, 8, 0, 16, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443193396, 'comment_body': 'Again why?', 'comment_created': datetime.datetime(2020, 6, 21, 8, 0, 49, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443193631, 'comment_body': 'Remove these comments', 'comment_created': datetime.datetime(2020, 6, 21, 8, 4, 29, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443193673, 'comment_body': 'Again, not satisfied with the design here.', 'comment_created': datetime.datetime(2020, 6, 21, 8, 4, 54, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443193725, 'comment_body': 'Again, why is this not in init?', 'comment_created': datetime.datetime(2020, 6, 21, 8, 5, 19, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443193783, 'comment_body': '```suggestion\r\n        if self.coords == ""KS"":\r\n            return self._g_cov_ks(x_vec)\r\n        return self._g_cov_bl(x_vec)\r\n```', 'comment_created': datetime.datetime(2020, 6, 21, 8, 5, 57, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443193849, 'comment_body': '```suggestion\r\n        """"""\r\n        if self.coords == ""KS"":\r\n            return self._ch_sym_ks(x_vec)\r\n        return self._ch_sym_bl(x_vec)\r\n```', 'comment_created': datetime.datetime(2020, 6, 21, 8, 6, 53, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443193902, 'comment_body': '```suggestion\r\n        vec : ~numpy.array\r\n```', 'comment_created': datetime.datetime(2020, 6, 21, 8, 7, 40, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443193932, 'comment_body': 'Remove this', 'comment_created': datetime.datetime(2020, 6, 21, 8, 8, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443203304, 'comment_body': 'Just an indicator. Although, printing is not the way to go. Will remove these.', 'comment_created': datetime.datetime(2020, 6, 21, 10, 2, 15, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443203488, 'comment_body': ""Are we talking about `init_vec`? Then yes, it should be changed. It's a confusing name. The closest proper name is wave-vector, but that's not applicable to all cases. Let me think."", 'comment_created': datetime.datetime(2020, 6, 21, 10, 4, 50, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443203518, 'comment_body': 'Okay, checking now.', 'comment_created': datetime.datetime(2020, 6, 21, 10, 5, 11, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443206633, 'comment_body': 'Referencing #113.\r\n\r\nThis if-elif section (L125 - L146 & L190 - L203) is causing the cyclomatic complexity to go up. After the PR on `coordinates` is merged, I think, we can use coordinate classes, instead of strings, like ""S"" or ""BL"" or ""KS"". So, this whole section would be something like:\r\n```\r\nif not return_cartesian:\r\n    return lambdas, vecs\r\n\r\ncart_vecs = list()\r\nfor v in vecs:\r\n    si_vals =  self.metric.coords(v[1], v[2], v[3], v[5], v[6], v[7]).convert_cartesian()\r\n    cart_vecs.append(np.hstack((v[0], si_vals[:3], v[4], si_vals[3:])))\r\n\r\nreturn lambdas, np.array(cart_vecs)\r\n```\r\n\r\nI would like to get your suggestions regarding this.', 'comment_created': datetime.datetime(2020, 6, 21, 10, 46, 9, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443208304, 'comment_body': ""Shouldn't you remove this?"", 'comment_created': datetime.datetime(2020, 6, 21, 11, 7, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rishi-s8', 'type': 'User'}, {'comment_id': 443209598, 'comment_body': 'What is the desired effect when `self.metric.coords` is neither `""BL""` nor `""S""`?\r\nYou could reduce the cyclomatic complexity with this simple hack. Would probably make the code much less redundant. \r\n```python\r\nelse:\r\n    conv = {""S"": SphericalConversion, ""BL"": BoyerLindquistConversion}\r\n    cart_vecs = list()\r\n            for v in vecs:\r\n                si_vals = conv[self.metric.coords](\r\n                    v[1], v[2], v[3], v[5], v[6], v[7]\r\n                ).convert_cartesian()\r\n                cart_vecs.append(np.hstack((v[0], si_vals[:3], v[4], si_vals[3:])))\r\n\r\n            return lambdas, np.array(cart_vecs)\r\n```', 'comment_created': datetime.datetime(2020, 6, 21, 11, 23, 27, tzinfo=datetime.timezone.utc), 'commenter': 'rishi-s8', 'type': 'User'}, {'comment_id': 443209694, 'comment_body': 'Same as the previous one.', 'comment_created': datetime.datetime(2020, 6, 21, 11, 24, 43, tzinfo=datetime.timezone.utc), 'commenter': 'rishi-s8', 'type': 'User'}, {'comment_id': 443224790, 'comment_body': 'It is a `@staticmethod`. So, I think this is fine?', 'comment_created': datetime.datetime(2020, 6, 21, 14, 25, 58, tzinfo=datetime.timezone.utc), 'commenter': 'rishi-s8', 'type': 'User'}, {'comment_id': 443234806, 'comment_body': 'As @shreyasbapat suggested. ', 'comment_created': datetime.datetime(2020, 6, 21, 16, 20, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rishi-s8', 'type': 'User'}, {'comment_id': 443235661, 'comment_body': 'Refactor.\r\n', 'comment_created': datetime.datetime(2020, 6, 21, 16, 30, 54, tzinfo=datetime.timezone.utc), 'commenter': 'rishi-s8', 'type': 'User'}, {'comment_id': 443237482, 'comment_body': 'Why is this packaged inside functions?', 'comment_created': datetime.datetime(2020, 6, 21, 16, 53, 31, tzinfo=datetime.timezone.utc), 'commenter': 'rishi-s8', 'type': 'User'}, {'comment_id': 443237731, 'comment_body': ""If it isn't being used, just remove it?"", 'comment_created': datetime.datetime(2020, 6, 21, 16, 57, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rishi-s8', 'type': 'User'}, {'comment_id': 443237769, 'comment_body': 'Did you forget to remove these? 😅 ', 'comment_created': datetime.datetime(2020, 6, 21, 16, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'rishi-s8', 'type': 'User'}, {'comment_id': 443237934, 'comment_body': 'I see the part where these are used are commented out below. Why?', 'comment_created': datetime.datetime(2020, 6, 21, 16, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rishi-s8', 'type': 'User'}, {'comment_id': 443344124, 'comment_body': ""I think, we discussed to add a warning here? I have done so, in `metric_covariant()` and `metric_contravariant()` methods. Implementation per se is sound. Just that, we don't have checks to ensure that the perturbed metric is physical. But, there are cases, where we might want to disregard some physical condition and still do the calculations. This can help with that. It's like a caution-watch-your-step kind of experimental feature, for which the user is warned, and we can expand it with physical checks in the future, to make it more robust."", 'comment_created': datetime.datetime(2020, 6, 22, 6, 37, 53, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443344258, 'comment_body': 'The warning will be up with my next commit.', 'comment_created': datetime.datetime(2020, 6, 22, 6, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443346404, 'comment_body': ""Will this work? It's a staticmethod, with no `self` parameter. @shreyasbapat "", 'comment_created': datetime.datetime(2020, 6, 22, 6, 44, 21, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443352515, 'comment_body': 'Added as part of docstring at the top of the file.', 'comment_created': datetime.datetime(2020, 6, 22, 6, 59, 24, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443371823, 'comment_body': 'These methods and imports correspond to the old API and they also use `coordinates`, which is currently unsupported. I thought, I had removed them, but apparently not. Removing these now.', 'comment_created': datetime.datetime(2020, 6, 22, 7, 42, 3, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443375526, 'comment_body': 'Good catch. This should be in `init`.', 'comment_created': datetime.datetime(2020, 6, 22, 7, 49, 18, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443378008, 'comment_body': ""Yeah, I must have forgotten to stage these changes. These import and methods correspond to the old API. That's why, they are commented out. @shreyasbapat had pointed it out. I am removing these now."", 'comment_created': datetime.datetime(2020, 6, 22, 7, 54, 2, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443386229, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 22, 8, 10, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443399804, 'comment_body': 'I was planning on something like this. Thing is, currently I am not using classes from `einsteinpy.coordinates` due to issues with astropy units. The next PR is supposed to fix this. For the time being, I am using mere strings, that refer to those coordinate systems, like ""BL"" or ""S"" or ""KS"". So, this code (my code) is just a stopgap. But your suggestion is something, that can certainly reduce the complexity. Let me make these changes.', 'comment_created': datetime.datetime(2020, 6, 22, 8, 33, 59, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443410682, 'comment_body': 'I have simply copied this method from the old API and changed some labels here and there. This function was defined this way in the old API, which is fine, I think. Because these methods have to be hardcoded. My guess is, calculations for the derivatives were done by hand or perhaps taken from some book and then transferred to code. There is no other way to define or use these functions anywhere else, as say, utility functions. So, defining these methods as inner functions and making them private (`_`) should be perfectly fine. Is there a usecase, that I seem to be missing? @rishi-s8 ', 'comment_created': datetime.datetime(2020, 6, 22, 8, 52, 59, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443418001, 'comment_body': ""`christoffels` is defined in L74 in `__init__()` as an attribute, which therefore overshadows a function of the same name. Also, the way the metric classes, including `BaseMetric`, are set up, all things that make up or complete the description of the metric are grouped together as class variables, which then point to their respective methods. So, users call `Kerr.christoffels()`, which points to `_christoffels()`. Initially, I named it `christoffels_()`, to get around the same-name issue, but technically, users do not directly interact with `christoffels_()` in any way. So, I changed it to `_christoffels()`, indicating that, it's private."", 'comment_created': datetime.datetime(2020, 6, 22, 9, 5, 22, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443452698, 'comment_body': 'Added to ToDo for `coordinates`. Marking this as resolved for now.', 'comment_created': datetime.datetime(2020, 6, 22, 10, 6, 25, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443453044, 'comment_body': 'Warning is at 2 places now. @shreyasbapat ', 'comment_created': datetime.datetime(2020, 6, 22, 10, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443453559, 'comment_body': 'Looking into alternatives.', 'comment_created': datetime.datetime(2020, 6, 22, 10, 8, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443515440, 'comment_body': ""Added @rishi-s8's suggestion and a fix detailed in [this](https://github.com/einsteinpy/einsteinpy/pull/512#issuecomment-647451480) comment. Issue resolved."", 'comment_created': datetime.datetime(2020, 6, 22, 12, 15, 46, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443685104, 'comment_body': ""For now, I have applied @rishi-s8's suggestions and some other changes, as discussed in [this](https://github.com/einsteinpy/einsteinpy/pull/512#issuecomment-647451480) comment. More changes are expected in the next PRs (after coordinates, though). Marking as resolved."", 'comment_created': datetime.datetime(2020, 6, 22, 16, 32, 1, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443731467, 'comment_body': 'Great. ', 'comment_created': datetime.datetime(2020, 6, 22, 17, 55, 51, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443731702, 'comment_body': ""Then add the self parameter there. Isn't that possible? "", 'comment_created': datetime.datetime(2020, 6, 22, 17, 56, 17, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443733299, 'comment_body': 'Is it important to make this a static method? ', 'comment_created': datetime.datetime(2020, 6, 22, 17, 59, 5, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 443736260, 'comment_body': 'These methods have a fixed definition and are not to be changed. So, logically these should be static methods, that a user can simply use as follows:\r\n```\r\nfrom einsteinpy.metric import BaseMetric\r\n\r\nalpha = BaseMetric.alpha(M=1., a=0.5)\r\n```\r\nNote that, we are not creating any object. So, these can simply serve as utility functions too, while also being available in the context of a user-defined class, that derives from BaseMetric, without any extra imports.', 'comment_created': datetime.datetime(2020, 6, 22, 18, 4, 34, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 443809472, 'comment_body': 'Also, I have to say that the name of the variables makes (at least to me) a bit difficult the understanding of what is actually doing the code', 'comment_created': datetime.datetime(2020, 6, 22, 20, 33, 6, tzinfo=datetime.timezone.utc), 'commenter': 'OVSofia', 'type': 'User'}, {'comment_id': 443841855, 'comment_body': 'Missing docstring ', 'comment_created': datetime.datetime(2020, 6, 22, 21, 40, 14, tzinfo=datetime.timezone.utc), 'commenter': 'OVSofia', 'type': 'User'}, {'comment_id': 443849632, 'comment_body': 'This need to be hardcoded, right? ', 'comment_created': datetime.datetime(2020, 6, 22, 21, 59, 21, tzinfo=datetime.timezone.utc), 'commenter': 'OVSofia', 'type': 'User'}, {'comment_id': 443850595, 'comment_body': 'Maybe use a more descriptive name for this function name', 'comment_created': datetime.datetime(2020, 6, 22, 22, 1, 46, tzinfo=datetime.timezone.utc), 'commenter': 'OVSofia', 'type': 'User'}, {'comment_id': 443852571, 'comment_body': 'Why `_`  instead of something more descriptive?', 'comment_created': datetime.datetime(2020, 6, 22, 22, 7, tzinfo=datetime.timezone.utc), 'commenter': 'OVSofia', 'type': 'User'}, {'comment_id': 443858802, 'comment_body': ""I was trying to find where did you do the change of the issue #507 but I wasn't able to find it. Can you point me where it is, please? Thank you!"", 'comment_created': datetime.datetime(2020, 6, 22, 22, 24, 25, tzinfo=datetime.timezone.utc), 'commenter': 'OVSofia', 'type': 'User'}, {'comment_id': 444021761, 'comment_body': 'Good catch. Adding it.', 'comment_created': datetime.datetime(2020, 6, 23, 7, 36, 38, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 444026140, 'comment_body': 'It _is_ hardcoded. This was discussed in #108 & #119.', 'comment_created': datetime.datetime(2020, 6, 23, 7, 44, 3, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 444031298, 'comment_body': ""This denotes a throwaway variable. As you can see, `_` is not used in the body of the loop. It's only there for proper list comprehension of `self.nonzero_christoffels_list_bl[0:4]` into `k` and `l`."", 'comment_created': datetime.datetime(2020, 6, 23, 7, 53, 7, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 444033022, 'comment_body': 'Most of the code in these metric modules are from the now removed `<Metric>_utils` modules. So, I have tried to keep the function and variable names mostly the same, with changes only when the original name was confusing or a more descriptive name was available. In this case, this function was named `dmdx` earlier. In any case, these functions are not exposed to users and only used for calculations inside other functions. And, the docstring is descriptive. So, should I still go for a better name? This function is not supposed to be called by users, as denoted by `_` in front of the function name.', 'comment_created': datetime.datetime(2020, 6, 23, 7, 55, 55, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 444037602, 'comment_body': '`time_velocity` methods, across `<Metric>_utils` modules, have been [moved to and repackaged into 1 function in `coordinates.utils`](https://github.com/JeS24/einsteinpy/blob/0f90cb36d9f90e51659f3ddf204e6cf0302121c4/src/einsteinpy/coordinates/utils.py#L209-L250), renamed as `v_t()`. This function uses the supplied metric and 3-Velocity, and the expression for spacetime interval: $g_{ab} u^a u ^b = 0 or 1$ (null-like or time-like), to determine the timelike component of 4-Velocity, and hence it bypasses the method used here.\r\n\r\nAlso, my bad. I should put this in the PR description.', 'comment_created': datetime.datetime(2020, 6, 23, 8, 3, 48, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 444038042, 'comment_body': 'Also, I should note, that the method used here is the same, only difference being that this hardcodes the metric components.', 'comment_created': datetime.datetime(2020, 6, 23, 8, 4, 33, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 444311250, 'comment_body': 'Opening an issue, after merge.\r\n', 'comment_created': datetime.datetime(2020, 6, 23, 15, 25, 45, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 444467841, 'comment_body': 'Opened #518.', 'comment_created': datetime.datetime(2020, 6, 23, 19, 49, 55, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 444712540, 'comment_body': '@JeS24 Your tests covers the `if` part but not the else part. You need to also write the test where `self.perturbation` does not evaluate to `True`. Look [here](https://codecov.io/gh/einsteinpy/einsteinpy/pull/512/diff?src=pr&el=tree#D1-359).', 'comment_created': datetime.datetime(2020, 6, 24, 7, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'rishi-s8', 'type': 'User'}, {'comment_id': 444763327, 'comment_body': ""@rishi-s8 Thanks. It's covered now."", 'comment_created': datetime.datetime(2020, 6, 24, 9, 24, 36, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 444766667, 'comment_body': 'Weird, It still shows up as a miss.', 'comment_created': datetime.datetime(2020, 6, 24, 9, 30, 17, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 444767716, 'comment_body': 'Oh wow. Not anymore. Perhaps, it takes some time for it to refresh.\r\n![image](https://user-images.githubusercontent.com/31299799/85530577-ab2e2b00-b62b-11ea-8726-08da673654b5.png)\r\n', 'comment_created': datetime.datetime(2020, 6, 24, 9, 32, 12, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 445070003, 'comment_body': 'Are these required?', 'comment_created': datetime.datetime(2020, 6, 24, 17, 53, 21, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 445070605, 'comment_body': 'Why this redundant line?', 'comment_created': datetime.datetime(2020, 6, 24, 17, 54, 26, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 445072541, 'comment_body': 'For now, yes.', 'comment_created': datetime.datetime(2020, 6, 24, 17, 57, 44, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 445073073, 'comment_body': 'Removing it.', 'comment_created': datetime.datetime(2020, 6, 24, 17, 58, 41, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}]","[{'commit_sha': 'f651a21b8eb08b886163b30cf718993e36bd104e', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b48396a58dbacd5bfc780d3da2f60dba65f398f3', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6539becd00317405b442754f96814fca5a072951', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '672545588ee7de07e765f1da392d5f6c7582f3ea', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd30b92669a3eb042025c350738f282b8dae53607', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbfc52decb54a8fd4ca696e94743c06586aaf328', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b58cd2c5a9e2920b1e751a6f6c091874880e95f', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59e1aa48cdbcebb7dfef46f1af5f9caaccba7430', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '893dc0c463db8af975f62d8aec6214b2bcc8d6a9', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9ede62fb373f0481d75863b9b2f3201e3975774', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3e9e76c0f9f5ac31f5da57319a5db8e3f14bef6', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27371a74994bd8d7e263909c96e6aa2bb54c4f4c', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7431a84ff42c44db7addfd372bbb6601698d087e', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4aba87db695e1344209732e95e68e21fe2ab004', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db89b13ade68a7f710d6d1335bf2452d2782f835', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc6941048c19269f04dca76794c57b6227d5875c', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '492522d9c3454820e17bbba2423c81970efa536a', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27868dc16984a4b851835af5264104d338dfcad2', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c22d7f2dcfb5ca47d4e59371fb9b6c965d706d0', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f852368bbda729b2011683658d6ed0891934d28f', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70e7905f0d5e5a875b74fc9ffb39d551d4dac4f4', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66fdc5a370e245a0cd5db0ace8ae4a91acfe8b0f', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f4b4ea0e85816682c2fc1fc44ceec9846eb8fe6', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe9bf55d5d3c213fb8b44411a4839b82cf01dbc5', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}]",Jyotirmaya Shivottam,31299799,,User,,58,,16,26
440609473,Refactor coordinates and add support for 4-Vectors,"<!-- Please fill below the issue number which this code fixes -->
Fixes #517 

<!-- Please tag any reviewer here -->
Things to do:
- [x] Write tests for refactor
- [x] Update `examples`, `metric`, Example Notebooks (wherever `coordinates` were removed in #512).
- [x] Update `CHANGELOG`

### Mini-Changelog:
* `einsteinpy.coordinates`:
    - Renamed `coordinates.velocity` to `coordinates.differential`
    - Added 4-Vector support to `core` and `differential` (formerly, `velocity`)
    - Added support for calculation of time-like component of 4-Velocity
<br>

* `einsteinpy.metric`:
    - Added support for `einsteinpy.coordinates.differential`
    - Added support for `astropy.units`
    - Refactored `metric.Schwarzschild` and `metric.KerrNewman`
    - Partially fixed #523:

Update 1: **`Schwarzschild` is error-free now. Metric definitions in `Kerr` and `KerrNewman` are error-free too. Remaining methods (`_christoffels`, `_dg_dx`, `f_vec`) are yet to be altered.**

Update 2: **`Schwarzschild` and `Kerr` are error-free now.  `KerrNewman` is yet to be altered.**

Update 3: **`KerrNewman`'s `f_vec` needs to be cross-checked. Remaining methods have been corrected.**

<br>

* `einsteinpy.geodesic`:
    - Added support for `einsteinpy.coordinates.differential`
    - Added support for `astropy.units`
    - Moved old code to `Geodesic` class, while Time-like geodesic calculation is now through `TimelikeGeodesic` class (which derives from `Geodesic`)
    - Added `state` class variable, that stores the initial state of the particle.
<br>

* `einsteinpy.units`:
    - Added a `primitive()` function, that helps in obtaining float values out of `astropy.units.quantity.Quantity` objects.
    - Removed `astro_dist` & `astro_sec` (These are just scaling factors and these are not being used anywhere at the moment - Removed to get better codecov diff score)
<br>

* `einsteinpy.bodies`:
    - Refactored bodies to remove `a` (Fixes #517) and some minor changes.
<br>

* Fixed #517, #524, partially fixed #523 
* Added new tests and refactored old tests, wherever applicable
* Refactored example notebooks
",True,521,https://api.github.com/repos/einsteinpy/einsteinpy/pulls/521,https://github.com/einsteinpy/einsteinpy/pull/521,closed,3762,2629,48,7,8,12,2,0,"[{'name': 'coordinates'}, {'name': 'GSoC'}]",2020-06-26 14:12:47+00:00,2020-07-14 13:33:42+00:00,1552855.0,"17 days, 23:20:55","[{'comment_id': 446260818, 'comment_body': '```suggestion\r\n        state : ~einsteinpy.coordinates, optional\r\n\r\n```', 'comment_created': datetime.datetime(2020, 6, 26, 15, 41, 4, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 446262957, 'comment_body': 'This is done.', 'comment_created': datetime.datetime(2020, 6, 26, 15, 44, 53, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 452217310, 'comment_body': 'Should be `tuple`. Fixed.', 'comment_created': datetime.datetime(2020, 7, 9, 13, 28, 59, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 452839280, 'comment_body': 'Okay  makes sense ', 'comment_created': datetime.datetime(2020, 7, 10, 13, 21, 46, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 452839796, 'comment_body': 'Was this change really needed?', 'comment_created': datetime.datetime(2020, 7, 10, 13, 22, 41, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 452841933, 'comment_body': 'Okay this will change , but not now', 'comment_created': datetime.datetime(2020, 7, 10, 13, 26, 24, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 452842959, 'comment_body': 'Not a very clean code', 'comment_created': datetime.datetime(2020, 7, 10, 13, 28, 6, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 452848701, 'comment_body': ""That's due to `isort` changes."", 'comment_created': datetime.datetime(2020, 7, 10, 13, 38, 2, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 453218222, 'comment_body': ""Based on the conversation in the chat room:\r\n```\r\ncoords = self.coords\r\n# Proxy object of the Conversion superclass\r\nconv = super(type(coords), coords)\r\ncart_vecs = list()\r\nfor v in vecs:\r\n    conv.__init__(\r\n        v[0], v[1], v[2], v[3], v[5], v[6], v[7]\r\n    )\r\n    vals = conv.convert_cartesian(M=g.M, a=g.a)\r\n    cart_vecs.append(np.hstack((vals[:4], v[4], vals[4:])))\r\n```\r\nThis method is object-oriented and coordinate-agnostic. ~And just a tad slower than `mro` or `bases`.~ (_It's nearly the same speed. One of the tests was being skipped.)_"", 'comment_created': datetime.datetime(2020, 7, 11, 17, 49, 55, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 453220529, 'comment_body': 'I have changed the name to `Timelike`, as it\'s pretty evident, that we are talking about a time-like geodesic, when we write: `from einsteinpy.geodesic import Timelike`. As for Null Geodesics, we can either go with `Nulllike` or `NullGeodesic`, although the former is more ""symmetrical"" to `Timelike`, so to speak.', 'comment_created': datetime.datetime(2020, 7, 11, 18, 15, 33, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 453842284, 'comment_body': 'I feel its doable. We just need to put one/two extra lines of comment explaining the process.', 'comment_created': datetime.datetime(2020, 7, 13, 18, 20, 34, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 454323762, 'comment_body': 'Moving back to previous code, using `bases`. Both have similar performance.', 'comment_created': datetime.datetime(2020, 7, 14, 12, 35, 58, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}]","[{'commit_sha': '6ff2d7847904cd33f22297450850b7da9343177a', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abc0a410b7d8a2edbea80c457111b0946f7aedaa', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '114e6f1eb0d007b3e9dfd7e556706af3e2787406', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05c55b63a88f4e7c01e0c1246650e59b04075ba6', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e51292f4fe073db03e3862b0613c59a3cdaa859', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa86c9f2e2e1df4d9ccbb24a8d8f318d9c630dd9', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c4bd1da61101c3a66686536f46af7f97ca9f62e', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}]",Jyotirmaya Shivottam,31299799,,User,,58,,16,26
451125628,Null Geodesics in Kerr (& Schwarzschild),"ToDo:

- [x]  Structure the modules in `geodesic` and `rays`.
- [x] Implement Null Geodesic calculation for arbitrary **starting** positions & momentum.
- [x] Move to Hamiltonian Dynamical Approach, using Julia. Write a wrapper around it.
- [x] Move Julia code to `einsteinpy_geodesics`. Add tests, docs, CI.
- [x] Make `geodesic` compatible with `einsteinpy_geodesics` (Julia back-end). Also, implement a Python back-end for fallback.
- [x] Add tests.
- [x] Add warning for python back-end usage.
- [x] Edit notebooks, examples. ([Link](https://gfycat.com/famousapprehensiveheterodontosaurus) to a constant radius orbit, animated using new code )
- [x] Remove artefacts.
- [x] Edit CI config to (mock)test (parts of) Julia back-end. All of the main tests, that involve `julia` are now in the `einsteinpy_geodesics` repo.
- [x] Drop Python 3.6.
- [x] Write tests for `Christoffels` & `f_vec` methods in the metric classes
- [x] Update `CHANGELOG`.
<!-- Please fill below the issue number which this code fixes -->


<!-- Please tag any reviewer here -->
@shreyasbapat 
",True,527,https://api.github.com/repos/einsteinpy/einsteinpy/pulls/527,https://github.com/einsteinpy/einsteinpy/pull/527,closed,622839,41941,63,10,13,10,2,0,"[{'name': 'geodesics'}, {'name': 'GSoC'}]",2020-07-17 13:28:41+00:00,2020-08-30 10:31:07+00:00,3790946.0,"43 days, 21:02:26","[{'comment_id': 464002400, 'comment_body': '```suggestion\r\n- [#527]: Added support for Null Geodesics in Kerr Spacetime\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 21, 33, 57, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 464002413, 'comment_body': 'Finally 😍 ', 'comment_created': datetime.datetime(2020, 8, 1, 21, 34, 11, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 467571195, 'comment_body': 'Read this as the oldest comment. I am not this happy as of now xD', 'comment_created': datetime.datetime(2020, 8, 9, 11, 21, 43, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 479401186, 'comment_body': 'Could you add `Parameters` and `Returns` to the docstring? ', 'comment_created': datetime.datetime(2020, 8, 28, 16, 10, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rishi-s8', 'type': 'User'}, {'comment_id': 479401542, 'comment_body': '`Parameters` and `Returns`', 'comment_created': datetime.datetime(2020, 8, 28, 16, 11, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rishi-s8', 'type': 'User'}, {'comment_id': 479412536, 'comment_body': 'Sure. Done.', 'comment_created': datetime.datetime(2020, 8, 28, 16, 30, 53, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 479751722, 'comment_body': ""What's this?"", 'comment_created': datetime.datetime(2020, 8, 30, 10, 28, 26, tzinfo=datetime.timezone.utc), 'commenter': 'shreyasbapat', 'type': 'User'}, {'comment_id': 479752434, 'comment_body': '@shreyasbapat The extra quotation mark? Seems like, it was mistyped. Removing it.', 'comment_created': datetime.datetime(2020, 8, 30, 10, 35, 34, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 479752659, 'comment_body': 'There was an `isort` update, which broke the quality checks (https://app.circleci.com/pipelines/github/einsteinpy/einsteinpy/1885/workflows/130a38b8-2db8-4b63-a0a1-fc0cf7fdeadd/jobs/8730). I guess, while making the changes then, I mistyped this. And, `isort` update is also why, there are many extraneous edits in this PR.', 'comment_created': datetime.datetime(2020, 8, 30, 10, 38, 1, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}, {'comment_id': 479752808, 'comment_body': 'Oh, well. I have some edits queued in the `warp` branch, that adds the Alcubierre Metric. I will push this change there (#533).', 'comment_created': datetime.datetime(2020, 8, 30, 10, 39, 40, tzinfo=datetime.timezone.utc), 'commenter': 'JeS24', 'type': 'User'}]","[{'commit_sha': '03f4aed238ff7cbb952f239a0f052475df96fb6e', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b38e222c17219522fa8fe7763551335e2856047f', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c21decc0052592a41dbcb5b15c485dc561f0ae0', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f03542707c45d0596a68537faf8524a3929e098', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19819fbe4104e0b396729dea8d305cdd48b85b05', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '966c94ef5e177e657c4f8efd6e67d7865b58cd2b', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bc42193963e99c9d351d1bff09c8b203f6d77a5', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c6a792964892b017dfc96bddca851e25f0c706e', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69988eb2bab726748278440524109822e9154d40', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07e06b0d5b4839d48d8c15ab4b5c26ca37ad3f0b', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}]",Jyotirmaya Shivottam,31299799,,User,,58,,16,26
476182078,Added Jupyter Notebook for Geodesic and Plotting,"Added a complete documentation of the new modules with 3 examples.

<!-- Please tag any reviewer here -->
@shreyasbapat 
",True,536,https://api.github.com/repos/einsteinpy/einsteinpy/pulls/536,https://github.com/einsteinpy/einsteinpy/pull/536,closed,163734,0,4,1,1,0,2,0,"[{'name': 'geodesics'}, {'name': 'GSoC'}]",2020-08-31 09:38:35+00:00,2020-08-31 12:03:26+00:00,8691.0,2:24:51,[],"[{'commit_sha': 'a1806fc21bf12ff5300a022e50fe4e5321a6f4e8', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}]",Jyotirmaya Shivottam,31299799,,User,,58,,16,26
392043674,Fixes #449 - Commit 0,"<!-- Please fill below the issue number which this code fixes -->
Fixes #449 

<!-- Please tag any reviewer here -->
@ritzvik @shreyasbapat Please review the PR. Thanks.
",True,452,https://api.github.com/repos/einsteinpy/einsteinpy/pulls/452,https://github.com/einsteinpy/einsteinpy/pull/452,closed,19,17,12,1,9,0,0,0,[],2020-03-22 17:42:52+00:00,2020-03-22 18:52:45+00:00,4193.0,1:09:53,[],"[{'commit_sha': '3469e117dd0d62ca9ad3e1d3f468ff04d6227862', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}]",Jyotirmaya Shivottam,31299799,,User,,58,,16,26
393415281,"Mechanism for adding/removing ""tags"" to/from tensor names, after changes to the tensor","<!-- Please fill below the issue number which this code fixes -->
Fixes #454 

<!-- Please tag any reviewer here -->
@ritzvik @shreyasbapat Sorry for the other PR. I could not rebase properly. Please review this PR.
",True,460,https://api.github.com/repos/einsteinpy/einsteinpy/pulls/460,https://github.com/einsteinpy/einsteinpy/pull/460,closed,204,45,13,3,7,5,0,0,[],2020-03-25 06:51:07+00:00,2020-03-25 10:02:05+00:00,11458.0,3:10:58,"[{'comment_id': 397660727, 'comment_body': '```suggestion\r\n        name=""ChristoffelSymbols"",\r\n```\r\nThis would suffice. Anyway, Christoffels symbols are pseudo-tensor', 'comment_created': datetime.datetime(2020, 3, 25, 7, 51, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ritzvik', 'type': 'User'}, {'comment_id': 397661103, 'comment_body': 'Change here also\r\n```suggestion\r\n            Name of the Christoffel Symbols Tensor. Defaults to ""ChristoffelSymbols"".\r\n```', 'comment_created': datetime.datetime(2020, 3, 25, 7, 51, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ritzvik', 'type': 'User'}, {'comment_id': 397662526, 'comment_body': ""```suggestion\r\n    return curr_name + context if (curr_name is not None) else None\r\n```\r\nA bit more clarity won't bite"", 'comment_created': datetime.datetime(2020, 3, 25, 7, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ritzvik', 'type': 'User'}, {'comment_id': 397664561, 'comment_body': ""Don't remove `None`. It can be passed by user anyway."", 'comment_created': datetime.datetime(2020, 3, 25, 7, 59, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ritzvik', 'type': 'User'}, {'comment_id': 397664790, 'comment_body': '```suggestion\r\n        name : str or None\r\n```', 'comment_created': datetime.datetime(2020, 3, 25, 8, 0, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ritzvik', 'type': 'User'}]","[{'commit_sha': '269b9335ee99e6ba069d8dc10b1bd642f5ecaebe', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aaf742051184a536665731ffd7276420207b3b64', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bae2d95e384439224f20e4a47927f3250e6b7b3', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}]",Jyotirmaya Shivottam,31299799,,User,,58,,16,26
475896921,"Added Alcubierre metric, test, docs","<!-- Please fill below the issue number which this code fixes -->
Fixes #532

<!-- Please tag any reviewer here -->
@shreyasbapat 
",True,534,https://api.github.com/repos/einsteinpy/einsteinpy/pulls/534,https://github.com/einsteinpy/einsteinpy/pull/534,closed,61,2,5,1,2,0,0,0,[],2020-08-30 11:11:11+00:00,2020-08-30 12:02:41+00:00,3090.0,0:51:30,[],"[{'commit_sha': '70782d4225c72d478f28fa0c3e2d0e674307d0b3', 'committer_username': 'JeS24', 'committer_name': 'Jyotirmaya Shivottam', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 24, 3, 21, 43, tzinfo=datetime.timezone.utc)}]",Jyotirmaya Shivottam,31299799,,User,,58,,16,26

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
234129844,EinsteinPy-EPEs,einsteinpy/EinsteinPy-EPEs,,2,6,2,1,14,3,1,3,"[{'id': 419329550, 'number': 4, 'closed': None, 'created': datetime.datetime(2020, 5, 18, 8, 8, 25, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 500, 'deletions': 0, 'state': 'open'}]"
168302584,einsteinpy,einsteinpy/einsteinpy,Python,217,607,29,71,960,57,7,10,"[{'id': 1529221068, 'number': 642, 'closed': datetime.datetime(2023, 9, 25, 17, 12, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 25, 17, 12, 16, tzinfo=datetime.timezone.utc), 'time_taken': 8.0, 'time_delta': '0:00:08', 'additions': 283, 'deletions': 33, 'state': 'closed'}, {'id': 1528782979, 'number': 640, 'closed': datetime.datetime(2023, 9, 25, 13, 5, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 25, 13, 3, 8, tzinfo=datetime.timezone.utc), 'time_taken': 126.0, 'time_delta': '0:02:06', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 1526718039, 'number': 639, 'closed': None, 'created': datetime.datetime(2023, 9, 22, 14, 51, 17, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 27, 'deletions': 27, 'state': 'open'}, {'id': 1109992882, 'number': 623, 'closed': datetime.datetime(2022, 11, 3, 20, 49, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 3, 18, 44, 32, tzinfo=datetime.timezone.utc), 'time_taken': 7508.0, 'time_delta': '2:05:08', 'additions': 63, 'deletions': 103312, 'state': 'closed'}, {'id': 1109919790, 'number': 622, 'closed': datetime.datetime(2022, 11, 3, 17, 31, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 3, 17, 30, 59, tzinfo=datetime.timezone.utc), 'time_taken': 33.0, 'time_delta': '0:00:33', 'additions': 48, 'deletions': 26, 'state': 'closed'}, {'id': 1109830833, 'number': 620, 'closed': datetime.datetime(2022, 11, 3, 16, 18, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 3, 16, 16, 45, tzinfo=datetime.timezone.utc), 'time_taken': 99.0, 'time_delta': '0:01:39', 'additions': 533, 'deletions': 504, 'state': 'closed'}, {'id': 1109711934, 'number': 619, 'closed': datetime.datetime(2022, 11, 3, 15, 1, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 3, 14, 53, 7, tzinfo=datetime.timezone.utc), 'time_taken': 479.0, 'time_delta': '0:07:59', 'additions': 142, 'deletions': 140, 'state': 'closed'}, {'id': 1107355632, 'number': 617, 'closed': datetime.datetime(2022, 11, 1, 21, 33, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 1, 21, 25, 6, tzinfo=datetime.timezone.utc), 'time_taken': 484.0, 'time_delta': '0:08:04', 'additions': 27, 'deletions': 17, 'state': 'closed'}, {'id': 1104054544, 'number': 615, 'closed': datetime.datetime(2022, 10, 29, 17, 0, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 29, 16, 54, 14, tzinfo=datetime.timezone.utc), 'time_taken': 390.0, 'time_delta': '0:06:30', 'additions': 469, 'deletions': 266, 'state': 'closed'}, {'id': 1102872953, 'number': 609, 'closed': datetime.datetime(2022, 10, 28, 9, 59, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 28, 9, 42, 44, tzinfo=datetime.timezone.utc), 'time_taken': 1011.0, 'time_delta': '0:16:51', 'additions': 234150, 'deletions': 5106, 'state': 'closed'}, {'id': 1101867196, 'number': 607, 'closed': datetime.datetime(2022, 10, 28, 8, 47, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 27, 15, 23, 12, tzinfo=datetime.timezone.utc), 'time_taken': 62687.0, 'time_delta': '17:24:47', 'additions': 271, 'deletions': 305, 'state': 'closed'}, {'id': 553326649, 'number': 560, 'closed': datetime.datetime(2021, 1, 18, 9, 18, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 12, 9, 45, 1, tzinfo=datetime.timezone.utc), 'time_taken': 516802.0, 'time_delta': '5 days, 23:33:22', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 553312226, 'number': 559, 'closed': datetime.datetime(2021, 1, 12, 9, 39, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 12, 9, 20, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1119.0, 'time_delta': '0:18:39', 'additions': 8, 'deletions': 0, 'state': 'closed'}, {'id': 553308121, 'number': 558, 'closed': datetime.datetime(2021, 1, 12, 9, 17, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 12, 9, 13, 20, tzinfo=datetime.timezone.utc), 'time_taken': 229.0, 'time_delta': '0:03:49', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 552714227, 'number': 555, 'closed': datetime.datetime(2021, 1, 11, 12, 57, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 11, 12, 40, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1030.0, 'time_delta': '0:17:10', 'additions': 46, 'deletions': 0, 'state': 'closed'}, {'id': 552360582, 'number': 554, 'closed': datetime.datetime(2021, 1, 12, 5, 53, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 10, 22, 37, 35, tzinfo=datetime.timezone.utc), 'time_taken': 112537.0, 'time_delta': '1 day, 7:15:37', 'additions': 27, 'deletions': 0, 'state': 'closed'}, {'id': 552356074, 'number': 553, 'closed': datetime.datetime(2021, 1, 10, 22, 16, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 10, 22, 3, 10, tzinfo=datetime.timezone.utc), 'time_taken': 789.0, 'time_delta': '0:13:09', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 547860985, 'number': 548, 'closed': datetime.datetime(2021, 2, 1, 15, 1, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 3, 10, 42, 9, tzinfo=datetime.timezone.utc), 'time_taken': 2521188.0, 'time_delta': '29 days, 4:19:48', 'additions': 68166, 'deletions': 584460, 'state': 'closed'}, {'id': 476182078, 'number': 536, 'closed': datetime.datetime(2020, 8, 31, 12, 3, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 31, 9, 38, 35, tzinfo=datetime.timezone.utc), 'time_taken': 8691.0, 'time_delta': '2:24:51', 'additions': 163734, 'deletions': 0, 'state': 'closed'}, {'id': 475896921, 'number': 534, 'closed': datetime.datetime(2020, 8, 30, 12, 2, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 30, 11, 11, 11, tzinfo=datetime.timezone.utc), 'time_taken': 3090.0, 'time_delta': '0:51:30', 'additions': 61, 'deletions': 2, 'state': 'closed'}, {'id': 475830521, 'number': 533, 'closed': datetime.datetime(2020, 8, 30, 11, 12, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 29, 21, 29, 18, tzinfo=datetime.timezone.utc), 'time_taken': 49377.0, 'time_delta': '13:42:57', 'additions': 622873, 'deletions': 41941, 'state': 'closed'}, {'id': 451125628, 'number': 527, 'closed': datetime.datetime(2020, 8, 30, 10, 31, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 17, 13, 28, 41, tzinfo=datetime.timezone.utc), 'time_taken': 3790946.0, 'time_delta': '43 days, 21:02:26', 'additions': 622839, 'deletions': 41941, 'state': 'closed'}, {'id': 440609473, 'number': 521, 'closed': datetime.datetime(2020, 7, 14, 13, 33, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 26, 14, 12, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1552855.0, 'time_delta': '17 days, 23:20:55', 'additions': 3762, 'deletions': 2629, 'state': 'closed'}, {'id': 433237980, 'number': 512, 'closed': datetime.datetime(2020, 6, 24, 19, 31, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 11, 17, 37, 51, tzinfo=datetime.timezone.utc), 'time_taken': 1130032.0, 'time_delta': '13 days, 1:53:52', 'additions': 45630, 'deletions': 45005, 'state': 'closed'}, {'id': 424273701, 'number': 504, 'closed': datetime.datetime(2020, 6, 11, 17, 9, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 28, 6, 19, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1248620.0, 'time_delta': '14 days, 10:50:20', 'additions': 2123, 'deletions': 19, 'state': 'closed'}, {'id': 422236790, 'number': 502, 'closed': datetime.datetime(2020, 6, 24, 20, 9, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 23, 7, 34, 38, tzinfo=datetime.timezone.utc), 'time_taken': 2810070.0, 'time_delta': '32 days, 12:34:30', 'additions': 1197, 'deletions': 131, 'state': 'closed'}, {'id': 393415281, 'number': 460, 'closed': datetime.datetime(2020, 3, 25, 10, 2, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 25, 6, 51, 7, tzinfo=datetime.timezone.utc), 'time_taken': 11458.0, 'time_delta': '3:10:58', 'additions': 204, 'deletions': 45, 'state': 'closed'}, {'id': 392546772, 'number': 456, 'closed': datetime.datetime(2020, 3, 25, 5, 3, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 23, 17, 56, 27, tzinfo=datetime.timezone.utc), 'time_taken': 126437.0, 'time_delta': '1 day, 11:07:17', 'additions': 329, 'deletions': 648, 'state': 'closed'}, {'id': 392043674, 'number': 452, 'closed': datetime.datetime(2020, 3, 22, 18, 52, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 22, 17, 42, 52, tzinfo=datetime.timezone.utc), 'time_taken': 4193.0, 'time_delta': '1:09:53', 'additions': 19, 'deletions': 17, 'state': 'closed'}]"
