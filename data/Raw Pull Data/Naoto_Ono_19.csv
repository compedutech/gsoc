pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
644366594,[WIP] Trial implementation of test code for debbuger -single process,"## やったこと

- [debug_code ブロックの中に入れるようにする](https://gist.github.com/mame/682ca17ed76ce783b33f4fa2a4392ba0)
- テストが実行されたりされなかったりすることの調査（原因不明）
- Use `test-unit` instead of `minitest`

## やってないこと

- popenを試す
- テストが実行されたりされなかったりすることのバグ修正",False,9,https://api.github.com/repos/ruby/debug/pulls/9,https://github.com/ruby/debug/pull/9,closed,421,5,11,14,0,5,0,0,[],2021-05-14 01:20:46+00:00,2021-05-25 15:04:24+00:00,999818.0,"11 days, 13:43:38","[{'comment_id': 632204839, 'comment_body': 'Can you use ""test-unit"" instead of `minitest` ?\r\n\r\n`ruby/ruby` migrates `minitest` to `test-unit` in this year.', 'comment_created': datetime.datetime(2021, 5, 14, 1, 33, 3, tzinfo=datetime.timezone.utc), 'commenter': 'hsbt', 'type': 'User'}, {'comment_id': 632504217, 'comment_body': ""@hsbt \r\nCould you teach me detail about it?\r\nI wasn't able to find any reference about the migration."", 'comment_created': datetime.datetime(2021, 5, 14, 12, 49, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 632805294, 'comment_body': 'see https://github.com/rubygems/rubygems/pull/3141\r\n\r\nBasically, `ruby/ruby` uses `test-unit`, not `minitest`. rubygems and psych only uses minitest namespace. I did migrate them to `test-unit` in May, 2021.', 'comment_created': datetime.datetime(2021, 5, 14, 21, 4, 2, tzinfo=datetime.timezone.utc), 'commenter': 'hsbt', 'type': 'User'}, {'comment_id': 632879905, 'comment_body': 'Thank you!', 'comment_created': datetime.datetime(2021, 5, 15, 1, 58, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 634297264, 'comment_body': '758b7d9', 'comment_created': datetime.datetime(2021, 5, 18, 11, 42, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}]","[{'commit_sha': 'e9da9d160dac156441068d7d15985ed3bb124f3c', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a049ee27123b96a43d8424142e04a8082b13e5a', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '263fadac998511a90276ae34c65303a475d32281', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd75c28f20b02e186c011d2661f7e9b8c44fce72', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2089283e979b371ef5abe5310aa3b15a80f6888', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a01f1bae45bdab3fb93db49c2246a3f35fd5c36', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a48cd4b39e021c033200fe7215408a737e8e14af', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe17feda57fff89f8c3341a331d6e4b7f7c09d9a', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '887ed935c30f8757fdfb1509a640bc0c0c88694c', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fa4fa312c8be1e28dc55cc992dce4d1a4c5d5e0', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ed0cd4c6445d6e30cb1f4a0df0d5b047ab8bbd6', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33b7c12afa9583bf5c302781a809a1aae29c35d3', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f2168e4c4ad87ba57faf2aa18f3ffc7082c76af', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '758b7d9947b68a7bcaec03b27825825a7623cf4e', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
648275523,Trial implementation of test code for debbuger -multi processes,"This is the trial implementation of test code for debugger by using multi processes.

- Use module PTY to create pseudo terminals for debugger.
- Write test codes for `next` and `step` and `break`

### How to use

```
# all test will be executed
$ ruby bin/test-unit.rb

# specify test file
$ ruby bin/test-unit.rb debug/break_test.rb
```

### Demo
[![Image from Gyazo](https://i.gyazo.com/2bbe47cb20b9a49f48a0c6c0ad146d9e.gif)](https://gyazo.com/2bbe47cb20b9a49f48a0c6c0ad146d9e)

### Reference

The following test code is based on [byebug ](https://github.com/deivid-rodriguez/byebug)project",True,21,https://api.github.com/repos/ruby/debug/pulls/21,https://github.com/ruby/debug/pull/21,closed,402,1,7,6,3,6,0,0,[],2021-05-20 01:00:03+00:00,2021-05-27 14:56:41+00:00,654998.0,"7 days, 13:56:38","[{'comment_id': 635676818, 'comment_body': 'is this file needed?', 'comment_created': datetime.datetime(2021, 5, 20, 1, 1, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 635678134, 'comment_body': 'No, I will remove it.', 'comment_created': datetime.datetime(2021, 5, 20, 1, 5, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 636652883, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 5, 21, 5, 51, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 640230229, 'comment_body': 'I copy pasted codes in reference\r\nhttps://test-unit.github.io/test-unit/en/file.how-to.html', 'comment_created': datetime.datetime(2021, 5, 27, 1, 41, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 640248425, 'comment_body': ""just curious about what `quitted` means here. I thought if `quitted == true`, the terminal would stop. but it looks like it's the opposite?"", 'comment_created': datetime.datetime(2021, 5, 27, 2, 41, 30, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 640253140, 'comment_body': 'Oh, that was my mistake. Thanks!', 'comment_created': datetime.datetime(2021, 5, 27, 2, 57, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}]","[{'commit_sha': 'e6ac53379a99ba72f409330eea3a14ab5711c38a', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '248d2f25541b22a1d697337db4b84b0e30a82f33', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af4153a1af50a03cd757da486fe734bf1a3697f2', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b65f8651a68e8ed315c795f81f95cdda687da241', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d9cf7c46ef84fba50e8b719a086261d316dbf83', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41b70f6866ee5132e3b648eeb7ac72cc73d2a4ca', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
657384181,display line numbers for test programs,"Displaying line numbers in test programs is easy to write test code.

### Reference

This method is based on [byebug ](https://github.com/deivid-rodriguez/byebug)project",True,42,https://api.github.com/repos/ruby/debug/pulls/42,https://github.com/ruby/debug/pull/42,closed,67,61,4,3,4,4,0,0,[],2021-05-29 05:21:45+00:00,2021-06-01 15:31:12+00:00,295767.0,"3 days, 10:09:27","[{'comment_id': 641909022, 'comment_body': ""Perhaps an anchor in the regular expression would help?\r\n\r\n```suggestion\r\n      str.gsub(/^\\s*\\d+\\| ?/, '')\r\n```\r\n\r\n"", 'comment_created': datetime.datetime(2021, 5, 29, 8, 22, 49, tzinfo=datetime.timezone.utc), 'commenter': 'olleolleolle', 'type': 'User'}, {'comment_id': 641931941, 'comment_body': 'Yes, you are right. Thanks!', 'comment_created': datetime.datetime(2021, 5, 29, 12, 21, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 641942927, 'comment_body': ""for consistency reason, we may want **all** program code to have line numbers. and if that makes sense to you, maybe we can strip the line at a single place (perhaps in `debug_code`)? then we won't need to call this in every `program` method."", 'comment_created': datetime.datetime(2021, 5, 29, 14, 9, 7, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 643072621, 'comment_body': 'I agree with your opinion. Thank you!\r\nhttps://github.com/ruby/debug/pull/42/files#diff-ee14bf65f14927f7778a246f90c5cec0c581be3e2658c2a8a3726c59db5be3f9R22', 'comment_created': datetime.datetime(2021, 6, 1, 12, 50, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}]","[{'commit_sha': '54737a39018fa7afede84109b33b7d9f9b3f32b0', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a2e5be33bd24b672f67a137bcf92709e9b2d89d', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c702a35d0bd7b7d06f3b4558075d606f521816e6', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
657842455,modify the way to get readable IO,"There are 2points in this PR.

1. Currently, we have some problems in PTY block. 

- We can't use `quit!` in test file because PTY block assuming only `quit` and `y`.
- If there is a bug in debugger, it will not stop forever.
- To exit terminal, we have to use `quit`.

This PR will solve them.

2. add `INTERNAL_INFO` for make tests easier.

- `INTERNAL_INFO` simplifies tests for line number, backtrace, and so on.
![Screen Shot 2021-05-31 at 9 34 28 AM](https://user-images.githubusercontent.com/59436572/120159869-a0631980-c230-11eb-8c31-2342951cfc5f.png)
",True,48,https://api.github.com/repos/ruby/debug/pulls/48,https://github.com/ruby/debug/pull/48,closed,115,68,7,6,1,19,0,0,[],2021-05-31 00:13:01+00:00,2021-06-07 15:32:25+00:00,659964.0,"7 days, 15:19:24","[{'comment_id': 642695387, 'comment_body': ""I'd like to discuss where this method should be called."", 'comment_created': datetime.datetime(2021, 5, 31, 22, 38, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 646022136, 'comment_body': 'What is `backtrace`? `backlog`?', 'comment_created': datetime.datetime(2021, 6, 5, 18, 36, 17, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 646022224, 'comment_body': ""small tips: You don't need deep indent by writing assignments twice:\r\n\r\n```ruby\r\nif ENV['RUBY_DEBUG_TEST_MODE']\r\n  line = @ui.readline(@internal_info)\r\n...\r\n```\r\n"", 'comment_created': datetime.datetime(2021, 6, 5, 18, 37, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 646022376, 'comment_body': '`prepend` is implementation (HOW TO).\r\nIt should be `prepare` or something goal (WHAT DOES IT).\r\n\r\nBTW, only 4 lines, this method can be inlined here.', 'comment_created': datetime.datetime(2021, 6, 5, 18, 38, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 646022613, 'comment_body': ""Changing parameters of `@ui.readline` is nod good idea because `#readline` is defined for each UI classes.\r\nWhy don't you write a `@ui.puts info` first?"", 'comment_created': datetime.datetime(2021, 6, 5, 18, 41, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 646022814, 'comment_body': ""why don't you call `generate_info` here?"", 'comment_created': datetime.datetime(2021, 6, 5, 18, 42, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 646075505, 'comment_body': ""Thanks, I'll call it in `event!` method."", 'comment_created': datetime.datetime(2021, 6, 6, 5, 18, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 646076185, 'comment_body': ""That's a good idea."", 'comment_created': datetime.datetime(2021, 6, 6, 5, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 646077518, 'comment_body': 'I will be inline them.', 'comment_created': datetime.datetime(2021, 6, 6, 5, 40, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 646113109, 'comment_body': 'https://github.com/ruby/debug/pull/48/files#diff-4208807b6db8555c61e42002b3e9c879003c5cfdb32d2b1a285a614b22fdf9d5R103', 'comment_created': datetime.datetime(2021, 6, 6, 10, 45, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 646113165, 'comment_body': 'https://github.com/ruby/debug/pull/48/files#diff-c87adef8ace662a03249d206e6812162256bbcecabe18cd51861d1e1cd9cdfcaR189', 'comment_created': datetime.datetime(2021, 6, 6, 10, 46, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 646113214, 'comment_body': 'https://github.com/ruby/debug/pull/48/files#diff-c87adef8ace662a03249d206e6812162256bbcecabe18cd51861d1e1cd9cdfcaR965-R968', 'comment_created': datetime.datetime(2021, 6, 6, 10, 46, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 646290241, 'comment_body': 'I changed `backtrace` to `backlog`.', 'comment_created': datetime.datetime(2021, 6, 7, 5, 56, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 646298140, 'comment_body': 'How to determine ""1 second""?', 'comment_created': datetime.datetime(2021, 6, 7, 6, 16, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 646300839, 'comment_body': '@ko1 \r\nI decided it just with my feeling. Could you give me advice how to determine it?', 'comment_created': datetime.datetime(2021, 6, 7, 6, 23, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 646357626, 'comment_body': 'Good idea to ask it :)\r\n\r\nFor me, 1 second is too short. If it runs complex tests, they will take more time. Also on the low-power computers, this  limitation should be more problematic. Tests is expected to finish sometime, so you need to check the ""unexpected freeze"". In many cases maybe 10 seconds are fine.\r\n\r\nIntroducing a way to change this timeout will help for slow computers (RUBY_DEBUG_TIMEOUT_SCALE for example), but now it is too much.', 'comment_created': datetime.datetime(2021, 6, 7, 8, 1, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 646360671, 'comment_body': 'Thanks, I will change it!', 'comment_created': datetime.datetime(2021, 6, 7, 8, 6, 17, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 646704953, 'comment_body': 'On the timeout, the test should fail. Please try after merge it.', 'comment_created': datetime.datetime(2021, 6, 7, 15, 31, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 646705578, 'comment_body': 'Also, please try the timeout on your computer by adding `sleep 11` or something similar.', 'comment_created': datetime.datetime(2021, 6, 7, 15, 32, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}]","[{'commit_sha': 'dfe1f3276c4071323117ca68eec49c874acdad87', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bdbe956a28c3dee4712e70d3b4b7a3537d257a7', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e1d0ed023c21d7f033a9c573229938745b706cb', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '038347db19f9d8c18e721af722cfd80c3f416eb8', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '848c1a1db36b6227f463dd5579689214d3c26d78', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d884f6afe0c0277f6096e43b42aff2b4d916e5f', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
664078412,[Fix bug] modify assert_line_text method to be able to make correct assertions,,True,71,https://api.github.com/repos/ruby/debug/pulls/71,https://github.com/ruby/debug/pull/71,closed,1,5,1,1,2,7,0,0,[],2021-06-08 01:32:54+00:00,2021-06-08 06:49:04+00:00,18970.0,5:16:10,"[{'comment_id': 647046935, 'comment_body': 'can you use `match?` instead of `include?` so it can also take regexp as expectation? ', 'comment_created': datetime.datetime(2021, 6, 8, 1, 34, 17, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 647047874, 'comment_body': 'https://github.com/ruby/debug/pull/71/files#diff-ee14bf65f14927f7778a246f90c5cec0c581be3e2658c2a8a3726c59db5be3f9R23', 'comment_created': datetime.datetime(2021, 6, 8, 1, 36, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 647048916, 'comment_body': 'It should show failure message. When the test fails, there is no hints and it is difficult to debug.', 'comment_created': datetime.datetime(2021, 6, 8, 1, 40, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 647060928, 'comment_body': 'Thanks, I will add it.', 'comment_created': datetime.datetime(2021, 6, 8, 2, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 647094938, 'comment_body': 'it still doesn\'t provide much information:\r\n\r\n```\r\n  Expected to include => 20}.\r\n  <true> expected but was\r\n  <false>\r\n```\r\n\r\nhow about this?\r\n\r\n```ruby\r\nassert_match(expected, @internal_info[\'backlog\'].join)\r\n```\r\n\r\n```\r\n  </=>\\ 20/> was expected to be =~\r\n  <""=>#0\\tFoo#first_call at /var/folders/yg/hnbymwxd5pn7v94_clc59y6r0000gn/T/debugger20210608-65153-b857w.rb:4 #=> 30\\n"" +\r\n  ""  #1\\t<main> at /var/folders/yg/hnbymwxd5pn7v94_clc59y6r0000gn/T/debugger20210608-65153-b857w.rb:23\\n"">.\r\n```', 'comment_created': datetime.datetime(2021, 6, 8, 4, 7, 28, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 647096122, 'comment_body': ""That's a good idea! Thanks 👍 "", 'comment_created': datetime.datetime(2021, 6, 8, 4, 11, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 647107929, 'comment_body': 'https://github.com/ruby/debug/pull/71/files#diff-ee14bf65f14927f7778a246f90c5cec0c581be3e2658c2a8a3726c59db5be3f9R21', 'comment_created': datetime.datetime(2021, 6, 8, 4, 50, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}]","[{'commit_sha': '518ba5bb0bdf9f6f55ca15c38eed92ff8ffa5a21', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
664428468,improve test framework in backlog,"- rename 'lines' to 'backlog'
- use ""last_backlog"" instead of ""internal_info[:backlog]""
- define create_message method to output backlog when assertion failed",True,73,https://api.github.com/repos/ruby/debug/pulls/73,https://github.com/ruby/debug/pull/73,closed,14,24,2,3,0,8,0,0,[],2021-06-08 07:55:46+00:00,2021-06-09 05:16:37+00:00,76851.0,21:20:51,"[{'comment_id': 647474468, 'comment_body': ""why don't you make `@backlog` instead of `backlog` local variable?"", 'comment_created': datetime.datetime(2021, 6, 8, 14, 3, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 647495935, 'comment_body': '@ko1 \r\nIn my opinion, local variable is better than instance variable to keep the scope of the variable small.\r\nWhat do you think about this?', 'comment_created': datetime.datetime(2021, 6, 8, 14, 26, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 647618250, 'comment_body': ""In this case, `@last_backlog` and `@internal_info` are already used and I don't have any good reason why only `@backlog` is passed as an argument."", 'comment_created': datetime.datetime(2021, 6, 8, 16, 44, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 647619957, 'comment_body': '""All in arguments"" is another reasonable option for me.', 'comment_created': datetime.datetime(2021, 6, 8, 16, 46, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 647855216, 'comment_body': ""@ko1 \r\n> In this case, @last_backlog and @internal_info are already used and I don't have any good reason why only @backlog is passed as an argument.\r\n\r\n`@internal_info` and `@last_backlog` are used in some assertions, but `@backlog` are used in **all assertions**. Does that make sense for you?\r\n\r\nThat's why I used `@backlog` as an argument."", 'comment_created': datetime.datetime(2021, 6, 8, 23, 10, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 647909801, 'comment_body': ""It doesn't make sense to me. The visibility control is not related to frequency. \r\n\r\n* `backlog` is only visible where the value is passed. Well controlled.\r\n* `@internal_info` and `@last_backlog` are visible from any test class methods.\r\n\r\nVisibility of these values should be same. At least I feel it should be same because there is no reason to change the visibility."", 'comment_created': datetime.datetime(2021, 6, 9, 1, 56, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 647911433, 'comment_body': 'In general, well-controlled visibility is good idea. So passing `backlog` as an argument is nice.\r\nHowever, `@internal_info` and `@last_backlog` are already exposed, and maybe nobody modify them from test methods (in other words, we can believe test writers). In this background, there is no reason to prohibit exposing `backlog` and it reduces the code size.', 'comment_created': datetime.datetime(2021, 6, 9, 2, 1, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 647941947, 'comment_body': 'I fully persuaded myself of your opinion. Thanks!', 'comment_created': datetime.datetime(2021, 6, 9, 3, 40, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}]","[{'commit_sha': '4b9a8854feccbe4c97c27dcfd1abd04f1a235ace', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00c93a4ee502550626453d948d1471865bb39379', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fd93ecbfa65edce7d7f2e355ccd2ac070819066', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
665548908,Test for remote debugger,"I implement the test framework for remote debugger.

- Assign the argument `remote: false` in `debug_code` method when using `require ""debug/run""` or `DEBUGGER__.console`.
- Test for remote and local are in each method by one. That's why if first test(local) failed, second test(remote) won't work.
  - Test for local test will be executed first, and Test for remote(UNIX domain socket mode and TCP/IP mode) will be executed next.",True,76,https://api.github.com/repos/ruby/debug/pulls/76,https://github.com/ruby/debug/pull/76,closed,53,13,2,4,10,19,0,0,[],2021-06-09 05:05:51+00:00,2021-07-01 06:58:24+00:00,1907553.0,"22 days, 1:52:33","[{'comment_id': 647970513, 'comment_body': 'I think the remote server can be started with just one line? like https://github.com/ruby/debug/pull/75/files#diff-ee14bf65f14927f7778a246f90c5cec0c581be3e2658c2a8a3726c59db5be3f9R43\r\nand then we can leave it there without reading/writing anything to it.', 'comment_created': datetime.datetime(2021, 6, 9, 5, 10, 46, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 647971636, 'comment_body': 'perhaps we can introduce another method like `remote_debug_code` and keep this one simple? we can also name things better in that method without causing any confusion.', 'comment_created': datetime.datetime(2021, 6, 9, 5, 13, 50, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 649110884, 'comment_body': 'Yeah, I will try it.', 'comment_created': datetime.datetime(2021, 6, 10, 11, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 649636652, 'comment_body': 'should not use this path.', 'comment_created': datetime.datetime(2021, 6, 11, 1, 54, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 654728172, 'comment_body': 'I modified it. Is that ok for you?', 'comment_created': datetime.datetime(2021, 6, 19, 1, 9, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 654746427, 'comment_body': 'https://github.com/ruby/debug/pull/76/files#diff-ee14bf65f14927f7778a246f90c5cec0c581be3e2658c2a8a3726c59db5be3f9R57', 'comment_created': datetime.datetime(2021, 6, 19, 4, 30, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 656322407, 'comment_body': 'It has bad smell.', 'comment_created': datetime.datetime(2021, 6, 22, 15, 14, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 657576981, 'comment_body': 'I modified it.', 'comment_created': datetime.datetime(2021, 6, 24, 2, 17, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 659541594, 'comment_body': 'PORT should be given by an option, maybe `RUBY_DEBUG_TEST_PORT` or something.', 'comment_created': datetime.datetime(2021, 6, 28, 7, 26, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 659541775, 'comment_body': '`RUBY_DEBUG_TEST` prefix is better to make clear the purpose.', 'comment_created': datetime.datetime(2021, 6, 28, 7, 26, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 660147873, 'comment_body': 'https://github.com/ruby/debug/pull/76/files#diff-ee14bf65f14927f7778a246f90c5cec0c581be3e2658c2a8a3726c59db5be3f9R41', 'comment_created': datetime.datetime(2021, 6, 28, 22, 8, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 660148044, 'comment_body': 'https://github.com/ruby/debug/pull/76/files#diff-ee14bf65f14927f7778a246f90c5cec0c581be3e2658c2a8a3726c59db5be3f9R38', 'comment_created': datetime.datetime(2021, 6, 28, 22, 8, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 661455122, 'comment_body': ""@ono-max why is `remote: false` needed here? changing `boot_options` shouldn't start remote debugging anyway?"", 'comment_created': datetime.datetime(2021, 6, 30, 13, 7, 13, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 661929695, 'comment_body': '@st0012 \r\nBecause this test doesn\'t need to be executed as remote.\r\n\r\n> changing boot_options shouldn\'t start remote debugging anyway?\r\n\r\nI don\'t get it. If I ran this test without `remote: false`, it failed.\r\n\r\n```shell\r\nruby test/debug/session_test.rb\r\nLoaded suite test/debug/session_test\r\nStarted\r\n.F\r\n================================================================================\r\nFailure: test_session_starts_manually(DEBUGGER__::ConsoleStartTest):\r\n  Expected line number to be 5, but was 1\r\n\r\n  [DEBUG SESSION LOG]\r\n  > [1, 7] in /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210701-11874-3zc8c.rb\r\n  > =>    1| a = 1\r\n  >       2| b = 2\r\n  >       3| require ""debug""\r\n  >       4| DEBUGGER__.console\r\n  >       5| c = 3\r\n  >       6| binding.bp\r\n  >       7| ""foo""\r\n  > =>#0\t<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210701-11874-3zc8c.rb:1\r\n/Users/ono-max/workspace/debug/test/support/assertions.rb:8:in `block in assert_line_num\'\r\n/Users/ono-max/workspace/debug/test/support/utils.rb:87:in `block (2 levels) in create_pseudo_terminal\'\r\n/Users/ono-max/.rbenv/versions/3.0.0/lib/ruby/3.0.0/timeout.rb:97:in `block in timeout\'\r\n/Users/ono-max/.rbenv/versions/3.0.0/lib/ruby/3.0.0/timeout.rb:35:in `block in catch\'\r\n/Users/ono-max/.rbenv/versions/3.0.0/lib/ruby/3.0.0/timeout.rb:35:in `catch\'\r\n/Users/ono-max/.rbenv/versions/3.0.0/lib/ruby/3.0.0/timeout.rb:35:in `catch\'\r\n/Users/ono-max/.rbenv/versions/3.0.0/lib/ruby/3.0.0/timeout.rb:112:in `timeout\'\r\n/Users/ono-max/workspace/debug/test/support/utils.rb:79:in `block in create_pseudo_terminal\'\r\n/Users/ono-max/workspace/debug/test/support/utils.rb:75:in `spawn\'\r\n/Users/ono-max/workspace/debug/test/support/utils.rb:75:in `create_pseudo_terminal\'\r\n/Users/ono-max/workspace/debug/test/support/utils.rb:58:in `setup_terminal\'\r\n/Users/ono-max/workspace/debug/test/support/utils.rb:45:in `setup_terminal\'\r\n/Users/ono-max/workspace/debug/test/support/utils.rb:26:in `debug_code\'\r\ntest/debug/session_test.rb:20:in `test_session_starts_manually\'\r\n     17:     end\r\n     18:\r\n     19:     def test_session_starts_manually\r\n  => 20:       debug_code(program, boot_options: """") do\r\n     21:         assert_line_num(5)\r\n     22:         type \'quit\'\r\n     23:         type \'y\'\r\n================================================================================\r\n..\r\nFinished in 0.83998 seconds.\r\n--------------------------------------------------------------------------------\r\n4 tests, 9 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\r\n75% passed\r\n--------------------------------------------------------------------------------\r\n4.76 tests/s, 10.71 assertions/s\r\n```', 'comment_created': datetime.datetime(2021, 7, 1, 2, 35, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 661939306, 'comment_body': ""sorry that I initially thought it's a toggle like choosing either local or remote mode. but it looks like all tests are now tested in both local and remote mode, and `remote: false` is to skip the remote part, right?\r\n\r\nif that's the case, can you document this behavior (`debug_code` runs both local and remote mode) above the `debug_code` method?\r\n"", 'comment_created': datetime.datetime(2021, 7, 1, 3, 9, 1, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 661941050, 'comment_body': 'it\'d be great if we can add some comments to this section to make things clearer\r\n\r\n```ruby\r\n        # run test in local mode\r\n        cmd = ""#{__dir__}/../../exe/rdbg -A""\r\n        new_child_process(""#{RUBY} #{boot_options} #{temp_file_path}"")\r\n\r\n        # run test in remote mode\r\n        repl_prompt = /\\(rdb\\)/\r\n        create_pseudo_terminal(cmd, repl_prompt)\r\n        cmd = ""#{__dir__}/../../exe/rdbg -A #{RUBY_DEBUG_TEST_PORT}""\r\n        new_child_process(""#{__dir__}/../../exe/rdbg -O --port=#{RUBY_DEBUG_TEST_PORT} #{temp_file_path}"")\r\n```', 'comment_created': datetime.datetime(2021, 7, 1, 3, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 661950009, 'comment_body': ""> all tests are now tested in both local and remote mode, and remote: false is to skip the remote part, right?\r\n\r\nExactly 😄 \r\n\r\n> if that's the case, can you document this behavior (debug_code runs both local and remote mode) above the debug_code method?\r\n\r\nSure."", 'comment_created': datetime.datetime(2021, 7, 1, 3, 47, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 661954846, 'comment_body': 'https://github.com/ruby/debug/pull/76/files#diff-ee14bf65f14927f7778a246f90c5cec0c581be3e2658c2a8a3726c59db5be3f9R50-R62', 'comment_created': datetime.datetime(2021, 7, 1, 4, 4, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 661954973, 'comment_body': 'https://github.com/ruby/debug/pull/76/files#diff-ee14bf65f14927f7778a246f90c5cec0c581be3e2658c2a8a3726c59db5be3f9R21', 'comment_created': datetime.datetime(2021, 7, 1, 4, 4, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}]","[{'commit_sha': 'a54368e6607b1ab4771e6f7828fefea84ed74c4c', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0829da5599185d2a491102e3377afc4f5f399507', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '545a8b99d2237f45baeea15bff98cc6f6babc8e6', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea3f4716c098696d4c087e70dd4de81446c3c159', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
668884687,Improve test framework - remove test_console.rb,"It's better to remove `test_console.rb` because we don't have to maintain extra patches for tests. I did two things.
- change the place where INTERNAL_INFO is generated as a json
- modify PTY block",True,84,https://api.github.com/repos/ruby/debug/pulls/84,https://github.com/ruby/debug/pull/84,closed,19,48,5,2,2,14,0,0,[],2021-06-12 14:49:26+00:00,2021-06-17 07:26:53+00:00,405447.0,"4 days, 16:37:27","[{'comment_id': 650411272, 'comment_body': ""doesn't this mean all Ruby stdlib will be skipped? this changes how debugger works so probably should have more explanation.\r\nit's also not clear to me that why `JSON.generate` would trigger the `CheckBreakpoint`. we may want to fix this instead of skipping all the stdlib."", 'comment_created': datetime.datetime(2021, 6, 12, 16, 42, 56, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 650411577, 'comment_body': ""I'm curious about the first element of `@last_backlog`. is it the input value?"", 'comment_created': datetime.datetime(2021, 6, 12, 16, 46, 54, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 650411594, 'comment_body': '🎉 ', 'comment_created': datetime.datetime(2021, 6, 12, 16, 47, 8, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 650411986, 'comment_body': ""`require` should not be called inside a method that'll be repeatedly called. we can place it right before this method (e.g. line 191) and add a comment to say it's needed for generating internal info."", 'comment_created': datetime.datetime(2021, 6, 12, 16, 50, 39, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 650452692, 'comment_body': ""Yes, it's an input value such as `(rdbg) step`."", 'comment_created': datetime.datetime(2021, 6, 13, 0, 55, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 650452819, 'comment_body': 'Thanks! I will place it outside of this method.', 'comment_created': datetime.datetime(2021, 6, 13, 0, 56, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 650455009, 'comment_body': ""> doesn't this mean all Ruby stdlib will be skipped? this changes how debugger works so probably should have more explanation.\r\n\r\nExactly. I changed it.\r\n\r\n> it's also not clear to me that why JSON.generate would trigger the CheckBreakpoint.\r\n\r\nFYI, `if State === opts` in `generate` method is one of the triggers in this tracepoint.\r\nhttps://github.com/flori/json/blob/master/lib/json/common.rb#L297"", 'comment_created': datetime.datetime(2021, 6, 13, 1, 30, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 650621913, 'comment_body': 'I see. thanks for answering ', 'comment_created': datetime.datetime(2021, 6, 14, 2, 44, 59, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 652340959, 'comment_body': 'good catch. could you give me a call-stack when it is called? Maybe it should be change the test framework design.', 'comment_created': datetime.datetime(2021, 6, 16, 4, 29, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 652342286, 'comment_body': 'In general (without any reasons), `require` should be located at the beginning of file and it make easy to know what kind of libraries are uses in this file.', 'comment_created': datetime.datetime(2021, 6, 16, 4, 33, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 652382828, 'comment_body': 'Thanks, I put `require` in beginning of file.', 'comment_created': datetime.datetime(2021, 6, 16, 6, 20, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 652385200, 'comment_body': '```shell\r\n[""/Users/[user_name]/workspace/debug/lib/debug/breakpoint.rb:14:in `safe_eval\'"",\r\n""/Users/[user_name]/workspace/debug/lib/debug/breakpoint.rb:260:in `block in setup\'"",\r\n""/Users/[user_name]/.rbenv/versions/3.0.0/lib/ruby/3.0.0/json/common.rb:297:in `generate\'"",\r\n""/Users/[user_name]/workspace/debug/lib/debug/session.rb:193:in `wait_command\'"",\r\n""/Users/[user_name]/workspace/debug/lib/debug/session.rb:177:in `block (2 levels) in wait_command_loop\'"",\r\n""/Users/[user_name]/workspace/debug/lib/debug/session.rb:176:in `loop\'"",\r\n""/Users/[user_name]/workspace/debug/lib/debug/session.rb:176:in `block in wait_command_loop\'"",\r\n""/Users/[user_name]/workspace/debug/lib/debug/session.rb:816:in `block in stop_all_threads\'"",\r\n""<internal:trace_point>:196:in `enable\'"", ""/Users/[user_name]/workspace/debug/lib/debug/session.rb:815:in `stop_all_threads\'"", ""/Users/[user_name]/workspace/debug/lib/debug/session.rb:175:in `wait_command_loop\'"",\r\n""/Users/[user_name]/workspace/debug/lib/debug/session.rb:116:in `session_server_main\'"",\r\n""/Users/[user_name]/workspace/debug/lib/debug/session.rb:75:in `block in initialize\'""]\r\n```', 'comment_created': datetime.datetime(2021, 6, 16, 6, 25, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 652389622, 'comment_body': 'Are they what you want?', 'comment_created': datetime.datetime(2021, 6, 16, 6, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 652807843, 'comment_body': ""I'll fix it later."", 'comment_created': datetime.datetime(2021, 6, 16, 15, 33, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}]","[{'commit_sha': 'd8fc0a5acda7184c2cc9b8487080aa7ab1c1dbc1', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88d40fe9df571eb16bc918039004377d16370a51', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
669033023,Improve assert methods,"- Override assert_block method to call create_message only when test fails
- use assert_block to output clearer fail logs",False,86,https://api.github.com/repos/ruby/debug/pulls/86,https://github.com/ruby/debug/pull/86,closed,16,2,1,3,1,1,0,0,[],2021-06-13 10:58:28+00:00,2021-06-16 04:25:50+00:00,235642.0,"2 days, 17:27:22","[{'comment_id': 650515841, 'comment_body': ""I'm not sure if this is enough for requirements in License of test-unit.\r\nI'd like some advices"", 'comment_created': datetime.datetime(2021, 6, 13, 12, 4, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}]","[{'commit_sha': 'ab0edac799f425d8e456627130cfce432ce23b14', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '017a502252ce63df6a12b657565a57d1f5606598', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2c1ac33a3bf9a8c44031f275edf0ae6eff5470a', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
669518988,Improve assert methods [2nd pattern],"This is an another approach to improve assert methods.

- use assert_block to output clearer fail logs
- override ""to_s"" method in ""assert_block"" method
  - We don't have to modify `assert_block` in `test-unit`.
",True,88,https://api.github.com/repos/ruby/debug/pulls/88,https://github.com/ruby/debug/pull/88,closed,36,12,3,2,1,6,0,0,[],2021-06-14 12:21:28+00:00,2021-06-17 05:30:25+00:00,234537.0,"2 days, 17:08:57","[{'comment_id': 650902836, 'comment_body': ""I'm not sure if this is enough for requirements in License of test-unit.\r\nI'd like some advices"", 'comment_created': datetime.datetime(2021, 6, 14, 12, 30, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 652731367, 'comment_body': ""From my experience, we normally don't add project-specific helpers to a library's modules. We'd do this instead:\r\n\r\n```ruby\r\nmodule DEBUGGER__\r\n  module AssertionHelpers\r\n    include Test::Unit::Assertions # this may not be necessary\r\n\r\n    def assert_line_num(expected)\r\n      # .....\r\n    end\r\n\r\n# in test_case.rb\r\n\r\nmodule DEBUGGER__\r\n  class TestCase < Test::Unit::TestCase\r\n    include TestUtils\r\n    include AssertionHelpers\r\n\r\n```"", 'comment_created': datetime.datetime(2021, 6, 16, 14, 13, 9, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 653173510, 'comment_body': ""@st0012 \r\nThanks for giving me information. I'd like discuss more. Project-specific helpers are added to a library's modules in some ruby projects. What do you think?\r\n\r\nhttps://github.com/ruby/irb/blob/master/test/lib/test/unit/core_assertions.rb\r\nhttps://github.com/ruby/ruby/blob/master/tool/lib/test/unit/core_assertions.rb\r\nhttps://github.com/ruby/drb/blob/master/test/lib/core_assertions.rb"", 'comment_created': datetime.datetime(2021, 6, 17, 2, 9, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 653184774, 'comment_body': 'If we run tests of different projects in a process, it is a bit safer to isolate the definitions.\r\n', 'comment_created': datetime.datetime(2021, 6, 17, 2, 43, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 653199590, 'comment_body': 'I see. I changed it.', 'comment_created': datetime.datetime(2021, 6, 17, 3, 32, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 653203249, 'comment_body': 'Should I include this class in `module DEBUGGER__`?', 'comment_created': datetime.datetime(2021, 6, 17, 3, 45, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}]","[{'commit_sha': '5db9ae2706b79648f7ced887a4458f0df2c7a47b', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb02d2ed9da7e2acce36ce7d84683f5ae80a034e', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
671281205,Improve the algorithm in create message method,"Change `""#{fail_msg}\n[DEBUG SESSION LOG]\n"" + @backlog.map { |l| ""> #{l}"" }.join` to `""#{fail_msg}\n[DEBUG SESSION LOG]\n> "" + @backlog.join('> ')`


### Benchmark code
```ruby
require 'benchmark'

@backlog = [""[1, 10] in /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210616-11566-40d1gt.rb\r\n"", ""=>    1| class TestException < StandardError; end\r\n"", ""      2| \r\n"", ""      3| module Foo\r\n"", ""      4|   class TestException < StandardError; end\r\n"", ""      5| \r\n"", ""      6|   def self.raised_exception\r\n"", ""      7|     raise TestException\r\n"", ""      8|   end\r\n"", ""      9| end\r\n"", ""     10| \r\n"", ""=>#0\t<class:TestException> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210616-11566-40d1gt.rb:1\r\n"", ""  #1\t<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210616-11566-40d1gt.rb:1\r\n"", ""\e[?2004h\r\n"", ""(rdbg)\r\n"", ""catch Foo::TestException\r\n"", ""\e[?2004l\r#0  BP - Catch  \""Foo::TestException\""\r\n"", ""\e[?2004h\r\n"", ""(rdbg)\r\n"", ""continue\r\n"", ""\e[?2004l\r[2, 11] in /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210616-11566-40d1gt.rb\r\n"", ""      2| \r\n"", ""      3| module Foo\r\n"", ""      4|   class TestException < StandardError; end\r\n"", ""      5| \r\n"", ""      6|   def self.raised_exception\r\n"", ""=>    7|     raise TestException\r\n"", ""      8|   end\r\n"", ""      9| end\r\n"", ""     10| \r\n"", ""     11| # we need this rescue + binding.bp workaround because the test framework can't handle exception exit yet\r\n"", ""=>#0\tFoo.raised_exception at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210616-11566-40d1gt.rb:7\r\n"", ""  #1\t<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210616-11566-40d1gt.rb:12\r\n"", ""\r\n"", ""Stop by # BP - Catch  \""Foo::TestException\"" 0\r\n"", ""\e[?2004h\r\n""]

# before
def create_message fail_msg
  ""#{fail_msg}\n[DEBUG SESSION LOG]\n"" + @backlog.map { |l| ""> #{l}"" }.join
end

# after
def create_message_2 fail_msg
  ""#{fail_msg}\n[DEBUG SESSION LOG]\n"" + @backlog.join('> ')
end

n = 50000

Benchmark.bm do |x|
  x.report { n.times do create_message('hoge') end }
  x.report { n.times do create_message_2('hoge') end }
end
```

### Result
```shell
$ ruby sample.rb
       user     system      total        real
# before
   0.538262   0.002248   0.540510 (  0.540644)
# after
   0.198866   0.007301   0.206167 (  0.206377)
```

### Output

There is no difference between before and after.

#### Before

```shell
[DEBUG SESSION LOG]
  > [1, 4] in /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210616-39579-exut9u.rb
  > =>    1| a = 1
  >       2| b = 2
  >       3|
  >       4| 1/0
  > =>#0	<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210616-39579-exut9u.rb:1
  >
  > (rdbg)
  > catch ZeroDivisionError
#0  BP - Catch  ""ZeroDivisionError""
  >
  > (rdbg)
  > continue
# No sourcefile available for /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210616-39579-exut9u.rb
  > =>#0	[C] Integer#/ at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210616-39579-exut9u.rb:4
  >   #1	<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210616-39579-exut9u.rb:4
  >
  > Stop by #0  BP - Catch  ""ZeroDivisionError""
  >
```

#### After
```shell
  [DEBUG SESSION LOG]
  > [1, 4] in /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210616-31917-665okl.rb
  > =>    1| a = 1
  >       2| b = 2
  >       3|
  >       4| 1/0
  > =>#0	<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210616-31917-665okl.rb:1
  >
  > (rdbg)
  > catch ZeroDivisionError
#0  BP - Catch  ""ZeroDivisionError""
  >
  > (rdbg)
  > continue
# No sourcefile available for /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210616-31917-665okl.rb
  > =>#0	[C] Integer#/ at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210616-31917-665okl.rb:4
  >   #1	<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210616-31917-665okl.rb:4
  >
  > Stop by # BP - Catch  ""ZeroDivisionError"" 0
  >
```",True,93,https://api.github.com/repos/ruby/debug/pulls/93,https://github.com/ruby/debug/pull/93,closed,1,1,1,1,2,0,0,0,[],2021-06-16 09:56:23+00:00,2021-06-16 15:24:28+00:00,19685.0,5:28:05,[],"[{'commit_sha': '34cb5e03c6a4e5cdc484b2264324c0df3ce52a8a', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
672223684,Fix #97,,True,99,https://api.github.com/repos/ruby/debug/pulls/99,https://github.com/ruby/debug/pull/99,closed,2,0,1,1,0,0,0,0,[],2021-06-17 05:25:55+00:00,2021-06-17 05:27:40+00:00,105.0,0:01:45,[],"[{'commit_sha': 'cacfd4b1b6c3b8ca976b409e075a84d061ab7005', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
672245789,Rename MessageCreationController,"`MessageCreationController` is not a clear name, @ko1 said. I did rename `MessageCreationController` to `FailureMessage`.",True,100,https://api.github.com/repos/ruby/debug/pulls/100,https://github.com/ruby/debug/pull/100,closed,4,4,1,1,0,5,0,0,[],2021-06-17 05:57:39+00:00,2021-06-18 03:37:31+00:00,77992.0,21:39:52,"[{'comment_id': 653253059, 'comment_body': 'imo class name should be a ""thing"" instead of an ""action"". for example: `AssertionMessageComposer`.', 'comment_created': datetime.datetime(2021, 6, 17, 6, 9, 58, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 653294385, 'comment_body': 'Oh, I see... 🤔 Thank you!', 'comment_created': datetime.datetime(2021, 6, 17, 7, 20, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 653562604, 'comment_body': ""Let me put it this way: if `ComposeMessageWhenFailed` can be performed directly, like `ComposeMessageWhenFailed.perform`, I think it's a proper name. Many Rails users do name their job classes this way because the API is `SomeJob.perform_later`.\r\n\r\nBut in this case, we need to initialize an instance of the class, naming it after an action (verb) is semantically wrong. Because a verb (compose), can not have instances.\r\n\r\n(I hope you can understand it. I'm not a native speaker so it's hard for me to explain this concept.)"", 'comment_created': datetime.datetime(2021, 6, 17, 13, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 654008191, 'comment_body': 'Yeah, maybe It does make sense to me. If this class is used as a class method, the name of class can be verb, but if this class is used as an instance, it should be not verb. Did I get that right?', 'comment_created': datetime.datetime(2021, 6, 17, 22, 23, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 654119479, 'comment_body': '@ono-max exactly 😄 ', 'comment_created': datetime.datetime(2021, 6, 18, 3, 39, 6, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}]","[{'commit_sha': '32b450907684efcfd2ac15c6c1dbcc53988fa2fd', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
673807592,fix #106,,True,107,https://api.github.com/repos/ruby/debug/pulls/107,https://github.com/ruby/debug/pull/107,closed,1,1,1,1,0,0,0,0,[],2021-06-19 02:39:49+00:00,2021-06-22 15:15:47+00:00,304558.0,"3 days, 12:35:58",[],"[{'commit_sha': 'ee1a8447352989d6e2939632d824cae190e73549', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
673810048,fix #108,,True,109,https://api.github.com/repos/ruby/debug/pulls/109,https://github.com/ruby/debug/pull/109,closed,1,0,1,1,0,3,0,0,[],2021-06-19 03:02:29+00:00,2021-06-22 15:16:04+00:00,303215.0,"3 days, 12:13:35","[{'comment_id': 654742394, 'comment_body': 'perhaps Array#clear conveys the intention better?', 'comment_created': datetime.datetime(2021, 6, 19, 3, 44, 30, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 654742608, 'comment_body': 'I think so too. Thanks.', 'comment_created': datetime.datetime(2021, 6, 19, 3, 46, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 654742949, 'comment_body': 'https://github.com/ruby/debug/pull/109/files#diff-ee14bf65f14927f7778a246f90c5cec0c581be3e2658c2a8a3726c59db5be3f9R67', 'comment_created': datetime.datetime(2021, 6, 19, 3, 50, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}]","[{'commit_sha': '6bc4296a9b9a57bf925c6565141ef431d783aba0', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
675828498,Support multiple assertions after one command,"@st0012 pointed out the problem that test framework doesn't support multiple assert methods after one command.
https://github.com/ruby/debug/pull/103#discussion_r656355053
This PR will fix it.",True,112,https://api.github.com/repos/ruby/debug/pulls/112,https://github.com/ruby/debug/pull/112,closed,1,1,1,1,0,0,0,0,[],2021-06-22 23:48:10+00:00,2021-06-28 07:31:35+00:00,459805.0,"5 days, 7:43:25",[],"[{'commit_sha': '895a66ba2a9d316999db4d375d74662c39526f26', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
682215983,fix #119,,True,120,https://api.github.com/repos/ruby/debug/pulls/120,https://github.com/ruby/debug/pull/120,closed,4,2,1,1,0,0,0,0,[],2021-07-01 22:54:00+00:00,2021-07-02 01:39:52+00:00,9952.0,2:45:52,[],"[{'commit_sha': '161ab389b3fdd5d9ae50eb50302ee0a58a7a648c', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
683289515,fix part of #118,"This PR will fix `Errno::EMFILE: Too many open files - fork failed`, not to fix issue #118 completely because it won't fix `Timeout Error`.",True,126,https://api.github.com/repos/ruby/debug/pulls/126,https://github.com/ruby/debug/pull/126,closed,4,2,1,1,0,0,0,0,[],2021-07-05 01:41:03+00:00,2021-07-05 01:43:49+00:00,166.0,0:02:46,[],"[{'commit_sha': '50786182af481c6e4ea7d0a2e50e4e2c4ee1c967', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
683330156,Improve assert line text method,improve the regexp pattern in assert_line_text,True,127,https://api.github.com/repos/ruby/debug/pulls/127,https://github.com/ruby/debug/pull/127,closed,11,11,3,2,0,0,0,0,[],2021-07-05 03:53:07+00:00,2021-07-05 11:45:46+00:00,28359.0,7:52:39,[],"[{'commit_sha': 'a128e9ca01cc6d207f272f0ca60d31026499b5d3', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '862c3df8b446a6a2c4e7fb97caaaca1e3d4d0a44', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
683446873,Improve test framework,"Currently, `check_line_num` method will be executed after the test finished. The line numbers should be checked first because `test/assertion_helper_test.rb` and `test/test_utils_test.rb` will exit before `check_line_num` method is executed. This PR will fix it.

I also changed constant variable(`DEBUG_MODE`) to ENV variable(`ENV[""RUBY_DEBUG_TEST_DEBUG_MODE""]`).",True,129,https://api.github.com/repos/ruby/debug/pulls/129,https://github.com/ruby/debug/pull/129,closed,6,7,4,4,0,11,0,0,[],2021-07-05 07:41:48+00:00,2021-07-06 04:41:55+00:00,75607.0,21:00:07,"[{'comment_id': 663735534, 'comment_body': ""I'd love to see it become a env var so I can always enable it locally. wdyt?"", 'comment_created': datetime.datetime(2021, 7, 5, 8, 24, 8, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 663741039, 'comment_body': '@st0012 \r\nCould you explain me more? I just moved `check_line_num` up. It is always enable, right?', 'comment_created': datetime.datetime(2021, 7, 5, 8, 31, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 663741254, 'comment_body': 'I mean can we make this:\r\n\r\n```ruby\r\nDEBUG_MODE = ENV[""RUBY_DEBUG_TEST_DEBUG_MODE""]\r\n```\r\n\r\nso I don\'t need to change the code to enabled it. like what you did and forgot to change it back (I\'ve done this a lot too 😂 ).', 'comment_created': datetime.datetime(2021, 7, 5, 8, 32, 1, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 663748663, 'comment_body': ""Oh, ok. I thought you were talking about `check_line_num`. I'll change `DEBUG_MODE`, too."", 'comment_created': datetime.datetime(2021, 7, 5, 8, 42, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 663753462, 'comment_body': 'fccf992', 'comment_created': datetime.datetime(2021, 7, 5, 8, 49, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 663849894, 'comment_body': 'shouldn\'t this be \r\n\r\n```ruby\r\nprint msg if ENV[\'RUBY_DEBUG_TEST_DEBUG_MODE\'] != ""false""\r\n```\r\nbecause it\'s a string instead of boolean?', 'comment_created': datetime.datetime(2021, 7, 5, 11, 15, 42, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 663873730, 'comment_body': 'Thanks! That was my mistake.', 'comment_created': datetime.datetime(2021, 7, 5, 11, 56, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 663886383, 'comment_body': 'thanks 👍 ', 'comment_created': datetime.datetime(2021, 7, 5, 12, 18, 3, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 664038564, 'comment_body': ""`if ENV['RUBY_DEBUG_TEST_DEBUG_MODE']` ?"", 'comment_created': datetime.datetime(2021, 7, 5, 16, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 664208739, 'comment_body': 'I changed it.', 'comment_created': datetime.datetime(2021, 7, 6, 3, 18, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 664208832, 'comment_body': 'https://github.com/ruby/debug/pull/129/files#diff-ee14bf65f14927f7778a246f90c5cec0c581be3e2658c2a8a3726c59db5be3f9R39', 'comment_created': datetime.datetime(2021, 7, 6, 3, 19, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}]","[{'commit_sha': 'bbdb15af2b3a5be850ce7259d00e55ff5266f700', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d03ce0b4730b4ed48336e035ccc6fd8bbb09152', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90196f33f392b506951c44bc865f44b07201da83', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5cc039e9956ca8e5fd1058334c644255ef80207', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
683990830,Improve debug log -add remote debuggee backlog,"Now, logs of `remote debugee` doesn't show in failure message. This PR fix it.

### Example
```shell
Failure: test_foo(DEBUGGER__::FooTest):
  TIMEOUT ERROR (10 sec) on UNIX DOMAIN SOCKET mode
  [DEBUGGER SESSION LOG]
  > [1, 9] in /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb
  > =>    1| module Foo
  >       2|   class Bar
  >       3|     def self.a
  >       4|       p ""hello""
  >       5|     end
  >       6|   end
  >       7|   Bar.a
  >       8|   bar = Bar.new
  >       9| end
  > =>#0	<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb:1
  > s
  >
  > (rdbg:remote) s
[1, 9] in /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb
  >       1| module Foo
  > =>    2|   class Bar
  >       3|     def self.a
  >       4|       p ""hello""
  >       5|     end
  >       6|   end
  >       7|   Bar.a
  >       8|   bar = Bar.new
  >       9| end
  > =>#0	<module:Foo> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb:2
  >   #1	<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb:1
  >
  > (rdbg:remote) s
[1, 9] in /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb
  >       1| module Foo
  >       2|   class Bar
  > =>    3|     def self.a
  >       4|       p ""hello""
  >       5|     end
  >       6|   end
  >       7|   Bar.a
  >       8|   bar = Bar.new
  >       9| end
  > =>#0	<class:Bar> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb:3
  >   #1	<module:Foo> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb:2
  >   #2	<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb:1
  >
  > (rdbg:remote) s
[2, 9] in /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb
  >       2|   class Bar
  >       3|     def self.a
  >       4|       p ""hello""
  >       5|     end
  >       6|   end
  > =>    7|   Bar.a
  >       8|   bar = Bar.new
  >       9| end
  > =>#0	<module:Foo> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb:7
  >   #1	<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb:1
  > s
  >
  > (rdbg:remote) s
[1, 9] in /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb
  >       1| module Foo
  >       2|   class Bar
  >       3|     def self.a
  > =>    4|       p ""hello""
  >       5|     end
  >       6|   end
  >       7|   Bar.a
  >       8|   bar = Bar.new
  >       9| end
  > =>#0	Foo::Bar.a at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb:4
  >   #1	<module:Foo> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb:7
  >   #2	<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb:1
  > s
  >
  > (rdbg:remote) s
[1, 9] in /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb
  >       1| module Foo
  >       2|   class Bar
  >       3|     def self.a
  >       4|       p ""hello""
  > =>    5|     end
  >       6|   end
  >       7|   Bar.a
  >       8|   bar = Bar.new
  >       9| end
  > =>#0	Foo::Bar.a at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb:5 #=> ""hello""
  >   #1	<module:Foo> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb:7
  >   #2	<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb:1
  > s
  >
  > (rdbg:remote) s
[3, 9] in /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb
  >       3|     def self.a
  >       4|       p ""hello""
  >       5|     end
  >       6|   end
  >       7|   Bar.a
  > =>    8|   bar = Bar.new
  >       9| end
  > =>#0	<module:Foo> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb:8
  >   #1	<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210706-45047-efy1kk.rb:1

  [DEBUGGEE SESSION LOG]
  > EBUGGER: Debugger can attach via UNIX domain socket (/Users/naotto/.ruby-debug-sock/ruby-debug-naotto-45078)
  > DEBUGGER: wait for debuger connection...
  > DEBUGGER: Connected.
  > ""hello""
   .
  <false> is not true.
/Users/naotto/workspace/debug/test/support/utils.rb:146:in `rescue in block in run_test_scenario'
/Users/naotto/workspace/debug/test/support/utils.rb:141:in `block in run_test_scenario'
/Users/naotto/workspace/debug/test/support/utils.rb:102:in `spawn'
/Users/naotto/workspace/debug/test/support/utils.rb:102:in `run_test_scenario'
/Users/naotto/workspace/debug/test/support/utils.rb:81:in `debug_on_unix_domain_socket'
/Users/naotto/workspace/debug/test/support/utils.rb:44:in `debug_code'
test/debug/foo_test.rb:22:in `test_foo'
     19:     end
     20:
     21:     def test_foo
  => 22:       debug_code(program) do
     23:         type 's'
     24:         type 's'
     25:         type 's'
```shell",True,132,https://api.github.com/repos/ruby/debug/pulls/132,https://github.com/ruby/debug/pull/132,closed,23,6,1,2,0,4,0,0,[],2021-07-06 00:54:13+00:00,2021-07-06 04:41:14+00:00,13621.0,3:47:01,"[{'comment_id': 664174601, 'comment_body': 'I need to change this part to output complete backlog(In the above example, this would be `""hello""`) in remote deguggee.', 'comment_created': datetime.datetime(2021, 7, 6, 1, 10, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 664181251, 'comment_body': 'it can raise EIO error, so you need to rescue it.', 'comment_created': datetime.datetime(2021, 7, 6, 1, 37, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 664189720, 'comment_body': ""Thanks!\r\nI'll change it."", 'comment_created': datetime.datetime(2021, 7, 6, 2, 9, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 664208396, 'comment_body': 'https://github.com/ruby/debug/pull/132/files#diff-ee14bf65f14927f7778a246f90c5cec0c581be3e2658c2a8a3726c59db5be3f9R27', 'comment_created': datetime.datetime(2021, 7, 6, 3, 17, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}]","[{'commit_sha': '713b74591df7536e1bbd54ce820472083c535f3b', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfb1b0a3a771ea5d891e66e0b97ac365c7da6a3c', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
684128594,remove manual_debug_code method,We don't have to take a few step in #75 because we can use [test-builder](https://github.com/ruby/debug/pull/111),False,135,https://api.github.com/repos/ruby/debug/pulls/135,https://github.com/ruby/debug/pull/135,closed,0,21,1,1,2,0,0,0,[],2021-07-06 07:31:42+00:00,2021-07-06 07:32:54+00:00,72.0,0:01:12,[],"[{'commit_sha': '6b50fbf446ca8e20c93f165fa2b70c3d5c195a7c', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
686462045,Check if there are any errors in @last_backlog,"### Example target file
```ruby
# frozen_string_literal: true

require_relative '../support/test_case'

module DEBUGGER__
  class BindingBPWithCommandTest < TestCase
    def program
      <<~RUBY
      1| at_exit{
      2|   binding.bp
      3|   eval('a = 1')
      4|   Thread.new{}
      5| }
      6|
      7| binding.bp(command: 'q!')
      RUBY
    end

    def test_foo
      debug_code(program) do
        type 's'
        type 'n'
      end
    end
  end
end

```

### Before
Current test framework doesn't check if there are any errors in @last_backlog after `q!`.
```shell
$ RUBY_DEBUG_TEST_NO_REMOTE=1 ruby test/debug/foo_test.rb
Loaded suite test/debug/foo_test
Started
.
Finished in 0.560616 seconds.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1 tests, 1 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications
100% passed
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1.78 tests/s, 1.78 assertions/s
```
### After
```shell
$ RUBY_DEBUG_TEST_NO_REMOTE=1 ruby test/debug/foo_test.rb
Loaded suite test/debug/foo_test
Started
E
================================================================================================================================================================================================================================================================================
Error: test_foo(DEBUGGER__::BindingBPWithCommandTest):
  RuntimeError: Debugger terminated because of: Traceback (most recent call last):
  	4: from /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210709-56507-1wv0lsb.rb:2:in `block in <main>'
  	3: from /Users/naotto/workspace/debug/lib/debug/thread_client.rb:207:in `block in step_tp'
  	2: from /Users/naotto/workspace/debug/lib/debug/thread_client.rb:182:in `on_suspend'
  	1: from /Users/naotto/workspace/debug/lib/debug/thread_client.rb:463:in `wait_next_action'
  /Users/naotto/workspace/debug/lib/debug/session.rb:1094:in `check_forked': DEBUGGER: stop at forked process is not supported yet. (RuntimeError)
   on LOCAL mode
  [DEBUGGER SESSION LOG]
  > DEBUGGER: Session start (pid: 56535)
  > DEBUGGER: Thread #1 is created.
  > DEBUGGER: Thread #2 is created.
  > DEBUGGER: Load /private/var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210709-56507-1wv0lsb.rb
  > [1, 7] in /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210709-56507-1wv0lsb.rb
  > =>    1| at_exit{
  >       2|   binding.bp
  >       3|   eval('a = 1')
  >       4|   Thread.new{}
  >       5| }
  >       6|
  >       7| binding.bp(command: 'q!')
  > =>#0	<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210709-56507-1wv0lsb.rb:1
  > s
  >
  > (rdbg) s
[2, 7] in /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210709-56507-1wv0lsb.rb
  >       2|   binding.bp
  >       3|   eval('a = 1')
  >       4|   Thread.new{}
  >       5| }
  >       6|
  > =>    7| binding.bp(command: 'q!')
  > =>#0	<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210709-56507-1wv0lsb.rb:7
  > n
  >
  > (rdbg) n
[2, 7] in /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210709-56507-1wv0lsb.rb
  >       2|   binding.bp
  >       3|   eval('a = 1')
  >       4|   Thread.new{}
  >       5| }
  >       6|
  > =>    7| binding.bp(command: 'q!')
  > =>#0	<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210709-56507-1wv0lsb.rb:7
  > (rdbg:binding.bp(command:)) q!
  > [""/Users/naotto/workspace/debug/lib/debug/thread_client.rb"",
  >  638,
  >  #<RuntimeError: DEBUGGER: stop at forked process is not supported yet.>,
  >  [""/Users/naotto/workspace/debug/lib/debug/session.rb:1094:in `check_forked'"",
  >   ""/Users/naotto/workspace/debug/lib/debug/thread_client.rb:463:in `wait_next_action'"",
  >   ""/Users/naotto/workspace/debug/lib/debug/thread_client.rb:182:in `on_suspend'"",
  >   ""/Users/naotto/workspace/debug/lib/debug/thread_client.rb:207:in `block in step_tp'"",
  >   ""/var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210709-56507-1wv0lsb.rb:2:in `block in <main>'""]]
  > Traceback (most recent call last):
  > 	4: from /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210709-56507-1wv0lsb.rb:2:in `block in <main>'
  > 	3: from /Users/naotto/workspace/debug/lib/debug/thread_client.rb:207:in `block in step_tp'
  > 	2: from /Users/naotto/workspace/debug/lib/debug/thread_client.rb:182:in `on_suspend'
  > 	1: from /Users/naotto/workspace/debug/lib/debug/thread_client.rb:463:in `wait_next_action'
  > /Users/naotto/workspace/debug/lib/debug/session.rb:1094:in `check_forked': DEBUGGER: stop at forked process is not supported yet. (RuntimeError)
/Users/naotto/workspace/debug/test/support/utils.rb:155:in `check_error'
/Users/naotto/workspace/debug/test/support/utils.rb:131:in `block (2 levels) in run_test_scenario'
/Users/naotto/.rbenv/versions/2.7.0/lib/ruby/2.7.0/timeout.rb:95:in `block in timeout'
/Users/naotto/.rbenv/versions/2.7.0/lib/ruby/2.7.0/timeout.rb:33:in `block in catch'
/Users/naotto/.rbenv/versions/2.7.0/lib/ruby/2.7.0/timeout.rb:33:in `catch'
/Users/naotto/.rbenv/versions/2.7.0/lib/ruby/2.7.0/timeout.rb:33:in `catch'
/Users/naotto/.rbenv/versions/2.7.0/lib/ruby/2.7.0/timeout.rb:110:in `timeout'
/Users/naotto/workspace/debug/test/support/utils.rb:103:in `block in run_test_scenario'
/Users/naotto/workspace/debug/test/support/utils.rb:99:in `spawn'
/Users/naotto/workspace/debug/test/support/utils.rb:99:in `run_test_scenario'
/Users/naotto/workspace/debug/test/support/utils.rb:76:in `debug_on_local'
/Users/naotto/workspace/debug/test/support/utils.rb:46:in `debug_code'
test/debug/foo_test.rb:20:in `test_foo'
     17:     end
     18:
     19:     def test_foo
  => 20:       debug_code(program) do
     21:         type 's'
     22:         type 'n'
     23:       end
================================================================================================================================================================================================================================================================================

Finished in 0.554391 seconds.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications
0% passed
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1.80 tests/s, 0.00 assertions/s
```",True,150,https://api.github.com/repos/ruby/debug/pulls/150,https://github.com/ruby/debug/pull/150,closed,8,3,1,1,0,0,0,0,[],2021-07-09 03:30:29+00:00,2021-07-09 05:11:36+00:00,6067.0,1:41:07,[],"[{'commit_sha': 'c0f6e9c11539e0e6781d4e65e21cc54740d96bc0', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
696416918,Add inspect method for clearer failure messages,"The `(?-mix:~` is hard to make sense in failure message. I add `inspect` method for human-readable object.
### Before
```shell
Failure: test_quit_quits_debugger_process_if_confirmed(DEBUGGER__::QuitTest):
  Expected to include `(?-mix:Really quit\? \[Y\/n\]hoge)` in
  (
Really quit? [Y/n] y
  )

```
### After
```shell
Failure: test_quit_quits_debugger_process_if_confirmed(DEBUGGER__::QuitTest):
  Expected to include `/Really quit\? \[Y\/n\]hoge/` in
  (
  y
  (rdbg) q
Really quit? [Y/n] y
  )
```",True,196,https://api.github.com/repos/ruby/debug/pulls/196,https://github.com/ruby/debug/pull/196,closed,7,7,2,2,0,0,0,0,[],2021-07-24 23:17:43+00:00,2021-07-27 09:19:39+00:00,208916.0,"2 days, 10:01:56",[],"[{'commit_sha': '5cb2e0bc347e4c9762622e5bfbd99fa08d1df64a', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eda930bdd23f7433118acbd8ded1a3f35c20a625', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
701007721,Make sure to enable `check_line_num` only when Github Workflow.,"As https://github.com/ruby/debug/pull/209#discussion_r680291109, we need the option for disabling `check_line_num!` method. I added the environment variable in `utils.rb` and `ruby.yml` to make `check_line_num!` valid only when Github Workflow.

Of course, we can also enable it in local environment by adding environment variable such as
```shell
$ RUBY_DEBUG_TEST_CHECK_LINE_NUM=true rake test
```",False,210,https://api.github.com/repos/ruby/debug/pulls/210,https://github.com/ruby/debug/pull/210,closed,3,1,2,1,7,0,0,0,[],2021-08-01 23:34:54+00:00,2021-08-02 23:13:41+00:00,85127.0,23:38:47,[],"[{'commit_sha': '5334c315df3d982702e8e2e18ccc441f2568d43f', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
717066235,Add assert_finish method to output clear failure messages when the test is not finished correctly,"Current test framework will raise TimeoutError if the test isn't finished correctly as follows. However, it's hard for users to make sense the meaning of errors. That's why I added `assert_finish` method to output clear failure messages.

### Before
```shell
Failure: test_outline_lists_local_variables(DEBUGGER__::OutlineTest):
  #<Test::Unit::AssertionFailedError: TIMEOUT ERROR (10 sec) on LOCAL mode
  [DEBUGGER SESSION LOG]
  > DEBUGGER: Session start (pid: 11262)
  > [1, 10] in /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210821-11224-gdmbfn.rb
  > =>   1| class Foo
  >      2|   def initialize
  >      3|     @var = ""foobar""
  >      4|   end
  >      5|
  >      6|   def bar; end
  >      7|   def self.baz; end
  >      8| end
  >      9|
  >     10| foo = Foo.new
  > =>#0	<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210821-11224-gdmbfn.rb:1
  > c
  > (rdbg) c
[7, 12] in /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210821-11224-gdmbfn.rb
  >      7|   def self.baz; end
  >      8| end
  >      9|
  >     10| foo = Foo.new
  >     11|
  > =>  12| binding.b
  > =>#0	<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210821-11224-gdmbfn.rb:12
  > (rdbg) outline
Object.methods: inspect  to_s
  > locals: foo
  .>.
/Users/naotto/workspace/debug/test/support/assertions.rb:66:in `assert_block'
/Users/naotto/workspace/debug/test/support/utils.rb:64:in `rescue in debug_code'
/Users/naotto/workspace/debug/test/support/utils.rb:52:in `debug_code'
test/debug/outline_test.rb:25:in `test_outline_lists_local_variables'
     22:     end
     23:
     24:     def test_outline_lists_local_variables
  => 25:       debug_code(program) do
     26:         type 'c'
     27:         type 'outline'
     28:         # assert_line_text(/locals: foo/)
```

### After
```shell
Failure: test_outline_lists_local_variables(DEBUGGER__::OutlineTest):
  #<Test::Unit::AssertionFailedError: Expected the debugger program to finish on LOCAL mode
  [DEBUGGER SESSION LOG]
  > DEBUGGER: Session start (pid: 11196)
  > [1, 10] in /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210821-11158-88f9a8.rb
  > =>   1| class Foo
  >      2|   def initialize
  >      3|     @var = ""foobar""
  >      4|   end
  >      5|
  >      6|   def bar; end
  >      7|   def self.baz; end
  >      8| end
  >      9|
  >     10| foo = Foo.new
  > =>#0	<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210821-11158-88f9a8.rb:1
  > c
  > (rdbg) c
[7, 12] in /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210821-11158-88f9a8.rb
  >      7|   def self.baz; end
  >      8| end
  >      9|
  >     10| foo = Foo.new
  >     11|
  > =>  12| binding.b
  > =>#0	<main> at /var/folders/kv/w1k6nh1x5fl7vx47b2pd005w0000gn/T/debugger20210821-11158-88f9a8.rb:12
  > (rdbg) outline
Object.methods: inspect  to_s
  > locals: foo
  .>.
/Users/naotto/workspace/debug/test/support/assertions.rb:66:in `assert_block'
/Users/naotto/workspace/debug/test/support/utils.rb:64:in `rescue in debug_code'
/Users/naotto/workspace/debug/test/support/utils.rb:52:in `debug_code'
test/debug/outline_test.rb:25:in `test_outline_lists_local_variables'
     22:     end
     23:
     24:     def test_outline_lists_local_variables
  => 25:       debug_code(program) do
     26:         type 'c'
     27:         type 'outline'
     28:         # assert_line_text(/locals: foo/)
```",True,230,https://api.github.com/repos/ruby/debug/pulls/230,https://github.com/ruby/debug/pull/230,closed,19,7,2,4,2,0,0,0,[],2021-08-21 01:19:47+00:00,2021-08-28 21:31:22+00:00,677495.0,"7 days, 20:11:35",[],"[{'commit_sha': 'cee83fa3485aa46707aa6ad0dd1f704546bee57c', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad2cd585056d177707a2e5f958948a9f16ccf38d', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd1f237e2381035169a8f6ab7e746fe6b264fe0d', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0d91d87a4924853735102e1a8f3ab5654a577e1', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
674028907,test builder,"https://user-images.githubusercontent.com/59436572/122718083-74730b00-d2a7-11eb-9db2-c50a117175ce.mov

### What's this?

This is a test generator to make it easier to write tests.

## Generate Tests
There is a test generator in `debug.rb` project to make it easier to write tests.
### Quickstart
This section shows you how to create test file by test generator. For more advanced informations on creating tests, please take a look at [gentest options](#gentest-options). (You can also check by `$bin/gentest -h`)
#### 1. Create a target file for debuggee.
Let's say, we created `target.rb` which is located in top level directory of debugger.
```ruby
module Foo
  class Bar
    def self.a
      ""hello""
    end
  end
  Bar.a
  bar = Bar.new
end
```
#### 2. Run `gentest` as shown in the example below.
```shell
$ bin/gentest target.rb
```
#### 3. Debugger will be executed. You can type any debug commands.
```shell
$ bin/gentest target.rb
[1, 9] in ~/workspace/debug/target.rb
=>    1| module Foo
      2|   class Bar
      3|     def self.a
      4|       ""hello""
      5|     end
      6|   end
      7|   Bar.a
      8|   bar = Bar.new
      9| end
=>#0	<main> at ~/workspace/debug/target.rb:1
INTERNAL_INFO: {""location"":""~/workspace/debug/target.rb:1"",""line"":1}

(rdbg)s
 s
[1, 9] in ~/workspace/debug/target.rb
      1| module Foo
=>    2|   class Bar
      3|     def self.a
      4|       ""hello""
      5|     end
      6|   end
      7|   Bar.a
      8|   bar = Bar.new
      9| end
=>#0	<module:Foo> at ~/workspace/debug/target.rb:2
  #1	<main> at ~/workspace/debug/target.rb:1
INTERNAL_INFO: {""location"":""~/workspace/debug/target.rb:2"",""line"":2}

(rdbg)n
 n
[1, 9] in ~/workspace/debug/target.rb
      1| module Foo
      2|   class Bar
=>    3|     def self.a
      4|       ""hello""
      5|     end
      6|   end
      7|   Bar.a
      8|   bar = Bar.new
      9| end
=>#0	<class:Bar> at ~/workspace/debug/target.rb:3
  #1	<module:Foo> at ~/workspace/debug/target.rb:2
  #2	<main> at ~/workspace/debug/target.rb:1
INTERNAL_INFO: {""location"":""~/workspace/debug/target.rb:3"",""line"":3}

(rdbg)b 7
 b 7
#0  BP - Line  /Users/naotto/workspace/debug/target.rb:7 (line)
INTERNAL_INFO: {""location"":""~/workspace/debug/target.rb:3"",""line"":3}

(rdbg)c
 c
[2, 9] in ~/workspace/debug/target.rb
      2|   class Bar
      3|     def self.a
      4|       ""hello""
      5|     end
      6|   end
=>    7|   Bar.a
      8|   bar = Bar.new
      9| end
=>#0	<module:Foo> at ~/workspace/debug/target.rb:7
  #1	<main> at ~/workspace/debug/target.rb:1

Stop by #0  BP - Line  /Users/naotto/workspace/debug/target.rb:7 (line)
INTERNAL_INFO: {""location"":""~/workspace/debug/target.rb:7"",""line"":7}

(rdbg)q!
 q!
```
#### 4. The test file will be created as `test/debug/foo_test.rb`.
If the file already exists, **only method** will be added to it.
```ruby
# frozen_string_literal: true

require_relative '../support/test_case'

module DEBUGGER__
  class FooTest < TestCase
    def program
      <<~RUBY
        1| module Foo
        1|   class Bar
        2|     def self.a
        3|       ""hello""
        4|     end
        5|   end
        6|   Bar.a
        7|   bar = Bar.new
        8| end
      RUBY
    end
    
    def test_foo
      debug_code(program) do
        type 's'
        assert_line_num 2
        assert_line_text([
          /[1, 9] in .*/,
          /      1| module Foo/,
          /=>    2|   class Bar/,
          /      3|     def self.a/,
          /      4|       ""hello""/,
          /      5|     end/,
          /      6|   end/,
          /      7|   Bar.a/,
          /      8|   bar = Bar.new/,
          /      9| end/,
          /=>#0	<module:Foo> at .*/,
          /  #1	<main> at .*/
        ])
        type 'n'
        assert_line_num 3
        assert_line_text([
          /[1, 9] in .*/,
          /      1| module Foo/,
          /      2|   class Bar/,
          /=>    3|     def self.a/,
          /      4|       ""hello""/,
          /      5|     end/,
          /      6|   end/,
          /      7|   Bar.a/,
          /      8|   bar = Bar.new/,
          /      9| end/,
          /=>#0	<class:Bar> at .*/,
          /  #1	<module:Foo> at .*/,
          /  #2	<main> at .*/
        ])
        type 'b 7'
        assert_line_text(//)
        type 'c'
        assert_line_num 7
        assert_line_text([
          /[2, 9] in .*/,
          /      2|   class Bar/,
          /      3|     def self.a/,
          /      4|       ""hello""/,
          /      5|     end/,
          /      6|   end/,
          /=>    7|   Bar.a/,
          /      8|   bar = Bar.new/,
          /      9| end/,
          /=>#0	<module:Foo> at .*/,
          /  #1	<main> at .*/,
          //,
          /Stop by #0  BP - Line  .*/
        ])
        type 'q!'
      end
    end
  end
end
```
#### gentest options
You can get more information about `gentest` here.

The default method name is `test_foo` and the class name is `FooTest`. The file name will be `[Lowercase letters with ""Test"" removed from the class name]_test.rb`.
```shell
# run without any options(test method name will be `test_foo`, class name will be `FooTest`, file name will be `foo_test.rb`)
$ bin/gentest target.rb
# specify the class name(test method name will be `test_foo`, class name will be `StepTest`, file name will be `step_test.rb`)
$ bin/gentest target.rb -c StepTest
# specify the method name(test method name will be `test_step`, class name will be `FooTest`, file name will be `foo_test.rb`)
$ bin/gentest target.rb -m test_step
# specify class name and method name(test method name will be `test_step`, class name will be `StepTest`, file name will be `step_test.rb`.)
$ bin/gentest target.rb -c StepTest -m test_step
```",True,111,https://api.github.com/repos/ruby/debug/pulls/111,https://github.com/ruby/debug/pull/111,closed,391,2,3,4,3,0,0,0,[],2021-06-20 12:43:33+00:00,2021-07-06 06:14:37+00:00,1359064.0,"15 days, 17:31:04",[],"[{'commit_sha': 'd3a0d3f482a88072175912e3f1626b55d266f6bd', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '616eaa4fae6986eda0a152cec5b3c716cfd5bc87', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd42410a070de22967e03cd1fc2b6f2c7b1266d7e', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '166209ccf1a91411d7a9eda3480dd8bcd3157bdc', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
685616192,fix #141,,True,142,https://api.github.com/repos/ruby/debug/pulls/142,https://github.com/ruby/debug/pull/142,closed,4,1,1,2,0,0,0,0,[],2021-07-08 01:31:46+00:00,2021-07-08 05:39:43+00:00,14877.0,4:07:57,[],"[{'commit_sha': '9f3da058b7d1de751c25bdf38350d7cbf2dcb4b4', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58b786508d8940911fc92f13bfd7ac7d9c9f7431', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
685859629,Improve test builder,"I implemented three points.

### - make default method name unique name
#### Before
test_foo
#### After
test_1625738032

### - escape @last_backlog when it is outputted as regexp
#### Example
```ruby
def test_1625737361
      debug_code(program) do
        type 's'
        assert_line_num 2
        assert_line_text([
          /\[1, 10\] in .*/,
          /      1\| module Foo/,
          /=>    2\|   class Bar/,
          /      3\|     def self\.a/,
          /      4\|       ""hello""/,
          /      5\|     end/,
          /      6\| /,
          /      7\|     def b_123\(n\)/,
          /      8\|       2\.times do/,
          /      9\|         n/,
          /     10\|       end/,
          /=>\#0\t<module:Foo> at .*/,
          /  \#1\t<main> at .*/
        ])
        type 'n'
        assert_line_num 3
        assert_line_text([
          /\[1, 10\] in .*/,
          /      1\| module Foo/,
          /      2\|   class Bar/,
          /=>    3\|     def self\.a/,
          /      4\|       ""hello""/,
          /      5\|     end/,
          /      6\| /,
          /      7\|     def b_123\(n\)/,
          /      8\|       2\.times do/,
          /      9\|         n/,
          /     10\|       end/,
          /=>\#0\t<class:Bar> at .*/,
          /  \#1\t<module:Foo> at .*/,
          /  \# and 1 frames \(use `bt' command for all frames\)/
        ])
        type 'b 7'
        assert_line_text([
          /\#0  BP \- Line  .*/
        ])
        type 'c'
        assert_line_num 8
        assert_line_text([
          /\[3, 12\] in .*/,
          /      3\|     def self\.a/,
          /      4\|       ""hello""/,
          /      5\|     end/,
          /      6\| /,
          /      7\|     def b_123\(n\)/,
          /=>    8\|       2\.times do/,
          /      9\|         n/,
          /     10\|       end/,
          /     11\|     end/,
          /     12\|   end/,
          /=>\#0\tFoo::Bar\#b_123\(n=1\) at .*/,
          /  \#1\t<module:Foo> at .*/,
          /  \# and 1 frames \(use `bt' command for all frames\)/,
          //,
          /Stop by \#0  BP \- Line  .*/
        ])
        type 'q!'
      end
    end
```
### - add more detail logs about created file in test builder
#### Example

##### Before
```shell
(rdbg)q!
 q!
created: /Users/naotto/workspace/debug/test/tool/../debug/foo_test.rb
```
##### After
##### When creating new file
```shell
(rdbg)q!
 q!
created: /Users/naotto/workspace/debug/test/tool/../debug/foo_test.rb
    class: FooTest
    method: test_1625738123
```
##### When appending to existed file
```shell
(rdbg)q!
 q!
appended: /Users/naotto/workspace/debug/test/tool/../debug/foo_test.rb
    method: test_1625738032
```
",True,146,https://api.github.com/repos/ruby/debug/pulls/146,https://github.com/ruby/debug/pull/146,closed,12,5,1,3,0,0,0,0,[],2021-07-08 09:50:03+00:00,2021-07-08 10:04:08+00:00,845.0,0:14:05,[],"[{'commit_sha': 'ea35add4c19518c65a845d0790723f2feb33f3a1', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc9edf54b32195aa4b76614cc36e88ed1c2aebcc', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13d252912a787c82b2ffc5d5630f1b594916afad', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
686518162,Improve test builder,"There are two points I implemented.

### 1. `q!` and `quit!` matches not only debug commands, but also backtrace log.
#### Example
```ruby
at_exit{
  binding.bp
  eval('a = 1')
  Thread.new{}
}

binding.bp(command: 'q!')
```
```shell
$ bin/gentest target.rb -c HelpTest -m test_help_with_undefined_command_shows_an_error
DEBUGGER: Session start (pid: 71085)
DEBUGGER: Thread #1 is created.
DEBUGGER: Thread #2 is created.
DEBUGGER: Load /Users/ono-max/workspace/debug/target.rb
[1, 7] in ~/workspace/debug/target.rb
=>    1| at_exit{
      2|   binding.bp
      3|   eval('a = 1')
      4|   Thread.new{}
      5| }
      6|
      7| binding.bp(command: 'q!')
=>#0	<main> at ~/workspace/debug/target.rb:1
INTERNAL_INFO: {""location"":""~/workspace/debug/target.rb:1"",""line"":1}

(rdbg)s
 s
[2, 7] in ~/workspace/debug/target.rb
      2|   binding.bp
      3|   eval('a = 1')
      4|   Thread.new{}
      5| }
      6|
=>    7| binding.bp(command: 'q!')
=>#0	<main> at ~/workspace/debug/target.rb:7
INTERNAL_INFO: {""location"":""~/workspace/debug/target.rb:7"",""line"":7}

(rdbg)q!
 q!
appended: /Users/ono-max/workspace/debug/test/tool/../debug/help_test.rb
    method: test_help_with_undefined_command_shows_an_error
```
##### Generated file(Now)
```ruby
def test_help_with_undefined_command_shows_an_error
      debug_code(program) do
        type '' # we don't need this code
        type 's' # we don't need this code
        type 's'
        assert_line_num 7
        assert_line_text([
          /\[2, 7\] in .*/,
          /      2\|   binding\.bp/,
          /      3\|   eval\('a = 1'\)/,
          /      4\|   Thread\.new\{\}/,
          /      5\| \}/,
          /      6\| /,
          /=>    7\| binding\.bp\(command: 'q!'\)/,
          /=>\#0\t<main> at .*/
        ])
        type 'q!'
      end
    end
```

##### Generated file(Expected)

```ruby
def test_help_with_undefined_command_shows_an_error
      debug_code(program) do
        type 's'
        assert_line_num 7
        assert_line_text([
          /\[2, 7\] in .*/,
          /      2\|   binding\.bp/,
          /      3\|   eval\('a = 1'\)/,
          /      4\|   Thread\.new\{\}/,
          /      5\| \}/,
          /      6\| /,
          /=>    7\| binding\.bp\(command: 'q!'\)/,
          /=>\#0\t<main> at .*/
        ])
        type 'q!'
      end
    end
```

### 2. Even one line, the parameter use array in test builder.
#### Now
```ruby
def test_help_with_undefined_command_shows_an_error
      debug_code(program) do
        type ''
        type 'help foo'
        assert_line_text([
          /not found: foo/
        ])
        type 'q!'
      end
    end
```
#### Expected
```ruby
def test_help_with_undefined_command_shows_an_error
      debug_code(program) do
        type 'help foo'
        assert_line_text(/not found: foo/)
        type 'q!'
      end
    end
```",True,153,https://api.github.com/repos/ruby/debug/pulls/153,https://github.com/ruby/debug/pull/153,closed,15,7,1,2,0,0,0,0,[],2021-07-09 06:07:14+00:00,2021-07-09 06:36:21+00:00,1747.0,0:29:07,[],"[{'commit_sha': 'ae3f950b647ccf2a95c09253255f8b76a4b36127', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37514d8320bbfe55784f14728ee40275c63e14a6', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
687162669,Make sure to match ask pattern in test_builder,"Current test builder can't get the ask pattern like this. This PR fix it.

```shell
$ bin/gentest target.rb
DEBUGGER: Session start (pid: 95363)
[1, 4] in ~/workspace/debug/target.rb
=>    1| a = 1
      2| b = 2
      3| c = 3
      4| d = 4
=>#0	<main> at ~/workspace/debug/target.rb:1
INTERNAL_INFO: {""location"":""~/workspace/debug/target.rb:1"",""line"":1}

(rdbg)b 2
 b 2
#0  BP - Line  /Users/naotto/workspace/debug/target.rb:2 (line)
INTERNAL_INFO: {""location"":""~/workspace/debug/target.rb:1"",""line"":1}

(rdbg)del
 del
#0  BP - Line  /Users/naotto/workspace/debug/target.rb:2 (line)

# test builder crashed here.
```",True,159,https://api.github.com/repos/ruby/debug/pulls/159,https://github.com/ruby/debug/pull/159,closed,2,2,1,1,0,0,0,0,[],2021-07-10 10:29:15+00:00,2021-07-10 16:29:05+00:00,21590.0,5:59:50,[],"[{'commit_sha': 'e8147d4e07c86ea7f84bc0cba27b23c55aa1829d', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
687257286,Improve test builder,"There are 2 points I implemented.

### 1. Test builder don't capitalize the first letter of class name.
#### Now
```ruby
# frozen_string_literal: true

require_relative '../support/test_case'

module DEBUGGER__
  class deletetest < TestCase
    def program
      <<~RUBY
        1| a = 1
        1| b = 2
        2| c = 3
        3| d = 4
      RUBY
    end
```
#### Expected
```ruby
# frozen_string_literal: true

require_relative '../support/test_case'

module DEBUGGER__
  class Deletetest < TestCase
    def program
      <<~RUBY
        1| a = 1
        1| b = 2
        2| c = 3
        3| d = 4
      RUBY
    end
```

### 2. When the string ""test"" is in the prefix, it won't be removed.
#### Now
```shell
$ bin/gentest target.rb  -c deletetest -m test_delete_keeps_current_breakpoints_if_not_confirmed
...
appended: /Users/naotto/workspace/debug/test/tool/../debug/deletetest_test.rb
    method: test_delete_keeps_current_breakpoints_if_not_confirmed
```
#### Expected
```shell
$ bin/gentest target.rb  -c deletetest -m test_delete_keeps_current_breakpoints_if_not_confirmed
appended: /Users/naotto/workspace/debug/test/tool/../debug/delete_test.rb
    method: test_delete_keeps_current_breakpoints_if_not_confirmed
```",True,161,https://api.github.com/repos/ruby/debug/pulls/161,https://github.com/ruby/debug/pull/161,closed,2,2,1,2,0,0,0,0,[],2021-07-11 00:57:26+00:00,2021-07-12 00:50:13+00:00,85967.0,23:52:47,[],"[{'commit_sha': 'd312c7f5d9984bf9788c8b6098df7052fbdc7458', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97f75175477a596daf72a4633641301412c33f80', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
689712531,Improve test builder,"### Example
```shell
$ bin/gentest target.rb  -c deletetest -m test_delete_keeps_current_breakpoints_if_not_confirmed
DEBUGGER: Session start (pid: 40543)
[1, 4] in ~/workspace/debug/target.rb
=>    1| a=1
      2| b=2
      3| c=3
      4| d=4
=>#0	<main> at ~/workspace/debug/target.rb:1
INTERNAL_INFO: {""location"":""~/workspace/debug/target.rb:1"",""line"":1}

(rdbg)b 2
 b 2
#0  BP - Line  /Users/ono-max/workspace/debug/target.rb:2 (line)
INTERNAL_INFO: {""location"":""~/workspace/debug/target.rb:1"",""line"":1}

(rdbg)b 3
 b 3
#1  BP - Line  /Users/ono-max/workspace/debug/target.rb:3 (line)
INTERNAL_INFO: {""location"":""~/workspace/debug/target.rb:1"",""line"":1}

(rdbg)del
 del
#0  BP - Line  /Users/ono-max/workspace/debug/target.rb:2 (line)
#1  BP - Line  /Users/ono-max/workspace/debug/target.rb:3 (line)
Remove all breakpoints? [y/N]n
 n
INTERNAL_INFO: {""location"":""~/workspace/debug/target.rb:1"",""line"":1}

(rdbg)b
 b
#0  BP - Line  /Users/ono-max/workspace/debug/target.rb:2 (line)
#1  BP - Line  /Users/ono-max/workspace/debug/target.rb:3 (line)
INTERNAL_INFO: {""location"":""~/workspace/debug/target.rb:1"",""line"":1}

(rdbg)q!
 q!
appended: /Users/ono-max/workspace/debug/test/tool/../debug/delete_test.rb
    method: test_delete_keeps_current_breakpoints_if_not_confirmed
```
### Before
```ruby
# frozen_string_literal: true

require_relative '../support/test_case'

module DEBUGGER__
  class Deletetest < TestCase
    def program
      <<~RUBY
        1| a=1
        1| b=2
        2| c=3
        3| d=4
      RUBY
    end
    
    def test_delete_keeps_current_breakpoints_if_not_confirmed
      debug_code(program) do
        type 'b 2'
        assert_line_text(/\#0  BP \- Line  .*/)
        type 'b 3'
        assert_line_text(/\#1  BP \- Line  .*/)
        type 'del'
        type 'n'
        type 'del'
        assert_line_text([
          /\#0  BP \- Line  .*/,
          /\#1  BP \- Line  .*/,
          /Remove all breakpoints\? \[y/N\]/,
          / n/
        ])
        type 'b'
        assert_line_text([
          /\#0  BP \- Line  .*/,
          /\#1  BP \- Line  .*/
        ])
        type 'q!'
      end
    end
  end
end

```
### After
```ruby
# frozen_string_literal: true

require_relative '../support/test_case'

module DEBUGGER__
  class Deletetest < TestCase
    def program
      <<~RUBY
        1| a=1
        1| b=2
        2| c=3
        3| d=4
      RUBY
    end
    
    def test_delete_keeps_current_breakpoints_if_not_confirmed
      debug_code(program) do
        type 'b 2'
        assert_line_text(/\#0  BP \- Line  .*/)
        type 'b 3'
        assert_line_text(/\#1  BP \- Line  .*/)
        type 'del'
        assert_line_text([
          /\#0  BP \- Line  .*/,
          /\#1  BP \- Line  .*/,
          /Remove all breakpoints\? \[y\/N\]/
        ])
        type 'n'
        type 'b'
        assert_line_text([
          /\#0  BP \- Line  .*/,
          /\#1  BP \- Line  .*/
        ])
        type 'q!'
      end
    end
  end
end
```",True,174,https://api.github.com/repos/ruby/debug/pulls/174,https://github.com/ruby/debug/pull/174,closed,36,21,1,3,0,0,0,0,[],2021-07-14 08:47:41+00:00,2021-07-14 18:22:28+00:00,34487.0,9:34:47,[],"[{'commit_sha': '0660d5d7ef6e141641a63ae980ba73aa329ecd34', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c48fd5e2f040d8dcb0434f3c02e9356aaa80a1ac', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9df6cfbfb5737dfe279afcb75bfbd0e94d84e5a6', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
692482591,Fix #185,,True,186,https://api.github.com/repos/ruby/debug/pulls/186,https://github.com/ruby/debug/pull/186,closed,15,5,1,2,0,0,0,0,[],2021-07-19 10:31:40+00:00,2021-07-20 13:43:42+00:00,97922.0,"1 day, 3:12:02",[],"[{'commit_sha': 'a4c8b0d3d8ae5967345527041420f03e70f20a74', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cdb6437b6454c5b3416c5d82ecf6d7ede69d359', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
693296251,fix #187,,True,188,https://api.github.com/repos/ruby/debug/pulls/188,https://github.com/ruby/debug/pull/188,closed,3,3,1,2,0,0,0,0,[],2021-07-20 09:09:30+00:00,2021-07-20 13:44:20+00:00,16490.0,4:34:50,[],"[{'commit_sha': 'ebc8213e1876603e62db81db6e745b4a1918391f', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b49e005411846d4a2a007f9559b20a10958dc65d', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
693923201,"Test builder should add ""Test"" if the string ""test"" is not included in method name","Currently, if we input the class name without `test`, the result of class name doesn't include `test`. I fixed it by https://github.com/ruby/debug/pull/190/files#diff-696c1d15a0b4a6b6059b82ff19a13d0aafa2f5b00c87a0b5436b8713821d9f2aR16.

### Example
```shell
$ bin/gentest target.rb -c bar
DEBUGGER: Session start (pid: 99572)
[1, 10] in ~/workspace/debug/target.rb
=>    1| module Foo
      2|   class Bar
      3|     def self.a
      4|       ""hello""
      5|     end
      6|
      7|     def b(n)
      8|       2.times do
      9|         n
     10|       end
=>#0	<main> at ~/workspace/debug/target.rb:1
INTERNAL_INFO: {""location"":""~/workspace/debug/target.rb:1"",""line"":1}
(rdbg)s
 s
[1, 10] in ~/workspace/debug/target.rb
      1| module Foo
=>    2|   class Bar
      3|     def self.a
      4|       ""hello""
      5|     end
      6|
      7|     def b(n)
      8|       2.times do
      9|         n
     10|       end
=>#0	<module:Foo> at ~/workspace/debug/target.rb:2
  #1	<main> at ~/workspace/debug/target.rb:1
INTERNAL_INFO: {""location"":""~/workspace/debug/target.rb:2"",""line"":2}
(rdbg)q!
 q!
created: /Users/naotto/workspace/debug/test/tool/../debug/bar_test.rb
    class: Bar
    method: test_1626822196
```

### Before
```ruby
# frozen_string_literal: true

require_relative '../support/test_case'

module DEBUGGER__
  class Bar < TestCase
    def program
```

### After
```ruby
# frozen_string_literal: true

require_relative '../support/test_case'

module DEBUGGER__
  class BarTest < TestCase
    def program
```",True,190,https://api.github.com/repos/ruby/debug/pulls/190,https://github.com/ruby/debug/pull/190,closed,3,2,1,1,1,0,0,0,[],2021-07-20 23:05:10+00:00,2021-07-21 15:55:05+00:00,60595.0,16:49:55,[],"[{'commit_sha': '0f924c7f968eab3c6185e3dac6509c39e1ea9817', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
696305439,fix #194,The reason that test builder doesn't work is class name is not assigned when specify a class name with `test`. This PR will fix it by doing the exact conditional branch.,True,195,https://api.github.com/repos/ruby/debug/pulls/195,https://github.com/ruby/debug/pull/195,closed,5,1,1,1,0,0,0,0,[],2021-07-24 06:52:34+00:00,2021-07-27 09:19:57+00:00,268043.0,"3 days, 2:27:23",[],"[{'commit_sha': '2defcb3d8bfa06ef9fbb4174b691fe0a7115ceac', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
714942888,Modify the test builder so that the line numbers are displayed correctly in the generated file,"@ko1 pointed out that the file generated by test builder doesn't display line number correctly. The reason is that counting the line number from index was wrong.

I also refactored the part.
=> 11c4907, 4788eb8",True,225,https://api.github.com/repos/ruby/debug/pulls/225,https://github.com/ruby/debug/pull/225,closed,31,32,3,4,0,0,0,0,[],2021-08-18 10:18:04+00:00,2021-08-20 07:27:25+00:00,162561.0,"1 day, 21:09:21",[],"[{'commit_sha': 'b738290e1c49a33c53e407e24b88ce7e50979708', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f46f36e091e32b316f639a69bdea22c576d2b48', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11c49070b1dd0fb53092ff7a40068eef4ef2d855', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4788eb84d5b708e32a3dbfb6ad429e84909faea3', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
717768459,Fix #235,Define `RUBY_DEBUG_NO_RELINE` to disable reline in test builder,True,236,https://api.github.com/repos/ruby/debug/pulls/236,https://github.com/ruby/debug/pull/236,closed,1,0,1,1,0,0,0,0,[],2021-08-23 12:00:56+00:00,2021-08-28 21:39:09+00:00,466693.0,"5 days, 9:38:13",[],"[{'commit_sha': 'cabcbac9e3ab6285d158a3f009ed0e9f5603f8a2', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
717780336,Update the guide for test builder,There are some old informations for test builder. This pull request fix them to match the current format.,True,237,https://api.github.com/repos/ruby/debug/pulls/237,https://github.com/ruby/debug/pull/237,closed,88,88,1,2,0,0,0,0,[],2021-08-23 12:15:11+00:00,2021-08-28 21:39:40+00:00,465869.0,"5 days, 9:24:29",[],"[{'commit_sha': '12af5490b43ebd03065663e43f98314ced7d2e38', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5131729245d9aa2c54f99e547e4c557c5aa835a4', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
661830095,add test cases for breakpoints to line,,True,66,https://api.github.com/repos/ruby/debug/pulls/66,https://github.com/ruby/debug/pull/66,closed,55,6,1,1,0,0,0,0,[],2021-06-04 14:49:37+00:00,2021-06-07 04:52:14+00:00,223357.0,"2 days, 14:02:37",[],"[{'commit_sha': '6f65e1984d6c4504136aa9448b0cd88373386db8', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
670300831,Test for #89,,True,92,https://api.github.com/repos/ruby/debug/pulls/92,https://github.com/ruby/debug/pull/92,closed,34,0,1,1,0,0,0,0,[],2021-06-15 11:02:18+00:00,2021-06-16 04:11:37+00:00,61759.0,17:09:19,[],"[{'commit_sha': 'ef627bbee97da5a8749e2e0bb86de9c4bfea4cc6', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
686526782,add test case for help command,,True,154,https://api.github.com/repos/ruby/debug/pulls/154,https://github.com/ruby/debug/pull/154,closed,8,0,1,1,0,0,0,0,[],2021-07-09 06:24:52+00:00,2021-07-09 06:45:49+00:00,1257.0,0:20:57,[],"[{'commit_sha': 'e35471cfde9e242f9c82eeb05ea3a8b5c746800d', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
687454526,Enable color display in tests,,False,163,https://api.github.com/repos/ruby/debug/pulls/163,https://github.com/ruby/debug/pull/163,closed,1,2,2,1,1,0,0,0,[],2021-07-12 02:18:05+00:00,2021-07-12 04:25:03+00:00,7618.0,2:06:58,[],"[{'commit_sha': 'a7e0393aeca78e6819777555fdc4863b2f207eb5', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
687731620,Create test cases for Color module,,True,167,https://api.github.com/repos/ruby/debug/pulls/167,https://github.com/ruby/debug/pull/167,closed,118,0,2,1,0,1,0,0,[],2021-07-12 10:55:35+00:00,2021-07-13 07:56:02+00:00,75627.0,21:00:27,"[{'comment_id': 668385085, 'comment_body': ""I'm not sure if this is a good way or not."", 'comment_created': datetime.datetime(2021, 7, 13, 2, 40, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}]","[{'commit_sha': '85999941d8902b7b1d9676ca256a0fc158394acf', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
688651577,Solve the `warning: redefining constant Struct::SESSION`,"### Before
```shell
$ ruby test/color_test.rb
Loaded suite test/color_test
Started
.test/color_test.rb:103: warning: redefining constant Struct::SESSION
...
Finished in 0.0054 seconds.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4 tests, 14 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications
100% passed
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
740.74 tests/s, 2592.59 assertions/s
```

### After
```shell
$ ruby test/color_test.rb
Loaded suite test/color_test
Started
....
Finished in 0.004998 seconds.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4 tests, 14 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications
100% passed
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
800.32 tests/s, 2801.12 assertions/s
```",True,171,https://api.github.com/repos/ruby/debug/pulls/171,https://github.com/ruby/debug/pull/171,closed,3,4,1,1,0,0,0,0,[],2021-07-13 08:29:10+00:00,2021-07-13 13:21:52+00:00,17562.0,4:52:42,[],"[{'commit_sha': '6f1a46de425f788979442f710bd9f11701310443', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
689718188,Add test case for delete,,True,175,https://api.github.com/repos/ruby/debug/pulls/175,https://github.com/ruby/debug/pull/175,closed,64,37,3,3,0,0,0,0,[],2021-07-14 08:56:11+00:00,2021-07-14 18:21:13+00:00,33902.0,9:25:02,[],"[{'commit_sha': 'e8287f96cc60721f30db3511037e5cc778d980a9', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '944d6d2ae4c37ea41039eca61f11d043c1abf54f', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48c4e526e004bd3d280df15bc72a45e765101879', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
691320018,add remote: false in assertion_helper test,Add `remote: false` in assertion_helper test because assertion_helper_test is unit tests,True,182,https://api.github.com/repos/ruby/debug/pulls/182,https://github.com/ruby/debug/pull/182,closed,5,5,1,1,0,0,0,0,[],2021-07-16 09:07:49+00:00,2021-07-17 00:39:50+00:00,55921.0,15:32:01,[],"[{'commit_sha': '07bc0009d28eb9d76b05cbb331bb015952e6543f', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
693369961,Add test cases for break command,,True,189,https://api.github.com/repos/ruby/debug/pulls/189,https://github.com/ruby/debug/pull/189,closed,22,2,1,2,0,0,0,0,[],2021-07-20 11:02:02+00:00,2021-07-20 13:42:34+00:00,9632.0,2:40:32,[],"[{'commit_sha': '0ac3e51ce7295fd2d7d22f883112cd900817b2ef', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f30e53cc7734a726f80525d6fe9af14d0bf61428', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
693926808,Add test cases for quit command,The following codes based on byebug project.,True,191,https://api.github.com/repos/ruby/debug/pulls/191,https://github.com/ruby/debug/pull/191,closed,36,0,1,1,1,0,0,0,[],2021-07-20 23:12:44+00:00,2021-07-21 15:53:53+00:00,60069.0,16:41:09,[],"[{'commit_sha': '92053ceb5b2e88f52a0cd812e654de2e8363ee45', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
694762802,Add test cases for kill command,,True,193,https://api.github.com/repos/ruby/debug/pulls/193,https://github.com/ruby/debug/pull/193,closed,14,4,1,2,0,0,0,0,[],2021-07-21 23:07:46+00:00,2021-07-23 13:24:59+00:00,137833.0,"1 day, 14:17:13",[],"[{'commit_sha': '52ccbadab1ace252d7a6f699ae5cbc10c37527c9', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '492ac68f02741b7fd9e5f0aecbfeeeee496320fb', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
690609876,Implementation of Multi-thread in test framework,"These are example of test(debug) time for Github workflow.

### Before
Finished in 379.300202619 seconds.

https://github.com/ruby/debug/runs/3179106902

### After()
Finished in 199.289802343 seconds.

https://github.com/ruby/debug/runs/3179484608

### How I implement

#### - I removed all instance variables from `utils.rb` and `assertions.rb` for thread-safe.
  - The all instance variables are stored as `Struct` class.
  - Queue instance is created for each threads.
#### - `test-unit` doesn't support multi thread (FYI, https://github.com/test-unit/test-unit/issues/204)
  - That's why I don't use `test-unit`'s assert method under multi threads. As the alternative plan, I implemented as follows.
    - If a test fail, the current thread will do nonlocal exits.
    -  If a test succeeds, assert method doesn't do nothing and `assert true` will be run.
  - I am concerned that the number of assert's is not accurate.",True,180,https://api.github.com/repos/ruby/debug/pulls/180,https://github.com/ruby/debug/pull/180,closed,142,93,3,4,1,7,0,0,[],2021-07-15 10:53:33+00:00,2021-07-29 01:59:16+00:00,1177543.0,"13 days, 15:05:43","[{'comment_id': 678062593, 'comment_body': 'If thread terminates with an exception, `t.join` on line 55 will raise an exception.\r\nIt should rescue all exceptions and return it as a failure reason.', 'comment_created': datetime.datetime(2021, 7, 28, 7, 53, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 678063843, 'comment_body': '`Thread` is general terminology and this case, you may want to know it is a worker thread for debugger testing. You should use more specific term.', 'comment_created': datetime.datetime(2021, 7, 28, 7, 55, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 678064861, 'comment_body': 'It is better to use more specific name.', 'comment_created': datetime.datetime(2021, 7, 28, 7, 56, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ko1', 'type': 'User'}, {'comment_id': 678102903, 'comment_body': 'I changed it to `multithreaded_test?`.', 'comment_created': datetime.datetime(2021, 7, 28, 8, 47, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 678104704, 'comment_body': 'https://github.com/ruby/debug/pull/180/files#diff-ee14bf65f14927f7778a246f90c5cec0c581be3e2658c2a8a3726c59db5be3f9R61-R64', 'comment_created': datetime.datetime(2021, 7, 28, 8, 49, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 678116220, 'comment_body': 'https://github.com/ruby/debug/pull/180/files#diff-ee14bf65f14927f7778a246f90c5cec0c581be3e2658c2a8a3726c59db5be3f9R84', 'comment_created': datetime.datetime(2021, 7, 28, 9, 4, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}, {'comment_id': 678757876, 'comment_body': 'https://github.com/ruby/debug/pull/180/files#diff-ee14bf65f14927f7778a246f90c5cec0c581be3e2658c2a8a3726c59db5be3f9R71', 'comment_created': datetime.datetime(2021, 7, 29, 1, 30, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}]","[{'commit_sha': '3afa9c287c708ac215114f94d7cbce59e9910006', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbb8dbd1143778ac3f72a57ead65fadc9bcfb0ab', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4806ff9c237ee9691a43ae07b30f5cec54883687', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19cf25d77051661a5bc9ad42f26c75c4f91fc916', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
699174297,Add the option to disable multi threaded test,"@ko1 pointed out that we need the option to disable multi threaded test for debug.

### Disable multi threaded test
`$ RUBY_DEBUG_TEST_DISABLE_THREADS=1 rake test`

### Multi threaded test
`$ rake test`",True,203,https://api.github.com/repos/ruby/debug/pulls/203,https://github.com/ruby/debug/pull/203,closed,7,1,1,1,1,0,0,0,[],2021-07-29 03:26:43+00:00,2021-07-29 03:28:21+00:00,98.0,0:01:38,[],"[{'commit_sha': '3ffe3e1f34751cbd48f6fac50a27d8989284d383', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
650785916,"fix bug for ""catch"" command",fix https://github.com/ruby/debug/issues/27,True,26,https://api.github.com/repos/ruby/debug/pulls/26,https://github.com/ruby/debug/pull/26,closed,2,2,2,1,1,0,0,0,[],2021-05-23 13:02:43+00:00,2021-05-23 16:22:13+00:00,11970.0,3:19:30,[],"[{'commit_sha': 'b31456ca9ca14d09c698f8454c4d437ab710ee0d', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
663974883,Uncomment 'assert_fail_with_log',,True,70,https://api.github.com/repos/ruby/debug/pulls/70,https://github.com/ruby/debug/pull/70,closed,1,1,1,1,1,0,0,0,[],2021-06-07 23:02:43+00:00,2021-06-08 01:38:02+00:00,9319.0,2:35:19,[],"[{'commit_sha': '45a95e810731c476700a50ec60ba724b75ca5675', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
666449750,fix typo,Fix issue https://github.com/ruby/debug/issues/77,True,78,https://api.github.com/repos/ruby/debug/pulls/78,https://github.com/ruby/debug/pull/78,closed,1,1,1,1,1,0,0,0,[],2021-06-10 02:47:19+00:00,2021-06-10 07:21:59+00:00,16480.0,4:34:40,[],"[{'commit_sha': '8d451b53616879f208f9165b5dbb417c573fbbaf', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
667537193,"add missing ""#""","I add missing `#`.

```shell
[2, 11] in target.rb
      2|   class Bar
      3|     def self.a
      4|       ""hello""
      5|     end
      6|     def b(n)
=>    7|       2.times do
      8|         n
      9|       end
     10|     end
     11|   end
=>#0	Foo::Bar#b(n=1) at target.rb:7
  #1	<module:Foo> at target.rb:19
  #2	<main> at target.rb:1

Stop by # BP - Check  n==1 0
```",False,81,https://api.github.com/repos/ruby/debug/pulls/81,https://github.com/ruby/debug/pull/81,closed,1,1,1,1,2,0,0,0,[],2021-06-11 00:02:57+00:00,2021-06-11 02:07:28+00:00,7471.0,2:04:31,[],"[{'commit_sha': 'd2d7dfab3381690ea7e5a4e255f698b6946ade55', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32
668114424,"Fix appearance of ""Stop by~""","swap locations of variables ""bp"" and ""i""

## Now
```shell
[2, 11] in target.rb
      2|   class Bar
      3|     def self.a
      4|       ""hello""
      5|     end
      6|     def b(n)
=>    7|       2.times do
      8|         n
      9|       end
     10|     end
     11|   end
=>#0	Foo::Bar#b(n=1) at target.rb:7
  #1	<module:Foo> at target.rb:19
  #2	<main> at target.rb:1

Stop by # BP - Check  n==1 0
```

## What I expect

```shell
[2, 11] in target.rb
      2|   class Bar
      3|     def self.a
      4|       ""hello""
      5|     end
      6|     def b(n)
=>    7|       2.times do
      8|         n
      9|       end
     10|     end
     11|   end
=>#0	Foo::Bar#b(n=1) at target.rb:7
  #1	<module:Foo> at target.rb:19
  #2	<main> at target.rb:1

Stop by #0  BP - Check  n == 1
```",True,83,https://api.github.com/repos/ruby/debug/pulls/83,https://github.com/ruby/debug/pull/83,closed,1,1,1,1,1,3,0,0,[],2021-06-11 12:52:51+00:00,2021-06-15 07:13:32+00:00,325241.0,"3 days, 18:20:41","[{'comment_id': 649958637, 'comment_body': ""I think it's because the local assignments are wrong. it should be this instead:\r\n\r\n```suggestion\r\n        i, bp = *args\r\n```\r\n\r\nthe current message is actually correct."", 'comment_created': datetime.datetime(2021, 6, 11, 13, 1, 14, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 649959589, 'comment_body': 'the caller:\r\n\r\nhttps://github.com/ruby/debug/blob/bbf475f976703788e6622b682b5a58d68297395a/lib/debug/session.rb#L108', 'comment_created': datetime.datetime(2021, 6, 11, 13, 2, 42, tzinfo=datetime.timezone.utc), 'commenter': 'st0012', 'type': 'User'}, {'comment_id': 650321959, 'comment_body': 'You are right, Thanks!', 'comment_created': datetime.datetime(2021, 6, 12, 0, 41, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ono-max', 'type': 'User'}]","[{'commit_sha': 'f2e86632100430d617a96a908c394043238936f8', 'committer_username': 'ono-max', 'committer_name': 'Naoto Ono', 'committer_email': 'onoto1998@gmail.com', 'commit_date': datetime.datetime(2020, 1, 2, 9, 29, 29, tzinfo=datetime.timezone.utc)}]",Naoto Ono,59436572,onoto1998@gmail.com,User,,116,,0,32

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
209731662,debug,ruby/debug,Ruby,124,1114,44,83,1566,84,4,18,"[{'id': 1764728842, 'number': 1090, 'closed': datetime.datetime(2024, 3, 11, 6, 15, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 11, 1, 55, 36, tzinfo=datetime.timezone.utc), 'time_taken': 15570.0, 'time_delta': '4:19:30', 'additions': 131, 'deletions': 8, 'state': 'closed'}, {'id': 1764431108, 'number': 1089, 'closed': datetime.datetime(2024, 3, 11, 6, 5, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 10, 12, 51, 35, tzinfo=datetime.timezone.utc), 'time_taken': 62053.0, 'time_delta': '17:14:13', 'additions': 7, 'deletions': 3, 'state': 'closed'}, {'id': 1764421710, 'number': 1088, 'closed': datetime.datetime(2024, 3, 11, 6, 2, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 10, 12, 23, 16, tzinfo=datetime.timezone.utc), 'time_taken': 63544.0, 'time_delta': '17:39:04', 'additions': 12, 'deletions': 8, 'state': 'closed'}, {'id': 1734022174, 'number': 1082, 'closed': datetime.datetime(2024, 2, 20, 6, 41, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 20, 6, 34, 45, tzinfo=datetime.timezone.utc), 'time_taken': 399.0, 'time_delta': '0:06:39', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1732525019, 'number': 1081, 'closed': datetime.datetime(2024, 2, 20, 7, 49, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 19, 9, 51, 57, tzinfo=datetime.timezone.utc), 'time_taken': 79078.0, 'time_delta': '21:57:58', 'additions': 4, 'deletions': 152, 'state': 'closed'}, {'id': 1699092641, 'number': 1070, 'closed': datetime.datetime(2024, 2, 9, 7, 10, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 29, 2, 35, 30, tzinfo=datetime.timezone.utc), 'time_taken': 966876.0, 'time_delta': '11 days, 4:34:36', 'additions': 152, 'deletions': 4, 'state': 'closed'}, {'id': 1667736091, 'number': 1060, 'closed': None, 'created': datetime.datetime(2024, 1, 7, 12, 48, 49, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 3, 'deletions': 1, 'state': 'open'}, {'id': 1667692799, 'number': 1059, 'closed': datetime.datetime(2024, 1, 7, 11, 59, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 7, 9, 52, 7, tzinfo=datetime.timezone.utc), 'time_taken': 7621.0, 'time_delta': '2:07:01', 'additions': 511, 'deletions': 473, 'state': 'closed'}, {'id': 1568067240, 'number': 1029, 'closed': datetime.datetime(2023, 11, 13, 2, 59, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 22, 12, 50, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1865346.0, 'time_delta': '21 days, 14:09:06', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1568062541, 'number': 1028, 'closed': datetime.datetime(2023, 11, 13, 2, 57, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 22, 12, 31, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1866331.0, 'time_delta': '21 days, 14:25:31', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1426980397, 'number': 998, 'closed': datetime.datetime(2023, 7, 10, 7, 33, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 10, 7, 32, 57, tzinfo=datetime.timezone.utc), 'time_taken': 4.0, 'time_delta': '0:00:04', 'additions': 94, 'deletions': 156, 'state': 'closed'}, {'id': 1388175040, 'number': 990, 'closed': datetime.datetime(2023, 6, 12, 8, 7, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 12, 8, 7, 43, tzinfo=datetime.timezone.utc), 'time_taken': 15.0, 'time_delta': '0:00:15', 'additions': 50, 'deletions': 120, 'state': 'closed'}, {'id': 1388159993, 'number': 989, 'closed': datetime.datetime(2023, 6, 12, 8, 0, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 12, 8, 0, 48, tzinfo=datetime.timezone.utc), 'time_taken': 6.0, 'time_delta': '0:00:06', 'additions': 49, 'deletions': 120, 'state': 'closed'}, {'id': 1376635755, 'number': 986, 'closed': datetime.datetime(2023, 9, 25, 8, 11, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 3, 4, 39, 45, tzinfo=datetime.timezone.utc), 'time_taken': 9862290.0, 'time_delta': '114 days, 3:31:30', 'additions': 18, 'deletions': 2, 'state': 'closed'}, {'id': 1367081685, 'number': 984, 'closed': None, 'created': datetime.datetime(2023, 5, 27, 4, 46, 33, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 71, 'deletions': 1, 'state': 'open'}, {'id': 1340716289, 'number': 979, 'closed': datetime.datetime(2023, 5, 8, 7, 46, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 6, 9, 46, 15, tzinfo=datetime.timezone.utc), 'time_taken': 165618.0, 'time_delta': '1 day, 22:00:18', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1340516400, 'number': 978, 'closed': datetime.datetime(2023, 5, 6, 1, 34, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 6, 0, 22, 47, tzinfo=datetime.timezone.utc), 'time_taken': 4280.0, 'time_delta': '1:11:20', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1339258318, 'number': 974, 'closed': datetime.datetime(2023, 5, 5, 17, 29, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 5, 2, 25, 14, tzinfo=datetime.timezone.utc), 'time_taken': 54278.0, 'time_delta': '15:04:38', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1333026700, 'number': 969, 'closed': datetime.datetime(2023, 4, 30, 19, 33, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 30, 12, 34, 33, tzinfo=datetime.timezone.utc), 'time_taken': 25147.0, 'time_delta': '6:59:07', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 1315473454, 'number': 964, 'closed': datetime.datetime(2023, 4, 21, 2, 40, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 16, 10, 19, 50, tzinfo=datetime.timezone.utc), 'time_taken': 404464.0, 'time_delta': '4 days, 16:21:04', 'additions': 7, 'deletions': 7, 'state': 'closed'}, {'id': 1306467564, 'number': 959, 'closed': datetime.datetime(2023, 4, 29, 20, 29, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 8, 10, 38, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1849891.0, 'time_delta': '21 days, 9:51:31', 'additions': 642, 'deletions': 1, 'state': 'closed'}, {'id': 1299106154, 'number': 956, 'closed': datetime.datetime(2023, 4, 4, 2, 16, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 2, 13, 48, 7, tzinfo=datetime.timezone.utc), 'time_taken': 131332.0, 'time_delta': '1 day, 12:28:52', 'additions': 36, 'deletions': 24, 'state': 'closed'}, {'id': 1299067166, 'number': 955, 'closed': datetime.datetime(2023, 4, 4, 2, 16, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 2, 11, 11, 22, tzinfo=datetime.timezone.utc), 'time_taken': 140683.0, 'time_delta': '1 day, 15:04:43', 'additions': 23, 'deletions': 16, 'state': 'closed'}, {'id': 1299014972, 'number': 954, 'closed': datetime.datetime(2023, 4, 8, 10, 39, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 2, 7, 6, 43, tzinfo=datetime.timezone.utc), 'time_taken': 531187.0, 'time_delta': '6 days, 3:33:07', 'additions': 217, 'deletions': 1, 'state': 'closed'}, {'id': 1298723476, 'number': 953, 'closed': datetime.datetime(2023, 4, 4, 2, 11, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 1, 14, 12, 36, tzinfo=datetime.timezone.utc), 'time_taken': 215944.0, 'time_delta': '2 days, 11:59:04', 'additions': 286, 'deletions': 2310, 'state': 'closed'}, {'id': 1292628841, 'number': 948, 'closed': datetime.datetime(2023, 3, 28, 15, 27, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 28, 9, 14, 47, tzinfo=datetime.timezone.utc), 'time_taken': 22344.0, 'time_delta': '6:12:24', 'additions': 38, 'deletions': 24, 'state': 'closed'}, {'id': 1290927574, 'number': 946, 'closed': datetime.datetime(2023, 5, 5, 0, 20, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 27, 7, 59, 41, tzinfo=datetime.timezone.utc), 'time_taken': 3342022.0, 'time_delta': '38 days, 16:20:22', 'additions': 81, 'deletions': 0, 'state': 'closed'}, {'id': 1290921796, 'number': 945, 'closed': datetime.datetime(2023, 3, 28, 2, 22, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 27, 7, 56, 13, tzinfo=datetime.timezone.utc), 'time_taken': 66375.0, 'time_delta': '18:26:15', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1288450690, 'number': 940, 'closed': datetime.datetime(2023, 3, 24, 7, 59, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 24, 4, 44, 38, tzinfo=datetime.timezone.utc), 'time_taken': 11709.0, 'time_delta': '3:15:09', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1285900222, 'number': 939, 'closed': datetime.datetime(2023, 3, 24, 8, 0, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 22, 13, 53, 1, tzinfo=datetime.timezone.utc), 'time_taken': 151656.0, 'time_delta': '1 day, 18:07:36', 'additions': 6, 'deletions': 2, 'state': 'closed'}, {'id': 1285876327, 'number': 938, 'closed': datetime.datetime(2023, 3, 24, 6, 19, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 22, 13, 39, 6, tzinfo=datetime.timezone.utc), 'time_taken': 146417.0, 'time_delta': '1 day, 16:40:17', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1283725042, 'number': 935, 'closed': datetime.datetime(2023, 3, 22, 2, 24, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 21, 7, 13, 26, tzinfo=datetime.timezone.utc), 'time_taken': 69082.0, 'time_delta': '19:11:22', 'additions': 65, 'deletions': 0, 'state': 'closed'}, {'id': 1282862943, 'number': 933, 'closed': datetime.datetime(2023, 4, 2, 11, 32, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 20, 15, 35, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1108597.0, 'time_delta': '12 days, 19:56:37', 'additions': 18, 'deletions': 6, 'state': 'closed'}, {'id': 1274955699, 'number': 930, 'closed': datetime.datetime(2023, 5, 5, 2, 33, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 14, 12, 28, 32, tzinfo=datetime.timezone.utc), 'time_taken': 4457079.0, 'time_delta': '51 days, 14:04:39', 'additions': 54, 'deletions': 2, 'state': 'closed'}, {'id': 1272344055, 'number': 928, 'closed': datetime.datetime(2023, 3, 14, 14, 31, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 12, 14, 51, 10, tzinfo=datetime.timezone.utc), 'time_taken': 171642.0, 'time_delta': '1 day, 23:40:42', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1266441716, 'number': 917, 'closed': datetime.datetime(2023, 3, 7, 17, 45, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 7, 15, 1, 30, tzinfo=datetime.timezone.utc), 'time_taken': 9846.0, 'time_delta': '2:44:06', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 1264350107, 'number': 916, 'closed': datetime.datetime(2023, 5, 5, 0, 37, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 6, 12, 11, 21, tzinfo=datetime.timezone.utc), 'time_taken': 5142348.0, 'time_delta': '59 days, 12:25:48', 'additions': 293, 'deletions': 0, 'state': 'closed'}, {'id': 1264011637, 'number': 915, 'closed': datetime.datetime(2023, 3, 7, 3, 21, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 6, 8, 18, 25, tzinfo=datetime.timezone.utc), 'time_taken': 68579.0, 'time_delta': '19:02:59', 'additions': 31, 'deletions': 1, 'state': 'closed'}, {'id': 1263994491, 'number': 914, 'closed': datetime.datetime(2023, 3, 9, 2, 13, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 6, 8, 6, 3, tzinfo=datetime.timezone.utc), 'time_taken': 238053.0, 'time_delta': '2 days, 18:07:33', 'additions': 12, 'deletions': 5, 'state': 'closed'}, {'id': 1263149668, 'number': 913, 'closed': datetime.datetime(2023, 3, 22, 2, 11, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 4, 17, 10, 48, tzinfo=datetime.timezone.utc), 'time_taken': 1501248.0, 'time_delta': '17 days, 9:00:48', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 1263148558, 'number': 912, 'closed': datetime.datetime(2023, 3, 7, 2, 38, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 4, 17, 6, 10, tzinfo=datetime.timezone.utc), 'time_taken': 207150.0, 'time_delta': '2 days, 9:32:30', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 1255154332, 'number': 910, 'closed': datetime.datetime(2023, 3, 6, 12, 12, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 27, 9, 40, 39, tzinfo=datetime.timezone.utc), 'time_taken': 613884.0, 'time_delta': '7 days, 2:31:24', 'additions': 151, 'deletions': 6, 'state': 'closed'}, {'id': 1255139497, 'number': 909, 'closed': datetime.datetime(2023, 3, 7, 2, 36, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 27, 9, 30, 11, tzinfo=datetime.timezone.utc), 'time_taken': 666396.0, 'time_delta': '7 days, 17:06:36', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1190900041, 'number': 883, 'closed': datetime.datetime(2023, 3, 7, 4, 42, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 9, 14, 35, 41, tzinfo=datetime.timezone.utc), 'time_taken': 4889192.0, 'time_delta': '56 days, 14:06:32', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1190790935, 'number': 882, 'closed': datetime.datetime(2023, 3, 7, 4, 49, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 9, 13, 23, 18, tzinfo=datetime.timezone.utc), 'time_taken': 4893977.0, 'time_delta': '56 days, 15:26:17', 'additions': 21, 'deletions': 1, 'state': 'closed'}, {'id': 1151727946, 'number': 864, 'closed': datetime.datetime(2022, 12, 8, 9, 12, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 7, 14, 46, 45, tzinfo=datetime.timezone.utc), 'time_taken': 66328.0, 'time_delta': '18:25:28', 'additions': 18, 'deletions': 15, 'state': 'closed'}, {'id': 1136899950, 'number': 842, 'closed': datetime.datetime(2022, 11, 29, 2, 29, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 28, 2, 14, 3, tzinfo=datetime.timezone.utc), 'time_taken': 87310.0, 'time_delta': '1 day, 0:15:10', 'additions': 45, 'deletions': 6, 'state': 'closed'}, {'id': 1136596690, 'number': 841, 'closed': datetime.datetime(2022, 11, 29, 2, 37, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 27, 3, 38, 2, tzinfo=datetime.timezone.utc), 'time_taken': 169183.0, 'time_delta': '1 day, 22:59:43', 'additions': 12, 'deletions': 1, 'state': 'closed'}, {'id': 1136412857, 'number': 840, 'closed': datetime.datetime(2022, 11, 29, 2, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 26, 7, 55, 35, tzinfo=datetime.timezone.utc), 'time_taken': 239665.0, 'time_delta': '2 days, 18:34:25', 'additions': 48, 'deletions': 31, 'state': 'closed'}, {'id': 1135908295, 'number': 836, 'closed': datetime.datetime(2022, 11, 25, 17, 11, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 25, 12, 26, 1, tzinfo=datetime.timezone.utc), 'time_taken': 17137.0, 'time_delta': '4:45:37', 'additions': 42, 'deletions': 1, 'state': 'closed'}, {'id': 1133231873, 'number': 829, 'closed': datetime.datetime(2022, 11, 24, 8, 35, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 23, 10, 14, 39, tzinfo=datetime.timezone.utc), 'time_taken': 80446.0, 'time_delta': '22:20:46', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1132925426, 'number': 827, 'closed': datetime.datetime(2022, 11, 24, 8, 28, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 23, 6, 23, 46, tzinfo=datetime.timezone.utc), 'time_taken': 93891.0, 'time_delta': '1 day, 2:04:51', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 1131418632, 'number': 822, 'closed': datetime.datetime(2022, 11, 22, 15, 1, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 22, 9, 15, 50, tzinfo=datetime.timezone.utc), 'time_taken': 20726.0, 'time_delta': '5:45:26', 'additions': 14, 'deletions': 16, 'state': 'closed'}, {'id': 1131409731, 'number': 821, 'closed': datetime.datetime(2022, 11, 22, 15, 1, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 22, 9, 9, 51, tzinfo=datetime.timezone.utc), 'time_taken': 21115.0, 'time_delta': '5:51:55', 'additions': 5, 'deletions': 6, 'state': 'closed'}, {'id': 1131403319, 'number': 820, 'closed': datetime.datetime(2022, 11, 22, 15, 2, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 22, 9, 5, 46, tzinfo=datetime.timezone.utc), 'time_taken': 21377.0, 'time_delta': '5:56:17', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1129970233, 'number': 818, 'closed': datetime.datetime(2022, 11, 22, 2, 8, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 21, 12, 19, 2, tzinfo=datetime.timezone.utc), 'time_taken': 49753.0, 'time_delta': '13:49:13', 'additions': 145, 'deletions': 105, 'state': 'closed'}, {'id': 1129930470, 'number': 817, 'closed': datetime.datetime(2022, 11, 22, 2, 1, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 21, 11, 46, 53, tzinfo=datetime.timezone.utc), 'time_taken': 51268.0, 'time_delta': '14:14:28', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1129157584, 'number': 816, 'closed': datetime.datetime(2022, 11, 22, 2, 19, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 20, 14, 15, 8, tzinfo=datetime.timezone.utc), 'time_taken': 129882.0, 'time_delta': '1 day, 12:04:42', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1129150775, 'number': 814, 'closed': datetime.datetime(2022, 11, 22, 2, 0, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 20, 13, 49, 24, tzinfo=datetime.timezone.utc), 'time_taken': 130281.0, 'time_delta': '1 day, 12:11:21', 'additions': 30, 'deletions': 0, 'state': 'closed'}, {'id': 1129098068, 'number': 813, 'closed': datetime.datetime(2022, 11, 22, 2, 21, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 20, 10, 14, 54, tzinfo=datetime.timezone.utc), 'time_taken': 144397.0, 'time_delta': '1 day, 16:06:37', 'additions': 36, 'deletions': 12, 'state': 'closed'}, {'id': 1128814445, 'number': 812, 'closed': datetime.datetime(2022, 11, 22, 1, 54, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 19, 14, 19, tzinfo=datetime.timezone.utc), 'time_taken': 214533.0, 'time_delta': '2 days, 11:35:33', 'additions': 0, 'deletions': 6, 'state': 'closed'}, {'id': 1128734373, 'number': 811, 'closed': datetime.datetime(2022, 11, 19, 11, 37, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 19, 11, 37, 12, tzinfo=datetime.timezone.utc), 'time_taken': 23.0, 'time_delta': '0:00:23', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1111974307, 'number': 794, 'closed': datetime.datetime(2023, 3, 7, 4, 50, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 6, 14, 35, 2, tzinfo=datetime.timezone.utc), 'time_taken': 10419327.0, 'time_delta': '120 days, 14:15:27', 'additions': 39, 'deletions': 0, 'state': 'closed'}, {'id': 1109511410, 'number': 791, 'closed': datetime.datetime(2022, 11, 3, 16, 15, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 3, 12, 19, 41, tzinfo=datetime.timezone.utc), 'time_taken': 14128.0, 'time_delta': '3:55:28', 'additions': 12, 'deletions': 8, 'state': 'closed'}, {'id': 1106801302, 'number': 783, 'closed': datetime.datetime(2022, 11, 22, 2, 22, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 1, 14, 11, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1771855.0, 'time_delta': '20 days, 12:10:55', 'additions': 39, 'deletions': 0, 'state': 'closed'}, {'id': 1106107554, 'number': 782, 'closed': datetime.datetime(2022, 11, 15, 3, 13, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 1, 1, 20, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1216368.0, 'time_delta': '14 days, 1:52:48', 'additions': 83, 'deletions': 26, 'state': 'closed'}, {'id': 1098303930, 'number': 777, 'closed': datetime.datetime(2022, 10, 25, 3, 13, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 25, 3, 5, 14, tzinfo=datetime.timezone.utc), 'time_taken': 521.0, 'time_delta': '0:08:41', 'additions': 7, 'deletions': 7, 'state': 'closed'}, {'id': 1097376491, 'number': 776, 'closed': datetime.datetime(2022, 10, 25, 2, 52, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 24, 12, 2, 14, tzinfo=datetime.timezone.utc), 'time_taken': 53411.0, 'time_delta': '14:50:11', 'additions': 27, 'deletions': 23, 'state': 'closed'}, {'id': 1097329531, 'number': 775, 'closed': datetime.datetime(2022, 10, 25, 2, 51, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 24, 11, 16, 26, tzinfo=datetime.timezone.utc), 'time_taken': 56119.0, 'time_delta': '15:35:19', 'additions': 16, 'deletions': 11, 'state': 'closed'}, {'id': 1096156632, 'number': 773, 'closed': datetime.datetime(2022, 10, 25, 2, 49, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 22, 13, 17, 21, tzinfo=datetime.timezone.utc), 'time_taken': 221530.0, 'time_delta': '2 days, 13:32:10', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 1096133162, 'number': 772, 'closed': datetime.datetime(2022, 11, 15, 3, 8, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 22, 12, 3, 54, tzinfo=datetime.timezone.utc), 'time_taken': 2041501.0, 'time_delta': '23 days, 15:05:01', 'additions': 92, 'deletions': 17, 'state': 'closed'}, {'id': 1061058448, 'number': 755, 'closed': datetime.datetime(2022, 11, 1, 3, 14, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 20, 4, 47, 10, tzinfo=datetime.timezone.utc), 'time_taken': 3623231.0, 'time_delta': '41 days, 22:27:11', 'additions': 87, 'deletions': 3, 'state': 'closed'}, {'id': 1061058416, 'number': 754, 'closed': datetime.datetime(2022, 11, 1, 3, 14, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 20, 4, 47, 8, tzinfo=datetime.timezone.utc), 'time_taken': 3623213.0, 'time_delta': '41 days, 22:26:53', 'additions': 79, 'deletions': 5, 'state': 'closed'}, {'id': 1059545966, 'number': 753, 'closed': datetime.datetime(2022, 10, 4, 7, 44, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 18, 13, 44, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1360794.0, 'time_delta': '15 days, 17:59:54', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1043251875, 'number': 744, 'closed': datetime.datetime(2022, 10, 25, 2, 33, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 1, 6, 7, 29, tzinfo=datetime.timezone.utc), 'time_taken': 4652736.0, 'time_delta': '53 days, 20:25:36', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 998377529, 'number': 718, 'closed': datetime.datetime(2022, 7, 16, 9, 10, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 16, 8, 4, 51, tzinfo=datetime.timezone.utc), 'time_taken': 3934.0, 'time_delta': '1:05:34', 'additions': 4, 'deletions': 12, 'state': 'closed'}, {'id': 993107305, 'number': 706, 'closed': datetime.datetime(2022, 10, 25, 2, 34, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 11, 13, 27, 45, tzinfo=datetime.timezone.utc), 'time_taken': 9119194.0, 'time_delta': '105 days, 13:06:34', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 993097747, 'number': 705, 'closed': datetime.datetime(2022, 11, 1, 3, 13, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 11, 13, 19, 19, tzinfo=datetime.timezone.utc), 'time_taken': 9726848.0, 'time_delta': '112 days, 13:54:08', 'additions': 66, 'deletions': 160, 'state': 'closed'}, {'id': 979066572, 'number': 661, 'closed': datetime.datetime(2022, 7, 5, 9, 28, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 25, 14, 41, 8, tzinfo=datetime.timezone.utc), 'time_taken': 845264.0, 'time_delta': '9 days, 18:47:44', 'additions': 30, 'deletions': 1, 'state': 'closed'}, {'id': 897008668, 'number': 613, 'closed': datetime.datetime(2022, 4, 5, 0, 15, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 1, 6, 57, 53, tzinfo=datetime.timezone.utc), 'time_taken': 321468.0, 'time_delta': '3 days, 17:17:48', 'additions': 8, 'deletions': 9, 'state': 'closed'}, {'id': 892385694, 'number': 597, 'closed': datetime.datetime(2022, 3, 29, 2, 11, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 28, 23, 12, 25, tzinfo=datetime.timezone.utc), 'time_taken': 10769.0, 'time_delta': '2:59:29', 'additions': 33, 'deletions': 1, 'state': 'closed'}, {'id': 890251403, 'number': 587, 'closed': datetime.datetime(2022, 7, 5, 6, 15, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 26, 10, 44, 44, tzinfo=datetime.timezone.utc), 'time_taken': 8710223.0, 'time_delta': '100 days, 19:30:23', 'additions': 70, 'deletions': 62, 'state': 'closed'}, {'id': 890250464, 'number': 586, 'closed': datetime.datetime(2022, 5, 17, 2, 35, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 26, 10, 42, 50, tzinfo=datetime.timezone.utc), 'time_taken': 4463562.0, 'time_delta': '51 days, 15:52:42', 'additions': 13, 'deletions': 21, 'state': 'closed'}, {'id': 888217830, 'number': 579, 'closed': datetime.datetime(2022, 3, 29, 2, 19, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 24, 10, 51, 16, tzinfo=datetime.timezone.utc), 'time_taken': 401296.0, 'time_delta': '4 days, 15:28:16', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 878846218, 'number': 568, 'closed': datetime.datetime(2022, 3, 15, 2, 7, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 14, 9, 56, 46, tzinfo=datetime.timezone.utc), 'time_taken': 58247.0, 'time_delta': '16:10:47', 'additions': 8, 'deletions': 0, 'state': 'closed'}, {'id': 878788836, 'number': 566, 'closed': datetime.datetime(2022, 3, 15, 2, 8, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 14, 8, 56, 29, tzinfo=datetime.timezone.utc), 'time_taken': 61893.0, 'time_delta': '17:11:33', 'additions': 6, 'deletions': 2, 'state': 'closed'}, {'id': 878364244, 'number': 562, 'closed': datetime.datetime(2022, 3, 15, 2, 9, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 13, 11, 3, 17, tzinfo=datetime.timezone.utc), 'time_taken': 140767.0, 'time_delta': '1 day, 15:06:07', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 876263315, 'number': 555, 'closed': datetime.datetime(2022, 3, 11, 19, 53, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 10, 10, 48, 12, tzinfo=datetime.timezone.utc), 'time_taken': 119117.0, 'time_delta': '1 day, 9:05:17', 'additions': 42, 'deletions': 15, 'state': 'closed'}, {'id': 873799333, 'number': 553, 'closed': datetime.datetime(2022, 3, 8, 5, 17, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 8, 4, 26, 12, tzinfo=datetime.timezone.utc), 'time_taken': 3057.0, 'time_delta': '0:50:57', 'additions': 73, 'deletions': 49, 'state': 'closed'}, {'id': 867423202, 'number': 551, 'closed': datetime.datetime(2022, 3, 1, 5, 47, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 1, 3, 42, 11, tzinfo=datetime.timezone.utc), 'time_taken': 7502.0, 'time_delta': '2:05:02', 'additions': 11, 'deletions': 6, 'state': 'closed'}, {'id': 867308839, 'number': 550, 'closed': datetime.datetime(2022, 3, 1, 10, 50, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 1, 0, 9, 42, tzinfo=datetime.timezone.utc), 'time_taken': 38467.0, 'time_delta': '10:41:07', 'additions': 16, 'deletions': 24, 'state': 'closed'}, {'id': 866797071, 'number': 548, 'closed': datetime.datetime(2022, 3, 1, 9, 49, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 28, 13, 33, 39, tzinfo=datetime.timezone.utc), 'time_taken': 72962.0, 'time_delta': '20:16:02', 'additions': 67, 'deletions': 4, 'state': 'closed'}, {'id': 860034290, 'number': 547, 'closed': datetime.datetime(2022, 3, 8, 5, 16, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 22, 4, 52, 54, tzinfo=datetime.timezone.utc), 'time_taken': 1210990.0, 'time_delta': '14 days, 0:23:10', 'additions': 1557, 'deletions': 146, 'state': 'closed'}, {'id': 853111517, 'number': 537, 'closed': datetime.datetime(2022, 2, 21, 19, 11, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 15, 10, 51, 33, tzinfo=datetime.timezone.utc), 'time_taken': 548397.0, 'time_delta': '6 days, 8:19:57', 'additions': 121, 'deletions': 26, 'state': 'closed'}, {'id': 852722850, 'number': 536, 'closed': datetime.datetime(2022, 3, 1, 5, 48, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 15, 1, 47, 48, tzinfo=datetime.timezone.utc), 'time_taken': 1224019.0, 'time_delta': '14 days, 4:00:19', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 852082491, 'number': 535, 'closed': datetime.datetime(2022, 2, 15, 4, 42, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 14, 13, 55, 22, tzinfo=datetime.timezone.utc), 'time_taken': 53210.0, 'time_delta': '14:46:50', 'additions': 18, 'deletions': 0, 'state': 'closed'}, {'id': 851569189, 'number': 534, 'closed': datetime.datetime(2022, 2, 27, 2, 11, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 14, 4, 35, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1114546.0, 'time_delta': '12 days, 21:35:46', 'additions': 95, 'deletions': 2, 'state': 'closed'}, {'id': 851560407, 'number': 533, 'closed': datetime.datetime(2022, 2, 21, 19, 8, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 14, 4, 22, 46, tzinfo=datetime.timezone.utc), 'time_taken': 657949.0, 'time_delta': '7 days, 14:45:49', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 851430799, 'number': 532, 'closed': datetime.datetime(2022, 3, 1, 5, 48, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 14, 1, 18, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1312196.0, 'time_delta': '15 days, 4:29:56', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 850692323, 'number': 529, 'closed': datetime.datetime(2022, 2, 13, 14, 2, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 13, 13, 9, 33, tzinfo=datetime.timezone.utc), 'time_taken': 3184.0, 'time_delta': '0:53:04', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 850666374, 'number': 528, 'closed': datetime.datetime(2022, 3, 8, 5, 17, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 13, 12, 49, 21, tzinfo=datetime.timezone.utc), 'time_taken': 1960106.0, 'time_delta': '22 days, 16:28:26', 'additions': 0, 'deletions': 4, 'state': 'closed'}, {'id': 850611929, 'number': 527, 'closed': datetime.datetime(2022, 2, 22, 6, 5, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 13, 12, 6, 4, tzinfo=datetime.timezone.utc), 'time_taken': 755962.0, 'time_delta': '8 days, 17:59:22', 'additions': 141, 'deletions': 59, 'state': 'closed'}, {'id': 841580528, 'number': 522, 'closed': datetime.datetime(2022, 3, 1, 10, 52, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 7, 10, 49, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1901003.0, 'time_delta': '22 days, 0:03:23', 'additions': 10, 'deletions': 0, 'state': 'closed'}, {'id': 840874035, 'number': 521, 'closed': datetime.datetime(2022, 2, 5, 20, 3, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 5, 14, 24, 1, tzinfo=datetime.timezone.utc), 'time_taken': 20398.0, 'time_delta': '5:39:58', 'additions': 197, 'deletions': 0, 'state': 'closed'}, {'id': 840264479, 'number': 520, 'closed': datetime.datetime(2022, 2, 5, 20, 3, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 4, 13, 32, 4, tzinfo=datetime.timezone.utc), 'time_taken': 109909.0, 'time_delta': '1 day, 6:31:49', 'additions': 394, 'deletions': 0, 'state': 'closed'}, {'id': 839317022, 'number': 518, 'closed': datetime.datetime(2022, 3, 24, 9, 1, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 3, 13, 45, 53, tzinfo=datetime.timezone.utc), 'time_taken': 4216544.0, 'time_delta': '48 days, 19:15:44', 'additions': 994, 'deletions': 1, 'state': 'closed'}, {'id': 839251342, 'number': 517, 'closed': datetime.datetime(2022, 2, 5, 20, 1, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 3, 12, 31, 17, tzinfo=datetime.timezone.utc), 'time_taken': 199834.0, 'time_delta': '2 days, 7:30:34', 'additions': 792, 'deletions': 0, 'state': 'closed'}, {'id': 838333736, 'number': 516, 'closed': datetime.datetime(2022, 2, 5, 20, 1, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 2, 13, 58, tzinfo=datetime.timezone.utc), 'time_taken': 281026.0, 'time_delta': '3 days, 6:03:46', 'additions': 1352, 'deletions': 0, 'state': 'closed'}, {'id': 838294640, 'number': 515, 'closed': datetime.datetime(2022, 2, 5, 20, 1, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 2, 13, 16, 15, tzinfo=datetime.timezone.utc), 'time_taken': 283525.0, 'time_delta': '3 days, 6:45:25', 'additions': 995, 'deletions': 0, 'state': 'closed'}, {'id': 838262247, 'number': 514, 'closed': datetime.datetime(2022, 2, 5, 20, 1, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 2, 12, 40, 24, tzinfo=datetime.timezone.utc), 'time_taken': 285669.0, 'time_delta': '3 days, 7:21:09', 'additions': 539, 'deletions': 0, 'state': 'closed'}, {'id': 838255824, 'number': 513, 'closed': datetime.datetime(2022, 2, 5, 19, 59, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 2, 12, 32, 19, tzinfo=datetime.timezone.utc), 'time_taken': 286060.0, 'time_delta': '3 days, 7:27:40', 'additions': 7, 'deletions': 0, 'state': 'closed'}, {'id': 837221644, 'number': 512, 'closed': datetime.datetime(2022, 2, 5, 19, 59, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 1, 13, 29, 18, tzinfo=datetime.timezone.utc), 'time_taken': 369017.0, 'time_delta': '4 days, 6:30:17', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 837206798, 'number': 511, 'closed': datetime.datetime(2022, 2, 5, 19, 58, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 1, 13, 14, 37, tzinfo=datetime.timezone.utc), 'time_taken': 369862.0, 'time_delta': '4 days, 6:44:22', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 835371147, 'number': 510, 'closed': datetime.datetime(2022, 2, 5, 19, 57, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 30, 13, 27, 16, tzinfo=datetime.timezone.utc), 'time_taken': 541820.0, 'time_delta': '6 days, 6:30:20', 'additions': 18, 'deletions': 22, 'state': 'closed'}, {'id': 829399751, 'number': 499, 'closed': datetime.datetime(2022, 3, 15, 2, 6, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 22, 10, 48, 30, tzinfo=datetime.timezone.utc), 'time_taken': 4461497.0, 'time_delta': '51 days, 15:18:17', 'additions': 8145, 'deletions': 253, 'state': 'closed'}, {'id': 823917442, 'number': 492, 'closed': datetime.datetime(2022, 2, 13, 12, 39, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 16, 14, 26, 10, tzinfo=datetime.timezone.utc), 'time_taken': 2412790.0, 'time_delta': '27 days, 22:13:10', 'additions': 306, 'deletions': 131, 'state': 'closed'}, {'id': 813842197, 'number': 480, 'closed': datetime.datetime(2022, 1, 5, 1, 42, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 4, 13, 4, 53, tzinfo=datetime.timezone.utc), 'time_taken': 45433.0, 'time_delta': '12:37:13', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 813040393, 'number': 478, 'closed': datetime.datetime(2022, 3, 29, 2, 20, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 3, 10, 21, 20, tzinfo=datetime.timezone.utc), 'time_taken': 7315126.0, 'time_delta': '84 days, 15:58:46', 'additions': 158, 'deletions': 37, 'state': 'closed'}, {'id': 812962756, 'number': 477, 'closed': datetime.datetime(2022, 1, 4, 2, 19, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 3, 8, 0, 52, tzinfo=datetime.timezone.utc), 'time_taken': 65938.0, 'time_delta': '18:18:58', 'additions': 966, 'deletions': 4, 'state': 'closed'}, {'id': 812671079, 'number': 475, 'closed': datetime.datetime(2022, 1, 4, 2, 14, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 2, 2, 29, 46, tzinfo=datetime.timezone.utc), 'time_taken': 171894.0, 'time_delta': '1 day, 23:44:54', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 812563888, 'number': 473, 'closed': datetime.datetime(2022, 1, 4, 2, 13, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 1, 12, 0, 15, tzinfo=datetime.timezone.utc), 'time_taken': 224006.0, 'time_delta': '2 days, 14:13:26', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 812244575, 'number': 471, 'closed': datetime.datetime(2022, 1, 4, 2, 13, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 31, 5, 11, 35, tzinfo=datetime.timezone.utc), 'time_taken': 334899.0, 'time_delta': '3 days, 21:01:39', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 811978919, 'number': 468, 'closed': datetime.datetime(2022, 1, 4, 2, 12, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 30, 13, 30, 15, tzinfo=datetime.timezone.utc), 'time_taken': 391324.0, 'time_delta': '4 days, 12:42:04', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 810664504, 'number': 464, 'closed': datetime.datetime(2022, 1, 3, 10, 21, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 28, 1, 23, 5, tzinfo=datetime.timezone.utc), 'time_taken': 550704.0, 'time_delta': '6 days, 8:58:24', 'additions': 195, 'deletions': 57, 'state': 'closed'}, {'id': 810014252, 'number': 461, 'closed': datetime.datetime(2021, 12, 28, 3, 13, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 26, 13, 6, 24, tzinfo=datetime.timezone.utc), 'time_taken': 137230.0, 'time_delta': '1 day, 14:07:10', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 809896059, 'number': 459, 'closed': datetime.datetime(2022, 1, 4, 2, 3, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 25, 13, 40, 51, tzinfo=datetime.timezone.utc), 'time_taken': 822143.0, 'time_delta': '9 days, 12:22:23', 'additions': 45, 'deletions': 1, 'state': 'closed'}, {'id': 809895474, 'number': 458, 'closed': datetime.datetime(2021, 12, 28, 3, 8, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 25, 13, 34, 18, tzinfo=datetime.timezone.utc), 'time_taken': 221648.0, 'time_delta': '2 days, 13:34:08', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 809136056, 'number': 456, 'closed': datetime.datetime(2022, 2, 14, 1, 14, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 23, 12, 43, 17, tzinfo=datetime.timezone.utc), 'time_taken': 4537870.0, 'time_delta': '52 days, 12:31:10', 'additions': 74, 'deletions': 20, 'state': 'closed'}, {'id': 808035580, 'number': 455, 'closed': datetime.datetime(2021, 12, 23, 15, 7, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 22, 3, 8, 53, tzinfo=datetime.timezone.utc), 'time_taken': 129519.0, 'time_delta': '1 day, 11:58:39', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 806166726, 'number': 450, 'closed': datetime.datetime(2021, 12, 20, 21, 22, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 20, 0, 26, 20, tzinfo=datetime.timezone.utc), 'time_taken': 75399.0, 'time_delta': '20:56:39', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 806160393, 'number': 449, 'closed': datetime.datetime(2021, 12, 20, 21, 22, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 20, 0, 0, 30, tzinfo=datetime.timezone.utc), 'time_taken': 76929.0, 'time_delta': '21:22:09', 'additions': 1, 'deletions': 3, 'state': 'closed'}, {'id': 805787930, 'number': 447, 'closed': datetime.datetime(2021, 12, 18, 21, 18, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 18, 5, 16, 22, tzinfo=datetime.timezone.utc), 'time_taken': 57744.0, 'time_delta': '16:02:24', 'additions': 8, 'deletions': 3, 'state': 'closed'}, {'id': 805449258, 'number': 445, 'closed': datetime.datetime(2021, 12, 17, 18, 18, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 17, 15, 11, 4, tzinfo=datetime.timezone.utc), 'time_taken': 11271.0, 'time_delta': '3:07:51', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 805430868, 'number': 444, 'closed': datetime.datetime(2021, 12, 17, 18, 17, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 17, 14, 48, 9, tzinfo=datetime.timezone.utc), 'time_taken': 12570.0, 'time_delta': '3:29:30', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 805150396, 'number': 440, 'closed': datetime.datetime(2021, 12, 17, 9, 1, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 17, 8, 32, 19, tzinfo=datetime.timezone.utc), 'time_taken': 1728.0, 'time_delta': '0:28:48', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 802022877, 'number': 433, 'closed': datetime.datetime(2021, 12, 16, 17, 26, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 14, 7, 9, 46, tzinfo=datetime.timezone.utc), 'time_taken': 209790.0, 'time_delta': '2 days, 10:16:30', 'additions': 310, 'deletions': 295, 'state': 'closed'}, {'id': 801991518, 'number': 432, 'closed': datetime.datetime(2021, 12, 15, 22, 45, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 14, 6, 12, 11, tzinfo=datetime.timezone.utc), 'time_taken': 146002.0, 'time_delta': '1 day, 16:33:22', 'additions': 6, 'deletions': 3, 'state': 'closed'}, {'id': 800824229, 'number': 430, 'closed': datetime.datetime(2021, 12, 14, 2, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 13, 2, 35, 32, tzinfo=datetime.timezone.utc), 'time_taken': 86188.0, 'time_delta': '23:56:28', 'additions': 26, 'deletions': 7, 'state': 'closed'}, {'id': 796837132, 'number': 426, 'closed': datetime.datetime(2021, 12, 14, 2, 44, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 7, 11, 37, 41, tzinfo=datetime.timezone.utc), 'time_taken': 572823.0, 'time_delta': '6 days, 15:07:03', 'additions': 122, 'deletions': 69, 'state': 'closed'}, {'id': 796620027, 'number': 425, 'closed': datetime.datetime(2021, 12, 7, 7, 54, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 7, 7, 13, 9, tzinfo=datetime.timezone.utc), 'time_taken': 2460.0, 'time_delta': '0:41:00', 'additions': 139, 'deletions': 352, 'state': 'closed'}, {'id': 795300081, 'number': 421, 'closed': datetime.datetime(2021, 12, 7, 3, 39, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 5, 13, 51, 46, tzinfo=datetime.timezone.utc), 'time_taken': 136080.0, 'time_delta': '1 day, 13:48:00', 'additions': 202, 'deletions': 91, 'state': 'closed'}, {'id': 790531688, 'number': 417, 'closed': datetime.datetime(2021, 12, 14, 2, 6, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 29, 10, 28, 55, tzinfo=datetime.timezone.utc), 'time_taken': 1265867.0, 'time_delta': '14 days, 15:37:47', 'additions': 6195, 'deletions': 15, 'state': 'closed'}, {'id': 790014618, 'number': 415, 'closed': datetime.datetime(2021, 11, 30, 2, 44, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 28, 1, 44, 13, tzinfo=datetime.timezone.utc), 'time_taken': 176434.0, 'time_delta': '2 days, 1:00:34', 'additions': 41, 'deletions': 47, 'state': 'closed'}, {'id': 789935889, 'number': 414, 'closed': datetime.datetime(2021, 11, 30, 2, 44, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 27, 13, 48, 11, tzinfo=datetime.timezone.utc), 'time_taken': 219358.0, 'time_delta': '2 days, 12:55:58', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 789863995, 'number': 413, 'closed': datetime.datetime(2021, 11, 30, 2, 41, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 27, 3, 17, 37, tzinfo=datetime.timezone.utc), 'time_taken': 257015.0, 'time_delta': '2 days, 23:23:35', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 789566923, 'number': 412, 'closed': datetime.datetime(2021, 11, 30, 2, 40, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 26, 13, 23, 33, tzinfo=datetime.timezone.utc), 'time_taken': 307019.0, 'time_delta': '3 days, 13:16:59', 'additions': 17, 'deletions': 14, 'state': 'closed'}, {'id': 788828212, 'number': 411, 'closed': datetime.datetime(2021, 12, 7, 3, 40, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 25, 13, 6, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1002823.0, 'time_delta': '11 days, 14:33:43', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 788776443, 'number': 410, 'closed': datetime.datetime(2021, 11, 25, 12, 2, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 25, 11, 59, 22, tzinfo=datetime.timezone.utc), 'time_taken': 211.0, 'time_delta': '0:03:31', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 785746432, 'number': 407, 'closed': datetime.datetime(2021, 11, 25, 8, 25, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 22, 7, 43, 33, tzinfo=datetime.timezone.utc), 'time_taken': 261720.0, 'time_delta': '3 days, 0:42:00', 'additions': 1, 'deletions': 7, 'state': 'closed'}, {'id': 785347027, 'number': 403, 'closed': datetime.datetime(2022, 1, 24, 14, 13, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 21, 8, 28, 45, tzinfo=datetime.timezone.utc), 'time_taken': 5550264.0, 'time_delta': '64 days, 5:44:24', 'additions': 591, 'deletions': 24, 'state': 'closed'}, {'id': 784185080, 'number': 400, 'closed': datetime.datetime(2021, 11, 19, 0, 49, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 18, 23, 0, 2, tzinfo=datetime.timezone.utc), 'time_taken': 6580.0, 'time_delta': '1:49:40', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 782719509, 'number': 396, 'closed': datetime.datetime(2021, 11, 25, 9, 4, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 17, 13, 20, 9, tzinfo=datetime.timezone.utc), 'time_taken': 675874.0, 'time_delta': '7 days, 19:44:34', 'additions': 26, 'deletions': 53, 'state': 'closed'}, {'id': 782582724, 'number': 395, 'closed': datetime.datetime(2021, 12, 7, 12, 28, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 17, 10, 34, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1734847.0, 'time_delta': '20 days, 1:54:07', 'additions': 13, 'deletions': 1, 'state': 'closed'}, {'id': 780411579, 'number': 392, 'closed': datetime.datetime(2021, 11, 16, 11, 59, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 15, 8, 11, 49, tzinfo=datetime.timezone.utc), 'time_taken': 100090.0, 'time_delta': '1 day, 3:48:10', 'additions': 6, 'deletions': 2, 'state': 'closed'}, {'id': 780389525, 'number': 391, 'closed': datetime.datetime(2022, 1, 22, 10, 54, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 15, 7, 36, 36, tzinfo=datetime.timezone.utc), 'time_taken': 5887062.0, 'time_delta': '68 days, 3:17:42', 'additions': 229, 'deletions': 5, 'state': 'closed'}, {'id': 779909815, 'number': 389, 'closed': datetime.datetime(2021, 11, 25, 8, 55, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 13, 14, 53, 14, tzinfo=datetime.timezone.utc), 'time_taken': 1015341.0, 'time_delta': '11 days, 18:02:21', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 779905596, 'number': 388, 'closed': datetime.datetime(2021, 11, 13, 14, 28, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 13, 14, 23, 41, tzinfo=datetime.timezone.utc), 'time_taken': 310.0, 'time_delta': '0:05:10', 'additions': 1, 'deletions': 3, 'state': 'closed'}, {'id': 779904547, 'number': 387, 'closed': datetime.datetime(2021, 11, 25, 8, 54, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 13, 14, 15, 57, tzinfo=datetime.timezone.utc), 'time_taken': 1017506.0, 'time_delta': '11 days, 18:38:26', 'additions': 35, 'deletions': 8, 'state': 'closed'}, {'id': 777682215, 'number': 386, 'closed': datetime.datetime(2021, 11, 11, 0, 21, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 10, 14, 58, 12, tzinfo=datetime.timezone.utc), 'time_taken': 33800.0, 'time_delta': '9:23:20', 'additions': 24, 'deletions': 9, 'state': 'closed'}, {'id': 777144947, 'number': 381, 'closed': datetime.datetime(2021, 11, 25, 8, 35, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 10, 1, 35, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1321188.0, 'time_delta': '15 days, 6:59:48', 'additions': 7, 'deletions': 0, 'state': 'closed'}, {'id': 777117475, 'number': 380, 'closed': datetime.datetime(2021, 11, 10, 0, 58, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 10, 0, 35, 7, tzinfo=datetime.timezone.utc), 'time_taken': 1413.0, 'time_delta': '0:23:33', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 775626040, 'number': 375, 'closed': datetime.datetime(2021, 11, 8, 16, 48, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 8, 14, 39, 10, tzinfo=datetime.timezone.utc), 'time_taken': 7776.0, 'time_delta': '2:09:36', 'additions': 21, 'deletions': 4, 'state': 'closed'}, {'id': 774948225, 'number': 371, 'closed': datetime.datetime(2021, 11, 8, 8, 31, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 7, 10, 51, 21, tzinfo=datetime.timezone.utc), 'time_taken': 77995.0, 'time_delta': '21:39:55', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 773322083, 'number': 365, 'closed': datetime.datetime(2022, 3, 15, 2, 14, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 4, 13, 34, 54, tzinfo=datetime.timezone.utc), 'time_taken': 11277549.0, 'time_delta': '130 days, 12:39:09', 'additions': 298, 'deletions': 298, 'state': 'closed'}, {'id': 771159838, 'number': 360, 'closed': datetime.datetime(2021, 11, 4, 21, 43, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 2, 7, 42, 15, tzinfo=datetime.timezone.utc), 'time_taken': 223304.0, 'time_delta': '2 days, 14:01:44', 'additions': 29, 'deletions': 2, 'state': 'closed'}, {'id': 771124227, 'number': 359, 'closed': datetime.datetime(2021, 11, 4, 21, 43, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 2, 6, 32, 35, tzinfo=datetime.timezone.utc), 'time_taken': 227462.0, 'time_delta': '2 days, 15:11:02', 'additions': 10, 'deletions': 5, 'state': 'closed'}, {'id': 770441794, 'number': 358, 'closed': datetime.datetime(2021, 11, 4, 21, 43, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 1, 11, 36, 7, tzinfo=datetime.timezone.utc), 'time_taken': 295623.0, 'time_delta': '3 days, 10:07:03', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 770309604, 'number': 357, 'closed': datetime.datetime(2021, 12, 14, 9, 43, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 1, 8, 49, 9, tzinfo=datetime.timezone.utc), 'time_taken': 3718470.0, 'time_delta': '43 days, 0:54:30', 'additions': 137, 'deletions': 11, 'state': 'closed'}, {'id': 769939945, 'number': 356, 'closed': datetime.datetime(2021, 10, 31, 22, 11, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 31, 14, 28, 21, tzinfo=datetime.timezone.utc), 'time_taken': 27761.0, 'time_delta': '7:42:41', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 769933562, 'number': 355, 'closed': datetime.datetime(2021, 10, 31, 22, 11, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 31, 13, 54, 39, tzinfo=datetime.timezone.utc), 'time_taken': 29805.0, 'time_delta': '8:16:45', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 769932203, 'number': 354, 'closed': datetime.datetime(2021, 10, 31, 22, 11, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 31, 13, 47, 45, tzinfo=datetime.timezone.utc), 'time_taken': 30248.0, 'time_delta': '8:24:08', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 769895382, 'number': 353, 'closed': datetime.datetime(2021, 11, 8, 16, 53, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 31, 10, 7, 13, tzinfo=datetime.timezone.utc), 'time_taken': 715554.0, 'time_delta': '8 days, 6:45:54', 'additions': 38, 'deletions': 24, 'state': 'closed'}, {'id': 769674277, 'number': 352, 'closed': datetime.datetime(2021, 10, 31, 22, 10, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 30, 8, 14, 31, tzinfo=datetime.timezone.utc), 'time_taken': 136547.0, 'time_delta': '1 day, 13:55:47', 'additions': 87, 'deletions': 38, 'state': 'closed'}, {'id': 769217123, 'number': 351, 'closed': datetime.datetime(2021, 10, 29, 13, 0, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 29, 12, 56, 42, tzinfo=datetime.timezone.utc), 'time_taken': 232.0, 'time_delta': '0:03:52', 'additions': 11, 'deletions': 11, 'state': 'closed'}, {'id': 768277815, 'number': 349, 'closed': datetime.datetime(2021, 10, 28, 12, 15, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 28, 12, 3, 55, tzinfo=datetime.timezone.utc), 'time_taken': 669.0, 'time_delta': '0:11:09', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 768260881, 'number': 348, 'closed': datetime.datetime(2021, 10, 28, 15, 35, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 28, 11, 41, 28, tzinfo=datetime.timezone.utc), 'time_taken': 14014.0, 'time_delta': '3:53:34', 'additions': 17, 'deletions': 1, 'state': 'closed'}, {'id': 767429015, 'number': 346, 'closed': datetime.datetime(2021, 10, 31, 22, 14, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 27, 13, 38, 45, tzinfo=datetime.timezone.utc), 'time_taken': 376516.0, 'time_delta': '4 days, 8:35:16', 'additions': 32, 'deletions': 0, 'state': 'closed'}, {'id': 767351068, 'number': 345, 'closed': datetime.datetime(2021, 10, 29, 3, 53, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 27, 12, 11, 57, tzinfo=datetime.timezone.utc), 'time_taken': 142889.0, 'time_delta': '1 day, 15:41:29', 'additions': 14, 'deletions': 1, 'state': 'closed'}, {'id': 764865126, 'number': 339, 'closed': datetime.datetime(2021, 10, 25, 6, 54, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 24, 12, 37, tzinfo=datetime.timezone.utc), 'time_taken': 65831.0, 'time_delta': '18:17:11', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 764861216, 'number': 338, 'closed': datetime.datetime(2021, 10, 25, 6, 54, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 24, 12, 13, 32, tzinfo=datetime.timezone.utc), 'time_taken': 67257.0, 'time_delta': '18:40:57', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 764848286, 'number': 337, 'closed': datetime.datetime(2021, 10, 25, 6, 54, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 24, 10, 55, 11, tzinfo=datetime.timezone.utc), 'time_taken': 71969.0, 'time_delta': '19:59:29', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 761033884, 'number': 334, 'closed': datetime.datetime(2021, 12, 14, 2, 44, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 19, 3, 36, 31, tzinfo=datetime.timezone.utc), 'time_taken': 4835264.0, 'time_delta': '55 days, 23:07:44', 'additions': 188, 'deletions': 23, 'state': 'closed'}, {'id': 759944255, 'number': 333, 'closed': datetime.datetime(2021, 10, 25, 6, 55, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 18, 0, 22, 22, tzinfo=datetime.timezone.utc), 'time_taken': 628367.0, 'time_delta': '7 days, 6:32:47', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 759597385, 'number': 331, 'closed': datetime.datetime(2021, 10, 16, 6, 50, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 16, 5, 18, 31, tzinfo=datetime.timezone.utc), 'time_taken': 5493.0, 'time_delta': '1:31:33', 'additions': 63, 'deletions': 53, 'state': 'closed'}, {'id': 759595037, 'number': 330, 'closed': datetime.datetime(2021, 10, 16, 5, 4, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 16, 4, 57, 55, tzinfo=datetime.timezone.utc), 'time_taken': 388.0, 'time_delta': '0:06:28', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 754899885, 'number': 325, 'closed': datetime.datetime(2021, 10, 25, 6, 56, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 11, 4, 18, 29, tzinfo=datetime.timezone.utc), 'time_taken': 1219085.0, 'time_delta': '14 days, 2:38:05', 'additions': 9, 'deletions': 11, 'state': 'closed'}, {'id': 754694084, 'number': 324, 'closed': datetime.datetime(2021, 10, 31, 22, 15, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 10, 12, 21, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1850019.0, 'time_delta': '21 days, 9:53:39', 'additions': 40, 'deletions': 23, 'state': 'closed'}, {'id': 754491268, 'number': 321, 'closed': datetime.datetime(2021, 10, 29, 3, 53, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 9, 10, 33, 19, tzinfo=datetime.timezone.utc), 'time_taken': 1703991.0, 'time_delta': '19 days, 17:19:51', 'additions': 31, 'deletions': 30, 'state': 'closed'}, {'id': 748258447, 'number': 317, 'closed': datetime.datetime(2021, 10, 9, 4, 0, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 3, 6, 49, 34, tzinfo=datetime.timezone.utc), 'time_taken': 508273.0, 'time_delta': '5 days, 21:11:13', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 748076000, 'number': 315, 'closed': datetime.datetime(2021, 10, 14, 1, 37, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 2, 7, 47, 40, tzinfo=datetime.timezone.utc), 'time_taken': 1014618.0, 'time_delta': '11 days, 17:50:18', 'additions': 516, 'deletions': 14, 'state': 'closed'}, {'id': 726511488, 'number': 247, 'closed': datetime.datetime(2021, 9, 6, 4, 40, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 3, 5, 54, 14, tzinfo=datetime.timezone.utc), 'time_taken': 254775.0, 'time_delta': '2 days, 22:46:15', 'additions': 47, 'deletions': 23, 'state': 'closed'}, {'id': 721885123, 'number': 240, 'closed': datetime.datetime(2021, 8, 30, 7, 8, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 29, 4, 24, 47, tzinfo=datetime.timezone.utc), 'time_taken': 96224.0, 'time_delta': '1 day, 2:43:44', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 717780336, 'number': 237, 'closed': datetime.datetime(2021, 8, 28, 21, 39, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 23, 12, 15, 11, tzinfo=datetime.timezone.utc), 'time_taken': 465869.0, 'time_delta': '5 days, 9:24:29', 'additions': 88, 'deletions': 88, 'state': 'closed'}, {'id': 717768459, 'number': 236, 'closed': datetime.datetime(2021, 8, 28, 21, 39, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 23, 12, 0, 56, tzinfo=datetime.timezone.utc), 'time_taken': 466693.0, 'time_delta': '5 days, 9:38:13', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 717066235, 'number': 230, 'closed': datetime.datetime(2021, 8, 28, 21, 31, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 21, 1, 19, 47, tzinfo=datetime.timezone.utc), 'time_taken': 677495.0, 'time_delta': '7 days, 20:11:35', 'additions': 19, 'deletions': 7, 'state': 'closed'}, {'id': 714942888, 'number': 225, 'closed': datetime.datetime(2021, 8, 20, 7, 27, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 10, 18, 4, tzinfo=datetime.timezone.utc), 'time_taken': 162561.0, 'time_delta': '1 day, 21:09:21', 'additions': 31, 'deletions': 32, 'state': 'closed'}, {'id': 701007721, 'number': 210, 'closed': datetime.datetime(2021, 8, 2, 23, 13, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 1, 23, 34, 54, tzinfo=datetime.timezone.utc), 'time_taken': 85127.0, 'time_delta': '23:38:47', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 699174297, 'number': 203, 'closed': datetime.datetime(2021, 7, 29, 3, 28, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 29, 3, 26, 43, tzinfo=datetime.timezone.utc), 'time_taken': 98.0, 'time_delta': '0:01:38', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 696416918, 'number': 196, 'closed': datetime.datetime(2021, 7, 27, 9, 19, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 24, 23, 17, 43, tzinfo=datetime.timezone.utc), 'time_taken': 208916.0, 'time_delta': '2 days, 10:01:56', 'additions': 7, 'deletions': 7, 'state': 'closed'}, {'id': 696305439, 'number': 195, 'closed': datetime.datetime(2021, 7, 27, 9, 19, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 24, 6, 52, 34, tzinfo=datetime.timezone.utc), 'time_taken': 268043.0, 'time_delta': '3 days, 2:27:23', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 694762802, 'number': 193, 'closed': datetime.datetime(2021, 7, 23, 13, 24, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 21, 23, 7, 46, tzinfo=datetime.timezone.utc), 'time_taken': 137833.0, 'time_delta': '1 day, 14:17:13', 'additions': 14, 'deletions': 4, 'state': 'closed'}, {'id': 693926808, 'number': 191, 'closed': datetime.datetime(2021, 7, 21, 15, 53, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 20, 23, 12, 44, tzinfo=datetime.timezone.utc), 'time_taken': 60069.0, 'time_delta': '16:41:09', 'additions': 36, 'deletions': 0, 'state': 'closed'}, {'id': 693923201, 'number': 190, 'closed': datetime.datetime(2021, 7, 21, 15, 55, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 20, 23, 5, 10, tzinfo=datetime.timezone.utc), 'time_taken': 60595.0, 'time_delta': '16:49:55', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 693369961, 'number': 189, 'closed': datetime.datetime(2021, 7, 20, 13, 42, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 20, 11, 2, 2, tzinfo=datetime.timezone.utc), 'time_taken': 9632.0, 'time_delta': '2:40:32', 'additions': 22, 'deletions': 2, 'state': 'closed'}, {'id': 693296251, 'number': 188, 'closed': datetime.datetime(2021, 7, 20, 13, 44, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 20, 9, 9, 30, tzinfo=datetime.timezone.utc), 'time_taken': 16490.0, 'time_delta': '4:34:50', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 692482591, 'number': 186, 'closed': datetime.datetime(2021, 7, 20, 13, 43, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 10, 31, 40, tzinfo=datetime.timezone.utc), 'time_taken': 97922.0, 'time_delta': '1 day, 3:12:02', 'additions': 15, 'deletions': 5, 'state': 'closed'}, {'id': 691320018, 'number': 182, 'closed': datetime.datetime(2021, 7, 17, 0, 39, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 9, 7, 49, tzinfo=datetime.timezone.utc), 'time_taken': 55921.0, 'time_delta': '15:32:01', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 690609876, 'number': 180, 'closed': datetime.datetime(2021, 7, 29, 1, 59, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 15, 10, 53, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1177543.0, 'time_delta': '13 days, 15:05:43', 'additions': 142, 'deletions': 93, 'state': 'closed'}, {'id': 689718188, 'number': 175, 'closed': datetime.datetime(2021, 7, 14, 18, 21, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 14, 8, 56, 11, tzinfo=datetime.timezone.utc), 'time_taken': 33902.0, 'time_delta': '9:25:02', 'additions': 64, 'deletions': 37, 'state': 'closed'}, {'id': 689712531, 'number': 174, 'closed': datetime.datetime(2021, 7, 14, 18, 22, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 14, 8, 47, 41, tzinfo=datetime.timezone.utc), 'time_taken': 34487.0, 'time_delta': '9:34:47', 'additions': 36, 'deletions': 21, 'state': 'closed'}, {'id': 688651577, 'number': 171, 'closed': datetime.datetime(2021, 7, 13, 13, 21, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 13, 8, 29, 10, tzinfo=datetime.timezone.utc), 'time_taken': 17562.0, 'time_delta': '4:52:42', 'additions': 3, 'deletions': 4, 'state': 'closed'}, {'id': 687731620, 'number': 167, 'closed': datetime.datetime(2021, 7, 13, 7, 56, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 12, 10, 55, 35, tzinfo=datetime.timezone.utc), 'time_taken': 75627.0, 'time_delta': '21:00:27', 'additions': 118, 'deletions': 0, 'state': 'closed'}, {'id': 687454526, 'number': 163, 'closed': datetime.datetime(2021, 7, 12, 4, 25, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 12, 2, 18, 5, tzinfo=datetime.timezone.utc), 'time_taken': 7618.0, 'time_delta': '2:06:58', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 687257286, 'number': 161, 'closed': datetime.datetime(2021, 7, 12, 0, 50, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 11, 0, 57, 26, tzinfo=datetime.timezone.utc), 'time_taken': 85967.0, 'time_delta': '23:52:47', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 687162669, 'number': 159, 'closed': datetime.datetime(2021, 7, 10, 16, 29, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 10, 10, 29, 15, tzinfo=datetime.timezone.utc), 'time_taken': 21590.0, 'time_delta': '5:59:50', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 686526782, 'number': 154, 'closed': datetime.datetime(2021, 7, 9, 6, 45, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 6, 24, 52, tzinfo=datetime.timezone.utc), 'time_taken': 1257.0, 'time_delta': '0:20:57', 'additions': 8, 'deletions': 0, 'state': 'closed'}, {'id': 686518162, 'number': 153, 'closed': datetime.datetime(2021, 7, 9, 6, 36, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 6, 7, 14, tzinfo=datetime.timezone.utc), 'time_taken': 1747.0, 'time_delta': '0:29:07', 'additions': 15, 'deletions': 7, 'state': 'closed'}, {'id': 686462045, 'number': 150, 'closed': datetime.datetime(2021, 7, 9, 5, 11, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 3, 30, 29, tzinfo=datetime.timezone.utc), 'time_taken': 6067.0, 'time_delta': '1:41:07', 'additions': 8, 'deletions': 3, 'state': 'closed'}, {'id': 685859629, 'number': 146, 'closed': datetime.datetime(2021, 7, 8, 10, 4, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 9, 50, 3, tzinfo=datetime.timezone.utc), 'time_taken': 845.0, 'time_delta': '0:14:05', 'additions': 12, 'deletions': 5, 'state': 'closed'}, {'id': 685616192, 'number': 142, 'closed': datetime.datetime(2021, 7, 8, 5, 39, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 1, 31, 46, tzinfo=datetime.timezone.utc), 'time_taken': 14877.0, 'time_delta': '4:07:57', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 684128594, 'number': 135, 'closed': datetime.datetime(2021, 7, 6, 7, 32, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 7, 31, 42, tzinfo=datetime.timezone.utc), 'time_taken': 72.0, 'time_delta': '0:01:12', 'additions': 0, 'deletions': 21, 'state': 'closed'}, {'id': 683990830, 'number': 132, 'closed': datetime.datetime(2021, 7, 6, 4, 41, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 0, 54, 13, tzinfo=datetime.timezone.utc), 'time_taken': 13621.0, 'time_delta': '3:47:01', 'additions': 23, 'deletions': 6, 'state': 'closed'}, {'id': 683446873, 'number': 129, 'closed': datetime.datetime(2021, 7, 6, 4, 41, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 7, 41, 48, tzinfo=datetime.timezone.utc), 'time_taken': 75607.0, 'time_delta': '21:00:07', 'additions': 6, 'deletions': 7, 'state': 'closed'}, {'id': 683330156, 'number': 127, 'closed': datetime.datetime(2021, 7, 5, 11, 45, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 3, 53, 7, tzinfo=datetime.timezone.utc), 'time_taken': 28359.0, 'time_delta': '7:52:39', 'additions': 11, 'deletions': 11, 'state': 'closed'}, {'id': 683289515, 'number': 126, 'closed': datetime.datetime(2021, 7, 5, 1, 43, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 1, 41, 3, tzinfo=datetime.timezone.utc), 'time_taken': 166.0, 'time_delta': '0:02:46', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 682215983, 'number': 120, 'closed': datetime.datetime(2021, 7, 2, 1, 39, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 1, 22, 54, tzinfo=datetime.timezone.utc), 'time_taken': 9952.0, 'time_delta': '2:45:52', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 675828498, 'number': 112, 'closed': datetime.datetime(2021, 6, 28, 7, 31, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 23, 48, 10, tzinfo=datetime.timezone.utc), 'time_taken': 459805.0, 'time_delta': '5 days, 7:43:25', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 674028907, 'number': 111, 'closed': datetime.datetime(2021, 7, 6, 6, 14, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 20, 12, 43, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1359064.0, 'time_delta': '15 days, 17:31:04', 'additions': 391, 'deletions': 2, 'state': 'closed'}, {'id': 673810048, 'number': 109, 'closed': datetime.datetime(2021, 6, 22, 15, 16, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 19, 3, 2, 29, tzinfo=datetime.timezone.utc), 'time_taken': 303215.0, 'time_delta': '3 days, 12:13:35', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 673807592, 'number': 107, 'closed': datetime.datetime(2021, 6, 22, 15, 15, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 19, 2, 39, 49, tzinfo=datetime.timezone.utc), 'time_taken': 304558.0, 'time_delta': '3 days, 12:35:58', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 672245789, 'number': 100, 'closed': datetime.datetime(2021, 6, 18, 3, 37, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 17, 5, 57, 39, tzinfo=datetime.timezone.utc), 'time_taken': 77992.0, 'time_delta': '21:39:52', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 672223684, 'number': 99, 'closed': datetime.datetime(2021, 6, 17, 5, 27, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 17, 5, 25, 55, tzinfo=datetime.timezone.utc), 'time_taken': 105.0, 'time_delta': '0:01:45', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 671281205, 'number': 93, 'closed': datetime.datetime(2021, 6, 16, 15, 24, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 16, 9, 56, 23, tzinfo=datetime.timezone.utc), 'time_taken': 19685.0, 'time_delta': '5:28:05', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 670300831, 'number': 92, 'closed': datetime.datetime(2021, 6, 16, 4, 11, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 11, 2, 18, tzinfo=datetime.timezone.utc), 'time_taken': 61759.0, 'time_delta': '17:09:19', 'additions': 34, 'deletions': 0, 'state': 'closed'}, {'id': 669518988, 'number': 88, 'closed': datetime.datetime(2021, 6, 17, 5, 30, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 14, 12, 21, 28, tzinfo=datetime.timezone.utc), 'time_taken': 234537.0, 'time_delta': '2 days, 17:08:57', 'additions': 36, 'deletions': 12, 'state': 'closed'}, {'id': 669033023, 'number': 86, 'closed': datetime.datetime(2021, 6, 16, 4, 25, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 13, 10, 58, 28, tzinfo=datetime.timezone.utc), 'time_taken': 235642.0, 'time_delta': '2 days, 17:27:22', 'additions': 16, 'deletions': 2, 'state': 'closed'}, {'id': 668884687, 'number': 84, 'closed': datetime.datetime(2021, 6, 17, 7, 26, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 12, 14, 49, 26, tzinfo=datetime.timezone.utc), 'time_taken': 405447.0, 'time_delta': '4 days, 16:37:27', 'additions': 19, 'deletions': 48, 'state': 'closed'}, {'id': 668114424, 'number': 83, 'closed': datetime.datetime(2021, 6, 15, 7, 13, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 12, 52, 51, tzinfo=datetime.timezone.utc), 'time_taken': 325241.0, 'time_delta': '3 days, 18:20:41', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 667537193, 'number': 81, 'closed': datetime.datetime(2021, 6, 11, 2, 7, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 0, 2, 57, tzinfo=datetime.timezone.utc), 'time_taken': 7471.0, 'time_delta': '2:04:31', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 666449750, 'number': 78, 'closed': datetime.datetime(2021, 6, 10, 7, 21, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 10, 2, 47, 19, tzinfo=datetime.timezone.utc), 'time_taken': 16480.0, 'time_delta': '4:34:40', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 665548908, 'number': 76, 'closed': datetime.datetime(2021, 7, 1, 6, 58, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 9, 5, 5, 51, tzinfo=datetime.timezone.utc), 'time_taken': 1907553.0, 'time_delta': '22 days, 1:52:33', 'additions': 53, 'deletions': 13, 'state': 'closed'}, {'id': 664428468, 'number': 73, 'closed': datetime.datetime(2021, 6, 9, 5, 16, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 7, 55, 46, tzinfo=datetime.timezone.utc), 'time_taken': 76851.0, 'time_delta': '21:20:51', 'additions': 14, 'deletions': 24, 'state': 'closed'}, {'id': 664078412, 'number': 71, 'closed': datetime.datetime(2021, 6, 8, 6, 49, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 1, 32, 54, tzinfo=datetime.timezone.utc), 'time_taken': 18970.0, 'time_delta': '5:16:10', 'additions': 1, 'deletions': 5, 'state': 'closed'}, {'id': 663974883, 'number': 70, 'closed': datetime.datetime(2021, 6, 8, 1, 38, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 7, 23, 2, 43, tzinfo=datetime.timezone.utc), 'time_taken': 9319.0, 'time_delta': '2:35:19', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 661830095, 'number': 66, 'closed': datetime.datetime(2021, 6, 7, 4, 52, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 4, 14, 49, 37, tzinfo=datetime.timezone.utc), 'time_taken': 223357.0, 'time_delta': '2 days, 14:02:37', 'additions': 55, 'deletions': 6, 'state': 'closed'}, {'id': 657842455, 'number': 48, 'closed': datetime.datetime(2021, 6, 7, 15, 32, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 31, 0, 13, 1, tzinfo=datetime.timezone.utc), 'time_taken': 659964.0, 'time_delta': '7 days, 15:19:24', 'additions': 115, 'deletions': 68, 'state': 'closed'}, {'id': 657384181, 'number': 42, 'closed': datetime.datetime(2021, 6, 1, 15, 31, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 29, 5, 21, 45, tzinfo=datetime.timezone.utc), 'time_taken': 295767.0, 'time_delta': '3 days, 10:09:27', 'additions': 67, 'deletions': 61, 'state': 'closed'}, {'id': 650785916, 'number': 26, 'closed': datetime.datetime(2021, 5, 23, 16, 22, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 23, 13, 2, 43, tzinfo=datetime.timezone.utc), 'time_taken': 11970.0, 'time_delta': '3:19:30', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 648275523, 'number': 21, 'closed': datetime.datetime(2021, 5, 27, 14, 56, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 20, 1, 0, 3, tzinfo=datetime.timezone.utc), 'time_taken': 654998.0, 'time_delta': '7 days, 13:56:38', 'additions': 402, 'deletions': 1, 'state': 'closed'}, {'id': 644366594, 'number': 9, 'closed': datetime.datetime(2021, 5, 25, 15, 4, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 14, 1, 20, 46, tzinfo=datetime.timezone.utc), 'time_taken': 999818.0, 'time_delta': '11 days, 13:43:38', 'additions': 421, 'deletions': 5, 'state': 'closed'}]"
