pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
715779145,[GSoC 2021] Implementing GPU Accelerated Sub-gridding,"# [GSoC 2021] GPU Accelerated Sub-grdding
The purpose of this Pull Request is to explain the code structure and implementation of HSG Sub-gridding Algorithm ported to GPU for improved computation performance. This was done within the time duration of GSoC 2021 along with the help of my mentors. 

The implementation of GPU kernels for subgridding closely follows the the Cython implementation of the same algorithm. 

In the subgridding implementation there is a difference with how the Grid is calculated. While the Main_grid computation looks at the whole 3D grid simulataneously, the computation for sub-grid happens by cutting the whole grid into 2D slices of arrays. 

## Code Structure
### The CUDA Kernels
The main GPU kernels can be found in the the file `cuda/hsg_field_updates.py`. These kernels are then implemented in `subgrids/subgrid_hsg.py` where the main update computations happen. 

In the CUDA kernels, the main difference between the main GPU FDTD implementation and the GPU Sub-grid FDTD implementation is the way the subscript *indexing* is calculated for traversal of EM fields.

In the main GPU FDTD implementation (Found in `cuda/field_updates.py`) the indexing is calculated as follows: 

```C++
// Linear Index to Subscript
int i = idx / ($NY_FIELDS * $NZ_FIELDS);
int j = (idx % ($NY_FIELDS * $NZ_FIELDS)) / $NZ_FIELDS;
int k = (idx % ($NY_FIELDS * $NZ_FIELDS)) % $NZ_FIELDS;
```
Where:
- idx = The linear index corresponding to current CUDA thread
- $NY_FIELDS = Size of array in y direction.
- $NZ_FIELDS = Size of array in z direction.

Here, we are assuming that the traversal happens in Z-direction first.

This subscript calculation changes for Subgridding as:
- We don't need to wrap around the FDTD grid.
- Only two indices change during one computation.

Hence the index calculation happens as follows:

```C++
// Linear Index to Subscript
int l = idx / ($NZ_FIELDS * $NY_FIELDS); 
int m = idx % ($NZ_FIELDS * $NY_FIELDS);
```
Where:
- l & m = x/y/z index respectively depending upon which face of the cube is being calculated.

### The Abstraction and Structure of Classes
The Subgridding directory contains all the classes and methods related to subgridding. The ones where there have been significant changes/ have importance to the explanation are as shown [here](https://github.com/ThenoobMario/gprMax/blob/devel/gprMax/subgrids/images/Class_hierarchy.png)

- The classes `CPUSubGridBase` and `CUDASubGridBase` inherit `FDTDGrid` and `CUDAGrid` respectively, along with `SubGridBase`.
- The `create_updates()` method is called in `solver.py` which integrates the subgrid computations to the already existing gprMax structure.

## Further Work to be Done
- GPU kernels for Precursors Nodes calculations.
- Refactoring the CUDASubGridHSG class to reduce redunduncy.",False,297,https://api.github.com/repos/gprMax/gprMax/pulls/297,https://github.com/gprMax/gprMax/pull/297,open,1569,125,12,30,0,0,0,0,[],2021-08-19 09:50:54+00:00,,0.0,,[],"[{'commit_sha': '9e47b5821676080e950c5365a2ae8e894bf156d0', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79012abdb3a0f9db418de162bbb66a6679a2d399', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e30b3568cb15727da31c221447a717c05eeb116', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '870a14d9d06783e531e948ca382ecd67c2272994', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58b7e33e5426fd9270825767a27f6b2c1965979d', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1c1c134d3520b48559da438827f8d07cb6678ce', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6867b708181dd3f0b58be1b0f773e1c2db777800', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1225e7ec5a147703d58244bef2d28b55d3612c3', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8ad2de6a96c11a10e1f9b6cf58f9a736b4ae5e9', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20385deef5d14b5f33713bb12c4f019f913b6ae0', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75cb8a764988f44751ae64a7e2cfb365dfe2eb45', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9532b6e9971e4cbb9507b5cb98cdb37488c6374', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9987a80b0dd9d994e22b1e6d0a1684a71ac154cc', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fca40fbe7b80c044612b905ac9ced50db1930f7', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a813be02f8fe5d603a2073cf4f95b4d1b1555d0', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5a49c01ee4b3434b47bbac8bb5f9b8f29524f7e', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5932d6c0b16724514c95ca81f0604d24b991f094', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eecefb14964735e25b2df038a7dc50047287a0a3', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7646e149ee2d6f67a21b4b8516e22fffeb9aeb36', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab0ab40e13b5adb0edacf3b0406ad8f82ad664c3', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c51aae06f9513a74ea9a168ecdfd1289d64f679a', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3a19af82e5e4ddead03a65edf170a634c2f548e', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab7d99ddd1ffdf6d65b6475d142324509eb2d3ef', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32b23df903a92ffe701bbf95ff742ae254cdb12b', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a85aa28b2efe046da3a07708ef9b3bc74e15e305', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a69a556762476d32b2e1859d4e519120b00c918b', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3908cefdb5e8b07b25c8e754d489dd3d7e9bb9da', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54dc66deb29d5ac5d3876f925f1db1b9330bb10f', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa95951e084326153f0e6e4b2f947db16bde738a', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d204849ee791ae55c068408ae408eac9e057ae4', 'committer_username': 'ThenoobMario', 'committer_name': 'Nachiket Soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 26, 8, 40, 54, tzinfo=datetime.timezone.utc)}]",Nachiket Soni,60312074,,User,,27,,58,32

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
43433739,gprMax,gprMax/gprMax,Python,249,601,37,40,1927,25,2,8,"[{'id': 715779145, 'number': 297, 'closed': None, 'created': datetime.datetime(2021, 8, 19, 9, 50, 54, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1569, 'deletions': 125, 'state': 'open'}]"
