pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
714808976,[GSoC 2021] Importing Geometrical Information from laser scanners,"## [GSoC 21] Importing Geometrical Information from Laser Scanners
This pull request is for the final Work Product Submission for Google Summer of Code 2021, which comprises the work done by me, under the guidance of my mentors, on the project ‘LasoMax’. The project is based on ‘Importing Geometrical Information from Laser Scanners’ and focuses on the ability to directly model real objects without having to enter their geometries manually. 

### Project Summary
(Point Cloud to FDTD mesh)
A laser scanner takes distance measurements in every direction to rapidly capture the surface shape of objects, buildings and landscapes.The data acquired from the laser scanner is in the form of point cloud. This information is then used to construct a full 3D model of the object in the form of a STL mesh.The STL mesh is then voxelized. The voxelized model is further used to build FDTD cells upon which gprMax is based.

### Project Workflow
Laser Scanner → Point Cloud Data → STL mesh → Voxelized model → FDTD mesh

The project documentation can be found [here](https://github.com/karban8/gprMax/blob/devel/user_libs/docs_lasoMax.ipynb) {docs_lasoMax.ipynb}. It explains about the various features and functions of the class and modules created. It also contains a sample input file, available for users to directly run the model and also get familiar with the structure of input files.",True,295,https://api.github.com/repos/gprMax/gprMax/pulls/295,https://github.com/gprMax/gprMax/pull/295,closed,1795473,2,57,16,0,0,0,0,[],2021-08-18 07:12:36+00:00,2022-01-06 16:16:18+00:00,12215022.0,"141 days, 9:03:42",[],"[{'commit_sha': 'ee02ea2629dfe51ec0ecb683a6c111490e6764a1', 'committer_username': 'karban8', 'committer_name': 'Kartik Bansal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 17, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31567d772f8c38b421af2ad2d9db565135390a4a', 'committer_username': 'karban8', 'committer_name': 'Kartik Bansal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 17, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd26370229965c8aec3554eb2c0ebb33ea94150ab', 'committer_username': 'karban8', 'committer_name': 'Kartik Bansal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 17, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '071e15e45aeba89a87c485118ad6fd4643184801', 'committer_username': 'karban8', 'committer_name': 'Kartik Bansal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 17, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b4af3c7a6bab0d058afafecadeb9d763060de26', 'committer_username': 'karban8', 'committer_name': 'Kartik Bansal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 17, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3392860deef5ed372c3219e035546817ec9f98c9', 'committer_username': 'karban8', 'committer_name': 'Kartik Bansal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 17, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92c7996e5eb9eb380311634c11a49b9d065d6762', 'committer_username': 'karban8', 'committer_name': 'Kartik Bansal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 17, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0875a3938a7104149e2069657b9d7aa91b3269e2', 'committer_username': 'karban8', 'committer_name': 'Kartik Bansal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 17, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6383544b25a5215a3123de22741a491cd01c8add', 'committer_username': 'karban8', 'committer_name': 'Kartik Bansal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 17, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b2b41529437867cdc35c9aa6c807d3e19163aa3', 'committer_username': 'karban8', 'committer_name': 'Kartik Bansal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 17, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f7acc85112151d656a52ff627c7a216a9b20ab0', 'committer_username': 'karban8', 'committer_name': 'Kartik Bansal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 17, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4df3581b8384ba51a6047883dd84249355f59a1e', 'committer_username': 'karban8', 'committer_name': 'Kartik Bansal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 17, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90b32bbd7ab16a6ae04edca957cbf00ceb274386', 'committer_username': 'karban8', 'committer_name': 'Kartik Bansal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 17, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71a9234985cb262aeb2dd453c330cf195d23b9a5', 'committer_username': 'karban8', 'committer_name': 'Kartik Bansal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 17, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05d0ff80e282ccfa9a49f926d994ddd12f021d5e', 'committer_username': 'karban8', 'committer_name': 'Kartik Bansal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 17, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f9ae34caae2173bd2e3066d64700ec04d5cabb3', 'committer_username': 'karban8', 'committer_name': 'Kartik Bansal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 1, 17, 4, tzinfo=datetime.timezone.utc)}]",Kartik Bansal,72220269,,User,,27,,1,1

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
43433739,gprMax,gprMax/gprMax,Python,249,601,37,40,1927,25,2,8,"[{'id': 714808976, 'number': 295, 'closed': datetime.datetime(2022, 1, 6, 16, 16, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 7, 12, 36, tzinfo=datetime.timezone.utc), 'time_taken': 12215022.0, 'time_delta': '141 days, 9:03:42', 'additions': 1795473, 'deletions': 2, 'state': 'closed'}]"
