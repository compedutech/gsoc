pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1017461507,add live search,"This PR depends on #29 . Also this needs a little more css and js fixing, therefor I have kept it in Draft. Please let me know about any changes and improvements.",True,35,https://api.github.com/repos/wagtail/guide/pulls/35,https://github.com/wagtail/guide/pull/35,closed,113,5,7,11,8,36,0,1,[],2022-08-04 12:24:06+00:00,2022-08-21 06:03:10+00:00,1445944.0,"16 days, 17:39:04","[{'comment_id': 941278875, 'comment_body': 'I think it\'s better to be consistent on what casing we should use for HTML element IDs. In this PR, I see a mix of `camelCase`, `snake_case`, and `kebab-case`. In Wagtail itself, we use `kebab-case`.\r\n\r\n```suggestion\r\n        <button id=""search-icon-button"" class=""bg-transparent border-0 border-start border-1 border-dark ps-4 ms-4"" data-bs-toggle=""modal"" data-bs-target=""#searchModal"">\r\n```', 'comment_created': datetime.datetime(2022, 8, 9, 12, 30, 28, tzinfo=datetime.timezone.utc), 'commenter': 'laymonage', 'type': 'User'}, {'comment_id': 941279108, 'comment_body': '```suggestion\r\n                  <input type=""text"" name=""query"" id=""search-input"" placeholder=""Search..."" class=""border border-1 border-dark bg-transparent form-control form-control-lg rounded-start w-75 ps-3"">\r\n```', 'comment_created': datetime.datetime(2022, 8, 9, 12, 30, 44, tzinfo=datetime.timezone.utc), 'commenter': 'laymonage', 'type': 'User'}, {'comment_id': 941286584, 'comment_body': ""Might've been an oversight, but I don't think we'd want to log the results?\r\n\r\n```suggestion\r\n```"", 'comment_created': datetime.datetime(2022, 8, 9, 12, 37, 44, tzinfo=datetime.timezone.utc), 'commenter': 'laymonage', 'type': 'User'}, {'comment_id': 941287736, 'comment_body': 'Nit: variable names don\'t have to match the IDs, and we tend to use camelCase in JS, so\r\n\r\n```suggestion\r\nconst searchInput = document.getElementById(""search-input"")\r\n```', 'comment_created': datetime.datetime(2022, 8, 9, 12, 38, 55, tzinfo=datetime.timezone.utc), 'commenter': 'laymonage', 'type': 'User'}, {'comment_id': 941288830, 'comment_body': ""Doesn't have to be in this PR, but do you think it would be nice to have some sort of delay before firing the event listener to avoid spamming the backend too much?"", 'comment_created': datetime.datetime(2022, 8, 9, 12, 40, 3, tzinfo=datetime.timezone.utc), 'commenter': 'laymonage', 'type': 'User'}, {'comment_id': 941293460, 'comment_body': ""The `map()` method is used to transform a list of objects into another list of objects, so I don't think it's appropriate here. A simple for loop could work?\r\n\r\n```suggestion\r\n    for (child of parent.children) {\r\n        child.remove();\r\n    }\r\n```"", 'comment_created': datetime.datetime(2022, 8, 9, 12, 44, 44, tzinfo=datetime.timezone.utc), 'commenter': 'laymonage', 'type': 'User'}, {'comment_id': 941302992, 'comment_body': ""I don't know if we're going to apply it in this project, but in Wagtail's codebase we usually use data attributes instead of IDs to attach behaviour: https://docs.wagtail.org/en/stable/contributing/html_guidelines.html#principles"", 'comment_created': datetime.datetime(2022, 8, 9, 12, 53, 47, tzinfo=datetime.timezone.utc), 'commenter': 'laymonage', 'type': 'User'}, {'comment_id': 942085468, 'comment_body': 'Yeah that sounds reasonable. Should I push a commit for that in this PR or open a separate PR?\r\n', 'comment_created': datetime.datetime(2022, 8, 10, 6, 56, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Hitansh-Shah', 'type': 'User'}, {'comment_id': 942100705, 'comment_body': ""Ohh okay. But I don't understand how we can use data attributes here. For using data attributes, we would first need to fetch dom element using id or class anyway, right? I may have misunderstood your point, please correct me if I am wrong."", 'comment_created': datetime.datetime(2022, 8, 10, 7, 15, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Hitansh-Shah', 'type': 'User'}, {'comment_id': 944062978, 'comment_body': ""Data attributes can also be used for querying DOM elements with `document.querySelector`/`document.querySelectorAll`, e.g.\r\n\r\n```js\r\nconst resultsDiv = document.querySelector('[data-search-results]');\r\nconst resultsCount = document.querySelector('[data-search-results-count]');\r\n```"", 'comment_created': datetime.datetime(2022, 8, 12, 2, 6, 48, tzinfo=datetime.timezone.utc), 'commenter': 'laymonage', 'type': 'User'}, {'comment_id': 944063689, 'comment_body': ""If you could include it here, that'd be nice, but if it takes time we can leave that for a separate PR."", 'comment_created': datetime.datetime(2022, 8, 12, 2, 9, 19, tzinfo=datetime.timezone.utc), 'commenter': 'laymonage', 'type': 'User'}, {'comment_id': 944322128, 'comment_body': 'Ohh okay got it, thanks :+1: . I will push a commit for this and implementing delay.', 'comment_created': datetime.datetime(2022, 8, 12, 10, 19, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Hitansh-Shah', 'type': 'User'}, {'comment_id': 946781302, 'comment_body': 'This seems to only delay the `fetch()` without preventing duplicate requests:\r\n\r\n<img width=""1310"" alt=""image"" src=""https://user-images.githubusercontent.com/6379424/184891527-6148fa34-f14e-4682-a42e-94352d6fd571.png"">\r\n\r\nAre you familiar with [debouncing/throttling](https://css-tricks.com/debouncing-throttling-explained-examples/)? I think that could help eliminate the duplicate requests.', 'comment_created': datetime.datetime(2022, 8, 16, 13, 30, 42, tzinfo=datetime.timezone.utc), 'commenter': 'laymonage', 'type': 'User'}, {'comment_id': 946782028, 'comment_body': ""Could we remove this if it's unused?"", 'comment_created': datetime.datetime(2022, 8, 16, 13, 31, 23, tzinfo=datetime.timezone.utc), 'commenter': 'laymonage', 'type': 'User'}, {'comment_id': 946782858, 'comment_body': 'As we discussed in the meeting, we should add the version specifier here.\r\n', 'comment_created': datetime.datetime(2022, 8, 16, 13, 32, 2, tzinfo=datetime.timezone.utc), 'commenter': 'laymonage', 'type': 'User'}, {'comment_id': 946785787, 'comment_body': 'Could we add a margin between this and the search button?', 'comment_created': datetime.datetime(2022, 8, 16, 13, 34, 16, tzinfo=datetime.timezone.utc), 'commenter': 'laymonage', 'type': 'User'}, {'comment_id': 946965377, 'comment_body': 'I’d recommend following the same pattern as Wagtail:\r\n\r\n\r\n```suggestion\r\n# Use the same version as Wagtail: https://github.com/wagtail/wagtail/blob/main/setup.py#L27.\r\ndjangorestframework>=3.13.1,<4.0\r\n```', 'comment_created': datetime.datetime(2022, 8, 16, 15, 54, 51, tzinfo=datetime.timezone.utc), 'commenter': 'thibaudcolas', 'type': 'User'}, {'comment_id': 946978912, 'comment_body': 'Not sure this matters here but we want to be careful with how we handle input like this, always URL-encoding it as needed.\r\n\r\n```suggestion\r\n        const res = await fetch(`/search_json/?${(new URLSearchParams({ query })).toString()}`)\r\n```', 'comment_created': datetime.datetime(2022, 8, 16, 16, 7, 19, tzinfo=datetime.timezone.utc), 'commenter': 'thibaudcolas', 'type': 'User'}, {'comment_id': 946979500, 'comment_body': 'Unless I’m misunderstanding the code, this return value doesn’t seem to be used anywhere. Could we instead use `window.alert` to show an error message for end users?', 'comment_created': datetime.datetime(2022, 8, 16, 16, 7, 57, tzinfo=datetime.timezone.utc), 'commenter': 'thibaudcolas', 'type': 'User'}, {'comment_id': 946980639, 'comment_body': ""```suggestion\r\nconst removeExistingChildren = (parent) => {\r\n    resultsDiv.innerHTML = ''\r\n}\r\n```"", 'comment_created': datetime.datetime(2022, 8, 16, 16, 9, 8, tzinfo=datetime.timezone.utc), 'commenter': 'thibaudcolas', 'type': 'User'}, {'comment_id': 946983788, 'comment_body': 'A bit simpler for a case like this (and below):\r\n\r\n```suggestion\r\n        resultLink.innerText = result.title\r\n```', 'comment_created': datetime.datetime(2022, 8, 16, 16, 12, 11, tzinfo=datetime.timezone.utc), 'commenter': 'thibaudcolas', 'type': 'User'}, {'comment_id': 946984714, 'comment_body': 'This looks a bit odd to me. I would expect something like this to happen server-side, or if we want to keep it here, then at least add a comment.', 'comment_created': datetime.datetime(2022, 8, 16, 16, 13, 8, tzinfo=datetime.timezone.utc), 'commenter': 'thibaudcolas', 'type': 'User'}, {'comment_id': 947596148, 'comment_body': 'Nope I am not familiar with that. I will read about that and will try to implement it.', 'comment_created': datetime.datetime(2022, 8, 17, 8, 20, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Hitansh-Shah', 'type': 'User'}, {'comment_id': 947596325, 'comment_body': 'Sure, I will remove that.', 'comment_created': datetime.datetime(2022, 8, 17, 8, 20, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Hitansh-Shah', 'type': 'User'}, {'comment_id': 947596552, 'comment_body': ':+1: \r\n\r\n', 'comment_created': datetime.datetime(2022, 8, 17, 8, 20, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Hitansh-Shah', 'type': 'User'}, {'comment_id': 947598308, 'comment_body': ""We can. I have just followed the design so I don't know if we should add a margin or not. Maybe @vossisboss and @thibaudcolas can comment on this."", 'comment_created': datetime.datetime(2022, 8, 17, 8, 22, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Hitansh-Shah', 'type': 'User'}, {'comment_id': 947602337, 'comment_body': 'We have language/version slug in every page. Therefore `/search_json/` would return `/en-latest/search_json` instead of `/search_json` which is what we need. For this reason I have used `window.location.origin`.\r\nApart from this I will add URL-encoding as you suggested above.\r\n', 'comment_created': datetime.datetime(2022, 8, 17, 8, 26, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Hitansh-Shah', 'type': 'User'}, {'comment_id': 947605698, 'comment_body': ""Yeah you are right. Initially I didn't know what to do if error occurs, therefore I just logged it out to debug."", 'comment_created': datetime.datetime(2022, 8, 17, 8, 28, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Hitansh-Shah', 'type': 'User'}, {'comment_id': 947614829, 'comment_body': ""This was something confusing to me as well and I wanted to ask about this but it just slipped out of my mind :sweat_smile: .\r\nHere we have a home page with slug `home-x`. However on the site the slug isn't used for home or root page (as far as I know). But in the search results the slug is present.\r\nSo `/` would be returned as `/home-x`, `/tutorial/` as `/home-x/tutorial/` and so on."", 'comment_created': datetime.datetime(2022, 8, 17, 8, 35, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Hitansh-Shah', 'type': 'User'}, {'comment_id': 947615559, 'comment_body': 'As a result when you click on any of the search-results page, you would get 404.', 'comment_created': datetime.datetime(2022, 8, 17, 8, 35, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Hitansh-Shah', 'type': 'User'}, {'comment_id': 949435007, 'comment_body': ""I'm not sure if Ben took the focus box into account when making the design. So I'm fine with us seeing what it looks like with some margin @Hitansh-Shah."", 'comment_created': datetime.datetime(2022, 8, 18, 17, 52, 43, tzinfo=datetime.timezone.utc), 'commenter': 'vossisboss', 'type': 'User'}, {'comment_id': 949910067, 'comment_body': ""I'm a bit surprised we're adding this manually 🤔 \r\n\r\nCan't we install it through NPM and `import` it?"", 'comment_created': datetime.datetime(2022, 8, 19, 7, 57, 56, tzinfo=datetime.timezone.utc), 'commenter': 'laymonage', 'type': 'User'}, {'comment_id': 950000117, 'comment_body': 'Ohh we can. We only needed the `debounce` function of lodash, so I thought installing the whole `lodash` package would not be necessary and hence I included the custom build which enables us to use debounce.\r\nHowever it turns out there is also a npm package which allows us to do the same https://www.npmjs.com/package/lodash.debounce\r\nI will change it to use npm package.', 'comment_created': datetime.datetime(2022, 8, 19, 9, 28, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Hitansh-Shah', 'type': 'User'}, {'comment_id': 950031820, 'comment_body': ""Let's use the newer `import` syntax here:\r\n\r\n```suggestion\r\nimport debounce from 'lodash.debounce';\r\n```"", 'comment_created': datetime.datetime(2022, 8, 19, 10, 6, 42, tzinfo=datetime.timezone.utc), 'commenter': 'laymonage', 'type': 'User'}, {'comment_id': 950032526, 'comment_body': 'Remove the empty line?', 'comment_created': datetime.datetime(2022, 8, 19, 10, 7, 29, tzinfo=datetime.timezone.utc), 'commenter': 'laymonage', 'type': 'User'}, {'comment_id': 950048836, 'comment_body': ""I always run `make format`. Shouldn't that take care of this?"", 'comment_created': datetime.datetime(2022, 8, 19, 10, 29, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Hitansh-Shah', 'type': 'User'}]","[{'commit_sha': 'a22ae5199b8d836f7c3267241dfcbf9bdafdb3b4', 'committer_username': 'Hitansh-Shah', 'committer_name': 'Hitansh Shah', 'committer_email': None, 'commit_date': datetime.datetime(2020, 12, 19, 11, 58, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a0f3002c46b57d76524e32509222c2ee227fdfc', 'committer_username': 'Hitansh-Shah', 'committer_name': 'Hitansh Shah', 'committer_email': None, 'commit_date': datetime.datetime(2020, 12, 19, 11, 58, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ede24641e83addfa5b282ff00ac0e74b81ba0b3', 'committer_username': 'Hitansh-Shah', 'committer_name': 'Hitansh Shah', 'committer_email': None, 'commit_date': datetime.datetime(2020, 12, 19, 11, 58, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3978bb0383bc41ec4353be27b92b0924431a288', 'committer_username': 'Hitansh-Shah', 'committer_name': 'Hitansh Shah', 'committer_email': None, 'commit_date': datetime.datetime(2020, 12, 19, 11, 58, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fe1d6a99d3c62b1863362fc7bd0cb3182936f5f', 'committer_username': 'Hitansh-Shah', 'committer_name': 'Hitansh Shah', 'committer_email': None, 'commit_date': datetime.datetime(2020, 12, 19, 11, 58, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a58d9f9a0198b1efea7d2c00c929c9a0e7c605f8', 'committer_username': 'Hitansh-Shah', 'committer_name': 'Hitansh Shah', 'committer_email': None, 'commit_date': datetime.datetime(2020, 12, 19, 11, 58, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a40feef952eba99c106a98a81b0df67139dd719b', 'committer_username': 'Hitansh-Shah', 'committer_name': 'Hitansh Shah', 'committer_email': None, 'commit_date': datetime.datetime(2020, 12, 19, 11, 58, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0ad295984761b3f9ce6a894dd76e4f59c864b70', 'committer_username': 'Hitansh-Shah', 'committer_name': 'Hitansh Shah', 'committer_email': None, 'commit_date': datetime.datetime(2020, 12, 19, 11, 58, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bfc0721d3cb9d7330bdbe9b53f1b83108da3ee9', 'committer_username': 'Hitansh-Shah', 'committer_name': 'Hitansh Shah', 'committer_email': None, 'commit_date': datetime.datetime(2020, 12, 19, 11, 58, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80e253a499553cdcafffc0653eead6d3314114eb', 'committer_username': 'Hitansh-Shah', 'committer_name': 'Hitansh Shah', 'committer_email': None, 'commit_date': datetime.datetime(2020, 12, 19, 11, 58, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8115438b73de176103569f80b2ae509fe80cc248', 'committer_username': 'Hitansh-Shah', 'committer_name': 'Hitansh Shah', 'committer_email': None, 'commit_date': datetime.datetime(2020, 12, 19, 11, 58, 30, tzinfo=datetime.timezone.utc)}]",Hitansh Shah,76250591,,User,,24,,5,19
1031000379,Test coverage,"This PR depends on #44 .
I installed coverage package as a dev dependency and ran tests with it. According to its report we have a total of 94% test coverage. I am attaching the full report.
![image](https://user-images.githubusercontent.com/76250591/185599433-8b0dbaa7-0882-4221-9112-ed03284895a3.png)
",True,45,https://api.github.com/repos/wagtail/guide/pulls/45,https://github.com/wagtail/guide/pull/45,closed,19,1,5,2,1,2,0,1,[],2022-08-19 10:27:43+00:00,2022-09-06 13:06:00+00:00,1564697.0,"18 days, 2:38:17","[{'comment_id': 960726103, 'comment_body': ""Why does this have a `/` and other dirs don't? I guess we can remove `/`.\r\n\r\nCan we add `*env*` as our own instructions tell to create a env by this name?\r\n\r\nCan we add `*test*` as tests should not be in coverage."", 'comment_created': datetime.datetime(2022, 9, 1, 14, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'allcaps', 'type': 'User'}, {'comment_id': 961538602, 'comment_body': 'Yup, seems fair to me. I have pushed a commit for this.\r\n', 'comment_created': datetime.datetime(2022, 9, 2, 10, 34, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Hitansh-Shah', 'type': 'User'}]","[{'commit_sha': '32b6f843fee1624f51266af740880f608fe75a42', 'committer_username': 'Hitansh-Shah', 'committer_name': 'Hitansh Shah', 'committer_email': None, 'commit_date': datetime.datetime(2020, 12, 19, 11, 58, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28eab756c0cbed0df8707fd50f14bef24f61cf28', 'committer_username': 'Hitansh-Shah', 'committer_name': 'Hitansh Shah', 'committer_email': None, 'commit_date': datetime.datetime(2020, 12, 19, 11, 58, 30, tzinfo=datetime.timezone.utc)}]",Hitansh Shah,76250591,,User,,24,,5,19

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
496950708,guide,wagtail/guide,Python,26,31,7,14,402,91,12,7,"[{'id': 1096481670, 'number': 177, 'closed': datetime.datetime(2022, 10, 27, 14, 8, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 23, 7, 6, 35, tzinfo=datetime.timezone.utc), 'time_taken': 370904.0, 'time_delta': '4 days, 7:01:44', 'additions': 334, 'deletions': 45, 'state': 'closed'}, {'id': 1088324266, 'number': 117, 'closed': datetime.datetime(2022, 10, 17, 16, 47, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 16, 6, 37, 53, tzinfo=datetime.timezone.utc), 'time_taken': 122961.0, 'time_delta': '1 day, 10:09:21', 'additions': 58, 'deletions': 0, 'state': 'closed'}, {'id': 1046231502, 'number': 61, 'closed': datetime.datetime(2022, 9, 6, 14, 48, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 5, 11, 17, 57, tzinfo=datetime.timezone.utc), 'time_taken': 99044.0, 'time_delta': '1 day, 3:30:44', 'additions': 36, 'deletions': 70, 'state': 'closed'}, {'id': 1045441367, 'number': 59, 'closed': datetime.datetime(2022, 9, 6, 21, 18, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 3, 9, 49, 3, tzinfo=datetime.timezone.utc), 'time_taken': 300566.0, 'time_delta': '3 days, 11:29:26', 'additions': 307, 'deletions': 2, 'state': 'closed'}, {'id': 1042902020, 'number': 55, 'closed': datetime.datetime(2022, 9, 1, 14, 19, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 31, 21, 54, 40, tzinfo=datetime.timezone.utc), 'time_taken': 59085.0, 'time_delta': '16:24:45', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1038284014, 'number': 51, 'closed': datetime.datetime(2022, 9, 6, 13, 5, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 26, 19, 4, 7, tzinfo=datetime.timezone.utc), 'time_taken': 928865.0, 'time_delta': '10 days, 18:01:05', 'additions': 12, 'deletions': 0, 'state': 'closed'}, {'id': 1035727133, 'number': 49, 'closed': datetime.datetime(2022, 8, 29, 8, 4, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 24, 16, 23, 29, tzinfo=datetime.timezone.utc), 'time_taken': 402046.0, 'time_delta': '4 days, 15:40:46', 'additions': 159, 'deletions': 1, 'state': 'closed'}, {'id': 1035585740, 'number': 48, 'closed': datetime.datetime(2022, 8, 30, 23, 17, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 24, 14, 45, 29, tzinfo=datetime.timezone.utc), 'time_taken': 549124.0, 'time_delta': '6 days, 8:32:04', 'additions': 25, 'deletions': 0, 'state': 'closed'}, {'id': 1032009177, 'number': 46, 'closed': datetime.datetime(2022, 8, 23, 3, 50, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 21, 10, 5, 51, tzinfo=datetime.timezone.utc), 'time_taken': 150272.0, 'time_delta': '1 day, 17:44:32', 'additions': 92, 'deletions': 0, 'state': 'closed'}, {'id': 1031000379, 'number': 45, 'closed': datetime.datetime(2022, 9, 6, 13, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 19, 10, 27, 43, tzinfo=datetime.timezone.utc), 'time_taken': 1564697.0, 'time_delta': '18 days, 2:38:17', 'additions': 19, 'deletions': 1, 'state': 'closed'}, {'id': 1025558015, 'number': 44, 'closed': datetime.datetime(2022, 8, 21, 6, 3, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 13, 9, 42, 2, tzinfo=datetime.timezone.utc), 'time_taken': 678085.0, 'time_delta': '7 days, 20:21:25', 'additions': 39, 'deletions': 0, 'state': 'closed'}, {'id': 1025540330, 'number': 43, 'closed': datetime.datetime(2022, 8, 13, 9, 14, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 13, 7, 33, 53, tzinfo=datetime.timezone.utc), 'time_taken': 6026.0, 'time_delta': '1:40:26', 'additions': 30, 'deletions': 26, 'state': 'closed'}, {'id': 1024871209, 'number': 42, 'closed': datetime.datetime(2022, 8, 18, 18, 12, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 12, 12, 0, 5, tzinfo=datetime.timezone.utc), 'time_taken': 540770.0, 'time_delta': '6 days, 6:12:50', 'additions': 11, 'deletions': 0, 'state': 'closed'}, {'id': 1023008460, 'number': 41, 'closed': datetime.datetime(2022, 8, 13, 5, 49, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 10, 17, 51, 10, tzinfo=datetime.timezone.utc), 'time_taken': 215914.0, 'time_delta': '2 days, 11:58:34', 'additions': 81, 'deletions': 1, 'state': 'closed'}, {'id': 1021119282, 'number': 40, 'closed': datetime.datetime(2022, 8, 10, 14, 40, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 9, 7, 1, 35, tzinfo=datetime.timezone.utc), 'time_taken': 113959.0, 'time_delta': '1 day, 7:39:19', 'additions': 22, 'deletions': 4, 'state': 'closed'}, {'id': 1017461507, 'number': 35, 'closed': datetime.datetime(2022, 8, 21, 6, 3, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 4, 12, 24, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1445944.0, 'time_delta': '16 days, 17:39:04', 'additions': 113, 'deletions': 5, 'state': 'closed'}, {'id': 1014735643, 'number': 34, 'closed': datetime.datetime(2022, 8, 16, 13, 15, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 2, 7, 43, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1229527.0, 'time_delta': '14 days, 5:32:07', 'additions': 49, 'deletions': 1, 'state': 'closed'}, {'id': 1013955941, 'number': 33, 'closed': datetime.datetime(2022, 8, 5, 7, 0, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 1, 14, 29, 32, tzinfo=datetime.timezone.utc), 'time_taken': 318682.0, 'time_delta': '3 days, 16:31:22', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 1007654800, 'number': 29, 'closed': datetime.datetime(2022, 8, 5, 7, 27, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 25, 18, 56, 24, tzinfo=datetime.timezone.utc), 'time_taken': 909094.0, 'time_delta': '10 days, 12:31:34', 'additions': 24, 'deletions': 4, 'state': 'closed'}, {'id': 1007150050, 'number': 28, 'closed': datetime.datetime(2022, 7, 26, 11, 11, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 25, 11, 5, 30, tzinfo=datetime.timezone.utc), 'time_taken': 86735.0, 'time_delta': '1 day, 0:05:35', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 997086080, 'number': 17, 'closed': datetime.datetime(2022, 7, 15, 20, 39, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 14, 20, 21, 10, tzinfo=datetime.timezone.utc), 'time_taken': 87479.0, 'time_delta': '1 day, 0:17:59', 'additions': 196, 'deletions': 15, 'state': 'closed'}, {'id': 992262157, 'number': 15, 'closed': datetime.datetime(2022, 7, 15, 20, 39, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 9, 15, 57, 39, tzinfo=datetime.timezone.utc), 'time_taken': 535312.0, 'time_delta': '6 days, 4:41:52', 'additions': 192, 'deletions': 6, 'state': 'closed'}, {'id': 987098463, 'number': 13, 'closed': datetime.datetime(2022, 7, 5, 8, 51, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 5, 7, 40, 13, tzinfo=datetime.timezone.utc), 'time_taken': 4295.0, 'time_delta': '1:11:35', 'additions': 37, 'deletions': 0, 'state': 'closed'}, {'id': 986580666, 'number': 10, 'closed': datetime.datetime(2022, 7, 4, 17, 27, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 4, 15, 7, 12, tzinfo=datetime.timezone.utc), 'time_taken': 8402.0, 'time_delta': '2:20:02', 'additions': 93, 'deletions': 0, 'state': 'closed'}, {'id': 985481043, 'number': 7, 'closed': datetime.datetime(2022, 7, 2, 22, 18, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 2, 7, 59, 59, tzinfo=datetime.timezone.utc), 'time_taken': 51503.0, 'time_delta': '14:18:23', 'additions': 7, 'deletions': 0, 'state': 'closed'}, {'id': 984753822, 'number': 6, 'closed': datetime.datetime(2022, 7, 2, 22, 18, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 1, 9, 41, 42, tzinfo=datetime.timezone.utc), 'time_taken': 131787.0, 'time_delta': '1 day, 12:36:27', 'additions': 271, 'deletions': 85, 'state': 'closed'}, {'id': 964946673, 'number': 5, 'closed': datetime.datetime(2022, 7, 1, 10, 55, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 12, 8, 41, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1649599.0, 'time_delta': '19 days, 2:13:19', 'additions': 88, 'deletions': 83, 'state': 'closed'}, {'id': 964807537, 'number': 4, 'closed': datetime.datetime(2022, 6, 11, 21, 25, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 11, 17, 34, 17, tzinfo=datetime.timezone.utc), 'time_taken': 13878.0, 'time_delta': '3:51:18', 'additions': 0, 'deletions': 14, 'state': 'closed'}, {'id': 964471042, 'number': 3, 'closed': datetime.datetime(2022, 6, 10, 22, 59, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 10, 19, 35, 28, tzinfo=datetime.timezone.utc), 'time_taken': 12266.0, 'time_delta': '3:24:26', 'additions': 1, 'deletions': 0, 'state': 'closed'}]"
