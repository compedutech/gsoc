pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
699740336,feat: Added authz-casbin plugin and doc and tests for it,"### What this PR does / why we need it:
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->
fix: #4674 

This PR adds an authorization plugin: `authz-casbin` to APISIX. This is based on Lua Casbin which is the Lua implementation of Casbin library. The plugin supports enforcement of powerful authorization scenarios based on various access control models supported by Casbin.

The plugin works on the basis of a model file and a policy file. The model acts as a configuration for the policies and policy enforcement. The plugin currently also supports direct model/policy text in absence of files through plugin metadata.

An example of authz model is:

```conf
[request_definition]
r = sub, obj, act
[policy_definition]
p = sub, obj, act
[role_definition]
g = _, _
[policy_effect]
e = some(where (p.eft == allow))
[matchers]
m = (g(r.sub, p.sub) || keyMatch(r.sub, p.sub)) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act)
```

And example of authz policy is:

```
p, *, /, GET
p, admin, *, *
g, alice, admin
```

This means that any user (subject) can access the homepage which is at `/` via `GET` request but only admins can a access other pages and use other request methods. And here, as defined in policy `alice` has a role as `admin` and hence she has admin access.



### Pre-submission checklist:

* [x] Did you explain what problem does this PR solve? Or what new features have been added?
* [x] Have you added corresponding test cases?
* [x] Have you modified the corresponding document?
* [x] Is this PR backward compatible? **If it is not backward compatible, please discuss on the [mailing list](https://github.com/apache/apisix/tree/master#community) first**
",True,4710,https://api.github.com/repos/apache/apisix/pulls/4710,https://github.com/apache/apisix/pull/4710,closed,903,9,13,16,2,60,0,0,[],2021-07-29 18:10:30+00:00,2021-08-06 03:35:08+00:00,638678.0,"7 days, 9:24:38","[{'comment_id': 679585648, 'comment_body': ""The plugin_metadata should be only set on the CP side. It's forbidden to let configuration flow from the DP to the CP."", 'comment_created': datetime.datetime(2021, 7, 30, 1, 27, 3, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 679586387, 'comment_body': ""Since we already use metadata to store the configuration, there is no need to provide APIs on the DP side. Everything should be done with the plugin metadata's API on the CP side."", 'comment_created': datetime.datetime(2021, 7, 30, 1, 29, 23, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 679700831, 'comment_body': '@spacewander \r\nThanks for your review, so we will remove all the API functions and if the model/policy text in plugin metadata is updated (from the CP side), we will update the `casbin_enforcer` through that model/policy too. Is this correct?', 'comment_created': datetime.datetime(2021, 7, 30, 7, 7, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 679712809, 'comment_body': 'Yes, you can use `metadata.modifiedIndex` to ensure casbin_enforcer is created with the latest model/policy, like this one:\r\nhttps://github.com/apache/apisix/blob/fd8f875429bd43462430bd662788940f6a579ff9/apisix/http/router/radixtree_uri.lua#L31-L36', 'comment_created': datetime.datetime(2021, 7, 30, 7, 29, 41, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 679713617, 'comment_body': 'And I think you can submit a minimum viable pull request so that we can check & merge it early. ', 'comment_created': datetime.datetime(2021, 7, 30, 7, 31, 9, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 679714865, 'comment_body': 'Sure I will do that.', 'comment_created': datetime.datetime(2021, 7, 30, 7, 33, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 679808989, 'comment_body': 'I added a condition that if the configuration changes, the `casbin_enforcer` will be recreated.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 5, 18, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680410641, 'comment_body': 'Hi @rushitote I think you need to also install pcre lib in chaos testing ci to make it pass, see [error log](https://github.com/apache/apisix/pull/4710/checks?check_run_id=3207414954#step:4:932). \r\nYou could add it before building docker image [here](https://github.com/apache/apisix/blob/master/.github/workflows/chaos.yml#L32)', 'comment_created': datetime.datetime(2021, 7, 31, 21, 16, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Yiyiyimu', 'type': 'User'}, {'comment_id': 680453855, 'comment_body': 'Multiple routes will use the same casbin enforcer? I think we should store different casbin via lrucache, like this:\r\nhttps://github.com/apache/apisix/blob/9db2dd2399c3970df1e1b7fa0f8b7dcd92d26b1c/apisix/plugins/error-log-logger.lua#L144', 'comment_created': datetime.datetime(2021, 8, 1, 5, 31, 24, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680483656, 'comment_body': '@Yiyiyimu Thanks for this, I have made the change.', 'comment_created': datetime.datetime(2021, 8, 1, 9, 43, 25, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680483896, 'comment_body': 'Yes, you are right. I have changed it now.', 'comment_created': datetime.datetime(2021, 8, 1, 9, 45, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680495652, 'comment_body': ""We don't need to check the existence for these three variables if we use them in the HTTP sub-system."", 'comment_created': datetime.datetime(2021, 8, 1, 11, 18, 16, tzinfo=datetime.timezone.utc), 'commenter': 'tokers', 'type': 'User'}, {'comment_id': 680495886, 'comment_body': 'Please specify the precedence between this one and the path way.', 'comment_created': datetime.datetime(2021, 8, 1, 11, 20, 33, tzinfo=datetime.timezone.utc), 'commenter': 'tokers', 'type': 'User'}, {'comment_id': 680496397, 'comment_body': 'Yes, right - this is redundant here.', 'comment_created': datetime.datetime(2021, 8, 1, 11, 24, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680496501, 'comment_body': 'Sure, I will make it more clear there.', 'comment_created': datetime.datetime(2021, 8, 1, 11, 25, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680498417, 'comment_body': ""Sorry, I rethought about it afternoon, and found it isn't a good idea.\r\nIt is more suitable to bind the casbin with the conf like:\r\nhttps://github.com/apache/apisix/blob/38561dc0cd13ee412d05a96153dee80018f1e799/apisix/plugins/uri-blocker.lua#L83\r\n\r\nWe also need to ensure the global casbin is update-to-date with the metadata via https://github.com/apache/apisix/pull/4710#discussion_r679712809"", 'comment_created': datetime.datetime(2021, 8, 1, 11, 41, 3, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680498626, 'comment_body': '```suggestion\r\n        if metadata and metadata.value and conf.username then\r\n```\r\n\r\nSince we have checked the metadata schema.', 'comment_created': datetime.datetime(2021, 8, 1, 11, 42, 36, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680498708, 'comment_body': 'Test 4 already contains Test 3?', 'comment_created': datetime.datetime(2021, 8, 1, 11, 43, 19, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680498844, 'comment_body': 'Need a similar test for the policy_path configuration.', 'comment_created': datetime.datetime(2021, 8, 1, 11, 44, 24, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680503928, 'comment_body': 'Yes, removed that unnecessary part from test 4.', 'comment_created': datetime.datetime(2021, 8, 1, 12, 26, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680503986, 'comment_body': 'Added the tests for enforcer from files.', 'comment_created': datetime.datetime(2021, 8, 1, 12, 26, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680540246, 'comment_body': '@spacewander Sorry, I found this now. But is there any reason for us to not use lrucache? It worked well for two different routes with different casbin enforcers when I tested it.', 'comment_created': datetime.datetime(2021, 8, 1, 17, 14, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680569232, 'comment_body': 'Sorry I made a mistake 😿 We need to add the dependency to the dockerfile but not on the host machine. Do you mind file a PR about the change on the dockerfile: https://github.com/apache/apisix-docker/blob/master/alpine-local/Dockerfile, which is used as building apisix image used in chaos testing\r\n\r\nAlso we need to change docs about dependencies installation to inform users to install them: https://github.com/apache/apisix/blob/master/docs/en/latest/install-dependencies.md', 'comment_created': datetime.datetime(2021, 8, 1, 21, 36, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Yiyiyimu', 'type': 'User'}, {'comment_id': 680597992, 'comment_body': 'EOL symbol is required. Please check out the editor configuration.', 'comment_created': datetime.datetime(2021, 8, 2, 1, 13, 15, tzinfo=datetime.timezone.utc), 'commenter': 'tokers', 'type': 'User'}, {'comment_id': 680767574, 'comment_body': '@Yiyiyimu Thanks again, I have created a PR for that at [apisix-docker#202](https://github.com/apache/apisix-docker/pull/202) and added PCRE in the dependency installation doc.', 'comment_created': datetime.datetime(2021, 8, 2, 8, 17, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680769568, 'comment_body': 'Added the EOL symbol in model/policy files.', 'comment_created': datetime.datetime(2021, 8, 2, 8, 19, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680770800, 'comment_body': 'I have removed `lrucache` and replaced it by binding the `casbin_enforcer` to conf. Also we will use the `modifiedIndex` to keep the casbin from metadata updated.', 'comment_created': datetime.datetime(2021, 8, 2, 8, 21, 33, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680814955, 'comment_body': '> \r\n> \r\n> @spacewander Sorry, I found this now. But is there any reason for us to not use lrucache? It worked well for two different routes with different casbin enforcers when I tested it.\r\n\r\nIt works fine, but makes the life cycle complex. ', 'comment_created': datetime.datetime(2021, 8, 2, 9, 25, 16, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680822076, 'comment_body': 'IMHO, it surprises me that the enforcer from metadata can override the one from the route. Normally, the route level configuration can override the global one.', 'comment_created': datetime.datetime(2021, 8, 2, 9, 35, 23, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680823647, 'comment_body': ""We don't need to bind the enforcer from metadata with the route configuration as it is global. Recreating the global enforcer when the request hits another route is not a good idea."", 'comment_created': datetime.datetime(2021, 8, 2, 9, 37, 35, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680825014, 'comment_body': '```suggestion\r\nfunction _M.rewrite(conf, ctx)\r\n```', 'comment_created': datetime.datetime(2021, 8, 2, 9, 39, 31, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680828023, 'comment_body': '```suggestion\r\n    local method = ctx.var.method\r\n```', 'comment_created': datetime.datetime(2021, 8, 2, 9, 43, 49, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680828532, 'comment_body': '```suggestion\r\n    local path = ctx.var.uri\r\n```\r\n\r\nIt is more suitable to use the normalized one? See http://nginx.org/en/docs/http/ngx_http_core_module.html#var_uri', 'comment_created': datetime.datetime(2021, 8, 2, 9, 44, 35, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680880465, 'comment_body': '@spacewander so, should we create a new `casbin_enforcer` local variable specifically for global config? Then we can also have (if any) route enforcer override the global one.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680888412, 'comment_body': '> \r\n> \r\n> @spacewander so, should we create a new `casbin_enforcer` local variable specifically for global config? Then we can also have (if any) route enforcer override the global one.\r\n\r\nDo you mean a new global variable?', 'comment_created': datetime.datetime(2021, 8, 2, 11, 21, 39, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680892577, 'comment_body': '> > @spacewander so, should we create a new `casbin_enforcer` local variable specifically for global config? Then we can also have (if any) route enforcer override the global one.\r\n> \r\n> Do you mean a new global variable?\r\n\r\nlocal, similar as that of the first commit ([here](https://github.com/apache/apisix/pull/4710/commits/cb37e5fdce3df9cd42f25fa1502a5001aa25a95c#diff-b18fc191c270634f4d1d599ad10a5dbb1d646ec9ff4c9f9e6224195e45a96a8bR25))', 'comment_created': datetime.datetime(2021, 8, 2, 11, 28, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680961580, 'comment_body': '@spacewander I was thinking of something like this:\r\n```lua\r\nlocal casbin_enforcer\r\n\r\nlocal function new_enforcer(conf, modifiedIndex)\r\n    local model_path = conf.model_path\r\n    local policy_path = conf.policy_path\r\n\r\n    if model_path and policy_path then\r\n        conf.type = ""file""\r\n        conf.casbin_enforcer = casbin:new(model_path, policy_path)\r\n        return\r\n    end\r\n\r\n    local metadata = plugin.plugin_metadata(plugin_name)\r\n    if metadata and metadata.value.model and metadata.value.policy then\r\n        conf.type = ""metadata""\r\n        if not casbin_enforcer or casbin_enforcer.modifiedIndex ~= modifiedIndex then\r\n            local model = metadata.value.model\r\n            local policy = metadata.value.policy\r\n            casbin_enforcer = casbin:newEnforcerFromText(model, policy)\r\n            casbin_enforcer.modifiedIndex = modifiedIndex\r\n        end\r\n    end\r\nend\r\n\r\n\r\nfunction _M.rewrite(conf, ctx)\r\n    -- creates an enforcer when request sent for the first time\r\n    local metadata = plugin.plugin_metadata(plugin_name)\r\n\r\n    if (not conf.casbin_enforcer and conf.type ~= ""metadata"") or\r\n    (conf.type == ""metadata"" and casbin_enforcer.modifiedIndex ~= metadata.modifiedIndex) then\r\n        new_enforcer(conf, metadata.modifiedIndex)\r\n    end\r\n\r\n    local path = ctx.var.uri\r\n    local method = ctx.var.method\r\n    local username = get_headers()[conf.username]\r\n    if not username then username = ""anonymous"" end\r\n\r\n    if conf.casbin_enforcer then\r\n        if not conf.casbin_enforcer:enforce(username, path, method) then\r\n            return 403, {message = ""Access Denied""}\r\n        end\r\n    else\r\n        if not casbin_enforcer:enforce(username, path, method) then\r\n            return 403, {message = ""Access Denied""}\r\n        end\r\n    end\r\nend\r\n```\r\n\r\nSo, we divide routes into two types - either `file` or `metadata`. The `file` one has their own enforcer binded to the conf while all the `metadata` based routes use the same `casbin_enforcer`. In case of the metadata based route, enforcer is created only when either there isn\'t one or when the `modifiedIndex` has changed. And since this separates any route into one of the two types, one type will not override the other. Will this solve the issue?', 'comment_created': datetime.datetime(2021, 8, 2, 13, 16, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680986533, 'comment_body': 'LGTM. The only issue is that both new_enforcer and rewrite check if we need to create a new enforcer. I think we can just leave the check in one method.', 'comment_created': datetime.datetime(2021, 8, 2, 13, 48, 2, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680996261, 'comment_body': ""@spacewander Can you please tell me which check we could remove? I feel all are necessary and don't see any similar checks."", 'comment_created': datetime.datetime(2021, 8, 2, 13, 59, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 681361420, 'comment_body': 'What about:\r\n```\r\nlocal casbin_enforcer\r\n\r\nlocal function new_enforcer_if_need(conf)\r\n    local model_path = conf.model_path\r\n    local policy_path = conf.policy_path\r\n\r\n    if model_path and policy_path then\r\n        if not conf.casbin_enforcer then\r\n            conf.casbin_enforcer = casbin:new(model_path, policy_path)\r\n        end\r\n        return true\r\n    end\r\n\r\n    local metadata = plugin.plugin_metadata(plugin_name)\r\n    if not (metadata and metadata.value.model and metadata.value.policy) then\r\n        return nil, ""not enough configuration to create enforcer""\r\n    end\r\n\r\n    local modifiedIndex = metadata.modifiedIndex\r\n    if not casbin_enforcer or casbin_enforcer.modifiedIndex ~= modifiedIndex then\r\n        local model = metadata.value.model\r\n        local policy = metadata.value.policy\r\n        casbin_enforcer = casbin:newEnforcerFromText(model, policy)\r\n        casbin_enforcer.modifiedIndex = modifiedIndex\r\n    end\r\n    return true\r\nend\r\n\r\n\r\nfunction _M.rewrite(conf, ctx)\r\n    -- creates an enforcer when request sent for the first time\r\n    local ok, err = new_enforcer_if_need(conf)\r\n    if not ok then\r\n        return 503, {message = err}\r\n    end\r\n\r\n    local path = ctx.var.uri\r\n    local method = ctx.var.method\r\n    local username = get_headers()[conf.username]\r\n    if not username then username = ""anonymous"" end\r\n\r\n    if conf.casbin_enforcer then\r\n        if not conf.casbin_enforcer:enforce(username, path, method) then\r\n            return 403, {message = ""Access Denied""}\r\n        end\r\n    else\r\n        if not casbin_enforcer:enforce(username, path, method) then\r\n            return 403, {message = ""Access Denied""}\r\n        end\r\n    end\r\nend\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 1, 8, 33, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 681457803, 'comment_body': '```suggestion\r\n    local username = get_headers()[conf.username] or ""anonymous""\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 6, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'tzssangglass', 'type': 'User'}, {'comment_id': 681538163, 'comment_body': 'I think this is good, I have added a commit with this.', 'comment_created': datetime.datetime(2021, 8, 3, 8, 15, 3, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 681538755, 'comment_body': 'Thanks, added it.', 'comment_created': datetime.datetime(2021, 8, 3, 8, 15, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 681545972, 'comment_body': 'if `username` is always required, you can use `required = {""username""}` in `schema`, such as https://github.com/apache/apisix/blob/1b247c8e1ebd324efe66abbe33d5647a93f0426e/apisix/plugins/example-plugin.lua#L22-L32', 'comment_created': datetime.datetime(2021, 8, 3, 8, 25, 32, tzinfo=datetime.timezone.utc), 'commenter': 'tzssangglass', 'type': 'User'}, {'comment_id': 681551257, 'comment_body': '```suggestion\r\n                    ""uri"": ""/hello""\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 8, 32, 21, tzinfo=datetime.timezone.utc), 'commenter': 'tzssangglass', 'type': 'User'}, {'comment_id': 681595426, 'comment_body': 'It is already there ([here](https://github.com/apache/apisix/pull/4710/files#diff-b18fc191c270634f4d1d599ad10a5dbb1d646ec9ff4c9f9e6224195e45a96a8bR33)). This was meant to check if the route will use the plugin metadata (instead of files) and hence it requires separate schema check.', 'comment_created': datetime.datetime(2021, 8, 3, 9, 30, 18, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 681605842, 'comment_body': 'got', 'comment_created': datetime.datetime(2021, 8, 3, 9, 44, 54, tzinfo=datetime.timezone.utc), 'commenter': 'tzssangglass', 'type': 'User'}, {'comment_id': 681606581, 'comment_body': '```suggestion\r\n                    ""uri"": ""/hello""\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 9, 46, tzinfo=datetime.timezone.utc), 'commenter': 'tzssangglass', 'type': 'User'}, {'comment_id': 681607319, 'comment_body': 'ditto\r\n', 'comment_created': datetime.datetime(2021, 8, 3, 9, 46, 55, tzinfo=datetime.timezone.utc), 'commenter': 'tzssangglass', 'type': 'User'}, {'comment_id': 681613073, 'comment_body': 'Changed it.', 'comment_created': datetime.datetime(2021, 8, 3, 9, 54, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 681644103, 'comment_body': 'I thought for a while and was confused by the intention of the metadata, is it used as the default policy? And why not also support using text format in the plugin configuration?', 'comment_created': datetime.datetime(2021, 8, 3, 10, 43, 4, tzinfo=datetime.timezone.utc), 'commenter': 'tokers', 'type': 'User'}, {'comment_id': 681651508, 'comment_body': '@tokers I think it is meant to be kind of global configuration for all routes, like you can update the metadata once and for all routes using it will get updated. Should I add the support for using model/policy text from plugin conf?', 'comment_created': datetime.datetime(2021, 8, 3, 10, 55, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 681654637, 'comment_body': ""@spacewander What's your opinion? If the policy in plugin metadata is used to be the default one, we'd better keep the configuration items consistent."", 'comment_created': datetime.datetime(2021, 8, 3, 11, 0, 35, tzinfo=datetime.timezone.utc), 'commenter': 'tokers', 'type': 'User'}, {'comment_id': 682209686, 'comment_body': ""@rushitote @tokers \r\nYes, let's do it."", 'comment_created': datetime.datetime(2021, 8, 4, 0, 57, 22, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 682511353, 'comment_body': 'It should be `oneOf`.', 'comment_created': datetime.datetime(2021, 8, 4, 10, 59, 59, tzinfo=datetime.timezone.utc), 'commenter': 'tokers', 'type': 'User'}, {'comment_id': 682566688, 'comment_body': 'Changed it.', 'comment_created': datetime.datetime(2021, 8, 4, 12, 26, 48, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 683067882, 'comment_body': 'It seems that now we should claim the precedence between route config and metadata config, rather than the file and text.', 'comment_created': datetime.datetime(2021, 8, 5, 1, 42, 34, tzinfo=datetime.timezone.utc), 'commenter': 'tokers', 'type': 'User'}, {'comment_id': 683113011, 'comment_body': ""@tokers So, should it be worded like this:\r\n\r\n'The plugin route configuration has a higher precedence than the plugin metadata configuration. Hence if the model/policy configuration is present in the plugin route config, the plugin will use that instead of the metadata config.'"", 'comment_created': datetime.datetime(2021, 8, 5, 4, 7, 24, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 683365239, 'comment_body': ""That's good enough 👍."", 'comment_created': datetime.datetime(2021, 8, 5, 11, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'tokers', 'type': 'User'}, {'comment_id': 683384109, 'comment_body': 'Replaced it.', 'comment_created': datetime.datetime(2021, 8, 5, 11, 55, 48, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}]","[{'commit_sha': 'cb37e5fdce3df9cd42f25fa1502a5001aa25a95c', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56668c0e3ede82864b6e7a1c2cb15f60b99bfcf8', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38a1ff1aa1a5f022ad960cd7885e982ec1957322', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67a433e11a85f06d00e41a74226d3214028fd5e5', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2eb4cb568c35946ba509f36e2eed019e3adcefc2', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22f76c509cac7e5e9e5a8c9be55daa92240d793e', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fa5b8264200c713585e3597e29f82931614626d', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0aa45184d121b0dcc9e37989f5188e6a3dc086ed', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b95d9afad5feb0a5e80b78b4cc771a4185b729f1', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc7981fe976d703e0201d4959bf948dc4d35673c', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c15ecf9979789c2718c954c5523563d4f0dd5a3d', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8824fc90a938c2602889e740a606d3d9537d7f1b', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0858c89436c07b5aa5a5cb4cb60fd6996c4bb70', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '842f9d1b6f7595e6feed489750f6d6b75e2abed7', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a32d79ef891d42fcadaf39d76db5e196c3c26bd8', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba0b0c6b8e1a4446a9b3ec132f4e7cc7dd6a9bff', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
652066431,test: Added CoreEnforcer tests and feat: Enforce with no policy functionality,"- Added full tests for CoreEnforcer
- Now the CoreEnforcer can work with empty policies too

Next focus would be on creating a setup guide for OpenResty users.",True,48,https://api.github.com/repos/casbin/lua-casbin/pulls/48,https://github.com/casbin/lua-casbin/pull/48,closed,274,5,6,1,2,0,1,0,[{'name': 'released'}],2021-05-25 08:47:50+00:00,2021-05-26 12:48:19+00:00,100829.0,"1 day, 4:00:29",[],"[{'commit_sha': '321aa63cbf391a5beab43ce52be16ed15ab69a60', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
657463692,docs: Added guide for setup of Lua-Casbin on OpenResty,"Fix: https://github.com/casbin/lua-casbin/issues/27

Also changed the unit tests directory from `spec` to `tests`.",True,49,https://api.github.com/repos/casbin/lua-casbin/pulls/49,https://github.com/casbin/lua-casbin/pull/49,closed,148,104,13,2,1,0,1,0,[{'name': 'released'}],2021-05-29 12:54:33+00:00,2021-05-30 03:12:27+00:00,51474.0,14:17:54,[],"[{'commit_sha': '3757291273be4ca6db2085f92a05a6a539746f82', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82d67b505fdedff550874fe5437c59f8b1104ea1', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
659019643,feat: Added Internal API test and fix: errors with Internal API,"- Added test for Internal API and fixed errors in it.
- Fixed a typo in the setup guide.",True,50,https://api.github.com/repos/casbin/lua-casbin/pulls/50,https://github.com/casbin/lua-casbin/pull/50,closed,181,38,7,1,1,0,1,0,[{'name': 'released'}],2021-06-01 13:44:16+00:00,2021-06-02 09:30:57+00:00,71201.0,19:46:41,[],"[{'commit_sha': 'dc8e359bec5f75ead58d6d59fb0d3dfd08bee5f0', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
662338679,feat: Added Management API for the Enforcer,"Next, I will add tests for this.",True,51,https://api.github.com/repos/casbin/lua-casbin/pulls/51,https://github.com/casbin/lua-casbin/pull/51,closed,350,10,6,1,2,0,1,0,[{'name': 'released'}],2021-06-05 08:15:00+00:00,2021-06-07 12:52:13+00:00,189433.0,"2 days, 4:37:13",[],"[{'commit_sha': '180b59dbcf1fe05463562cfd4dc44bfd95e3eae0', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
664855571,feat: Added Management API tests,"- Added tests for the Management API
- The files `saved_policy.csv` and `testLogFile.log` are generated by the tests. Hence, I added them to `.gitignore` so as to prevent them from being committed in any new PR when tests are run locally.",True,52,https://api.github.com/repos/casbin/lua-casbin/pulls/52,https://github.com/casbin/lua-casbin/pull/52,closed,267,1,2,1,1,0,1,0,[{'name': 'released'}],2021-06-08 12:37:14+00:00,2021-06-08 15:39:28+00:00,10934.0,3:02:14,[],"[{'commit_sha': 'b43fd81de61b8dfafa767a79ed5af7eb6bb4b574', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
668073630,feat: Added RBAC API,"- RBAC API (without domains) was added
- Added functions for `BatchEnforce`, `AddNamedMatchingFunc`, `AddNamedDomainMatchingFunc`

Next, I will add the remaining RBAC API (with domains) and then RBAC API tests.",True,53,https://api.github.com/repos/casbin/lua-casbin/pulls/53,https://github.com/casbin/lua-casbin/pull/53,closed,1066,4,8,3,7,0,1,0,[{'name': 'released'}],2021-06-11 12:10:26+00:00,2021-06-17 04:53:35+00:00,492189.0,"5 days, 16:43:09",[],"[{'commit_sha': '2fff8e93485605087d68b32960fbea234f8b35bd', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a5b82f62b81c7d1c6acd329250bc3cb8b49fc1b', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f976539a334348a64230e6fc50cefb1b8a6d4a0', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
672776513,"feat: Added logging, file logging and interfaces for watcher and dispatcher","- Now, there is a single logger for an Enforcer.
- Also added functionality to save all logs to a specific file.",True,54,https://api.github.com/repos/casbin/lua-casbin/pulls/54,https://github.com/casbin/lua-casbin/pull/54,closed,460,26,13,4,5,6,1,0,[{'name': 'released'}],2021-06-17 15:57:36+00:00,2021-06-27 03:19:24+00:00,818508.0,"9 days, 11:21:48","[{'comment_id': 654750810, 'comment_body': '@rushitote  `enableFileLogger` This method is unnecessary, right ?', 'comment_created': datetime.datetime(2021, 6, 19, 5, 21, 23, tzinfo=datetime.timezone.utc), 'commenter': 'leeqvip', 'type': 'User'}, {'comment_id': 654752000, 'comment_body': 'The default value is `false` .', 'comment_created': datetime.datetime(2021, 6, 19, 5, 34, 36, tzinfo=datetime.timezone.utc), 'commenter': 'leeqvip', 'type': 'User'}, {'comment_id': 656777603, 'comment_body': ""@techoner I thought it would help to log to any file but since this isn't in any other Casbin implementation, should I remove it?"", 'comment_created': datetime.datetime(2021, 6, 23, 5, 47, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 656779124, 'comment_body': 'Changed it to `false`.', 'comment_created': datetime.datetime(2021, 6, 23, 5, 51, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 658068643, 'comment_body': '@rushitote Yes, remove it, if you want to output the log to a file, you can use the log interface .', 'comment_created': datetime.datetime(2021, 6, 24, 15, 44, 58, tzinfo=datetime.timezone.utc), 'commenter': 'leeqvip', 'type': 'User'}, {'comment_id': 658146817, 'comment_body': '@techoner I have removed it.', 'comment_created': datetime.datetime(2021, 6, 24, 17, 29, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}]","[{'commit_sha': 'e34e0056bd9611a48cbc64732411faee40aaf0cc', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0033516c7a6bf8e2b09528fe3fd024a8d9dc8a34', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16d0a4e4111a86b8fafb003fb5cd287dd41beec5', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '899db4cf99c18aab7205065056283239a0085fd0', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
674549537,feat: Update rockspec and rock files of Casbin,"fix: #59 

This is the updated `.rockspec` and `.src.rock` file for the `v1.11.0` version. This has a release tag and hence it won't install any latest release. Now, this module can be used with `require(""casbin"")` command in Lua similar to that of other Casbin implementations.",True,60,https://api.github.com/repos/casbin/lua-casbin/pulls/60,https://github.com/casbin/lua-casbin/pull/60,closed,50,42,4,1,1,0,1,0,[{'name': 'released'}],2021-06-21 13:21:22+00:00,2021-06-22 01:18:59+00:00,43057.0,11:57:37,[],"[{'commit_sha': '8d06006e6c82d76f68ecc02791555a3c5d8eafa8', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
675340660,fix: module error in rockspec file,I tested my previous updated `rockspec` in a VM but it showed errors since the `luaxp` and `BatchAdapter` modules were not in it. I have added that and updated the `.src.rock` file.,True,61,https://api.github.com/repos/casbin/lua-casbin/pulls/61,https://github.com/casbin/lua-casbin/pull/61,closed,3,1,2,1,1,0,1,0,[{'name': 'released'}],2021-06-22 11:40:28+00:00,2021-06-22 11:49:28+00:00,540.0,0:09:00,[],"[{'commit_sha': '63d53f760e3b849604e19c1bf3ac6d98bd75ad6f', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
678296902,feat: Added CachedEnforcer and test for it,,True,62,https://api.github.com/repos/casbin/lua-casbin/pulls/62,https://github.com/casbin/lua-casbin/pull/62,closed,142,0,3,1,2,0,1,0,[{'name': 'released'}],2021-06-26 08:09:01+00:00,2021-06-27 03:17:25+00:00,68904.0,19:08:24,[],"[{'commit_sha': 'e6905056c15c1a1de1db42d407031205e741af6e', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
680144833,feat: Added RBAC domain pattern functionality with tests,Now the `domainMatchingFunc` of RBAC can be used. Also added the Enforcer tests.,True,63,https://api.github.com/repos/casbin/lua-casbin/pulls/63,https://github.com/casbin/lua-casbin/pull/63,closed,283,94,5,2,1,0,1,0,[{'name': 'released'}],2021-06-29 15:41:39+00:00,2021-07-03 16:09:12+00:00,347253.0,"4 days, 0:27:33",[],"[{'commit_sha': 'ceb1ad606e781306dbcaff28e9a4c988fb0b00c7', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4190119f829f5304113f6473d2a501956bc70c5c', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
680931700,fix: setup documentation for Casbin installation,Updated the setup documentation since Casbin has a `.rockspec` now.,True,66,https://api.github.com/repos/casbin/lua-casbin/pulls/66,https://github.com/casbin/lua-casbin/pull/66,closed,19,21,1,1,2,0,1,0,[{'name': 'released'}],2021-06-30 14:30:45+00:00,2021-07-03 04:23:13+00:00,222748.0,"2 days, 13:52:28",[],"[{'commit_sha': '238a68a909e9e6bcecbc86fe76a6b92d2a6bdb8c', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
684943683,perf: Added benchmark test and limited expression compiling to once unless required,"This is the earlier benchmark (LuaJIT) from GitHub Actions:
```
Raw:		Total ops = 10000		Time per op = 0.0005 ms
Basic Model:		Total ops = 10000		Time per op = 0.1157 ms
RBAC Model:		Total ops = 10000		Time per op = 0.2935 ms
RBAC Model Small:		Total ops = 1000		Time per op = 6.3911 ms
RBAC Model Medium:		Total ops = 100		Time per op = 63.5531 ms
RBAC Model Large:		Total ops = 10		Time per op = 670.6526 ms
RBAC Model with Resources:		Total ops = 1000		Time per op = 0.3454 ms
RBAC Model with Domains:		Total ops = 1000		Time per op = 0.4186 ms
ABAC Model:		Total ops = 1000		Time per op = 0.0311 ms
KeyMatch Model:		Total ops = 1000		Time per op = 0.4127 ms
RBAC Model with Deny:		Total ops = 1000		Time per op = 0.3503 ms
Priority Model:		Total ops = 1000		Time per op = 0.4927 ms
```
This is the current one:
```
Raw:		Total ops = 10000		Time per op = 0.0005 ms
Basic Model:		Total ops = 10000		Time per op = 0.0786 ms
RBAC Model:		Total ops = 10000		Time per op = 0.1393 ms
RBAC Model Small:		Total ops = 1000		Time per op = 1.1131 ms
RBAC Model Medium:		Total ops = 100		Time per op = 11.4998 ms
RBAC Model Large:		Total ops = 10		Time per op = 127.0854 ms
RBAC Model with Resources:		Total ops = 1000		Time per op = 0.2428 ms
RBAC Model with Domains:		Total ops = 1000		Time per op = 0.2113 ms
ABAC Model:		Total ops = 1000		Time per op = 0.0484 ms
KeyMatch Model:		Total ops = 1000		Time per op = 0.1511 ms
RBAC Model with Deny:		Total ops = 1000		Time per op = 0.3070 ms
Priority Model:		Total ops = 1000		Time per op = 0.2016 ms
```",True,80,https://api.github.com/repos/casbin/lua-casbin/pulls/80,https://github.com/casbin/lua-casbin/pull/80,closed,318,6,3,2,4,0,1,0,[{'name': 'released'}],2021-07-07 07:36:33+00:00,2021-07-07 09:01:26+00:00,5093.0,1:24:53,[],"[{'commit_sha': '032d408194a18fc9d477c624297a4207efb75cfa', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b7e96521a2fbf9e69f02491c8da2b7f1892669a', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
685874558,feat: Added new version of rockspec/rock file,This is the `.rockspec` and `.src.rock` file based on `v1.16.1`.,True,81,https://api.github.com/repos/casbin/lua-casbin/pulls/81,https://github.com/casbin/lua-casbin/pull/81,closed,7,2,3,1,2,0,1,0,[{'name': 'released'}],2021-07-08 10:10:05+00:00,2021-07-08 15:31:21+00:00,19276.0,5:21:16,[],"[{'commit_sha': 'aa8e467342c84356cc108074ddd3a2fcf727f849', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
688131262,test: Added test for Filtered Adapter,,True,84,https://api.github.com/repos/casbin/lua-casbin/pulls/84,https://github.com/casbin/lua-casbin/pull/84,closed,101,5,3,1,1,0,1,0,[{'name': 'released'}],2021-07-12 19:59:03+00:00,2021-07-13 15:44:07+00:00,71104.0,19:45:04,[],"[{'commit_sha': '206bc35d08ec72ee62a5558d68e94fbdc25367d4', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
691871698,fix: warnings and errors from Luacheck,"fix: #89 

This fixes the warnings and errors from Luacheck. Also, I have added the files `tests/config/test.ini` and `tests/persist/saved_policy.csv` to exclude them from Luacheck since they are Casbin files and not Lua files.",True,91,https://api.github.com/repos/casbin/lua-casbin/pulls/91,https://github.com/casbin/lua-casbin/pull/91,closed,248,270,46,1,1,0,1,0,[{'name': 'released'}],2021-07-17 07:51:10+00:00,2021-07-17 11:17:46+00:00,12396.0,3:26:36,[],"[{'commit_sha': 'ec468465c173445f8739eb8c1c0fde90c11c55aa', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
695972919,feat: Automated LuaRocks module release,"This will generate and upload the latest rockspec of Casbin to LuaRocks on every new release.

@hsluoyz Can you please add a new secret to this repo as `LUAROCKS_API_KEY` with value as the API key from your LuaRocks account (more info [here](https://github.com/luarocks/luarocks/wiki/upload))? Since this needs an API key to work.",True,97,https://api.github.com/repos/casbin/lua-casbin/pulls/97,https://github.com/casbin/lua-casbin/pull/97,closed,78,0,2,1,2,0,1,0,[{'name': 'released'}],2021-07-23 14:11:26+00:00,2021-07-23 15:11:06+00:00,3580.0,0:59:40,[],"[{'commit_sha': 'f1b14a3cf741c24aaf36f58eb96e4beb3cdf3d07', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
696085372,fix: LuaRocks module upload error,"The previous [run](https://github.com/casbin/lua-casbin/runs/3144807126) failed to upload the rockspec, hopefully this fixes it.",True,98,https://api.github.com/repos/casbin/lua-casbin/pulls/98,https://github.com/casbin/lua-casbin/pull/98,closed,6,2,1,1,3,0,1,0,[{'name': 'released'}],2021-07-23 17:00:14+00:00,2021-07-24 00:44:46+00:00,27872.0,7:44:32,[],"[{'commit_sha': '9835264592a07dec3bc168cf313a6c6a467743d1', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
696295909,docs: Added badges for Lua/LuaRocks in README,Fix: https://github.com/casbin/lua-casbin/pull/98#issuecomment-885976933,True,99,https://api.github.com/repos/casbin/lua-casbin/pulls/99,https://github.com/casbin/lua-casbin/pull/99,closed,8,0,1,1,1,0,1,0,[{'name': 'released'}],2021-07-24 05:11:33+00:00,2021-07-24 07:05:24+00:00,6831.0,1:53:51,[],"[{'commit_sha': '3abb8fe54e17eaca207e3bb743260d344398c94c', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
696557584,fix: LuaRocks module link,"There was a frequent installation issue of Lua Casbin where Lua Casbin middleware/plugin tests were failing due to casbin module not being found. This used to be solved by re-running the tests but this was not optimal. So, I found out it was because in LuaRocks we can link one module to only one location and we had our Enforcer module linked to two locations - at `src/main/Enforcer.lua` and `casbin.lua`. And hence LuaRocks used to randomly copy the module at any of two locations.

This is a fix for it as it creates a new link to the Enforcer module at `casbin.lua`, so we can keep the Enforcer module at both paths.",True,103,https://api.github.com/repos/casbin/lua-casbin/pulls/103,https://github.com/casbin/lua-casbin/pull/103,closed,20,1,2,1,1,0,1,0,[{'name': 'released'}],2021-07-25 20:09:37+00:00,2021-07-26 03:17:56+00:00,25699.0,7:08:19,[],"[{'commit_sha': 'c1f84afbc2e6aba68b572c8b4c8832417d4af3c1', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
698062278,feat: Added function to create new Enforcer from text,This is in context with the Casbin plugin for APISIX where we will need to create an enforcer from model and policy text (without files). I think adding this function in our core module would be better than creating the same in the plugin.,True,106,https://api.github.com/repos/casbin/lua-casbin/pulls/106,https://github.com/casbin/lua-casbin/pull/106,closed,70,3,4,1,1,0,1,0,[{'name': 'released'}],2021-07-27 17:46:04+00:00,2021-07-28 00:37:56+00:00,24712.0,6:51:52,[],"[{'commit_sha': '9f0bd09bbdd450c6abe31f864bbbeaca9f26206c', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
714309866,docs: added Installation and Get Started section for this repo,,True,117,https://api.github.com/repos/casbin/lua-casbin/pulls/117,https://github.com/casbin/lua-casbin/pull/117,closed,35,0,1,1,1,0,1,0,[{'name': 'released'}],2021-08-17 14:36:34+00:00,2021-08-18 10:27:31+00:00,71457.0,19:50:57,[],"[{'commit_sha': '883d09c7c6a81f1407bbd535334b566f0cb06108', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
682577281,feat: Added middleware and setup docs for it,,True,1,https://api.github.com/repos/casbin-lua/lua-resty-casbin/pulls/1,https://github.com/casbin-lua/lua-resty-casbin/pull/1,closed,315,1,10,2,2,0,0,0,[],2021-07-02 12:08:20+00:00,2021-07-02 13:22:29+00:00,4449.0,1:14:09,[],"[{'commit_sha': '4e5e65c708d2a7f12ae670cae9f49c5a05168da7', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1790c8e93103a8f3ecbc0388d8d48fde0dc66b5', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
682719051,feat: Added tests workflow and moved setup doc,"Fix: https://github.com/casbin-lua/lua-resty-casbin/issues/2

Fix: https://github.com/casbin-lua/lua-resty-casbin/issues/3

The workflow installs OpenResty and starts the server. And then we test using a separate Lua script that sends HTTP requests to the OR server.",True,4,https://api.github.com/repos/casbin-lua/lua-resty-casbin/pulls/4,https://github.com/casbin-lua/lua-resty-casbin/pull/4,closed,137,1,2,1,2,2,0,0,[],2021-07-02 15:33:52+00:00,2021-07-03 04:55:57+00:00,48125.0,13:22:05,"[{'comment_id': 663309386, 'comment_body': 'I think this file content should be merged into the root README, as this repo is just for OpenResty. So there will be no `Casbin-OpenResty-Setup.md` file name any more.', 'comment_created': datetime.datetime(2021, 7, 3, 3, 18, 49, tzinfo=datetime.timezone.utc), 'commenter': 'hsluoyz', 'type': 'User'}, {'comment_id': 663317516, 'comment_body': '@hsluoyz Merged it into README.', 'comment_created': datetime.datetime(2021, 7, 3, 4, 54, 31, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}]","[{'commit_sha': '2b5e7ed6bb4189ef4c23429e9f66cc2d1e2a62e2', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
682979143,docs: Added badges in README and changed Actions name to test,,True,6,https://api.github.com/repos/casbin-lua/lua-resty-casbin/pulls/6,https://github.com/casbin-lua/lua-resty-casbin/pull/6,closed,4,1,2,1,0,0,0,0,[],2021-07-03 06:49:31+00:00,2021-07-03 06:56:44+00:00,433.0,0:07:13,[],"[{'commit_sha': 'c5c5dfec28fa2f4c543b728da2d7ebe1170826e2', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
683180843,feat: Added dist.ini for generating package for OPM,"Changes made:
- Changed the name of `middleware` to `CasbinMiddleware` so it can be used using `require(""CasbinMiddleware"")` after the package is installed using OPM.
- Changed the `CasbinMiddleware` function's params to support any model/policy files other than the example ones currently.

Also, to upload this we need to generate a build using `opm build` and upload it using `opm upload` which requires the GitHub username of the org and a personal access token of the owner of the org with scopes `user:email` and `read:org`. This should be saved at `~/.opmrc` file. More about this [here](https://opm.openresty.org/docs#file-opmrc). 
What can we do about this?
",True,7,https://api.github.com/repos/casbin-lua/lua-resty-casbin/pulls/7,https://github.com/casbin-lua/lua-resty-casbin/pull/7,closed,28,9,5,1,3,0,0,0,[],2021-07-04 14:10:05+00:00,2021-07-07 13:38:44+00:00,257319.0,"2 days, 23:28:39",[],"[{'commit_sha': 'eca6c3c6cf0d68e1344152d86817afb7ab8e5985', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
686945050,fix: change casbin rockspec to latest version,Signed-off-by: Rushikesh Tote <rushi.tote@gmail.com>,True,11,https://api.github.com/repos/casbin-lua/lua-resty-casbin/pulls/11,https://github.com/casbin-lua/lua-resty-casbin/pull/11,closed,1,1,1,1,0,0,0,0,[],2021-07-09 17:38:16+00:00,2021-07-09 17:38:26+00:00,10.0,0:00:10,[],"[{'commit_sha': '6aa734df090611a636d2eca0f0e4ed10e804a939', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
687588860,feat: Added LuaRocks rockspec for installation,"Removed the OPM upload from GitHub Actions for now, until we find a fix. I think we can use LuaRocks for now till then.",True,12,https://api.github.com/repos/casbin-lua/lua-resty-casbin/pulls/12,https://github.com/casbin-lua/lua-resty-casbin/pull/12,closed,31,13,3,1,2,0,0,0,[],2021-07-12 07:35:13+00:00,2021-07-13 14:57:48+00:00,112955.0,"1 day, 7:22:35",[],"[{'commit_sha': '156e539b88101eea7dcd231c0c389043b3d2f5f6', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
692128355,feat: Added Casbin plugin for Kong,I will also add an example for this soon.,True,2,https://api.github.com/repos/casbin-lua/kong-authz/pulls/2,https://github.com/casbin-lua/kong-authz/pull/2,closed,173,1,4,1,1,0,1,0,[{'name': 'released'}],2021-07-18 18:13:55+00:00,2021-07-19 00:35:43+00:00,22908.0,6:21:48,[],"[{'commit_sha': '43ceb5a0a539bf391184c05493e0e168e6b1a2a6', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
692587598,feat: Added tests and added example in setup,,True,3,https://api.github.com/repos/casbin-lua/kong-authz/pulls/3,https://github.com/casbin-lua/kong-authz/pull/3,closed,173,1,5,1,1,0,1,0,[{'name': 'released'}],2021-07-19 13:04:13+00:00,2021-07-19 13:24:49+00:00,1236.0,0:20:36,[],"[{'commit_sha': '889c46bdc607590237a9640970d39e86eda8af11', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
692610690,feat: Added badges for test,fix: #4 ,True,5,https://api.github.com/repos/casbin-lua/kong-authz/pulls/5,https://github.com/casbin-lua/kong-authz/pull/5,closed,47,6,4,2,6,0,1,0,[{'name': 'released'}],2021-07-19 13:30:57+00:00,2021-07-19 15:44:06+00:00,7989.0,2:13:09,[],"[{'commit_sha': '65ffb19ff2553582023285ea2cb5908112d710e6', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9aff5d73fd7222fdcae4c54cc0e400785f91aa40', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
704395074,feat: Added database adapter and tests for it,I will add the setup documentation/badges and rockspec file soon.,True,1,https://api.github.com/repos/casbin-lua/luasql-adapter/pulls/1,https://github.com/casbin-lua/luasql-adapter/pull/1,closed,1006,0,10,1,0,0,0,0,[],2021-08-05 05:38:03+00:00,2021-08-05 10:52:48+00:00,18885.0,5:14:45,[],"[{'commit_sha': '17f1421b0bda35e49da0666008e3747e4153b744', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
705925552,feat: Added setup doc and rockspec,,True,2,https://api.github.com/repos/casbin-lua/luasql-adapter/pulls/2,https://github.com/casbin-lua/luasql-adapter/pull/2,closed,69,1,2,1,0,0,0,0,[],2021-08-07 18:01:27+00:00,2021-08-08 02:04:12+00:00,28965.0,8:02:45,[],"[{'commit_sha': '86fc735daa0eafe2e72e47da5590bff6922596d9', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
706062435,docs: add badge for coverage,,True,3,https://api.github.com/repos/casbin-lua/luasql-adapter/pulls/3,https://github.com/casbin-lua/luasql-adapter/pull/3,closed,1,0,1,1,0,0,0,0,[],2021-08-08 15:30:36+00:00,2021-08-09 01:45:48+00:00,36912.0,10:15:12,[],"[{'commit_sha': 'a0f3713b75b193a9cdd67a87b3eb3a308f8742de', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
712934375,feat: Added the adapter and tests for it,I will next add the documentation and rockspec for this.,True,1,https://api.github.com/repos/casbin-lua/4daysorm-adapter/pulls/1,https://github.com/casbin-lua/4daysorm-adapter/pull/1,closed,2863,1,21,3,1,2,0,0,[],2021-08-15 13:17:10+00:00,2021-08-16 13:20:29+00:00,86599.0,"1 day, 0:03:19","[{'comment_id': 689516850, 'comment_body': 'Missing license header for all files.', 'comment_created': datetime.datetime(2021, 8, 16, 13, 2, 19, tzinfo=datetime.timezone.utc), 'commenter': 'hsluoyz', 'type': 'User'}, {'comment_id': 689528212, 'comment_body': '@hsluoyz Added the license header.', 'comment_created': datetime.datetime(2021, 8, 16, 13, 16, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}]","[{'commit_sha': '42205c83a92ab69778573074cac864891a0cc759', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9765c2895dda6bb1fcea51c76428c84219b899d6', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17dde2dd2e96e12365d701fd0eb91fc43cace64d', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
685193526,feat: Added Lua Casbin benchmark and created tabbed layout for benchmarks,,True,248,https://api.github.com/repos/casbin/casbin-website/pulls/248,https://github.com/casbin/casbin-website/pull/248,closed,31,0,1,1,4,0,0,0,[],2021-07-07 13:22:39+00:00,2021-07-09 07:09:37+00:00,150418.0,"1 day, 17:46:58",[],"[{'commit_sha': '2ed3ace5a3dd932aea2291bdc39cbac95d00fc8a', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
708693074,docs: added link to tutorial for Casbin plugin in APISIX,,True,262,https://api.github.com/repos/casbin/casbin-website/pulls/262,https://github.com/casbin/casbin-website/pull/262,closed,6,0,1,1,1,0,0,0,[],2021-08-11 10:43:35+00:00,2021-08-11 10:49:09+00:00,334.0,0:05:34,[],"[{'commit_sha': 'f6072efa033add7143cf2b7e0543ea9b9e649095', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
714010814,fix: Lua Casbin docs and formatting and added Lua Casbin adapters,"Since we already have `casbin` module in path from LuaRocks, we don't need to add it separately in `package.path`. Also, this makes the formatting a bit more consistent.",True,264,https://api.github.com/repos/casbin/casbin-website/pulls/264,https://github.com/casbin/casbin-website/pull/264,closed,14,8,2,2,1,0,0,0,[],2021-08-17 08:05:34+00:00,2021-08-17 11:42:13+00:00,12999.0,3:36:39,[],"[{'commit_sha': 'a198687de7393eb80b94636bf8e8424a1e22303b', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80a7eb5686f09d576bf6ce1e569d1e9cfac1ae39', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
715718557,docs: added blog post to introduce authz-casbin plugin,"This is similar to the previously written blog post, does this need any changes?",True,266,https://api.github.com/repos/casbin/casbin-website/pulls/266,https://github.com/casbin/casbin-website/pull/266,closed,184,0,1,1,2,0,0,0,[],2021-08-19 08:28:17+00:00,2021-08-19 08:38:34+00:00,617.0,0:10:17,[],"[{'commit_sha': 'f07d05f42fa18ee883974123f81fb60cef7b796b', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37
699740336,feat: Added authz-casbin plugin and doc and tests for it,"### What this PR does / why we need it:
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->
fix: #4674 

This PR adds an authorization plugin: `authz-casbin` to APISIX. This is based on Lua Casbin which is the Lua implementation of Casbin library. The plugin supports enforcement of powerful authorization scenarios based on various access control models supported by Casbin.

The plugin works on the basis of a model file and a policy file. The model acts as a configuration for the policies and policy enforcement. The plugin currently also supports direct model/policy text in absence of files through plugin metadata.

An example of authz model is:

```conf
[request_definition]
r = sub, obj, act
[policy_definition]
p = sub, obj, act
[role_definition]
g = _, _
[policy_effect]
e = some(where (p.eft == allow))
[matchers]
m = (g(r.sub, p.sub) || keyMatch(r.sub, p.sub)) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act)
```

And example of authz policy is:

```
p, *, /, GET
p, admin, *, *
g, alice, admin
```

This means that any user (subject) can access the homepage which is at `/` via `GET` request but only admins can a access other pages and use other request methods. And here, as defined in policy `alice` has a role as `admin` and hence she has admin access.



### Pre-submission checklist:

* [x] Did you explain what problem does this PR solve? Or what new features have been added?
* [x] Have you added corresponding test cases?
* [x] Have you modified the corresponding document?
* [x] Is this PR backward compatible? **If it is not backward compatible, please discuss on the [mailing list](https://github.com/apache/apisix/tree/master#community) first**
",True,4710,https://api.github.com/repos/apache/apisix/pulls/4710,https://github.com/apache/apisix/pull/4710,closed,903,9,13,16,2,60,0,0,[],2021-07-29 18:10:30+00:00,2021-08-06 03:35:08+00:00,638678.0,"7 days, 9:24:38","[{'comment_id': 679585648, 'comment_body': ""The plugin_metadata should be only set on the CP side. It's forbidden to let configuration flow from the DP to the CP."", 'comment_created': datetime.datetime(2021, 7, 30, 1, 27, 3, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 679586387, 'comment_body': ""Since we already use metadata to store the configuration, there is no need to provide APIs on the DP side. Everything should be done with the plugin metadata's API on the CP side."", 'comment_created': datetime.datetime(2021, 7, 30, 1, 29, 23, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 679700831, 'comment_body': '@spacewander \r\nThanks for your review, so we will remove all the API functions and if the model/policy text in plugin metadata is updated (from the CP side), we will update the `casbin_enforcer` through that model/policy too. Is this correct?', 'comment_created': datetime.datetime(2021, 7, 30, 7, 7, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 679712809, 'comment_body': 'Yes, you can use `metadata.modifiedIndex` to ensure casbin_enforcer is created with the latest model/policy, like this one:\r\nhttps://github.com/apache/apisix/blob/fd8f875429bd43462430bd662788940f6a579ff9/apisix/http/router/radixtree_uri.lua#L31-L36', 'comment_created': datetime.datetime(2021, 7, 30, 7, 29, 41, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 679713617, 'comment_body': 'And I think you can submit a minimum viable pull request so that we can check & merge it early. ', 'comment_created': datetime.datetime(2021, 7, 30, 7, 31, 9, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 679714865, 'comment_body': 'Sure I will do that.', 'comment_created': datetime.datetime(2021, 7, 30, 7, 33, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 679808989, 'comment_body': 'I added a condition that if the configuration changes, the `casbin_enforcer` will be recreated.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 5, 18, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680410641, 'comment_body': 'Hi @rushitote I think you need to also install pcre lib in chaos testing ci to make it pass, see [error log](https://github.com/apache/apisix/pull/4710/checks?check_run_id=3207414954#step:4:932). \r\nYou could add it before building docker image [here](https://github.com/apache/apisix/blob/master/.github/workflows/chaos.yml#L32)', 'comment_created': datetime.datetime(2021, 7, 31, 21, 16, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Yiyiyimu', 'type': 'User'}, {'comment_id': 680453855, 'comment_body': 'Multiple routes will use the same casbin enforcer? I think we should store different casbin via lrucache, like this:\r\nhttps://github.com/apache/apisix/blob/9db2dd2399c3970df1e1b7fa0f8b7dcd92d26b1c/apisix/plugins/error-log-logger.lua#L144', 'comment_created': datetime.datetime(2021, 8, 1, 5, 31, 24, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680483656, 'comment_body': '@Yiyiyimu Thanks for this, I have made the change.', 'comment_created': datetime.datetime(2021, 8, 1, 9, 43, 25, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680483896, 'comment_body': 'Yes, you are right. I have changed it now.', 'comment_created': datetime.datetime(2021, 8, 1, 9, 45, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680495652, 'comment_body': ""We don't need to check the existence for these three variables if we use them in the HTTP sub-system."", 'comment_created': datetime.datetime(2021, 8, 1, 11, 18, 16, tzinfo=datetime.timezone.utc), 'commenter': 'tokers', 'type': 'User'}, {'comment_id': 680495886, 'comment_body': 'Please specify the precedence between this one and the path way.', 'comment_created': datetime.datetime(2021, 8, 1, 11, 20, 33, tzinfo=datetime.timezone.utc), 'commenter': 'tokers', 'type': 'User'}, {'comment_id': 680496397, 'comment_body': 'Yes, right - this is redundant here.', 'comment_created': datetime.datetime(2021, 8, 1, 11, 24, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680496501, 'comment_body': 'Sure, I will make it more clear there.', 'comment_created': datetime.datetime(2021, 8, 1, 11, 25, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680498417, 'comment_body': ""Sorry, I rethought about it afternoon, and found it isn't a good idea.\r\nIt is more suitable to bind the casbin with the conf like:\r\nhttps://github.com/apache/apisix/blob/38561dc0cd13ee412d05a96153dee80018f1e799/apisix/plugins/uri-blocker.lua#L83\r\n\r\nWe also need to ensure the global casbin is update-to-date with the metadata via https://github.com/apache/apisix/pull/4710#discussion_r679712809"", 'comment_created': datetime.datetime(2021, 8, 1, 11, 41, 3, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680498626, 'comment_body': '```suggestion\r\n        if metadata and metadata.value and conf.username then\r\n```\r\n\r\nSince we have checked the metadata schema.', 'comment_created': datetime.datetime(2021, 8, 1, 11, 42, 36, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680498708, 'comment_body': 'Test 4 already contains Test 3?', 'comment_created': datetime.datetime(2021, 8, 1, 11, 43, 19, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680498844, 'comment_body': 'Need a similar test for the policy_path configuration.', 'comment_created': datetime.datetime(2021, 8, 1, 11, 44, 24, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680503928, 'comment_body': 'Yes, removed that unnecessary part from test 4.', 'comment_created': datetime.datetime(2021, 8, 1, 12, 26, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680503986, 'comment_body': 'Added the tests for enforcer from files.', 'comment_created': datetime.datetime(2021, 8, 1, 12, 26, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680540246, 'comment_body': '@spacewander Sorry, I found this now. But is there any reason for us to not use lrucache? It worked well for two different routes with different casbin enforcers when I tested it.', 'comment_created': datetime.datetime(2021, 8, 1, 17, 14, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680569232, 'comment_body': 'Sorry I made a mistake 😿 We need to add the dependency to the dockerfile but not on the host machine. Do you mind file a PR about the change on the dockerfile: https://github.com/apache/apisix-docker/blob/master/alpine-local/Dockerfile, which is used as building apisix image used in chaos testing\r\n\r\nAlso we need to change docs about dependencies installation to inform users to install them: https://github.com/apache/apisix/blob/master/docs/en/latest/install-dependencies.md', 'comment_created': datetime.datetime(2021, 8, 1, 21, 36, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Yiyiyimu', 'type': 'User'}, {'comment_id': 680597992, 'comment_body': 'EOL symbol is required. Please check out the editor configuration.', 'comment_created': datetime.datetime(2021, 8, 2, 1, 13, 15, tzinfo=datetime.timezone.utc), 'commenter': 'tokers', 'type': 'User'}, {'comment_id': 680767574, 'comment_body': '@Yiyiyimu Thanks again, I have created a PR for that at [apisix-docker#202](https://github.com/apache/apisix-docker/pull/202) and added PCRE in the dependency installation doc.', 'comment_created': datetime.datetime(2021, 8, 2, 8, 17, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680769568, 'comment_body': 'Added the EOL symbol in model/policy files.', 'comment_created': datetime.datetime(2021, 8, 2, 8, 19, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680770800, 'comment_body': 'I have removed `lrucache` and replaced it by binding the `casbin_enforcer` to conf. Also we will use the `modifiedIndex` to keep the casbin from metadata updated.', 'comment_created': datetime.datetime(2021, 8, 2, 8, 21, 33, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680814955, 'comment_body': '> \r\n> \r\n> @spacewander Sorry, I found this now. But is there any reason for us to not use lrucache? It worked well for two different routes with different casbin enforcers when I tested it.\r\n\r\nIt works fine, but makes the life cycle complex. ', 'comment_created': datetime.datetime(2021, 8, 2, 9, 25, 16, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680822076, 'comment_body': 'IMHO, it surprises me that the enforcer from metadata can override the one from the route. Normally, the route level configuration can override the global one.', 'comment_created': datetime.datetime(2021, 8, 2, 9, 35, 23, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680823647, 'comment_body': ""We don't need to bind the enforcer from metadata with the route configuration as it is global. Recreating the global enforcer when the request hits another route is not a good idea."", 'comment_created': datetime.datetime(2021, 8, 2, 9, 37, 35, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680825014, 'comment_body': '```suggestion\r\nfunction _M.rewrite(conf, ctx)\r\n```', 'comment_created': datetime.datetime(2021, 8, 2, 9, 39, 31, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680828023, 'comment_body': '```suggestion\r\n    local method = ctx.var.method\r\n```', 'comment_created': datetime.datetime(2021, 8, 2, 9, 43, 49, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680828532, 'comment_body': '```suggestion\r\n    local path = ctx.var.uri\r\n```\r\n\r\nIt is more suitable to use the normalized one? See http://nginx.org/en/docs/http/ngx_http_core_module.html#var_uri', 'comment_created': datetime.datetime(2021, 8, 2, 9, 44, 35, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680880465, 'comment_body': '@spacewander so, should we create a new `casbin_enforcer` local variable specifically for global config? Then we can also have (if any) route enforcer override the global one.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680888412, 'comment_body': '> \r\n> \r\n> @spacewander so, should we create a new `casbin_enforcer` local variable specifically for global config? Then we can also have (if any) route enforcer override the global one.\r\n\r\nDo you mean a new global variable?', 'comment_created': datetime.datetime(2021, 8, 2, 11, 21, 39, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680892577, 'comment_body': '> > @spacewander so, should we create a new `casbin_enforcer` local variable specifically for global config? Then we can also have (if any) route enforcer override the global one.\r\n> \r\n> Do you mean a new global variable?\r\n\r\nlocal, similar as that of the first commit ([here](https://github.com/apache/apisix/pull/4710/commits/cb37e5fdce3df9cd42f25fa1502a5001aa25a95c#diff-b18fc191c270634f4d1d599ad10a5dbb1d646ec9ff4c9f9e6224195e45a96a8bR25))', 'comment_created': datetime.datetime(2021, 8, 2, 11, 28, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680961580, 'comment_body': '@spacewander I was thinking of something like this:\r\n```lua\r\nlocal casbin_enforcer\r\n\r\nlocal function new_enforcer(conf, modifiedIndex)\r\n    local model_path = conf.model_path\r\n    local policy_path = conf.policy_path\r\n\r\n    if model_path and policy_path then\r\n        conf.type = ""file""\r\n        conf.casbin_enforcer = casbin:new(model_path, policy_path)\r\n        return\r\n    end\r\n\r\n    local metadata = plugin.plugin_metadata(plugin_name)\r\n    if metadata and metadata.value.model and metadata.value.policy then\r\n        conf.type = ""metadata""\r\n        if not casbin_enforcer or casbin_enforcer.modifiedIndex ~= modifiedIndex then\r\n            local model = metadata.value.model\r\n            local policy = metadata.value.policy\r\n            casbin_enforcer = casbin:newEnforcerFromText(model, policy)\r\n            casbin_enforcer.modifiedIndex = modifiedIndex\r\n        end\r\n    end\r\nend\r\n\r\n\r\nfunction _M.rewrite(conf, ctx)\r\n    -- creates an enforcer when request sent for the first time\r\n    local metadata = plugin.plugin_metadata(plugin_name)\r\n\r\n    if (not conf.casbin_enforcer and conf.type ~= ""metadata"") or\r\n    (conf.type == ""metadata"" and casbin_enforcer.modifiedIndex ~= metadata.modifiedIndex) then\r\n        new_enforcer(conf, metadata.modifiedIndex)\r\n    end\r\n\r\n    local path = ctx.var.uri\r\n    local method = ctx.var.method\r\n    local username = get_headers()[conf.username]\r\n    if not username then username = ""anonymous"" end\r\n\r\n    if conf.casbin_enforcer then\r\n        if not conf.casbin_enforcer:enforce(username, path, method) then\r\n            return 403, {message = ""Access Denied""}\r\n        end\r\n    else\r\n        if not casbin_enforcer:enforce(username, path, method) then\r\n            return 403, {message = ""Access Denied""}\r\n        end\r\n    end\r\nend\r\n```\r\n\r\nSo, we divide routes into two types - either `file` or `metadata`. The `file` one has their own enforcer binded to the conf while all the `metadata` based routes use the same `casbin_enforcer`. In case of the metadata based route, enforcer is created only when either there isn\'t one or when the `modifiedIndex` has changed. And since this separates any route into one of the two types, one type will not override the other. Will this solve the issue?', 'comment_created': datetime.datetime(2021, 8, 2, 13, 16, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 680986533, 'comment_body': 'LGTM. The only issue is that both new_enforcer and rewrite check if we need to create a new enforcer. I think we can just leave the check in one method.', 'comment_created': datetime.datetime(2021, 8, 2, 13, 48, 2, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 680996261, 'comment_body': ""@spacewander Can you please tell me which check we could remove? I feel all are necessary and don't see any similar checks."", 'comment_created': datetime.datetime(2021, 8, 2, 13, 59, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 681361420, 'comment_body': 'What about:\r\n```\r\nlocal casbin_enforcer\r\n\r\nlocal function new_enforcer_if_need(conf)\r\n    local model_path = conf.model_path\r\n    local policy_path = conf.policy_path\r\n\r\n    if model_path and policy_path then\r\n        if not conf.casbin_enforcer then\r\n            conf.casbin_enforcer = casbin:new(model_path, policy_path)\r\n        end\r\n        return true\r\n    end\r\n\r\n    local metadata = plugin.plugin_metadata(plugin_name)\r\n    if not (metadata and metadata.value.model and metadata.value.policy) then\r\n        return nil, ""not enough configuration to create enforcer""\r\n    end\r\n\r\n    local modifiedIndex = metadata.modifiedIndex\r\n    if not casbin_enforcer or casbin_enforcer.modifiedIndex ~= modifiedIndex then\r\n        local model = metadata.value.model\r\n        local policy = metadata.value.policy\r\n        casbin_enforcer = casbin:newEnforcerFromText(model, policy)\r\n        casbin_enforcer.modifiedIndex = modifiedIndex\r\n    end\r\n    return true\r\nend\r\n\r\n\r\nfunction _M.rewrite(conf, ctx)\r\n    -- creates an enforcer when request sent for the first time\r\n    local ok, err = new_enforcer_if_need(conf)\r\n    if not ok then\r\n        return 503, {message = err}\r\n    end\r\n\r\n    local path = ctx.var.uri\r\n    local method = ctx.var.method\r\n    local username = get_headers()[conf.username]\r\n    if not username then username = ""anonymous"" end\r\n\r\n    if conf.casbin_enforcer then\r\n        if not conf.casbin_enforcer:enforce(username, path, method) then\r\n            return 403, {message = ""Access Denied""}\r\n        end\r\n    else\r\n        if not casbin_enforcer:enforce(username, path, method) then\r\n            return 403, {message = ""Access Denied""}\r\n        end\r\n    end\r\nend\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 1, 8, 33, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 681457803, 'comment_body': '```suggestion\r\n    local username = get_headers()[conf.username] or ""anonymous""\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 6, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'tzssangglass', 'type': 'User'}, {'comment_id': 681538163, 'comment_body': 'I think this is good, I have added a commit with this.', 'comment_created': datetime.datetime(2021, 8, 3, 8, 15, 3, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 681538755, 'comment_body': 'Thanks, added it.', 'comment_created': datetime.datetime(2021, 8, 3, 8, 15, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 681545972, 'comment_body': 'if `username` is always required, you can use `required = {""username""}` in `schema`, such as https://github.com/apache/apisix/blob/1b247c8e1ebd324efe66abbe33d5647a93f0426e/apisix/plugins/example-plugin.lua#L22-L32', 'comment_created': datetime.datetime(2021, 8, 3, 8, 25, 32, tzinfo=datetime.timezone.utc), 'commenter': 'tzssangglass', 'type': 'User'}, {'comment_id': 681551257, 'comment_body': '```suggestion\r\n                    ""uri"": ""/hello""\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 8, 32, 21, tzinfo=datetime.timezone.utc), 'commenter': 'tzssangglass', 'type': 'User'}, {'comment_id': 681595426, 'comment_body': 'It is already there ([here](https://github.com/apache/apisix/pull/4710/files#diff-b18fc191c270634f4d1d599ad10a5dbb1d646ec9ff4c9f9e6224195e45a96a8bR33)). This was meant to check if the route will use the plugin metadata (instead of files) and hence it requires separate schema check.', 'comment_created': datetime.datetime(2021, 8, 3, 9, 30, 18, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 681605842, 'comment_body': 'got', 'comment_created': datetime.datetime(2021, 8, 3, 9, 44, 54, tzinfo=datetime.timezone.utc), 'commenter': 'tzssangglass', 'type': 'User'}, {'comment_id': 681606581, 'comment_body': '```suggestion\r\n                    ""uri"": ""/hello""\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 9, 46, tzinfo=datetime.timezone.utc), 'commenter': 'tzssangglass', 'type': 'User'}, {'comment_id': 681607319, 'comment_body': 'ditto\r\n', 'comment_created': datetime.datetime(2021, 8, 3, 9, 46, 55, tzinfo=datetime.timezone.utc), 'commenter': 'tzssangglass', 'type': 'User'}, {'comment_id': 681613073, 'comment_body': 'Changed it.', 'comment_created': datetime.datetime(2021, 8, 3, 9, 54, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 681644103, 'comment_body': 'I thought for a while and was confused by the intention of the metadata, is it used as the default policy? And why not also support using text format in the plugin configuration?', 'comment_created': datetime.datetime(2021, 8, 3, 10, 43, 4, tzinfo=datetime.timezone.utc), 'commenter': 'tokers', 'type': 'User'}, {'comment_id': 681651508, 'comment_body': '@tokers I think it is meant to be kind of global configuration for all routes, like you can update the metadata once and for all routes using it will get updated. Should I add the support for using model/policy text from plugin conf?', 'comment_created': datetime.datetime(2021, 8, 3, 10, 55, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 681654637, 'comment_body': ""@spacewander What's your opinion? If the policy in plugin metadata is used to be the default one, we'd better keep the configuration items consistent."", 'comment_created': datetime.datetime(2021, 8, 3, 11, 0, 35, tzinfo=datetime.timezone.utc), 'commenter': 'tokers', 'type': 'User'}, {'comment_id': 682209686, 'comment_body': ""@rushitote @tokers \r\nYes, let's do it."", 'comment_created': datetime.datetime(2021, 8, 4, 0, 57, 22, tzinfo=datetime.timezone.utc), 'commenter': 'spacewander', 'type': 'User'}, {'comment_id': 682511353, 'comment_body': 'It should be `oneOf`.', 'comment_created': datetime.datetime(2021, 8, 4, 10, 59, 59, tzinfo=datetime.timezone.utc), 'commenter': 'tokers', 'type': 'User'}, {'comment_id': 682566688, 'comment_body': 'Changed it.', 'comment_created': datetime.datetime(2021, 8, 4, 12, 26, 48, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 683067882, 'comment_body': 'It seems that now we should claim the precedence between route config and metadata config, rather than the file and text.', 'comment_created': datetime.datetime(2021, 8, 5, 1, 42, 34, tzinfo=datetime.timezone.utc), 'commenter': 'tokers', 'type': 'User'}, {'comment_id': 683113011, 'comment_body': ""@tokers So, should it be worded like this:\r\n\r\n'The plugin route configuration has a higher precedence than the plugin metadata configuration. Hence if the model/policy configuration is present in the plugin route config, the plugin will use that instead of the metadata config.'"", 'comment_created': datetime.datetime(2021, 8, 5, 4, 7, 24, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}, {'comment_id': 683365239, 'comment_body': ""That's good enough 👍."", 'comment_created': datetime.datetime(2021, 8, 5, 11, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'tokers', 'type': 'User'}, {'comment_id': 683384109, 'comment_body': 'Replaced it.', 'comment_created': datetime.datetime(2021, 8, 5, 11, 55, 48, tzinfo=datetime.timezone.utc), 'commenter': 'rushitote', 'type': 'User'}]","[{'commit_sha': 'cb37e5fdce3df9cd42f25fa1502a5001aa25a95c', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56668c0e3ede82864b6e7a1c2cb15f60b99bfcf8', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38a1ff1aa1a5f022ad960cd7885e982ec1957322', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67a433e11a85f06d00e41a74226d3214028fd5e5', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2eb4cb568c35946ba509f36e2eed019e3adcefc2', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22f76c509cac7e5e9e5a8c9be55daa92240d793e', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fa5b8264200c713585e3597e29f82931614626d', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0aa45184d121b0dcc9e37989f5188e6a3dc086ed', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b95d9afad5feb0a5e80b78b4cc771a4185b729f1', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc7981fe976d703e0201d4959bf948dc4d35673c', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c15ecf9979789c2718c954c5523563d4f0dd5a3d', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8824fc90a938c2602889e740a606d3d9537d7f1b', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0858c89436c07b5aa5a5cb4cb60fd6996c4bb70', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '842f9d1b6f7595e6feed489750f6d6b75e2abed7', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a32d79ef891d42fcadaf39d76db5e196c3c26bd8', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba0b0c6b8e1a4446a9b3ec132f4e7cc7dd6a9bff', 'committer_username': 'rushitote', 'committer_name': 'Rushikesh Tote', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 18, 14, 43, 47, tzinfo=datetime.timezone.utc)}]",Rushikesh Tote,31135699,,User,,30,,2,37

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
180481986,apisix,apache/apisix,Lua,2479,14224,312,461,4290,442,53,33,"[{'id': 699740336, 'number': 4710, 'closed': datetime.datetime(2021, 8, 6, 3, 35, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 29, 18, 10, 30, tzinfo=datetime.timezone.utc), 'time_taken': 638678.0, 'time_delta': '7 days, 9:24:38', 'additions': 903, 'deletions': 9, 'state': 'closed'}]"
94686988,lua-casbin,casbin/lua-casbin,Lua,18,54,5,12,178,6,1,0,"[{'id': 1233455748, 'number': 147, 'closed': datetime.datetime(2023, 2, 8, 13, 42, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 8, 12, 13, 29, tzinfo=datetime.timezone.utc), 'time_taken': 5321.0, 'time_delta': '1:28:41', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1233171971, 'number': 146, 'closed': datetime.datetime(2023, 2, 8, 8, 26, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 8, 8, 24, 22, tzinfo=datetime.timezone.utc), 'time_taken': 155.0, 'time_delta': '0:02:35', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 935116751, 'number': 137, 'closed': datetime.datetime(2022, 5, 13, 0, 56, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 12, 17, 53, 40, tzinfo=datetime.timezone.utc), 'time_taken': 25366.0, 'time_delta': '7:02:46', 'additions': 5, 'deletions': 12, 'state': 'closed'}, {'id': 720279471, 'number': 124, 'closed': datetime.datetime(2021, 8, 27, 11, 36, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 26, 8, 5, 40, tzinfo=datetime.timezone.utc), 'time_taken': 99030.0, 'time_delta': '1 day, 3:30:30', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 717292401, 'number': 122, 'closed': datetime.datetime(2021, 8, 23, 4, 12, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 22, 11, 17, 10, tzinfo=datetime.timezone.utc), 'time_taken': 60948.0, 'time_delta': '16:55:48', 'additions': 11, 'deletions': 2, 'state': 'closed'}, {'id': 715074718, 'number': 119, 'closed': datetime.datetime(2021, 8, 18, 13, 26, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 13, 19, 29, tzinfo=datetime.timezone.utc), 'time_taken': 437.0, 'time_delta': '0:07:17', 'additions': 1, 'deletions': 141, 'state': 'closed'}, {'id': 714309866, 'number': 117, 'closed': datetime.datetime(2021, 8, 18, 10, 27, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 17, 14, 36, 34, tzinfo=datetime.timezone.utc), 'time_taken': 71457.0, 'time_delta': '19:50:57', 'additions': 35, 'deletions': 0, 'state': 'closed'}, {'id': 698062278, 'number': 106, 'closed': datetime.datetime(2021, 7, 28, 0, 37, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 17, 46, 4, tzinfo=datetime.timezone.utc), 'time_taken': 24712.0, 'time_delta': '6:51:52', 'additions': 70, 'deletions': 3, 'state': 'closed'}, {'id': 696557584, 'number': 103, 'closed': datetime.datetime(2021, 7, 26, 3, 17, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 25, 20, 9, 37, tzinfo=datetime.timezone.utc), 'time_taken': 25699.0, 'time_delta': '7:08:19', 'additions': 20, 'deletions': 1, 'state': 'closed'}, {'id': 696295909, 'number': 99, 'closed': datetime.datetime(2021, 7, 24, 7, 5, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 24, 5, 11, 33, tzinfo=datetime.timezone.utc), 'time_taken': 6831.0, 'time_delta': '1:53:51', 'additions': 8, 'deletions': 0, 'state': 'closed'}, {'id': 696085372, 'number': 98, 'closed': datetime.datetime(2021, 7, 24, 0, 44, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 23, 17, 0, 14, tzinfo=datetime.timezone.utc), 'time_taken': 27872.0, 'time_delta': '7:44:32', 'additions': 6, 'deletions': 2, 'state': 'closed'}, {'id': 695972919, 'number': 97, 'closed': datetime.datetime(2021, 7, 23, 15, 11, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 23, 14, 11, 26, tzinfo=datetime.timezone.utc), 'time_taken': 3580.0, 'time_delta': '0:59:40', 'additions': 78, 'deletions': 0, 'state': 'closed'}, {'id': 691871698, 'number': 91, 'closed': datetime.datetime(2021, 7, 17, 11, 17, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 17, 7, 51, 10, tzinfo=datetime.timezone.utc), 'time_taken': 12396.0, 'time_delta': '3:26:36', 'additions': 248, 'deletions': 270, 'state': 'closed'}, {'id': 688131262, 'number': 84, 'closed': datetime.datetime(2021, 7, 13, 15, 44, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 12, 19, 59, 3, tzinfo=datetime.timezone.utc), 'time_taken': 71104.0, 'time_delta': '19:45:04', 'additions': 101, 'deletions': 5, 'state': 'closed'}, {'id': 685874558, 'number': 81, 'closed': datetime.datetime(2021, 7, 8, 15, 31, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 10, 10, 5, tzinfo=datetime.timezone.utc), 'time_taken': 19276.0, 'time_delta': '5:21:16', 'additions': 7, 'deletions': 2, 'state': 'closed'}, {'id': 684943683, 'number': 80, 'closed': datetime.datetime(2021, 7, 7, 9, 1, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 7, 36, 33, tzinfo=datetime.timezone.utc), 'time_taken': 5093.0, 'time_delta': '1:24:53', 'additions': 318, 'deletions': 6, 'state': 'closed'}, {'id': 680931700, 'number': 66, 'closed': datetime.datetime(2021, 7, 3, 4, 23, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 14, 30, 45, tzinfo=datetime.timezone.utc), 'time_taken': 222748.0, 'time_delta': '2 days, 13:52:28', 'additions': 19, 'deletions': 21, 'state': 'closed'}, {'id': 680144833, 'number': 63, 'closed': datetime.datetime(2021, 7, 3, 16, 9, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 29, 15, 41, 39, tzinfo=datetime.timezone.utc), 'time_taken': 347253.0, 'time_delta': '4 days, 0:27:33', 'additions': 283, 'deletions': 94, 'state': 'closed'}, {'id': 678296902, 'number': 62, 'closed': datetime.datetime(2021, 6, 27, 3, 17, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 26, 8, 9, 1, tzinfo=datetime.timezone.utc), 'time_taken': 68904.0, 'time_delta': '19:08:24', 'additions': 142, 'deletions': 0, 'state': 'closed'}, {'id': 675340660, 'number': 61, 'closed': datetime.datetime(2021, 6, 22, 11, 49, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 11, 40, 28, tzinfo=datetime.timezone.utc), 'time_taken': 540.0, 'time_delta': '0:09:00', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 674549537, 'number': 60, 'closed': datetime.datetime(2021, 6, 22, 1, 18, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 13, 21, 22, tzinfo=datetime.timezone.utc), 'time_taken': 43057.0, 'time_delta': '11:57:37', 'additions': 50, 'deletions': 42, 'state': 'closed'}, {'id': 672776513, 'number': 54, 'closed': datetime.datetime(2021, 6, 27, 3, 19, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 17, 15, 57, 36, tzinfo=datetime.timezone.utc), 'time_taken': 818508.0, 'time_delta': '9 days, 11:21:48', 'additions': 460, 'deletions': 26, 'state': 'closed'}, {'id': 668073630, 'number': 53, 'closed': datetime.datetime(2021, 6, 17, 4, 53, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 12, 10, 26, tzinfo=datetime.timezone.utc), 'time_taken': 492189.0, 'time_delta': '5 days, 16:43:09', 'additions': 1066, 'deletions': 4, 'state': 'closed'}, {'id': 664855571, 'number': 52, 'closed': datetime.datetime(2021, 6, 8, 15, 39, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 12, 37, 14, tzinfo=datetime.timezone.utc), 'time_taken': 10934.0, 'time_delta': '3:02:14', 'additions': 267, 'deletions': 1, 'state': 'closed'}, {'id': 662338679, 'number': 51, 'closed': datetime.datetime(2021, 6, 7, 12, 52, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 5, 8, 15, tzinfo=datetime.timezone.utc), 'time_taken': 189433.0, 'time_delta': '2 days, 4:37:13', 'additions': 350, 'deletions': 10, 'state': 'closed'}, {'id': 659019643, 'number': 50, 'closed': datetime.datetime(2021, 6, 2, 9, 30, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 1, 13, 44, 16, tzinfo=datetime.timezone.utc), 'time_taken': 71201.0, 'time_delta': '19:46:41', 'additions': 181, 'deletions': 38, 'state': 'closed'}, {'id': 657463692, 'number': 49, 'closed': datetime.datetime(2021, 5, 30, 3, 12, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 29, 12, 54, 33, tzinfo=datetime.timezone.utc), 'time_taken': 51474.0, 'time_delta': '14:17:54', 'additions': 148, 'deletions': 104, 'state': 'closed'}, {'id': 652066431, 'number': 48, 'closed': datetime.datetime(2021, 5, 26, 12, 48, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 25, 8, 47, 50, tzinfo=datetime.timezone.utc), 'time_taken': 100829.0, 'time_delta': '1 day, 4:00:29', 'additions': 274, 'deletions': 5, 'state': 'closed'}, {'id': 645875475, 'number': 47, 'closed': datetime.datetime(2021, 5, 21, 13, 50, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 17, 13, 41, 25, tzinfo=datetime.timezone.utc), 'time_taken': 346129.0, 'time_delta': '4 days, 0:08:49', 'additions': 154, 'deletions': 34, 'state': 'closed'}, {'id': 642934370, 'number': 46, 'closed': datetime.datetime(2021, 5, 12, 15, 12, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 12, 8, 25, 48, tzinfo=datetime.timezone.utc), 'time_taken': 24387.0, 'time_delta': '6:46:27', 'additions': 1850, 'deletions': 108, 'state': 'closed'}, {'id': 632830080, 'number': 44, 'closed': datetime.datetime(2021, 5, 10, 6, 6, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 7, 14, 12, 28, tzinfo=datetime.timezone.utc), 'time_taken': 230054.0, 'time_delta': '2 days, 15:54:14', 'additions': 262, 'deletions': 0, 'state': 'closed'}, {'id': 628428172, 'number': 43, 'closed': datetime.datetime(2021, 5, 1, 14, 17, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 1, 12, 56, 55, tzinfo=datetime.timezone.utc), 'time_taken': 4856.0, 'time_delta': '1:20:56', 'additions': 126, 'deletions': 35, 'state': 'closed'}, {'id': 620909295, 'number': 42, 'closed': datetime.datetime(2021, 4, 26, 5, 44, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 22, 9, 12, 57, tzinfo=datetime.timezone.utc), 'time_taken': 333098.0, 'time_delta': '3 days, 20:31:38', 'additions': 514, 'deletions': 171, 'state': 'closed'}, {'id': 616017033, 'number': 41, 'closed': datetime.datetime(2021, 4, 16, 8, 50, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 15, 12, 40, 4, tzinfo=datetime.timezone.utc), 'time_taken': 72616.0, 'time_delta': '20:10:16', 'additions': 102, 'deletions': 12, 'state': 'closed'}, {'id': 613285166, 'number': 40, 'closed': datetime.datetime(2021, 4, 12, 10, 29, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 12, 5, 50, 20, tzinfo=datetime.timezone.utc), 'time_taken': 16768.0, 'time_delta': '4:39:28', 'additions': 738, 'deletions': 21, 'state': 'closed'}, {'id': 610397491, 'number': 39, 'closed': datetime.datetime(2021, 4, 9, 17, 28, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 7, 7, 8, 57, tzinfo=datetime.timezone.utc), 'time_taken': 209982.0, 'time_delta': '2 days, 10:19:42', 'additions': 287, 'deletions': 3, 'state': 'closed'}, {'id': 608589230, 'number': 38, 'closed': datetime.datetime(2021, 4, 5, 1, 21, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 4, 18, 21, 29, tzinfo=datetime.timezone.utc), 'time_taken': 25196.0, 'time_delta': '6:59:56', 'additions': 38, 'deletions': 0, 'state': 'closed'}, {'id': 608346339, 'number': 37, 'closed': datetime.datetime(2021, 4, 4, 2, 7, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 3, 7, 33, 8, tzinfo=datetime.timezone.utc), 'time_taken': 66868.0, 'time_delta': '18:34:28', 'additions': 14, 'deletions': 4, 'state': 'closed'}, {'id': 607370798, 'number': 34, 'closed': datetime.datetime(2021, 4, 1, 16, 5, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 1, 12, 38, 5, tzinfo=datetime.timezone.utc), 'time_taken': 12464.0, 'time_delta': '3:27:44', 'additions': 228, 'deletions': 14, 'state': 'closed'}, {'id': 602779518, 'number': 31, 'closed': datetime.datetime(2021, 4, 1, 11, 48, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 29, 13, 49, 49, tzinfo=datetime.timezone.utc), 'time_taken': 251930.0, 'time_delta': '2 days, 21:58:50', 'additions': 131, 'deletions': 9, 'state': 'closed'}, {'id': 602039927, 'number': 29, 'closed': datetime.datetime(2021, 3, 27, 15, 57, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 27, 9, 52, 18, tzinfo=datetime.timezone.utc), 'time_taken': 21906.0, 'time_delta': '6:05:06', 'additions': 150, 'deletions': 12, 'state': 'closed'}, {'id': 598918963, 'number': 26, 'closed': datetime.datetime(2021, 3, 23, 14, 47, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 23, 14, 42, 57, tzinfo=datetime.timezone.utc), 'time_taken': 282.0, 'time_delta': '0:04:42', 'additions': 236, 'deletions': 0, 'state': 'closed'}, {'id': 596301902, 'number': 24, 'closed': datetime.datetime(2021, 3, 19, 12, 55, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 19, 8, 11, 56, tzinfo=datetime.timezone.utc), 'time_taken': 17018.0, 'time_delta': '4:43:38', 'additions': 83, 'deletions': 11, 'state': 'closed'}, {'id': 594813340, 'number': 23, 'closed': datetime.datetime(2021, 3, 17, 16, 38, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 17, 15, 8, 40, tzinfo=datetime.timezone.utc), 'time_taken': 5367.0, 'time_delta': '1:29:27', 'additions': 8, 'deletions': 8, 'state': 'closed'}, {'id': 594124564, 'number': 21, 'closed': datetime.datetime(2021, 3, 17, 5, 24, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 16, 17, 57, 4, tzinfo=datetime.timezone.utc), 'time_taken': 41259.0, 'time_delta': '11:27:39', 'additions': 168, 'deletions': 15, 'state': 'closed'}, {'id': 593196054, 'number': 20, 'closed': datetime.datetime(2021, 3, 15, 16, 7, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 15, 16, 0, 31, tzinfo=datetime.timezone.utc), 'time_taken': 413.0, 'time_delta': '0:06:53', 'additions': 129, 'deletions': 0, 'state': 'closed'}, {'id': 592373270, 'number': 15, 'closed': datetime.datetime(2021, 3, 14, 2, 50, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 13, 14, 44, 2, tzinfo=datetime.timezone.utc), 'time_taken': 43617.0, 'time_delta': '12:06:57', 'additions': 90, 'deletions': 1, 'state': 'closed'}, {'id': 590498578, 'number': 13, 'closed': datetime.datetime(2021, 3, 11, 6, 5, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 11, 4, 45, 15, tzinfo=datetime.timezone.utc), 'time_taken': 4795.0, 'time_delta': '1:19:55', 'additions': 116, 'deletions': 42, 'state': 'closed'}, {'id': 589720769, 'number': 12, 'closed': datetime.datetime(2021, 3, 11, 4, 46, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 10, 14, 45, 36, tzinfo=datetime.timezone.utc), 'time_taken': 50432.0, 'time_delta': '14:00:32', 'additions': 116, 'deletions': 42, 'state': 'closed'}, {'id': 583001967, 'number': 9, 'closed': datetime.datetime(2021, 3, 2, 13, 56, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 2, 12, 42, 45, tzinfo=datetime.timezone.utc), 'time_taken': 4432.0, 'time_delta': '1:13:52', 'additions': 130, 'deletions': 1, 'state': 'closed'}, {'id': 581357699, 'number': 8, 'closed': datetime.datetime(2021, 2, 27, 16, 1, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 27, 15, 56, 36, tzinfo=datetime.timezone.utc), 'time_taken': 274.0, 'time_delta': '0:04:34', 'additions': 149, 'deletions': 2, 'state': 'closed'}, {'id': 581018653, 'number': 7, 'closed': datetime.datetime(2021, 2, 27, 0, 39, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 26, 17, 41, 2, tzinfo=datetime.timezone.utc), 'time_taken': 25087.0, 'time_delta': '6:58:07', 'additions': 19, 'deletions': 0, 'state': 'closed'}]"
382081114,lua-resty-casbin,casbin-lua/lua-resty-casbin,Lua,2,5,4,3,24,1,1,0,"[{'id': 715084391, 'number': 13, 'closed': datetime.datetime(2021, 8, 18, 13, 33, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 13, 30, 50, tzinfo=datetime.timezone.utc), 'time_taken': 150.0, 'time_delta': '0:02:30', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 687588860, 'number': 12, 'closed': datetime.datetime(2021, 7, 13, 14, 57, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 12, 7, 35, 13, tzinfo=datetime.timezone.utc), 'time_taken': 112955.0, 'time_delta': '1 day, 7:22:35', 'additions': 31, 'deletions': 13, 'state': 'closed'}, {'id': 686945050, 'number': 11, 'closed': datetime.datetime(2021, 7, 9, 17, 38, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 17, 38, 16, tzinfo=datetime.timezone.utc), 'time_taken': 10.0, 'time_delta': '0:00:10', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 685704670, 'number': 10, 'closed': datetime.datetime(2021, 7, 8, 5, 46, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 5, 45, 51, tzinfo=datetime.timezone.utc), 'time_taken': 15.0, 'time_delta': '0:00:15', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 685702506, 'number': 9, 'closed': datetime.datetime(2021, 7, 8, 5, 42, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 5, 40, 25, tzinfo=datetime.timezone.utc), 'time_taken': 101.0, 'time_delta': '0:01:41', 'additions': 9, 'deletions': 0, 'state': 'closed'}, {'id': 685694337, 'number': 8, 'closed': datetime.datetime(2021, 7, 8, 5, 20, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 5, 18, 40, tzinfo=datetime.timezone.utc), 'time_taken': 120.0, 'time_delta': '0:02:00', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 683180843, 'number': 7, 'closed': datetime.datetime(2021, 7, 7, 13, 38, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 4, 14, 10, 5, tzinfo=datetime.timezone.utc), 'time_taken': 257319.0, 'time_delta': '2 days, 23:28:39', 'additions': 28, 'deletions': 9, 'state': 'closed'}, {'id': 682979143, 'number': 6, 'closed': datetime.datetime(2021, 7, 3, 6, 56, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 3, 6, 49, 31, tzinfo=datetime.timezone.utc), 'time_taken': 433.0, 'time_delta': '0:07:13', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 682719051, 'number': 4, 'closed': datetime.datetime(2021, 7, 3, 4, 55, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 15, 33, 52, tzinfo=datetime.timezone.utc), 'time_taken': 48125.0, 'time_delta': '13:22:05', 'additions': 137, 'deletions': 1, 'state': 'closed'}, {'id': 682577281, 'number': 1, 'closed': datetime.datetime(2021, 7, 2, 13, 22, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 12, 8, 20, tzinfo=datetime.timezone.utc), 'time_taken': 4449.0, 'time_delta': '1:14:09', 'additions': 315, 'deletions': 1, 'state': 'closed'}]"
386270222,kong-authz,casbin-lua/kong-authz,Lua,5,5,3,4,15,2,1,0,"[{'id': 1233118016, 'number': 22, 'closed': datetime.datetime(2023, 2, 8, 17, 29, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 8, 7, 31, 11, tzinfo=datetime.timezone.utc), 'time_taken': 35873.0, 'time_delta': '9:57:53', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1232120359, 'number': 20, 'closed': datetime.datetime(2023, 2, 7, 15, 15, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 7, 14, 57, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1095.0, 'time_delta': '0:18:15', 'additions': 10, 'deletions': 2, 'state': 'closed'}, {'id': 692610690, 'number': 5, 'closed': datetime.datetime(2021, 7, 19, 15, 44, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 13, 30, 57, tzinfo=datetime.timezone.utc), 'time_taken': 7989.0, 'time_delta': '2:13:09', 'additions': 47, 'deletions': 6, 'state': 'closed'}, {'id': 692587598, 'number': 3, 'closed': datetime.datetime(2021, 7, 19, 13, 24, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 13, 4, 13, tzinfo=datetime.timezone.utc), 'time_taken': 1236.0, 'time_delta': '0:20:36', 'additions': 173, 'deletions': 1, 'state': 'closed'}, {'id': 692128355, 'number': 2, 'closed': datetime.datetime(2021, 7, 19, 0, 35, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 18, 18, 13, 55, tzinfo=datetime.timezone.utc), 'time_taken': 22908.0, 'time_delta': '6:21:48', 'additions': 173, 'deletions': 1, 'state': 'closed'}]"
391932931,luasql-adapter,casbin-lua/luasql-adapter,Lua,5,4,3,4,11,1,1,1,"[{'id': 765541103, 'number': 7, 'closed': datetime.datetime(2021, 10, 25, 15, 46, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 25, 14, 37, 6, tzinfo=datetime.timezone.utc), 'time_taken': 4189.0, 'time_delta': '1:09:49', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 706062435, 'number': 3, 'closed': datetime.datetime(2021, 8, 9, 1, 45, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 8, 15, 30, 36, tzinfo=datetime.timezone.utc), 'time_taken': 36912.0, 'time_delta': '10:15:12', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 705925552, 'number': 2, 'closed': datetime.datetime(2021, 8, 8, 2, 4, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 7, 18, 1, 27, tzinfo=datetime.timezone.utc), 'time_taken': 28965.0, 'time_delta': '8:02:45', 'additions': 69, 'deletions': 1, 'state': 'closed'}, {'id': 704395074, 'number': 1, 'closed': datetime.datetime(2021, 8, 5, 10, 52, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 5, 5, 38, 3, tzinfo=datetime.timezone.utc), 'time_taken': 18885.0, 'time_delta': '5:14:45', 'additions': 1006, 'deletions': 0, 'state': 'closed'}]"
395501143,4daysorm-adapter,casbin-lua/4daysorm-adapter,Lua,4,0,2,3,4,2,1,1,"[{'id': 712934375, 'number': 1, 'closed': datetime.datetime(2021, 8, 16, 13, 20, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 15, 13, 17, 10, tzinfo=datetime.timezone.utc), 'time_taken': 86599.0, 'time_delta': '1 day, 0:03:19', 'additions': 2863, 'deletions': 1, 'state': 'closed'}]"
144433662,casbin-website,casbin/casbin-website,JavaScript,132,39,4,102,852,0,3,0,"[{'id': 715718557, 'number': 266, 'closed': datetime.datetime(2021, 8, 19, 8, 38, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 19, 8, 28, 17, tzinfo=datetime.timezone.utc), 'time_taken': 617.0, 'time_delta': '0:10:17', 'additions': 184, 'deletions': 0, 'state': 'closed'}, {'id': 714010814, 'number': 264, 'closed': datetime.datetime(2021, 8, 17, 11, 42, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 17, 8, 5, 34, tzinfo=datetime.timezone.utc), 'time_taken': 12999.0, 'time_delta': '3:36:39', 'additions': 14, 'deletions': 8, 'state': 'closed'}, {'id': 708693074, 'number': 262, 'closed': datetime.datetime(2021, 8, 11, 10, 49, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 11, 10, 43, 35, tzinfo=datetime.timezone.utc), 'time_taken': 334.0, 'time_delta': '0:05:34', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 685193526, 'number': 248, 'closed': datetime.datetime(2021, 7, 9, 7, 9, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 13, 22, 39, tzinfo=datetime.timezone.utc), 'time_taken': 150418.0, 'time_delta': '1 day, 17:46:58', 'additions': 31, 'deletions': 0, 'state': 'closed'}]"
