pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1338244630,ts: Migrate `feedback_widget` to TypeScript.,"This PR migrates `feedback_widget` module to TypeScript.

<!-- Describe your pull request here.-->

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25435,https://api.github.com/repos/zulip/zulip/pulls/25435,https://github.com/zulip/zulip/pull/25435,closed,32,11,2,1,5,2,2,0,"[{'name': 'size: M'}, {'name': 'area: typescript migration'}]",2023-05-04 11:01:13+00:00,2023-05-10 21:31:43+00:00,556230.0,"6 days, 10:30:30","[{'comment_id': 1188976455, 'comment_body': 'Why this change to wrap with a lambda? You can pass a function to `setTimeout`.', 'comment_created': datetime.datetime(2023, 5, 9, 18, 18, 55, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1188988237, 'comment_body': 'It was to satisfy an eslint rule which is ""[@typescript-eslint/unbound-method](https://typescript-eslint.io/rules/unbound-method)""\r\nThis is the error message:\r\n```\r\n59:20  error  Avoid referencing unbound methods which may cause unintentional scoping of `this`.\r\n```', 'comment_created': datetime.datetime(2023, 5, 9, 18, 27, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}]","[{'commit_sha': 'd4c1aa7653f3b7c1d6f03c78fa86cf863c4e1d86', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1355771462,ts: Convert `confirm_dialog` module to TypeScript.,"Converts `confirm_dialog` module to TypeScript. 

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25658,https://api.github.com/repos/zulip/zulip/pulls/25658,https://github.com/zulip/zulip/pull/25658,closed,5,4,3,1,1,0,2,0,"[{'name': 'size: S'}, {'name': 'area: typescript migration'}]",2023-05-18 14:04:21+00:00,2023-05-18 15:44:30+00:00,6009.0,1:40:09,[],"[{'commit_sha': '91ea906e09d4285b19b5085c13b909fc4a40814f', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1355810593,ts: Convert `deprecated_feature_notice` module to TypeScript.,"This PR does two things:
1) Refactors `maybe_show_deprecation_notice` function to use zod to parse `shown_deprecation_notices` array stored in localstorage for better type safety.
2) Migrates the module to TypeScript by adding some primitive types to the functions.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25660,https://api.github.com/repos/zulip/zulip/pulls/25660,https://github.com/zulip/zulip/pull/25660,closed,18,7,2,2,1,0,2,0,"[{'name': 'size: S'}, {'name': 'area: typescript migration'}]",2023-05-18 14:28:39+00:00,2023-05-18 15:52:27+00:00,5028.0,1:23:48,[],"[{'commit_sha': 'df11c4efdf1a2179a493a2ffa7df935c6dfe5667', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb9444bf9611abfc307555bfb5cb0282c2b8dd30', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1358132671,ts: Convert `emojisets` module to TypeScript.,"Declared types for '*.png' modules and '!style-loader?*' modules in `assets.d.ts` and used them in `emojisets.ts`.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25699,https://api.github.com/repos/zulip/zulip/pulls/25699,https://github.com/zulip/zulip/pull/25699,closed,29,7,3,1,1,1,2,0,"[{'name': 'size: M'}, {'name': 'area: typescript migration'}]",2023-05-21 07:18:32+00:00,2023-05-22 16:02:43+00:00,117851.0,"1 day, 8:44:11","[{'comment_id': 1199814155, 'comment_body': ""It appears that `EmojiSet` isn't used elsewhere, so exporting it is not necessary."", 'comment_created': datetime.datetime(2023, 5, 21, 19, 13, 26, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}]","[{'commit_sha': '6d66be43c48e8993fd20374726eab53088c62763', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1364324344,ts: Convert `compose_textarea.js` to TypeScript.,"Added type definitions for `jquery-caret-plugin` third party package and converted `compose_textarea.js` to TypeScript.

I took reference types for `jquery-care-plugin` from here: https://github.com/acdvorak/jquery.caret#api

<!-- Describe your pull request here.-->

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25760,https://api.github.com/repos/zulip/zulip/pulls/25760,https://github.com/zulip/zulip/pull/25760,closed,20,4,3,1,4,0,3,0,"[{'name': 'size: S'}, {'name': 'integration review'}, {'name': 'area: typescript migration'}]",2023-05-25 08:38:00+00:00,2023-05-26 00:33:18+00:00,57318.0,15:55:18,[],"[{'commit_sha': 'cb62212c6a73febe1b80f0956678fadd694b7725', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1364153619,ts: Convert `internal_url.js` to TypeScript.,"Migrates `web/shared/internal_url.js` to TypeScript.

- Mainly just a rename o the  file and adding primitive types to function definitions.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25755,https://api.github.com/repos/zulip/zulip/pulls/25755,https://github.com/zulip/zulip/pull/25755,closed,29,16,1,1,6,2,3,0,"[{'name': 'size: M'}, {'name': 'integration review'}, {'name': 'area: typescript migration'}]",2023-05-25 06:16:40+00:00,2023-05-30 17:45:01+00:00,473301.0,"5 days, 11:28:21","[{'comment_id': 1210478349, 'comment_body': 'We can be consistent with the use of string interpolation here.', 'comment_created': datetime.datetime(2023, 5, 30, 15, 44, 17, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1210479068, 'comment_body': 'The same applies here.', 'comment_created': datetime.datetime(2023, 5, 30, 15, 44, 55, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}]","[{'commit_sha': '8285593c452500688eb1e59b31bbdc0837136ec0', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1350840893,ts: Migrate `fetch_status` to TypeScript.,"Added the type representing the message object received from the server `APIMessage` and used that type in the parameters in `fetch_status` modules.

I took reference from this documentation page: https://zulip.com/api/get-messages for the `APIMessage` type.

<!-- Describe your pull request here.-->

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->
<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [ ] Explains differences from previous plans (e.g., issue description).
- [ ] Highlights technical choices and bugs encountered.
- [ ] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [ ] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [ ] End-to-end functionality of buttons, interactions and flows.
- [ ] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25599,https://api.github.com/repos/zulip/zulip/pulls/25599,https://github.com/zulip/zulip/pull/25599,closed,76,19,2,1,4,15,4,0,"[{'name': 'size: L'}, {'name': 'post release'}, {'name': 'integration review'}, {'name': 'area: typescript migration'}]",2023-05-15 13:47:04+00:00,2023-05-31 20:31:12+00:00,1406648.0,"16 days, 6:44:08","[{'comment_id': 1195620727, 'comment_body': ""I don't understand this type -- the message `content` field will be a string, and I think always an HTML string in these contexts, since we always request that format from the server."", 'comment_created': datetime.datetime(2023, 5, 16, 19, 43, 7, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1195622163, 'comment_body': 'I think probably it make more sense for the `DisplayRecipient` type to be this, and the typed defined above to be called `DisplayRecipientUser`.', 'comment_created': datetime.datetime(2023, 5, 16, 19, 44, 14, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1195622874, 'comment_body': 'This should be called `MessageEditHistoryEntry` or `MessageEditHistoryEvent`, since these elements are individual entries in the edit history.', 'comment_created': datetime.datetime(2023, 5, 16, 19, 44, 47, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1195623399, 'comment_body': 'Several of these fields might not appear, right? Or am I remembering wrong?', 'comment_created': datetime.datetime(2023, 5, 16, 19, 45, 12, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1195625167, 'comment_body': 'Is `reactions` actually optional in the message fetching context? I would have thought it was always present and might be an empty list.', 'comment_created': datetime.datetime(2023, 5, 16, 19, 46, 47, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1195627270, 'comment_body': ""I don't think type makes sense for the `start_` methods, which seem to only accept the `update_loading_indicator` parameter. I would rather we inline these for the 4 methods with the actual parameters that each function accepts."", 'comment_created': datetime.datetime(2023, 5, 16, 19, 49, 10, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1195627863, 'comment_body': 'You probably can remove these given that I think these parameters will be non-optional if typed correctly.', 'comment_created': datetime.datetime(2023, 5, 16, 19, 49, 52, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1197465759, 'comment_body': 'I inferred this type from reading the [API docs](https://zulip.com/api/get-message), there it is written that:\r\n> The HTTP content_type for the message content. This will be text/html or text/x-markdown, depending on whether apply_markdown was set.', 'comment_created': datetime.datetime(2023, 5, 18, 6, 48, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1197466458, 'comment_body': 'Should I just change it to `text/html` only or maybe a `string` type?', 'comment_created': datetime.datetime(2023, 5, 18, 6, 49, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1197467249, 'comment_body': 'Yup my bad misread it on the docs, fixed it!', 'comment_created': datetime.datetime(2023, 5, 18, 6, 50, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1197469827, 'comment_body': 'Oh yes, it is always present in the context of `RawMessage` i.e. message object directly from the server, but yeah `reactions` is not present in the processed `Message` type, so we will need to Omit it from that type but that can be done in another PR possibly this one - #25539.\r\nFor now, made it non-optional on the `RawMessage` type.', 'comment_created': datetime.datetime(2023, 5, 18, 6, 53, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1199814942, 'comment_body': '`content` should be a `string`. As for `content_type`, see my comment above in a previous conversation.', 'comment_created': datetime.datetime(2023, 5, 21, 19, 20, 7, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1199815659, 'comment_body': 'It should be `""text/html""`. We only get `""text/x-markdown""` for `content_type` when `apply_markdown` is set to `false` upon request, which is not done in the web client.', 'comment_created': datetime.datetime(2023, 5, 21, 19, 26, 44, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1200340088, 'comment_body': 'Oh okay makes sense, changed it to string literal type of ""text/html"".', 'comment_created': datetime.datetime(2023, 5, 22, 10, 48, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1200341910, 'comment_body': 'Ah realizing now that I mixed up `content` and `content_type` fields somehow😐.\r\nCorrected the types there now, Thanks!', 'comment_created': datetime.datetime(2023, 5, 22, 10, 50, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}]","[{'commit_sha': '9d4a71c6b5c1c7eacba135f86a5024c1cfa7aa4c', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1364198658,ts: Convert `web/shared/typing_status.js` to TypeScript.,"Migrates `web/shared/typing_status.js` to TypeScript.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25756,https://api.github.com/repos/zulip/zulip/pulls/25756,https://github.com/zulip/zulip/pull/25756,closed,87,94,2,3,8,8,3,0,"[{'name': 'size: XL'}, {'name': 'integration review'}, {'name': 'area: typescript migration'}]",2023-05-25 07:00:56+00:00,2023-06-23 17:52:54+00:00,2544718.0,"29 days, 10:51:58","[{'comment_id': 1207409305, 'comment_body': ""Do these notify functions actually accept `null`? I don't see how they could do anything coherent with `null` passed in, and I would have thought that all the callers would ensure the recipient is not `null` in advance."", 'comment_created': datetime.datetime(2023, 5, 26, 21, 55, 3, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1207409897, 'comment_body': ""Are the situations where these things are not null/undefined coupled? I'm wondering if we should instead have the a single state object which is either null or has all these values set."", 'comment_created': datetime.datetime(2023, 5, 26, 21, 55, 49, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1208566022, 'comment_body': 'Yeah that is true, these functions never accept `null` parameter. Fixed this!', 'comment_created': datetime.datetime(2023, 5, 28, 14, 37, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1208566765, 'comment_body': 'Well, we progressively set fields of this `state` object and never set all the fields at once. So if we want to have a single state object then we would have incomplete types all over the place and will need some code refactoring to fix those errors?', 'comment_created': datetime.datetime(2023, 5, 28, 14, 40, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1210530294, 'comment_body': ""Given that we fall back to `0` when `next_send_start_time` is `undefined`, I think we don't even need to allow it to be `undefined`; we always call `start_or_extend_idle_timer` after setting `state.current_recipient`, where the former sets `state.idle_timer`, so I would say these two can be set together.\r\nIt is feasible to refactor in a separate pre-ts commit to make it a lot cleaner."", 'comment_created': datetime.datetime(2023, 5, 30, 16, 25, 48, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1222278399, 'comment_body': 'We can remove this helper because we can just set `state = null` here and in the tests now. The naming appears to be a bit misleading in terms of what it does now.', 'comment_created': datetime.datetime(2023, 6, 7, 23, 29, 56, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1222281790, 'comment_body': '`user_ids_array` or `recipient_ids` would be some clearer representations of the parameters.', 'comment_created': datetime.datetime(2023, 6, 7, 23, 37, 57, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1222286130, 'comment_body': 'Hmm, looks like we are using the term `recipient` in other places in this file when it\'s actually an array of user ids.\r\nWe use `user_ids_array` in `typing.js`, and name the parameter type as `RecipientUserIds` in `typing_status.js.flow`.\r\n\r\nAt some point, this naming might have been confusing as we have test cases that use `""alice""` for `current_recipient`. It would be helpful if we can be consistent with `recipient_ids` in another refactoring commit.', 'comment_created': datetime.datetime(2023, 6, 7, 23, 47, 36, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}]","[{'commit_sha': 'bbb4cf949601dc06f593a9f0efdbbe5c4ff99c5f', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9576a361252f1690ad82a71e35fb698fac28fd90', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd515252a7a7ddbdfecdd1d49495f6ecbaf027f0', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1261890736,ts: Convert `web/src/billing` module to TypeScript.,"Converted all files inside `web/src/billing` to TypeScript.

<!-- Describe your pull request here.-->

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,24559,https://api.github.com/repos/zulip/zulip/pulls/24559,https://github.com/zulip/zulip/pull/24559,closed,260,138,16,2,14,41,3,0,"[{'name': 'size: XL'}, {'name': 'integration review'}, {'name': 'area: typescript migration'}]",2023-03-03 10:55:43+00:00,2023-06-23 18:42:30+00:00,9704807.0,"112 days, 7:46:47","[{'comment_id': 1125230447, 'comment_body': 'This `response` parameter comes from a value of type `any`, so its validity as type `T` is completely unchecked. We should write `response: unknown`, and the caller should use [Zod](https://zod.dev/) to safely parse and validate it as the desired type.', 'comment_created': datetime.datetime(2023, 3, 4, 2, 30, 54, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 1125448182, 'comment_body': '@andersk Thanks for the review I have integrated Zod but how do I fix failing tests now should I make every field nullable in my Zod schema? I would like your opinions on this!', 'comment_created': datetime.datetime(2023, 3, 4, 11, 47, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1134460178, 'comment_body': 'I think the API does not return an `id`? I might be mistaken. It would be great if you can source where you infer this property from.', 'comment_created': datetime.datetime(2023, 3, 13, 18, 26, 59, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1134462448, 'comment_body': 'Some of these fields indeed might be optional. Such as `event_handler` and `stripe_payment_intent_id`.\r\nYou can look at the source code for `event_status` might help with figuring them out:\r\nhttps://github.com/zulip/zulip/blob/9e4529c48bee7da41b32888d5f055f7c070b9078/corporate/views/event_status.py#L26-L49', 'comment_created': datetime.datetime(2023, 3, 13, 18, 29, 17, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1134464199, 'comment_body': 'We might also want to refine this schema based on the API implementation.', 'comment_created': datetime.datetime(2023, 3, 13, 18, 30, 54, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1134466858, 'comment_body': 'Could you explain the motivation for this change (and the one below)? This kind of refactoring might as well better be suited for a separate commit before the TypeScript conversion.', 'comment_created': datetime.datetime(2023, 3, 13, 18, 33, 35, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1134467325, 'comment_body': 'It might be cleaner to just do `type FormDataObject = Record<string, string>`', 'comment_created': datetime.datetime(2023, 3, 13, 18, 34, 3, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1134500315, 'comment_body': 'The `page_params` for the billing page is different from the homepage one, albeit both being `page_params`. Maybe we can create a separate `page_params` for billing only.\r\nhttps://github.com/zulip/zulip/blob/9e4529c48bee7da41b32888d5f055f7c070b9078/corporate/views/upgrade.py#L274-L280', 'comment_created': datetime.datetime(2023, 3, 13, 19, 8, 17, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1137030494, 'comment_body': ""Sorry! my fault I don't know how that id slipped in there 😅"", 'comment_created': datetime.datetime(2023, 3, 15, 13, 3, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1137034910, 'comment_body': 'This change was mainly done due to eslint complaining about the rule ""no-misused-promises"" though it can also be avoided by just placing a void keyword before `start_status_polling` in `setTimeout` like this:\r\n`setTimeout(() => void start_status_polling(), 5000);`\r\nI think this might bit be more efficient than doing it like above change?', 'comment_created': datetime.datetime(2023, 3, 15, 13, 6, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1137035383, 'comment_body': 'Agreed!', 'comment_created': datetime.datetime(2023, 3, 15, 13, 6, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1137038102, 'comment_body': 'Thanks for pointing this file out!', 'comment_created': datetime.datetime(2023, 3, 15, 13, 8, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1137094302, 'comment_body': ""I don't think I fully understand what's going on here 😅\r\nI mean doesen't this context is being used for rendering the `corporate/upgrade.html` template only?\r\nCan you elaborate a little that why and how were we using same `page_params` if they were different from the start!"", 'comment_created': datetime.datetime(2023, 3, 15, 13, 43, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1137977670, 'comment_body': 'We also want to bump [PROVISION_VERSION](https://zulip.readthedocs.io/en/latest/subsystems/dependencies.html#provision-version) by a minor level since we add a dependency here.', 'comment_created': datetime.datetime(2023, 3, 16, 1, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1137980319, 'comment_body': 'Right. `page_params.ts` is also used in other places where these properties are not available. So adding `seat_count` and etc to `page_params` would not be correct in general.', 'comment_created': datetime.datetime(2023, 3, 16, 1, 20, 21, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1137982418, 'comment_body': 'Yeah, this looks cleaner.', 'comment_created': datetime.datetime(2023, 3, 16, 1, 25, 14, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1137985632, 'comment_body': 'We can avoid importing or changing `page_params.ts`, and in a prep commit, access `$(""#page-params"").remove().data(""params"")` directly, and extract the needed fields to be passed to `initialize` in `upgrade.js`.', 'comment_created': datetime.datetime(2023, 3, 16, 1, 32, 4, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1140273356, 'comment_body': 'Oh, okay that makes sense to me, but we also need `page_params.seat_count` data in `helper.js` also, so will it make more sense to make a new separate `page_params` for billing?', 'comment_created': datetime.datetime(2023, 3, 17, 13, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1140347045, 'comment_body': 'Yeah, that sounds reasonable for now. Eventually, we will get rid of `page_params`.', 'comment_created': datetime.datetime(2023, 3, 17, 14, 58, 32, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1140353327, 'comment_body': 'The only helper function that uses `page_params` is `update_charged_amount`, which is called in `upgrade.initialize` twice. This is beyond the scope of the PR, but I think as a follow-up, the helper can be removed/moved into `upgrade.ts`.', 'comment_created': datetime.datetime(2023, 3, 17, 15, 3, 43, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1140356227, 'comment_body': 'Yeah that sounds good I will try to make a seperate `page_params` in billing directory for now!', 'comment_created': datetime.datetime(2023, 3, 17, 15, 6, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1141059462, 'comment_body': '@PIG208 So I was trying to access `$(""#page_params"")` in a newly created `page_params.ts` in billing directory but of course, I couldn\'t access it because for now, we are removing `#page_params` element in the main `page_params.ts`, any suggestions, should I change main `page_params.ts` to not remove the `#page_params` element from the DOM?', 'comment_created': datetime.datetime(2023, 3, 18, 17, 5, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1141062666, 'comment_body': ""I think you shouldn't need to change the main `page_params.ts`. We only remove `#page_params` once upon initialization. You are just replacing the main `page_params.ts` with a local version for billing. It should function exactly the same way."", 'comment_created': datetime.datetime(2023, 3, 18, 17, 24, 25, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1141082691, 'comment_body': 'Alright! so made a new commit introducing new `page_params` as well as adjusted the testing code for it! Let me know what you think! 🙂', 'comment_created': datetime.datetime(2023, 3, 18, 18, 8, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1148471587, 'comment_body': 'A minor bump should suffice, i.e. `(227, 1)`.', 'comment_created': datetime.datetime(2023, 3, 26, 4, 3, 1, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1148525758, 'comment_body': 'Also It looks like @andersk already added Zod as a dependency in this [commit](https://github.com/zulip/zulip/commit/38539c8fed521c6e3f914a0b4709b00e3157db28)!', 'comment_created': datetime.datetime(2023, 3, 26, 10, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1148587203, 'comment_body': 'Instead of copying over these types on both `upgrade.ts` and `helpers.ts`, it is better to just export these types from `helpers.ts` and just use them here.', 'comment_created': datetime.datetime(2023, 3, 26, 16, 7, 36, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1148587576, 'comment_body': 'Just want to confirm: are there any circumstances in which `type` does not get returned?', 'comment_created': datetime.datetime(2023, 3, 26, 16, 9, 55, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1148588781, 'comment_body': 'We should move its corresponding schema into `helpers.ts` and use the inferred type of that schema, instead of manually rewriting `StripeSessionResponse`. Same thing in `event_status.ts`.\r\n```\r\nconst response_schema = z.object({\r\n    stripe_session_url: z.string(),\r\n});\r\n```', 'comment_created': datetime.datetime(2023, 3, 26, 16, 14, 41, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1148589164, 'comment_body': 'This particular schema can be moved into `helpers.ts`, because it is shared between `event_status.ts` and `upgrade.ts`.', 'comment_created': datetime.datetime(2023, 3, 26, 16, 16, 52, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1149188917, 'comment_body': ""I have checked the view for this request, and yes, there isn't any case where a `type` is not returned from the request."", 'comment_created': datetime.datetime(2023, 3, 27, 11, 43, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1149191779, 'comment_body': 'Except of course when we pass `stripe_payment_intent_id` in request params instead of `stripe_session_id` in which case it returns a `payment_intent` instead of a `session`.', 'comment_created': datetime.datetime(2023, 3, 27, 11, 46, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1199801966, 'comment_body': 'We can mention that `#page_params` is used again through `sentry.ts`, which imports the other `page_param` module.', 'comment_created': datetime.datetime(2023, 5, 21, 17, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1199802140, 'comment_body': 'I think these properties can be removed now, right?', 'comment_created': datetime.datetime(2023, 5, 21, 17, 32, 48, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1199802231, 'comment_body': 'This seems like an unintentional log message.', 'comment_created': datetime.datetime(2023, 5, 21, 17, 33, 21, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1199802512, 'comment_body': '`type Prices` is used in helpers as well. We may reuse the type here.', 'comment_created': datetime.datetime(2023, 5, 21, 17, 36, 25, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1200334574, 'comment_body': 'Oh yeah right I forgot to remove them, fixed it!', 'comment_created': datetime.datetime(2023, 5, 22, 10, 43, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1200334978, 'comment_body': 'Yeah idk how that slipped in 😅', 'comment_created': datetime.datetime(2023, 5, 22, 10, 43, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1222730015, 'comment_body': 'Are these changes directly related to the TypeScript migration? If not, I think it would be better to make a separate commit to introduce these changes.', 'comment_created': datetime.datetime(2023, 6, 8, 9, 43, 4, tzinfo=datetime.timezone.utc), 'commenter': 'shameondev', 'type': 'User'}, {'comment_id': 1222995629, 'comment_body': 'They aren\'t exactly related to typescript but in a way, they go well with the typescript changes because of all the type narrowing the ""zod"" gives us.', 'comment_created': datetime.datetime(2023, 6, 8, 12, 51, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1222997129, 'comment_body': ""Also, these changes aren't exactly refactoring changes as well, they were only made to support typescript migration only."", 'comment_created': datetime.datetime(2023, 6, 8, 12, 52, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}]","[{'commit_sha': '083d63eb51f90dac9299bff91e1a393a9e6d37ac', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e32458f27b9205688750fb3fec3eb5142fe9556', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1375245615,ts: Migrates `web/shared/poll_data` to typescript.,"Migrates `poll_data` to TypeScript.
- I used zod schemas for validating incoming/inbound data types.
- Refactored to declare `handle` object inside the constructor of the class.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25874,https://api.github.com/repos/zulip/zulip/pulls/25874,https://github.com/zulip/zulip/pull/25874,closed,308,236,3,2,15,10,3,0,"[{'name': 'size: XL'}, {'name': 'integration review'}, {'name': 'area: typescript migration'}]",2023-06-02 07:24:15+00:00,2023-07-06 23:21:53+00:00,2995058.0,"34 days, 15:57:38","[{'comment_id': 1214893174, 'comment_body': '`idx` won\'t be non-Number now so I think the error message can be tailored to something like ""idx out of boud""', 'comment_created': datetime.datetime(2023, 6, 2, 22, 16, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1215553020, 'comment_body': 'Yeah agreed, Changed it!', 'comment_created': datetime.datetime(2023, 6, 3, 14, 10, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1224911349, 'comment_body': 'Is it possible to get a `string` for `user_id`?', 'comment_created': datetime.datetime(2023, 6, 10, 0, 16, 17, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1224912235, 'comment_body': 'Since it comes from `event.sender_id`, could you confirm that it will always be a `number`?', 'comment_created': datetime.datetime(2023, 6, 10, 0, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1224912375, 'comment_body': ""This might need an update if `sender_id` can't be a `string`"", 'comment_created': datetime.datetime(2023, 6, 10, 0, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1224915058, 'comment_body': 'Looks like ""canned"" is arbitrary. If this is where the `string` `sender_id` comes from, we may as well change it to something that is compliant with the type.', 'comment_created': datetime.datetime(2023, 6, 10, 0, 23, 22, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1225830526, 'comment_body': 'It\'s coming from passing ""canned"" manually.', 'comment_created': datetime.datetime(2023, 6, 11, 14, 27, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1225830592, 'comment_body': 'Yeah agreed! Should I change it to maybe -1?', 'comment_created': datetime.datetime(2023, 6, 11, 14, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1228349277, 'comment_body': 'Yeah, `-1` should work.', 'comment_created': datetime.datetime(2023, 6, 13, 15, 42, 4, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1247416451, 'comment_body': 'An assertion is preferred here. Since we expect the key to exist.', 'comment_created': datetime.datetime(2023, 6, 30, 4, 34, 36, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}]","[{'commit_sha': '5cb636d6624d95a3b3ff3527aadb6d7827a7d1db', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1913294afc7abb6fc5f5e5a33b7dc1ea575795af', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1441258645,"poll_data: Revert to using ""canned"" instead of -1.","According to this [CZO thread](https://chat.zulip.org/#narrow/stream/9-issues/topic/poll.20responses.20removed.20or.20missing.3F) we have a bug in `poll_widget` which causes it to not show vote counts on old polls.

This was most probably introduced in this commit [ae6063807b64484a1162def4750037e341c75820](https://github.com/zulip/zulip/commit/ae6063807b64484a1162def4750037e341c75820).

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26293,https://api.github.com/repos/zulip/zulip/pulls/26293,https://github.com/zulip/zulip/pull/26293,closed,3,3,1,1,1,0,4,0,"[{'name': 'bug'}, {'name': 'size: S'}, {'name': 'area: widgets'}, {'name': 'integration review'}]",2023-07-19 15:28:13+00:00,2023-07-20 16:55:10+00:00,91617.0,"1 day, 1:26:57",[],"[{'commit_sha': '0ab3d196ef084f1118d65c807d8200ad0a183b29', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1423161431,ts: Migrate `setup.js` to TypeScript.,"Thanks to @xoldyckk for his work on this, I have extracted the commits from this PR #25536.
- Remove the uses of `safeOuterWidth` and `safeOuterHeight` from the codebase.
- Migrates `setup.js` to TypeScript.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26202,https://api.github.com/repos/zulip/zulip/pulls/26202,https://github.com/zulip/zulip/pull/26202,closed,18,28,7,2,5,0,3,0,"[{'name': 'size: M'}, {'name': 'integration review'}, {'name': 'area: typescript migration'}]",2023-07-06 16:18:09+00:00,2023-07-10 20:49:27+00:00,361878.0,"4 days, 4:31:18",[],"[{'commit_sha': 'bc13be45fa7580ecfb3f1d041c7141eb2289773c', 'committer_username': 'xoldd', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 4, 20, 9, 20, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7bdcf2587ce2fc49a4265df6b7faaef8b817125', 'committer_username': 'xoldd', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 4, 20, 9, 20, 12, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1347213503,ts: Migrate people.js to TypeScript.,"This PR follows the work done by @PIG208 in #24653 which is to migrate people.js into TypeScript.
The majority of refactoring required for this migration is already been done.

### Remaining work / current Challenges:

<p>As also mentioned in #24653 we still have some things to figure out:</p>

- [x] Fix some es-lint errors.
- [x] Figuring out correct types for `Messages`.
- [x] `_add_user` currently can also be called with `extract_people_from_message` that adds a user (for deactivated users that aren't originally populated) containing only a subset of required fields on User. The involvement of these objects makes it type-unsafe whenever the global mappings for user storage are accessed.
- [x] In many cases, we do not handle optional values when doing a lookup on one of the global mappings. The current approach would be silencing the typing error by appending ! to assert non-undefinedness without changing the original implementation, but we might want further refactorings to avoid using it.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [ ] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [ ] Explains differences from previous plans (e.g., issue description).
- [ ] Highlights technical choices and bugs encountered.
- [ ] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [ ] Each commit is a coherent idea.
- [ ] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [ ] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [ ] End-to-end functionality of buttons, interactions and flows.
- [ ] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25539,https://api.github.com/repos/zulip/zulip/pulls/25539,https://github.com/zulip/zulip/pull/25539,closed,341,174,7,8,20,31,3,0,"[{'name': 'size: XL'}, {'name': 'integration review'}, {'name': 'area: typescript migration'}]",2023-05-11 14:38:55+00:00,2023-07-12 05:22:30+00:00,5323415.0,"61 days, 14:43:35","[{'comment_id': 1210683541, 'comment_body': 'This seems to belong to a separate commit.', 'comment_created': datetime.datetime(2023, 5, 30, 18, 42, 15, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1210683905, 'comment_body': 'This needs a separate commit as well', 'comment_created': datetime.datetime(2023, 5, 30, 18, 42, 39, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1210699135, 'comment_body': 'We prefer patterns like `blueslip.warn(""We have untracked user_ids"", {bad_ids})`.', 'comment_created': datetime.datetime(2023, 5, 30, 18, 55, 50, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1210699443, 'comment_body': 'Similarily, `blueslip.warn(""Unknown emails"", {emails})`.', 'comment_created': datetime.datetime(2023, 5, 30, 18, 56, 8, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1210699664, 'comment_body': 'Similarily, `blueslip.warn(""Unexpectedly invalid user_id in user popover query"", {user_id})`.', 'comment_created': datetime.datetime(2023, 5, 30, 18, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1210712239, 'comment_body': 'We would want to have this consistent with #25599', 'comment_created': datetime.datetime(2023, 5, 30, 19, 9, 23, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1210712776, 'comment_body': 'The reviews from #25599 apply here too.', 'comment_created': datetime.datetime(2023, 5, 30, 19, 9, 52, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1210719662, 'comment_body': 'This is nullable.', 'comment_created': datetime.datetime(2023, 5, 30, 19, 17, 5, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1210760897, 'comment_body': ""`user` is deprecated. I checked and we don't seem to be using it anymore in the web client. So we might remove it."", 'comment_created': datetime.datetime(2023, 5, 30, 19, 57, 58, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1210871990, 'comment_body': '`emoji_alt_code` is a `boolean`:\r\nhttps://github.com/zulip/zulip/blob/660ccccf681c1036584c96dbe5068acacb5ff82f/web/src/user_status.js#L60-L74', 'comment_created': datetime.datetime(2023, 5, 30, 22, 7, 33, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1210878022, 'comment_body': 'Some notes for the future migration of the `message_helper`, `message_store` family of modules:\r\nMarking the transition from `RawMessage` to `Message` can be tricky, because the mutation might happen in various places. `message_helper.process_new_message` may or may not get a `RawMessage`; the boolean-related fields are added in `message_store.set_message_booleans`; most of the functions in `reactions` calls `reactions.set_clean_reactions` to add `message.clean_reactions`. We need to determine where these transitions might happen to ensure that the types are correct.\r\n\r\nFor this PR, I will just be verifying if the functions called with `Message` in `people` indeed get a final `Message` object with all the fields added.', 'comment_created': datetime.datetime(2023, 5, 30, 22, 14, 42, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1210880249, 'comment_body': '`to_user_ids` only appears in direct messages', 'comment_created': datetime.datetime(2023, 5, 30, 22, 18, 38, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1210881895, 'comment_body': 'I propose that we can group the following properties by where they are added, not necessarily into different types, at least for now. For example, we can group the booleans added by `set_message_booleans` with a single-line comment above mentioning the source.\r\n\r\nThis will make it easier to review and verify the properties. Since I think most if not all of them are patched after the raw message is received.', 'comment_created': datetime.datetime(2023, 5, 30, 22, 21, 39, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1212207419, 'comment_body': 'Made it optional 👍', 'comment_created': datetime.datetime(2023, 5, 31, 19, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1212231706, 'comment_body': 'We can use double quotes now that no template strings are needed.', 'comment_created': datetime.datetime(2023, 5, 31, 19, 46, 47, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1213417344, 'comment_body': 'Nice catch! It turned out that our test cases which have been using `string[]` are not so representative of the real data.', 'comment_created': datetime.datetime(2023, 6, 1, 16, 37, 9, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1213421425, 'comment_body': '`delivery_email` is nullable now due to the feature level 163 change.', 'comment_created': datetime.datetime(2023, 6, 1, 16, 41, 5, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1213426194, 'comment_body': 'Both `bot_type` and `bot_owner_id` are also nullable.\r\nhttps://github.com/zulip/zulip/blob/b5e572811257a33a25494af34a5231823cbe5f02/zerver/openapi/zulip.yaml#L18060-L18082\r\n', 'comment_created': datetime.datetime(2023, 6, 1, 16, 45, 47, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1213432548, 'comment_body': '`rendered_value` is optional.\r\nhttps://github.com/zulip/zulip/blob/b5e572811257a33a25494af34a5231823cbe5f02/zerver/openapi/zulip.yaml#L562-L570', 'comment_created': datetime.datetime(2023, 6, 1, 16, 52, 11, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1213440734, 'comment_body': ""Let's mention here that this kind of users are generated here in a comment;\r\nhttps://github.com/zulip/zulip/blob/main/web/src/composebox_typeahead.js#L338-L361"", 'comment_created': datetime.datetime(2023, 6, 1, 17, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1213452492, 'comment_body': 'Note that the server has an undocumented behavior that `bot_type` and `bot_owner_id` do not appear when the user is not a bot, so technically `bot_type` being `null` never happens while it was documented that way. We could probably work to make that more accurately documented/behave consistently, but that will be a task of its own. For now having `bot_type?: number | null` suffices.\r\nhttps://github.com/zulip/zulip/blob/b5e572811257a33a25494af34a5231823cbe5f02/zerver/lib/users.py#L501-L507', 'comment_created': datetime.datetime(2023, 6, 1, 17, 12, 43, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1213471269, 'comment_body': 'Also a note for the future: We can define this type as a union of types with `is_private: true` and `is_stream: true`, respectively, when we get into migrating `message_store`. The current definition is good enough, though.', 'comment_created': datetime.datetime(2023, 6, 1, 17, 30, 31, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1224673913, 'comment_body': ""This code definitely works, and the stringification is documented: https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\r\n\r\nI think it's fine to do this change but the commit message looks to be wrong."", 'comment_created': datetime.datetime(2023, 6, 9, 19, 19, 8, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1224693600, 'comment_body': ""I think this should instead be hardcoding these to false. I'm not sure, but I kinda suspect this commit alone breaks the app and it's only fixed when you introduce `make_user` here later; it might make sense to just squash to avoid the intermediate state -- the actual problem here is that this is not a full user object."", 'comment_created': datetime.datetime(2023, 6, 9, 19, 37, 47, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1224694189, 'comment_body': 'The `user_id`, `email`, and `full_name` parameters need to be required parameters.', 'comment_created': datetime.datetime(2023, 6, 9, 19, 38, 27, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1224696922, 'comment_body': 'I think a number of these defaults are dangerous -- for example, `0` is not a valid possible value for `role`. My current thinking is we should rewrite this function to accept just the 3 parameters that we call it with, and pick a consistent set of values that are the defaults for a newly created user, and perhaps an extra new field `is_missing_server_data` that we can use to keep track of the fact that this is a fake user object.', 'comment_created': datetime.datetime(2023, 6, 9, 19, 41, 27, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1224698138, 'comment_body': 'This should be just a boolean, not optional, right?', 'comment_created': datetime.datetime(2023, 6, 9, 19, 42, 49, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1224698305, 'comment_body': 'Should this have a `| null`?', 'comment_created': datetime.datetime(2023, 6, 9, 19, 43, 2, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1224701491, 'comment_body': ""So while we expect our current user ID to always exist, I don't see a reason to expect callers of this to have checked that the user ID in question is a real one. So either that needs to be documented, or this function needs to have different error handling. \r\n\r\nSince this part is an API change, I think it might make sense to split it out to a prep PR."", 'comment_created': datetime.datetime(2023, 6, 9, 19, 46, 30, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1226726603, 'comment_body': 'Yeah, fixed it now!', 'comment_created': datetime.datetime(2023, 6, 12, 14, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}]","[{'commit_sha': '1aea6942524f64977dd1d0074aa8a834c4487ce1', 'committer_username': 'PIG208', 'committer_name': 'Zixuan Li', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 3, 8, 14, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '983b498e5b69b6879f02cdb90ecc30dd4cbeaeef', 'committer_username': 'PIG208', 'committer_name': 'Zixuan Li', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 3, 8, 14, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '144214a2215d94048f9c40c62a347e12c203a753', 'committer_username': 'PIG208', 'committer_name': 'Zixuan Li', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 3, 8, 14, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '868eef012fe17f4948ae439da0b55ca289a95afb', 'committer_username': 'PIG208', 'committer_name': 'Zixuan Li', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 3, 8, 14, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a06a46e0c750c8e817023f3b4263df0fc18c0ac8', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cccdf1959eec39ac9aac1919df3ed29149e5e728', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c976d1e37f3b954a5b4bdb093e85c5835f3be731', 'committer_username': 'PIG208', 'committer_name': 'Zixuan Li', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 3, 8, 14, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f610058a2542fc88a565ce4767af6c69a403ef73', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1272233609,ts: Convert people.js to people.ts,"This is some initial work done to convert people.js to people.ts. Since people.js is a long file with 1000+ lines, the sequence of changes will be organized into different parts both for the convenience of reviewing and merging partially.

#### Prep changes

These are prep changes that can be partially merged before we actually convert people.js to TypeScript.
They are necessary because some implementations are sub-optimal in terms of type safety.

- @types/blueimp-md5: Integrate type stubs for a people.js dependency.
- General refactorings that might change the behavior of some functions trivially
- Modifications to types in other .ts files that will be used in people.ts.

#### TypeScript conversion

- Changes to function signatures that do not require context outside people.js to be properly typed, with types inferred from the body of the function. These are less likely to undergo many revisions.
- Changes that add additional types from the app. Some of them require more care to deal with. We break this part into different phases.
  - `settings_data.TimePreferences`
  - `User`-related changes
  - `Message`-related changes (TBD)

#### Extra notes

- In many cases, we do not handle optional values when doing a lookup on one of the global mappings. The current approach would be silencing the typing error by appending `!` to assert non-`undefined`ness without changing the original implementation, but we might want further refactorings to avoid using it.
- `_add_user` currently can also be called with `extract_people_from_message` that adds a user (for deactivated users that aren't originally populated) containing only a subset of required fields on `User`. The involvement of these objects makes it type-unsafe whenever the global mappings for user storage are accessed.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

**Screenshots and screen captures:**

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [ ] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [ ] Explains differences from previous plans (e.g., issue description).
- [ ] Highlights technical choices and bugs encountered.
- [ ] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [ ] Each commit is a coherent idea.
- [ ] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [ ] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [ ] End-to-end functionality of buttons, interactions and flows.
- [ ] Corner cases, error conditions, and easily imagined bugs.
</details>
",False,24653,https://api.github.com/repos/zulip/zulip/pulls/24653,https://github.com/zulip/zulip/pull/24653,closed,207,132,1,5,5,3,2,0,"[{'name': 'size: XL'}, {'name': 'has conflicts'}]",2023-03-12 06:05:47+00:00,2023-05-11 20:49:09+00:00,5237002.0,"60 days, 14:43:22","[{'comment_id': 1136207010, 'comment_body': 'This likely needs a PROVISION_VERSION minor bump.', 'comment_created': datetime.datetime(2023, 3, 14, 21, 8, 55, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1136209727, 'comment_body': ""We should use `_`s  in the function name to match the codebase's style."", 'comment_created': datetime.datetime(2023, 3, 14, 21, 10, 45, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1136212209, 'comment_body': ""It'd be good to have a comment on this type for whether it is exactly the type for `User` we'll get from the server via the API, or whether any processing has happened. (Or if both appear in the file, we might want a separate `APIUser` type that is exactly the one the API gives and comments explaining the difference."", 'comment_created': datetime.datetime(2023, 3, 14, 21, 12, 56, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '6e4fdee026bad975ebd0461b778e087258baa6e9', 'committer_username': 'PIG208', 'committer_name': 'Zixuan Li', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 3, 8, 14, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65120e5f35c45c8145b1e334e6fd3188dad43aed', 'committer_username': 'PIG208', 'committer_name': 'Zixuan Li', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 3, 8, 14, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ba8c7a3b1437a426025bf90b332de4a68c78009', 'committer_username': 'PIG208', 'committer_name': 'Zixuan Li', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 3, 8, 14, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc200de595dd598beca08a0571d84cb24d960596', 'committer_username': 'PIG208', 'committer_name': 'Zixuan Li', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 3, 8, 14, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7da7ba30ee2c14b0aa2307c33a1920163372a04e', 'committer_username': 'PIG208', 'committer_name': 'Zixuan Li', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 3, 8, 14, 58, tzinfo=datetime.timezone.utc)}]",Zixuan Li,39874143,,User,,62,,31,33
1395737760,Prep commits for `people.js` typescript migration.,"This extracts some prep commits from the main conversion PR: #25539.
- To address Tim's review here [#25539 comment](https://github.com/zulip/zulip/pull/25539#discussion_r1224701491), I had some discussion with @PIG208 and I infer from that conversation that we should have two versions of `get_by_user_id` method one type-unsafe version which will be able to return `undefined` values and one which will be type-safe and should only not return `undefined` values. In this way callers of `get_by_user_id` won't need to assert the undefined return values.
So, I extracted a new method `maybe_get_user_by_id` which should be used by the callers which expects the undefined values and are already handling the undefined values.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->


<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26042,https://api.github.com/repos/zulip/zulip/pulls/26042,https://github.com/zulip/zulip/pull/26042,closed,98,44,23,4,6,10,3,0,"[{'name': 'size: XL'}, {'name': 'integration review'}, {'name': 'area: typescript migration'}]",2023-06-16 13:35:58+00:00,2023-07-02 23:57:16+00:00,1419678.0,"16 days, 10:21:18","[{'comment_id': 1232834388, 'comment_body': 'I think `ignore_missing` is no longer needed. This function will just `return people_by_user_id_dict.get(user_id)`, and we can call it in the new `get_by_user_id` with the assertion.', 'comment_created': datetime.datetime(2023, 6, 16, 22, 7, 59, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1233195047, 'comment_body': '@PIG208 Then what about the blueslip call we have in `get_by_user_id` ?\r\nFor example(compose_validate.js) calls like this-\r\n```javascript\r\nexport function needs_subscribe_warning(user_id, stream_id) {\r\n    // This returns true if all of these conditions are met:\r\n    //  * the user is valid\r\n    //  * the user is not already subscribed to the stream\r\n    //  * the user has no back-door way to see stream messages\r\n    //    (i.e. bots on public/private streams)\r\n    //\r\n    //  You can think of this as roughly answering ""is there an\r\n    //  actionable way to subscribe the user and do they actually\r\n    //  need it?"".\r\n    //\r\n    //  We expect the caller to already have verified that we\'re\r\n    //  sending to a valid stream and trying to mention the user.\r\n\r\n    const user = people.get_by_user_id(user_id);\r\n\r\n    if (!user) {\r\n        return false;\r\n    }\r\n```\r\nHandles undefined values but it should also report the missing user id via blueslip call right ?', 'comment_created': datetime.datetime(2023, 6, 18, 5, 29, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1233197293, 'comment_body': 'And then there are these calls for example in `rendered_markdown.js` line 93 which intentionally wants to skip blueslip errors but acknowledges the undefined values.\r\n```javascript\r\nconst person = people.get_by_user_id(user_id, true);\r\nif (person !== undefined) {\r\n    // Note that person might be undefined in some\r\n    // unpleasant corner cases involving data import.\r\n    set_name_in_mention_element(this, person.full_name);\r\n}\r\n```\r\nAnd hence we had the `ignore_missing` parameter for such cases.', 'comment_created': datetime.datetime(2023, 6, 18, 5, 32, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1234516855, 'comment_body': ""For those cases where `ignore_missing` is set to true, we can use `maybe_get_by_user_id` to preserve the behavior. As for the blueslip call, I agree that the check should be kept. So let's just remove `ignore_missing` and always log the error when the user id is not there. "", 'comment_created': datetime.datetime(2023, 6, 19, 22, 16, 34, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1234517165, 'comment_body': 'Perhaps in the future, with more modules migrated to TypeScript, it will be easier for us to determine in which cases there might be missing user ids.', 'comment_created': datetime.datetime(2023, 6, 19, 22, 17, 49, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1240246698, 'comment_body': 'This property is worth commenting on.', 'comment_created': datetime.datetime(2023, 6, 23, 19, 42, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1247212157, 'comment_body': 'This default value fails this code path: https://github.com/zulip/zulip/blob/8e63c0e42c8b948b64b00bfbf7e711b1c41814d8/web/src/popovers.js#L246-L251\r\nThe popover for spectator users assumes that the date joined is valid.', 'comment_created': datetime.datetime(2023, 6, 29, 21, 56, 41, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1247215673, 'comment_body': 'Perhaps we can just set it to the current time when the user is late added?', 'comment_created': datetime.datetime(2023, 6, 29, 22, 2, 35, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1247230259, 'comment_body': ""I think it's probably better to check `is_missing_server_data` and skip rendering `date_joined` in this case."", 'comment_created': datetime.datetime(2023, 6, 29, 22, 29, 39, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1248772871, 'comment_body': 'Yeah I think we can extend this if condition to check for `is_missing_server_data`.', 'comment_created': datetime.datetime(2023, 7, 1, 11, 8, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}]","[{'commit_sha': 'c97e4a2fca35c3c2fb33f7a6609f55891f573b9b', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd32858564515327128c50e49942424a6ed2e1021', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87d3cfc2c8d8d8bb49819d7627e5b4a4e449c7e0', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62ec4c6332f385d43149e70d283e45dc60a195dd', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1460225378,people: Revert to using `ignore_missing` parameter.,"We revert to use `ignore_missing` parameter for `maybe_get_user_by_id` function to avoid sending unnecessary `blueslip.error()` calls to sentry.

This bug was introduced in the commit [1c8bf4f050475073d641f6f4b5f27b143e8b1dd6](https://github.com/zulip/zulip/commit/1c8bf4f050475073d641f6f4b5f27b143e8b1dd6).

Discussion - [CZO](https://chat.zulip.org/#narrow/stream/6-frontend/topic/people.2Ejs.20typescript.20migration/near/1618488)

<!-- Describe your pull request here.-->

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26401,https://api.github.com/repos/zulip/zulip/pulls/26401,https://github.com/zulip/zulip/pull/26401,closed,4,5,4,1,1,0,1,0,[{'name': 'size: S'}],2023-08-02 18:08:33+00:00,2023-08-03 00:25:14+00:00,22601.0,6:16:41,[],"[{'commit_sha': '78b87ac11b6f8a7d54b6261548a73310c3880984', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Lalit,84276404,,User,,33,,16,48
1425853775,ts: Migrate `peer_data.js` module to TypeScript.,"This converts the module `peer_data.js` to TypeScript.

#### ~This is currently blocked by - people.js typescript migration which is progressing well in this PR #25539.~

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->
<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26216,https://api.github.com/repos/zulip/zulip/pulls/26216,https://github.com/zulip/zulip/pull/26216,closed,31,27,2,2,4,1,3,0,"[{'name': 'size: L'}, {'name': 'integration review'}, {'name': 'area: typescript migration'}]",2023-07-08 07:53:36+00:00,2023-07-17 17:37:29+00:00,812633.0,"9 days, 9:43:53","[{'comment_id': 1264053437, 'comment_body': '`user_ids || []` would be redundant `user_ids` is always guaranteed to be `number[]`. We can just use `user_ids` directly.', 'comment_created': datetime.datetime(2023, 7, 14, 18, 58, 7, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}]","[{'commit_sha': 'e22098022a89ac84a2d6c23835223bf717c6266e', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cc7be9de7c2d66ca5b7e9cd6ff74b914b30aa50', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1425841249,ts: Migrate `user_group_pill` module to TypeScript.,"Converts `user_group_pill` widget to typescript. Uses generic type definitions from `input_pill` widget module.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26215,https://api.github.com/repos/zulip/zulip/pulls/26215,https://github.com/zulip/zulip/pull/26215,closed,52,20,4,2,6,3,3,0,"[{'name': 'size: M'}, {'name': 'integration review'}, {'name': 'area: typescript migration'}]",2023-07-08 06:55:47+00:00,2023-07-17 17:38:24+00:00,816157.0,"9 days, 10:42:37","[{'comment_id': 1264061892, 'comment_body': ""Could you add a test to verify this change? Looks like we previously didn't have coverage for `append_user_group` and missed this bug."", 'comment_created': datetime.datetime(2023, 7, 14, 19, 5, 55, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1264063219, 'comment_body': ""This seems to be an overly defensive check.\r\nBecause we haven't implemented the UI for user groups, it is safe to remove this check now without worrying about breaking things."", 'comment_created': datetime.datetime(2023, 7, 14, 19, 7, 52, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1264505024, 'comment_body': 'Yeah, this was definitely a bug before this change, added test coverage for this function in a new commit.', 'comment_created': datetime.datetime(2023, 7, 15, 17, 20, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}]","[{'commit_sha': '0bb805a1f89a990cc880b1d512a1da62e6cfcd69', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b98292c9ec3066d77aa750ce7b1b6450747d87c', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1331305649,ts: Migrate `list_widget` to TypeScript.,"Migrates the `list_widget` to TypeScript.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [ ] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [ ] Explains differences from previous plans (e.g., issue description).
- [ ] Highlights technical choices and bugs encountered.
- [ ] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [ ] Each commit is a coherent idea.
- [ ] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [ ] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [ ] End-to-end functionality of buttons, interactions and flows.
- [ ] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25326,https://api.github.com/repos/zulip/zulip/pulls/25326,https://github.com/zulip/zulip/pull/25326,closed,651,599,28,9,14,33,3,0,"[{'name': 'size: XL'}, {'name': 'integration review'}, {'name': 'area: typescript migration'}]",2023-04-28 04:59:46+00:00,2023-07-17 18:31:52+00:00,6960726.0,"80 days, 13:32:06","[{'comment_id': 1234555424, 'comment_body': 'This comment needs to be updated. Because we have removed `prop`, and that we expect a different format for `sorting_function` if it is a `string`.', 'comment_created': datetime.datetime(2023, 6, 19, 23, 38, 58, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1234580759, 'comment_body': 'Is it possible that `filter_and_sort` is not called somewhere before `get_current_list` is called?', 'comment_created': datetime.datetime(2023, 6, 20, 1, 0, 31, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1234898221, 'comment_body': 'Yeah, we can be sure that `filtered_list` will have valid data before we access it via `get_current_list`, because we call `widget.clean_redraw` when we initialize/create a list widget and that method always call `filter_and_sort`.\r\nhttps://github.com/zulip/zulip/blob/ba54dfd83cc05f8c9fb0f602bb3d2576f35d6ef5/web/src/list_widget.ts#L476', 'comment_created': datetime.datetime(2023, 6, 20, 8, 7, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1234899897, 'comment_body': 'Oh yeah, nice catch!', 'comment_created': datetime.datetime(2023, 6, 20, 8, 9, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1235454368, 'comment_body': 'I think we are getting a `JQuery` element from the call site:\r\nhttps://github.com/zulip/zulip/blob/27878cce87c973100979e8a6fd8b33705b934fee/web/src/recent_topics_ui.js#L489-L493\r\nhttps://github.com/zulip/zulip/blob/27878cce87c973100979e8a6fd8b33705b934fee/web/src/recent_topics_ui.js#L586-L608', 'comment_created': datetime.datetime(2023, 6, 20, 15, 37, 9, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1235470945, 'comment_body': '`topic_row` is not consistent with our naming scheme for JQuery elements with a `$` prefix, so perhaps that can be fixed too.', 'comment_created': datetime.datetime(2023, 6, 20, 15, 49, 16, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1235491463, 'comment_body': 'In addition to `(item: Item) => Jquery`, `(item: Item) => string` is also acceptable.', 'comment_created': datetime.datetime(2023, 6, 20, 16, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1235500757, 'comment_body': 'We can type `predicate` and `filterer` as being mutually exclusive.', 'comment_created': datetime.datetime(2023, 6, 20, 16, 14, 40, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1235506637, 'comment_body': 'It seems that `$element` can be omitted:\r\nhttps://github.com/zulip/zulip/blob/27878cce87c973100979e8a6fd8b33705b934fee/web/src/recent_topics_ui.js#L840-L852\r\nand list widget has some checks handling that.', 'comment_created': datetime.datetime(2023, 6, 20, 16, 20, 2, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1235516912, 'comment_body': 'Should we just remove the test cases?', 'comment_created': datetime.datetime(2023, 6, 20, 16, 29, 19, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1238053485, 'comment_body': ""Yeah I think it makes sense to remove them now that we don't have over-defensive code to raise those errors 👍"", 'comment_created': datetime.datetime(2023, 6, 22, 6, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1238054172, 'comment_body': 'Oh right we should do that 👍', 'comment_created': datetime.datetime(2023, 6, 22, 6, 26, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1238056427, 'comment_body': 'I took a look and it seems there was only one place where `html_selector` was returning string. So I think it makes sense to return a `JQuery` collection there instead of string and avoid writing type like `string | JQuery` ?\r\nThis is the one place where we are returning string- \r\nhttps://github.com/zulip/zulip/blob/784622ee5d3e5bca4db9ebafba748acd797b427d/web/src/settings_users.js#L290', 'comment_created': datetime.datetime(2023, 6, 22, 6, 30, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1241004983, 'comment_body': ""Yeah, also it seems that `JQuery` instead of `string` is expected from `html_selector`:\r\nhttps://github.com/zulip/zulip/blob/d6c21c2237918f402988bd7e9463afa9253a1192/web/src/list_widget.js#L395-L401\r\nI'm not sure if this works previously for `settings_users` and whether it was an intentional decision to use a `string` there."", 'comment_created': datetime.datetime(2023, 6, 25, 2, 37, 45, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1245020164, 'comment_body': ""Yeah I think that `insert_rendered_row` was written only for use in `recent_topics_ui` and I don't think that this method previously worked for `settings_users`."", 'comment_created': datetime.datetime(2023, 6, 28, 10, 32, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1247249988, 'comment_body': 'Does this need to return `false` as a fallback? Might be worth a follow-up PR as a quick refactoring project.', 'comment_created': datetime.datetime(2023, 6, 29, 23, 12, 30, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1247378517, 'comment_body': '`html_selector` should return a `JQuery`. Same thing for `widget_3` in this test case.', 'comment_created': datetime.datetime(2023, 6, 30, 3, 34, 15, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1247404717, 'comment_body': ""I think we want `!.` or assertions here. `?.` makes it silently return when either `filter` or `predicate` is missing. It's better to fail here to indicate that there is a programming error."", 'comment_created': datetime.datetime(2023, 6, 30, 4, 5, 4, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1247406354, 'comment_body': 'This can be removed as well. `!opts` is always falsy.', 'comment_created': datetime.datetime(2023, 6, 30, 4, 9, 53, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1248780458, 'comment_body': 'Yeah, I am planning to refactor this module a bit after it gets translated to TypeScript so that I will know I am not breaking things when doing refactoring due to all those nice typescript errors. So yeah I will do a follow-up refactoring project :)', 'comment_created': datetime.datetime(2023, 7, 1, 11, 33, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1254729894, 'comment_body': 'I think this fix goes to a separate commit.', 'comment_created': datetime.datetime(2023, 7, 6, 17, 28, 29, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1261839877, 'comment_body': ""I can merge this as written, but I'm not convinced we wouldn't be happier with the default being set inside the `ListWidget` constructor if not passed; that seems a lot cleaner than making 20 files all ask for the identity function..."", 'comment_created': datetime.datetime(2023, 7, 13, 0, 15, 11, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1261841356, 'comment_body': ""How can I verify that the diffs in this commit don't change the sorting configuration?"", 'comment_created': datetime.datetime(2023, 7, 13, 0, 18, 31, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1261842862, 'comment_body': 'Where does this line come from?', 'comment_created': datetime.datetime(2023, 7, 13, 0, 21, 47, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1261843878, 'comment_body': ""What's the story with this change? It seems like a functional change unrelated to the typescript adjustment."", 'comment_created': datetime.datetime(2023, 7, 13, 0, 24, 2, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1261844242, 'comment_body': 'Should the if statement here be removed in favor of the next line using the `?`?', 'comment_created': datetime.datetime(2023, 7, 13, 0, 24, 50, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1263637421, 'comment_body': ""Definitely, it's just a hack for now based on the conversation we had here - https://chat.zulip.org/#narrow/stream/6-frontend/topic/list_widget.20typescript.20migration/near/1558934.\r\n\r\nBut the future plan here is that all these list_widget instances that use the default identity function should instead be using ids so that they will be passing actual meaningful `get_item` callbacks."", 'comment_created': datetime.datetime(2023, 7, 14, 11, 41, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1263644116, 'comment_body': 'I believe for that you will require some manual work 🥲, one thing I already did to verify that the sorting configuration remains the same was to check the corresponding templates which have these table headers which sets the `data-sort` prop and manually see which of these are using generic props.', 'comment_created': datetime.datetime(2023, 7, 14, 11, 49, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1263645109, 'comment_body': 'This was coming from `set_up_event_handlers` function well I actually extracted this change in a separate commit now with a clear message describing this change.', 'comment_created': datetime.datetime(2023, 7, 14, 11, 50, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1263646880, 'comment_body': ""Yeah, it deserves its own commit. This was done because the `render_item` of `list_widget` expects the callers to pass the data of `Item` type and not the raw `Key` type which here is `bot_user_id` so that's why I changed this so we don't have to do it in future when migrating `settings_user` module."", 'comment_created': datetime.datetime(2023, 7, 14, 11, 52, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1263653710, 'comment_body': 'Yeah looks like a reasonable change I have updated this commit with this change.', 'comment_created': datetime.datetime(2023, 7, 14, 12, 0, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1265718697, 'comment_body': 'OK', 'comment_created': datetime.datetime(2023, 7, 17, 17, 55, 34, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1265721369, 'comment_body': ""OK, I'll trust you to have checked it carefully; it certainly seems plausible that this configuration is the same as before."", 'comment_created': datetime.datetime(2023, 7, 17, 17, 57, 46, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '86297bb17defafda54ebe09c35fb25f3dd15eed1', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '272b7781180ad79e2e4519c0f0d8aa5e9ed5313c', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a61f89eafbddddda3f7042f8a9c5ce0e1626210', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a880b32f7f86583f92f54724340c356df2658642', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56e4d153636bc778ab6a61f7e07ee9646b8f1c32', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1be1a8dda44756c2ded08f00013c83d24021fb6', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84360e52b6651dce83ca648d499d8720407e03bd', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '052ea4d2ac3aaeb524a91fa99fe6bd80d0585b19', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1f1b78ae1ef461d980fc165d826759c1d8f9e42', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1427155235,ts: Migrate `message_overlay_ui` to TypeScript.,"Migrates `message_overlay_ui` module to TypeScript.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26223,https://api.github.com/repos/zulip/zulip/pulls/26223,https://github.com/zulip/zulip/pull/26223,closed,51,39,5,3,4,2,3,0,"[{'name': 'size: L'}, {'name': 'integration review'}, {'name': 'area: typescript migration'}]",2023-07-10 09:33:05+00:00,2023-07-17 23:24:16+00:00,654671.0,"7 days, 13:51:11","[{'comment_id': 1264032264, 'comment_body': '`_e` has been unused since 4a3211d6af137c3cb6e55d730a60480792414de3 (this function was refactored from `drafts_handle_events`). We should remove this parameter in a prep refactoring commit.', 'comment_created': datetime.datetime(2023, 7, 14, 18, 35, 41, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1264044537, 'comment_body': 'Checks like this on `JQuery` should better be written as `$obj.length > 0`.\r\nHere is a complete list of checks that can be fixed in a separate commit:\r\n```\r\neslint    |    37:9   warning  Unnecessary conditional, the types have no overlap                        @typescript-eslint/no-unnecessary-condition\r\neslint    |    39:16  warning  Unnecessary conditional, the types have no overlap                        @typescript-eslint/no-unnecessary-condition\r\neslint    |    44:9   warning  Unnecessary conditional, the types have no overlap                        @typescript-eslint/no-unnecessary-condition\r\neslint    |   124:9   warning  Unnecessary conditional, value is always truthy                           @typescript-eslint/no-unnecessary-condition\r\neslint    |   159:9   warning  Unnecessary conditional, the types have no overlap                        @typescript-eslint/no-unnecessary-condition\r\neslint    |   162:9   warning  Unnecessary conditional, the types have no overlap                        @typescript-eslint/no-unnecessary-condition\r\n```', 'comment_created': datetime.datetime(2023, 7, 14, 18, 49, 42, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}]","[{'commit_sha': 'c8c1c08499d9253b639480a6b486639a7fd6df21', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95bc791ef2fbb4a0e5c9522db626313f30f522bc', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '800a91029f4199cdc3d4a9d45e086ef02581ca7f', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1429859586,ts: Migrate `realm_playground.js` to TypeScript.,"This PR migrates `realm_playground` module to TypeScript with some prep commits.
- Passes the comparator function for comparing `pygments_language` via the initialization function to remove direct dependency on `typeahead_helper.js` which was the only file blocking the conversion.
- Removes the parameter `generated_pygments_data`  for initialization function because `realm_playground.js` was already directly importing the data so it does not make sense to pass it around.
- Main conversion commit.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26237,https://api.github.com/repos/zulip/zulip/pulls/26237,https://github.com/zulip/zulip/pull/26237,closed,56,21,4,4,4,1,5,0,"[{'name': 'size: L'}, {'name': 'integration review'}, {'name': 'buddy review'}, {'name': 'mentor review'}, {'name': 'area: typescript migration'}]",2023-07-11 17:09:35+00:00,2023-07-24 19:49:54+00:00,1132819.0,"13 days, 2:40:19","[{'comment_id': 1264024182, 'comment_body': ""`Object.values` doesn't seem to be necessary anymore given the context. I don't find any caller or legacy API feature level that relies on this implementation detail, so we can iterate over `playgrounds_data` directly here."", 'comment_created': datetime.datetime(2023, 7, 14, 18, 25, 42, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}]","[{'commit_sha': '8298f8999f9028ff96e81734f1d563490cd04cbf', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4723ba08ce222f37debd61138b7391cb4734329', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bce3e553865d1d4dc2b14a7cfbc3760a0b3a4d75', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb6e7e5f7f3fedad04519d8b4457e0164d44dfca', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1455145585,ts: Migrate `pm_conversations` module to typescript.,"- Migrates `pm_conversations.js` module to typescript.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26384,https://api.github.com/repos/zulip/zulip/pulls/26384,https://github.com/zulip/zulip/pull/26384,closed,23,12,1,1,4,1,3,0,"[{'name': 'size: M'}, {'name': 'integration review'}, {'name': 'area: typescript migration'}]",2023-07-30 13:36:40+00:00,2023-08-08 19:19:12+00:00,798152.0,"9 days, 5:42:32","[{'comment_id': 1282532059, 'comment_body': 'A type alias whose only purpose is to declare the keyword parameters of a particular function should be inlined into that function.', 'comment_created': datetime.datetime(2023, 8, 3, 0, 44, 47, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}]","[{'commit_sha': '07f28eee5e6e3d39aaf70003a82810512fe59b25', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1454787853,ts: Migrate `stream_data.js` module to TypeScript.,"Migrates `stream_data` module to TypeScript and also refines the existing types for stream and subscription objects present in `sub_store` module.

The main crux of this module is `create_sub_from_server_data` which generates `sub` objects which we use in web client from the data we get from the server.

The type for it's parameter `attrs` which I called `StreamAttrs` is defined as union of three types:-
1)  `NeverSubscribedStream & Pick<ExtraStreamAttrs, ""subscribed"" | ""previously_subscribed"">`
2) `ApiStreamSubscription & Pick<ExtraStreamAttrs, ""subscribed"" | ""previously_subscribed"">`

Both of these types are inferred by me by looking at the `populate_subscriptions` method which calls this function with attrs confirming to the types mentioned above.

3) `Stream & {stream_weekly_traffic: number | null; subscribers: number[]; subscribed: boolean}`

This type is inferred from the `create_streams` function which calls this function with attrs having the above type.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26381,https://api.github.com/repos/zulip/zulip/pulls/26381,https://github.com/zulip/zulip/pull/26381,closed,197,120,4,8,4,41,5,0,"[{'name': 'size: XL'}, {'name': 'integration review'}, {'name': 'buddy review'}, {'name': 'mentor review'}, {'name': 'area: typescript migration'}]",2023-07-29 15:05:30+00:00,2023-08-14 23:10:49+00:00,1411519.0,"16 days, 8:05:19","[{'comment_id': 1282533907, 'comment_body': '`new Date(Date.now()).getTime()` is just `Date.now()`.', 'comment_created': datetime.datetime(2023, 8, 3, 0, 49, 53, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 1282534752, 'comment_body': 'Just `BinaryDict<T>`. I don’t see any reason to default to `unknown`.', 'comment_created': datetime.datetime(2023, 8, 3, 0, 52, 11, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 1282537728, 'comment_body': 'It would be helpful to have zod schemas for `NeverSubscribedStream` and `ApiStreamSubscription`', 'comment_created': datetime.datetime(2023, 8, 3, 0, 59, 48, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1282539018, 'comment_body': 'Which raises the question: why is `BinaryDict` using case-folding `FoldDict`s to store numeric keys? We should replace them with `Map`s.', 'comment_created': datetime.datetime(2023, 8, 3, 1, 2, 19, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 1282540994, 'comment_body': 'Let’s fix the underlying definition of `code` so we don’t need casts like this.\r\n\r\n```diff\r\n-        code: 3,\r\n+        code: StreamPostPolicy.RESTRICT_NEW_MEMBERS\r\n```\r\n', 'comment_created': datetime.datetime(2023, 8, 3, 1, 7, 47, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 1282542643, 'comment_body': 'It’s inconsistent to do this to `is_subscribed_by_name`, `is_subscribed`, `is_web_public` but not `is_invite_only_by_stream_name`, `is_web_public_by_stream_name`.\r\n\r\nIt seems preferable to return `boolean` here rather than force callers to deal with `boolean | undefined`.', 'comment_created': datetime.datetime(2023, 8, 3, 1, 12, 7, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 1282544742, 'comment_body': 'I don’t think we’re expecting callers to pass `undefined` here; if they do, we should fix the callers.', 'comment_created': datetime.datetime(2023, 8, 3, 1, 17, 24, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 1282545872, 'comment_body': 'Could be simplified to `Omit<T, K> & Partial<T>`.', 'comment_created': datetime.datetime(2023, 8, 3, 1, 20, 9, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 1282547886, 'comment_body': 'If we’re creating subscription objects without `pin_to_top`, `email_address`, or `in_home_view`, that seems like a bug?', 'comment_created': datetime.datetime(2023, 8, 3, 1, 25, 5, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 1282548608, 'comment_body': '`pick_color` has a side effect of modifying `color_data.unused_colors`, so we shouldn’t speculatively call it here to build the defaults.', 'comment_created': datetime.datetime(2023, 8, 3, 1, 26, 53, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 1282635122, 'comment_body': 'Down below there is a line `delete attrs.subscribers`. If we avoid that, `subscribers` do not need to be optional.', 'comment_created': datetime.datetime(2023, 8, 3, 4, 41, 29, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1282636412, 'comment_body': 'I found the name `StreamAttrs` a bit confusing, and it is not necessary to define `attrs` prior to calling `create_sub_from_server_data`.\r\n\r\nWe can inline this type at `create_sub_from_server_data` so there is no need to define a separate type for this.', 'comment_created': datetime.datetime(2023, 8, 3, 4, 43, 53, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1282675289, 'comment_body': 'Yeah I had the same question. Changed `FoldDict` to `Map` in a separate commit.', 'comment_created': datetime.datetime(2023, 8, 3, 5, 49, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1282694916, 'comment_body': 'So we are for some reason also creating `sub` objects from `NeverSubscribedStream` type and never subscribed streams does not have these fields so some `sub` objects in theory will indeed not have these properties.\r\n\r\nRelated Discussion: [CZO](https://chat.zulip.org/#narrow/stream/6-frontend/topic/stream_data.20typescript.20migration/near/1615755).', 'comment_created': datetime.datetime(2023, 8, 3, 6, 17, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1282705707, 'comment_body': 'I think `subscribers` should be optional here because the type for `ApiStreamSubscription` does in fact have `subscribers` as an optional property.\r\nhttps://github.com/zulip/zulip/blob/6632eca2dcf2051043e95348658d6da02305669f/zerver/lib/types.py#L198.\r\n\r\nAlso we are not setting it to a default of maybe `[]` while making `attrs` for `create_sub_from_server_data` here - \r\nhttps://github.com/zulip/zulip/blob/6632eca2dcf2051043e95348658d6da02305669f/web/src/stream_data.js#L834-L841', 'comment_created': datetime.datetime(2023, 8, 3, 6, 28, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1282709928, 'comment_body': 'It should only be called when we indeed don\'t have a ""color"" property present in `attrs` object otherwise it will use the given value.\r\n\r\nAlso in previous version of code we were setting `sub.color` and calling `pick_color` just after creating this `sub` object, like this and I think the current ternary I wrote basically does the same thing right?\r\n\r\nAnd I think we do want to set the ""color"" property in the `sub` object itself so that typescript does not complain for incomplete type.\r\n\r\nhttps://github.com/zulip/zulip/blob/6632eca2dcf2051043e95348658d6da02305669f/web/src/stream_data.js#L762-L764', 'comment_created': datetime.datetime(2023, 8, 3, 6, 33, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1282716002, 'comment_body': 'Yeah we can inline this but I thought `StreamAttrs` was a little complex to look at first so I thought it maybe a good idea to define it outside function for better readability?', 'comment_created': datetime.datetime(2023, 8, 3, 6, 37, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1282738279, 'comment_body': 'So we should use zod to parse these objects right?\r\nhttps://github.com/zulip/zulip/blob/6632eca2dcf2051043e95348658d6da02305669f/web/src/stream_data.js#L811-L822 ', 'comment_created': datetime.datetime(2023, 8, 3, 7, 0, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1287750159, 'comment_body': 'Yeah I agree.', 'comment_created': datetime.datetime(2023, 8, 8, 22, 22, 33, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1287752424, 'comment_body': 'Hmm, that makes sense. Since we are deleting it from `attrs` before expanding it to `sub`, do we want to remove `subscribers` from `StreamSubscription`?', 'comment_created': datetime.datetime(2023, 8, 8, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1287753852, 'comment_body': ""That's reasonable too, but maybe with a better name like `StreamServerData`?"", 'comment_created': datetime.datetime(2023, 8, 8, 22, 29, 40, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1287762172, 'comment_body': 'We can do the same thing with `can_preview` returning `boolean` consistently.', 'comment_created': datetime.datetime(2023, 8, 8, 22, 46, 27, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1287781171, 'comment_body': 'Because `NeverSubscribedStream`, `ApiStreamSubscription`, `Stream` are all extended with `subscribed`, and that `previously_subscribed` is not optional for the first two types while defined optional on `ExtraStreamAttrs`, we can perhaps refactor the type like this:\r\n```\r\n    (\r\n      | (NeverSubscribedStream & {previously_subscribed: boolean})\r\n      | (ApiStreamSubscription & {previously_subscribed: boolean})\r\n      | (Stream & {stream_weekly_traffic: number | null; subscribers: number[]})\r\n    ) & {subscribed: boolean};\r\n```', 'comment_created': datetime.datetime(2023, 8, 8, 23, 27, 54, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1287811127, 'comment_body': 'Hmm, are you sure the `=== true` can be safely removed? I would worry it was there because of a concern that we wanted a value of `true|false` here, and not some other falsey value like `undefined` or `null` which `attrs.invite_only` could have had as a value. ', 'comment_created': datetime.datetime(2023, 8, 9, 0, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1287812270, 'comment_body': ""Hmm. If it's a stream you've never been subscribed to, we know `pin_to_top=false`, and `email_address` is I think `null` -- you don't have access to it? \r\n\r\nFor `in_home_view`, I don't think we ever want to access it -- it might be better to figure out a way to drop it from objects when first accepting them from the server in favor of the `is_muted` field that we actually use."", 'comment_created': datetime.datetime(2023, 8, 9, 0, 40, 29, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1287813451, 'comment_body': 'This commit message should note that 91d32d9f168b878acf536178a2d40131cb337bc0 is what made this possible, right?', 'comment_created': datetime.datetime(2023, 8, 9, 0, 43, 5, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1287815165, 'comment_body': 'Yeah that seems a bit cleaner.', 'comment_created': datetime.datetime(2023, 8, 9, 0, 46, 27, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1287816369, 'comment_body': ""I think this being a name like `ApiGenericStreamSubscription`  which is a union of types like `ApiNeverSubscribedStreamSubscription` might be a lot more readable?\r\n\r\nOr maybe this doesn't need a type -- shouldn't it be inferred from the `subs` parameter anyway?"", 'comment_created': datetime.datetime(2023, 8, 9, 0, 47, 49, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1287816985, 'comment_body': ""Would it make sense for `previously_subscribed` to be an always-present parameter? I guess it doesn't have a clear meaning for a stream you're currently subscribed to, so maybe that's a bad idea."", 'comment_created': datetime.datetime(2023, 8, 9, 0, 48, 26, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1287817287, 'comment_body': ""Why this change -- I thought we made `BinaryDict` no longer use `FoldDict`? Maybe worth putting in a separate commit if it's a bug fix."", 'comment_created': datetime.datetime(2023, 8, 9, 0, 49, 1, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1290112958, 'comment_body': 'Yeah, we can probably delete `in_home_view` the same way we delete `subscribers` ?\r\nhttps://github.com/zulip/zulip/blob/2db715030d86819de8493afb879fb5c9c5e43139/web/src/stream_data.js#L740', 'comment_created': datetime.datetime(2023, 8, 10, 13, 16, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1290116500, 'comment_body': 'Yeah it makes sense to remove it from `StreamSubscription` 👍', 'comment_created': datetime.datetime(2023, 8, 10, 13, 19, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1290185216, 'comment_body': ""This was just typescript specific change, actual code won't have any effect but if we are using a `for` loop to loop over the `*values()` method of `fold_dict` we need `IterableIterator` Type just to satisfy typescript which was the use-case in `stream_data`.\r\n\r\nSo we can omit this change for now and will do it as needed in the future migrations 🙂"", 'comment_created': datetime.datetime(2023, 8, 10, 14, 2, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1290186036, 'comment_body': 'Yeah mentioned this commit in the message 👍', 'comment_created': datetime.datetime(2023, 8, 10, 14, 3, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1290190463, 'comment_body': 'I like the name `ApiGenericStreamSubscription`, so changed it to this name for now.', 'comment_created': datetime.datetime(2023, 8, 10, 14, 6, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1290194222, 'comment_body': 'That refactored type looks much better to me thanks @PIG208, as for `previously_subscribed` field I am not so sure about making it non-optional.', 'comment_created': datetime.datetime(2023, 8, 10, 14, 8, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1290196750, 'comment_body': 'I checked all the possible code paths up until this line and it seems `invite_only` should always exist on `attrs` type.\r\nBut to be extra safe we can leave `=== true` in there but once we have more concrete `zod` schemas we can revisit this.', 'comment_created': datetime.datetime(2023, 8, 10, 14, 10, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1291578462, 'comment_body': ""> I guess it doesn't have a clear meaning for a stream you're currently subscribed to, so maybe that's a bad idea\r\n\r\nWe are already populating it to `true` for currently subscribed streams, so changing it to be non-optional won't make a difference in the end.\r\n\r\nWe should just make `subscribed` and `previously_subscribed` arguments of `create_sub_from_server_data`, add them inside the function to the new subscription, and remove them from this type entirely. So then in `create_stream`, I think the right value for it would be `false`.\r\n\r\n```typescript\r\ntype ApiGenericStreamSubscription =\r\n      | NeverSubscribedStream\r\n      | ApiStreamSubscription\r\n      | (Stream & {stream_weekly_traffic: number | null; subscribers: number[]})\r\n```"", 'comment_created': datetime.datetime(2023, 8, 11, 16, 45, 2, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1291887596, 'comment_body': 'Yeah, that seems like a good plan.', 'comment_created': datetime.datetime(2023, 8, 11, 23, 39, 47, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1292168434, 'comment_body': 'Alright dropped `in_home_view` from `ApiStreamSubscription` interface also when we will have actual zod schemas for these types, the zod will automatically remove these fields for us.', 'comment_created': datetime.datetime(2023, 8, 12, 8, 56, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1292168810, 'comment_body': 'Yeah this sounds good to me, did this refactoring in a separate commit 👍', 'comment_created': datetime.datetime(2023, 8, 12, 8, 57, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}]","[{'commit_sha': '5dc599e07cc1a387c1d0d0da6fa21985ba029c4c', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3292660d69917eada8f96499aeecd1ce89699cd', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '980c74e8da16722541ae95998ccbd2cd94b08f0b', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcbf62f4927ed337f40b76aa47db217d973cbaf9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5d109fc670ef30bab30d8cb1c1038bad3556dc06', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '69cdf6cf2fc0cd4bb88019117f30b0703ef29d65', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64f59d8daf0cd5ee82d52d5cf916814d7a6d7582', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b2400d26886c0e48d3f2622e5d9b1e4734ebe104', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1475351069,"ts: Migrate `hash_util`, `browser_history`, `spectators` to TypeScript.","This PR migrates 3 modules:-
- `hash_util`
- `browser_history`
- `spectators`

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26497,https://api.github.com/repos/zulip/zulip/pulls/26497,https://github.com/zulip/zulip/pull/26497,closed,53,42,4,3,1,1,4,0,"[{'name': 'size: L'}, {'name': 'buddy review'}, {'name': 'mentor review'}, {'name': 'area: typescript migration'}]",2023-08-15 02:32:05+00:00,2023-08-15 16:58:17+00:00,51972.0,14:26:12,"[{'comment_id': 1294877907, 'comment_body': ""I guess this `!` is a case where our type for `Message` isn't precise enough for TypeScript to infer that this must exist if it's a stream message. \r\n\r\nCan be a good follow-up to look into."", 'comment_created': datetime.datetime(2023, 8, 15, 16, 57, 23, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '439b3031d1af6648a499b324705a50bc19987df1', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '462c2b52124a3b7437301d32c2fb7b19eda0e4b1', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fab69ad7352e1a09f247c535f679fd6ac11af825', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1474755903,ts: Migrate `presence.js` module to typescript.,"Migrates `presence.js` module to TypeScript.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26488,https://api.github.com/repos/zulip/zulip/pulls/26488,https://github.com/zulip/zulip/pull/26488,closed,50,17,2,1,2,2,3,0,"[{'name': 'size: L'}, {'name': 'integration review'}, {'name': 'area: typescript migration'}]",2023-08-14 16:41:53+00:00,2023-08-16 18:46:41+00:00,180288.0,"2 days, 2:04:48","[{'comment_id': 1295219127, 'comment_body': ""I'm not entirely sure, but why do we need the `|| undefined` fallback if `active_timestamp` is known to be `number | undefined`?\r\n\r\nI understand that a truthiness check might be desired, but is it possible for any of these to be `0`? One more thing is that we are having similar fallbacks of the form `|| 0` elsewhere in this file that are sort of doing the reverse of this check here."", 'comment_created': datetime.datetime(2023, 8, 15, 22, 50, 31, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1295635857, 'comment_body': 'Yeah I think there may be a potential refactoring we can do here, I will look for why we have these undefined values lying all over the place in this module as a follow-up.', 'comment_created': datetime.datetime(2023, 8, 16, 9, 33, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}]","[{'commit_sha': '06c651f784ea4a1088cfb708575ca721486a6611', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1345877646,Break dependencies between message_scroll and fetch_status.,"This PR contains two commits:
1) Lifts up the formation of the `Filter` object from `message_list_data` to `all_messages_data` by removing the default parameter.
2) Extracts `message_scroll_loading` from `message_scroll` to remove dependency on `message_scroll` from `fetch_status` which allows us to easily convert `fetch_status` into typescript.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25516,https://api.github.com/repos/zulip/zulip/pulls/25516,https://github.com/zulip/zulip/pull/25516,closed,90,61,13,2,4,0,2,0,"[{'name': 'size: XL'}, {'name': 'area: typescript migration'}]",2023-05-10 18:30:54+00:00,2023-05-14 18:24:32+00:00,345218.0,"3 days, 23:53:38",[],"[{'commit_sha': '1b3c14d9c49dbdfec8f9c68d896bacf54b07df1f', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55cd4bb6583b42a6c5ba62c7689f6d2390be295f', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1355759610,refactor: Move `maybe_get_stream_name` from `stream_data` to `sub_store`.,"This PR moves `maybe_get_stream_name` function from `stream_data` to `sub_store` as it didn't have any dependency on `stream_data` and it also helps us to cut off dependency on `stream_data` for some of the modules including `user_topics`.

<!-- Describe your pull request here.-->

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25657,https://api.github.com/repos/zulip/zulip/pulls/25657,https://github.com/zulip/zulip/pull/25657,closed,49,46,15,1,1,0,1,0,[{'name': 'size: L'}],2023-05-18 13:57:02+00:00,2023-05-18 15:46:16+00:00,6554.0,1:49:14,[],"[{'commit_sha': '32b658fcbf0166e581362edda4dc5bd4933a5ddc', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1382623644,Breaking simple import cycles,"Finishing up some unfinished commits on the PR #25871.
This brings the number of import cycles from 78 to 70 measured by https://github.com/andersk/cycle-analysis.

Related [CZO](https://chat.zulip.org/#narrow/stream/6-frontend/topic/simple.20import.20cycles) topic.

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25921,https://api.github.com/repos/zulip/zulip/pulls/25921,https://github.com/zulip/zulip/pull/25921,closed,443,406,11,5,2,2,3,0,"[{'name': 'area: refactoring'}, {'name': 'size: XL'}, {'name': 'maintainer review'}]",2023-06-07 12:55:18+00:00,2023-06-08 23:21:00+00:00,123942.0,"1 day, 10:25:42","[{'comment_id': 1221844768, 'comment_body': 'Hm, should this last block be a hook as well? I think `notifications.update_unread_counts` could have the `unread.calculate_notifiable_count` call inlined into it, or `unread.get_counts` could do that; maybe the latter makes more sense?', 'comment_created': datetime.datetime(2023, 6, 7, 15, 58, 33, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1221847335, 'comment_body': '@amanagr can you review this commit?', 'comment_created': datetime.datetime(2023, 6, 7, 16, 0, 32, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': 'de0070c0163d83c273b2adb04eecf7d64bb2ad2f', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a2ceca8e6955d352c7908667061eaed96d74154', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a647ebb4077ed6e2ae3c4e831e6d872a75b2607f', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f10cc0c50181972336997d802a6264df528cab04', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01888118d387dccd9c931af11664c78edaf0f8d5', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1374937522,Unfinished pairing on cutting import cycles with Anders,"Posting this because I want to talk about it in chat.zulip.org; I'm unlikely to have time to finish it, but this reduces the minimum number of imports to cut in order to remove all import cycles in our JS codebase, measured by https://github.com/andersk/cycle-analysis from ~85 to ~68 or so.",False,25871,https://api.github.com/repos/zulip/zulip/pulls/25871,https://github.com/zulip/zulip/pull/25871,closed,345,361,34,16,2,0,2,0,"[{'name': 'size: XL'}, {'name': 'has conflicts'}]",2023-06-02 00:03:23+00:00,2023-06-07 22:06:43+00:00,511400.0,"5 days, 22:03:20",[],"[{'commit_sha': 'db67bd6f98fa4461f3cd9416a4c710c490756790', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a732686ef12adb23ba958b319ec2e6b47f020318', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd738751696891a1d73f68e6e1e5bae7d28a4e5bd', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2640f00362d8e7b2343983436b0c011db4d48327', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '643c9e9dfcaf8832024d24529424a61069a1d9df', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58c2a2b04646940ad5ffd309297816fc6214e27a', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dec4bef7e68c10f6099b89f5f439f7921f046a1', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2dbc094b2f52de09b3805d2ef28de2f03f3bdf80', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '072dee65a74f51adab06293a7183d9d06348a0c7', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff8aca4d0e96200030b8658487b61e1631cb0476', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4fa19e793d011227ae88d8edd8e96b486247861', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1964a8f23ef62c0c51ea3b21c0cb406fa67642c', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff426efabb999ed9064eae61fc24740633df0ef2', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '609c467e3dc24b4e71816580199f91ced0b601c1', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a151e4b2491435e45b0f3831d30dfcff1e0897bc', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67c1e1e318aa336b26faa41c3a1122548b356ad5', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}]",Tim Abbott,2746074,,User,,24,,6,644
1397035089,Break some import cycles.,"This breaks some import cycles and brings down the metrics `126, 69` to `118, 66` measured by the https://github.com/andersk/cycle-analysis.

- For breaking import cycles for `compose_actions` module with `compose` module I used the hooks pattern.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26052,https://api.github.com/repos/zulip/zulip/pulls/26052,https://github.com/zulip/zulip/pull/26052,closed,69,27,10,3,5,7,1,0,[{'name': 'size: L'}],2023-06-18 07:57:47+00:00,2023-06-19 23:54:29+00:00,143802.0,"1 day, 15:56:42","[{'comment_id': 1233394479, 'comment_body': 'This unnecessarily takes linear time in the number of hooks already registered; many calls would take quadratic time. I know we don’t call this often, but `compose_clear_box_hooks.push(...hooks)` is simpler *and* more efficient. Or better, just accept one hook at a time: why register `[f, g, h]` when you could register `() => {f(); g(); h()}`.', 'comment_created': datetime.datetime(2023, 6, 18, 22, 13, 19, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 1233395221, 'comment_body': 'Use a keyword argument.', 'comment_created': datetime.datetime(2023, 6, 18, 22, 20, 25, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 1233539298, 'comment_body': 'Yeah makes sense, fixed it!', 'comment_created': datetime.datetime(2023, 6, 19, 5, 21, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1234514607, 'comment_body': ""@andersk just a note on coding patterns -- it seems bad to have this bit of code copy/pasted into individual tests -- it seems like the kind of thing that might just end up diverging. I don't have an easy answer for how to avoid it... but I suppose it's possible that the best right answer would be to just past a `noop` function in these tests rather than trying to pass the hook that we use in production; I'd be kinda surprised if most of these tests did anything but mock the action of `compose_recipient.update_placeholder_text` anyway"", 'comment_created': datetime.datetime(2023, 6, 19, 22, 9, 26, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1234514943, 'comment_body': 'This looks like it is a linter fix that belongs in the previous commit.', 'comment_created': datetime.datetime(2023, 6, 19, 22, 10, 26, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1234515094, 'comment_body': 'As a general rule we prefer to put comments on their own line by themselves, and probably we should just move this one here.', 'comment_created': datetime.datetime(2023, 6, 19, 22, 10, 47, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1234820782, 'comment_body': 'Yeah, the ideal structure would be that we take advantage of these callbacks to let us test components using natural interfaces without haphazardly mocking their recursive dependencies. The test can pass noop callbacks, or callbacks that assert they’re called with the right arguments, etc.\r\n\r\nIt’s not going to be easy to transform our cyclic spaghetti blob into a structure that fully supports this, because the whole problem with a cyclic spaghetti blob is that it resists being transformed into anything, but it’s good to identify steps we can take in that direction.', 'comment_created': datetime.datetime(2023, 6, 20, 6, 58, 27, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}]","[{'commit_sha': 'd58037c22036943dedb871b5da0fd9d2b09f398e', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df49c2232d39b05931ae9d565d19681b9ae99f1f', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4dd7c9517cfb30345cf02a9a6fbb8059ef530f35', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1338548581,compose: Make it possible to schedule messages with wildcard mention confirmation.,"Before it was impossible to schedule a message if it had a wildcard @-mention because we were showing a warning banner and on clicking ""Yes, send"" the message was sent immediately.

Fixed this by doing:
- [x] When the banner is triggered via ""Schedule message"", change the button text to ""Yes, schedule"".
- [x] Clicking ""Yes, schedule"" should pop up the ""Schedule message"" modal for getting the message scheduled.

Fixes: #25426 

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

**Screenshots and screen captures:**
<video src=""https://user-images.githubusercontent.com/84276404/236234896-2c5a9a4e-f0c3-4bc4-8454-523311936d12.webm"">


<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25437,https://api.github.com/repos/zulip/zulip/pulls/25437,https://github.com/zulip/zulip/pull/25437,closed,144,97,7,5,7,7,5,0,"[{'name': 'bug'}, {'name': 'area: compose (misc)'}, {'name': 'priority: high'}, {'name': 'size: XL'}, {'name': 'release goal'}]",2023-05-04 14:17:38+00:00,2023-05-11 00:54:28+00:00,556610.0,"6 days, 10:36:50","[{'comment_id': 1185316341, 'comment_body': 'Global variable like this are a bad pattern; they require a lot of care to avoid ending up with them in the wrong state. We should just pass it as a parameter to `validate` and plumb it through the 3-4 functions from there to `show_wildcard_warnings`.', 'comment_created': datetime.datetime(2023, 5, 4, 17, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1185319931, 'comment_body': 'Oh okay makes sense will do that.', 'comment_created': datetime.datetime(2023, 5, 4, 17, 40, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1186555401, 'comment_body': ""`scheduling_message` of `for_schedule_message` is probably a clearer variable name -- the point is what we're trying to do, not which function happens to be the way we do that."", 'comment_created': datetime.datetime(2023, 5, 5, 23, 28, 27, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1186555936, 'comment_body': ""Let's replace this with a `compose_banner` method to avoid too much of an abstraction boundary violation. Also see 6dc10f8696f432b47ae2e96ad9715d0ae3e94c71 and https://github.com/zulip/zulip/pull/25422; we should make sure we don't make it harder to have this code be correct for the message editing code path."", 'comment_created': datetime.datetime(2023, 5, 5, 23, 30, 39, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1188718428, 'comment_body': '@timabbott So I abstracted that logic in a method `update_or_append_banner` is that ok and I think #25422 will probably be fine after merging this except some merge conflicts of course.', 'comment_created': datetime.datetime(2023, 5, 9, 14, 43, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1190455901, 'comment_body': ""This is a rebase conflict resolution error; basically reverting 5113f4e2e96dca2e55ef5b251295c35d00e8684c. You revert it back in the next commit, so it's not visible in the final diff, but this sort of mistake is a reason why to always review your individual commits (either via a graphical viewer like `gitk` or on GitHub after every time you resolve merge conflicts when rebasing -- it's really easy to do the wrong thing."", 'comment_created': datetime.datetime(2023, 5, 10, 22, 49, 32, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1190494695, 'comment_body': 'Oops sorry idk how that happened thanks for pointing that out, I will be extra careful from now when resolving commits.', 'comment_created': datetime.datetime(2023, 5, 11, 0, 20, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}]","[{'commit_sha': 'b0cee8615816cd9781878db7c39f983e177ebdbc', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f3da4b175ba338521551b2bddbe54304feec2ed', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9a53eb51f73c52f3def0670155c7c1bb9745343', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df4ab369d9761e0cd35837543aa206bb5d4946f7', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ea6528045b305038c1fa598f4ecce4444799827', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1354414505,people: Add `version` parameter for medium sized avatar urls.,"We need to append the `version` parameter when constructing the urls for medium-sized images so that the browser updates the image in real time when the user uploads a new avatar.

Discussion: [CZO](https://chat.zulip.org/#narrow/stream/137-feedback/topic/avatar.20live.20update)

Fixes #25558.

<!-- Describe your pull request here.-->


<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25642,https://api.github.com/repos/zulip/zulip/pulls/25642,https://github.com/zulip/zulip/pull/25642,closed,11,4,3,1,4,2,5,0,"[{'name': 'bug'}, {'name': 'area: real-time sync'}, {'name': 'area: uploads'}, {'name': 'size: S'}, {'name': 'release goal'}]",2023-05-17 15:33:28+00:00,2023-05-19 20:52:00+00:00,191912.0,"2 days, 5:18:32","[{'comment_id': 1198240972, 'comment_body': 'I am not 100% certain that every user object this module manages has an `avatar_version`; see the code path involving `report_late_add`. So I think we probably need logic to check if `avatar_version` is set, and if not, use 1 as a fallback, at least until we can eliminate the code paths that lead to `report_late_add` being a thing.', 'comment_created': datetime.datetime(2023, 5, 18, 19, 49, 42, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1198635250, 'comment_body': 'Yeah makes sense! Fixed it.', 'comment_created': datetime.datetime(2023, 5, 19, 7, 25, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}]","[{'commit_sha': 'b97b91fa8d4a3e57761f1e44b968645a10a65ea7', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1358152194,settings_playground: Fix sorting issues in code playgrounds table.,"Removed the sorting functions which were sorting under the assumption that our comparison items were a list instead I used the generic sort functions functionality of our `list_widget` module.

Discussion: [CZO](https://chat.zulip.org/#narrow/stream/9-issues/topic/Sorting.20issue.20in.20code.20playgrounds.2E)

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

**Screenshots and screen captures:**
| Before | After |
|--------|--------|
| ![Before](https://github.com/zulip/zulip/assets/84276404/d8f84ff8-af97-4031-a23a-fa62b06f5563) | ![Screenshot 2023-05-21 142132](https://github.com/zulip/zulip/assets/84276404/3c244476-2b3c-49a9-8094-93c82c0c99dc) | 

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25700,https://api.github.com/repos/zulip/zulip/pulls/25700,https://github.com/zulip/zulip/pull/25700,closed,4,25,2,1,3,2,2,0,"[{'name': 'size: M'}, {'name': 'integration review'}]",2023-05-21 08:56:13+00:00,2023-05-22 16:36:25+00:00,114012.0,"1 day, 7:40:12","[{'comment_id': 1199818385, 'comment_body': 'Is `data-sort=""url""` a mistake from before? I don\'t see any sort function named `url` prior to this change.', 'comment_created': datetime.datetime(2023, 5, 21, 19, 49, 18, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1200347775, 'comment_body': 'Yes, that indeed was a mistake from before we didn\'t have a sorting function for ""url"" before.\r\n\r\nAlso, I think this is another reason to pass every sorting functions explicitly whether be it generic sorts or custom sorts to avoid having silent bugs like this. (Context - #25326)', 'comment_created': datetime.datetime(2023, 5, 22, 10, 56, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}]","[{'commit_sha': '67739d698032a76a2c27273de546d2f401274495', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1379211925,docs: Fix data type for `submessages` field on `message` type.,"Before this commit our docs mentioned `string[]` data type for `submessages` field on the `message` object. This commit changes the type to `object[]` and correctly mentions all fields of the `submessage` object.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25889,https://api.github.com/repos/zulip/zulip/pulls/25889,https://github.com/zulip/zulip/pull/25889,closed,24,2,1,1,2,0,1,0,[{'name': 'size: M'}],2023-06-05 15:19:04+00:00,2023-06-05 23:21:01+00:00,28917.0,8:01:57,[],"[{'commit_sha': '83b9968528a178d87b66770ffb9e924441ed6345', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1384238983,starred_messages_ui: Add initialize method for this module.,"We need to call `rerender_ui` once on the initial page load, hence we need to initialize `starred_message` module and call `rerender_ui` together.

Fixes #25935.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->
<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25936,https://api.github.com/repos/zulip/zulip/pulls/25936,https://github.com/zulip/zulip/pull/25936,closed,7,2,2,1,3,0,5,0,"[{'name': 'bug'}, {'name': 'area: left sidebar (misc)'}, {'name': 'priority: high'}, {'name': 'size: S'}, {'name': 'integration review'}]",2023-06-08 10:54:08+00:00,2023-06-08 16:37:06+00:00,20578.0,5:42:58,[],"[{'commit_sha': 'f66dbff874ab8c0de6bf3ae2f639c57c7d09eb6d', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1216166448,docs: Add documentation for delete emoji endpoint.,"This endpoint was previously marked as `intentionally_undocumented` but that was a mistake.

Removed `intentionally_undocumented` and added proper documentation with valid `python_example` for this Endpoint.

<!-- Describe your pull request here.-->

Fixes: #24084
[CZO](https://chat.zulip.org/#narrow/stream/378-api-design/topic/Endpoint.20for.20delete.20emoji)

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

**Screenshots and screen captures:**

![Screenshot 2023-01-25 130810](https://user-images.githubusercontent.com/84276404/214506136-e0180825-6b54-4b4f-9b26-b378a5841713.png)

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,24175,https://api.github.com/repos/zulip/zulip/pulls/24175,https://github.com/zulip/zulip/pull/24175,closed,65,7,9,1,7,21,4,0,"[{'name': 'area: emoji'}, {'name': 'area: api'}, {'name': 'size: L'}, {'name': 'integration review'}]",2023-01-25 07:38:55+00:00,2023-06-28 17:23:47+00:00,13340692.0,"154 days, 9:44:52","[{'comment_id': 1098050103, 'comment_body': 'You forgot to delete this comment.', 'comment_created': datetime.datetime(2023, 2, 7, 0, 19, 38, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1098050900, 'comment_body': 'We need a `**Changes**` entry here, with an API feature level bump and API changelog entry -- this is true for any API change, no matter how small.\r\n\r\nhttps://zulip.readthedocs.io/en/latest/tutorials/new-feature-tutorial.html#update-documentation has details on how to do this correctly..\r\n\r\nAlso, the wording for the description feels a bit off in style compared with other endpoints; can you do an edit pass?', 'comment_created': datetime.datetime(2023, 2, 7, 0, 21, 32, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1098212565, 'comment_body': 'What would you like in the description? I just followed `upload-custom-emoji` description style wording for it.', 'comment_created': datetime.datetime(2023, 2, 7, 6, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1112549413, 'comment_body': 'So the changes entry should be describing the API change -- which is just that we should document here a 404 response, and document as `**Changes**` that the error used to be a 400 status code. ', 'comment_created': datetime.datetime(2023, 2, 21, 5, 9, 45, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1112549874, 'comment_body': 'This line is wrong -- the API endpoint has existed since before feature level 1. Please delete it.', 'comment_created': datetime.datetime(2023, 2, 21, 5, 10, 40, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1112550376, 'comment_body': 'Let\'s change the naming to be `deactivate-custom-emoji` -- that\'s how we explain the feature in the UI. https://zulip.com/help/custom-emoji#deactivate-custom-emoji. Similarly the text should all talk about ""deactivate a custom emoji"", etc.', 'comment_created': datetime.datetime(2023, 2, 21, 5, 11, 43, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1112550577, 'comment_body': '""deactivate a custom emoji"" here should be a Markdown link to the /help/ article for custom emoji noted above.', 'comment_created': datetime.datetime(2023, 2, 21, 5, 12, 11, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1112550726, 'comment_body': 'This change looks like a typo. ', 'comment_created': datetime.datetime(2023, 2, 21, 5, 12, 31, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1112551042, 'comment_body': ""This is wrong -- the change is that the status code went from 400 to 404; the API endpoint' s behavior has otherwise been the same since feature level 1; it just wasn't documented before. We don't document the history of the API docs here; just the history of the API itself."", 'comment_created': datetime.datetime(2023, 2, 21, 5, 13, 15, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1112871630, 'comment_body': 'Right, it seems like it was my formatter messing with markdown files, fixed it!', 'comment_created': datetime.datetime(2023, 2, 21, 10, 34, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1112873596, 'comment_body': ""Oh, I was thinking from the user's perspective as it will look like it is a newly added API endpoint 😅, nevermind removed it!"", 'comment_created': datetime.datetime(2023, 2, 21, 10, 35, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1112874670, 'comment_body': 'Thanks for clearing that out!', 'comment_created': datetime.datetime(2023, 2, 21, 10, 36, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1113707712, 'comment_body': 'nit: verb here should match the new name of the endpoint', 'comment_created': datetime.datetime(2023, 2, 22, 0, 35, 28, tzinfo=datetime.timezone.utc), 'commenter': 'gnprice', 'type': 'User'}, {'comment_id': 1240830984, 'comment_body': 'Ths **Changes** entry both here and in `zulip.yaml` do not use the same phrasing style that we use for other API changes. @laurynmm can help if needed but you should be able to fix this by just studying the wording we use elsewhere.', 'comment_created': datetime.datetime(2023, 6, 24, 14, 45, 59, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1242564673, 'comment_body': 'This should use the present tense when describing the current API, so ""will now return"" is wrong.', 'comment_created': datetime.datetime(2023, 6, 26, 18, 0, 55, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1242635568, 'comment_body': 'Here\'s a version:\r\n\r\n```suggestion\r\n        **Changes**: Before Zulip 8.0 (feature level 190), this endpoint returned an\r\n        HTTP status code of 400 when the emoji did not exist, instead of 404.\r\n```\r\n\r\nThe current API is already described by what\'s outside the ""Changes"" note (if it weren\'t, that\'d be an important thing to fix), so the ""Changes"" note can focus on what used to be different.\r\n', 'comment_created': datetime.datetime(2023, 6, 26, 19, 1, 54, tzinfo=datetime.timezone.utc), 'commenter': 'gnprice', 'type': 'User'}, {'comment_id': 1242638147, 'comment_body': '```suggestion\r\n* [`DELETE /realm/emoji/{emoji_name}`](/api/deactivate-custom-emoji): This endpoint\r\n  now returns an HTTP status code of 404 when an emoji does not exist, instead of 400.\r\n```\r\n', 'comment_created': datetime.datetime(2023, 6, 26, 19, 3, 10, tzinfo=datetime.timezone.utc), 'commenter': 'gnprice', 'type': 'User'}, {'comment_id': 1243626109, 'comment_body': 'I think it would be better to cut the first part and start with the verb, ""Deactivate a custom emoji"". I think it would make sense to make a similar change to the `api/upload-custom-emoji` documentation as well, but as a separate pull request.\r\n\r\nAlso, you\'ll want to use relative links for the help center in the API documentation (`/help/...`). And there\'s no linter rule, but in general it\'s good to keep the line breaks in this file similar to other sections.', 'comment_created': datetime.datetime(2023, 6, 27, 12, 6, 52, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 1243633152, 'comment_body': 'Let\'s just make this a sentence, ""Note that deactivated emoji ..."".\r\n\r\nAlso, what happens to reactions, stream descriptions or user statuses that have the custom emoji when it\'s deactivated? Do they also remain like existing messages? It would be good to clarify that here.\r\n\r\nAlso, we should add a sentence, maybe before this about who can deactivate custom emoji. I believe it\'s admins can deactivate any custom emoji and other users can only deactivate custom emoji that they uploaded.', 'comment_created': datetime.datetime(2023, 6, 27, 12, 12, 20, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 1243635166, 'comment_body': 'Also, note the line breaks in this file for other feature level entries.', 'comment_created': datetime.datetime(2023, 6, 27, 12, 14, 11, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 1244959066, 'comment_body': 'Yeah so the deactivated emoji remains visible at all places so extended that sentence to include all other things.\r\nAlso, added the sentence for clarifying who can deactivate the custom emoji.', 'comment_created': datetime.datetime(2023, 6, 28, 9, 38, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}]","[{'commit_sha': '8f229ad36389d8704b55b39aa1abc5fa90d5b08b', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1412040137,settings_emoji: Fix file upload bug in upload emoji modal.,"Before this commit if a user pressed enter to submit the add emoji form the uploaded emoji was getting cleared.

This was happening because when we pressed enter the browser tried to submit the form, because we had two buttons inside that form one for clearing uploaded emoji and one for uploading emoji they were being treated as ""submit"" button and hence their callback ran which in result was responsible for the bug.

Fixed this by explicitly setting the `type` attribute for those buttons to `type=button` so that they will not be treated as ""submit"" button. Also added the `form_id` option for `dialog_widget` which is needed if we do want to correctly submit the form by pressing enter.

Fixes: #24972

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

**Screenshots and screen captures:**

#### Before
![before](https://github.com/zulip/zulip/assets/84276404/6ead32a6-f31a-488e-aa36-abc8d19f8d29)

#### After
![after](https://github.com/zulip/zulip/assets/84276404/b1960bba-90b4-4ef8-b7bf-9d6a8841127b)

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [ ] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26144,https://api.github.com/repos/zulip/zulip/pulls/26144,https://github.com/zulip/zulip/pull/26144,closed,3,2,2,1,2,0,5,0,"[{'name': 'bug'}, {'name': 'area: emoji'}, {'name': 'area: settings (admin/org)'}, {'name': 'size: XS'}, {'name': 'area: popovers'}]",2023-06-28 17:13:09+00:00,2023-06-29 17:16:29+00:00,86600.0,"1 day, 0:03:20",[],"[{'commit_sha': 'cda87e4291fa26cb19e3f313aae5e2fba01c5636', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1406472562,dialog_widget: Prevent default action when submitting the form.,"We should prevent the default html behavior when submitting the forms in the dialog_widgets to avoid reloading the whole page when the user clicks the submit button.

Fixes: #26104

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

**Screenshots and screen captures:**

https://github.com/zulip/zulip/assets/84276404/9af91f6b-66d9-4d85-bc1b-dc5da8e99581


https://github.com/zulip/zulip/assets/84276404/84e965d0-a4ce-4d9b-b245-8f2ed187fea8


<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26115,https://api.github.com/repos/zulip/zulip/pulls/26115,https://github.com/zulip/zulip/pull/26115,closed,9,29,8,2,6,2,3,0,"[{'name': 'bug'}, {'name': 'area: settings (admin/org)'}, {'name': 'size: M'}]",2023-06-25 04:46:32+00:00,2023-07-05 21:25:10+00:00,923918.0,"10 days, 16:38:38","[{'comment_id': 1241259712, 'comment_body': ""I'm wondering if we need to add `e.stopPropagation();` here as well."", 'comment_created': datetime.datetime(2023, 6, 25, 18, 25, 13, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1245016343, 'comment_body': 'Yeah I think we should add it.\r\nI looked at every user of `dialog_widget` and found that every user is calling both `preventDefault` and `stopPropagation` calls.', 'comment_created': datetime.datetime(2023, 6, 28, 10, 28, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}]","[{'commit_sha': 'f6bd4adaf56ff3f82cda4e07f07e051c4b56bd5e', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75c126236dbdbd2931390bafde964ab2e9083cd8', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1382943004,tests: Improve automated tests for submessages.,"Added an additional test case to `test_submessages.py` for testing the message object containing `submessages` meta data.

Previous to this commit we were never validating the `submessage` schema in the `message` objects.

Fixes #25896.

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [ ] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [ ] End-to-end functionality of buttons, interactions and flows.
- [ ] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25925,https://api.github.com/repos/zulip/zulip/pulls/25925,https://github.com/zulip/zulip/pull/25925,closed,31,1,2,1,4,2,5,0,"[{'name': 'area: testing-coverage'}, {'name': 'area: documentation (api and integrations)'}, {'name': 'size: M'}, {'name': 'area: widgets'}, {'name': 'integration review'}]",2023-06-07 15:42:08+00:00,2023-07-06 23:35:46+00:00,2534018.0,"29 days, 7:53:38","[{'comment_id': 1247179405, 'comment_body': 'We can possibly verify that this request is successful with `self.assert_json_success`', 'comment_created': datetime.datetime(2023, 6, 29, 21, 10, 36, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1247179849, 'comment_body': ""Let's also check if the `result` contains the submessages as expected."", 'comment_created': datetime.datetime(2023, 6, 29, 21, 11, 15, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}]","[{'commit_sha': 'a327f67d5fbcf906cc9867f5b10b78f0c321fb61', 'committer_username': 'Lalit3716', 'committer_name': 'Lalit', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 16, 13, 15, 41, tzinfo=datetime.timezone.utc)}]",Lalit,84276404,,User,,33,,16,48
1389529703,ts: Convert `signup.js` to TypeScript,"Not only did typescript conversion, but also did some preliminary commits to allow adding type annotations and allow type check.",True,25999,https://api.github.com/repos/zulip/zulip/pulls/25999,https://github.com/zulip/zulip/pull/25999,closed,52,33,8,4,2,6,4,0,"[{'name': 'size: L'}, {'name': 'integration review'}, {'name': 'mentor review'}, {'name': 'area: typescript migration'}]",2023-06-12 22:05:56+00:00,2023-08-14 23:00:20+00:00,5446464.0,"63 days, 0:54:24","[{'comment_id': 1227295167, 'comment_body': '## Client-side URL redirect\n\nUntrusted URL redirection depends on a [user-provided value](1).\n\n[Show more details](https://github.com/zulip/zulip/security/code-scanning/328)', 'comment_created': datetime.datetime(2023, 6, 12, 22, 15, 45, tzinfo=datetime.timezone.utc), 'commenter': 'github-advanced-security[bot]', 'type': 'Bot'}, {'comment_id': 1227295168, 'comment_body': '## DOM text reinterpreted as HTML\n\n[DOM text](1) is reinterpreted as HTML without escaping meta-characters.\n\n[Show more details](https://github.com/zulip/zulip/security/code-scanning/329)', 'comment_created': datetime.datetime(2023, 6, 12, 22, 15, 46, tzinfo=datetime.timezone.utc), 'commenter': 'github-advanced-security[bot]', 'type': 'Bot'}, {'comment_id': 1235044588, 'comment_body': 'This will require a minor provision bump.', 'comment_created': datetime.datetime(2023, 6, 20, 10, 8, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1235103231, 'comment_body': 'I think you can use non-null assertion here safely because this only returns undefined when called on an empty JQuery collection. I think just to be safe you can also probably use `expectOne` here. So it will be like this -\r\n```typescript\r\nconst name_val = $(""#id_team_name"").expectOne().val()!\r\n```', 'comment_created': datetime.datetime(2023, 6, 20, 11, 4, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1292788065, 'comment_body': ""`expectOne()` is a good hint.  `expectOne` and non-null assertion are equivalent here. `expectOne` fails only when the other non-null assertion fails; conversely it's true as well. From another perspective it's redundant"", 'comment_created': datetime.datetime(2023, 8, 13, 13, 17, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1292789660, 'comment_body': 'fixed!', 'comment_created': datetime.datetime(2023, 8, 13, 13, 27, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}]","[{'commit_sha': '4b0ab04f1f9e09032b5a6ef88714b7c0f7cd12b5', 'committer_username': 'jychen630', 'committer_name': 'Junyao Chen', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 12, 2, 56, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dfc915ded0dab3eb6acba2d15d8be38f07cb8c8', 'committer_username': 'jychen630', 'committer_name': 'Junyao Chen', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 12, 2, 56, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b930e4aaf2012e740af25478f93fec52f23ac94', 'committer_username': 'jychen630', 'committer_name': 'Junyao Chen', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 12, 2, 56, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fb7b0cf1a21d1226ed61714341705dbf818ef07', 'committer_username': 'jychen630', 'committer_name': 'Junyao Chen', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 12, 2, 56, 35, tzinfo=datetime.timezone.utc)}]",Junyao Chen,36392136,,User,,20,,75,32
1462410262,ts: Migrate `stream_create_subscribers_data.js` and `user_group_create_members_data.js` to TypeScript.,"`stream_create_subscribers_data.js` and `user_group_create_members_data.js`  are very similar.

<!-- Describe your pull request here.-->

Fixes: <!-- Issue link, or clear description.-->

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

**Screenshots and screen captures:**

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [ ] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [ ] Explains differences from previous plans (e.g., issue description).
- [ ] Highlights technical choices and bugs encountered.
- [ ] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [ ] Each commit is a coherent idea.
- [ ] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [ ] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [ ] End-to-end functionality of buttons, interactions and flows.
- [ ] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26417,https://api.github.com/repos/zulip/zulip/pulls/26417,https://github.com/zulip/zulip/pull/26417,closed,29,21,4,3,3,21,4,0,"[{'name': 'size: M'}, {'name': 'integration review'}, {'name': 'mentor review'}, {'name': 'area: typescript migration'}]",2023-08-04 06:35:05+00:00,2023-08-17 18:38:14+00:00,1166589.0,"13 days, 12:03:09","[{'comment_id': 1285056722, 'comment_body': 'We can omit generic type for `Set` here since we have already specified it above when declaring `user_id_set`.\r\n\r\nAlso I think we should conditionally add `current_user_id` to `user_id_set` to avoid `undefined` type.\r\n```ts\r\nexport function initialize_with_current_user(): void {\r\n    const current_user_id = page_params.user_id;\r\n    user_id_set = new Set();\r\n    if (current_user_id !== undefined) {\r\n        user_id_set.add(current_user_id);\r\n    }\r\n}\r\n```', 'comment_created': datetime.datetime(2023, 8, 5, 13, 32, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1285056993, 'comment_body': ""Also once we don't have undefined value in `user_id_set`, this function can just return `number[]`."", 'comment_created': datetime.datetime(2023, 8, 5, 13, 33, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1289496131, 'comment_body': 'Looks like the `undefined` user id is never expected to appear when the functions in this file are called? If so we can remove the `undefined` annotation in the set.\r\n\r\nRegarding to the generic type annotation, i think either is fine.', 'comment_created': datetime.datetime(2023, 8, 10, 3, 19, 23, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1289496453, 'comment_body': 'thats true ', 'comment_created': datetime.datetime(2023, 8, 10, 3, 19, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1289497240, 'comment_body': 'Do you think we should give a blueslip error or warning when an undefined user id is encountered?', 'comment_created': datetime.datetime(2023, 8, 10, 3, 21, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1294266308, 'comment_body': 'What I did is that I traced all the way back to verify `page_params.user_id` will not be `undefined` at the point that the function is being called. This is because when user is able to create and initialize a stream, this user is authenticated and thus a `user_id` is always available. Therefore, adding an assertion when undefined user id is detected to handle a confirmed error.', 'comment_created': datetime.datetime(2023, 8, 15, 7, 14, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1294276808, 'comment_body': 'Yeah an assert statement sounds good 👍', 'comment_created': datetime.datetime(2023, 8, 15, 7, 29, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1296148383, 'comment_body': ""Since we are sure now that `user_id_set` won't have an undefined value, so why are we using this `filter` here?"", 'comment_created': datetime.datetime(2023, 8, 16, 16, 15, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1296150149, 'comment_body': 'It seems like `people.get_users_from_ids` method is incorrectly typed it should have return value of `User[]` and not `(User | undefined)[]` we should fix that and remove this `filter` call here. ', 'comment_created': datetime.datetime(2023, 8, 16, 16, 17, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1296152186, 'comment_body': 'Just use `User[]` here instead of `people.User[]`.', 'comment_created': datetime.datetime(2023, 8, 16, 16, 19, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1296154996, 'comment_body': 'After fixing return type for `people.get_users_from_ids` we can omit this filter call here as well.', 'comment_created': datetime.datetime(2023, 8, 16, 16, 21, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1296155534, 'comment_body': 'Just use `User[]` here as well.', 'comment_created': datetime.datetime(2023, 8, 16, 16, 22, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1296172954, 'comment_body': 'How do you know `people.get_users_from_ids` method is incorrectly typed?\r\n\r\nBefore the changes from `people.ts` gets merge, we should keep the filter in this PR.', 'comment_created': datetime.datetime(2023, 8, 16, 16, 38, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1296175658, 'comment_body': ""okay, i see your point for `people.get_users_from_ids`. but can you make sure whether is the input param's type gets wrong or  return value's param?"", 'comment_created': datetime.datetime(2023, 8, 16, 16, 41, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1296563385, 'comment_body': 'Yep, fixed', 'comment_created': datetime.datetime(2023, 8, 17, 0, 43, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1296563595, 'comment_body': 'Fixed `people.ts` and removed filtering here as well.', 'comment_created': datetime.datetime(2023, 8, 17, 0, 44, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1296563633, 'comment_body': 'Fixed!', 'comment_created': datetime.datetime(2023, 8, 17, 0, 44, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1296564682, 'comment_body': ""I looked into `people.ts` and believe that it's safe to change the return type of `people.get_users_from_ids` from `(User | undefined)[]`  to `User[]`with the rest of the `people.ts` unchanged. For convenience, this change is implemented in the first commit in this PR."", 'comment_created': datetime.datetime(2023, 8, 17, 0, 47, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1296564765, 'comment_body': ""yeah, some code from previous haven't not been fixed. Now fixed."", 'comment_created': datetime.datetime(2023, 8, 17, 0, 47, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1297469992, 'comment_body': 'Yeah `get_users_from_ids` internally uses a type safe version for mapping user id to `User` objects to it should be safe to change return type here.', 'comment_created': datetime.datetime(2023, 8, 17, 16, 32, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1297603032, 'comment_body': 'It may be worth discussing in a new #frontend thread the idea of using a fake `user_id` like `-1` rather than` undefined` for spectators to avoid the need to od this sort of assert.', 'comment_created': datetime.datetime(2023, 8, 17, 18, 37, 55, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '212e37ae8ecc380c99c2a25fa0df7a0ffcc4b5e4', 'committer_username': 'jychen630', 'committer_name': 'Junyao Chen', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 12, 2, 56, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a19df060430b148c5651edb2e5f4215c09c92459', 'committer_username': 'jychen630', 'committer_name': 'Junyao Chen', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 12, 2, 56, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a75eb0ef6fd018cfcb1e818b889de29cd8803754', 'committer_username': 'jychen630', 'committer_name': 'Junyao Chen', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 12, 2, 56, 35, tzinfo=datetime.timezone.utc)}]",Junyao Chen,36392136,,User,,20,,75,32
1462504120,ts: Migrate `settings_ui.js` to TypeScript.,"<!-- Describe your pull request here.-->

Fixes: <!-- Issue link, or clear description.-->

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

**Screenshots and screen captures:**

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [ ] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [ ] Explains differences from previous plans (e.g., issue description).
- [ ] Highlights technical choices and bugs encountered.
- [ ] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [ ] Each commit is a coherent idea.
- [ ] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [ ] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [ ] End-to-end functionality of buttons, interactions and flows.
- [ ] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26418,https://api.github.com/repos/zulip/zulip/pulls/26418,https://github.com/zulip/zulip/pull/26418,closed,23,14,2,1,2,4,2,0,"[{'name': 'size: M'}, {'name': 'area: typescript migration'}]",2023-08-04 07:59:29+00:00,2023-08-16 00:17:40+00:00,1009091.0,"11 days, 16:18:11","[{'comment_id': 1285055270, 'comment_body': 'We could also type this parameter like this, since we are directly passing data to the `request_method`.\r\n```suggestion\r\n    data: Parameters<AjaxRequestHandler>[0][""data""],\r\n```', 'comment_created': datetime.datetime(2023, 8, 5, 13, 22, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1289493553, 'comment_body': 'Right, I also this in dialog_widget.ts. I was not wonder how would you be sure that `data` will be one of the keys in `Parameters<AjaxRequestHandler>[0]`?', 'comment_created': datetime.datetime(2023, 8, 10, 3, 14, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1294280657, 'comment_body': 'We have `data` key in the `args` parameter of `AjaxRequestHandler` that should be enough for ts compiler to infer that `data` will always be a key in `Parameters<AjaxRequestHandler>[0]`', 'comment_created': datetime.datetime(2023, 8, 15, 7, 34, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1295055265, 'comment_body': 'fixed that, thanks!', 'comment_created': datetime.datetime(2023, 8, 15, 20, 3, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}]","[{'commit_sha': '896de30fe7d6a5940e445b7f7344295a889c6b2b', 'committer_username': 'jychen630', 'committer_name': 'Junyao Chen', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 12, 2, 56, 35, tzinfo=datetime.timezone.utc)}]",Junyao Chen,36392136,,User,,20,,75,32
1476989603,"ts: Migrate `compose_fade_helper.js` , `compose_fade_users.js`, and `recent_topics_util.js` to TypeScript.","This PR consists of 5 commits:

1. sub_store: Move PartialBy to util.
This aids reusability of this utility type in the codebase.

2. util: Redefine Recipient type.
Redefined `Recipient` type by spliting it into `DirectRecipient`
and `StreamRecipient`. Splitting makes each of sub-type reusable. 
This is a prep-commit for migrating `compose_fade_helpers`.

3. ts: Migrate `compose_fade_helper.js` to TypeScript.
 
4. ts: Migrate `compose_fade_users.js` to TypeScript.
Created a type `Configuration` in `compose_fade_users.ts` that very likely will be re-used in `compose_fade.js`, `buddy_data.js`,  `buddy_list.js`, etc.

5. ts: Migrate `recent_topics_util.js`  to TypeScript.

<!-- Describe your pull request here.-->

Fixes: <!-- Issue link, or clear description.-->

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

**Screenshots and screen captures:**

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [ ] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [ ] Explains differences from previous plans (e.g., issue description).
- [ ] Highlights technical choices and bugs encountered.
- [ ] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [ ] Each commit is a coherent idea.
- [ ] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [ ] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [ ] End-to-end functionality of buttons, interactions and flows.
- [ ] Corner cases, error conditions, and easily imagined bugs.
</details>
",False,26505,https://api.github.com/repos/zulip/zulip/pulls/26505,https://github.com/zulip/zulip/pull/26505,closed,72,17,5,4,2,8,4,0,"[{'name': 'size: L'}, {'name': 'buddy review'}, {'name': 'mentor review'}, {'name': 'area: typescript migration'}]",2023-08-16 07:41:36+00:00,2023-09-22 16:27:12+00:00,3228336.0,"37 days, 8:45:36","[{'comment_id': 1295569052, 'comment_body': ""Removing `throw new Error` is what I'm particularly not sure about - we may need caution when muting an error. Some paths to think about:\r\n1. The function param `msg` might not be annotated with a comprehensive type (currently `msg: Recipient` whose type is only `private` or `stream`)\r\n2. Error (if happens) should be reported earlier at the caller (i.e before entering `get_key_from_message` function)"", 'comment_created': datetime.datetime(2023, 8, 16, 8, 37, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1296181749, 'comment_body': 'Can we make this field here optional instead of using `PartialBy` later when defining `Recipient` type?', 'comment_created': datetime.datetime(2023, 8, 16, 16, 47, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1296182719, 'comment_body': 'Should we export this type and reuse it in `compose_fade_helper` ?', 'comment_created': datetime.datetime(2023, 8, 16, 16, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1296568516, 'comment_body': '`Recipient` in `util.ts` is slightly different from `compose_fade_helper`. `Recipient` in `util.ts` might expect `to_user_ids` to be undefined for reasons pointed in [this discussion](https://github.com/zulip/zulip/pull/23032#discussion_r1038480596).\r\n\r\n`Recipient` in `compose_fade_users.js` expects a valid `to_user_ids` though.', 'comment_created': datetime.datetime(2023, 8, 17, 0, 56, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1296569112, 'comment_body': 'We can. But not sure which one is better. `DirectRecipient` and `StreamRecipient` are re-usable in other files like `compose_fade.js` too.', 'comment_created': datetime.datetime(2023, 8, 17, 0, 58, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1298364317, 'comment_body': 'What makes it guaranteed that the `to_user_ids` will not be undefined for `focused_recipient` in `compose_fade_helper`?\r\n\r\nThis is where we set the `focused_recipient` for `compose_fade_helper`:-\r\nhttps://github.com/zulip/zulip/blob/170a857bc13bdb902133950cd1476c3effe18fcb/web/src/compose_fade.js#L38-L42\r\n\r\nBut it looks like that `people.reply_to_to_user_ids_string` can return `undefined` as well so we might add an assertion here in case we are sure that here in this particular case this function will not return `undefined` value.', 'comment_created': datetime.datetime(2023, 8, 18, 11, 53, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1299088476, 'comment_body': 'Adding an assertion when setting its value makes sense. Fixed. Thanks for tracking it down', 'comment_created': datetime.datetime(2023, 8, 19, 4, 40, 23, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1333983743, 'comment_body': 'This is called with a message, not with a recipient, so we need to fix `Message` to be a supertype of `Recipient`. Fixed in #26812.', 'comment_created': datetime.datetime(2023, 9, 22, 7, 24, 38, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}]","[{'commit_sha': 'e53f5f15a10309a1da3d167de307514992bf079b', 'committer_username': 'jychen630', 'committer_name': 'Junyao Chen', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 12, 2, 56, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a623c27263f18b43133835d7889c9305c50df687', 'committer_username': 'jychen630', 'committer_name': 'Junyao Chen', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 12, 2, 56, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bebeaf72b99ed851b2a9475b8f84e873aa4dc02', 'committer_username': 'jychen630', 'committer_name': 'Junyao Chen', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 12, 2, 56, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '290a9c6da3f93879e06a552b704ba5db28201ade', 'committer_username': 'jychen630', 'committer_name': 'Junyao Chen', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 12, 2, 56, 35, tzinfo=datetime.timezone.utc)}]",Junyao Chen,36392136,,User,,20,,75,32
1372984086,ts: Convert part of `web/src/portico` module to TypeScript ,"This PR continues the work on #24931, and converts some files not involved in import cycles in `portico` module together. I also created a `page_params.ts` for this particular module. In order to address the problem that the page params (`web/src/page_params.ts`) for entire `web` module will be removed once imported, I have made `web/src/portico/page_params.ts` imported at the very begining  of `web/src/bundles/portico.ts`, on which many entry points depend, according to `webpack.assets.json`.

Files being converted are

```
portico/help.ts
portico/google_analytics.ts
portico/landing-pages.ts
portico/desktop-login.ts
portico/integrations.ts
```",False,25864,https://api.github.com/repos/zulip/zulip/pulls/25864,https://github.com/zulip/zulip/pull/25864,open,306,143,14,8,7,35,4,0,"[{'name': 'size: XL'}, {'name': 'has conflicts'}, {'name': 'integration review'}, {'name': 'area: typescript migration'}]",2023-05-31 21:54:26+00:00,,0.0,,"[{'comment_id': 1214843784, 'comment_body': '## Client-side URL redirect\n\nUntrusted URL redirection depends on a [user-provided value](1).\n\n[Show more details](https://github.com/zulip/zulip/security/code-scanning/327)', 'comment_created': datetime.datetime(2023, 6, 2, 21, 10, 7, tzinfo=datetime.timezone.utc), 'commenter': 'github-advanced-security[bot]', 'type': 'Bot'}, {'comment_id': 1215231664, 'comment_body': ""We probably don't want to include this dependency (https://www.npmjs.com/package/gtag)"", 'comment_created': datetime.datetime(2023, 6, 3, 5, 26, 8, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1215232724, 'comment_body': '`@types/gtag.js` should be added as a `devDependency`. You can do that by using `pnpm install --save-dev @types/gtag.js` (shorthand `pnpm i -D @types/gtag.js`)', 'comment_created': datetime.datetime(2023, 6, 3, 5, 27, 29, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1215236062, 'comment_body': 'This comment can be removed now. I think it was referring to the type annotation of `const gtag`, which is now pretty complete as `Gtag.Gtag`.', 'comment_created': datetime.datetime(2023, 6, 3, 5, 31, 7, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1215238247, 'comment_body': 'We can use `minimalistic-assert` in place of `throw new Error` for here and the following checks.', 'comment_created': datetime.datetime(2023, 6, 3, 5, 37, 49, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1218510313, 'comment_body': 'Adjusted accordingly. Please check.', 'comment_created': datetime.datetime(2023, 6, 5, 19, 38, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1218510432, 'comment_body': 'Adjusted accordingly. Please check! ', 'comment_created': datetime.datetime(2023, 6, 5, 19, 38, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1218510569, 'comment_body': 'Make sense. Adjusted accordingly. Please check! ', 'comment_created': datetime.datetime(2023, 6, 5, 19, 38, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1219227099, 'comment_body': 'Can we use minimalistic-assert here as well to be consistent?', 'comment_created': datetime.datetime(2023, 6, 6, 8, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1219228135, 'comment_body': 'We should use assert statement here as well.', 'comment_created': datetime.datetime(2023, 6, 6, 8, 58, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1219238231, 'comment_body': 'Same here, we should assert here.', 'comment_created': datetime.datetime(2023, 6, 6, 9, 4, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1219238276, 'comment_body': 'We should use assert statement here as well.', 'comment_created': datetime.datetime(2023, 6, 6, 9, 4, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1219242638, 'comment_body': 'Probably a nit but we currently kind of follows a convention of putting all the type definitions at the top of the file, so maybe we should follow it here as well.', 'comment_created': datetime.datetime(2023, 6, 6, 9, 7, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1219251183, 'comment_body': 'Can we probably change this to a simple variable like `current_loading_path: string | null` instead of an object given it has only one property `name` ?', 'comment_created': datetime.datetime(2023, 6, 6, 9, 11, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1219297553, 'comment_body': 'This is coming from `web/third/bootstrap` so we should move this field up. Currently it looks like that this is coming from `jquery-caret-plugin` which is not true.', 'comment_created': datetime.datetime(2023, 6, 6, 9, 41, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Lalit3716', 'type': 'User'}, {'comment_id': 1223656461, 'comment_body': 'I agree. good spot!', 'comment_created': datetime.datetime(2023, 6, 9, 0, 2, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1223658069, 'comment_body': ""don't really know why the previous authors wrote a single var in local loading object years ago. Let me try to research on this and see if it's possible to flatten it."", 'comment_created': datetime.datetime(2023, 6, 9, 0, 6, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1223667585, 'comment_body': 'yeah, seems no obvious reason to make that const complicated. Changed it to a simple string as suggested in a separate commit, thanks !', 'comment_created': datetime.datetime(2023, 6, 9, 0, 22, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1224896378, 'comment_body': 'Looks like an accidental formatting change?', 'comment_created': datetime.datetime(2023, 6, 9, 23, 40, 38, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1224897263, 'comment_body': 'This also looks like an unintentional formatting change.', 'comment_created': datetime.datetime(2023, 6, 9, 23, 43, 53, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1224899849, 'comment_body': 'We can use `document.querySelector<HTMLInputElement>(""#token"")!;` here.', 'comment_created': datetime.datetime(2023, 6, 9, 23, 47, 10, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1224901354, 'comment_body': 'We can use `document.querySelectorAll<HTMLIFrameElement>("".twitter-tweet iframe"");` here.', 'comment_created': datetime.datetime(2023, 6, 9, 23, 50, 58, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1227263726, 'comment_body': 'We will need a minor version bump for this', 'comment_created': datetime.datetime(2023, 6, 12, 21, 29, 50, tzinfo=datetime.timezone.utc), 'commenter': 'PIG208', 'type': 'User'}, {'comment_id': 1228921806, 'comment_body': 'oh, ok', 'comment_created': datetime.datetime(2023, 6, 14, 3, 3, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1228923304, 'comment_body': ""Just confirm, I think you're talking about \r\n\r\n> \\# * adding a dependency only requires a minor version bump;\r\n\r\nA comment in `version.py`?"", 'comment_created': datetime.datetime(2023, 6, 14, 3, 7, 3, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1229001102, 'comment_body': 'Just did, may you please check again. Thank you Zixuan!!', 'comment_created': datetime.datetime(2023, 6, 14, 5, 25, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1270425863, 'comment_body': 'Did!', 'comment_created': datetime.datetime(2023, 7, 21, 8, 59, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1292808691, 'comment_body': 'fixed!', 'comment_created': datetime.datetime(2023, 8, 13, 15, 9, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}, {'comment_id': 1295276026, 'comment_body': ""What does this do? I don't quite understand the commit message."", 'comment_created': datetime.datetime(2023, 8, 16, 1, 2, 11, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1295277093, 'comment_body': 'We should be extra sure to test that analytics still work.', 'comment_created': datetime.datetime(2023, 8, 16, 1, 5, 12, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1295277737, 'comment_body': ""@jychen630 have you tested that the Zulip desktop app's Google auth login process still works well with this change?\r\n\r\nIf not we should be sure to verify that on chat.zulip.org as soon as this is test-deployed there."", 'comment_created': datetime.datetime(2023, 8, 16, 1, 7, 2, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1295277866, 'comment_body': 'In any case @andersk can you review this commit as its maintainer?', 'comment_created': datetime.datetime(2023, 8, 16, 1, 7, 23, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1295278392, 'comment_body': ""Let's move this commit to a separate PR; we're deleteing the carousel in https://github.com/zulip/zulip/pull/24301 and I'd prefer to merge that before this commit."", 'comment_created': datetime.datetime(2023, 8, 16, 1, 8, 30, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1295364626, 'comment_body': 'Yeah, I am not sure how to test it as well.', 'comment_created': datetime.datetime(2023, 8, 16, 4, 25, 1, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1299551180, 'comment_body': 'Did in a separate commit. Please check.', 'comment_created': datetime.datetime(2023, 8, 21, 3, 19, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jychen630', 'type': 'User'}]","[{'commit_sha': 'e1a3118f0bb3ec533e027ad99ee7faeced8bd8e0', 'committer_username': 'jychen630', 'committer_name': 'Junyao Chen', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 12, 2, 56, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c8abe8152dc836eea3b74bb124d78ed037ec5f1', 'committer_username': 'jychen630', 'committer_name': 'Junyao Chen', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 12, 2, 56, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1902eb2ee1b0165a5a3e6a6f672303f746de7aa', 'committer_username': 'jychen630', 'committer_name': 'Junyao Chen', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 12, 2, 56, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcf00eb796c617117c7b5a86079a9a50088888ca', 'committer_username': 'jychen630', 'committer_name': 'Junyao Chen', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 12, 2, 56, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '315fc205d8d5cbb7a6c7d02702cc53c4e559d8d2', 'committer_username': 'jychen630', 'committer_name': 'Junyao Chen', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 12, 2, 56, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f4a1ee04ec4cb4cdee7b82fc5083a43d5612904', 'committer_username': 'jychen630', 'committer_name': 'Junyao Chen', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 12, 2, 56, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '413890506e388044fd8cf9f00928c4c92651ef8d', 'committer_username': 'jychen630', 'committer_name': 'Junyao Chen', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 12, 2, 56, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8520d90eafc75b3c6861f24f9ccdc99be34a42d9', 'committer_username': 'jychen630', 'committer_name': 'Junyao Chen', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 12, 2, 56, 35, tzinfo=datetime.timezone.utc)}]",Junyao Chen,36392136,,User,,20,,75,32

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
43160685,zulip,zulip/zulip,Python,7612,21002,376,1133,60235,2480,28,804,"[{'id': 1853020266, 'number': 29933, 'closed': datetime.datetime(2024, 5, 20, 16, 13, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 3, 8, 39, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1496045.0, 'time_delta': '17 days, 7:34:05', 'additions': 33, 'deletions': 8, 'state': 'closed'}, {'id': 1849213377, 'number': 29907, 'closed': datetime.datetime(2024, 5, 2, 19, 1, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 1, 5, 15, 21, tzinfo=datetime.timezone.utc), 'time_taken': 135969.0, 'time_delta': '1 day, 13:46:09', 'additions': 7, 'deletions': 2, 'state': 'closed'}, {'id': 1844017551, 'number': 29877, 'closed': datetime.datetime(2024, 8, 14, 4, 2, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 27, 17, 8, 26, tzinfo=datetime.timezone.utc), 'time_taken': 9370421.0, 'time_delta': '108 days, 10:53:41', 'additions': 130, 'deletions': 46, 'state': 'closed'}, {'id': 1688161591, 'number': 28650, 'closed': datetime.datetime(2024, 1, 23, 0, 29, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 20, 9, 32, 42, tzinfo=datetime.timezone.utc), 'time_taken': 226601.0, 'time_delta': '2 days, 14:56:41', 'additions': 148, 'deletions': 77, 'state': 'closed'}, {'id': 1607557118, 'number': 27782, 'closed': datetime.datetime(2023, 12, 17, 22, 1, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 18, 12, 11, 12, tzinfo=datetime.timezone.utc), 'time_taken': 2541016.0, 'time_delta': '29 days, 9:50:16', 'additions': 92, 'deletions': 33, 'state': 'closed'}, {'id': 1576940163, 'number': 27414, 'closed': datetime.datetime(2023, 10, 27, 23, 14, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 27, 17, 10, 23, tzinfo=datetime.timezone.utc), 'time_taken': 21868.0, 'time_delta': '6:04:28', 'additions': 16, 'deletions': 131, 'state': 'closed'}, {'id': 1576900148, 'number': 27412, 'closed': datetime.datetime(2023, 10, 27, 20, 11, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 27, 16, 37, 38, tzinfo=datetime.timezone.utc), 'time_taken': 12839.0, 'time_delta': '3:33:59', 'additions': 9, 'deletions': 34, 'state': 'closed'}, {'id': 1576419239, 'number': 27408, 'closed': datetime.datetime(2024, 1, 30, 22, 8, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 27, 11, 24, 44, tzinfo=datetime.timezone.utc), 'time_taken': 8246638.0, 'time_delta': '95 days, 10:43:58', 'additions': 344, 'deletions': 323, 'state': 'closed'}, {'id': 1563192087, 'number': 27269, 'closed': datetime.datetime(2023, 11, 11, 0, 37, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 18, 18, 3, 19, tzinfo=datetime.timezone.utc), 'time_taken': 2010865.0, 'time_delta': '23 days, 6:34:25', 'additions': 69, 'deletions': 20, 'state': 'closed'}, {'id': 1520704238, 'number': 26776, 'closed': datetime.datetime(2023, 10, 30, 18, 10, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 19, 6, 19, 58, tzinfo=datetime.timezone.utc), 'time_taken': 3585049.0, 'time_delta': '41 days, 11:50:49', 'additions': 178, 'deletions': 105, 'state': 'closed'}, {'id': 1509719182, 'number': 26694, 'closed': datetime.datetime(2023, 9, 11, 17, 57, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 11, 7, 6, 10, tzinfo=datetime.timezone.utc), 'time_taken': 39088.0, 'time_delta': '10:51:28', 'additions': 75, 'deletions': 42, 'state': 'closed'}, {'id': 1508752346, 'number': 26681, 'closed': datetime.datetime(2023, 9, 10, 1, 30, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 9, 8, 35, 48, tzinfo=datetime.timezone.utc), 'time_taken': 60895.0, 'time_delta': '16:54:55', 'additions': 32, 'deletions': 16, 'state': 'closed'}, {'id': 1499994116, 'number': 26633, 'closed': datetime.datetime(2023, 9, 8, 20, 9, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 2, 15, 29, 45, tzinfo=datetime.timezone.utc), 'time_taken': 535190.0, 'time_delta': '6 days, 4:39:50', 'additions': 50, 'deletions': 36, 'state': 'closed'}, {'id': 1498472574, 'number': 26624, 'closed': datetime.datetime(2023, 9, 8, 20, 9, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 1, 8, 25, 58, tzinfo=datetime.timezone.utc), 'time_taken': 646994.0, 'time_delta': '7 days, 11:43:14', 'additions': 33, 'deletions': 23, 'state': 'closed'}, {'id': 1495416965, 'number': 26608, 'closed': datetime.datetime(2023, 9, 8, 0, 54, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 30, 12, 13, 49, tzinfo=datetime.timezone.utc), 'time_taken': 736860.0, 'time_delta': '8 days, 12:41:00', 'additions': 67, 'deletions': 28, 'state': 'closed'}, {'id': 1495253371, 'number': 26606, 'closed': datetime.datetime(2023, 8, 31, 20, 47, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 30, 10, 14, 42, tzinfo=datetime.timezone.utc), 'time_taken': 124354.0, 'time_delta': '1 day, 10:32:34', 'additions': 6, 'deletions': 19, 'state': 'closed'}, {'id': 1477250992, 'number': 26507, 'closed': datetime.datetime(2023, 8, 28, 16, 19, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 16, 10, 47, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1056699.0, 'time_delta': '12 days, 5:31:39', 'additions': 44, 'deletions': 32, 'state': 'closed'}, {'id': 1475351069, 'number': 26497, 'closed': datetime.datetime(2023, 8, 15, 16, 58, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 15, 2, 32, 5, tzinfo=datetime.timezone.utc), 'time_taken': 51972.0, 'time_delta': '14:26:12', 'additions': 53, 'deletions': 42, 'state': 'closed'}, {'id': 1474755903, 'number': 26488, 'closed': datetime.datetime(2023, 8, 16, 18, 46, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 14, 16, 41, 53, tzinfo=datetime.timezone.utc), 'time_taken': 180288.0, 'time_delta': '2 days, 2:04:48', 'additions': 50, 'deletions': 17, 'state': 'closed'}, {'id': 1460225378, 'number': 26401, 'closed': datetime.datetime(2023, 8, 3, 0, 25, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 2, 18, 8, 33, tzinfo=datetime.timezone.utc), 'time_taken': 22601.0, 'time_delta': '6:16:41', 'additions': 4, 'deletions': 5, 'state': 'closed'}, {'id': 1455145585, 'number': 26384, 'closed': datetime.datetime(2023, 8, 8, 19, 19, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 30, 13, 36, 40, tzinfo=datetime.timezone.utc), 'time_taken': 798152.0, 'time_delta': '9 days, 5:42:32', 'additions': 23, 'deletions': 12, 'state': 'closed'}, {'id': 1454787853, 'number': 26381, 'closed': datetime.datetime(2023, 8, 14, 23, 10, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 29, 15, 5, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1411519.0, 'time_delta': '16 days, 8:05:19', 'additions': 197, 'deletions': 120, 'state': 'closed'}, {'id': 1441258645, 'number': 26293, 'closed': datetime.datetime(2023, 7, 20, 16, 55, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 19, 15, 28, 13, tzinfo=datetime.timezone.utc), 'time_taken': 91617.0, 'time_delta': '1 day, 1:26:57', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1429859586, 'number': 26237, 'closed': datetime.datetime(2023, 7, 24, 19, 49, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 11, 17, 9, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1132819.0, 'time_delta': '13 days, 2:40:19', 'additions': 56, 'deletions': 21, 'state': 'closed'}, {'id': 1427155235, 'number': 26223, 'closed': datetime.datetime(2023, 7, 17, 23, 24, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 10, 9, 33, 5, tzinfo=datetime.timezone.utc), 'time_taken': 654671.0, 'time_delta': '7 days, 13:51:11', 'additions': 51, 'deletions': 39, 'state': 'closed'}, {'id': 1425853775, 'number': 26216, 'closed': datetime.datetime(2023, 7, 17, 17, 37, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 8, 7, 53, 36, tzinfo=datetime.timezone.utc), 'time_taken': 812633.0, 'time_delta': '9 days, 9:43:53', 'additions': 31, 'deletions': 27, 'state': 'closed'}, {'id': 1425841249, 'number': 26215, 'closed': datetime.datetime(2023, 7, 17, 17, 38, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 8, 6, 55, 47, tzinfo=datetime.timezone.utc), 'time_taken': 816157.0, 'time_delta': '9 days, 10:42:37', 'additions': 52, 'deletions': 20, 'state': 'closed'}, {'id': 1423175959, 'number': 26203, 'closed': datetime.datetime(2023, 7, 6, 17, 34, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 16, 30, 42, tzinfo=datetime.timezone.utc), 'time_taken': 3838.0, 'time_delta': '1:03:58', 'additions': 0, 'deletions': 3, 'state': 'closed'}, {'id': 1423161431, 'number': 26202, 'closed': datetime.datetime(2023, 7, 10, 20, 49, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 16, 18, 9, tzinfo=datetime.timezone.utc), 'time_taken': 361878.0, 'time_delta': '4 days, 4:31:18', 'additions': 18, 'deletions': 28, 'state': 'closed'}, {'id': 1412040137, 'number': 26144, 'closed': datetime.datetime(2023, 6, 29, 17, 16, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 28, 17, 13, 9, tzinfo=datetime.timezone.utc), 'time_taken': 86600.0, 'time_delta': '1 day, 0:03:20', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 1406472562, 'number': 26115, 'closed': datetime.datetime(2023, 7, 5, 21, 25, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 25, 4, 46, 32, tzinfo=datetime.timezone.utc), 'time_taken': 923918.0, 'time_delta': '10 days, 16:38:38', 'additions': 9, 'deletions': 29, 'state': 'closed'}, {'id': 1399770081, 'number': 26068, 'closed': datetime.datetime(2023, 8, 11, 19, 47, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 20, 12, 22, 21, tzinfo=datetime.timezone.utc), 'time_taken': 4519516.0, 'time_delta': '52 days, 7:25:16', 'additions': 56, 'deletions': 11, 'state': 'closed'}, {'id': 1397035089, 'number': 26052, 'closed': datetime.datetime(2023, 6, 19, 23, 54, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 18, 7, 57, 47, tzinfo=datetime.timezone.utc), 'time_taken': 143802.0, 'time_delta': '1 day, 15:56:42', 'additions': 69, 'deletions': 27, 'state': 'closed'}, {'id': 1395737760, 'number': 26042, 'closed': datetime.datetime(2023, 7, 2, 23, 57, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 16, 13, 35, 58, tzinfo=datetime.timezone.utc), 'time_taken': 1419678.0, 'time_delta': '16 days, 10:21:18', 'additions': 98, 'deletions': 44, 'state': 'closed'}, {'id': 1384238983, 'number': 25936, 'closed': datetime.datetime(2023, 6, 8, 16, 37, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 8, 10, 54, 8, tzinfo=datetime.timezone.utc), 'time_taken': 20578.0, 'time_delta': '5:42:58', 'additions': 7, 'deletions': 2, 'state': 'closed'}, {'id': 1382943004, 'number': 25925, 'closed': datetime.datetime(2023, 7, 6, 23, 35, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 7, 15, 42, 8, tzinfo=datetime.timezone.utc), 'time_taken': 2534018.0, 'time_delta': '29 days, 7:53:38', 'additions': 31, 'deletions': 1, 'state': 'closed'}, {'id': 1382623644, 'number': 25921, 'closed': datetime.datetime(2023, 6, 8, 23, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 7, 12, 55, 18, tzinfo=datetime.timezone.utc), 'time_taken': 123942.0, 'time_delta': '1 day, 10:25:42', 'additions': 443, 'deletions': 406, 'state': 'closed'}, {'id': 1379211925, 'number': 25889, 'closed': datetime.datetime(2023, 6, 5, 23, 21, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 5, 15, 19, 4, tzinfo=datetime.timezone.utc), 'time_taken': 28917.0, 'time_delta': '8:01:57', 'additions': 24, 'deletions': 2, 'state': 'closed'}, {'id': 1375245615, 'number': 25874, 'closed': datetime.datetime(2023, 7, 6, 23, 21, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 2, 7, 24, 15, tzinfo=datetime.timezone.utc), 'time_taken': 2995058.0, 'time_delta': '34 days, 15:57:38', 'additions': 308, 'deletions': 236, 'state': 'closed'}, {'id': 1371631094, 'number': 25851, 'closed': datetime.datetime(2023, 5, 31, 15, 19, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 31, 7, 42, 14, tzinfo=datetime.timezone.utc), 'time_taken': 27411.0, 'time_delta': '7:36:51', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1364324344, 'number': 25760, 'closed': datetime.datetime(2023, 5, 26, 0, 33, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 25, 8, 38, tzinfo=datetime.timezone.utc), 'time_taken': 57318.0, 'time_delta': '15:55:18', 'additions': 20, 'deletions': 4, 'state': 'closed'}, {'id': 1364198658, 'number': 25756, 'closed': datetime.datetime(2023, 6, 23, 17, 52, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 25, 7, 0, 56, tzinfo=datetime.timezone.utc), 'time_taken': 2544718.0, 'time_delta': '29 days, 10:51:58', 'additions': 87, 'deletions': 94, 'state': 'closed'}, {'id': 1364153619, 'number': 25755, 'closed': datetime.datetime(2023, 5, 30, 17, 45, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 25, 6, 16, 40, tzinfo=datetime.timezone.utc), 'time_taken': 473301.0, 'time_delta': '5 days, 11:28:21', 'additions': 29, 'deletions': 16, 'state': 'closed'}, {'id': 1364134952, 'number': 25754, 'closed': datetime.datetime(2023, 5, 26, 5, 7, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 25, 5, 56, 39, tzinfo=datetime.timezone.utc), 'time_taken': 83451.0, 'time_delta': '23:10:51', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1358152194, 'number': 25700, 'closed': datetime.datetime(2023, 5, 22, 16, 36, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 21, 8, 56, 13, tzinfo=datetime.timezone.utc), 'time_taken': 114012.0, 'time_delta': '1 day, 7:40:12', 'additions': 4, 'deletions': 25, 'state': 'closed'}, {'id': 1358132671, 'number': 25699, 'closed': datetime.datetime(2023, 5, 22, 16, 2, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 21, 7, 18, 32, tzinfo=datetime.timezone.utc), 'time_taken': 117851.0, 'time_delta': '1 day, 8:44:11', 'additions': 29, 'deletions': 7, 'state': 'closed'}, {'id': 1355810593, 'number': 25660, 'closed': datetime.datetime(2023, 5, 18, 15, 52, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 18, 14, 28, 39, tzinfo=datetime.timezone.utc), 'time_taken': 5028.0, 'time_delta': '1:23:48', 'additions': 18, 'deletions': 7, 'state': 'closed'}, {'id': 1355771462, 'number': 25658, 'closed': datetime.datetime(2023, 5, 18, 15, 44, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 18, 14, 4, 21, tzinfo=datetime.timezone.utc), 'time_taken': 6009.0, 'time_delta': '1:40:09', 'additions': 5, 'deletions': 4, 'state': 'closed'}, {'id': 1355759610, 'number': 25657, 'closed': datetime.datetime(2023, 5, 18, 15, 46, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 18, 13, 57, 2, tzinfo=datetime.timezone.utc), 'time_taken': 6554.0, 'time_delta': '1:49:14', 'additions': 49, 'deletions': 46, 'state': 'closed'}, {'id': 1354414505, 'number': 25642, 'closed': datetime.datetime(2023, 5, 19, 20, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 17, 15, 33, 28, tzinfo=datetime.timezone.utc), 'time_taken': 191912.0, 'time_delta': '2 days, 5:18:32', 'additions': 11, 'deletions': 4, 'state': 'closed'}, {'id': 1350840893, 'number': 25599, 'closed': datetime.datetime(2023, 5, 31, 20, 31, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 15, 13, 47, 4, tzinfo=datetime.timezone.utc), 'time_taken': 1406648.0, 'time_delta': '16 days, 6:44:08', 'additions': 76, 'deletions': 19, 'state': 'closed'}, {'id': 1347213503, 'number': 25539, 'closed': datetime.datetime(2023, 7, 12, 5, 22, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 11, 14, 38, 55, tzinfo=datetime.timezone.utc), 'time_taken': 5323415.0, 'time_delta': '61 days, 14:43:35', 'additions': 341, 'deletions': 174, 'state': 'closed'}, {'id': 1345877646, 'number': 25516, 'closed': datetime.datetime(2023, 5, 14, 18, 24, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 10, 18, 30, 54, tzinfo=datetime.timezone.utc), 'time_taken': 345218.0, 'time_delta': '3 days, 23:53:38', 'additions': 90, 'deletions': 61, 'state': 'closed'}, {'id': 1338548581, 'number': 25437, 'closed': datetime.datetime(2023, 5, 11, 0, 54, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 4, 14, 17, 38, tzinfo=datetime.timezone.utc), 'time_taken': 556610.0, 'time_delta': '6 days, 10:36:50', 'additions': 144, 'deletions': 97, 'state': 'closed'}, {'id': 1338244630, 'number': 25435, 'closed': datetime.datetime(2023, 5, 10, 21, 31, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 4, 11, 1, 13, tzinfo=datetime.timezone.utc), 'time_taken': 556230.0, 'time_delta': '6 days, 10:30:30', 'additions': 32, 'deletions': 11, 'state': 'closed'}, {'id': 1335440431, 'number': 25393, 'closed': None, 'created': datetime.datetime(2023, 5, 2, 15, 34, 23, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 173, 'deletions': 135, 'state': 'open'}, {'id': 1334646235, 'number': 25388, 'closed': datetime.datetime(2023, 5, 2, 5, 31, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 2, 3, 58, 16, tzinfo=datetime.timezone.utc), 'time_taken': 5568.0, 'time_delta': '1:32:48', 'additions': 8, 'deletions': 68, 'state': 'closed'}, {'id': 1334623741, 'number': 25386, 'closed': datetime.datetime(2023, 5, 2, 16, 1, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 2, 3, 17, 56, tzinfo=datetime.timezone.utc), 'time_taken': 45821.0, 'time_delta': '12:43:41', 'additions': 21, 'deletions': 0, 'state': 'closed'}, {'id': 1332571057, 'number': 25341, 'closed': datetime.datetime(2023, 4, 29, 3, 9, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 29, 2, 39, 3, tzinfo=datetime.timezone.utc), 'time_taken': 1822.0, 'time_delta': '0:30:22', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1331548439, 'number': 25328, 'closed': datetime.datetime(2023, 4, 28, 19, 44, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 28, 9, 0, 53, tzinfo=datetime.timezone.utc), 'time_taken': 38646.0, 'time_delta': '10:44:06', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 1331305649, 'number': 25326, 'closed': datetime.datetime(2023, 7, 17, 18, 31, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 28, 4, 59, 46, tzinfo=datetime.timezone.utc), 'time_taken': 6960726.0, 'time_delta': '80 days, 13:32:06', 'additions': 651, 'deletions': 599, 'state': 'closed'}, {'id': 1330668539, 'number': 25310, 'closed': datetime.datetime(2023, 4, 27, 17, 34, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 27, 16, 22, 46, tzinfo=datetime.timezone.utc), 'time_taken': 4292.0, 'time_delta': '1:11:32', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1329663276, 'number': 25304, 'closed': datetime.datetime(2023, 4, 27, 16, 0, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 27, 3, 48, 25, tzinfo=datetime.timezone.utc), 'time_taken': 43909.0, 'time_delta': '12:11:49', 'additions': 38, 'deletions': 28, 'state': 'closed'}, {'id': 1326457107, 'number': 25272, 'closed': datetime.datetime(2023, 4, 26, 19, 59, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 25, 4, 14, 35, tzinfo=datetime.timezone.utc), 'time_taken': 143074.0, 'time_delta': '1 day, 15:44:34', 'additions': 245, 'deletions': 243, 'state': 'closed'}, {'id': 1323427556, 'number': 25228, 'closed': datetime.datetime(2023, 4, 25, 17, 5, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 21, 18, 5, 53, tzinfo=datetime.timezone.utc), 'time_taken': 342006.0, 'time_delta': '3 days, 23:00:06', 'additions': 417, 'deletions': 383, 'state': 'closed'}, {'id': 1322388618, 'number': 25221, 'closed': datetime.datetime(2023, 4, 24, 18, 26, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 21, 3, 32, 40, tzinfo=datetime.timezone.utc), 'time_taken': 312853.0, 'time_delta': '3 days, 14:54:13', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 1315175307, 'number': 25139, 'closed': datetime.datetime(2023, 4, 19, 23, 41, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 15, 16, 58, 8, tzinfo=datetime.timezone.utc), 'time_taken': 369821.0, 'time_delta': '4 days, 6:43:41', 'additions': 10, 'deletions': 5, 'state': 'closed'}, {'id': 1306640054, 'number': 25044, 'closed': datetime.datetime(2023, 4, 19, 23, 42, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 9, 2, 46, 49, tzinfo=datetime.timezone.utc), 'time_taken': 939356.0, 'time_delta': '10 days, 20:55:56', 'additions': 16, 'deletions': 3, 'state': 'closed'}, {'id': 1306499797, 'number': 25040, 'closed': datetime.datetime(2023, 11, 24, 15, 49, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 8, 13, 42, 31, tzinfo=datetime.timezone.utc), 'time_taken': 19879613.0, 'time_delta': '230 days, 2:06:53', 'additions': 137, 'deletions': 84, 'state': 'closed'}, {'id': 1306434820, 'number': 25039, 'closed': datetime.datetime(2023, 4, 25, 16, 9, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 8, 7, 59, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1498211.0, 'time_delta': '17 days, 8:10:11', 'additions': 117, 'deletions': 55, 'state': 'closed'}, {'id': 1305009924, 'number': 25016, 'closed': datetime.datetime(2023, 4, 19, 23, 43, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 6, 16, 34, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1148920.0, 'time_delta': '13 days, 7:08:40', 'additions': 18, 'deletions': 25, 'state': 'closed'}, {'id': 1298791114, 'number': 24947, 'closed': datetime.datetime(2023, 4, 5, 19, 5, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 1, 17, 44, 53, tzinfo=datetime.timezone.utc), 'time_taken': 350451.0, 'time_delta': '4 days, 1:20:51', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1294771963, 'number': 24909, 'closed': datetime.datetime(2023, 4, 1, 18, 54, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 29, 14, 37, 7, tzinfo=datetime.timezone.utc), 'time_taken': 274666.0, 'time_delta': '3 days, 4:17:46', 'additions': 151, 'deletions': 91, 'state': 'closed'}, {'id': 1290301935, 'number': 24875, 'closed': datetime.datetime(2023, 4, 5, 17, 29, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 26, 10, 35, 48, tzinfo=datetime.timezone.utc), 'time_taken': 888794.0, 'time_delta': '10 days, 6:53:14', 'additions': 148, 'deletions': 54, 'state': 'closed'}, {'id': 1261890736, 'number': 24559, 'closed': datetime.datetime(2023, 6, 23, 18, 42, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 3, 10, 55, 43, tzinfo=datetime.timezone.utc), 'time_taken': 9704807.0, 'time_delta': '112 days, 7:46:47', 'additions': 260, 'deletions': 138, 'state': 'closed'}, {'id': 1254123458, 'number': 24483, 'closed': datetime.datetime(2023, 3, 3, 20, 4, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 25, 7, 53, 8, tzinfo=datetime.timezone.utc), 'time_taken': 562295.0, 'time_delta': '6 days, 12:11:35', 'additions': 23, 'deletions': 28, 'state': 'closed'}, {'id': 1237149825, 'number': 24359, 'closed': datetime.datetime(2023, 2, 27, 0, 19, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 10, 19, 17, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1400513.0, 'time_delta': '16 days, 5:01:53', 'additions': 8, 'deletions': 2, 'state': 'closed'}, {'id': 1226885816, 'number': 24273, 'closed': datetime.datetime(2023, 11, 23, 20, 57, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 2, 16, 50, 28, tzinfo=datetime.timezone.utc), 'time_taken': 25416444.0, 'time_delta': '294 days, 4:07:24', 'additions': 57, 'deletions': 2, 'state': 'closed'}, {'id': 1223454337, 'number': 24237, 'closed': datetime.datetime(2023, 9, 14, 1, 45, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 31, 15, 8, 17, tzinfo=datetime.timezone.utc), 'time_taken': 19478248.0, 'time_delta': '225 days, 10:37:28', 'additions': 297, 'deletions': 15, 'state': 'closed'}, {'id': 1216166448, 'number': 24175, 'closed': datetime.datetime(2023, 6, 28, 17, 23, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 25, 7, 38, 55, tzinfo=datetime.timezone.utc), 'time_taken': 13340692.0, 'time_delta': '154 days, 9:44:52', 'additions': 65, 'deletions': 7, 'state': 'closed'}, {'id': 1201171224, 'number': 24102, 'closed': datetime.datetime(2023, 2, 1, 1, 28, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 18, 5, 15, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1195958.0, 'time_delta': '13 days, 20:12:38', 'additions': 8, 'deletions': 8, 'state': 'closed'}, {'id': 1193714890, 'number': 24035, 'closed': datetime.datetime(2023, 1, 19, 22, 51, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 11, 12, 8, 56, tzinfo=datetime.timezone.utc), 'time_taken': 729776.0, 'time_delta': '8 days, 10:42:56', 'additions': 6, 'deletions': 6, 'state': 'closed'}]"
