pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
383500043,issue #7645: Update doc for IllegalToken,"issue: #7645: Update doc for IllegalToken
<img width=""599"" alt=""WechatIMG24"" src=""https://user-images.githubusercontent.com/50866227/75976299-218c0d80-5f15-11ea-8309-ff9714d89adf.png"">


Ouput of default example:
$ cat config.xml
```xml
<?xml version=""1.0""?>
<!DOCTYPE module PUBLIC
        ""-//Checkstyle//DTD Checkstyle Configuration 1.3//EN""
        ""https://checkstyle.org/dtds/configuration_1_3.dtd"">

<module name=""Checker"">
    <module name=""TreeWalker"">
        <module name=""IllegalToken""/>
    </module>
```
    
$ cat Test.java
```java
public class Test {

    public void myTest() {
        outer: // violation
        for (int i = 0; i < 5; i++) {
            if (i == 1) {
                break outer;
            }
        }
    }
}
```

$ RUN_LOCALE=""-Duser.language=en -Duser.country=US""
$ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java
Starting audit...
[ERROR] /Users/hgh/Downloads/my_file/IDEA_workspace/Leetcode_maven/engineering_ability/src/main/java/Test.java:4:14: Using 'outer:' is not allowed. [IllegalToken]
Audit done.
Checkstyle ends with 1 errors.

Ouput of configure the check to find token LITERAL_NATIVE example:
$ cat config.xml 
```xml
<?xml version=""1.0""?>
<!DOCTYPE module PUBLIC
        ""-//Checkstyle//DTD Checkstyle Configuration 1.3//EN""
        ""https://checkstyle.org/dtds/configuration_1_3.dtd"">

<module name=""Checker"">
    <module name=""TreeWalker"">
        <module name=""IllegalToken"">
            <property name=""tokens"" value=""LITERAL_NATIVE""/>
        </module>
    </module>
</module>
```
$ cat Test.java
```java
public class Test {

    public native void myTest();      // violation

}
```
$ RUN_LOCALE=""-Duser.language=en -Duser.country=US""
$ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java
Starting audit...
[ERROR] /Users/hgh/Downloads/my_file/IDEA_workspace/Leetcode_maven/engineering_ability/src/main/java/Test2.java:3:12: Using 'native' is not allowed. [IllegalToken]
Audit done.
Checkstyle ends with 1 errors.

",True,7781,https://api.github.com/repos/checkstyle/checkstyle/pulls/7781,https://github.com/checkstyle/checkstyle/pull/7781,closed,36,3,2,1,5,5,0,1,[],2020-03-04 11:39:02+00:00,2020-03-05 11:54:55+00:00,87353.0,"1 day, 0:15:53","[{'comment_id': 387711971, 'comment_body': 'Please separate code from comment with only one space', 'comment_created': datetime.datetime(2020, 3, 4, 14, 45, 26, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 387712891, 'comment_body': 'here too', 'comment_created': datetime.datetime(2020, 3, 4, 14, 46, 47, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 387713022, 'comment_body': 'one loop is enough', 'comment_created': datetime.datetime(2020, 3, 4, 14, 47, 2, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 388195910, 'comment_body': '`to find token LITERAL_NATIVE:`  -> to report violation on token LITERAL_NATIVE:', 'comment_created': datetime.datetime(2020, 3, 5, 10, 13, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 388201043, 'comment_body': 'ok, I will change it.', 'comment_created': datetime.datetime(2020, 3, 5, 10, 22, 24, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}]","[{'commit_sha': 'dca38257943ed53599e2bf8aa6e8386e234c54c0', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
384320924,Issue #7646: Update doc for IllegalTokenText,"Issue #7646: Update doc for IllegalTokenText

<img width=""780"" alt=""image"" src=""https://user-images.githubusercontent.com/50866227/76160956-7d4ed480-6169-11ea-8197-ff73207e9ca6.png"">


Output of configure to configure the check to forbid String literals containing ""a href"": 
$ cat config.xml
```xml
<?xml version=""1.0""?>
<!DOCTYPE module PUBLIC
        ""-//Checkstyle//DTD Checkstyle Configuration 1.3//EN""
        ""https://checkstyle.org/dtds/configuration_1_3.dtd"">

<module name=""Checker"">
    <module name=""TreeWalker"">
        <module name=""IllegalTokenText"">
            <property name=""tokens"" value=""STRING_LITERAL""/>
            <property name=""format"" value=""a href""/>
        </module>
    </module>
</module>
```
$ cat Test.java
```java
public class Test {

    public void myTest() {
        String test = ""a href""; // violation
    }
}
```
$ RUN_LOCALE=""-Duser.language=en -Duser.country=US""
$ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java
Starting audit...
[ERROR] /var/tmp/Test.java:4:23: Token text matches the illegal pattern 'a href'. [IllegalTokenText]
Audit done.
Checkstyle ends with 1 errors.

Output of  to configure the check to forbid leading zeros in an integer literal, other than zero and a hex literal:
$ cat config.xml
```xml
<?xml version=""1.0""?>
<!DOCTYPE module PUBLIC
        ""-//Checkstyle//DTD Checkstyle Configuration 1.3//EN""
        ""https://checkstyle.org/dtds/configuration_1_3.dtd"">

<module name=""Checker"">
    <module name=""TreeWalker"">
        <module name=""IllegalTokenText"">
            <property name=""tokens"" value=""NUM_INT,NUM_LONG""/>
            <property name=""format"" value=""^0[^lx]""/>
            <property name=""ignoreCase"" value=""true""/>
        </module>
    </module>
</module>
```
$ cat Test.java
```java
public class Test {

    public void myTest() {
        int test1 = 0; // OK
        int test2 = 0x111; // OK
        int test3 = 0X111; // OK, case is ignored
        int test4 = 010; // violation
        long test5 = 0L; // OK
        long test6 = 010L; // violation
    }
}
```
$ RUN_LOCALE=""-Duser.language=en -Duser.country=US""
$ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java
Starting audit...
[ERROR] /Users/hgh/Downloads/my_file/IDEA_workspace/Leetcode_maven/engineering_ability/src/main/java/checkstyle_demo/illegalTokenText/Test.java:9:21: Token text matches the illegal pattern '^0[^lx]'. [IllegalTokenText]
[ERROR] /Users/hgh/Downloads/my_file/IDEA_workspace/Leetcode_maven/engineering_ability/src/main/java/checkstyle_demo/illegalTokenText/Test.java:11:22: Token text matches the illegal pattern '^0[^lx]'. [IllegalTokenText]
Audit done.
Checkstyle ends with 2 errors.
",True,7785,https://api.github.com/repos/checkstyle/checkstyle/pulls/7785,https://github.com/checkstyle/checkstyle/pull/7785,closed,72,1,2,1,6,19,0,1,[],2020-03-05 14:52:02+00:00,2020-03-09 12:31:15+00:00,337153.0,"3 days, 21:39:13","[{'comment_id': 388742989, 'comment_body': 'This `div` should not be used here', 'comment_created': datetime.datetime(2020, 3, 6, 7, 10, 28, tzinfo=datetime.timezone.utc), 'commenter': 'rdiachenko', 'type': 'User'}, {'comment_id': 388743200, 'comment_body': 'Use `<source>` instead', 'comment_created': datetime.datetime(2020, 3, 6, 7, 11, 11, tzinfo=datetime.timezone.utc), 'commenter': 'rdiachenko', 'type': 'User'}, {'comment_id': 388743263, 'comment_body': 'Same as above', 'comment_created': datetime.datetime(2020, 3, 6, 7, 11, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rdiachenko', 'type': 'User'}, {'comment_id': 388751548, 'comment_body': 'ok, I will fix it.', 'comment_created': datetime.datetime(2020, 3, 6, 7, 38, 47, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 388758336, 'comment_body': 'I fix it and update the first post~', 'comment_created': datetime.datetime(2020, 3, 6, 7, 59, 18, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 389251141, 'comment_body': '@HuGanghui please reply all my comments with `done` if you fixed them', 'comment_created': datetime.datetime(2020, 3, 7, 12, 23, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rdiachenko', 'type': 'User'}, {'comment_id': 389272157, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 3, 7, 16, 59, 25, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 389272260, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 3, 7, 16, 59, 34, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 389345263, 'comment_body': '`// ok` -> OK here and above\r\n\r\nPlease add comment to make it clearer that here case is ignored', 'comment_created': datetime.datetime(2020, 3, 8, 7, 59, 19, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 389345291, 'comment_body': 'there is `NUM_LONG` in token list, but there is nothing in example, please add', 'comment_created': datetime.datetime(2020, 3, 8, 8, 0, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 389356060, 'comment_body': 'ok, I am done.', 'comment_created': datetime.datetime(2020, 3, 8, 10, 33, 19, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 389356093, 'comment_body': 'I am done', 'comment_created': datetime.datetime(2020, 3, 8, 10, 33, 31, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 389356379, 'comment_body': 'and update the first post~', 'comment_created': datetime.datetime(2020, 3, 8, 10, 38, 8, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 389395022, 'comment_body': 'Please add example that check is case-sensitive', 'comment_created': datetime.datetime(2020, 3, 8, 18, 47, 44, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 389395105, 'comment_body': 'there is no mention that `ignoreCase` property set to true.\r\n\r\nMay be it makes sense to make a separate example to show `ignoreCase` property usage', 'comment_created': datetime.datetime(2020, 3, 8, 18, 48, 45, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 389395120, 'comment_body': 'please remove empty line', 'comment_created': datetime.datetime(2020, 3, 8, 18, 48, 59, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 389629227, 'comment_body': 'I am done.', 'comment_created': datetime.datetime(2020, 3, 9, 12, 29, 27, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 389629342, 'comment_body': 'I am done.\r\n', 'comment_created': datetime.datetime(2020, 3, 9, 12, 29, 40, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 389629407, 'comment_body': 'I am done.', 'comment_created': datetime.datetime(2020, 3, 9, 12, 29, 50, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}]","[{'commit_sha': 'd52101e7dbf51db8e9f435f4cd5aded78214847f', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
384929290,Issue #7573: update doc for MissingOverride,"Issue #7573: update doc for MissingOverride

<img width=""748"" alt=""image"" src=""https://user-images.githubusercontent.com/50866227/76333962-5fca6800-632d-11ea-928f-7987298a4ffa.png"">
<img width=""732"" alt=""image"" src=""https://user-images.githubusercontent.com/50866227/76333989-6bb62a00-632d-11ea-9501-a2b5979865b7.png"">

Ouput of default example:
$ cat config.xml
```xml
<?xml version=""1.0""?>
<!DOCTYPE module PUBLIC
        ""-//Checkstyle//DTD Checkstyle Configuration 1.3//EN""
        ""https://checkstyle.org/dtds/configuration_1_3.dtd"">
<module name=""Checker"">
    <module name=""TreeWalker"">
        <module name=""MissingOverride""/>
    </module>
</module>

```

$ cat Test.java
```java
class Test extends SuperClass {

    /** {@inheritDoc} */
    @Override
    public void test1() { // OK

    }

    /** {@inheritDoc} */
    public void test2() { // violation, should be annotated with &#64;Override

    }

    /** {@inheritDoc} */
    private void test3() { // violation, using the @inheritDoc tag on private method that is not valid

    }

    /** {@inheritDoc} */
    public static void test4() { // violation, using the @inheritDoc tag on static method that is not valid

    }

}
```
$ RUN_LOCALE=""-Duser.language=en -Duser.country=US""
$ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test2.java
Starting audit...
[ERROR] /var/tmp/Test.java:10: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists. [MissingOverride]
[ERROR]  /var/tmp/Test.java:15: The Javadoc {@inheritDoc} tag is not valid at this location. [MissingOverride]
[ERROR]  /var/tmp/Test.java:20: The Javadoc {@inheritDoc} tag is not valid at this location. [MissingOverride]
Audit done.
Checkstyle ends with 3 errors.


Ouput of configure the check for the javaFiveCompatibility mode:
$ cat config.xml 

```xml
<?xml version=""1.0""?>
<!DOCTYPE module PUBLIC
        ""-//Checkstyle//DTD Checkstyle Configuration 1.3//EN""
        ""https://checkstyle.org/dtds/configuration_1_3.dtd"">
<module name=""Checker"">
    <module name=""TreeWalker"">
        <module name=""MissingOverride"">
            <property name=""javaFiveCompatibility""
                      value=""true""/>
        </module>
    </module>
</module>

```
$ cat Test.java
```java
class Test1 {

    /** {@inheritDoc} */
    public void equals() { // violation, should be annotated with &#64;Override

    }
}

interface Test2 {

    /** {@inheritDoc} */
    public abstract void test(); // violation, should be annotated with &#64;Override

}

class Test3 extends SuperClass {

    /** {@inheritDoc} */
    public void test() { // OK, is ignored because class extends other class

    }
}

class Test4 implements SuperInterface {

    /** {@inheritDoc} */
    public void test() { // OK, is ignored because class implements interface

    }
}

class Test5 {
    Runnable r = new Runnable() {

        /** {@inheritDoc} */
        public void run() { // OK, is ignored because class is anonymous class

        }
    };
}
```
$ RUN_LOCALE=""-Duser.language=en -Duser.country=US""
$ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java
Starting audit...
[ERROR] /var/tmp/Test.java:4: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists. [MissingOverride]
[ERROR]  /var/tmp/Test.java:12: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists. [MissingOverride]
Audit done.
Checkstyle ends with 2 errors.

",True,7789,https://api.github.com/repos/checkstyle/checkstyle/pulls/7789,https://github.com/checkstyle/checkstyle/pull/7789,closed,134,0,2,1,6,41,0,1,[],2020-03-06 17:06:44+00:00,2020-03-11 11:40:08+00:00,412404.0,"4 days, 18:33:24","[{'comment_id': 389347942, 'comment_body': 'add space between `)` and `{`', 'comment_created': datetime.datetime(2020, 3, 8, 8, 37, 26, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 389347948, 'comment_body': 'here too', 'comment_created': datetime.datetime(2020, 3, 8, 8, 37, 35, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 389347960, 'comment_body': 'here too', 'comment_created': datetime.datetime(2020, 3, 8, 8, 37, 46, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 389347973, 'comment_body': 'and here', 'comment_created': datetime.datetime(2020, 3, 8, 8, 37, 55, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 389348056, 'comment_body': 'From check description\r\n`This check will log a violation if using the @inheritDoc tag on a method that is not valid (ex: private, or static method).`\r\nPlease add examples to show this', 'comment_created': datetime.datetime(2020, 3, 8, 8, 39, 1, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 389358387, 'comment_body': 'I am done\r\n', 'comment_created': datetime.datetime(2020, 3, 8, 11, 6, 9, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 389358390, 'comment_body': 'I am done\r\n', 'comment_created': datetime.datetime(2020, 3, 8, 11, 6, 15, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 389358393, 'comment_body': 'I am done', 'comment_created': datetime.datetime(2020, 3, 8, 11, 6, 20, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 389358406, 'comment_body': 'I am done', 'comment_created': datetime.datetime(2020, 3, 8, 11, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 389358421, 'comment_body': 'I am done', 'comment_created': datetime.datetime(2020, 3, 8, 11, 6, 36, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 389358621, 'comment_body': 'and update the first post~', 'comment_created': datetime.datetime(2020, 3, 8, 11, 10, 9, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 389394178, 'comment_body': 'Violation for `test2` is ""no override"", but for private and static methods violation will be different. Please add violation comments to show it for all examples above.', 'comment_created': datetime.datetime(2020, 3, 8, 18, 35, 39, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 389394491, 'comment_body': 'Doc for this property says that\r\n`This property will only check classes, interfaces, etc. that do not contain the extends or implements keyword or are not anonymous classes.`\r\nplease add here comment why this is not cause violation', 'comment_created': datetime.datetime(2020, 3, 8, 18, 39, 35, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 389647609, 'comment_body': 'I am done.\r\n', 'comment_created': datetime.datetime(2020, 3, 9, 13, 7, 45, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 389647653, 'comment_body': 'I am done.', 'comment_created': datetime.datetime(2020, 3, 9, 13, 7, 51, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 390133146, 'comment_body': '` not be` I guess it should be `should not be`', 'comment_created': datetime.datetime(2020, 3, 10, 7, 32, 55, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 390133942, 'comment_body': '`only checks methods overridden from java.lang.Object`\r\nIt is not clear. \r\nThis is ignored because class extends other class', 'comment_created': datetime.datetime(2020, 3, 10, 7, 35, 18, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 390134250, 'comment_body': '`should not be` here too', 'comment_created': datetime.datetime(2020, 3, 10, 7, 36, 9, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 390134488, 'comment_body': '`This property will only check classes, interfaces, etc. that do not contain the extends or implements keyword or are not anonymous classes.`\r\n\r\nPlease add example for interface and anonymous class', 'comment_created': datetime.datetime(2020, 3, 10, 7, 36, 50, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 390237358, 'comment_body': 'sorry, `not be` is incorrect, which causes a mistake. I think `should be annotated with &#64;Override` is correct and is what I want to express', 'comment_created': datetime.datetime(2020, 3, 10, 11, 1, 14, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 390238045, 'comment_body': '`should be annotated with &#64;Override ` here too', 'comment_created': datetime.datetime(2020, 3, 10, 11, 2, 33, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 390265999, 'comment_body': 'ok, I correct this.', 'comment_created': datetime.datetime(2020, 3, 10, 12, 3, 2, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 390266096, 'comment_body': 'ok , I add these.\r\n', 'comment_created': datetime.datetime(2020, 3, 10, 12, 3, 14, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 390270715, 'comment_body': 'Please change class/interface names in this example, they all are ""Test"".\r\nPlease make them different', 'comment_created': datetime.datetime(2020, 3, 10, 12, 12, 44, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 390271137, 'comment_body': '`// that is not valid` I think this can be removed', 'comment_created': datetime.datetime(2020, 3, 10, 12, 13, 37, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 390271317, 'comment_body': '`// that is not valid` can be removed here too', 'comment_created': datetime.datetime(2020, 3, 10, 12, 14, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 390272429, 'comment_body': '`public abstract` please remove these redundant modifiers, it is public and abstract by default', 'comment_created': datetime.datetime(2020, 3, 10, 12, 16, 25, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 390369801, 'comment_body': 'done\r\n', 'comment_created': datetime.datetime(2020, 3, 10, 14, 48, 12, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 390370371, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 3, 10, 14, 48, 53, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 390370459, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 3, 10, 14, 48, 58, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 390370665, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 3, 10, 14, 49, 13, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 390415791, 'comment_body': 'there is an extra space in indentation', 'comment_created': datetime.datetime(2020, 3, 10, 15, 47, 31, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 390438740, 'comment_body': 'done and have updated first post~', 'comment_created': datetime.datetime(2020, 3, 10, 16, 18, 47, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 390759156, 'comment_body': 'Please fix indentation for 2 lines above - it should not be indented from previous tag, they should be on same indentation level. ', 'comment_created': datetime.datetime(2020, 3, 11, 5, 56, 57, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 390759195, 'comment_body': 'same here', 'comment_created': datetime.datetime(2020, 3, 11, 5, 57, 11, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 390759358, 'comment_body': 'same here - 2 lines with indentation', 'comment_created': datetime.datetime(2020, 3, 11, 5, 57, 52, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 390759402, 'comment_body': 'here too', 'comment_created': datetime.datetime(2020, 3, 11, 5, 58, 2, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 390775933, 'comment_body': 'ok, done', 'comment_created': datetime.datetime(2020, 3, 11, 6, 59, 45, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 390775962, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 3, 11, 6, 59, 51, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 390775987, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 3, 11, 6, 59, 56, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 390776007, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 3, 11, 7, 0, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}]","[{'commit_sha': '9214cbc8f3991757285d10aaee07436c8ca234f9', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
386221358,Issue #7748: Update AbstractChecks to log DetailAST - MissingOverride,"Issue #7748: Update AbstractChecks to log DetailAST - MissingOverride

https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java#L150

https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java#L170

Diff report:
default:
https://huganghui.github.io/7748-DetailAST-missing-over-ride/reports1/diff/
javaFiveCompatibility property:
https://huganghui.github.io/7748-DetailAST-missing-over-ride/reports2/diff/",True,7820,https://api.github.com/repos/checkstyle/checkstyle/pulls/7820,https://github.com/checkstyle/checkstyle/pull/7820,closed,336,28,11,1,6,13,0,1,[],2020-03-10 15:59:31+00:00,2020-03-13 14:47:49+00:00,254898.0,"2 days, 22:48:18","[{'comment_id': 390774339, 'comment_body': 'lcurly should be on previous line', 'comment_created': datetime.datetime(2020, 3, 11, 6, 54, 16, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 390774456, 'comment_body': '`* */` extra asterisk', 'comment_created': datetime.datetime(2020, 3, 11, 6, 54, 47, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 390774512, 'comment_body': 'here too', 'comment_created': datetime.datetime(2020, 3, 11, 6, 54, 58, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 390774582, 'comment_body': '`test(){` -> `test() {`', 'comment_created': datetime.datetime(2020, 3, 11, 6, 55, 13, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 390774795, 'comment_body': 'here javadoc is single-line, in other inputs it is multiline.\r\nIs there some reason for it?', 'comment_created': datetime.datetime(2020, 3, 11, 6, 55, 52, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 390775431, 'comment_body': 'It would be nice to have test with `javaFiveCompatibility` property set to true', 'comment_created': datetime.datetime(2020, 3, 11, 6, 58, 11, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 390911082, 'comment_body': 'ok, done\r\n', 'comment_created': datetime.datetime(2020, 3, 11, 11, 37, 11, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 390911115, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 3, 11, 11, 37, 15, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 390911147, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 3, 11, 11, 37, 19, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 390911195, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 3, 11, 11, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 390912469, 'comment_body': 'sorry, no some reason, just a small oversight', 'comment_created': datetime.datetime(2020, 3, 11, 11, 39, 39, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 390912518, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 3, 11, 11, 39, 45, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 390912557, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 3, 11, 11, 39, 50, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}]","[{'commit_sha': 'f705967383b95cbffd17cf93704b600dc99c6787', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
387691108,Issue #7800: Resolve Pitest Issues - AvoidStarImportCheck(2),"Issue #7800: Resolve Pitest Issues - AvoidStaticImportCheck(2)

As described as in #7800:

**Pitest report**

Link: https://huganghui.github.io/7800-AvoidStarImportCheck(2)/before-pit-reports/202003131405/
Surviving mutations:
on line 188: removed conditional - replaced equality check with false → SURVIVED I am focusing on it.
on line 224: removed conditional - replaced equality check with true → SURVIVED referenced by #7799, wilcoln is focusing on it.

**Hardcoded mutation**

mutation cs branch: https://github.com/HuGanghui/checkstyle/commit/1578ac0229711f39a4a7c77457f430491918cd57
comment:
Looking at the pitest report, we can see that the surviving mutation is the one for which removed conditional - replaced equality check with false → SURVIVED, this is equivalent as simply removing the entire condition and keeping only the else body. Which I did.

**Regression diff report**

Used only guava and elastic-search, but there is no diff found.
Link: https://huganghui.github.io/7800-AvoidStarImportCheck(2)/hardcoded-reports/diff/

**Code Logic Analysis**

Although there is no diff found in Regression diff report, I find that the reason why the surviving mutation exists is maybe a small oversight in an existing UT , details as follows: https://github.com/checkstyle/checkstyle/blob/91f13c1d2ac273f89f12dac7fb83505f42a7bbe1/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheckTest.java#L63

javax.swing.WindowConstants is redundant in this UT, so I remove this import and do Pitest, report shows it can kill the mutation.

**Pitest report after removing redundant code in the UT mentioned above**

Link: https://huganghui.github.io/7800-AvoidStarImportCheck(2)/after-pit-reports/202003131742/
now on line 188, is KILLED
on line 188: removed conditional - replaced equality check with false → KILLED",True,7840,https://api.github.com/repos/checkstyle/checkstyle/pulls/7840,https://github.com/checkstyle/checkstyle/pull/7840,closed,1,2,2,1,3,0,0,1,[],2020-03-13 10:03:37+00:00,2020-03-15 11:55:26+00:00,179509.0,"2 days, 1:51:49",[],"[{'commit_sha': 'a55a719a8208d49a14ade113300d8afba0c5d3f2', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
387735214,Issue #7590: Update doc for OuterTypeFilename,"Issue #7590: Update doc for OuterTypeFilename

<img width=""848"" alt=""image"" src=""https://user-images.githubusercontent.com/50866227/76685457-b944d680-664e-11ea-8695-ce19226c70b9.png"">


Output of configure the check: 
$ cat config.xml
```xml
<?xml version=""1.0""?>
<!DOCTYPE module PUBLIC
        ""-//Checkstyle//DTD Checkstyle Configuration 1.3//EN""
        ""https://checkstyle.org/dtds/configuration_1_3.dtd"">
<module name=""Checker"">
    <module name=""TreeWalker"">
        <module name=""OuterTypeFilename""/>
    </module>
</module>
```
$ cat Test.java
```java
public class Test { // OK

}
```
$ RUN_LOCALE=""-Duser.language=en -Duser.country=US""
$ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java
Starting audit...
Audit done.
$ cat Test.java
```java
class Foo { // violation

}
```
$ RUN_LOCALE=""-Duser.language=en -Duser.country=US""
$ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java
Starting audit...
[ERROR] /var/tmp/Test.java:1: The name of the outer type and the file do not match. [OuterTypeFilename]
Audit done.
Checkstyle ends with 1 errors.

$ cat Test.java
```java
interface Foo { // violation

}
```
$ RUN_LOCALE=""-Duser.language=en -Duser.country=US""
$ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java
Starting audit...
[ERROR] /var/tmp/Test.java:1: The name of the outer type and the file do not match. [OuterTypeFilename]
Audit done.
Checkstyle ends with 1 errors.

$ cat Test.java
```java
enum Foo { // violation

}
```
$ RUN_LOCALE=""-Duser.language=en -Duser.country=US""
$ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java
Starting audit...
[ERROR] /var/tmp/Test.java:1: The name of the outer type and the file do not match. [OuterTypeFilename]
Audit done.
Checkstyle ends with 1 errors.",True,7842,https://api.github.com/repos/checkstyle/checkstyle/pulls/7842,https://github.com/checkstyle/checkstyle/pull/7842,closed,47,0,2,1,4,7,0,1,[],2020-03-13 11:46:53+00:00,2020-03-16 18:55:34+00:00,284921.0,"3 days, 7:08:41","[{'comment_id': 392560933, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2020, 3, 14, 6, 10, 26, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 392560953, 'comment_body': 'such example wont compile', 'comment_created': datetime.datetime(2020, 3, 14, 6, 10, 44, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 392560991, 'comment_body': 'Please also add examples for interface and enum as well', 'comment_created': datetime.datetime(2020, 3, 14, 6, 11, 13, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 392563160, 'comment_body': 'remove public is ok?', 'comment_created': datetime.datetime(2020, 3, 14, 6, 54, 53, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 392570068, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 3, 14, 9, 5, 45, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 392570104, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 3, 14, 9, 5, 54, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 392570111, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 3, 14, 9, 5, 58, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}]","[{'commit_sha': 'f9efe7ffc727fe534e0cc7d75d740f45656e11d5', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
387844726,Issue #7755: Update AbstractChecks to log DetailAST - OuterTypeFilename,"Issue #7755: Update AbstractChecks to log DetailAST - OuterTypeFilename

https://github.com/checkstyle/checkstyle/blob/0823da3cf1820603a155b5c8f14d5dfa63fe92b5/src/main/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheck.java#L118

Diff report:
https://huganghui.github.io/7755-DetailAST-outerTypeFilename/reports/diff/",True,7844,https://api.github.com/repos/checkstyle/checkstyle/pulls/7844,https://github.com/checkstyle/checkstyle/pull/7844,closed,105,10,10,1,0,4,0,1,[],2020-03-13 15:39:17+00:00,2020-03-15 11:38:01+00:00,158324.0,"1 day, 19:58:44","[{'comment_id': 392578931, 'comment_body': ""Please explain the changes to this file. We weren't expecting them."", 'comment_created': datetime.datetime(2020, 3, 14, 11, 42, 47, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 392580195, 'comment_body': 'ok, Because if I don\'t change the file, a failure will happen when I run mvn clean verify. So I change it according the error information, error details as follows : \r\n\r\n[INFO] --- maven-antrun-plugin:1.8:run (ant-phase-verify) @ checkstyle ---\r\n[INFO] Executing tasks\r\n\r\nmain:\r\n\r\nexecute:\r\n     [echo] Checkstyle started (checkstyle_checks.xml): 14/03/2020 08:01:21 PM\r\n[checkstyle] Running Checkstyle  on 1115 files\r\n     [echo] Checkstyle finished (checkstyle_checks.xml) : 14/03/2020 08:02:04 PM\r\n     [echo] Checkstyle started (checkstyle_non_main_files_checks.xml): 14/03/2020 08:01:21 PM\r\n[checkstyle] Running Checkstyle  on 1954 files\r\n     [echo] Checkstyle finished (checkstyle_non_main_files_checks.xml): 14/03/2020 08:02:04 PM\r\n     [echo] Checkstyle started (checkstyle_resources_checks.xml): 14/03/2020 08:01:21 PM\r\n[checkstyle] Running Checkstyle  on 1700 files\r\n[checkstyle] [ERROR] /Users/hgh/Desktop/checkstyle/src/it/resources/org/checkstyle/suppressionxpathfilter/outertypefilename/SuppressionXpathRegressionOuterTypeFilename1.java:3:1: The name of the outer type and the file do not match. [OuterTypeFilename]\r\n[checkstyle] [ERROR] /Users/hgh/Desktop/checkstyle/src/it/resources/org/checkstyle/suppressionxpathfilter/outertypefilename/SuppressionXpathRegressionOuterTypeFilename2.java:3:1: The name of the outer type and the file do not match. [OuterTypeFilename]\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time: 02:54 min\r\n[INFO] Finished at: 2020-03-14T20:02:09+08:00\r\n[INFO] ------------------------------------------------------------------------\r\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-antrun-plugin:1.8:run (ant-phase-verify) on project checkstyle: An Ant BuildException has occured: The following error occurred while executing this line:\r\n[ERROR] /Users/hgh/Desktop/checkstyle/config/ant-phase-verify.xml:138: Got 2 errors and 0 warnings.\r\n[ERROR] around Ant part ...<ant antfile=""config/ant-phase-verify.xml""/>... @ 8:47 in /Users/hgh/Desktop/checkstyle/target/antrun/build-main.xml\r\n[ERROR] -> [Help 1]\r\n[ERROR] \r\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\r\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\r\n[ERROR] \r\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\r\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException\r\n\r\nIf it is not a good way to solve this problem, please give me some advices, thanks.', 'comment_created': datetime.datetime(2020, 3, 14, 12, 6, 15, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 392582181, 'comment_body': 'Ok. You cannot exclude the entire file. You must suppress the violations as this is what your test is checking against.\r\nhttps://checkstyle.org/config_filters.html\r\n\r\nSee https://github.com/checkstyle/checkstyle/blob/master/config/checkstyle_non_main_files_suppressions.xml', 'comment_created': datetime.datetime(2020, 3, 14, 12, 20, 25, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 392644816, 'comment_body': 'ok, done and to be precise, it should be configured in https://github.com/checkstyle/checkstyle/blob/master/config/checkstyle_resources_suppressions.xml', 'comment_created': datetime.datetime(2020, 3, 15, 6, 12, 24, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}]","[{'commit_sha': '7ef09574bea77f9f495b9d674ba55cadf802fe3c', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
388744114,Issue #7744: Update AbstractChecks to log DetailAST - MissingCtor,"Issue #7744: Update AbstractChecks to log DetailAST - MissingCtor

https://github.com/checkstyle/checkstyle/blob/5ec8cfe4ded197c67f0f4bb8edfddde1d34d78c1/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingCtorCheck.java#L71

Diff report:
https://huganghui.github.io/7744-DetailAST-missing-ctor/reports/diff/",True,7852,https://api.github.com/repos/checkstyle/checkstyle/pulls/7852,https://github.com/checkstyle/checkstyle/pull/7852,closed,136,7,9,1,8,2,0,1,[],2020-03-15 15:38:42+00:00,2020-03-18 12:28:20+00:00,247778.0,"2 days, 20:49:38","[{'comment_id': 394101683, 'comment_body': '@rnveach I add a UT for this situation.', 'comment_created': datetime.datetime(2020, 3, 18, 4, 32, 13, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 394101877, 'comment_body': '@rnveach the example added.', 'comment_created': datetime.datetime(2020, 3, 18, 4, 33, 11, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}]","[{'commit_sha': '512c6e8f42a963423caa3eaffa8032fab9a19a55', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
389154624,Issue #7731: Update AbstractChecks to log DetailAST - FinalClass,"Issue #7731: Update AbstractChecks to log DetailAST - FinalClass

https://github.com/HuGanghui/checkstyle/blob/960d437846eb39ae1a52791528d73867c08982bf/src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java#L137

diff report:
https://huganghui.github.io//7731-DetailAST-final-class/reports/reports/diff/",True,7863,https://api.github.com/repos/checkstyle/checkstyle/pulls/7863,https://github.com/checkstyle/checkstyle/pull/7863,closed,116,11,8,1,2,0,0,1,[],2020-03-16 11:02:35+00:00,2020-03-18 12:44:46+00:00,178931.0,"2 days, 1:42:11",[],"[{'commit_sha': 'e96a0caa6e126f4e39e33d6172128c5b7393e64f', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
390782348,doc: fix typo in config_whitespace.xml,doc: fix typo in config_whitespace.xml ,True,7898,https://api.github.com/repos/checkstyle/checkstyle/pulls/7898,https://github.com/checkstyle/checkstyle/pull/7898,closed,1,1,1,1,0,2,0,0,[],2020-03-19 03:54:14+00:00,2020-03-20 15:10:42+00:00,126988.0,"1 day, 11:16:28","[{'comment_id': 395719720, 'comment_body': ""Issue must be because our UT doesn't validate the URL. It would be great if someone could expand the UT to also check the URL then we wouldn't have this problem again."", 'comment_created': datetime.datetime(2020, 3, 20, 15, 37, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 395732863, 'comment_body': 'I am willing to try it, after I finish my proposal of GSoC Checkstyle recently.', 'comment_created': datetime.datetime(2020, 3, 20, 15, 57, 22, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}]","[{'commit_sha': 'e70472cb845dfc570951405c8a3b4979334d0c76', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
391624402,Issue #6707: fix false violation report that does not allow spaces in front of ellipsis tokens for Google Style,"Issue #6707: fix false violation report that does not allow spaces in front of ellipsis tokens for Google Style, specific information are in issue.

diff report:
https://huganghui.github.io/6707-ellipsis/diff/",True,7916,https://api.github.com/repos/checkstyle/checkstyle/pulls/7916,https://github.com/checkstyle/checkstyle/pull/7916,closed,60,2,4,1,13,31,0,1,[],2020-03-20 16:23:21+00:00,2020-05-29 11:15:38+00:00,6029537.0,"69 days, 18:52:17","[{'comment_id': 396036337, 'comment_body': 'we do not need to remove token from Check and will break a lot in this world.\r\n\r\nIf Google style do not need this token, ti should be removed from Google config.', 'comment_created': datetime.datetime(2020, 3, 21, 22, 55, 24, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 396053350, 'comment_body': ""@romani @rnveach I understand, so we don't need change anything about #6707, it can be fixed through user's configuration, right?  "", 'comment_created': datetime.datetime(2020, 3, 22, 4, 30, 35, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 396719139, 'comment_body': 'Yes, at  least  that is  how see issue now.\r\nAs you generate diff report we might see some other issue.', 'comment_created': datetime.datetime(2020, 3, 23, 19, 55, 4, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 412965335, 'comment_body': 'please revert this change.', 'comment_created': datetime.datetime(2020, 4, 22, 13, 7, 12, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 412966212, 'comment_body': 'please add to google style IT Inputs bunch of code with all possible combinations of `...` and annotations.', 'comment_created': datetime.datetime(2020, 4, 22, 13, 8, 23, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 412966912, 'comment_body': 'please update default NoWhitespaceBefore to have no `ELLIPSIS` in tokens list.', 'comment_created': datetime.datetime(2020, 4, 22, 13, 9, 20, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 414281841, 'comment_body': 'done\r\n', 'comment_created': datetime.datetime(2020, 4, 24, 4, 22, 25, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 414281874, 'comment_body': 'done\r\n', 'comment_created': datetime.datetime(2020, 4, 24, 4, 22, 33, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 414281950, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 24, 4, 22, 49, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 414283280, 'comment_body': 'I think this checkConfig is not proper for google style, but I do not find a way to add attribute to config like https://github.com/checkstyle/checkstyle/blob/11bb48abe8bff4c8c7597de5c667ea2ca935475e/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceBeforeCheckTest.java#L76', 'comment_created': datetime.datetime(2020, 4, 24, 4, 27, 13, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 414540039, 'comment_body': 'please move this token to config instance above, no need to have two instances.', 'comment_created': datetime.datetime(2020, 4, 24, 12, 32, 56, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 414557424, 'comment_body': 'you do not need to update Test to add attribute, if you need such token - add it to google_checks.xml file.\r\nSuch tests do validation of google config as is, without any modification.\r\nSuch tests are not tests for Check, they are tests for exact config.', 'comment_created': datetime.datetime(2020, 4, 24, 13, 1, 15, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 414558089, 'comment_body': 'In issue I provided several usecases, please use them all and be creative and do even more, the weirder code the better.', 'comment_created': datetime.datetime(2020, 4, 24, 13, 2, 17, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 415926001, 'comment_body': 'done, I get it', 'comment_created': datetime.datetime(2020, 4, 27, 15, 44, 44, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415926065, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 27, 15, 44, 49, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415926169, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 27, 15, 44, 58, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 416650814, 'comment_body': 'please make Input like https://github.com/checkstyle/checkstyle/issues/6707#issuecomment-620635286\r\nWe need more test cases.', 'comment_created': datetime.datetime(2020, 4, 28, 14, 17, 49, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 416762888, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 28, 16, 41, 36, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 417275305, 'comment_body': '`// OK` , please fix other lines', 'comment_created': datetime.datetime(2020, 4, 29, 12, 27, 33, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 417275791, 'comment_body': 'please remove dot at the end of comment.', 'comment_created': datetime.datetime(2020, 4, 29, 12, 28, 21, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 417742592, 'comment_body': 'violation on 8.32\r\n\r\nShould be ""//ok"".', 'comment_created': datetime.datetime(2020, 4, 30, 4, 11, 1, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 417863067, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 30, 9, 3, 5, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 417863121, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 30, 9, 3, 11, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 419035290, 'comment_body': 'lowercase b in `Between` and please add the rule number that specifies where google allows it. I assume this is 4.6.2 point 9?', 'comment_created': datetime.datetime(2020, 5, 3, 2, 17, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 419035691, 'comment_body': '@romani I am not seeing where it is saying this expected/allowed.\r\nhttps://checkstyle.org/styleguides/google-java-style-20180523/javaguide.html#s4.6.2-horizontal-whitespace\r\n> a single ASCII space also appears in the following places only.\r\n> Between a type annotation and [] or ....\r\n\r\nThere is no type annotation here and guide specifically says space is ONLY allowed where google defined it. There is no type annotation here, so there should be a violation.\r\n\r\nhttps://github.com/checkstyle/checkstyle/issues/6707#issuecomment-602116682\r\n> there is no item for space between type and [], so It is ok to demand no space before ....\r\n\r\nIt seems we are in agreement then? Nothing I see says this will be fixed later.\r\n\r\nI am expecting changes to the logic of the check to look for annotation or not as specified in https://github.com/checkstyle/checkstyle/issues/6707#issuecomment-602065180', 'comment_created': datetime.datetime(2020, 5, 3, 2, 23, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 419123278, 'comment_body': '> There is no type annotation here, so there should be a violation.\r\n\r\n@rnveach, yes, you are right, I updated #8205 . We need to put here `// ok until #8205`.\r\n@HuGanghui , please do the same for other similar cases.\r\n\r\nWe should remove token from Check config in google as it is error prone (it is better to not bother user with false-positives, no violation is much better for user experience). \r\nWe will do new Check for this to address validation properly.\r\n\r\n> I am expecting changes to the logic of the check to look for annotation or not as specified in\r\n\r\nLets move it #8205 , I think new Check should be created.', 'comment_created': datetime.datetime(2020, 5, 3, 16, 1, 34, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 419125838, 'comment_body': 'This comment should only be for ellipsis. We will have different comments for each tokens.\r\n\r\nPlease also update reasoning as described in next point.', 'comment_created': datetime.datetime(2020, 5, 3, 16, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 419204288, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 5, 4, 3, 54, 11, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 419205425, 'comment_body': 'done, I update according to the first comment, please give me more information about `Please also update reasoning as described in next point.`', 'comment_created': datetime.datetime(2020, 5, 4, 4, 3, 5, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 432334463, 'comment_body': '@HuGanghui I guess corrected code is not ok since now comment on line 241\r\n`// google uses GenericWhitespace for this behavior` looks weird\r\nI think it was suggested to make it like\r\n```\r\n // comment\r\ntoken1, token2,\r\n// another comment\r\nellipsis\r\n```\r\n\r\nAlso, it seems that ELLIPSIS should be lowercase', 'comment_created': datetime.datetime(2020, 5, 29, 8, 29, 38, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 432388006, 'comment_body': 'ok ,I get it, done', 'comment_created': datetime.datetime(2020, 5, 29, 10, 10, 39, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}]","[{'commit_sha': '2488b93af640ab583d58a9146135dbeebac0639d', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
391969007,Issue #7612: Update doc for InterfaceIsType,"Issue #7612: Update doc for InterfaceIsType

<img width=""658"" alt=""image"" src=""https://user-images.githubusercontent.com/50866227/77244694-20681980-6c53-11ea-85f5-83eb003399f9.png"">

Ouput of default example:
$ cat config.xml
```xml
<?xml version=""1.0""?>
<!DOCTYPE module PUBLIC
        ""-//Checkstyle//DTD Checkstyle Configuration 1.3//EN""
        ""https://checkstyle.org/dtds/configuration_1_3.dtd"">
<module name=""Checker"">
    <module name=""TreeWalker"">
        <module name=""InterfaceIsType""/>
    </module>
</module>
```
$ cat Test.java
```java
public interface Test1 { // violation
    int a = 3;
}

interface Test2 { // OK

}

interface Test3 { // OK
    int a = 3;
    void test();
}
```
$ RUN_LOCALE=""-Duser.language=en -Duser.country=US""
$ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java
Starting audit...
[ERROR] /var/tmp/Test.java:1: interfaces should describe a type and hence have methods. [InterfaceIsType]
Audit done.
Checkstyle ends with 1 errors.

Ouput of configure the check to report violation so that it doesn't allow Marker Interfaces: 
$ cat config.xml
```xml
<?xml version=""1.0""?>
<!DOCTYPE module PUBLIC
        ""-//Checkstyle//DTD Checkstyle Configuration 1.3//EN""
        ""https://checkstyle.org/dtds/configuration_1_3.dtd"">
<module name=""Checker"">
    <module name=""TreeWalker"">
        <module name=""InterfaceIsType"">
                 <property name=""allowMarkerInterfaces"" value=""false""/>
        </module>
    </module>
</module>
```
$ cat Test.java
```java
public interface Test1 { // violation
    int a = 3;
}

interface Test2 { // violation

}
```
$ RUN_LOCALE=""-Duser.language=en -Duser.country=US""
$ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java
Starting audit...
[ERROR] /var/tmp/Test.java:1: interfaces should describe a type and hence have methods. [InterfaceIsType]
[ERROR] /var/tmp/Test.java:6: interfaces should describe a type and hence have methods. [InterfaceIsType]
Audit done.
Checkstyle ends with 2 errors.
",True,7934,https://api.github.com/repos/checkstyle/checkstyle/pulls/7934,https://github.com/checkstyle/checkstyle/pull/7934,closed,66,0,2,1,0,0,0,0,[],2020-03-22 07:46:19+00:00,2020-03-24 15:44:25+00:00,201486.0,"2 days, 7:58:06",[],"[{'commit_sha': '25466bc71332db50c69053434b17b32fd54f9007', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
393957382,Issue #7735: Update AbstractChecks to log DetailAST - InterfaceIsType,"Issue #7735: Update AbstractChecks to log DetailAST - InterfaceIsType


diff report : 
https://huganghui.github.io/7735-DetailAST-InterfaceIsType/reports/",True,7967,https://api.github.com/repos/checkstyle/checkstyle/pulls/7967,https://github.com/checkstyle/checkstyle/pull/7967,closed,109,9,8,1,3,2,0,0,[],2020-03-26 04:58:54+00:00,2020-04-08 09:45:46+00:00,1140412.0,"13 days, 4:46:52","[{'comment_id': 398554080, 'comment_body': 'Indentation seems incorrect (espessially comparing with the same list from testOne). Please recheck formatting', 'comment_created': datetime.datetime(2020, 3, 26, 13, 3, 17, tzinfo=datetime.timezone.utc), 'commenter': 'baratali', 'type': 'User'}, {'comment_id': 398690743, 'comment_body': 'Thanks, done, actually, it is testOne whose format is not good and I have changed it.', 'comment_created': datetime.datetime(2020, 3, 26, 16, 1, 37, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}]","[{'commit_sha': '355dd202900a7b27b26472ec10b79c480e2376b8', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
402286059,Issue #7889: add UT to validate URL is correct in config.xml and fix a typo,"solve a typo which is mentioned in #7889 Broken link - AvoidDoubleBraceInitialization, and I add UT to validate URL is correct. 
And I find that there are three special cases:

CommentsIndentation:

java file in **src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation** but in checks.xml belongs to misc
https://github.com/checkstyle/checkstyle/blob/90ba1b8a82a20afcd45c89591dea49a7d0dc45bb/src/xdocs/checks.xml#L142

Indentation:

java file in **src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation** but in checks.xml belongs to misc
https://github.com/checkstyle/checkstyle/blob/90ba1b8a82a20afcd45c89591dea49a7d0dc45bb/src/xdocs/checks.xml#L350

SuppressWarningsHolder:

java file in **src/main/java/com/puppycrawl/tools/checkstyle/checks** but in checks.xml belongs to annotation
https://github.com/checkstyle/checkstyle/blob/90ba1b8a82a20afcd45c89591dea49a7d0dc45bb/src/xdocs/checks.xml#L951

I am not sure they are special cases or mistakes, I take them as special cases temporarily.
",True,8075,https://api.github.com/repos/checkstyle/checkstyle/pulls/8075,https://github.com/checkstyle/checkstyle/pull/8075,closed,196,1,2,1,4,88,0,1,[],2020-04-12 04:40:19+00:00,2020-05-21 09:40:18+00:00,3387599.0,"39 days, 4:59:59","[{'comment_id': 412371351, 'comment_body': 'I try to add this to suppress CloseResource violation in pmd, but it not effects. I need some help', 'comment_created': datetime.datetime(2020, 4, 21, 17, 57, 22, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 412375220, 'comment_body': 'I try my best but not find a way to solve CloseResource violation in pmd. If I add try-catch to fix violation in pmd, I will get another violation that Checkstyle only allow failure in try-catch when this is Test class.', 'comment_created': datetime.datetime(2020, 4, 21, 18, 2, 41, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 412627836, 'comment_body': 'done\r\n', 'comment_created': datetime.datetime(2020, 4, 22, 2, 44, 23, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 412797309, 'comment_body': 'please use try-with-resources here', 'comment_created': datetime.datetime(2020, 4, 22, 8, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 412797710, 'comment_body': 'please see other comment, it is better to avoid new suppressions', 'comment_created': datetime.datetime(2020, 4, 22, 8, 52, 52, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 412798314, 'comment_body': '`strings != null && strings[0] != null && qName.equals(nodeName)` this check is duplicated (see previous method)', 'comment_created': datetime.datetime(2020, 4, 22, 8, 53, 46, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 414386961, 'comment_body': 'now I use try but not catch block and it is ok. But when I use try-catch, will have a error as follows:\r\n[INFO] --- maven-checkstyle-plugin:3.1.1:check (sevntu-checkstyle-check) @ checkstyle ---\r\n[INFO] There is 1 error reported by Checkstyle 8.29 with /Users/hgh/Desktop/checkstyle/config/checkstyle_sevntu_checks.xml ruleset.\r\n[ERROR] **src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsUrlTest.java:[99,9] (extension) RequireFailForTryCatchInJunit: try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely.**\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time: 02:03 min\r\n[INFO] Finished at: 2020-04-24T16:16:58+08:00\r\n[INFO] ------------------------------------------------------------------------\r\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:3.1.1:check (sevntu-checkstyle-check) on project checkstyle: You have 1 Checkstyle violation. -> [Help 1]\r\n[ERROR] \r\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\r\n\r\nis it ok just use try block?', 'comment_created': datetime.datetime(2020, 4, 24, 8, 19, 11, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 414388886, 'comment_body': 'done~', 'comment_created': datetime.datetime(2020, 4, 24, 8, 22, 19, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 414388968, 'comment_body': 'done~', 'comment_created': datetime.datetime(2020, 4, 24, 8, 22, 26, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 414390060, 'comment_body': 'actually, it is not duplicated and is meaningful. If I remove `strings != null && strings[0] != null` or  `strings != null`, it will both have null point error.', 'comment_created': datetime.datetime(2020, 4, 24, 8, 24, 11, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 414482892, 'comment_body': 'why not use static final field? Such method looks weird', 'comment_created': datetime.datetime(2020, 4, 24, 10, 52, 15, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 414483615, 'comment_body': '```\r\n""URL in"" + getXmlPath() + "" is inconsistent: ""\r\n                            + sub[0] + "" "" + sub[1] + "" "" + sub[2]\r\n```\r\nThis string is duplicated 4 times. Please create a variable with this value and reuse it', 'comment_created': datetime.datetime(2020, 4, 24, 10, 53, 40, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 414484388, 'comment_body': ""why don't use List instead of array? you can change both checks to just `!list.isEmpty()`"", 'comment_created': datetime.datetime(2020, 4, 24, 10, 55, 2, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 414484725, 'comment_body': '`substring(0, 7)` why 7? please avoid magic numbers', 'comment_created': datetime.datetime(2020, 4, 24, 10, 55, 39, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 414485843, 'comment_body': '```\r\n(rootDir, pathname) -> {\r\n                    return pathname.endsWith(SUFFIX_CHECK_JAVA);\r\n                }\r\n```\r\nthis predicate is also duplicated 3 times (negation counts as well), please make it a variable', 'comment_created': datetime.datetime(2020, 4, 24, 10, 57, 35, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 414486861, 'comment_body': '`System.getProperty(""user.dir"")` I do not really understand purpose of this', 'comment_created': datetime.datetime(2020, 4, 24, 10, 59, 29, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 414487563, 'comment_body': ""Why don't use list or map? it is way more convenient than multidimensional arrays. Please change."", 'comment_created': datetime.datetime(2020, 4, 24, 11, 0, 53, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 414570344, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 24, 13, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 414570427, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 24, 13, 20, 56, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 414570561, 'comment_body': 'done~', 'comment_created': datetime.datetime(2020, 4, 24, 13, 21, 6, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 414570645, 'comment_body': 'done~', 'comment_created': datetime.datetime(2020, 4, 24, 13, 21, 14, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 414570925, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 24, 13, 21, 34, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 414575203, 'comment_body': 'done, I use Paths.get() to get file path now', 'comment_created': datetime.datetime(2020, 4, 24, 13, 27, 30, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 414575509, 'comment_body': 'done~', 'comment_created': datetime.datetime(2020, 4, 24, 13, 27, 58, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415051506, 'comment_body': 'I see no need for this variable', 'comment_created': datetime.datetime(2020, 4, 25, 12, 19, 28, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415051514, 'comment_body': 'why do you need to convert it to Path?\r\nI see 2 usages and both of them converting path to string.', 'comment_created': datetime.datetime(2020, 4, 25, 12, 19, 32, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415052123, 'comment_body': 'Please use String.format', 'comment_created': datetime.datetime(2020, 4, 25, 12, 23, 10, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415052252, 'comment_body': '`assertEquals`\r\nFor new unit tests google Truth assertWithMessage should be used', 'comment_created': datetime.datetime(2020, 4, 25, 12, 23, 52, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415052403, 'comment_body': 'same for other assertions', 'comment_created': datetime.datetime(2020, 4, 25, 12, 24, 48, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415052593, 'comment_body': 'why you need to create copy of list?\r\nI see no usages of this getList() method in code', 'comment_created': datetime.datetime(2020, 4, 25, 12, 26, 4, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415052842, 'comment_body': '`.substring(0, PREFIX_CONFIG.length()).equals(PREFIX_CONFIG)`\r\nstartsWith(PREFIX_CONFIG) looks simpler', 'comment_created': datetime.datetime(2020, 4, 25, 12, 27, 36, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415053105, 'comment_body': '`splitStrings[0].substring(PREFIX_CONFIG.length()).split(SPLIT_TWO)[0];`\r\nIt is not clear how module name is extracted. ', 'comment_created': datetime.datetime(2020, 4, 25, 12, 29, 10, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415053213, 'comment_body': '`checkName1 + SUFFIX_CHECK_JAVA`\r\nshould be extracted to variable to avoid concat every time', 'comment_created': datetime.datetime(2020, 4, 25, 12, 29, 56, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415206344, 'comment_body': 'String.format is forbidden, so I retain it\r\n\r\n[ERROR] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\r\n[ERROR]   in com.puppycrawl.tools.checkstyle.internal.XdocsUrlTest (XdocsUrlTest.java:99)\r\n[ERROR] Scanned 2034 class file(s) for forbidden API invocations (in 1.54s), 1 error(s).', 'comment_created': datetime.datetime(2020, 4, 26, 3, 51, 21, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415206593, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 26, 3, 53, 15, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415206645, 'comment_body': 'done, this is  not necessary', 'comment_created': datetime.datetime(2020, 4, 26, 3, 53, 41, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415206663, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 26, 3, 53, 49, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415206688, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 26, 3, 53, 53, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415206748, 'comment_body': 'done, remove it, it is redundant\r\n', 'comment_created': datetime.datetime(2020, 4, 26, 3, 54, 18, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415206772, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 26, 3, 54, 23, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415206784, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 26, 3, 54, 29, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415206795, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 26, 3, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415259985, 'comment_body': 'It is not forbidden, its usage without explicit locale setting is forbidden.\r\nYou should use String.format(Locale.ROOT, ""template"", args) method\r\nYou can find examples in codebase', 'comment_created': datetime.datetime(2020, 4, 26, 9, 4, 6, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415260529, 'comment_body': 'It is not clear.\r\nThe reason I am asking is that variable names like `splitStrings`, `SPLIT_ONE` and `SPLIT_TWO` tells me nothing about logic, it is hard to follow.', 'comment_created': datetime.datetime(2020, 4, 26, 9, 6, 54, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415261204, 'comment_body': '`checkName1` and `checkName2` please rename to make it more understandable', 'comment_created': datetime.datetime(2020, 4, 26, 9, 10, 36, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415261468, 'comment_body': 'here just names are listed, but it is not clear what it is incorrect', 'comment_created': datetime.datetime(2020, 4, 26, 9, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415261986, 'comment_body': 'no need to make a constructor for this, the only value for node is ""a"", it can be used directly', 'comment_created': datetime.datetime(2020, 4, 26, 9, 14, 46, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415262174, 'comment_body': 'please rename variables. It is confusing to see `list` and `stringList`, it is not clear what they are for', 'comment_created': datetime.datetime(2020, 4, 26, 9, 15, 56, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415342758, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 26, 16, 4, 37, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415342792, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 26, 16, 4, 47, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415342875, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 26, 16, 5, 9, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415342879, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 26, 16, 5, 13, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415342888, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 26, 16, 5, 17, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415343007, 'comment_body': 'done~', 'comment_created': datetime.datetime(2020, 4, 26, 16, 5, 56, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415664733, 'comment_body': 'it looks like same thing can be done with simple regex (remove start and end of module name\r\n`moduleNameWithHtml.replaceAll(("".*config_)|(\\\\.html.*))`', 'comment_created': datetime.datetime(2020, 4, 27, 9, 40, 45, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415668149, 'comment_body': 'it is better to have this list and clear it every time, e.g.\r\n```\r\nif(qName.equals(NODE_NAME)) {\r\n  checkNamesList.addAll(singleCheckNameList);\r\n  singleCheckNameList.clear();\r\n}\r\n```\r\nAnd you can remove line 158 and init field with empty list\r\nSame can be done for checkNamesList ( can be cleared in endDocument method)', 'comment_created': datetime.datetime(2020, 4, 27, 9, 45, 49, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415669501, 'comment_body': ""1. checkName -> Check with name\r\n2. all %s -> '%s'\r\n3. with %s -> with check name\r\n4.  text in %s -> text in file '%s'\r\n"", 'comment_created': datetime.datetime(2020, 4, 27, 9, 47, 47, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415669597, 'comment_body': 'same here', 'comment_created': datetime.datetime(2020, 4, 27, 9, 47, 56, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415878457, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 27, 14, 49, 6, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415883773, 'comment_body': 'it is not proper, although singleCheckNameList is added to checkNamesList, two references point to the same object, so if clear(), checkNamesList will contain nothing. Same as checkNamesList if it is cleared in endDocument, error will happen in line 94 ""for (List<String> sub : checkHandler.checkNamesList) {"" which is empty', 'comment_created': datetime.datetime(2020, 4, 27, 14, 55, 3, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415883865, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 27, 14, 55, 9, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415883924, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 27, 14, 55, 13, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 416522847, 'comment_body': 'no, it is not done :)', 'comment_created': datetime.datetime(2020, 4, 28, 11, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 416674859, 'comment_body': 'done, sorry I missed it.', 'comment_created': datetime.datetime(2020, 4, 28, 14, 47, 15, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 419036416, 'comment_body': ""I assume this is getting the list of checks in checkstyle and their packages. Why don't you just use `CheckUtil.getCheckstyleChecks` ?"", 'comment_created': datetime.datetime(2020, 5, 3, 2, 32, 1, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 419105592, 'comment_body': 'becase 1. `CheckUtil.getCheckstyleChecks` only return checks that are TreeWalkerCheck, but checks.xml contains all checks, such as HeaderCheck, LineLengthCheck and so on 2. and `CheckUtil.getCheckstyleChecks` return a Set<Class<?>>, which is not classified according to packages so we also need to the similar work to classify it. ', 'comment_created': datetime.datetime(2020, 5, 3, 13, 42, 11, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 419111629, 'comment_body': '1. There is `CheckUtil.getCheckstyleModules` which will return everything. You can use `ModuleReflectionUtil` to trim down to the specifics you need.\r\n2. Since you get the class, you can obtain the package name from that and build using a Map and list.\r\n\r\nBy scanning files you are going to get more than final classes, you could pick up abstract classes like `AbstractSuperCheck` and any misc files we have to add.', 'comment_created': datetime.datetime(2020, 5, 3, 14, 30, 24, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 422474933, 'comment_body': 'ok, done~', 'comment_created': datetime.datetime(2020, 5, 9, 9, 30, 41, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 423363325, 'comment_body': 'As I mentioned, you should use `ModuleReflectionUtil` to find each type of module.\r\nYou are just looking for `isCheckstyleTreeWalkerCheck` and `isFileSetModule`.', 'comment_created': datetime.datetime(2020, 5, 11, 22, 48, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 423364383, 'comment_body': ""Why are all these fields public? If they aren't used outside this class, they should be private."", 'comment_created': datetime.datetime(2020, 5, 11, 22, 51, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 423364711, 'comment_body': 'You could just do `check.getPackage()`', 'comment_created': datetime.datetime(2020, 5, 11, 22, 52, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 423364825, 'comment_body': 'You could just do `check.getSimpleName()`', 'comment_created': datetime.datetime(2020, 5, 11, 22, 53, 1, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 423450935, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 5, 12, 4, 12, 38, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 423450959, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 5, 12, 4, 12, 43, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 423451143, 'comment_body': 'done ', 'comment_created': datetime.datetime(2020, 5, 12, 4, 13, 30, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 423462858, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 5, 12, 5, 0, 37, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 426183139, 'comment_body': ""Can't we `or` the filter stream to combine the 2 checks, isCheckstyleTreeWalkerCheck and isFileSetModule? This way we only need to parse it once and only have 1 set."", 'comment_created': datetime.datetime(2020, 5, 16, 19, 24, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 426183318, 'comment_body': '`is not` => `does not`', 'comment_created': datetime.datetime(2020, 5, 16, 19, 26, 28, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 426183458, 'comment_body': 'This field can be made `final`.', 'comment_created': datetime.datetime(2020, 5, 16, 19, 28, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 426183669, 'comment_body': '`ArrayList` => `List`\r\nYou should use the interface over the exact declaration when possible.', 'comment_created': datetime.datetime(2020, 5, 16, 19, 31, 39, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 426183687, 'comment_body': 'Why `Iterable` over `List`?', 'comment_created': datetime.datetime(2020, 5, 16, 19, 32, 1, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 426183772, 'comment_body': 'Why not `moduleFileNames.contains(checkNameWithSuffix)`?', 'comment_created': datetime.datetime(2020, 5, 16, 19, 33, 2, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 427293545, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 5, 19, 13, 17, 8, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 427293600, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 5, 19, 13, 17, 14, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 427293643, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 5, 19, 13, 17, 17, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 427293681, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 5, 19, 13, 17, 20, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 427293856, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 5, 19, 13, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 427293902, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 5, 19, 13, 17, 38, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}]","[{'commit_sha': '6dc5d6e007ad8d0c94615c2cab818f3755e7ae9d', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
407087088,Issue #8118: Enforce -e for all maven commands,"Issue #8118: Enforce -e for all maven commands
I add RegexpSingleline to finish this task and I change 
```java
(mvn [^-])|(mvn \-[^e])
```
to 
```java
(mvn [^-])|(mvn \-[^e\-v])
```
to avoid false positive on 
```java
mvn --version
mvn -version
```",True,8164,https://api.github.com/repos/checkstyle/checkstyle/pulls/8164,https://github.com/checkstyle/checkstyle/pull/8164,closed,7,1,2,1,0,10,0,1,[],2020-04-22 06:58:21+00:00,2020-04-24 11:23:46+00:00,188725.0,"2 days, 4:25:25","[{'comment_id': 412943524, 'comment_body': 'please add `<property name=""message"" value=""mvn execution should be with \'-e\' option to produce error message in case of problem""/>` in this case you do not need comment above, the comments the better.\r\n\r\nhttps://books.sonatype.com/mvnref-book/reference/running-sect-options.html', 'comment_created': datetime.datetime(2020, 4, 22, 12, 37, 15, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 412945036, 'comment_body': 'this comment is not required ...\r\nBUT `<!--This` .... there is missed space and non of our checks complain about this, sad.\r\nAs you are good with regexp .... can you make regexp to validate missed space in comments ? \r\nAs separate issue and PR.\r\n\r\nI thought that we already do this validation, but I might forgot something.', 'comment_created': datetime.datetime(2020, 4, 22, 12, 39, 23, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 413031081, 'comment_body': 'done~', 'comment_created': datetime.datetime(2020, 4, 22, 14, 27, 15, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 413032309, 'comment_body': 'ok, my pleasure', 'comment_created': datetime.datetime(2020, 4, 22, 14, 28, 35, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 413097449, 'comment_body': ""I have a concern about adding `-` and `v` and that it could lead to false negatives. We are only looking for the 1 character and not even testing what comes after `--`.\r\n\r\nI don't know all maven arguments, but here is some examples I went off of:\r\n````\r\nmvn test\r\nmvn -e test\r\nmvn -version\r\nmvn --version\r\nmvn --not-e\r\nmvn -verbose no e\r\n````\r\n\r\nCan we do some type of lookahead check for this? Maybe: `(mvn [^-])|(mvn \\-(?!v)(?!-v)[^e])`\r\nThis won't hamper performance either, will it?\r\n"", 'comment_created': datetime.datetime(2020, 4, 22, 15, 45, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 413483173, 'comment_body': 'done, this is better!', 'comment_created': datetime.datetime(2020, 4, 23, 3, 32, 58, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 414266949, 'comment_body': 'please make it:\r\n```\r\n<property name=""message"" \r\n     value=""mvn execution should be with \'-e\' option to produce error message in case of problem""/>\r\n```\r\n\r\n`\\n` in message is not good. it makes output weird.', 'comment_created': datetime.datetime(2020, 4, 24, 3, 34, 10, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 414267132, 'comment_body': '@HuGanghui , please create issue on this and share here a link ', 'comment_created': datetime.datetime(2020, 4, 24, 3, 34, 48, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 414274529, 'comment_body': 'link is here, Making regex to validate missed space in comments in non main files #8169\r\n', 'comment_created': datetime.datetime(2020, 4, 24, 3, 59, 17, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 414286655, 'comment_body': 'done~', 'comment_created': datetime.datetime(2020, 4, 24, 4, 37, 52, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}]","[{'commit_sha': 'a0362fb58be339d591360417b433ea72167ac327', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
408893891,Issue #8169: Making regex to validate missed space in comments in non files,Issue #8169: Making regex to validate missed space in comments in non main files,True,8188,https://api.github.com/repos/checkstyle/checkstyle/pulls/8188,https://github.com/checkstyle/checkstyle/pull/8188,closed,141,124,25,1,4,10,0,1,[],2020-04-25 11:29:49+00:00,2020-05-21 10:02:48+00:00,2241179.0,"25 days, 22:32:59","[{'comment_id': 415050019, 'comment_body': '`space is required in comments` -> space is required after comment start', 'comment_created': datetime.datetime(2020, 4, 25, 12, 10, 25, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415050072, 'comment_body': '`space is required in comments` -> space is required before comment end', 'comment_created': datetime.datetime(2020, 4, 25, 12, 10, 42, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415050092, 'comment_body': 'same here', 'comment_created': datetime.datetime(2020, 4, 25, 12, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415091691, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 25, 16, 8, 10, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415091701, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 25, 16, 8, 14, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415091713, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 25, 16, 8, 17, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415257143, 'comment_body': '` #[^ !]""` regex value has space before it. Is it necessary?', 'comment_created': datetime.datetime(2020, 4, 26, 8, 49, 34, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415257246, 'comment_body': 'I think yaml should be added, just in case', 'comment_created': datetime.datetime(2020, 4, 26, 8, 50, 7, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 415351687, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 4, 26, 16, 50, 58, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 415352144, 'comment_body': 'I am not sure, but I think it will make the format of comment consistent at least, so I add this regex.', 'comment_created': datetime.datetime(2020, 4, 26, 16, 53, 7, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}]","[{'commit_sha': 'd4f635098772b4fc213780189ea55d85979f25e9', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
426098265,Issue #7766: Update AbstractChecks to log DetailAST - VariableDeclarationUsageDistance,Issue #7766: Update AbstractChecks to log DetailAST - VariableDeclarationUsageDistance,True,8292,https://api.github.com/repos/checkstyle/checkstyle/pulls/8292,https://github.com/checkstyle/checkstyle/pull/8292,closed,330,150,9,1,1,0,0,1,[],2020-06-01 16:49:16+00:00,2020-06-04 11:55:46+00:00,241590.0,"2 days, 19:06:30",[],"[{'commit_sha': '13f6bbac37698c36c4c65833fc29e132af301495', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
426279621,Issue #7747: Update AbstractChecks to log DetailAST - MissingJavadocType,Issue #7747: Update AbstractChecks to log DetailAST - MissingJavadocType,True,8295,https://api.github.com/repos/checkstyle/checkstyle/pulls/8295,https://github.com/checkstyle/checkstyle/pull/8295,closed,292,65,12,1,0,0,0,1,[],2020-06-02 00:19:07+00:00,2020-06-03 13:33:55+00:00,134088.0,"1 day, 13:14:48",[],"[{'commit_sha': '8c8b79608491cc873b2e59e790fd4a7a13088cc8', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
426325470,Issue #7730: Update AbstractChecks to log DetailAST - EmptyLineSeparator,"Issue #7730: Update AbstractChecks to log DetailAST - EmptyLineSeparator

<img width=""1222"" alt=""image"" src=""https://user-images.githubusercontent.com/50866227/83877448-2909bf80-a76d-11ea-9ab1-2c340f6994e9.png"">

<img width=""1227"" alt=""image"" src=""https://user-images.githubusercontent.com/50866227/83877489-3757db80-a76d-11ea-97c5-e5ca9c8b058f.png"">


/var/tmp $ javac Test.java
```java
package checkstyle_demo.ast_emptylineseparator;

class Test {
    private int k; // line 4


    private static void foo() {} // line7

}
```
/var/tmp $ cat config.xml
```xml
<?xml version=""1.0""?>
<!DOCTYPE module PUBLIC
        ""-//Checkstyle//DTD Checkstyle Configuration 1.3//EN""
        ""https://checkstyle.org/dtds/configuration_1_3.dtd"">
<module name=""Checker"">
    <module name=""TreeWalker"">
        <module name=""EmptyLineSeparator"">
            <property name=""allowMultipleEmptyLines"" value=""false""/>
        </module>
        <!--<module name=""EmptyLineSeparator""/>-->
    </module>
</module>
```
ATTENTION: `8.34-SNAPSHOT-all.jar` is used so violation got column 
```
/var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US""
/var/tmp $ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.34-SNAPSHOT-all.jar -c config.xml Test.java
```
```sh
Starting audit...
[ERROR] /var/tmp/src/main/java/checkstyle_demo/ast_emptylineseparator/Test.java:7:5: 'METHOD_DEF' has more than 1 empty lines before. [EmptyLineSeparator]
Checkstyle ends with 1 errors.
Audit done.

Process finished with exit code 1
```",True,8296,https://api.github.com/repos/checkstyle/checkstyle/pulls/8296,https://github.com/checkstyle/checkstyle/pull/8296,closed,303,79,13,1,2,18,0,1,[],2020-06-02 03:21:05+00:00,2020-06-09 05:47:23+00:00,613578.0,"7 days, 2:26:18","[{'comment_id': 433629373, 'comment_body': 'Please think about how to avoid this suppression, it is pain to support suppression based by line number. Can we change example ?', 'comment_created': datetime.datetime(2020, 6, 2, 5, 32, 40, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 433981334, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 6, 2, 15, 48, 53, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 433985339, 'comment_body': 'it is unavoidable that we will get RegexpMultiline violation when we want to show a example about multiple empty lines. So I find a way to add a comment on multiple empty lines, is it ok?', 'comment_created': datetime.datetime(2020, 6, 2, 15, 52, 48, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 434583810, 'comment_body': 'please print config config also to show how exactly to reproduce this problem.\r\nI tried your input no vioaltion.\r\n\r\n```\r\nrivanov@p5510:/var/tmp$ cat config.xml \r\n<?xml version=""1.0""?>\r\n<!DOCTYPE module PUBLIC\r\n          ""-//Checkstyle//DTD Checkstyle Configuration 1.3//EN""\r\n          ""https://checkstyle.org/dtds/configuration_1_3.dtd"">\r\n\r\n<module name=""Checker"">\r\n    <module name=""TreeWalker"">\r\n      <module name=""EmptyLineSeparator"">\r\n      </module>\r\n    </module>\r\n</module>\r\nrivanov@p5510:/var/tmp$ cat Test.java \r\nclass Test {\r\n    private int k;\r\n\r\n\r\n    private static void foo() {}\r\n}\r\nrivanov@p5510:/var/tmp$ java -jar /var/tmp/checkstyle-8.32-all.jar -c config.xml Test.java \r\nStarting audit...\r\nAudit done.\r\n```\r\n\r\nafter update please share CLI output of your example and in issue description and screenshot of web site after generation.', 'comment_created': datetime.datetime(2020, 6, 3, 13, 52, 54, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 434620854, 'comment_body': 'done,  this should add \r\nproperty name=""allowMultipleEmptyLines"" value=""false"" \r\ncomment link is here https://github.com/checkstyle/checkstyle/issues/7730#issuecomment-638239983', 'comment_created': datetime.datetime(2020, 6, 3, 14, 41, 52, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 434665717, 'comment_body': 'violation is not on line where you put `//violation`, violation is on line 6,checkstyle report it on 7, that, please clarify, Lets keep in descrition `ATTENTION: violations from multiple empty lines cannot be suppressed via XPath (until #8179).` Please move example of code and config to ""Example"" section. ', 'comment_created': datetime.datetime(2020, 6, 3, 15, 42, 43, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 434700497, 'comment_body': 'yes, I know that violation is not on line where I put, reason is that it seems unavoidable that we will get RegexpMultiline violation when we want to show an example about multiple empty lines. So I find this way to add a comment on multiple empty lines but which cause another problem is that violation is not on line where I put.', 'comment_created': datetime.datetime(2020, 6, 3, 16, 30, 26, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 435349384, 'comment_body': '@HuGanghui , please do what I requested in https://github.com/checkstyle/checkstyle/pull/8296#discussion_r434665717 \r\n\r\nplease show CLI output in PR description for newly added Example, please place `//violation` on line where violation is placed by checkstyle.  We can do `// violation, before his like there two empty lines`', 'comment_created': datetime.datetime(2020, 6, 4, 15, 30, 51, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 435671131, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 6, 5, 3, 29, 31, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 435673509, 'comment_body': 'please use `<a href>` tag for links\r\n\r\nex:  `<a href=""https://github.com/checkstyle/checkstyle/issues/5945"">#5945</a>`', 'comment_created': datetime.datetime(2020, 6, 5, 3, 41, 9, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 435673866, 'comment_body': 'please provide full link', 'comment_created': datetime.datetime(2020, 6, 5, 3, 42, 58, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 435676263, 'comment_body': 'Could you please add more explanation why we need to disallow multiple empty lines, that for multiple lines only `line number` is logged, otherwise `line number and column number` is logged', 'comment_created': datetime.datetime(2020, 6, 5, 3, 54, 8, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 435679557, 'comment_body': '@HuGanghui @romani As far as I understood we log violations about empty lines based on AST element following or preceding  empty line.\r\n\r\nWhat if [here](https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java#L423), instead of logging line number we log nearest following AST element?\r\n\r\nWhat do you think guys?', 'comment_created': datetime.datetime(2020, 6, 5, 4, 9, 34, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 435895908, 'comment_body': 'done～', 'comment_created': datetime.datetime(2020, 6, 5, 12, 43, 57, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 435895949, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 6, 5, 12, 44, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 435896488, 'comment_body': 'done, only `line number` is using checkstyle-8.32-SNAPSHOT-all.jar, now I have update to latest version  checkstyle-8.34-SNAPSHOT-all.jar', 'comment_created': datetime.datetime(2020, 6, 5, 12, 44, 59, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 435927564, 'comment_body': '@timurt , this exactly what https://github.com/checkstyle/checkstyle/issues/8179 is about.', 'comment_created': datetime.datetime(2020, 6, 5, 13, 39, 51, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 435936575, 'comment_body': ""@HuGanghui , please explain why we can not suppress violation that you reported in PR description by Xpath, it is reported on AST node, it is suppress-able. Please read #8179 attentively, there are problems with lines that comes after method definition.\r\n\r\nafter your update you can not use this example, and yes it was good example on previous version (config and input file is from PR description):\r\n```\r\n$ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.33-all.jar -c config.xml Test.java\r\nStarting audit...\r\n[ERROR] /var/tmp/Test.java:7: 'METHOD_DEF' has more than 1 empty lines before. [EmptyLineSeparator]\r\nAudit done.\r\nCheckstyle ends with 1 errors.\r\n```"", 'comment_created': datetime.datetime(2020, 6, 5, 13, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}]","[{'commit_sha': 'fb4912e894efe9b9c2c5aa4c8a01ee7cd4571ec0', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
426388823,Issue #7739: Update AbstractChecks to log DetailAST - JavadocMethod,"Issue #7739: Update AbstractChecks to log DetailAST - JavadocMethod

this PR is based on comments in Issue #7739 and PR #8214  

diff report: https://huganghui.github.io/7739-JavadocMethod//diff/",True,8297,https://api.github.com/repos/checkstyle/checkstyle/pulls/8297,https://github.com/checkstyle/checkstyle/pull/8297,closed,306,33,10,1,8,13,0,1,[],2020-06-02 06:56:25+00:00,2020-06-09 14:38:58+00:00,632553.0,"7 days, 7:42:33","[{'comment_id': 434367307, 'comment_body': 'Please clarify why did you move it here?', 'comment_created': datetime.datetime(2020, 6, 3, 7, 36, 25, tzinfo=datetime.timezone.utc), 'commenter': 'rdiachenko', 'type': 'User'}, {'comment_id': 434377703, 'comment_body': 'Please explain why do you need this logic?', 'comment_created': datetime.datetime(2020, 6, 3, 7, 55, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rdiachenko', 'type': 'User'}, {'comment_id': 434378321, 'comment_body': ""Please don't rename variables in scope of one update, it is hard to see what was actually changed/added."", 'comment_created': datetime.datetime(2020, 6, 3, 7, 56, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rdiachenko', 'type': 'User'}, {'comment_id': 434378645, 'comment_body': ""Same question as above, what's the purpose of this `while`?"", 'comment_created': datetime.datetime(2020, 6, 3, 7, 57, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rdiachenko', 'type': 'User'}, {'comment_id': 435188796, 'comment_body': 'reasons are the 1. I refer to PR #8214 which add it here. 2. As mentioned in https://github.com/checkstyle/checkstyle/issues/7739#issuecomment-611372244 the 1,3,6th log within the check is logging the tags inside the javadoc block comment. It is not accessible using DetailAST. Maybe this is reason to add to here.\r\nhttps://github.com/checkstyle/checkstyle/blob/d48b815db7c6e9a9272ec78fc7d2cec0d53a8e26/src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilter.java#L74-L114', 'comment_created': datetime.datetime(2020, 6, 4, 11, 39, 23, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 435715432, 'comment_body': ""I don't understand your response. Here, you put `<li>JavadocMethod</li>` after `<li>JavadocBlockTagLocation</li>`. But before your changes the `<li>JavadocMethod</li>` was few lines upper, after `<li>Indentation</li>`. So, what's the reason for this movement?"", 'comment_created': datetime.datetime(2020, 6, 5, 6, 31, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rdiachenko', 'type': 'User'}, {'comment_id': 435718759, 'comment_body': 'Ok, I got it. The `<ul>` element is now different.', 'comment_created': datetime.datetime(2020, 6, 5, 6, 40, 39, tzinfo=datetime.timezone.utc), 'commenter': 'rdiachenko', 'type': 'User'}, {'comment_id': 435834987, 'comment_body': 'this is because there is some special cases:\r\n\r\nhttps://github.com/checkstyle/checkstyle/blob/f4e92b1a0df0075098a118cd8b81a2ee54309063/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/javadocmethod/InputJavadocMethodExtraThrows.java#L77-L82\r\n\r\nhttps://github.com/checkstyle/checkstyle/blob/f4e92b1a0df0075098a118cd8b81a2ee54309063/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/javadocmethod/InputJavadocMethodGenerics.java#L43-L46', 'comment_created': datetime.datetime(2020, 6, 5, 10, 31, 46, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 435837580, 'comment_body': 'same special case mentioned above~\r\n\r\nhttps://github.com/checkstyle/checkstyle/blob/f4e92b1a0df0075098a118cd8b81a2ee54309063/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/javadocmethod/InputJavadocMethodExtraThrows.java#L77-L82\r\n\r\nhttps://github.com/checkstyle/checkstyle/blob/f4e92b1a0df0075098a118cd8b81a2ee54309063/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/javadocmethod/InputJavadocMethodGenerics.java#L43-L46', 'comment_created': datetime.datetime(2020, 6, 5, 10, 37, 21, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 435842471, 'comment_body': 'done, recover to original name', 'comment_created': datetime.datetime(2020, 6, 5, 10, 48, 27, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 435917645, 'comment_body': 'It looks like desire to keep the same column for violation.\r\n\r\n```\r\n$ cat Test.java \r\nclass Test {\r\n    public void bar() {\r\n        throw new org.apache.tools.ant.BuildException(""""); //warn\r\n    }\r\n}\r\n\r\n$java -jar /var/tmp/checkstyle-8.32-all.jar -t Test.java \r\nCLASS_DEF -> CLASS_DEF [1:0]\r\n|--MODIFIERS -> MODIFIERS [1:0]\r\n|--LITERAL_CLASS -> class [1:0]\r\n|--IDENT -> Test [1:6]\r\n`--OBJBLOCK -> OBJBLOCK [1:11]\r\n    |--LCURLY -> { [1:11]\r\n    |--METHOD_DEF -> METHOD_DEF [2:4]\r\n    |   |--MODIFIERS -> MODIFIERS [2:4]\r\n    |   |   `--LITERAL_PUBLIC -> public [2:4]\r\n    |   |--TYPE -> TYPE [2:11]\r\n    |   |   `--LITERAL_VOID -> void [2:11]\r\n    |   |--IDENT -> bar [2:16]\r\n    |   |--LPAREN -> ( [2:19]\r\n    |   |--PARAMETERS -> PARAMETERS [2:20]\r\n    |   |--RPAREN -> ) [2:20]\r\n    |   `--SLIST -> { [2:22]\r\n    |       |--LITERAL_THROW -> throw [3:8]\r\n    |       |   |--EXPR -> EXPR [3:14]\r\n    |       |   |   `--LITERAL_NEW -> new [3:14]\r\n    |       |   |       |--DOT -> . [3:38]\r\n    |       |   |       |   |--DOT -> . [3:34]\r\n    |       |   |       |   |   |--DOT -> . [3:28]\r\n    |       |   |       |   |   |   |--DOT -> . [3:21]\r\n    |       |   |       |   |   |   |   |--IDENT -> org [3:18]\r\n    |       |   |       |   |   |   |   `--IDENT -> apache [3:22]\r\n    |       |   |       |   |   |   `--IDENT -> tools [3:29]\r\n    |       |   |       |   |   `--IDENT -> ant [3:35]\r\n    |       |   |       |   `--IDENT -> BuildException [3:39]\r\n    |       |   |       |--LPAREN -> ( [3:53]\r\n    |       |   |       |--ELIST -> ELIST [3:54]\r\n    |       |   |       |   `--EXPR -> EXPR [3:54]\r\n    |       |   |       |       `--STRING_LITERAL -> """" [3:54]\r\n    |       |   |       `--RPAREN -> ) [3:56]\r\n    |       |   `--SEMI -> ; [3:57]\r\n    |       `--RCURLY -> } [4:4]\r\n    `--RCURLY -> } [5:0]\r\n```\r\n@rdiachenko ,  it is hard choice on where to put violation `org [3:18]` vs `BuildException [3:39]` \r\nIntend is too keep the same column of violation, as you can see that your UT did report change in column - https://github.com/checkstyle/checkstyle/blob/3c0595f7abcd4c4486d52adbd719c696b8873426/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java#L83-L94', 'comment_created': datetime.datetime(2020, 6, 5, 13, 23, 54, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 435925114, 'comment_body': 'I agree to keep column unchanged.\r\n@HuGanghui , please make a static private method to get node where class name starts. Please generate diff regression report, as code change is significant.', 'comment_created': datetime.datetime(2020, 6, 5, 13, 35, 56, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 436231089, 'comment_body': 'done, diff report:  https://huganghui.github.io/7739-JavadocMethod//diff/', 'comment_created': datetime.datetime(2020, 6, 6, 2, 53, 16, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}]","[{'commit_sha': 'bf445915d0c2cf20ad3e87b61edcefead16cf74c', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
426913946,Issue #7762: Update AbstractChecks to log DetailAST - TodoComment,Issue #7762: Update AbstractChecks to log DetailAST - TodoComment,True,8298,https://api.github.com/repos/checkstyle/checkstyle/pulls/8298,https://github.com/checkstyle/checkstyle/pull/8298,closed,103,12,8,1,0,0,0,0,[],2020-06-03 01:42:49+00:00,2020-06-03 13:39:50+00:00,43021.0,11:57:01,[],"[{'commit_sha': 'f87712f412f660c4cd0a9ca8ca89768d4120aa1b', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
469286603,Issue #251: ci:build patch-filter jar buring a build,"Issue #251: ci:build patch-filter jar buring a build

this refers to https://github.com/checkstyle/eclipse-cs/pull/246",True,250,https://api.github.com/repos/checkstyle/eclipse-cs/pulls/250,https://github.com/checkstyle/eclipse-cs/pull/250,closed,1181,3,13,1,12,15,0,0,[],2020-08-18 08:15:33+00:00,2020-08-25 18:52:36+00:00,643023.0,"7 days, 10:37:03","[{'comment_id': 475266620, 'comment_body': 'https://checkstyle.org/releasenotes.html#Release_8.30\r\n\r\n  Problematic Check is introduced in next version.\r\nPlease use there 8.35, latest released.', 'comment_created': datetime.datetime(2020, 8, 23, 20, 58, 42, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 475282997, 'comment_body': 'please see how I did it at https://github.com/checkstyle/sonar-checkstyle/pull/316', 'comment_created': datetime.datetime(2020, 8, 23, 23, 45, 48, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 475561897, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 24, 12, 27, 6, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 476146909, 'comment_body': 'add `target` folder to `.gitignore` \r\nsuch file should not be in GIT', 'comment_created': datetime.datetime(2020, 8, 25, 4, 15, 10, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 476148782, 'comment_body': '`git diff HEAD~1 HEAD > target/show.patch`\r\n\r\nto not create any extra files in git repo and keep `git diff` empty.', 'comment_created': datetime.datetime(2020, 8, 25, 4, 17, 46, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 476203872, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 25, 6, 22, 18, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 476206338, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 25, 6, 28, 37, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 476452929, 'comment_body': 'remove `&& git diff HEAD~2 HEAD~1 > target/show.patch  && mvn clean verify`\r\n\r\n`install` already to `verify`', 'comment_created': datetime.datetime(2020, 8, 25, 13, 35, 23, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 476453271, 'comment_body': 'add empty line above this line to separate patch creation and build', 'comment_created': datetime.datetime(2020, 8, 25, 13, 35, 53, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 476461607, 'comment_body': 'add `patch-filter` to this file.', 'comment_created': datetime.datetime(2020, 8, 25, 13, 47, 24, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 476464660, 'comment_body': '`target/show.patch` , the same for above', 'comment_created': datetime.datetime(2020, 8, 25, 13, 51, 27, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 476492370, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 25, 14, 27, 25, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 476492599, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 25, 14, 27, 45, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 476492942, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 25, 14, 28, 13, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 476493495, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 25, 14, 28, 50, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}]","[{'commit_sha': '09b39c2b6021b16aaacd758acd728bfb543d165a', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
412423670,Issue #6943: new Check: NullTestAroundInstanceOfCheck,"Issue #6943: new Check: NullTestAroundInstanceOfCheck

diff report will update later.
Contrib repo PR: https://github.com/checkstyle/contribution/pull/477",False,8218,https://api.github.com/repos/checkstyle/checkstyle/pulls/8218,https://github.com/checkstyle/checkstyle/pull/8218,closed,879,0,23,1,10,61,2,0,"[{'name': 'abandoned'}, {'name': 'awaiting changes'}]",2020-05-02 09:06:57+00:00,2021-03-15 01:48:28+00:00,27362491.0,"316 days, 16:41:31","[{'comment_id': 419062905, 'comment_body': 'The following test is failing, but should pass, please correct me I am wrong:\r\n\r\n```\r\npublic void foo1(int[] obj) {\r\n        int[] myObj = obj;\r\n\r\n        if (myObj != obj && myObj instanceof Object) {\r\n\r\n        }\r\n    }\r\n```', 'comment_created': datetime.datetime(2020, 5, 3, 7, 38, 52, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 419065451, 'comment_body': 'please check if the following test will pass or fail:\r\n```\r\n        if (myObj != null) // violation\r\n            if (myObj instanceof Object)\r\n                System.out.println();\r\n```', 'comment_created': datetime.datetime(2020, 5, 3, 8, 1, 55, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 419108681, 'comment_body': '@timurt I test it, and it is caught by NullBeforeInstanceOfCheck\r\ncat Test2.java\r\n```java\r\npackage checkstyle_demo.NullBeforeInstanceOfCheck;\r\n\r\npublic class Test2 {\r\n    public void foo1(int[] obj) {\r\n        int[] myObj = obj;\r\n\r\n        if (myObj != obj && myObj instanceof Object) {\r\n\r\n        }\r\n    }\r\n}\r\n```\r\ncat config.xml\r\n```xml\r\n<?xml version=""1.0""?>\r\n<!DOCTYPE module PUBLIC\r\n        ""-//Checkstyle//DTD Checkstyle Configuration 1.3//EN""\r\n        ""https://checkstyle.org/dtds/configuration_1_3.dtd"">\r\n<module name=""Checker"">\r\n    <module name=""TreeWalker"">\r\n        <module name=""NullBeforeInstanceOfCheck""/>\r\n    </module>\r\n</module>\r\n```\r\nStarting audit...\r\n[ERROR] /var/tmp/checkstyle_demo/NullBeforeInstanceOfCheck/Test2.java:7:9: Null check is redundant when using instanceOf. [NullBeforeInstanceOf]\r\nAudit done.\r\nCheckstyle ends with 1 errors.\r\n', 'comment_created': datetime.datetime(2020, 5, 3, 14, 7, 12, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 419109612, 'comment_body': '@timurt  I test it, and it is caught by NullBeforeInstanceOfCheck\r\ncat Test3.java\r\n```java\r\npackage checkstyle_demo.NullBeforeInstanceOfCheck;\r\n\r\npublic class Test3 {\r\n    public void main(int[] obj) {\r\n        int[] myObj = obj;\r\n        if (myObj != null) { // violation\r\n            if (myObj instanceof Object)\r\n                System.out.println();\r\n        }\r\n    }\r\n}\r\n```\r\ncat config.xml\r\n```xml\r\n<?xml version=""1.0""?>\r\n<!DOCTYPE module PUBLIC\r\n        ""-//Checkstyle//DTD Checkstyle Configuration 1.3//EN""\r\n        ""https://checkstyle.org/dtds/configuration_1_3.dtd"">\r\n<module name=""Checker"">\r\n    <module name=""TreeWalker"">\r\n        <module name=""NullBeforeInstanceOfCheck""/>\r\n    </module>\r\n</module>\r\n```\r\nStarting audit...\r\n[ERROR] /var/tmp/checkstyle_demo/NullBeforeInstanceOfCheck/Test3.java:6:9: Null check is redundant when using instanceOf. [NullBeforeInstanceOf]\r\nCheckstyle ends with 1 errors.\r\nAudit done.\r\n', 'comment_created': datetime.datetime(2020, 5, 3, 14, 14, 44, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 419109857, 'comment_body': 'all these examples are considered and are in test cases.', 'comment_created': datetime.datetime(2020, 5, 3, 14, 16, 44, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 419159228, 'comment_body': 'No, without curly braces:\r\n\r\n```\r\nif (myObj != null) \r\n     if (myObj instanceof Object) System.out.println();\r\n```', 'comment_created': datetime.datetime(2020, 5, 3, 20, 58, 20, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 419159553, 'comment_body': 'could you please provide link to such test case', 'comment_created': datetime.datetime(2020, 5, 3, 21, 0, 41, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 419191241, 'comment_body': 'test case mentioned ', 'comment_created': datetime.datetime(2020, 5, 4, 2, 13, 28, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 419191409, 'comment_body': 'and here is test case which is mentioned', 'comment_created': datetime.datetime(2020, 5, 4, 2, 14, 43, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 419191601, 'comment_body': 'sorry,  this is blind spots, I forgot to consider this example', 'comment_created': datetime.datetime(2020, 5, 4, 2, 16, 34, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 419201672, 'comment_body': 'done, I consider this case now', 'comment_created': datetime.datetime(2020, 5, 4, 3, 34, 31, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 419237914, 'comment_body': 'My point is - here you do not check for `LITERAL_NULL` and it means you only check that there are two sub conditionals with `not equal` and `instance of` operators, but you do not check second operand for `not equal` operations\r\nIt means the following test will throw violation, but probably should pass\r\n```\r\n        if (myObj != ANOTHER_OBJECT && myObj instanceof Object) { // ok\r\n\r\n        }\r\n```', 'comment_created': datetime.datetime(2020, 5, 4, 6, 45, 25, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 419282389, 'comment_body': 'done, I get it, I ignore this point, thanks~', 'comment_created': datetime.datetime(2020, 5, 4, 8, 29, 2, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 432870496, 'comment_body': 'From https://github.com/checkstyle/checkstyle/issues/6943#issuecomment-636357136\r\n\r\nPlease rename check to `NullTestAroundInstanceOf `', 'comment_created': datetime.datetime(2020, 5, 30, 17, 4, 49, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 432870753, 'comment_body': 'From https://github.com/checkstyle/checkstyle/issues/6943#issuecomment-636357136\r\n\r\nCould you also handle these cases\r\n```\r\nif (myObj instanceof SomeObject && myObj != null) { // violation\r\n    // ...\r\n}\r\n```\r\n\r\n```\r\nclass Node {\r\n        int value = 0;\r\n        Node next = null;\r\n        Node prev = null;\r\n    }\r\n\r\n    public void foo3() {\r\n        Node node = new Node();\r\n        if (node.next != null && node.next instanceof Object) { //violation\r\n\r\n        }\r\n    }\r\n```', 'comment_created': datetime.datetime(2020, 5, 30, 17, 8, 23, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 433268506, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 6, 1, 14, 30, 13, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 433268560, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 6, 1, 14, 30, 17, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 433347111, 'comment_body': 'I think here you should recursively get full field name, \r\nit is possible that field could contain more than one dot, for example  `person.department.name` \r\n\r\n', 'comment_created': datetime.datetime(2020, 6, 1, 16, 26, 55, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 433348044, 'comment_body': 'does it handle the following situation:\r\n\r\n```\r\nif (a instanceOf Person) { // violation\r\n if (a != null) {\r\n }\r\n}\r\n```', 'comment_created': datetime.datetime(2020, 6, 1, 16, 28, 41, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 433600553, 'comment_body': 'and also here you need to check class fields `person.name`', 'comment_created': datetime.datetime(2020, 6, 2, 3, 28, 44, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 436316434, 'comment_body': 'Probably use `FullIdent`.', 'comment_created': datetime.datetime(2020, 6, 7, 1, 53, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 436484918, 'comment_body': 'done, Thanks @rnveach  ', 'comment_created': datetime.datetime(2020, 6, 8, 6, 42, 50, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 436485065, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 6, 8, 6, 43, 14, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 436485108, 'comment_body': 'done ', 'comment_created': datetime.datetime(2020, 6, 8, 6, 43, 22, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 437117409, 'comment_body': 'it seems like this code can be extracted to separate method and used inside `visitToken` and `checkOnNextLine`\r\n\r\nIn several places we perform similar validation\r\n\r\nWhat do you think?', 'comment_created': datetime.datetime(2020, 6, 9, 3, 28, 2, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 437117723, 'comment_body': 'can be divide logic inside this method to two separate methods? one method will check for outer not equal node and other method will check for outer instance of node\r\n\r\n', 'comment_created': datetime.datetime(2020, 6, 9, 3, 29, 28, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 437163001, 'comment_body': 'I agree, done', 'comment_created': datetime.datetime(2020, 6, 9, 6, 21, 9, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 437163161, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 6, 9, 6, 21, 40, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 437344077, 'comment_body': 'What we get rid of `checkOnNextLine` method\r\n\r\n`if ( checkOuterNotEqual(ast) || checkOuterInstanceOf(ast)) {`', 'comment_created': datetime.datetime(2020, 6, 9, 11, 43, 15, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 437841210, 'comment_body': 'you can simple use `return <some_conditions>` without creating local variable,\r\n\r\nalso could you please add conditions `instanceOfNode != null && isNullTest(notEqualNode)`, so you can remove these conditions from  `checkOuterNotEqual` and `checkOuterInstanceOf`, and also this addition will help to reuse this function inside [visitToken](https://github.com/checkstyle/checkstyle/pull/8218/files#diff-f15ca0d8bd7e602e3a75f9f63d1748feR105) method', 'comment_created': datetime.datetime(2020, 6, 10, 3, 36, 13, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 437841465, 'comment_body': '`true if nodes have same texts, false otherwise`', 'comment_created': datetime.datetime(2020, 6, 10, 3, 37, 19, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 437842385, 'comment_body': '`Gets nested {@link TokenTypes#LITERAL_IF} node`', 'comment_created': datetime.datetime(2020, 6, 10, 3, 41, 36, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 437842568, 'comment_body': 'it is hard to understand what function does by its javadoc, could you please add more description?', 'comment_created': datetime.datetime(2020, 6, 10, 3, 42, 29, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 437843108, 'comment_body': 'you can use `{@code}` or `{@link}` javadoc tags', 'comment_created': datetime.datetime(2020, 6, 10, 3, 44, 56, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 438735341, 'comment_body': 'done\r\n', 'comment_created': datetime.datetime(2020, 6, 11, 12, 6, 57, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 438736729, 'comment_body': ""done, finish first, and the conditions in  checkOuterNotEqual(ast) and checkOuterInstanceOf(ast) have a bit difference, so I didn't change this."", 'comment_created': datetime.datetime(2020, 6, 11, 12, 10, 1, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 438736798, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 6, 11, 12, 10, 8, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 438736832, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 6, 11, 12, 10, 11, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 438736855, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 6, 11, 12, 10, 14, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 438736881, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 6, 11, 12, 10, 18, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 439185910, 'comment_body': 'my comment was about `@return` statement, please use previous description, but rewrite `@return`', 'comment_created': datetime.datetime(2020, 6, 12, 3, 21, 33, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 439186706, 'comment_body': 'please move `instanceOfNode != null && isNullTest(notEqualNode)` to `isTextEqual` method', 'comment_created': datetime.datetime(2020, 6, 12, 3, 25, 14, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 439188766, 'comment_body': 'add more description to parameter', 'comment_created': datetime.datetime(2020, 6, 12, 3, 34, 51, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 439188815, 'comment_body': 'add more description to return', 'comment_created': datetime.datetime(2020, 6, 12, 3, 35, 4, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 439188910, 'comment_body': 'you can refer to `{@link TokenTypes}` class', 'comment_created': datetime.datetime(2020, 6, 12, 3, 35, 32, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 439189096, 'comment_body': 'add more description', 'comment_created': datetime.datetime(2020, 6, 12, 3, 36, 15, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 439189305, 'comment_body': 'you can use `instanceOfNode != null && isNullTest(notEqualNode)` here and remove these conditions from other methods', 'comment_created': datetime.datetime(2020, 6, 12, 3, 37, 19, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 460419853, 'comment_body': 'done\r\n', 'comment_created': datetime.datetime(2020, 7, 25, 16, 19, 1, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 460419855, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 25, 16, 19, 3, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 460419863, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 25, 16, 19, 6, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 460419870, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 25, 16, 19, 9, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 460419877, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 25, 16, 19, 12, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 460428408, 'comment_body': 'then delete these conditions from this `if`', 'comment_created': datetime.datetime(2020, 7, 25, 17, 54, 22, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 460428539, 'comment_body': '`@param token int` please add more description here, \r\nalso please rename `token` to `tokenType`', 'comment_created': datetime.datetime(2020, 7, 25, 17, 55, 55, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 460429427, 'comment_body': 'you can write\r\n\r\n```\r\nreturn instanceOfNode != null\r\n    && isNullTest(notEqualNode)\r\n    && getFullText(instanceOfNode).equals(getFullText(notEqualNode));\r\n```', 'comment_created': datetime.datetime(2020, 7, 25, 18, 7, 20, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 467035124, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 7, 13, 19, 52, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 467042637, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 7, 13, 33, 8, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 467042649, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 7, 13, 33, 10, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 467088634, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 7, 14, 48, 37, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}, {'comment_id': 467553458, 'comment_body': '@HuGanghui you have problems with `XdocsJavaDocsTest` because you wrote word `check` twice here', 'comment_created': datetime.datetime(2020, 8, 9, 8, 22, 48, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 467554437, 'comment_body': '@timurt oh, yes, thanks', 'comment_created': datetime.datetime(2020, 8, 9, 8, 32, 36, tzinfo=datetime.timezone.utc), 'commenter': 'HuGanghui', 'type': 'User'}]","[{'commit_sha': '381efbce56dc77582818038317b06bd81982fe43', 'committer_username': 'HuGanghui', 'committer_name': 'iamhlbx', 'committer_email': 'huganghui18@gmail.com', 'commit_date': datetime.datetime(2019, 5, 21, 9, 6, 4, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
469450657,Issue #7763: Update AbstractChecks to log DetailAST - TrailingComment,"Issue #7763: Update AbstractChecks to log DetailAST - TrailingComment

from Roman: it is not implementation that I would like to have in this Check ideally, but let move refactoring to new issue.
https://github.com/checkstyle/checkstyle/issues/9009
https://github.com/checkstyle/checkstyle/issues/9010

Diff Regression projects: https://gist.githubusercontent.com/HuGanghui/709e0a8266eb1656488051b4cfc9161f/raw/5731ab3b42c995e5823e02a34a00c25241bcec1d/projects-to-test-on.properties

Diff Regression config: https://gist.githubusercontent.com/HuGanghui/d3b892a11fa52287ec1723246f12718f/raw/9576b09b677ea0cf838aa3ae451519597efd46ca/TrailingComment.xml",True,8711,https://api.github.com/repos/checkstyle/checkstyle/pulls/8711,https://github.com/checkstyle/checkstyle/pull/8711,closed,151,59,9,1,22,2,0,1,[],2020-08-18 11:58:40+00:00,2020-12-02 16:05:45+00:00,9173225.0,"106 days, 4:07:05","[{'comment_id': 530156761, 'comment_body': '`commentColNo = comment.getStartColNo();`\r\nthis does not depends on if condition, please inline its usage on line 245', 'comment_created': datetime.datetime(2020, 11, 25, 7, 29, 8, tzinfo=datetime.timezone.utc), 'commenter': 'strkkk', 'type': 'User'}, {'comment_id': 530456720, 'comment_body': 'awesome feedback, fixed.', 'comment_created': datetime.datetime(2020, 11, 25, 15, 26, 58, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}]","[{'commit_sha': '567628510f5e68130aaa4a5e879170909287b0f6', 'committer_username': 'romani', 'committer_name': 'Roman Ivanov', 'committer_email': None, 'commit_date': datetime.datetime(2011, 5, 26, 20, 42, 39, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11
472139052,dependency: bump Saxon-HE from 9.9.1-7 to 10.0,"Bumps Saxon-HE from 9.9.1-7 to 10.0.

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>",False,8755,https://api.github.com/repos/checkstyle/checkstyle/pulls/8755,https://github.com/checkstyle/checkstyle/pull/8755,closed,56,31,11,1,8,2,0,0,[],2020-08-23 15:26:23+00:00,2020-09-06 22:21:06+00:00,1234483.0,"14 days, 6:54:43","[{'comment_id': 477175920, 'comment_body': 'replace return statement with `return new Navigator.AxisFilter(result, nodeTest);` ', 'comment_created': datetime.datetime(2020, 8, 26, 9, 46, 7, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}, {'comment_id': 477176033, 'comment_body': 'replace return statement with `return new Navigator.AxisFilter(result, nodeTest);` ', 'comment_created': datetime.datetime(2020, 8, 26, 9, 46, 17, tzinfo=datetime.timezone.utc), 'commenter': 'timurt', 'type': 'User'}]","[{'commit_sha': '2847ff0781e733b5fc6acd454de5e7145c411d5a', 'committer_username': 'dependabot-preview[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 21, 12, 3, 36, tzinfo=datetime.timezone.utc)}]",iamhlbx,50866227,huganghui18@gmail.com,User,,22,,45,11

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
12499251,checkstyle,checkstyle/checkstyle,Java,3649,8266,222,475,13976,905,3,48,"[{'id': 472139052, 'number': 8755, 'closed': datetime.datetime(2020, 9, 6, 22, 21, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 23, 15, 26, 23, tzinfo=datetime.timezone.utc), 'time_taken': 1234483.0, 'time_delta': '14 days, 6:54:43', 'additions': 56, 'deletions': 31, 'state': 'closed'}, {'id': 469450657, 'number': 8711, 'closed': datetime.datetime(2020, 12, 2, 16, 5, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 18, 11, 58, 40, tzinfo=datetime.timezone.utc), 'time_taken': 9173225.0, 'time_delta': '106 days, 4:07:05', 'additions': 151, 'deletions': 59, 'state': 'closed'}, {'id': 462555528, 'number': 8603, 'closed': datetime.datetime(2020, 8, 9, 12, 47, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 4, 6, 24, 51, tzinfo=datetime.timezone.utc), 'time_taken': 454957.0, 'time_delta': '5 days, 6:22:37', 'additions': 20, 'deletions': 0, 'state': 'closed'}, {'id': 434513546, 'number': 8318, 'closed': datetime.datetime(2020, 6, 22, 4, 55, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 15, 12, 39, 19, tzinfo=datetime.timezone.utc), 'time_taken': 576996.0, 'time_delta': '6 days, 16:16:36', 'additions': 571, 'deletions': 0, 'state': 'closed'}, {'id': 427702016, 'number': 8304, 'closed': datetime.datetime(2020, 7, 25, 14, 50, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 4, 9, 19, 32, tzinfo=datetime.timezone.utc), 'time_taken': 4426282.0, 'time_delta': '51 days, 5:31:22', 'additions': 733, 'deletions': 621, 'state': 'closed'}, {'id': 426913946, 'number': 8298, 'closed': datetime.datetime(2020, 6, 3, 13, 39, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 3, 1, 42, 49, tzinfo=datetime.timezone.utc), 'time_taken': 43021.0, 'time_delta': '11:57:01', 'additions': 103, 'deletions': 12, 'state': 'closed'}, {'id': 426388823, 'number': 8297, 'closed': datetime.datetime(2020, 6, 9, 14, 38, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 2, 6, 56, 25, tzinfo=datetime.timezone.utc), 'time_taken': 632553.0, 'time_delta': '7 days, 7:42:33', 'additions': 306, 'deletions': 33, 'state': 'closed'}, {'id': 426325470, 'number': 8296, 'closed': datetime.datetime(2020, 6, 9, 5, 47, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 2, 3, 21, 5, tzinfo=datetime.timezone.utc), 'time_taken': 613578.0, 'time_delta': '7 days, 2:26:18', 'additions': 303, 'deletions': 79, 'state': 'closed'}, {'id': 426279621, 'number': 8295, 'closed': datetime.datetime(2020, 6, 3, 13, 33, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 2, 0, 19, 7, tzinfo=datetime.timezone.utc), 'time_taken': 134088.0, 'time_delta': '1 day, 13:14:48', 'additions': 292, 'deletions': 65, 'state': 'closed'}, {'id': 426098265, 'number': 8292, 'closed': datetime.datetime(2020, 6, 4, 11, 55, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 1, 16, 49, 16, tzinfo=datetime.timezone.utc), 'time_taken': 241590.0, 'time_delta': '2 days, 19:06:30', 'additions': 330, 'deletions': 150, 'state': 'closed'}, {'id': 412423670, 'number': 8218, 'closed': datetime.datetime(2021, 3, 15, 1, 48, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 2, 9, 6, 57, tzinfo=datetime.timezone.utc), 'time_taken': 27362491.0, 'time_delta': '316 days, 16:41:31', 'additions': 879, 'deletions': 0, 'state': 'closed'}, {'id': 408893891, 'number': 8188, 'closed': datetime.datetime(2020, 5, 21, 10, 2, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 25, 11, 29, 49, tzinfo=datetime.timezone.utc), 'time_taken': 2241179.0, 'time_delta': '25 days, 22:32:59', 'additions': 141, 'deletions': 124, 'state': 'closed'}, {'id': 407087088, 'number': 8164, 'closed': datetime.datetime(2020, 4, 24, 11, 23, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 22, 6, 58, 21, tzinfo=datetime.timezone.utc), 'time_taken': 188725.0, 'time_delta': '2 days, 4:25:25', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 404982562, 'number': 8113, 'closed': datetime.datetime(2020, 5, 19, 13, 59, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 17, 8, 0, 27, tzinfo=datetime.timezone.utc), 'time_taken': 2786351.0, 'time_delta': '32 days, 5:59:11', 'additions': 1, 'deletions': 144, 'state': 'closed'}, {'id': 402286059, 'number': 8075, 'closed': datetime.datetime(2020, 5, 21, 9, 40, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 12, 4, 40, 19, tzinfo=datetime.timezone.utc), 'time_taken': 3387599.0, 'time_delta': '39 days, 4:59:59', 'additions': 196, 'deletions': 1, 'state': 'closed'}, {'id': 393957382, 'number': 7967, 'closed': datetime.datetime(2020, 4, 8, 9, 45, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 26, 4, 58, 54, tzinfo=datetime.timezone.utc), 'time_taken': 1140412.0, 'time_delta': '13 days, 4:46:52', 'additions': 109, 'deletions': 9, 'state': 'closed'}, {'id': 391969007, 'number': 7934, 'closed': datetime.datetime(2020, 3, 24, 15, 44, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 22, 7, 46, 19, tzinfo=datetime.timezone.utc), 'time_taken': 201486.0, 'time_delta': '2 days, 7:58:06', 'additions': 66, 'deletions': 0, 'state': 'closed'}, {'id': 391624402, 'number': 7916, 'closed': datetime.datetime(2020, 5, 29, 11, 15, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 20, 16, 23, 21, tzinfo=datetime.timezone.utc), 'time_taken': 6029537.0, 'time_delta': '69 days, 18:52:17', 'additions': 60, 'deletions': 2, 'state': 'closed'}, {'id': 390782348, 'number': 7898, 'closed': datetime.datetime(2020, 3, 20, 15, 10, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 19, 3, 54, 14, tzinfo=datetime.timezone.utc), 'time_taken': 126988.0, 'time_delta': '1 day, 11:16:28', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 389154624, 'number': 7863, 'closed': datetime.datetime(2020, 3, 18, 12, 44, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 16, 11, 2, 35, tzinfo=datetime.timezone.utc), 'time_taken': 178931.0, 'time_delta': '2 days, 1:42:11', 'additions': 116, 'deletions': 11, 'state': 'closed'}, {'id': 388744114, 'number': 7852, 'closed': datetime.datetime(2020, 3, 18, 12, 28, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 15, 15, 38, 42, tzinfo=datetime.timezone.utc), 'time_taken': 247778.0, 'time_delta': '2 days, 20:49:38', 'additions': 136, 'deletions': 7, 'state': 'closed'}, {'id': 387844726, 'number': 7844, 'closed': datetime.datetime(2020, 3, 15, 11, 38, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 13, 15, 39, 17, tzinfo=datetime.timezone.utc), 'time_taken': 158324.0, 'time_delta': '1 day, 19:58:44', 'additions': 105, 'deletions': 10, 'state': 'closed'}, {'id': 387735214, 'number': 7842, 'closed': datetime.datetime(2020, 3, 16, 18, 55, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 13, 11, 46, 53, tzinfo=datetime.timezone.utc), 'time_taken': 284921.0, 'time_delta': '3 days, 7:08:41', 'additions': 47, 'deletions': 0, 'state': 'closed'}, {'id': 387691108, 'number': 7840, 'closed': datetime.datetime(2020, 3, 15, 11, 55, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 13, 10, 3, 37, tzinfo=datetime.timezone.utc), 'time_taken': 179509.0, 'time_delta': '2 days, 1:51:49', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 387362219, 'number': 7838, 'closed': datetime.datetime(2020, 3, 12, 17, 9, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 12, 17, 9, 16, tzinfo=datetime.timezone.utc), 'time_taken': 24.0, 'time_delta': '0:00:24', 'additions': 1, 'deletions': 6, 'state': 'closed'}, {'id': 386221358, 'number': 7820, 'closed': datetime.datetime(2020, 3, 13, 14, 47, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 10, 15, 59, 31, tzinfo=datetime.timezone.utc), 'time_taken': 254898.0, 'time_delta': '2 days, 22:48:18', 'additions': 336, 'deletions': 28, 'state': 'closed'}, {'id': 384929290, 'number': 7789, 'closed': datetime.datetime(2020, 3, 11, 11, 40, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 6, 17, 6, 44, tzinfo=datetime.timezone.utc), 'time_taken': 412404.0, 'time_delta': '4 days, 18:33:24', 'additions': 134, 'deletions': 0, 'state': 'closed'}, {'id': 384320924, 'number': 7785, 'closed': datetime.datetime(2020, 3, 9, 12, 31, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 5, 14, 52, 2, tzinfo=datetime.timezone.utc), 'time_taken': 337153.0, 'time_delta': '3 days, 21:39:13', 'additions': 72, 'deletions': 1, 'state': 'closed'}, {'id': 383500043, 'number': 7781, 'closed': datetime.datetime(2020, 3, 5, 11, 54, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 4, 11, 39, 2, tzinfo=datetime.timezone.utc), 'time_taken': 87353.0, 'time_delta': '1 day, 0:15:53', 'additions': 36, 'deletions': 3, 'state': 'closed'}]"
116061796,eclipse-cs,checkstyle/eclipse-cs,Java,56,96,10,24,1592,42,1,2,"[{'id': 469286603, 'number': 250, 'closed': datetime.datetime(2020, 8, 25, 18, 52, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 18, 8, 15, 33, tzinfo=datetime.timezone.utc), 'time_taken': 643023.0, 'time_delta': '7 days, 10:37:03', 'additions': 1181, 'deletions': 3, 'state': 'closed'}, {'id': 469272717, 'number': 249, 'closed': datetime.datetime(2020, 8, 20, 13, 50, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 18, 7, 49, 23, tzinfo=datetime.timezone.utc), 'time_taken': 194496.0, 'time_delta': '2 days, 6:01:36', 'additions': 6, 'deletions': 0, 'state': 'closed'}]"
