pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
426127156,Login and Registration UI,"### Description
The UI for login and registration has been developed.

Fixes #7 

### Type of Change:
- Code
- User Interface
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

**Mock-ups**
Login | Sign Up
----- | -----
<img width=""491"" alt=""Screen Shot 2020-06-03 at 1 45 28 PM"" src=""https://user-images.githubusercontent.com/31164725/83612981-c5329b80-a5a0-11ea-8e45-8818fbb5362b.png""> | <img width=""491"" alt=""Screen Shot 2020-06-03 at 1 46 08 PM"" src=""https://user-images.githubusercontent.com/31164725/83613010-ccf24000-a5a0-11ea-86ac-d9196b11fce8.png"">
<img width=""491"" alt=""Screen Shot 2020-06-03 at 1 46 04 PM"" src=""https://user-images.githubusercontent.com/31164725/83613032-d8de0200-a5a0-11ea-98a4-521e8a5e7645.png""> | <img width=""491"" alt=""Screen Shot 2020-06-03 at 1 49 04 PM"" src=""https://user-images.githubusercontent.com/31164725/83613152-032fbf80-a5a1-11ea-8753-f964ea0797e0.png"">



### How Has This Been Tested?
Has been tested on Simulator.

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] Any dependent changes have been published in downstream modules
",True,35,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/35,https://github.com/anitab-org/mentorship-ios/pull/35,closed,469,20,21,12,10,32,0,0,[],2020-06-01 17:52:22+00:00,2020-06-06 09:01:18+00:00,400136.0,"4 days, 15:08:56","[{'comment_id': 434014038, 'comment_body': 'export this gutter to style/theme struct for whole app', 'comment_created': datetime.datetime(2020, 6, 2, 16, 30, 49, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434014194, 'comment_body': 'export this padding to style/theme struct for whole app', 'comment_created': datetime.datetime(2020, 6, 2, 16, 31, 5, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434014531, 'comment_body': 'export this gutter to style/theme struct for whole app', 'comment_created': datetime.datetime(2020, 6, 2, 16, 31, 38, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434015852, 'comment_body': 'define the const as global access asset string', 'comment_created': datetime.datetime(2020, 6, 2, 16, 33, 46, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434016640, 'comment_body': 'export this padding to style/theme struct for whole app', 'comment_created': datetime.datetime(2020, 6, 2, 16, 34, 59, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434016825, 'comment_body': 'export this color to style/theme struct for whole app', 'comment_created': datetime.datetime(2020, 6, 2, 16, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434016970, 'comment_body': 'export this color to style/theme struct for whole app', 'comment_created': datetime.datetime(2020, 6, 2, 16, 35, 25, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434017058, 'comment_body': 'export this padding to style/theme struct for whole app', 'comment_created': datetime.datetime(2020, 6, 2, 16, 35, 33, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434017388, 'comment_body': 'export this as global const kept in one file', 'comment_created': datetime.datetime(2020, 6, 2, 16, 36, 1, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434017593, 'comment_body': 'export this as global const kept in one file', 'comment_created': datetime.datetime(2020, 6, 2, 16, 36, 21, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434017636, 'comment_body': 'export this as global const kept in one file', 'comment_created': datetime.datetime(2020, 6, 2, 16, 36, 26, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434017689, 'comment_body': 'export this as global const kept in one file', 'comment_created': datetime.datetime(2020, 6, 2, 16, 36, 31, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434017736, 'comment_body': 'export this as global const kept in one file', 'comment_created': datetime.datetime(2020, 6, 2, 16, 36, 36, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434017813, 'comment_body': 'export this as global const kept in one file', 'comment_created': datetime.datetime(2020, 6, 2, 16, 36, 43, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434017910, 'comment_body': 'export this as global const kept in one file', 'comment_created': datetime.datetime(2020, 6, 2, 16, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434017954, 'comment_body': 'export this as global const kept in one file', 'comment_created': datetime.datetime(2020, 6, 2, 16, 36, 56, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434018024, 'comment_body': 'export this as global const kept in one file', 'comment_created': datetime.datetime(2020, 6, 2, 16, 37, 2, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434018082, 'comment_body': 'export this as global const kept in one file', 'comment_created': datetime.datetime(2020, 6, 2, 16, 37, 8, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434018183, 'comment_body': 'export this as global const kept in one file', 'comment_created': datetime.datetime(2020, 6, 2, 16, 37, 18, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434018306, 'comment_body': 'export this as global const kept in one file', 'comment_created': datetime.datetime(2020, 6, 2, 16, 37, 30, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434018523, 'comment_body': 'export this padding to style/theme struct for whole app', 'comment_created': datetime.datetime(2020, 6, 2, 16, 37, 51, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434018605, 'comment_body': 'export this padding to style/theme struct for whole app', 'comment_created': datetime.datetime(2020, 6, 2, 16, 37, 58, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434018803, 'comment_body': 'export this color to style/theme struct for whole app', 'comment_created': datetime.datetime(2020, 6, 2, 16, 38, 14, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434018984, 'comment_body': 'export this color to style/theme struct for whole app', 'comment_created': datetime.datetime(2020, 6, 2, 16, 38, 28, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434019074, 'comment_body': 'export this radius to style/theme struct for whole app', 'comment_created': datetime.datetime(2020, 6, 2, 16, 38, 37, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434019744, 'comment_body': 'export this color to style/theme struct for whole app', 'comment_created': datetime.datetime(2020, 6, 2, 16, 39, 41, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 434021291, 'comment_body': 'export this text to global const', 'comment_created': datetime.datetime(2020, 6, 2, 16, 42, 9, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 435169767, 'comment_body': '@isabelcosta @mayburgos what should be here?', 'comment_created': datetime.datetime(2020, 6, 4, 11, 1, 23, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 435520997, 'comment_body': 'That line does not need to be there in my opinion. We even taken that out on Android app I think. these files are live, changed but the community so for me it does not make sense to have the file creator, since this appears on git @annabauza ', 'comment_created': datetime.datetime(2020, 6, 4, 20, 10, 55, tzinfo=datetime.timezone.utc), 'commenter': 'isabelcosta', 'type': 'User'}, {'comment_id': 435557381, 'comment_body': 'There is also a copyright line inserted by xcode @annabauza @isabelcosta \r\n"" //  Copyright Â© 2020 Yugantar Jain. All rights reserved.""', 'comment_created': datetime.datetime(2020, 6, 4, 21, 18, 57, tzinfo=datetime.timezone.utc), 'commenter': 'sunjunkie', 'type': 'User'}, {'comment_id': 435620935, 'comment_body': 'then it could also be removed, right?', 'comment_created': datetime.datetime(2020, 6, 4, 23, 59, 58, tzinfo=datetime.timezone.utc), 'commenter': 'isabelcosta', 'type': 'User'}, {'comment_id': 435771712, 'comment_body': 'yes!', 'comment_created': datetime.datetime(2020, 6, 5, 8, 33, 56, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}]","[{'commit_sha': '6cadc951f65d16bcacb0da79a89b3b37f65e9281', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c171bdebaa6c0a68a6a40093bca1ea577f7f988', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47e5c58076ca53cbe1a54d3c487a6c1e939dffe9', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2546305a5c2eb33dd0ce6d683a708729a50b475', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01c8a708757f16183ab613ad84f0abe925bff5c1', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a1f645c3b02f8e5e6e63918d5968ed9d7291313', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '788d65b8aa5459efdb63454940e969171a36f025', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be21d0bb539fb9d0c1d009a85a1dd5a11c7989eb', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1dab9a42daef0a7be11a151062b082574491edc3', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22f89ffe9ba4817c086c85df1d0d91ae0a56299b', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4de49df3e77cd01354dcfbc9ff01344096efc9bc', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2da69f9e3dd7a6b8c3c9837a2d5ee57d43c27ab4', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
428736613,Backend API integration for login and sign up,"### Description
The PR implements networking with backend endpoints for login and sign up. (Further work can be done).

Features included in the PR:
1. Networking, sending and receiving data.
2. Show messages and give feedback to user.
3. A new activity indicator to show when login/sign up button pressed.
4. Saving token in keychain on successful login.

Further changes that can be done in this PR:
* After successful login, redirect to home screen.
* Show an alert on successful new user registration.

Note: The structuring of files and folders has been changed. Please let me know if you rather prefer the way it is done in login UI PR. 

Fixes #8 

### Type of Change:
- Code
- User Interface
- Outreach (I don't understand this point)
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Tested on Simulator. Various cases and inputs have been tested.

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] I have made corresponding changes to the documentation
**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [x] Any dependent changes have been published in downstream modules
",True,36,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/36,https://github.com/anitab-org/mentorship-ios/pull/36,closed,578,44,21,13,0,1,0,0,[],2020-06-05 20:30:00+00:00,2020-06-07 07:51:58+00:00,127318.0,"1 day, 11:21:58","[{'comment_id': 436334292, 'comment_body': 'I thought it was merged have merged upstream?', 'comment_created': datetime.datetime(2020, 6, 7, 7, 26, 9, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}]","[{'commit_sha': '079ce0de97e4ac660aedbef640dd99bb5dc3a492', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e36a8bfa7fecccb87edba3cf396c89b154785f1', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '171303cd2ca87bfeb0696969e41b636b854776b8', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '391e91ea07df871fb4e449b60ffefd206b2e9ecb', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd6341a8b199ff45d4a114c76598cd40d4403f27', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f95d262b61d5464b5062551ae0d31dcbe25fbd4', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b3e9b2dfe4030cb3b8f83719a5bb48e01c0222b', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c34b8343b8c0e4d9f1950eab7913faaae5314dc', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '123e78c91091f5f1d456905974d26cda8e97b56f', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d5755cd31fb9c090005b203848234bfa8dc3dfc', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '214dc2cf62f9725df5f90534a8e700a3add438a1', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3682b426b49b97eee1b965fcb8196354ecd3bb64', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe13cdaa5e2c064eefcda3e5e7ae47cb5b7241a9', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
429991448,Members List UI and backend integration,"### Description
Adds the members screen. Consumes backend endpoint for data.

Caveats:
1. The initial screen is members itself. Hence, testing may be difficult. To be fixed with update to login screen navigation.
2. Error handling to be enhanced.

Mocks:
<img width=""500"" alt=""Screen Shot 2020-06-07 at 5 05 32 PM"" src=""https://user-images.githubusercontent.com/31164725/83967652-30ea7080-a8e1-11ea-9f8a-fc00e14c789f.png"">


Fixes #18 

### Type of Change:
- Code
- User Interface
- Outreach
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Tested on Simulator.

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] I have made corresponding changes to the documentation
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [ ] My PR currently breaks something (fix or feature that would cause existing functionality to not work as expected)
- [x] Any dependent changes have been published in downstream modules
",True,39,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/39,https://github.com/anitab-org/mentorship-ios/pull/39,closed,171,16,11,3,0,3,0,0,[],2020-06-07 11:37:37+00:00,2020-06-07 13:07:28+00:00,5391.0,1:29:51,"[{'comment_id': 436357573, 'comment_body': 'can we move this to MemberCellView.swift?', 'comment_created': datetime.datetime(2020, 6, 7, 12, 20, 59, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 436358041, 'comment_body': 'screen padding here?', 'comment_created': datetime.datetime(2020, 6, 7, 12, 26, 9, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 436361125, 'comment_body': ""The list view has an automatic padding. The list elements align with the navigation bar title.\r\nI've tried adding additional padding, but it doesn't looks nice.\r\n@annabauza "", 'comment_created': datetime.datetime(2020, 6, 7, 13, 3, 4, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}]","[{'commit_sha': '1631e6a46bf84c0d6baac3571742a86a7dfd83b7', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b09125fb13e8dbe08ce65843f0a6412a1a49a1b3', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '534b8279621115e759843e900786201a961db837', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
430997679,"fix: travis fail, establish proper app flow, and remove garbage files.","### Description
This PR-
1. Uses coding keys in decodable structures to pass travis test.
2. Implements userdefaults.publisher successfully to establish proper app flow.
3. Removes the unwanted signupview file.

Fixes #41 

### Type of Change:
- Code
- Quality Assurance
- User Interface
- Outreach
- Documentation

**Code/Quality Assurance Only**
- Bug fix (non-breaking change which fixes an issue)

### How Has This Been Tested?
Tested on Simulator. Whole app works as expected.

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [x] Any dependent changes have been published in downstream modules
",True,42,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/42,https://github.com/anitab-org/mentorship-ios/pull/42,closed,181,171,14,11,0,2,0,0,[],2020-06-08 09:35:30+00:00,2020-06-08 17:45:08+00:00,29378.0,8:09:38,"[{'comment_id': 436585887, 'comment_body': 'remove this line please', 'comment_created': datetime.datetime(2020, 6, 8, 10, 2, 14, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 436658527, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 6, 8, 12, 34, 20, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}]","[{'commit_sha': 'ab9f999d75f25ae3b4ce70f7c1cc2acf3bfc9e38', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebfd4419281fa2de1d3d1ff84b51f2a287432b82', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '448d25f069455c8522095a2076cc83818c82c67a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b90c1d996372969111588a0225425dd0f6f5c493', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a261acf03f131783eeb1af8d44facb05843917fc', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28f76ad84362e31c6d317ec467adae0b1d9d1303', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa93e4af97eca2fe4b73e49a155c05358803aaf7', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '195a9c7dca0372d26d740ae55ff8aef70d12cb29', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8264cf3684b3d6d9b9a05d942e8289d49473c6f6', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faf6a5498478180964298ab6aeba2dc6b216819d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '078ee049e72e35133152f332acd989171f63a923', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
431749343,Member Detail UI,"### Description
Adds the screen for Member Detail and Send Request screen. 

Additionally:
1. Develops tab bar with proper icons and naming
2. Sets global tint color to systemindigo
3. Adds debug comments in a few places where code has to be changed later. This is done to ease testing and also due to some swiftui bugs.

Fixes #43 

### Mocks:
Light | Dark
----- | -----
<img width=""491"" alt=""Screen Shot 2020-06-09 at 3 13 32 PM"" src=""https://user-images.githubusercontent.com/31164725/84145843-41811f00-aa78-11ea-8c67-bf576c802ed3.png""> | <img width=""491"" alt=""Screen Shot 2020-06-09 at 3 13 36 PM"" src=""https://user-images.githubusercontent.com/31164725/84145864-4a71f080-aa78-11ea-8d27-7fcf419ff9de.png"">
<img width=""491"" alt=""Screen Shot 2020-06-09 at 5 28 11 PM"" src=""https://user-images.githubusercontent.com/31164725/84145893-578edf80-aa78-11ea-951b-a5d04a83b121.png""> | <img width=""491"" alt=""Screen Shot 2020-06-09 at 5 28 04 PM"" src=""https://user-images.githubusercontent.com/31164725/84145897-5e1d5700-aa78-11ea-81bf-b6b123f75e6d.png"">

### Type of Change:
- Code
- User Interface
- Outreach

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Tested on simulator. Travis checked locally using swiftlint.

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [x] Any dependent changes have been published in downstream modules",True,51,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/51,https://github.com/anitab-org/mentorship-ios/pull/51,closed,386,128,29,41,1,21,0,0,[],2020-06-09 12:14:22+00:00,2020-06-12 21:04:39+00:00,291017.0,"3 days, 8:50:17","[{'comment_id': 437516784, 'comment_body': 'Localize ""Mentor"" ""Mentee"" ""My Role""', 'comment_created': datetime.datetime(2020, 6, 9, 15, 23, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 437517081, 'comment_body': 'Localize ""End Date""', 'comment_created': datetime.datetime(2020, 6, 9, 15, 23, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 437517512, 'comment_body': 'Localize ""Notes""', 'comment_created': datetime.datetime(2020, 6, 9, 15, 23, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 437518538, 'comment_body': 'Localize ""Send""', 'comment_created': datetime.datetime(2020, 6, 9, 15, 24, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 437518797, 'comment_body': 'Localize all text "" Relation request""', 'comment_created': datetime.datetime(2020, 6, 9, 15, 25, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 437519001, 'comment_body': 'Localise ""Cancel""', 'comment_created': datetime.datetime(2020, 6, 9, 15, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 437519714, 'comment_body': 'Localize', 'comment_created': datetime.datetime(2020, 6, 9, 15, 25, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 437520901, 'comment_body': 'Break up function declaration into multiline and remove swiftlint ignore', 'comment_created': datetime.datetime(2020, 6, 9, 15, 27, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 437521330, 'comment_body': 'Break up function call into multiline and remove swiftlint ignore\r\n\r\n', 'comment_created': datetime.datetime(2020, 6, 9, 15, 28, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 437522833, 'comment_body': 'https://google.github.io/swift/#function-declarations\r\nor Section 1.10 here https://github.com/linkedin/swift-style-guide/blob/master/README.md\r\n', 'comment_created': datetime.datetime(2020, 6, 9, 15, 30, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 437523136, 'comment_body': 'Read up on Line Wrapping here https://google.github.io/swift/#function-declarations\r\nor https://github.com/linkedin/swift-style-guide/blob/master/README.md Section 1.9', 'comment_created': datetime.datetime(2020, 6, 9, 15, 30, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 437552751, 'comment_body': 'Remove copyright', 'comment_created': datetime.datetime(2020, 6, 9, 16, 12, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 437552923, 'comment_body': 'Remove Copyright', 'comment_created': datetime.datetime(2020, 6, 9, 16, 12, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 437553047, 'comment_body': 'Remove Copyright', 'comment_created': datetime.datetime(2020, 6, 9, 16, 12, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 437901128, 'comment_body': 'has key been added?', 'comment_created': datetime.datetime(2020, 6, 10, 7, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 437901286, 'comment_body': 'remove this file', 'comment_created': datetime.datetime(2020, 6, 10, 7, 1, 47, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 438248294, 'comment_body': 'We need to customize the xcode headers. I will submit an issue for that.', 'comment_created': datetime.datetime(2020, 6, 10, 16, 16, 1, tzinfo=datetime.timezone.utc), 'commenter': 'sunjunkie', 'type': 'User'}, {'comment_id': 439281713, 'comment_body': ""This file will surely be used later. So I'd prefer to keep it."", 'comment_created': datetime.datetime(2020, 6, 12, 8, 28, 52, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 439602268, 'comment_body': 'solved in #59 ', 'comment_created': datetime.datetime(2020, 6, 12, 19, 21, 24, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}, {'comment_id': 439602770, 'comment_body': 'solved in pull request 59', 'comment_created': datetime.datetime(2020, 6, 12, 19, 22, 36, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}, {'comment_id': 439602807, 'comment_body': 'solved in pull request 59', 'comment_created': datetime.datetime(2020, 6, 12, 19, 22, 41, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}]","[{'commit_sha': 'ab9f999d75f25ae3b4ce70f7c1cc2acf3bfc9e38', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebfd4419281fa2de1d3d1ff84b51f2a287432b82', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '448d25f069455c8522095a2076cc83818c82c67a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ffdd97dd9d19d72df0ea9a0856eb37fa823fcd8', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b90c1d996372969111588a0225425dd0f6f5c493', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a261acf03f131783eeb1af8d44facb05843917fc', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28f76ad84362e31c6d317ec467adae0b1d9d1303', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa93e4af97eca2fe4b73e49a155c05358803aaf7', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '195a9c7dca0372d26d740ae55ff8aef70d12cb29', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8264cf3684b3d6d9b9a05d942e8289d49473c6f6', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faf6a5498478180964298ab6aeba2dc6b216819d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '078ee049e72e35133152f332acd989171f63a923', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a95e5b5fa0b4be6d4ba0d2e1633b288edf3095e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee70d1de5a48f0abaa32b4307791e1c5285124c2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84551389a14419d5168248af0993e608673551b3', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe12e363a3bd2cc45e168ae194a43c2ce9b4f8ae', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5f9cccf787ad1d753ff260c168b9571b96945bb', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2166c1598829086322cb68f865dcf8bf30477936', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35315000c42485f4303ee7c57584f03f4aff9582', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb4c94d9d60ae2e32efd5ab9c2b6c8fa712afe98', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c4874dd99afe117059fb222da38ca102238ab0d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd113577a59a6608e63b79ce69ca5fa4db375385', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd241ecc477ab3ded1abed39477b8706472bcffb5', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dafce3830e98b1aee7a3060b1134c4f9feb87d99', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'befe4c3943ff30a32567eb6339842821789706c2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00fd1d800289514792b6e5188119203e5be4ba7d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01af85551a90ca3eb5b1bd0c6651b4beae54eaaa', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4061d00a6f122f8834e090753ace0e601e01ec46', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d8e85afd6996a1a7eb24d7410f845b1df1901b7', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87df299406c67a58a611e20801f31fec0e65c345', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7570c36485229e7e6c1d27366a1f52e4134d32a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cebbb3562a090b6d90f432cc1fb0c562c57a9565', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f137eba671d485e6eace15b971d62981202dbe8', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '236387557256153464dfbdb0def7794b333d774e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ff604da678bc030033995fb061f2b919cd4bb99', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0533f7a58a4f1b7dda3a703c3480711bd56ae519', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9ea658542a817cecb116de792ee160746286e1b', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3ed700ac557aa60eb9c51d9239b6fc9d9294b2d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '915810f2fe72c7d4e9417e5488725f724cc6ccd2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '281473e742378870aa54772c78f2f3788edbbfa2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3198f40f16c8e8e85a2da261c20c56e0a105363', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
433406006,Send Request Backend Endpoint Consumption,"### Description
This PR adds the backend endpoint consumption for send request. 

Additionally, also adds:
1. Activity indicator and text label for error messages
2. HomeModel and ProfileModel and parallel URL requests in home screen to load and store user info to get ID.

Fixes #45 

### Type of Change:
- Code
- User Interface
- Outreach
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Tested on Simulator and Postman.

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
",True,58,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/58,https://github.com/anitab-org/mentorship-ios/pull/58,closed,340,94,27,60,2,18,0,0,[],2020-06-12 00:50:15+00:00,2020-06-13 15:47:52+00:00,140257.0,"1 day, 14:57:37","[{'comment_id': 439227351, 'comment_body': 'Add the title strings as keys? ', 'comment_created': datetime.datetime(2020, 6, 12, 6, 18, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 439228113, 'comment_body': 'timestamp is a misleading variable name\r\n', 'comment_created': datetime.datetime(2020, 6, 12, 6, 20, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 439228941, 'comment_body': 'guard might be a better practice. Early return in case view is empty. ', 'comment_created': datetime.datetime(2020, 6, 12, 6, 22, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 439231082, 'comment_body': 'Explore using spacers for spacing? \r\n', 'comment_created': datetime.datetime(2020, 6, 12, 6, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 439272353, 'comment_body': 'okay', 'comment_created': datetime.datetime(2020, 6, 12, 8, 9, 41, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 439272772, 'comment_body': ""spacers act as a list cell and adds the separator line. We don't want that line."", 'comment_created': datetime.datetime(2020, 6, 12, 8, 10, 35, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 439273005, 'comment_body': 'okay', 'comment_created': datetime.datetime(2020, 6, 12, 8, 11, 3, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 439736008, 'comment_body': 'can we remove this?', 'comment_created': datetime.datetime(2020, 6, 13, 12, 35, 11, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 439736022, 'comment_body': 'Can we remove this?', 'comment_created': datetime.datetime(2020, 6, 13, 12, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 439736038, 'comment_body': 'can we remove this?', 'comment_created': datetime.datetime(2020, 6, 13, 12, 35, 38, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 439736045, 'comment_body': 'can we remove this?', 'comment_created': datetime.datetime(2020, 6, 13, 12, 35, 48, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 439736072, 'comment_body': 'can we remove this?', 'comment_created': datetime.datetime(2020, 6, 13, 12, 36, 2, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 439736856, 'comment_body': ""It's kind of unnecessary. Try optional (?) on sendRequestResponseData.message instead.As it is already initialised in MembersModel"", 'comment_created': datetime.datetime(2020, 6, 13, 12, 50, 1, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}, {'comment_id': 439738189, 'comment_body': 'Or you can also use guard here', 'comment_created': datetime.datetime(2020, 6, 13, 13, 8, 16, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}, {'comment_id': 439742788, 'comment_body': ""I don't think guard can be used here. Because then we have to return a view in the else closure. Using if statements is recommended by Apple."", 'comment_created': datetime.datetime(2020, 6, 13, 14, 23, 31, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 439743301, 'comment_body': 'I was just suggesting for this line: !(membersModel.sendRequestResponseData.message ?? """"). You are force unwrapping the value which always has a value i.e. """"\r\nremoving of ! would also do the job.', 'comment_created': datetime.datetime(2020, 6, 13, 14, 31, 26, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}, {'comment_id': 439743716, 'comment_body': ""! is not to force unwrap, but for the bool. To make sure that the message string isn't empty.\r\n"", 'comment_created': datetime.datetime(2020, 6, 13, 14, 36, 38, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 439743914, 'comment_body': 'Oh! I think I was lost during the review. ð', 'comment_created': datetime.datetime(2020, 6, 13, 14, 39, 16, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}]","[{'commit_sha': 'ab9f999d75f25ae3b4ce70f7c1cc2acf3bfc9e38', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebfd4419281fa2de1d3d1ff84b51f2a287432b82', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '448d25f069455c8522095a2076cc83818c82c67a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ffdd97dd9d19d72df0ea9a0856eb37fa823fcd8', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b90c1d996372969111588a0225425dd0f6f5c493', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a261acf03f131783eeb1af8d44facb05843917fc', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28f76ad84362e31c6d317ec467adae0b1d9d1303', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa93e4af97eca2fe4b73e49a155c05358803aaf7', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '195a9c7dca0372d26d740ae55ff8aef70d12cb29', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8264cf3684b3d6d9b9a05d942e8289d49473c6f6', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faf6a5498478180964298ab6aeba2dc6b216819d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '078ee049e72e35133152f332acd989171f63a923', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a95e5b5fa0b4be6d4ba0d2e1633b288edf3095e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee70d1de5a48f0abaa32b4307791e1c5285124c2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84551389a14419d5168248af0993e608673551b3', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe12e363a3bd2cc45e168ae194a43c2ce9b4f8ae', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5f9cccf787ad1d753ff260c168b9571b96945bb', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2166c1598829086322cb68f865dcf8bf30477936', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35315000c42485f4303ee7c57584f03f4aff9582', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb4c94d9d60ae2e32efd5ab9c2b6c8fa712afe98', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c4874dd99afe117059fb222da38ca102238ab0d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd113577a59a6608e63b79ce69ca5fa4db375385', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd241ecc477ab3ded1abed39477b8706472bcffb5', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dafce3830e98b1aee7a3060b1134c4f9feb87d99', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'befe4c3943ff30a32567eb6339842821789706c2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00fd1d800289514792b6e5188119203e5be4ba7d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01af85551a90ca3eb5b1bd0c6651b4beae54eaaa', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4061d00a6f122f8834e090753ace0e601e01ec46', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d8e85afd6996a1a7eb24d7410f845b1df1901b7', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87df299406c67a58a611e20801f31fec0e65c345', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7570c36485229e7e6c1d27366a1f52e4134d32a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cebbb3562a090b6d90f432cc1fb0c562c57a9565', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f137eba671d485e6eace15b971d62981202dbe8', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '236387557256153464dfbdb0def7794b333d774e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ff604da678bc030033995fb061f2b919cd4bb99', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0533f7a58a4f1b7dda3a703c3480711bd56ae519', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9ea658542a817cecb116de792ee160746286e1b', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c9f25c7a918eb1ad0bbdca724714320417148c9', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fd268b5234dfa543123afa85fb7111bd10444e2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81199a3b91365858427858c6bf19849d7b508d88', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe3e16db73550560c9f985d1c5a30767617bead5', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10d2452365d85fb8c53bd59bef93243ad90ab2e5', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63ee96167e7c3978e115d2cfa377706d3aa980f5', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41206a37aeec4f128563fdc87d9502d696995dde', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faa9ac037b7629eb9b6148848186c1b2f3abb869', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4d04ae269825917db104fd5e54f941b2b6835f1', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a245de6e562ec3cf6550419a53b7c2fc9b27120a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b480152c48a18e379b52ac2215ffc6799ae3273b', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3ed700ac557aa60eb9c51d9239b6fc9d9294b2d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '915810f2fe72c7d4e9417e5488725f724cc6ccd2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '281473e742378870aa54772c78f2f3788edbbfa2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3198f40f16c8e8e85a2da261c20c56e0a105363', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c25e1501a40f0202c28a55a2363c496a0889f6ad', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fec5392ae6bca1c557433f984dc8ea898c4b98c', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af51675961f01b3531f712bf4fe4feb1508ec796', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb8ea74bc7923ccb18dd9718551158c3f630712c', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f7bf0e090a3ec4777768e9556b7a561657c0976', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41bef423b7d5f364e6f1f8507cae71be0e089a6a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f15b9e424e184f679346cb1972e0cc5a9549a6c', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c116569356e152f6c8030fbab290040012ae3251', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
434032536,feat: Home screen UI,"### Description
This PR includes the home screen UI. The relations list loads its count from backend while the tasks list is dummy.

Fixes #28 

### Mocks
Light | Dark
----- | -----
<img width=""491"" alt=""Screen Shot 2020-06-13 at 10 42 44 PM"" src=""https://user-images.githubusercontent.com/31164725/84574907-4e2eab80-adc7-11ea-9372-057b0f5e9b3c.png""> | <img width=""491"" alt=""Screen Shot 2020-06-13 at 10 42 32 PM"" src=""https://user-images.githubusercontent.com/31164725/84574922-64d50280-adc7-11ea-8f86-b08349fdc0b5.png"">

### Type of Change:
- Code
- User Interface
- Outreach
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Tested on Simulator.

### Checklist:
**Delete irrelevant options.**

- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] I have made corresponding changes to the documentation
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [x] Any dependent changes have been published in downstream modules
",True,61,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/61,https://github.com/anitab-org/mentorship-ios/pull/61,closed,295,39,14,75,0,13,0,0,[],2020-06-13 17:18:54+00:00,2020-06-16 06:53:06+00:00,221652.0,"2 days, 13:34:12","[{'comment_id': 439809852, 'comment_body': 'Can we put RelationsListData Struct in another file which contain constants, as these are not very much related to HomeModel', 'comment_created': datetime.datetime(2020, 6, 14, 9, 29, 26, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}, {'comment_id': 439809921, 'comment_body': 'Localise font size', 'comment_created': datetime.datetime(2020, 6, 14, 9, 30, 14, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}, {'comment_id': 439814041, 'comment_body': 'It is related to HomeModel. It is used to load the relations list in the home screen in the ideal order. The relationCount array is then updated after backend call completes.', 'comment_created': datetime.datetime(2020, 6, 14, 10, 19, 4, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 439814055, 'comment_body': 'okay', 'comment_created': datetime.datetime(2020, 6, 14, 10, 19, 13, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 439814330, 'comment_body': 'Then put only relationCount in HomeModel. Icons, colors are not related to model. Right?', 'comment_created': datetime.datetime(2020, 6, 14, 10, 22, 9, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}, {'comment_id': 439815281, 'comment_body': ""I've updated the PR. Icons and colors have now been added to respective constants file."", 'comment_created': datetime.datetime(2020, 6, 14, 10, 34, 11, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 439815734, 'comment_body': 'Thatâs good! but I think you misunderstood me. I was talking about shifting whole struct (excluding relationCount) to a new location (most probably a file which contain UI helpers such as colors, images) not just localising names.\nAs of now we are accessing the icon images and colors from Home model, which is not a good practice. \nIcons and colors acts as Utilities for our UI.\n\nThe PR is looking great! Will approves after the following changes', 'comment_created': datetime.datetime(2020, 6, 14, 10, 39, 50, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}, {'comment_id': 439817945, 'comment_body': ""Oh, I don't understand why it's a bad practice. Colors and images are data only, just the way we have strings and integers in our model, we can have these too. In fact, this is what Apple recommends. \r\n\r\nIf I'm still missing your point, please let me know, along with the implementation details too."", 'comment_created': datetime.datetime(2020, 6, 14, 11, 7, 13, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 439824855, 'comment_body': 'Apple recommends to follow proper architectural design in application. Colors, images and text (pending requests, completed requests, accepted requests, rejected requests) are not the data we are receiving from the backend, these are constants and are used for UI purposes only. I have put a suggestion because I think we can put them in Constants folder under RelationListData file and in Home.swift fetch relationListData like icon/color/name for constants folder. And fetch relationCount from HomeModel.\r\n\r\nIf you are planning to change the API endpoint from /dashboard to /home, please make change accordingly\r\nHave a great weekend! ð\r\n', 'comment_created': datetime.datetime(2020, 6, 14, 12, 29, 18, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}, {'comment_id': 439830126, 'comment_body': ""I don't think that model is only for data coming from the backend. My understanding is that the Home Model should contain data about the home screen. The RelationList struct contains data (text, icons, colors, etc.) that is to be shown in the relations list on the home screen.\r\nAs far as I know, Apple too categorizes it all as data. If there's a specific documentation that you're referring to, can you please share its link?\r\n\r\n"", 'comment_created': datetime.datetime(2020, 6, 14, 13, 28, 39, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 439831367, 'comment_body': ""Ohh, I think that's a new learning for me. Its just that for future use cases like implementing the rejected and completed sections in my profile view (as discussed) we can fetch them from constants folder rather than HomeModel. (which I think makes sense). \r\nNo problem, I understand what you are saying, current implementation looks fine!\r\nAre you going to use /home api endpoint or should I approve this one?"", 'comment_created': datetime.datetime(2020, 6, 14, 13, 43, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}, {'comment_id': 439831411, 'comment_body': ""Ohh, I think that's a new learning for me. Its just that for future use cases like implementing the rejected and completed sections in my profile view (as discussed) we can fetch them from constants folder rather than HomeModel. (which I think makes sense). \r\nNo problem, I understand what you are saying, current implementation looks fine!\r\nAre you going to use /home api endpoint or should I approve this one?"", 'comment_created': datetime.datetime(2020, 6, 14, 13, 43, 43, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}, {'comment_id': 439850061, 'comment_body': ""I'll probably use the home api. But, that's more suited for the backend consumption PR I guess."", 'comment_created': datetime.datetime(2020, 6, 14, 17, 15, 50, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}]","[{'commit_sha': 'ab9f999d75f25ae3b4ce70f7c1cc2acf3bfc9e38', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebfd4419281fa2de1d3d1ff84b51f2a287432b82', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '448d25f069455c8522095a2076cc83818c82c67a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ffdd97dd9d19d72df0ea9a0856eb37fa823fcd8', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b90c1d996372969111588a0225425dd0f6f5c493', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a261acf03f131783eeb1af8d44facb05843917fc', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28f76ad84362e31c6d317ec467adae0b1d9d1303', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa93e4af97eca2fe4b73e49a155c05358803aaf7', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '195a9c7dca0372d26d740ae55ff8aef70d12cb29', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8264cf3684b3d6d9b9a05d942e8289d49473c6f6', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faf6a5498478180964298ab6aeba2dc6b216819d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '078ee049e72e35133152f332acd989171f63a923', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a95e5b5fa0b4be6d4ba0d2e1633b288edf3095e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee70d1de5a48f0abaa32b4307791e1c5285124c2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84551389a14419d5168248af0993e608673551b3', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe12e363a3bd2cc45e168ae194a43c2ce9b4f8ae', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5f9cccf787ad1d753ff260c168b9571b96945bb', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2166c1598829086322cb68f865dcf8bf30477936', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35315000c42485f4303ee7c57584f03f4aff9582', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb4c94d9d60ae2e32efd5ab9c2b6c8fa712afe98', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c4874dd99afe117059fb222da38ca102238ab0d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd113577a59a6608e63b79ce69ca5fa4db375385', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd241ecc477ab3ded1abed39477b8706472bcffb5', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dafce3830e98b1aee7a3060b1134c4f9feb87d99', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'befe4c3943ff30a32567eb6339842821789706c2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00fd1d800289514792b6e5188119203e5be4ba7d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01af85551a90ca3eb5b1bd0c6651b4beae54eaaa', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4061d00a6f122f8834e090753ace0e601e01ec46', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d8e85afd6996a1a7eb24d7410f845b1df1901b7', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87df299406c67a58a611e20801f31fec0e65c345', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7570c36485229e7e6c1d27366a1f52e4134d32a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cebbb3562a090b6d90f432cc1fb0c562c57a9565', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f137eba671d485e6eace15b971d62981202dbe8', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '236387557256153464dfbdb0def7794b333d774e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ff604da678bc030033995fb061f2b919cd4bb99', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0533f7a58a4f1b7dda3a703c3480711bd56ae519', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9ea658542a817cecb116de792ee160746286e1b', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c9f25c7a918eb1ad0bbdca724714320417148c9', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fd268b5234dfa543123afa85fb7111bd10444e2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81199a3b91365858427858c6bf19849d7b508d88', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe3e16db73550560c9f985d1c5a30767617bead5', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10d2452365d85fb8c53bd59bef93243ad90ab2e5', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63ee96167e7c3978e115d2cfa377706d3aa980f5', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41206a37aeec4f128563fdc87d9502d696995dde', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faa9ac037b7629eb9b6148848186c1b2f3abb869', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4d04ae269825917db104fd5e54f941b2b6835f1', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a245de6e562ec3cf6550419a53b7c2fc9b27120a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b480152c48a18e379b52ac2215ffc6799ae3273b', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57aa6047b8de11581b470c232218ca6381a76ef1', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2dd475836edfbeda71262db95d721a5c42a28e2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '717b34cd7a88ccd1345cdcbe40ad654ecf3f7035', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16785f4d2c7845983ed7ecf1b695beed40b581cf', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3ed700ac557aa60eb9c51d9239b6fc9d9294b2d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '915810f2fe72c7d4e9417e5488725f724cc6ccd2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '281473e742378870aa54772c78f2f3788edbbfa2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3198f40f16c8e8e85a2da261c20c56e0a105363', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c25e1501a40f0202c28a55a2363c496a0889f6ad', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fec5392ae6bca1c557433f984dc8ea898c4b98c', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af51675961f01b3531f712bf4fe4feb1508ec796', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb8ea74bc7923ccb18dd9718551158c3f630712c', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f7bf0e090a3ec4777768e9556b7a561657c0976', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41bef423b7d5f364e6f1f8507cae71be0e089a6a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10aafbf5fabe9035ad3482798ab7b8d84204044b', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5f63a564c4e6c2f7f3567c9d54184cbdac85ad8', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f15b9e424e184f679346cb1972e0cc5a9549a6c', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c116569356e152f6c8030fbab290040012ae3251', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d6e53b53191fc7d2db5a16201a44be862dbb7a2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aacc7b8dc093e6f7138718dcce2b70b19d43bb53', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '394e8251ac67c1790934cfea148b940ff3f53f26', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '224098be7f4b913020ea85342769fed1f7b289b0', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ee1f7d164e62b624d0edf096783ce008557bc2e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e84111fb0de4bcda083b2bc9991665871e7df0fa', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a0134914ee6dbf74d217f5852a22f85577d4539', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adc94e18b3de7e394f937e36c1d2c03e865d09a6', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f317933a3655c481c2a1eb2ed16e0a3e6c537ef', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
435646557,feat: Home Screen backend endpoint consumption,"### Description
This PR includes backend endpoint consumption of dashboard api. The home screen and detail list have been implemented.

Fixes #29 

### Mocks
Home Screen | Detail List
------------- | ------------
<img width=""491"" alt=""Screen Shot 2020-06-17 at 5 03 46 AM"" src=""https://user-images.githubusercontent.com/31164725/84866076-d8606380-b096-11ea-83d7-16ed638c5cbf.png""> | <img width=""491"" alt=""Screen Shot 2020-06-18 at 7 34 22 PM"" src=""https://user-images.githubusercontent.com/31164725/85030191-c7991600-b19a-11ea-9f0e-5cb3a341a412.png"">

### Type of Change:
- Code
- User Interface
- Outreach
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Tested on Simulator.


### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [x] Any dependent changes have been published in downstream modules
",True,66,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/66,https://github.com/anitab-org/mentorship-ios/pull/66,closed,258,76,9,4,2,0,0,0,[],2020-06-17 07:06:25+00:00,2020-06-18 20:06:24+00:00,133199.0,"1 day, 12:59:59",[],"[{'commit_sha': 'e9f5a23b9bc70f2d852d71ab38f1c25f2707307d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1aa3cd6a981d009b9c11086f57c5f6b8e5d10f83', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0a2ccff13c939f7510a7fff963881665335b71b', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33e97429aafb365a02539c4ce649f766138c692f', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
436330536,feat: User Profile and Editor UI,"### Description
This PR adds the profile screen (accessed through home screen). The profile is populated with actual data. This PR also contains the UI for profile editor.

Fixes #47 

### Mocks
Profile | Editor
------ | ------
<img width=""491"" alt=""Screen Shot 2020-06-19 at 12 45 16 AM"" src=""https://user-images.githubusercontent.com/31164725/85063052-2c6a6580-b1c7-11ea-8005-ea32f4f9096d.png""> | <img width=""491"" alt=""Screen Shot 2020-06-19 at 12 45 22 AM"" src=""https://user-images.githubusercontent.com/31164725/85063069-34c2a080-b1c7-11ea-9231-c1441fefb753.png"">
### Type of Change:
- Code
- User Interface
- Outreach

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Tested on Simulator

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas

 **Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
",True,70,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/70,https://github.com/anitab-org/mentorship-ios/pull/70,closed,396,84,21,18,3,9,0,0,[],2020-06-18 08:59:40+00:00,2020-06-19 18:17:51+00:00,119891.0,"1 day, 9:18:11","[{'comment_id': 442334480, 'comment_body': 'So, the idea of using constants for design is that they can be changed later, so it makes sense to give them a more semantic(what it represents in app context) name rather that what they are. \r\nFor example (tasks_done_symbol) rather than (circle)', 'comment_created': datetime.datetime(2020, 6, 18, 15, 59, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 442335742, 'comment_body': 'Localize As Mentor,As Mentee, Sent, Recieved', 'comment_created': datetime.datetime(2020, 6, 18, 16, 0, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 442337233, 'comment_body': 'Strictly speaking dateformatter and processing the date should go int the ViewModel not the view. \r\n\r\nYou could put it in the utilities for now? ', 'comment_created': datetime.datetime(2020, 6, 18, 16, 3, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 442338070, 'comment_body': 'Remove print statements before submitting PR? ', 'comment_created': datetime.datetime(2020, 6, 18, 16, 4, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 442339632, 'comment_body': 'Localize Edit, Cancel, Save\r\n\r\n', 'comment_created': datetime.datetime(2020, 6, 18, 16, 6, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 442340164, 'comment_body': 'Making it bold here? Can we make it bold in DesignConstants?', 'comment_created': datetime.datetime(2020, 6, 18, 16, 7, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 442496225, 'comment_body': ""DateFormatter is not a design thing, we can put it in utility folder. Don't worry this can be done during project refactor period next week."", 'comment_created': datetime.datetime(2020, 6, 18, 20, 53, 22, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}, {'comment_id': 442646988, 'comment_body': 'Oh okay. I thought since it is being used to control the way the data is presented, it can considered a design decision.', 'comment_created': datetime.datetime(2020, 6, 19, 6, 2, 17, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 442942559, 'comment_body': '100% what @ApheleiaS said, @yugantarjain.', 'comment_created': datetime.datetime(2020, 6, 19, 16, 40, 23, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}]","[{'commit_sha': 'e9f5a23b9bc70f2d852d71ab38f1c25f2707307d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1aa3cd6a981d009b9c11086f57c5f6b8e5d10f83', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0a2ccff13c939f7510a7fff963881665335b71b', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25a80f6e8f362c3318acb62846258fd4318cbcc7', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7e9bbd0f5a1a9cddd83ccfdbb36160d31bdabd3', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fedbeefc3602aa7cc587e1ece5ddb887515eb7e2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33e97429aafb365a02539c4ce649f766138c692f', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53f673ec578f6cca22a89a7cb162905381131098', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1d8daafcbd11d1be3a6bb5145c1475154ad2692', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba3309968369e8bec65a4873086a3e2f7c346401', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2eea55bb1ef5c575690e6d14dbb265589ebc23a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae4d9b140f5729e2400fb66f2c2d8c14a4c950c6', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c761fbb4894d2430327d0d864da9ec73a421f4a1', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c196c6d60b6a5f7fc2ebc67f5d219166e0ae7c1f', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79e698c435864e2afdf2960d7c14ae85889d5477', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f70d124472bee01a9eaf87e09da74c9e2f95d6e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf2b028cc314d04c8e95dc23000314730c81e5ba', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd52542f5468ef6b5623568dc1e37e426d05b036', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
437178203,feat: Update Profile backend endpoint consumption,"### Description
This PR consumes the backend endpoint to update the profile of the user. 

Additional features include: 
Disabling edit form while in process, 
Showing activity indicator with a text message, 
Showing alert on completion, 
Dismissing edit sheet automatically after alert button pressed (only for successful update), and Saving new profile to user defaults on success.

Fixes #48 

### Type of Change:
- Code
- User Interface
- Outreach
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Tested on Simulator.

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
",True,71,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/71,https://github.com/anitab-org/mentorship-ios/pull/71,closed,186,62,12,30,2,0,0,0,[],2020-06-19 15:57:28+00:00,2020-06-20 17:06:09+00:00,90521.0,"1 day, 1:08:41",[],"[{'commit_sha': 'e9f5a23b9bc70f2d852d71ab38f1c25f2707307d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1aa3cd6a981d009b9c11086f57c5f6b8e5d10f83', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0a2ccff13c939f7510a7fff963881665335b71b', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25a80f6e8f362c3318acb62846258fd4318cbcc7', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7e9bbd0f5a1a9cddd83ccfdbb36160d31bdabd3', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fedbeefc3602aa7cc587e1ece5ddb887515eb7e2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33e97429aafb365a02539c4ce649f766138c692f', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53f673ec578f6cca22a89a7cb162905381131098', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1d8daafcbd11d1be3a6bb5145c1475154ad2692', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba3309968369e8bec65a4873086a3e2f7c346401', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2eea55bb1ef5c575690e6d14dbb265589ebc23a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae4d9b140f5729e2400fb66f2c2d8c14a4c950c6', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c761fbb4894d2430327d0d864da9ec73a421f4a1', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c196c6d60b6a5f7fc2ebc67f5d219166e0ae7c1f', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79e698c435864e2afdf2960d7c14ae85889d5477', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5eb9df668db1c318a4d5e268a570839af38bebbe', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f70d124472bee01a9eaf87e09da74c9e2f95d6e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8af7c57975d7bfdd558da777a7b1ec9b47149f5f', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1a5e8833d3e031169a8826bca9030719d99572f', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4175b8465aa1f12b5f59d8645f5777ff322e1e7', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58f862b3de4467c6ae9153d7138e1f4bebb440ea', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12ab5948acedb156ddb2fece9c6d3b6a6b9a47c0', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22db376dce0a0412aee71d7b98395440ffb8dfb7', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29d411b93be7717b3f22c46037bb222e00b9ed40', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b260e9b8dd793791e74365eb6d62969f4d946a0', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e03870c57d0225c91e3ddf5a033392ef397f17a1', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '278f91a80fefa73f0553e58d528e3e69ade32890', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e987e736d3f51d38add536bc2ef4eec369b3ca5', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e77a39ea22b86f6330e64669b6a320b30ca4945', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '029071a7f688c48f6381cccc87b3551e6005bb7d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
437409317,feat: Settings Screen UI,"### Description
This PR adds the settings screen with UI developed. Tab bar updated with settings tab.

Fixes #50 

### Mocks
Light | Dark
----- | -----
<img width=""491"" alt=""Screen Shot 2020-06-21 at 12 54 59 AM"" src=""https://user-images.githubusercontent.com/31164725/85209977-fb6e6a00-b359-11ea-92b6-45863785f89a.png""> | <img width=""491"" alt=""Screen Shot 2020-06-21 at 12 54 52 AM"" src=""https://user-images.githubusercontent.com/31164725/85209983-ff01f100-b359-11ea-8446-74fedc673b5b.png"">

### Type of Change:
- Code
- User Interface
- Outreach
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Tested on Simulator.

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [x] Any dependent changes have been published in downstream modules
",True,73,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/73,https://github.com/anitab-org/mentorship-ios/pull/73,closed,149,5,5,4,4,3,0,0,[],2020-06-20 12:57:30+00:00,2020-06-20 23:27:08+00:00,37778.0,10:29:38,"[{'comment_id': 443147632, 'comment_body': 'Refactoring alert and making function which returns alertView would be great, as It will help us to reuse it when needed', 'comment_created': datetime.datetime(2020, 6, 20, 17, 45, 12, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}, {'comment_id': 443152360, 'comment_body': ""I don't see how we can refactor the alert.\r\n\r\n.alert used to control the presentation is already a modifier, and Alert in itself has various different initializers for different use cases.\r\n\r\nIf you have any specific implementation in mind, please let me know."", 'comment_created': datetime.datetime(2020, 6, 20, 18, 58, 20, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 443161740, 'comment_body': 'Not referring to .alert, You are right Alert can work for many use cases. Unlike UIKit alert, these are pretty goodð.\r\n', 'comment_created': datetime.datetime(2020, 6, 20, 21, 37, 37, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}]","[{'commit_sha': '7389d624653ad95fe356d935a7c783c3a9d38921', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e497ebedb8f750ef0fbef670bab8b710cbfb59d9', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb7b6866bc03ba2d782925fc04bc448c00ae5514', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75f11e71039acc1db52797dfc36f76fd9f1cf3d1', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
439974877,feat: Settings About screen,"### Description
PR with implementation settings about screen. Includes logo, about text, and navigation links to privacy policy and terms of use.

Fixes #52 

### Mocks
<img width=""499"" alt=""Screen Shot 2020-06-25 at 5 21 41 PM"" src=""https://user-images.githubusercontent.com/31164725/85716074-ba83a600-b709-11ea-9608-bb5c8f9b8842.png"">

<img width=""499"" alt=""Screen Shot 2020-06-25 at 5 31 51 PM"" src=""https://user-images.githubusercontent.com/31164725/85716137-ca9b8580-b709-11ea-863a-61606c4d11d0.png"">

### Type of Change:
- Code
- User Interface
- Outreach
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Tested on Simulator.

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] I have made corresponding changes to the documentation
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [x] Any dependent changes have been published in downstream modules
",True,77,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/77,https://github.com/anitab-org/mentorship-ios/pull/77,closed,117,9,9,3,0,0,0,0,[],2020-06-25 12:03:08+00:00,2020-06-27 09:25:32+00:00,163344.0,"1 day, 21:22:24",[],"[{'commit_sha': 'ac8e3bf22bdacfc4f704625e787f6938529a36ec', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67e8f6011ac162676bc142a813ab65f7ea240022', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1be574daadac1357d1b05b00b80bdba541b6a89', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
440893165,"feat: All Settings done: change password, logout, delete account","### Description
This PR implements the complete settings screen. Also includes, delete keychain item implementation and proper implementation of models and ViewModels for settings.

Feedback api can't be found on backend, hence a placeholder view has been used for now. On confirmation, it will either be removed from settings or completed.

Fixes #54 

### Mocks
<img width=""498"" alt=""image"" src=""https://user-images.githubusercontent.com/31164725/85920151-f3995300-b88e-11ea-85e2-0c5074346abc.png"">

### Type of Change:
- Code
- User Interface
- Outreach
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Tested on Simulator

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [x] Any dependent changes have been published in downstream modules
",True,78,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/78,https://github.com/anitab-org/mentorship-ios/pull/78,closed,362,61,18,10,4,0,0,0,[],2020-06-27 10:29:28+00:00,2020-06-29 12:03:56+00:00,178468.0,"2 days, 1:34:28",[],"[{'commit_sha': 'ac8e3bf22bdacfc4f704625e787f6938529a36ec', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67e8f6011ac162676bc142a813ab65f7ea240022', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1be574daadac1357d1b05b00b80bdba541b6a89', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71254fe6cbee4f60d52fd5082cea8698116ae9bc', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f82c97a7468f757c9087e13d515fe975802d218c', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0282884c8bb7b334ecdcfdb933431d8058fea0f4', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bcdabff1026fc9cd53bee4cc29c1f63af77af8b', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '387bea95c6bae5f7d7751d2ce9721b0c375758f3', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50279d3065e6b6ff5bde789b063694af3bd68211', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e73768ffe9dbb04b8c975cd870ca07dfa2451430', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
442328589,feat: Relation Screen UI,"### Description
This PR implements the Relation(Tasks) Screen UI. 

Fixes #74 

### Mocks
Tasks List | Add Task
---------- | ----------
<img width=""498"" alt=""Screen Shot 2020-07-01 at 3 47 05 AM"" src=""https://user-images.githubusercontent.com/31164725/86182916-7996f180-bb4e-11ea-9348-63b2dbc178bd.png""> | <img width=""498"" alt=""Screen Shot 2020-07-04 at 6 18 35 PM"" src=""https://user-images.githubusercontent.com/31164725/86512813-ee09b300-be22-11ea-8352-d4149342dbef.png"">

### Type of Change:
- Code
- User Interface
- Outreach
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Tested on Simulator

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [x] Any dependent changes have been published in downstream modules
",True,81,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/81,https://github.com/anitab-org/mentorship-ios/pull/81,closed,250,50,18,15,8,0,0,0,[],2020-06-30 22:25:09+00:00,2020-07-05 05:27:43+00:00,370954.0,"4 days, 7:02:34",[],"[{'commit_sha': 'ed16eeb2f80b3bc40a2c1192d1e0096296859839', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8c1e6311f1799739fbe0f49ebc9abe984afb18f', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bb83232ceec7b82473ea593484bb5e2373dce7e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6da5acdbee989ee5daead84363fc153262789e1a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eedac2f20442023e86a1beebe6cfeaa092ce4036', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f33ed85eb60260a6a05fa4fbe7d3436cca05115', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1be1f917b5c1015f956f93f30d901c85c0911406', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fbb97767133bab2a354772b7aa7f31f2f2ce9df', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8b4cb5c49363017b9f5786ef9a128e71cb8c393', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d45388f7cb0717c6cd5202e4f9006a6b76ee9a4', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbe30b114805f830872e4650b566f9f5e8a9b820', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3611c98e49047dfebd25664912b48d5d162778c0', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '713418cd25aedb131dbc3770d7486abc87a33a67', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'add6627cdc83f20be3266156f661e2d2caa93ac4', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7c4d9e689e1c95d350fc736d16dbed3fa7929f3', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
444116066,feat: Relation screen backend endpoint consumption ,"### Description
Implements backend endpoint consumption in Relation screen. Includes loading of tasks, marking to-do task as complete, and adding a new task.

Fixes #75 

### Type of Change:
- Code
- Outreach
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Tested on simulator.

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
",True,83,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/83,https://github.com/anitab-org/mentorship-ios/pull/83,closed,1349,1033,16,40,11,26,0,0,[],2020-07-03 15:42:55+00:00,2020-07-10 19:03:00+00:00,616805.0,"7 days, 3:20:05","[{'comment_id': 449704903, 'comment_body': 'What was the issue here? Disabling lint is not a good practice. ', 'comment_created': datetime.datetime(2020, 7, 3, 21, 14, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 449705810, 'comment_body': 'Add the isDone Bool here also? ', 'comment_created': datetime.datetime(2020, 7, 3, 21, 20, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 449837477, 'comment_body': 'How are you handling error if the returned response code is not 200. \r\nI have tested it, it looks good. But in scenarios like, when sever is down.', 'comment_created': datetime.datetime(2020, 7, 5, 5, 50, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}, {'comment_id': 449837543, 'comment_body': 'Please also add, if he/she is a mentor or mentee in that relationship', 'comment_created': datetime.datetime(2020, 7, 5, 5, 51, 9, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}, {'comment_id': 449837635, 'comment_body': 'if response code in not 200!', 'comment_created': datetime.datetime(2020, 7, 5, 5, 52, 27, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}, {'comment_id': 449856881, 'comment_body': 'okay', 'comment_created': datetime.datetime(2020, 7, 5, 9, 40, 25, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 449856899, 'comment_body': 'okay', 'comment_created': datetime.datetime(2020, 7, 5, 9, 40, 32, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 450393841, 'comment_body': 'it is not a good practice to pass random currentRelation.id and taskTapped.id i.e. 0.\r\nIt may create a major bug in the app. rather than using nil coalescing, use guard or if let statements. \r\nSorry to put this now, But from now onwards please keep that in mind.\r\nI have seen this in many places, please try to solve them in refactor PR.\r\nExample approach: \r\n<img width=""1009"" alt=""Screenshot 2020-07-06 at 11 34 44 PM"" src=""https://user-images.githubusercontent.com/30840527/86624645-47b7dc00-bfe1-11ea-99cf-dbddceef6174.png"">\r\n', 'comment_created': datetime.datetime(2020, 7, 6, 18, 6, 5, tzinfo=datetime.timezone.utc), 'commenter': 'vatsalkul', 'type': 'User'}, {'comment_id': 450402821, 'comment_body': 'okay', 'comment_created': datetime.datetime(2020, 7, 6, 18, 23, 55, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 450985226, 'comment_body': 'Say something like ""Task not added""? ""Operation failed"" seems like a really serious message?  ', 'comment_created': datetime.datetime(2020, 7, 7, 16, 16, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 450986180, 'comment_body': 'nit: could take mentorship_relation in common for this struct and add a variable with baseURL + mentorship_relation ', 'comment_created': datetime.datetime(2020, 7, 7, 16, 18, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 450986861, 'comment_body': 'nit: (Readabilty) This does not throw lint warning? Big line? Could break it up. ', 'comment_created': datetime.datetime(2020, 7, 7, 16, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 450987829, 'comment_body': 'Also, does the home model response contain the relation data or is there a separate endpoint available for just the relation data ? In which case can we use that and separate out HomeModel? ', 'comment_created': datetime.datetime(2020, 7, 7, 16, 20, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 450988464, 'comment_body': 'Suggestion: We can have a RelationModel use that for both Home and Relation? Since Data struct is same. \r\n', 'comment_created': datetime.datetime(2020, 7, 7, 16, 21, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 450988803, 'comment_body': 'Task related structures : Move to TaskModel.swift ? ', 'comment_created': datetime.datetime(2020, 7, 7, 16, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 450990067, 'comment_body': 'nit: Typo ', 'comment_created': datetime.datetime(2020, 7, 7, 16, 24, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 450990365, 'comment_body': 'Localize Add Task and Cancel? ', 'comment_created': datetime.datetime(2020, 7, 7, 16, 25, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 450990725, 'comment_body': 'Localise? ', 'comment_created': datetime.datetime(2020, 7, 7, 16, 25, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 451356023, 'comment_body': 'That was inadvertent. Removed.', 'comment_created': datetime.datetime(2020, 7, 8, 8, 0, 21, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 451358747, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 8, 8, 5, 13, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 451362453, 'comment_body': 'Do you think this can lead to breakages in the future in the event of different naming of a URL?', 'comment_created': datetime.datetime(2020, 7, 8, 8, 11, 38, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 451365856, 'comment_body': '> Also, does the home model response contain the relation data or is there a separate endpoint available for just the relation data ? In which case can we use that and separate out HomeModel?\r\n\r\nHome Model response contains it. The dashboard api returns all this data.\r\n\r\n> Suggestion: We can have a RelationModel use that for both Home and Relation? Since Data struct is same.\r\n\r\nThe relation model is slightly different. However, the task has been separated out already and reused in both home model and relation model. The request structure is more heavily used in the home model, and has a single instance in relation model, and hence has been kept inside home model.', 'comment_created': datetime.datetime(2020, 7, 8, 8, 17, 43, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 451367052, 'comment_body': 'These are used in relation screen and are hence kept here. Currently, the task model has been kept with the common task structure between home model and relation model. What do you think?', 'comment_created': datetime.datetime(2020, 7, 8, 8, 19, 43, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 451367183, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2020, 7, 8, 8, 19, 58, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 451367597, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 8, 8, 20, 38, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 451374718, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 8, 8, 32, 15, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}]","[{'commit_sha': 'ed16eeb2f80b3bc40a2c1192d1e0096296859839', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8c1e6311f1799739fbe0f49ebc9abe984afb18f', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bb83232ceec7b82473ea593484bb5e2373dce7e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6da5acdbee989ee5daead84363fc153262789e1a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eedac2f20442023e86a1beebe6cfeaa092ce4036', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f33ed85eb60260a6a05fa4fbe7d3436cca05115', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1be1f917b5c1015f956f93f30d901c85c0911406', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fbb97767133bab2a354772b7aa7f31f2f2ce9df', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8b4cb5c49363017b9f5786ef9a128e71cb8c393', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d45388f7cb0717c6cd5202e4f9006a6b76ee9a4', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbe30b114805f830872e4650b566f9f5e8a9b820', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e11492bf5874c87c7708377c7e7ba5196e795ee3', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eae3c95d7b75c5f24f51ffc50300e8dd2dce02b0', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35e145df5be789a9268f33060d2ee1511af12e16', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99608b616cae92b654c059822cd5aac15fdba2c6', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2166444dbc114afa5ad195b3413b0603d6beb8fb', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73c64d3968a481620224af81a8cef8c243b7bd1d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3611c98e49047dfebd25664912b48d5d162778c0', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '713418cd25aedb131dbc3770d7486abc87a33a67', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cb3694fb76d315929802df5e48c4dbde1afb389', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '133d0a3341c26d23cc2b8e6e1cf432bb60af49fa', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8be8dd2487027e53b5425481616eb6dfac821fd', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d9e87b71aa0d25f174332c16fc1f8972ac4519b', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdd50e14c8fe291093b173a114dc1cd1c953eecd', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db9003e660a8be93f92db7ebd41800dd0fe844ec', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'add6627cdc83f20be3266156f661e2d2caa93ac4', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8af9d4bc431914980dbd4af13701fb0454dcadb6', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3ff126299c33256d9a76cf0a2f864d284778874', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7c4d9e689e1c95d350fc736d16dbed3fa7929f3', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12d36bcd148e3a2a2ff1cd6d9760d936e88399a2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1a4f7be38e7f78fe7b1b32f9eec6be30421deb1', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '458c3fdbe81d7149329363549e95cdbe997b71ed', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0ac060e70be57fa1dbb4290798d343d87c4b708', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d18ead1738ee7047d149752624c163f69d1b5a8', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a50213c81297a9037cf24b913a32181759b872a3', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'add75f80e3e8bf2c2098721065dd36c46075a722', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17756e7286fb15e80b8fd7af5c7fc221af69a74d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8726fcd1f2b55845caddf4e581c6a40ead855c41', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9250888f287964e359014e43f9956063cacf3a13', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb4ad234d8e1b3164b82385ac60e3d0f97fb25cf', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
445496157,"feat: Relation request actions to accept, reject, cancel, and delete request","### Description
Implements UI + backend consumption to accept, reject, and delete pending requests, and cancel accepted request.
Also improves backend fetching by shifting appropriate operations from init() method to onAppear instead.

Fixes: #86 

### Mocks
<img width=""498"" alt=""Screen Shot 2020-07-09 at 12 52 00 AM"" src=""https://user-images.githubusercontent.com/31164725/86961537-03624280-c17f-11ea-8bd9-331ab278a65a.png"">

### Type of Change:
- Code
- User Interface
- Outreach
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Tested on Simulator.

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [x] Any dependent changes have been published in downstream modules
",True,85,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/85,https://github.com/anitab-org/mentorship-ios/pull/85,closed,753,545,10,54,9,0,0,0,[],2020-07-07 15:40:42+00:00,2020-07-16 17:23:32+00:00,783770.0,"9 days, 1:42:50",[],"[{'commit_sha': 'ed16eeb2f80b3bc40a2c1192d1e0096296859839', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8c1e6311f1799739fbe0f49ebc9abe984afb18f', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bb83232ceec7b82473ea593484bb5e2373dce7e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6da5acdbee989ee5daead84363fc153262789e1a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eedac2f20442023e86a1beebe6cfeaa092ce4036', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f33ed85eb60260a6a05fa4fbe7d3436cca05115', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1be1f917b5c1015f956f93f30d901c85c0911406', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fbb97767133bab2a354772b7aa7f31f2f2ce9df', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8b4cb5c49363017b9f5786ef9a128e71cb8c393', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d45388f7cb0717c6cd5202e4f9006a6b76ee9a4', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbe30b114805f830872e4650b566f9f5e8a9b820', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e11492bf5874c87c7708377c7e7ba5196e795ee3', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eae3c95d7b75c5f24f51ffc50300e8dd2dce02b0', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35e145df5be789a9268f33060d2ee1511af12e16', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99608b616cae92b654c059822cd5aac15fdba2c6', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2166444dbc114afa5ad195b3413b0603d6beb8fb', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73c64d3968a481620224af81a8cef8c243b7bd1d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3611c98e49047dfebd25664912b48d5d162778c0', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '713418cd25aedb131dbc3770d7486abc87a33a67', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cb3694fb76d315929802df5e48c4dbde1afb389', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '133d0a3341c26d23cc2b8e6e1cf432bb60af49fa', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8be8dd2487027e53b5425481616eb6dfac821fd', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d9e87b71aa0d25f174332c16fc1f8972ac4519b', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdd50e14c8fe291093b173a114dc1cd1c953eecd', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db9003e660a8be93f92db7ebd41800dd0fe844ec', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'add6627cdc83f20be3266156f661e2d2caa93ac4', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8af9d4bc431914980dbd4af13701fb0454dcadb6', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3ff126299c33256d9a76cf0a2f864d284778874', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7c4d9e689e1c95d350fc736d16dbed3fa7929f3', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12d36bcd148e3a2a2ff1cd6d9760d936e88399a2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1a4f7be38e7f78fe7b1b32f9eec6be30421deb1', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '458c3fdbe81d7149329363549e95cdbe997b71ed', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0ac060e70be57fa1dbb4290798d343d87c4b708', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d18ead1738ee7047d149752624c163f69d1b5a8', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a50213c81297a9037cf24b913a32181759b872a3', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'add75f80e3e8bf2c2098721065dd36c46075a722', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17756e7286fb15e80b8fd7af5c7fc221af69a74d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8726fcd1f2b55845caddf4e581c6a40ead855c41', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9250888f287964e359014e43f9956063cacf3a13', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d7ebdfce31c64bd917a21a627966fa26e840a33', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7e8e33e2d6e0f8be2e5350ad3e007df9f2bd875', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec6010db3e53acd410e432995caab201651d0d65', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f524fd68365721c05b787a9b1dcee5cfb82f0deb', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb4ad234d8e1b3164b82385ac60e3d0f97fb25cf', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ee438307a903c715172a2e04aff67af49f6b68e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '416f3a6718f157c23d98a1d6239a242198351b7d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1a0824835af483e8b8e3b91b3441dbedf55c585', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '959152965d14d5cf80e2ad4c524f1233a134e6bb', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c56662900a1a6be62b25b06688aa4ad812d8cb52', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b31b15da94caa5f696d41e9313f19a42dc59a865', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7fba6ea71ac9f763672c0c76299b67b3fd79edd', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42aa9f7ca5932188aa002e44dd3348c5935ecaf5', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd80d8a4cd0c98aea9e3df7ca4c0be17abdf0053d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07316c9bca85a1b53caede2edc1258828f05ccf6', 'committer_username': 'vatsalkul', 'committer_name': 'Vatsal Kulshreshtha', 'committer_email': 'vatsalkulshreshtha@gmail.com', 'commit_date': datetime.datetime(2017, 8, 8, 17, 2, 30, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
455199505,feat: Network Layer refactoring,"### Description
This PR implements network layer refactoring. Service layer has been built using protocols and the network layer conforms to the services. The networking classes also features a separate network model layer for separation of concerns and future-proofing. 
Also, view models have been tailored to the views.

Fixes #91 

### Type of Change:
- Code
- Quality Assurance
- Outreach
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Xcode and Simulator.

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] I have made corresponding changes to the documentation
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] New and existing unit tests pass locally with my changes
- [x] Any dependent changes have been published in downstream modules
",True,102,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/102,https://github.com/anitab-org/mentorship-ios/pull/102,closed,1179,634,46,40,1,58,0,0,[],2020-07-22 15:40:49+00:00,2020-07-24 20:42:14+00:00,190885.0,"2 days, 5:01:25","[{'comment_id': 459284180, 'comment_body': 'can we replace with `Just(ProfileViewModel().getProfile())` and remove local variable?', 'comment_created': datetime.datetime(2020, 7, 23, 8, 15, 18, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459284685, 'comment_body': 'can we return  `-> AnyCancellable?` and remove local variable?', 'comment_created': datetime.datetime(2020, 7, 23, 8, 16, 11, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459305562, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 23, 8, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 459305991, 'comment_body': 'We can, but then the Views will have to import Combine. How will it benefit btw?', 'comment_created': datetime.datetime(2020, 7, 23, 8, 54, 55, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 459344390, 'comment_body': '```\r\n//\r\n//  LoginAPI.swift\r\n//  Created on 23/07/20\r\n//  Created for AnitaB.org Mentorship-iOS \r\n//\r\n\r\nimport Foundation\r\nimport Combine\r\n\r\nclass LoginAPI: LoginService {\r\n    struct LoginNetworkModel {\r\n       \r\n        struct LoginResponseData: Decodable {\r\n            let message: String?\r\n            let accessToken: String?\r\n\r\n            enum CodingKeys: String, CodingKey {\r\n                case message\r\n                case accessToken = ""access_token""\r\n            }\r\n\r\n        }\r\n    }\r\n    private var cancellable: AnyCancellable?\r\n    \r\n    func login(\r\n        loginData: LoginModel.LoginUploadData,\r\n        completion: @escaping (LoginModel.LoginResponseData) -> Void\r\n    ) {\r\n        // encode upload data\r\n        guard let uploadData = try? JSONEncoder().encode(loginData) else {\r\n            return\r\n        }\r\n        \r\n        // make network request\r\n        cancellable = NetworkManager.callAPI(urlString: URLStringConstants.Users.login, httpMethod: ""POST"", uploadData: uploadData)\r\n            .receive(on: RunLoop.main)\r\n            .catch { _ in Just(LoginNetworkModel.LoginResponseData(message: ""Login fail"", accessToken: """")) }\r\n            .sink {\r\n                let ret = $0\r\n                if let accessToken = ret.accessToken {\r\n                let token = ""Bearer "" + accessToken\r\n                    do {\r\n                        try KeychainManager.setToken(username: loginData.username, tokenString: token)\r\n                        UserDefaults.standard.set(true, forKey: UserDefaultsConstants.isLoggedIn)\r\n                        completion(LoginModel.LoginResponseData(message: """", sucess: true))\r\n                    } catch {\r\n                    completion(LoginModel.LoginResponseData(message: ""Failed to save access token"", sucess: false)) }\r\n                } else {\r\n                    completion(LoginModel.LoginResponseData(message: ret.message, sucess: false))\r\n                }\r\n                \r\n        }\r\n    }\r\n}\r\n```', 'comment_created': datetime.datetime(2020, 7, 23, 10, 7, 32, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459345011, 'comment_body': '```\r\n//\r\n//  LoginViewModel.swift\r\n//  Created on 21/06/20\r\n//  Created for AnitaB.org Mentorship-iOS \r\n//\r\n\r\nimport Foundation\r\nimport Combine\r\n\r\nclass LoginViewModel: ObservableObject {\r\n    \r\n    @Published var username = """"\r\n    @Published var password = """"\r\n    @Published var message:String? = """"\r\n    \r\n    var loginDisabled: Bool {\r\n        if self.username.isEmpty || self.password.isEmpty {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    \r\n}\r\n```', 'comment_created': datetime.datetime(2020, 7, 23, 10, 8, 55, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459346881, 'comment_body': '```\r\n//\r\n//  LoginView.swift\r\n//  Created on 01/06/20.\r\n//  Created for AnitaB.org Mentorship-iOS \r\n//\r\n\r\nimport SwiftUI\r\n\r\nstruct Login: View {\r\n    var loginService: LoginService?\r\n    @State private var showSignUpPage: Bool = false\r\n    @State private var inActivity = false\r\n    @ObservedObject var loginViewModel = LoginViewModel()\r\n\r\n    var body: some View {\r\n        VStack(spacing: DesignConstants.Form.Spacing.bigSpacing) {\r\n            //top image of mentorship logo\r\n            Image(ImageNameConstants.mentorshipLogoImageName)\r\n                .resizable()\r\n                .scaledToFit()\r\n\r\n            //username and password text fields\r\n            VStack(spacing: DesignConstants.Form.Spacing.smallSpacing) {\r\n                TextField(""Username/Email"", text: $loginViewModel.username)\r\n                    .textFieldStyle(RoundFilledTextFieldStyle())\r\n                    .autocapitalization(.none)\r\n                    .keyboardType(.emailAddress)\r\n\r\n                SecureField(""Password"", text: $loginViewModel.password)\r\n                    .textFieldStyle(RoundFilledTextFieldStyle())\r\n            }\r\n\r\n            //login button\r\n            Button(""Login"") {\r\n                // set inActivity to true (shows activity indicator)\r\n                self.inActivity = true\r\n                let loginData = LoginModel.LoginUploadData( username: self.loginViewModel.username,password: self.loginViewModel.password)\r\n                self.loginService?.login(loginData: loginData) { response in\r\n                    self.inActivity = false\r\n                    self.loginViewModel.message = response.message\r\n                }\r\n            }\r\n            .buttonStyle(BigBoldButtonStyle(disabled: loginViewModel.loginDisabled))\r\n            .disabled(loginViewModel.loginDisabled)\r\n\r\n            //activity indicator or show user message text\r\n            if inActivity {\r\n                ActivityIndicator(isAnimating: $inActivity)\r\n            } else {\r\n                Text(self.loginViewModel.message ?? """")\r\n                    .modifier(ErrorText())\r\n            }\r\n\r\n            //text and sign up button\r\n            VStack(spacing: DesignConstants.Form.Spacing.minimalSpacing) {\r\n                Text(LocalizableStringConstants.noAccountText)\r\n\r\n                Button.init(action: { self.showSignUpPage.toggle() }) {\r\n                    Text(""Signup"")\r\n                        .foregroundColor(DesignConstants.Colors.defaultIndigoColor)\r\n                }.sheet(isPresented: $showSignUpPage) {\r\n                    SignUp(isPresented: self.$showSignUpPage)\r\n                }\r\n            }\r\n\r\n            //spacer to push content to top\r\n            Spacer()\r\n        }\r\n        .modifier(AllPadding())\r\n    }\r\n}\r\n\r\nstruct LoginView_Previews: PreviewProvider {\r\n    static var previews: some View {\r\n        Login()\r\n    }\r\n}\r\n```', 'comment_created': datetime.datetime(2020, 7, 23, 10, 12, 19, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459347485, 'comment_body': '```\r\n//\r\n//  LoginModel.swift\r\n//  Created on 05/06/20.\r\n//  Created for AnitaB.org Mentorship-iOS \r\n//\r\n\r\nfinal class LoginModel {\r\n   \r\n    // MARK: - Structures\r\n    struct LoginUploadData: Encodable {\r\n        var username: String\r\n        var password: String\r\n    }\r\n\r\n    struct LoginResponseData: Decodable {\r\n        let message: String?\r\n        let sucess: Bool?\r\n    }\r\n}\r\n```', 'comment_created': datetime.datetime(2020, 7, 23, 10, 13, 27, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459348826, 'comment_body': 'there is no benefit, you are right :)', 'comment_created': datetime.datetime(2020, 7, 23, 10, 16, 9, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459352254, 'comment_body': ""Just realised, there is (not in our case though). Cancellable can be used to explicitly cancel the network request from the view (we're not doing that though)."", 'comment_created': datetime.datetime(2020, 7, 23, 10, 23, 14, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 459396643, 'comment_body': ""Why are we preferring an optional service instead of using default values? I think, using default values is better and will make updates easier. Also, we can still explicitly inject a service. For this reason, I haven't modified the content view. \r\nLet me know if I'm missing something"", 'comment_created': datetime.datetime(2020, 7, 23, 12, 0, 23, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 459944261, 'comment_body': ""@annabauza In cases like these, I shouldn't make a separate network model right?"", 'comment_created': datetime.datetime(2020, 7, 24, 9, 21, 5, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 459973370, 'comment_body': 'rename to updateViewModel', 'comment_created': datetime.datetime(2020, 7, 24, 10, 28, 6, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459973407, 'comment_body': 'rename to updateViewModel', 'comment_created': datetime.datetime(2020, 7, 24, 10, 28, 13, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459974178, 'comment_body': ""is this not the same structure as Sent? Can't we reuse this code?"", 'comment_created': datetime.datetime(2020, 7, 24, 10, 30, 7, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459974353, 'comment_body': 'rename to updateViewModel', 'comment_created': datetime.datetime(2020, 7, 24, 10, 30, 35, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459975576, 'comment_body': ""you can provide cancel method to service which will do the job. It's ok to keep it here, less variables to sync on View layer."", 'comment_created': datetime.datetime(2020, 7, 24, 10, 33, 35, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459976276, 'comment_body': 'Network Model is ingeral part of Service it is ok to keep it inside of class no need to create extension here.', 'comment_created': datetime.datetime(2020, 7, 24, 10, 35, 9, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459977070, 'comment_body': 'Shell we return here a closure with fail?', 'comment_created': datetime.datetime(2020, 7, 24, 10, 37, 14, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459977193, 'comment_body': 'Shell we return here a closure with fail?', 'comment_created': datetime.datetime(2020, 7, 24, 10, 37, 33, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459977255, 'comment_body': 'Shell we return here a closure with fail?', 'comment_created': datetime.datetime(2020, 7, 24, 10, 37, 41, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459977282, 'comment_body': 'Shell we return here a closure with fail?', 'comment_created': datetime.datetime(2020, 7, 24, 10, 37, 47, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459977526, 'comment_body': 'integral part of service no need to keep it in extension', 'comment_created': datetime.datetime(2020, 7, 24, 10, 38, 27, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459978273, 'comment_body': 'can we do this:\r\n```\r\nsignUpData.availableToMentor = availabilityPickerSelection != 2', 'comment_created': datetime.datetime(2020, 7, 24, 10, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459978286, 'comment_body': 'Can we do this instead?\r\n```\r\nsignUpData.availableToMentor = availabilityPickerSelection != 2', 'comment_created': datetime.datetime(2020, 7, 24, 10, 40, 28, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459978628, 'comment_body': 'Can we do this instead?\r\n```\r\n            signUpData.needMentoring = availabilityPickerSelection > 1\r\n```', 'comment_created': datetime.datetime(2020, 7, 24, 10, 41, 18, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459978950, 'comment_body': 'shell we complete with fail?', 'comment_created': datetime.datetime(2020, 7, 24, 10, 42, 5, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459979284, 'comment_body': 'no need to do extension as this is integral struct', 'comment_created': datetime.datetime(2020, 7, 24, 10, 42, 57, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459980003, 'comment_body': 'do we need all information from RequestStructure to display data?', 'comment_created': datetime.datetime(2020, 7, 24, 10, 44, 49, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459980769, 'comment_body': 'are we displaying all informations from LoginResoinseData and LoginUploadData in exact form as it is here?', 'comment_created': datetime.datetime(2020, 7, 24, 10, 46, 41, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459981951, 'comment_body': 'you need this method because your ViewModel does not hold correct data in correct format.', 'comment_created': datetime.datetime(2020, 7, 24, 10, 49, 49, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459982368, 'comment_body': ""is this model holding all the data in a way it's directly presented without manipulating them?"", 'comment_created': datetime.datetime(2020, 7, 24, 10, 50, 50, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459982438, 'comment_body': ""is this view model holding all the data in a way it's directly presented without manipulating them?"", 'comment_created': datetime.datetime(2020, 7, 24, 10, 51, 4, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459983519, 'comment_body': ""can't we just say\r\n```\r\n.disabled(self.isLoading)\r\n```"", 'comment_created': datetime.datetime(2020, 7, 24, 10, 54, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459983817, 'comment_body': '`isLoading` should be in ViewModel', 'comment_created': datetime.datetime(2020, 7, 24, 10, 54, 46, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459985197, 'comment_body': ""as we discussed I'm ok either way."", 'comment_created': datetime.datetime(2020, 7, 24, 10, 58, 13, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 459986249, 'comment_body': 'Can we just do this?\r\n```\r\n                    self.relationViewModel.inActivity = self.relationViewModel.firstTimeLoad\r\n```', 'comment_created': datetime.datetime(2020, 7, 24, 11, 0, 42, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 460056910, 'comment_body': '@annabauza Should I simply rename the function, or should I shift the whole function to the view model (as suggested in the last comment) and change the logic accordingly?', 'comment_created': datetime.datetime(2020, 7, 24, 13, 37, 38, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 460064877, 'comment_body': 'We can. Will do.\r\n\r\n\r\n', 'comment_created': datetime.datetime(2020, 7, 24, 13, 51, 4, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 460066316, 'comment_body': 'How do you feel about using a fatal error here instead?', 'comment_created': datetime.datetime(2020, 7, 24, 13, 53, 29, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 460069482, 'comment_body': 'This is incredibly neat! Thanks! Will help us save an if condition too.', 'comment_created': datetime.datetime(2020, 7, 24, 13, 58, 42, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 460071602, 'comment_body': 'yes', 'comment_created': datetime.datetime(2020, 7, 24, 14, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 460072464, 'comment_body': 'yeah ð', 'comment_created': datetime.datetime(2020, 7, 24, 14, 3, 34, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 460072754, 'comment_body': 'okay', 'comment_created': datetime.datetime(2020, 7, 24, 14, 4, 1, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 460074304, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 24, 14, 6, 41, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 460081546, 'comment_body': 'How do you feel about using a fatal error here instead?', 'comment_created': datetime.datetime(2020, 7, 24, 14, 18, 12, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 460105509, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2020, 7, 24, 14, 56, 19, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 460106081, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 24, 14, 57, 11, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 460106414, 'comment_body': 'Done\r\n', 'comment_created': datetime.datetime(2020, 7, 24, 14, 57, 42, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 460106480, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 24, 14, 57, 48, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 460106610, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 24, 14, 58, 2, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 460107059, 'comment_body': ""I've now tailored all the view models (till relation view model) and have pushed the commit. "", 'comment_created': datetime.datetime(2020, 7, 24, 14, 58, 45, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 460107286, 'comment_body': 'yes', 'comment_created': datetime.datetime(2020, 7, 24, 14, 59, 7, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 460107562, 'comment_body': ""yes. I've now tailored all the view models (till relation view model) and have pushed the commit."", 'comment_created': datetime.datetime(2020, 7, 24, 14, 59, 33, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 460154350, 'comment_body': 'would UI be able to catch it?', 'comment_created': datetime.datetime(2020, 7, 24, 16, 18, 12, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 460154577, 'comment_body': 'would UI be able to catch it?', 'comment_created': datetime.datetime(2020, 7, 24, 16, 18, 35, tzinfo=datetime.timezone.utc), 'commenter': 'annabauza', 'type': 'User'}, {'comment_id': 460173246, 'comment_body': 'A fatal error terminates the app.', 'comment_created': datetime.datetime(2020, 7, 24, 16, 53, 29, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 460202689, 'comment_body': 'In our current code, we have used fatalError() in our logout function (if delete token fails).', 'comment_created': datetime.datetime(2020, 7, 24, 17, 52, 31, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}]","[{'commit_sha': '2a9deaa943f75c37152efe792039afa624071338', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cec3a76d267082d14bee175336e0972d83c3e013', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '472e5677c2cc2c065148a8468a47beeaa89b2e06', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ea25da3e7a4b2bc0ce339acb9fadfe53abfef61', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9bccb4a2c6d3a463317a7140611dc69fe3e6b6f', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22dfb2e22af1799a0b556dad949b2e4ed1d9812d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c4017432989e738d212c39b786b7fe488f481d3', 'committer_username': 'annabauza', 'committer_name': 'Anna Bauza', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 14, 16, 33, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2abe84a63845404f784c85d63f29ee271628b1e6', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3dba0af15a390d0aca214d68c51578251de05da6', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd013c18c8fe99086cff69d5f450bba362a0afb3b', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e54b4e6dba006bf813f2b33bf281399db2e66fc', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '069c4ee2312ca882778188b8197c84976020b72a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8606475f8a3bb31d718e40d9662427aa3cc3d8e6', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffa93ba9b570ed501db7cea6c41d1410c807e2b6', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a6d923aeaabec09c161673bb60674137843ef3f', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48f208cc7495a9131e38bcefc3fc3cdf50773836', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0237358115d02fc7bfecb9d0348109844f932b44', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5f2808a952615d72c78bd9d1568563ad278bd68', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4cb694078e603f7269d7b4422cdfd5911b2aab8', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ae65eb1b4506a7f971451202f15983fe0a60c2f', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21ca76c0a96d1543f2fd8552fcc4f837166d1250', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8abf69990790b4d0f79bf1096f770ef82ca0f7a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f7ba4da16afa5457046a6f03e0f539c618293ae', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c96d5cafea30fbdd0a7682b61eb131334a68d45b', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbf2dcb9efea3c074f184c7b68f2e8d634e79424', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d4797a226d6d42c46217a021f9bc51984049b6b', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcf4f7a99cc63c13529d7e0460d7973e6c102c13', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc0f7dc6482b677bdb8ff902955f09ae70cfdca9', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51033ad9a82f93e20c8a5ca0bbd30a5ec1e55914', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4daad91414144d3611000dcd0dd265f5668b4e77', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '065771723b2a21f7b4ed61db6572ba162556a250', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e972e6fa581fafca0de6d9c5d901a9e09122b77', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffafc333252b9a4dadd69d8f980a8ecc289efe90', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e67f7b897bce4df25917e754195436f9e6a7285a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4524b59542040519cbe0bf7e8b1e651acd12e622', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ea2f19616fc21e459216309ed7cb0963a5b8f39', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2395b99e0d0c46631d0e39c385f6bdf019120886', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b4afd87d169fc148c97f1a182c97ef1be3e1d89', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77c875f15480896a6433d5d7ed88d97321d9cdcf', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b8e7f831bebd5cf062b122871dab2e40c601261', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
456762340,feat: Complete Tests (Unit + Integration) for current implementation,"### Description
This PR includes comprehensive set of unit tests for the current implementation of the code. (Till network refactoring).
Note: We need to build the project and login before running the test suite (Reason: we need to fetch token from the keychain).

Fixes #94 

### Type of Change:
- Code
- Quality Assurance
- Outreach
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Xcode - XCTest.

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] I have made corresponding changes to the documentation
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] New and existing unit tests pass locally with my changes
- [x] Any dependent changes have been published in downstream modules
",True,105,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/105,https://github.com/anitab-org/mentorship-ios/pull/105,closed,1158,169,34,28,7,8,0,0,[],2020-07-26 15:05:59+00:00,2020-08-04 07:23:46+00:00,749867.0,"8 days, 16:17:47","[{'comment_id': 460539639, 'comment_body': ""One bug - 'resp' in completion handler contains nil values for all properties. Ideally, it should be equal to mockJSON declared in this function."", 'comment_created': datetime.datetime(2020, 7, 26, 15, 18, 43, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 461738040, 'comment_body': 'Ideally, you should be tearing down anything you initialize in the setUp. \r\n', 'comment_created': datetime.datetime(2020, 7, 28, 17, 7, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 461742719, 'comment_body': 'Ideally, you should deallocate anything you initialise in setUp in the teardown function. \r\n\r\nyou could: \r\n`urlSession = nil`\r\n`configuration = nil`\r\n`super.tearDownWithError()`\r\n', 'comment_created': datetime.datetime(2020, 7, 28, 17, 15, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 461764627, 'comment_body': 'Okay', 'comment_created': datetime.datetime(2020, 7, 28, 17, 51, 42, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 461778513, 'comment_body': '@ApheleiaS Done. Thanks!', 'comment_created': datetime.datetime(2020, 7, 28, 18, 15, 11, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 461855160, 'comment_body': '@anitab-org/mentorship-ios-maintainers assert statements have been restored in the home service test (failing).', 'comment_created': datetime.datetime(2020, 7, 28, 20, 22, 8, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 463477384, 'comment_body': ""View test tried, failed. I believe this is because expectations are meant to be used with closure based completion handlers.\r\nThis also leads me to the question if we need this at all, since we're already fully testing the view model..."", 'comment_created': datetime.datetime(2020, 7, 31, 8, 30, 25, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 463497322, 'comment_body': 'One solution is to use DispatchQueue.main.asyncAfter(deadline: .now() + 1) instead of XCTestExpectation. Is this is a good practice?', 'comment_created': datetime.datetime(2020, 7, 31, 9, 11, 13, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}]","[{'commit_sha': '360495d3800ca9b5aabf7f4b630b4498aaf7892d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '105c15a4a220889281e6f12d0557f2770b6a47db', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0badd47f94fd9ee2686ddac9486f7d9e754a0136', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd57a9089216d1256e0fe9ac77423d388cda18f00', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '757d210e786d7ef310252ddacb32b1b1f3a4b0e4', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd5b5294765d9f80f17bebee41aa660abaa8a7c7', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27033c366d8c6a36d752433524752072d7cdea80', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26d1c63e683f5858d2e4418031a2c8b819d589b9', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7aced4c2a5a866fecbaccbab2efac69fc5dbca67', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9591c65fdb94afeb168c408a51b89af89348cffb', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21ae0b6e07e103cd270c77e24aab9f218726e8d4', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19b883f5a0cceee4ac682e3ac79f90a8a3954ee6', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1f067f93fd61a7b20475cdc3580a4be34886c39', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0131670b890ec20ab30c36d4247722ad5adaca5e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b0eac1543e3178ba82566ce4c0c50c7d541ce02', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da212f81e60f716b02ee17d84b92abb001b98a5e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10fb39f0fa352b05ce031042c0d468bc0f6d4048', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a0cbf04c0945ffde8e06f43b6d43e8cd72f2bf2', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '004f83c478dff2cde5ce34b16cbf0599bb6a2182', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b93bd1ba86c4f2d627ca26706a7305ee4bc70206', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53c6bfbe1be4c97b08258b3d11292af067912079', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6e1e0c8fd7418cd6cf802b711ed86c98af7f8d3', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cbdc46cc1eb89c50d88b07dce94bf0e5e8472be', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd086a184a4217398be0fd406bec5d7c09d760cdf', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '469b61c5fe7fb69d647aa9db9e98a141a782e592', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cce7c9f5f3ff78ac6ef4121a433d2845354a9295', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0ce70f6b82446adfb3a11aa64e57521a24a8be4', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a5d03e483d75f0ad5a7e415922285c7430b9745', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
458673227,feat: Task Comments (UI + Backend),"### Description
This PR implements the task comments feature including fetching of task comments and posting a new comment on a task.
The PR also includes UI change to mark a task as complete, which is now done through a context menu (force/long press).

Note: the post new task comment API has some bugs in it and the GitHub issue for that exists. It inconsistently works for only some tasks and fails for others. However, this is not a blocker, since it does works in normal cases.

Note 2: the KeyboardAware() modifier that is used to lift the text field to the height of the keyboard isn't working perfectly here (some extra space is there). The modifier works perfectly in other areas of our app, this gives me the impression of a SwiftUI bug and not the code of the modifier. Also, fun fact: with Xcode 12, SwiftUI will handle this automatically and no custom code/modifier will be required!

Fixes #104 

### Mocks
<img width=""498"" alt=""Screen Shot 2020-07-31 at 1 51 22 AM"" src=""https://user-images.githubusercontent.com/31164725/88971152-2345db80-d2d1-11ea-8118-59fe085a5d00.png"">

### Type of Change:
- Code
- Quality Assurance
- User Interface
- Outreach
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Tested on Simulator and iPhone 7.

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] I have made corresponding changes to the documentation
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] New and existing unit tests pass locally with my changes
- [x] Any dependent changes have been published in downstream modules
",True,106,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/106,https://github.com/anitab-org/mentorship-ios/pull/106,closed,606,85,17,28,10,10,0,0,[],2020-07-29 20:24:57+00:00,2020-08-06 17:08:44+00:00,679427.0,"7 days, 20:43:47","[{'comment_id': 463030446, 'comment_body': 'localize this string, use a constant\r\n', 'comment_created': datetime.datetime(2020, 7, 30, 14, 18, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 463253984, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 30, 20, 31, 55, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 465213622, 'comment_body': 'nit: mockJSON data for every test could go into a separate JSON file, and you could read that file in different tests to reusue the same data. Since most of the data would be related to the different Models we have, reuse is definitely possible.  ', 'comment_created': datetime.datetime(2020, 8, 4, 17, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 465215490, 'comment_body': 'nit: Localizable String', 'comment_created': datetime.datetime(2020, 8, 4, 17, 32, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 465218565, 'comment_body': 'nit: Should add comments about what these variables are for esp. `showingEarlier` ', 'comment_created': datetime.datetime(2020, 8, 4, 17, 38, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 465221185, 'comment_body': 'question: should we clear self.taskCommentsVM.postCommentResponse also here?', 'comment_created': datetime.datetime(2020, 8, 4, 17, 43, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 465296272, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 4, 19, 59, 1, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 465300081, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 4, 20, 6, 31, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 465300988, 'comment_body': 'Not sure about this point, clear in the sense?', 'comment_created': datetime.datetime(2020, 8, 4, 20, 8, 19, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 465309959, 'comment_body': 'Okay. Would doing that as a JSON file instead of using objects of the model have any advantage, or can we do it anyways? I also have another question, will this be a good approach for cases when we want to have specific data tailored to the test, and change that data within the test to cover different cases?', 'comment_created': datetime.datetime(2020, 8, 4, 20, 26, 5, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}]","[{'commit_sha': '60e9ae2c0eae1238de208235cb0ed3b218cc57fa', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '576edec1875225ee87e1372e868d78c32362d167', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acbe43b3d9476dcda53c97aa147632445354cd57', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8b7038f8069e2352cbc1663ef0dfb8631dc8688', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8ffd0a3ceb16fe2db8a71802a8b8d37aad51898', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89dd10a13fa5e844e5822665ff569b1d95ff5a39', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '043ed34b2b42573e00e06a44ef1aaefcab877325', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bcf9690672461369246cb1b0f019f7c634fdf3c', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '036ad98337e1af93ed4ffcd932bdaaa58e6ff3c8', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c453208b282d54628cd73322859a0f5edbd47f82', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cb060774dee103bee5aa79d9ae20fcfdbffe8ae', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ea3df1d44e61505d81d4265de5f91b4a3eacc07', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd989175bf506ee5d6003c7a35c509db15ea6c881', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ecadd236c1c93d0033996407927dbef9d79bc82', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22ab252fba252a7004be5012b51924dc700fbdec', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7aa8c85fa82ce1bce3c4c0b499eca9b45aa246fb', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '321187e62901effed9cc9b088497e4bb5f36cca1', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4c9df731b0c62208b7300b051c3bfdf878af1f8', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e4c138920e2e2da034bece5d0f2fd9e8ea61dc8', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25139d203edae5073d324d024b46835934a5ab17', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dde4fc0cdd0fd3c7bb4b8d9a1fff335154be50d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36f02ffea91b4a4da03af657d95615d9d4b3e110', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf05ec23540c352d863f60f9014309f16d49399a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69cf88fc4a4c395d81cb2e4f9804f7cd776489c3', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c4656bc1346a346f75f4025c4a4ac95d56f2684', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00914167ddf92b6d10b2a49aaae8c0dc7e137d49', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2caaee76c4f8b7ebc4dad2c3f1bb5a8caf20f8ac', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '692070684e104f5a87c3326ab9994cf351b4480d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
448307229,feat: Pagination in members list,"### Description
This PR implements pagination in the members list screen.

Fixes #84 

### Type of Change:
- Code
- Quality Assurance
- User Interface
- Outreach
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Tested on Simulator.

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [x] Any dependent changes have been published in downstream modules
",True,92,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/92,https://github.com/anitab-org/mentorship-ios/pull/92,closed,510,496,4,3,2,0,0,0,[],2020-07-13 14:53:01+00:00,2020-07-17 00:11:08+00:00,292687.0,"3 days, 9:18:07",[],"[{'commit_sha': '9e52ab468ed7b21886a6aebd185215bd366fb08b', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9c99e9d32d9d8ef0a6903b212dcdf55c3bedd4a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a7a0c1e70b15721488cfc8fa79de2f8bb3bc1bd', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
460003033,feat: Members Search,"### Description
This PR implements searching of members in the members list screen. Both UI and backend consumption have been done.

Fixes #26 

### Mocks
<img width=""498"" alt=""image"" src=""https://user-images.githubusercontent.com/31164725/89221912-b80e4900-d5f1-11ea-99bb-cf6581697737.png"">

### Type of Change:
- Code
- User Interface
- Outreach
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Tested on Xcode Simulator.


### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] I have made corresponding changes to the documentation
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [x] My PR currently breaks something (fix or feature that would cause existing functionality to not work as expected)
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] New and existing unit tests pass locally with my changes
- [x] Any dependent changes have been published in downstream modules
",True,107,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/107,https://github.com/anitab-org/mentorship-ios/pull/107,closed,209,14,9,14,16,0,0,0,[],2020-07-31 10:18:51+00:00,2020-08-04 21:04:23+00:00,384332.0,"4 days, 10:45:32",[],"[{'commit_sha': 'f3af9009b10a422ea2302971b11bd6bdd8da148c', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7482021a07812154a3a520803ca2673a81c2138', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2b42d920483f88b96dcae5cf502b04b0604d640', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1bd9b2cdc7c57ca0d6c2951b468f73b2233f358', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bf7e4bb1a855bad6e47d632eb40fa4e99c49399', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef0f6c67b68839b6ddb64c93e5a50657253b59dd', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf4b830bd8224c1c0caec948b794bb3b546d7861', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '844ccd67f941aefb20041b581bfaf89b9d019355', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9855c803cb16586ed3cfe792f64814b3b79b1c5', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37dcb9e1651fa97eb0c434409d4def2f50176170', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b26cf90fb036ba2c97c7f3749c7eb5a53a9bc5c1', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af5e34d3877dd6ab4a58a082352479ccabb0f3b5', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db858ae03cb58d8f732f67ce2df819949af3ab2e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b890eb9b09866569d3d1c077b7a7e3d818f6e36', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
463496151,feat: Report Violation on Task Comment API,"### Description
This PR implements a new POST API for Report Violations. The violations are reported by a user against a particular task comment. For a successful request, the API sends an email to the admins with the details of the concerned task comment and the commentor.

Fixes #709 

### Type of Change:
- Code
- Outreach
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Tested on Swagger UI on local host. Different cases (both unsuccessful and successful) were tested.

<img width=""1440"" alt=""image"" src=""https://user-images.githubusercontent.com/31164725/89437201-e3657500-d764-11ea-95b5-fb923140f0ce.png"">

### Mocks
<img width=""1383"" alt=""Screen Shot 2020-08-16 at 7 04 43 PM"" src=""https://user-images.githubusercontent.com/31164725/90335980-5a68fc00-dff6-11ea-826e-9b6d35a049b3.png"">

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] I have made corresponding changes to the documentation
- [x] Any dependent changes have been merged

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] New and existing unit tests pass locally with my changes
- [x] Any dependent changes have been published in downstream modules
",False,712,https://api.github.com/repos/anitab-org/mentorship-backend/pulls/712,https://github.com/anitab-org/mentorship-backend/pull/712,closed,254,1,7,19,7,39,3,0,"[{'name': 'Program: GSOC'}, {'name': 'Status: Changes Requested'}, {'name': 'Status: On Hold'}]",2020-08-05 16:15:00+00:00,2021-04-17 13:07:09+00:00,22020729.0,"254 days, 20:52:09","[{'comment_id': 465888550, 'comment_body': 'Where is this template defined?', 'comment_created': datetime.datetime(2020, 8, 5, 17, 29, 4, tzinfo=datetime.timezone.utc), 'commenter': 'isabelcosta', 'type': 'User'}, {'comment_id': 465890872, 'comment_body': 'Can you gather admins email and send this email to them?', 'comment_created': datetime.datetime(2020, 8, 5, 17, 33, 5, tzinfo=datetime.timezone.utc), 'commenter': 'isabelcosta', 'type': 'User'}, {'comment_id': 465892438, 'comment_body': ""Can you use f-strings in this file? As this is part of the coding standard we use for string interpolation. \r\nHere's the [coding standards page](https://github.com/anitab-org/mentorship-backend/wiki/Coding-Standards)\r\nI know this file is not using this standard across, but that is in the plans for future issues."", 'comment_created': datetime.datetime(2020, 8, 5, 17, 35, 55, tzinfo=datetime.timezone.utc), 'commenter': 'isabelcosta', 'type': 'User'}, {'comment_id': 465893571, 'comment_body': 'This should be a POST because this feature is about creating a new record of CoC violations.', 'comment_created': datetime.datetime(2020, 8, 5, 17, 38, 1, tzinfo=datetime.timezone.utc), 'commenter': 'isabelcosta', 'type': 'User'}, {'comment_id': 465895004, 'comment_body': 'This line can be called in the DAO function you created after all checks and validations are completed.', 'comment_created': datetime.datetime(2020, 8, 5, 17, 40, 48, tzinfo=datetime.timezone.utc), 'commenter': 'isabelcosta', 'type': 'User'}, {'comment_id': 465914057, 'comment_body': ""`if is_valid:` could work here and more pythonic. you don't need to explicitly check for empty. "", 'comment_created': datetime.datetime(2020, 8, 5, 18, 15, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 465916241, 'comment_body': '@yugantarjain you need to add an `email_report_violation.html` file in mentorship-backend/templates/ folder. Refer to other email templates there for example. ', 'comment_created': datetime.datetime(2020, 8, 5, 18, 19, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 465917308, 'comment_body': 'nit: extra comma at the end?', 'comment_created': datetime.datetime(2020, 8, 5, 18, 21, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 466154418, 'comment_body': 'Oh yes, I forgot to add it to git. Done. Thanks', 'comment_created': datetime.datetime(2020, 8, 6, 5, 28, 7, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 466164787, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 6, 6, 2, 14, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 466164817, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 6, 6, 2, 20, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 466167459, 'comment_body': 'Done\r\n', 'comment_created': datetime.datetime(2020, 8, 6, 6, 10, 35, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 466167519, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 6, 6, 10, 47, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 466169109, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 6, 6, 15, 27, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 466169911, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 6, 6, 17, 52, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 466560979, 'comment_body': 'Send usernames and userids/useremail both for reporter and commenter here. ', 'comment_created': datetime.datetime(2020, 8, 6, 17, 12, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 466561982, 'comment_body': 'You are using both numbering and variables to format the string. Can we use just one way? ', 'comment_created': datetime.datetime(2020, 8, 6, 17, 14, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 466609455, 'comment_body': 'Done. Emails of both the users (reporter and commenter) are included now.', 'comment_created': datetime.datetime(2020, 8, 6, 18, 35, 3, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 466609668, 'comment_body': 'Done. Literals replaced with variables.', 'comment_created': datetime.datetime(2020, 8, 6, 18, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 469483721, 'comment_body': 'By sending to admins I meant to the emails, of the admins. So imagine, that we have 2 users (Maria and Joana) in the system which are admins of the application, I think the idea of this was to send to admins email. So you would fetch the admins using functions you have available, and send this to both Maria and Joana. This is what I thought this issue was created for', 'comment_created': datetime.datetime(2020, 8, 12, 19, 15, 48, tzinfo=datetime.timezone.utc), 'commenter': 'isabelcosta', 'type': 'User'}, {'comment_id': 469484186, 'comment_body': 'can you include an image of this email being received in the PR description please? Since this is a UI we can see', 'comment_created': datetime.datetime(2020, 8, 12, 19, 16, 43, tzinfo=datetime.timezone.utc), 'commenter': 'isabelcosta', 'type': 'User'}, {'comment_id': 469485325, 'comment_body': ""Each of this entries should be in a separate test function, to make sure you are testing the unit of reporting, and you are sure other calls won't affect other assertions.\r\nSo in the beginning and end of a test run, the setup and teardown will run, you want each call and their assertions to be separate. Does this make sense to you @yugantarjain ?"", 'comment_created': datetime.datetime(2020, 8, 12, 19, 19, 3, tzinfo=datetime.timezone.utc), 'commenter': 'isabelcosta', 'type': 'User'}, {'comment_id': 469512912, 'comment_body': 'maybe `is_invalid` is a better variable name here?', 'comment_created': datetime.datetime(2020, 8, 12, 20, 12, 57, tzinfo=datetime.timezone.utc), 'commenter': 'SanketDG', 'type': 'User'}, {'comment_id': 469513978, 'comment_body': ""I am pretty sure you don't need this check here"", 'comment_created': datetime.datetime(2020, 8, 12, 20, 15, 12, tzinfo=datetime.timezone.utc), 'commenter': 'SanketDG', 'type': 'User'}, {'comment_id': 469514586, 'comment_body': ""This lines 219-228 looks like common validation logic that needs to be refactored so that it's reused and not duplicated.\r\n\r\nFeel free to open an issue for this"", 'comment_created': datetime.datetime(2020, 8, 12, 20, 16, 26, tzinfo=datetime.timezone.utc), 'commenter': 'SanketDG', 'type': 'User'}, {'comment_id': 469514719, 'comment_body': 'nit: add newline please', 'comment_created': datetime.datetime(2020, 8, 12, 20, 16, 41, tzinfo=datetime.timezone.utc), 'commenter': 'SanketDG', 'type': 'User'}, {'comment_id': 469532393, 'comment_body': 'Could this have a bit more context? Maybe ""Violation Reported on Task Comment #id""', 'comment_created': datetime.datetime(2020, 8, 12, 20, 39, 40, tzinfo=datetime.timezone.utc), 'commenter': 'SanketDG', 'type': 'User'}, {'comment_id': 471115403, 'comment_body': ""Yes, I thought so too. However, the whole project follows the 'is_valid' naming, so \r\nI kept it that way. Should I change it in any case?"", 'comment_created': datetime.datetime(2020, 8, 16, 13, 49, 8, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 471115872, 'comment_body': 'Our team had this discussion actually, and we decided to include the email of the user and the commenter but not the ids. For the id of the task comment, I guess two different task comments for two different relations/tasks can have the same id.', 'comment_created': datetime.datetime(2020, 8, 16, 13, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 471115893, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 16, 13, 54, 23, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 471115909, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 16, 13, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 471115925, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 16, 13, 54, 40, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 471115934, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 16, 13, 54, 45, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 471116146, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 16, 13, 56, 38, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 471142616, 'comment_body': 'Makes sense, I was going for the context more, to add Task Comment or the Application name? Just ""Violation Reported"" does not say anything at all.', 'comment_created': datetime.datetime(2020, 8, 16, 18, 18, 28, tzinfo=datetime.timezone.utc), 'commenter': 'SanketDG', 'type': 'User'}, {'comment_id': 471302966, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 17, 7, 51, 13, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 474346849, 'comment_body': 'Uh yes, this seems like a very appropriate change. Thank you @SanketDG !', 'comment_created': datetime.datetime(2020, 8, 21, 0, 45, 5, tzinfo=datetime.timezone.utc), 'commenter': 'isabelcosta', 'type': 'User'}, {'comment_id': 474348497, 'comment_body': 'you could also check here the message, so I suggest doing something like:\r\n```\r\nmessage, status_code = TaskCommentDAO.report_violation(user_id=2, relation_id=2, task_id=1, _id=1)\r\nself.assertEqual(HTTPStatus.OK, status_code)\r\nself.assertEqual(messages.APPROPRIATE_MESSAGE, message)\r\n```\r\n\r\nI think this works and makes this more verbose. I know most of the code uses index ð but I recently learned about this, and seems to be much more clear.\r\n\r\nhowever, we can leave this for other issues, perhaps newcomer ones. I know you are busy with the gsoc work.\r\n', 'comment_created': datetime.datetime(2020, 8, 21, 0, 51, 27, tzinfo=datetime.timezone.utc), 'commenter': 'isabelcosta', 'type': 'User'}, {'comment_id': 474434342, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 21, 6, 29, 11, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}]","[{'commit_sha': '446a1be5ebf90ed56f9a0cb123c1ce01d54026b7', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c440557b401727198ec6a6ed51be229d0f6d27cb', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5efe05cd798943b737d61d15cda9d99169f929a7', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0e67719c4516d96a826a3ca02b932a1afccfd36', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e017be60d444958d2dafc6b3b6b7e81f332fde56', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c8641e7a1e3fa440935b8fd1e9c55b5ea514253', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24dedc4266400d04b82ea969a06d0f529c4eca94', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c73157ac69da46c70134436c36c24bbdc5705a8', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0e716bbe98fea9a5f48f781e41b6fcb29621060', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25eab82a9412ed6973e3c3950885fbd93f580909', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e14a8ecd09e48a18ca4dee6dc46e60000a320c0', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3b0c8471e947a7f2ce98b66f5c4d6488faac533', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90474cf9fa9b792d39c6f90e30299d582165430e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cbd75c43bb779f00faed6a213aa3a8fdebcfbed', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d92ab2831945dd432e01bc2cc1f4270f3e3e286', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e0acf98f9c35fba52c1f1e68f61b23e9788e30e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c66c6e77e049464fa1891661c802e2ab88baabf', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ecf197dd8450decd3ac42cb1bbba4d9565bd6075', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec892c08ba3a77481939e26023185b9cac3d9a84', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
464276216,feat: Report Task Comments for Violation of Code of Conduct,"### Description
This PR implements the report violation API ([PR](https://github.com/anitab-org/mentorship-backend/pull/712)) in the app. Context menu has been used to show the 'Report This Comment' button on a task comment by another user. Tapping on the button brings up an alert to confirm/cancel the action. On confirmation, the api endpoint is used and user is notified of the result.

Note: The report violations API isn't on the server yet. The testing has been done on the local host.

Fixes #109 

### Mocks
Method 1 (Context Menu) | Method 2 (Action Sheet) | Alert
-- | -- | --
<img width=""498"" alt=""Screen Shot 2020-08-07 at 2 56 25 AM"" src=""https://user-images.githubusercontent.com/31164725/89585159-fce8e880-d85a-11ea-86cd-7933174c45cd.png""> | <img width=""498"" alt=""Screen Shot 2020-08-10 at 12 07 35 AM"" src=""https://user-images.githubusercontent.com/31164725/89739361-9c95b900-da9d-11ea-9f74-dfa340fa0786.png""> | <img width=""498"" alt=""Screen Shot 2020-08-10 at 12 07 44 AM"" src=""https://user-images.githubusercontent.com/31164725/89739367-a6b7b780-da9d-11ea-9d14-946e1a107d98.png"">

### Type of Change:
- Code
- User Interface
- Outreach
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Tested on Simulator.

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] I have made corresponding changes to the documentation
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] New and existing unit tests pass locally with my changes
- [x] Any dependent changes have been published in downstream modules
",True,111,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/111,https://github.com/anitab-org/mentorship-ios/pull/111,closed,266,92,16,15,9,0,0,0,[],2020-08-06 21:36:50+00:00,2020-08-13 09:57:15+00:00,562825.0,"6 days, 12:20:25",[],"[{'commit_sha': '42082074fb48e8d4c45b5e361c765c5e4da58191', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b807f53534184d7c80e815b4be08c4f123ef694', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9f3fa77b8107fc81db1b4746b4f3494f57059c9', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68844e10c78d5cd57602f9ad7f2e8429a6cc2d49', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c67cef47baa403bc2530ed2ec51c1d8c58b292d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0da3b16ad549b7f6ba3322ebe3519a22ec97952f', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c94abbdf0a6215a6ce44c7fb80d2be754f39c1af', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c33e93062b106a7cf367fc8ba1185510eaa20aa', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f831c026849c4e83522a0c978af98cb0ea2b2137', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9e1e7db49c0620eb97065bcf354dae0f96687ec', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f7d5dac78299294090b01bf0689361613ddf166', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '669857fff147a9e2e128293169db1196987ec841', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '259ed3df0ffb60747fe8f66c36c4a81f9e6a58fe', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e975d457b720998611d28a7a0d9a23b67fa24bac', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '803797b1c5817273598d0ee88dbbcf63363a4ce7', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
465912142,feat: Social logins,"### Description
This PR implements social logins on the app for two providers - Apple and Google. Now, a user can sign into the app using username/password, or through the convenient social sign-in methods.
The social sign-in process uses new callback APIs on the backend ([PR](https://github.com/anitab-org/mentorship-backend/pull/719)).

To test - 
1. The backend server must be setup on the local machine and the above mentioned PR shall be used.
2. Apple Developer Account must be used in Xcode to create certificates and 'Sign in with Apple' capability shall be added.

Note: run 'pod install' in the project directory before running and use .xcworkspace instead of .xcodeproj
(Instructions for setting up the project in the README have been updated)

### Mocks
| Login Screen | Apple Sign In | Google Sign In |
| ------------- | ------------- | --------------- |
<img width=""501"" alt=""image"" src=""https://user-images.githubusercontent.com/31164725/90598109-089bbe00-e210-11ea-9b01-e35c0d574faa.png""> | <img width=""502"" alt=""Screen Shot 2020-08-14 at 5 37 28 AM"" src=""https://user-images.githubusercontent.com/31164725/90199151-88312380-ddf1-11ea-9612-81ac0bdbcd3d.png""> | <img width=""502"" alt=""Screen Shot 2020-08-14 at 5 37 54 AM"" src=""https://user-images.githubusercontent.com/31164725/90199154-8a937d80-ddf1-11ea-9608-eb3ecde8a282.png"">


Fixes #23 

### Type of Change:
- Code
- Quality Assurance
- User Interface
- Outreach
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
Tested on Simluator

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] I have made corresponding changes to the documentation
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] New and existing unit tests pass locally with my changes
- [x] Any dependent changes have been published in downstream modules
",True,112,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/112,https://github.com/anitab-org/mentorship-ios/pull/112,closed,705,52,20,23,11,6,0,0,[],2020-08-11 07:05:12+00:00,2020-08-22 04:44:43+00:00,941971.0,"10 days, 21:39:31","[{'comment_id': 471742452, 'comment_body': 'Client ID secret in app code, can we move it elsewhere? ', 'comment_created': datetime.datetime(2020, 8, 17, 19, 59, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 471742670, 'comment_body': 'Same here. ', 'comment_created': datetime.datetime(2020, 8, 17, 19, 59, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 471743852, 'comment_body': ""Shouldn't this be in Vstack? "", 'comment_created': datetime.datetime(2020, 8, 17, 20, 1, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ApheleiaS', 'type': 'User'}, {'comment_id': 472011957, 'comment_body': 'This ZStack (used to shown ""Or"" text on top of divider) is inside VStack. ', 'comment_created': datetime.datetime(2020, 8, 18, 8, 36, 29, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 472012535, 'comment_body': ""This I guess can't be altered. For google sign in, we add reversed client id as url type, xcode automatically adds it to plist."", 'comment_created': datetime.datetime(2020, 8, 18, 8, 37, 25, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}, {'comment_id': 472739351, 'comment_body': 'Done. Moved to a new Config.plist file.', 'comment_created': datetime.datetime(2020, 8, 19, 6, 5, 48, tzinfo=datetime.timezone.utc), 'commenter': 'yugantarjain', 'type': 'User'}]","[{'commit_sha': '83a2fd04a0b17f5652a7e3a8a31855fe2a7d313f', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e418915b2522f2b7844f478f417ed2ef7459c5b', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdfa18e8cd32b5bc722e21a31427a6b6809adb6e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '455ed4bff8c9fc3f002ec7a9a748ebdf7e80b635', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b401126a66d7ff36b3987ee9c7b233c0e7daebc', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f693dbe5303d9b78a603c96c73c5873a2e977e5e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b69627b1984dc75cdffaaf448c7e86697e3c71c1', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a78aff761a91d0a45f403e98aa87a2a18ff7cc93', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a90eea3143733b4410fecc1358f542bfcbbab5f3', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '354559a6d8291d8251a8ed54186608259c843f1d', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d3c221195cd84d7b1cee526567d5bf915ec5175', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '893648ac92aa2aad9224df4bf909e6005662e73c', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20b49bc7ba25f55e1cb69a792484274c7107db91', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81383f29bf91ea6dd74ee7068fd6edf80de599a9', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bc25707b7e1b9b90802d06f5e98f8bbe72b91a1', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd72fa6c3efda034055db1a5b479e5151e9234478', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '085642ff63c35430199d4622d3184588c7aeae7f', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3621baaba64a3261e502e87dd449026d2c5a408', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '645bae7c26f6b260dd0041e846bd790b7d30cfb4', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e7d489deaf40d7c98e684f128543e86a6da5796', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03cff92cb2811b8089252094168019d37f36f002', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '692c2f74bcd7a99000a47958bdd95d385f1c641e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1011db09bf4d5aaf284864fdc73d04422e84bb2', 'committer_username': 'vatsalkul', 'committer_name': 'Vatsal Kulshreshtha', 'committer_email': 'vatsalkulshreshtha@gmail.com', 'commit_date': datetime.datetime(2017, 8, 8, 17, 2, 30, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
471866418,fix: failing home service test fixed,"### Description
This PR fixes the failing home service test. The mockJSON has been created as a string constant instead of an object and this somehow solves the problem. The test works properly (changing the assert statement fails the test).

Fixes #108 

### Type of Change:
- Code
- Quality Assurance

**Code/Quality Assurance Only**
- Bug fix (non-breaking change which fixes an issue)

### How Has This Been Tested?
Tested on Xcode.

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] New and existing unit tests pass locally with my changes
- [x] Any dependent changes have been published in downstream modules
",True,118,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/118,https://github.com/anitab-org/mentorship-ios/pull/118,closed,508,13,3,8,4,0,0,0,[],2020-08-21 21:40:29+00:00,2020-08-26 17:48:32+00:00,418083.0,"4 days, 20:08:03",[],"[{'commit_sha': '2462250b60d9c50665b51997ca1b0d848c070faf', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31ba956f4aee5988a9b46576cc9237c87dfccf36', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e61073386e806b25c28795471b558de6044a70ef', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bba05cfbf5625ce3228a576eeef9536f1b4b42b', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7c9811f05d5493e4e3bfc10bf7400e007431607', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99d77308432b73e768a8f75799e86161e0a68b42', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddfaa08922a97f85b1c0158264dd3cf19b1419ff', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '548382386e79a07a6a9683399303659c7d8c1ba5', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28
471942352,feat: Service Tests are robust now. Manual login not required to run test suite.,"### Description
This PR implements temp keychain allocation and deallocation in test classes so that the test suite can be run easily and not require manual login beforehand.

This PR also updates the Travis and it now runs the Xcode test suite.

Fixes #119 

### Type of Change:
- Code
- Quality Assurance
- Documentation

**Code/Quality Assurance Only**
- Bug fix (non-breaking change which fixes an issue)

### How Has This Been Tested?
Tested on Xcode.

### Checklist:
- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [x] I have made corresponding changes to the documentation
- [x] Any dependent changes have been merged 

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings 
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] New and existing unit tests pass locally with my changes
- [x] Any dependent changes have been published in downstream modules
",True,120,https://api.github.com/repos/anitab-org/mentorship-ios/pulls/120,https://github.com/anitab-org/mentorship-ios/pull/120,closed,60,31,10,21,1,0,0,0,[],2020-08-22 05:44:54+00:00,2020-09-01 17:15:15+00:00,905421.0,"10 days, 11:30:21",[],"[{'commit_sha': '57e61e409f282d2861a5e0081376531cc294bc73', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '829c9f1dd652caec57ebbdd6a92f96e19783262e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f96d70cec7cb916e2140bc576525c04973ba1143', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e9e2f966ee7e6ad2abe5198e8e432f534df4527', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dce8bf0e67b853faa47459aa9cfeeb92246d0506', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '804d95c7abec427baca8c78fe2836a7f07b190a6', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59831847e478a53bf507ce1f6d0fd443e0698f22', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '181582d26fc59c96e91d5e7a315c363762c55dd4', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fd4633a4efb3e9b8478e188a74e14e1fa7f5419', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '635e314352a19a335119916223c2eb2f0f194f61', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0888abdc29bcda91c4fc7019e0a02f3e078156ca', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebc5383066d5630c1e23fd40d243f91fd86b9184', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a6f03c7485652235510ff8f0cb04e01ca0578f4', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98ef8e1e26787377f9402de1a7b72d147b605407', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05a1896e174f1f6876d61503a45a2bd4a859c04e', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f011f8f48583a61c09dc45dffdfe80aeff836df', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f2a3e7b64e0466acb39652145b6dd5d9cbc60ef', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d4e527b3fc85e4bf19723de0afc0856a30e235a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5650e6c81fa527582d69e65b595182750aec976a', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '990a47cfd07cba91ba30c422c5841dfd76b05519', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59ddb8ec7d1e4bda7262a226c8e98589489ea632', 'committer_username': 'yugantarjain', 'committer_name': 'Yugantar Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 19, 17, 2, 44, tzinfo=datetime.timezone.utc)}]",Yugantar Jain,31164725,,User,,66,,7,28

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
259550941,mentorship-ios,anitab-org/mentorship-ios,Swift,28,14,5,14,93,12,3,5,"[{'id': 474059065, 'number': 122, 'closed': datetime.datetime(2020, 9, 4, 15, 16, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 26, 17, 45, 46, tzinfo=datetime.timezone.utc), 'time_taken': 768651.0, 'time_delta': '8 days, 21:30:51', 'additions': 18, 'deletions': 0, 'state': 'closed'}, {'id': 471942352, 'number': 120, 'closed': datetime.datetime(2020, 9, 1, 17, 15, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 22, 5, 44, 54, tzinfo=datetime.timezone.utc), 'time_taken': 905421.0, 'time_delta': '10 days, 11:30:21', 'additions': 60, 'deletions': 31, 'state': 'closed'}, {'id': 471866418, 'number': 118, 'closed': datetime.datetime(2020, 8, 26, 17, 48, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 21, 21, 40, 29, tzinfo=datetime.timezone.utc), 'time_taken': 418083.0, 'time_delta': '4 days, 20:08:03', 'additions': 508, 'deletions': 13, 'state': 'closed'}, {'id': 470844452, 'number': 117, 'closed': datetime.datetime(2020, 8, 21, 13, 42, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 20, 11, 25, 27, tzinfo=datetime.timezone.utc), 'time_taken': 94594.0, 'time_delta': '1 day, 2:16:34', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 470835929, 'number': 115, 'closed': datetime.datetime(2020, 8, 21, 14, 9, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 20, 11, 7, 33, tzinfo=datetime.timezone.utc), 'time_taken': 97300.0, 'time_delta': '1 day, 3:01:40', 'additions': 25, 'deletions': 2, 'state': 'closed'}, {'id': 470823471, 'number': 114, 'closed': datetime.datetime(2020, 8, 21, 22, 10, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 20, 10, 41, 42, tzinfo=datetime.timezone.utc), 'time_taken': 127749.0, 'time_delta': '1 day, 11:29:09', 'additions': 38, 'deletions': 0, 'state': 'closed'}, {'id': 465912142, 'number': 112, 'closed': datetime.datetime(2020, 8, 22, 4, 44, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 11, 7, 5, 12, tzinfo=datetime.timezone.utc), 'time_taken': 941971.0, 'time_delta': '10 days, 21:39:31', 'additions': 705, 'deletions': 52, 'state': 'closed'}, {'id': 464276216, 'number': 111, 'closed': datetime.datetime(2020, 8, 13, 9, 57, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 6, 21, 36, 50, tzinfo=datetime.timezone.utc), 'time_taken': 562825.0, 'time_delta': '6 days, 12:20:25', 'additions': 266, 'deletions': 92, 'state': 'closed'}, {'id': 460003033, 'number': 107, 'closed': datetime.datetime(2020, 8, 4, 21, 4, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 31, 10, 18, 51, tzinfo=datetime.timezone.utc), 'time_taken': 384332.0, 'time_delta': '4 days, 10:45:32', 'additions': 209, 'deletions': 14, 'state': 'closed'}, {'id': 458673227, 'number': 106, 'closed': datetime.datetime(2020, 8, 6, 17, 8, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 29, 20, 24, 57, tzinfo=datetime.timezone.utc), 'time_taken': 679427.0, 'time_delta': '7 days, 20:43:47', 'additions': 606, 'deletions': 85, 'state': 'closed'}, {'id': 456762340, 'number': 105, 'closed': datetime.datetime(2020, 8, 4, 7, 23, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 26, 15, 5, 59, tzinfo=datetime.timezone.utc), 'time_taken': 749867.0, 'time_delta': '8 days, 16:17:47', 'additions': 1158, 'deletions': 169, 'state': 'closed'}, {'id': 455199505, 'number': 102, 'closed': datetime.datetime(2020, 7, 24, 20, 42, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 15, 40, 49, tzinfo=datetime.timezone.utc), 'time_taken': 190885.0, 'time_delta': '2 days, 5:01:25', 'additions': 1179, 'deletions': 634, 'state': 'closed'}, {'id': 451079381, 'number': 101, 'closed': datetime.datetime(2020, 7, 22, 15, 36, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 17, 12, 7, 12, tzinfo=datetime.timezone.utc), 'time_taken': 444587.0, 'time_delta': '5 days, 3:29:47', 'additions': 95, 'deletions': 36, 'state': 'closed'}, {'id': 450302850, 'number': 99, 'closed': None, 'created': datetime.datetime(2020, 7, 16, 15, 50, 49, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 174, 'deletions': 0, 'state': 'open'}, {'id': 448307229, 'number': 92, 'closed': datetime.datetime(2020, 7, 17, 0, 11, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 14, 53, 1, tzinfo=datetime.timezone.utc), 'time_taken': 292687.0, 'time_delta': '3 days, 9:18:07', 'additions': 510, 'deletions': 496, 'state': 'closed'}, {'id': 447626116, 'number': 88, 'closed': datetime.datetime(2020, 7, 23, 17, 21, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 10, 20, 17, 16, tzinfo=datetime.timezone.utc), 'time_taken': 1112651.0, 'time_delta': '12 days, 21:04:11', 'additions': 64, 'deletions': 1, 'state': 'closed'}, {'id': 447484471, 'number': 87, 'closed': datetime.datetime(2020, 7, 21, 16, 18, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 10, 14, 51, 15, tzinfo=datetime.timezone.utc), 'time_taken': 955609.0, 'time_delta': '11 days, 1:26:49', 'additions': 152, 'deletions': 6, 'state': 'closed'}, {'id': 445496157, 'number': 85, 'closed': datetime.datetime(2020, 7, 16, 17, 23, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 7, 15, 40, 42, tzinfo=datetime.timezone.utc), 'time_taken': 783770.0, 'time_delta': '9 days, 1:42:50', 'additions': 753, 'deletions': 545, 'state': 'closed'}, {'id': 444116066, 'number': 83, 'closed': datetime.datetime(2020, 7, 10, 19, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 3, 15, 42, 55, tzinfo=datetime.timezone.utc), 'time_taken': 616805.0, 'time_delta': '7 days, 3:20:05', 'additions': 1349, 'deletions': 1033, 'state': 'closed'}, {'id': 442338594, 'number': 82, 'closed': datetime.datetime(2020, 7, 2, 18, 3, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 30, 22, 54, 22, tzinfo=datetime.timezone.utc), 'time_taken': 155320.0, 'time_delta': '1 day, 19:08:40', 'additions': 17, 'deletions': 69, 'state': 'closed'}, {'id': 442328589, 'number': 81, 'closed': datetime.datetime(2020, 7, 5, 5, 27, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 30, 22, 25, 9, tzinfo=datetime.timezone.utc), 'time_taken': 370954.0, 'time_delta': '4 days, 7:02:34', 'additions': 250, 'deletions': 50, 'state': 'closed'}, {'id': 440893165, 'number': 78, 'closed': datetime.datetime(2020, 6, 29, 12, 3, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 27, 10, 29, 28, tzinfo=datetime.timezone.utc), 'time_taken': 178468.0, 'time_delta': '2 days, 1:34:28', 'additions': 362, 'deletions': 61, 'state': 'closed'}, {'id': 439974877, 'number': 77, 'closed': datetime.datetime(2020, 6, 27, 9, 25, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 25, 12, 3, 8, tzinfo=datetime.timezone.utc), 'time_taken': 163344.0, 'time_delta': '1 day, 21:22:24', 'additions': 117, 'deletions': 9, 'state': 'closed'}, {'id': 437409317, 'number': 73, 'closed': datetime.datetime(2020, 6, 20, 23, 27, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 20, 12, 57, 30, tzinfo=datetime.timezone.utc), 'time_taken': 37778.0, 'time_delta': '10:29:38', 'additions': 149, 'deletions': 5, 'state': 'closed'}, {'id': 437178203, 'number': 71, 'closed': datetime.datetime(2020, 6, 20, 17, 6, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 19, 15, 57, 28, tzinfo=datetime.timezone.utc), 'time_taken': 90521.0, 'time_delta': '1 day, 1:08:41', 'additions': 186, 'deletions': 62, 'state': 'closed'}, {'id': 436330536, 'number': 70, 'closed': datetime.datetime(2020, 6, 19, 18, 17, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 18, 8, 59, 40, tzinfo=datetime.timezone.utc), 'time_taken': 119891.0, 'time_delta': '1 day, 9:18:11', 'additions': 396, 'deletions': 84, 'state': 'closed'}, {'id': 435646557, 'number': 66, 'closed': datetime.datetime(2020, 6, 18, 20, 6, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 17, 7, 6, 25, tzinfo=datetime.timezone.utc), 'time_taken': 133199.0, 'time_delta': '1 day, 12:59:59', 'additions': 258, 'deletions': 76, 'state': 'closed'}, {'id': 435192945, 'number': 63, 'closed': datetime.datetime(2020, 6, 16, 20, 24, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 16, 12, 51, 29, tzinfo=datetime.timezone.utc), 'time_taken': 27172.0, 'time_delta': '7:32:52', 'additions': 6, 'deletions': 2, 'state': 'closed'}, {'id': 434032536, 'number': 61, 'closed': datetime.datetime(2020, 6, 16, 6, 53, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 13, 17, 18, 54, tzinfo=datetime.timezone.utc), 'time_taken': 221652.0, 'time_delta': '2 days, 13:34:12', 'additions': 295, 'deletions': 39, 'state': 'closed'}, {'id': 433406006, 'number': 58, 'closed': datetime.datetime(2020, 6, 13, 15, 47, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 12, 0, 50, 15, tzinfo=datetime.timezone.utc), 'time_taken': 140257.0, 'time_delta': '1 day, 14:57:37', 'additions': 340, 'deletions': 94, 'state': 'closed'}, {'id': 432869082, 'number': 57, 'closed': datetime.datetime(2020, 6, 12, 21, 6, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 11, 6, 32, 51, tzinfo=datetime.timezone.utc), 'time_taken': 138825.0, 'time_delta': '1 day, 14:33:45', 'additions': 450, 'deletions': 131, 'state': 'closed'}, {'id': 431749343, 'number': 51, 'closed': datetime.datetime(2020, 6, 12, 21, 4, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 9, 12, 14, 22, tzinfo=datetime.timezone.utc), 'time_taken': 291017.0, 'time_delta': '3 days, 8:50:17', 'additions': 386, 'deletions': 128, 'state': 'closed'}, {'id': 430997679, 'number': 42, 'closed': datetime.datetime(2020, 6, 8, 17, 45, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 8, 9, 35, 30, tzinfo=datetime.timezone.utc), 'time_taken': 29378.0, 'time_delta': '8:09:38', 'additions': 181, 'deletions': 171, 'state': 'closed'}, {'id': 430256242, 'number': 40, 'closed': datetime.datetime(2020, 6, 7, 23, 25, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 7, 18, 1, 44, tzinfo=datetime.timezone.utc), 'time_taken': 19416.0, 'time_delta': '5:23:36', 'additions': 10, 'deletions': 4, 'state': 'closed'}, {'id': 429991448, 'number': 39, 'closed': datetime.datetime(2020, 6, 7, 13, 7, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 7, 11, 37, 37, tzinfo=datetime.timezone.utc), 'time_taken': 5391.0, 'time_delta': '1:29:51', 'additions': 171, 'deletions': 16, 'state': 'closed'}, {'id': 428736613, 'number': 36, 'closed': datetime.datetime(2020, 6, 7, 7, 51, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 5, 20, 30, tzinfo=datetime.timezone.utc), 'time_taken': 127318.0, 'time_delta': '1 day, 11:21:58', 'additions': 578, 'deletions': 44, 'state': 'closed'}, {'id': 426127156, 'number': 35, 'closed': datetime.datetime(2020, 6, 6, 9, 1, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 1, 17, 52, 22, tzinfo=datetime.timezone.utc), 'time_taken': 400136.0, 'time_delta': '4 days, 15:08:56', 'additions': 469, 'deletions': 20, 'state': 'closed'}, {'id': 425453091, 'number': 16, 'closed': datetime.datetime(2020, 5, 31, 18, 21, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 30, 11, 27, 16, tzinfo=datetime.timezone.utc), 'time_taken': 111259.0, 'time_delta': '1 day, 6:54:19', 'additions': 1202, 'deletions': 0, 'state': 'closed'}, {'id': 417222631, 'number': 2, 'closed': datetime.datetime(2020, 5, 18, 15, 29, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 13, 9, 2, 55, tzinfo=datetime.timezone.utc), 'time_taken': 455177.0, 'time_delta': '5 days, 6:26:17', 'additions': 83, 'deletions': 0, 'state': 'closed'}]"
131176623,mentorship-backend,anitab-org/mentorship-backend,Python,448,195,18,149,376,127,22,44,"[{'id': 465545380, 'number': 719, 'closed': datetime.datetime(2021, 3, 20, 18, 49, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 10, 14, 43, 8, tzinfo=datetime.timezone.utc), 'time_taken': 19195574.0, 'time_delta': '222 days, 4:06:14', 'additions': 381, 'deletions': 28, 'state': 'closed'}, {'id': 463496151, 'number': 712, 'closed': datetime.datetime(2021, 4, 17, 13, 7, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 5, 16, 15, tzinfo=datetime.timezone.utc), 'time_taken': 22020729.0, 'time_delta': '254 days, 20:52:09', 'additions': 254, 'deletions': 1, 'state': 'closed'}]"
