pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
685782022,Hellmann-Feynman stresses via ForwardDiff and custom rules,"This PR implements experimental support for Hellmann-Feynman stresses via ForwardDiff. 
Coming from https://github.com/niklasschmitz/DFTK.jl/pull/2 and https://github.com/JuliaMolSim/DFTK.jl/issues/443

This does not include yet:
- external code like libxc

TODO list
- [x] re-enable lattice cond check
- [x] symmetries
- [x] safer type promotion in compute_density
- [x] solve DummyInplace code duplication with requires
- [x] use silicon numbers from `test/testcases.jl`",True,476,https://api.github.com/repos/JuliaMolSim/DFTK.jl/pulls/476,https://github.com/JuliaMolSim/DFTK.jl/pull/476,closed,220,21,9,52,2,42,0,0,[],2021-07-08 08:02:53+00:00,2021-07-15 12:36:11+00:00,621198.0,"7 days, 4:33:18","[{'comment_id': 666026366, 'comment_body': ""I don't think you can do this because the normalization of the rho depends on the volume of the unit cell. The orbitals are fine because they are l^2 normalized to 1, independently of the basis. You have to recompute rho in the new basis with the old orbitals."", 'comment_created': datetime.datetime(2021, 7, 8, 9, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'antoine-levitt', 'type': 'User'}, {'comment_id': 666029125, 'comment_body': ""weird that the test doesn't pick that up. Can you try checking more carefully? Ie do the SCF to a very small precision and checking the result to more accuracy"", 'comment_created': datetime.datetime(2021, 7, 8, 9, 31, 6, tzinfo=datetime.timezone.utc), 'commenter': 'antoine-levitt', 'type': 'User'}, {'comment_id': 666030446, 'comment_body': 'Also we should probably check it for a metal. I believe Hellman-Feynmann is also valid in this case but we should be careful.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 32, 39, tzinfo=datetime.timezone.utc), 'commenter': 'antoine-levitt', 'type': 'User'}, {'comment_id': 666031155, 'comment_body': 'Can you add this to [extras] instead? That\'s where we put the ""optional"" deps used in tests', 'comment_created': datetime.datetime(2021, 7, 8, 9, 33, 39, tzinfo=datetime.timezone.utc), 'commenter': 'antoine-levitt', 'type': 'User'}, {'comment_id': 666316511, 'comment_body': 'That was indeed a bug! Fixed it now by recomputing rho and added a consistency check against non-Hellmann-Feynman finite diff of the whole solve', 'comment_created': datetime.datetime(2021, 7, 8, 15, 48, 16, tzinfo=datetime.timezone.utc), 'commenter': 'niklasschmitz', 'type': 'User'}, {'comment_id': 666684793, 'comment_body': 'This needs to be conditionally included when ForwardDiff is available (using requires, I can do it if you want).', 'comment_created': datetime.datetime(2021, 7, 9, 5, 41, 5, tzinfo=datetime.timezone.utc), 'commenter': 'mfherbst', 'type': 'User'}, {'comment_id': 666685022, 'comment_body': 'Whitespace commit', 'comment_created': datetime.datetime(2021, 7, 9, 5, 41, 40, tzinfo=datetime.timezone.utc), 'commenter': 'mfherbst', 'type': 'User'}, {'comment_id': 666685380, 'comment_body': 'Not just that ... this also makes it more annoying when we think about GPUs, but ok we worry about that some other day.', 'comment_created': datetime.datetime(2021, 7, 9, 5, 42, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mfherbst', 'type': 'User'}, {'comment_id': 666685983, 'comment_body': 'I think the pattern would be `T = promote_type(T, eltype(\\psi))` and then just use `T`', 'comment_created': datetime.datetime(2021, 7, 9, 5, 44, 27, tzinfo=datetime.timezone.utc), 'commenter': 'mfherbst', 'type': 'User'}, {'comment_id': 666686703, 'comment_body': 'We typically first do imports than comments', 'comment_created': datetime.datetime(2021, 7, 9, 5, 46, 33, tzinfo=datetime.timezone.utc), 'commenter': 'mfherbst', 'type': 'User'}, {'comment_id': 666687094, 'comment_body': ""Two spaces before `#` ... also these comments are sort of not needed for the tests. It's a pretty standard setup. Also we have data for standard test cases centralised in `testcases.jl` So you better use that. See the other tests for examples (search for `silicon.lattice`)."", 'comment_created': datetime.datetime(2021, 7, 9, 5, 47, 40, tzinfo=datetime.timezone.utc), 'commenter': 'mfherbst', 'type': 'User'}, {'comment_id': 666688129, 'comment_body': 'Is this comment useful (in the sense: Will this not point to void when the branch is merged / deleted)', 'comment_created': datetime.datetime(2021, 7, 9, 5, 50, 20, tzinfo=datetime.timezone.utc), 'commenter': 'mfherbst', 'type': 'User'}, {'comment_id': 666688231, 'comment_body': 'This linebreak feels too much.', 'comment_created': datetime.datetime(2021, 7, 9, 5, 50, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mfherbst', 'type': 'User'}, {'comment_id': 666688673, 'comment_body': 'Quite a bit of these workarounds are not covered by tests at the moment, which bothers me a bit. I know this will not last forever (hopefully), but if you can think of an easy way to increase coverage here @niklasschmitz (like another nice example or so) that would be good.', 'comment_created': datetime.datetime(2021, 7, 9, 5, 51, 52, tzinfo=datetime.timezone.utc), 'commenter': 'mfherbst', 'type': 'User'}, {'comment_id': 666689438, 'comment_body': 'I would not put an empty line here ...', 'comment_created': datetime.datetime(2021, 7, 9, 5, 54, 2, tzinfo=datetime.timezone.utc), 'commenter': 'mfherbst', 'type': 'User'}, {'comment_id': 666689473, 'comment_body': '... or here.', 'comment_created': datetime.datetime(2021, 7, 9, 5, 54, 8, tzinfo=datetime.timezone.utc), 'commenter': 'mfherbst', 'type': 'User'}, {'comment_id': 666690025, 'comment_body': 'Just\r\n```suggestion\r\n#\r\n# DFTK setup specific\r\n#\r\n```\r\nor even just the comment surrounded by empty lines ... too much is just too much :smile:', 'comment_created': datetime.datetime(2021, 7, 9, 5, 55, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mfherbst', 'type': 'User'}, {'comment_id': 666690491, 'comment_body': 'One way to do that is to have a file that is included with Requires for both types of dependencies, a bit like is done for the generic workarounds. I can do that if you want.', 'comment_created': datetime.datetime(2021, 7, 9, 5, 56, 53, tzinfo=datetime.timezone.utc), 'commenter': 'mfherbst', 'type': 'User'}, {'comment_id': 668572142, 'comment_body': ""That's a good point.. Is there a good alternative here?  Another solution would be to go for non-mutating code and avoiding the typed pre-allocation, which we'd explore next with Zygote anyways."", 'comment_created': datetime.datetime(2021, 7, 13, 9, 4, 40, tzinfo=datetime.timezone.utc), 'commenter': 'niklasschmitz', 'type': 'User'}, {'comment_id': 668574265, 'comment_body': 'agreed!', 'comment_created': datetime.datetime(2021, 7, 13, 9, 7, 31, tzinfo=datetime.timezone.utc), 'commenter': 'niklasschmitz', 'type': 'User'}, {'comment_id': 668579395, 'comment_body': 'Agree, I removed the pointer to my branch', 'comment_created': datetime.datetime(2021, 7, 13, 9, 14, 15, tzinfo=datetime.timezone.utc), 'commenter': 'niklasschmitz', 'type': 'User'}, {'comment_id': 668617033, 'comment_body': 'I factored this out into a new common `workarounds/dummy_inplace_fft.jl` with a flag `DUMMY_INPLACE_LOADED` checked at the requires.', 'comment_created': datetime.datetime(2021, 7, 13, 10, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'niklasschmitz', 'type': 'User'}, {'comment_id': 670274201, 'comment_body': 'this allocates twice', 'comment_created': datetime.datetime(2021, 7, 15, 9, 1, 21, tzinfo=datetime.timezone.utc), 'commenter': 'antoine-levitt', 'type': 'User'}, {'comment_id': 670313336, 'comment_body': 'I now added the re-use of `atnum`, `psp` and `positions` from silicon in testcases.jl', 'comment_created': datetime.datetime(2021, 7, 15, 9, 52, 28, tzinfo=datetime.timezone.utc), 'commenter': 'niklasschmitz', 'type': 'User'}, {'comment_id': 670326290, 'comment_body': ""Why twice? This just allocates the array and that's it, no?"", 'comment_created': datetime.datetime(2021, 7, 15, 10, 10, 13, tzinfo=datetime.timezone.utc), 'commenter': 'mfherbst', 'type': 'User'}, {'comment_id': 670334822, 'comment_body': 'oh right, sorry, not used to this pattern', 'comment_created': datetime.datetime(2021, 7, 15, 10, 22, 21, tzinfo=datetime.timezone.utc), 'commenter': 'antoine-levitt', 'type': 'User'}, {'comment_id': 670383001, 'comment_body': 'I updated to use promote_type in combination with the three-arg version of `similar` specifying both the eltype and size https://github.com/JuliaMolSim/DFTK.jl/pull/476/commits/6a821bd79a920dafe7b2001db6609d8aba9644c3', 'comment_created': datetime.datetime(2021, 7, 15, 11, 39, 37, tzinfo=datetime.timezone.utc), 'commenter': 'niklasschmitz', 'type': 'User'}, {'comment_id': 670383134, 'comment_body': 'https://github.com/JuliaMolSim/DFTK.jl/pull/476/commits/6a821bd79a920dafe7b2001db6609d8aba9644c3', 'comment_created': datetime.datetime(2021, 7, 15, 11, 39, 50, tzinfo=datetime.timezone.utc), 'commenter': 'niklasschmitz', 'type': 'User'}, {'comment_id': 670387181, 'comment_body': 'Line too long.', 'comment_created': datetime.datetime(2021, 7, 15, 11, 46, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mfherbst', 'type': 'User'}, {'comment_id': 670388765, 'comment_body': ""I'm confused, why is that needed here?"", 'comment_created': datetime.datetime(2021, 7, 15, 11, 48, 51, tzinfo=datetime.timezone.utc), 'commenter': 'antoine-levitt', 'type': 'User'}, {'comment_id': 670389395, 'comment_body': ""It could happen someones uses ForwardDiff and DoubleFloats. So you don't want to include twice."", 'comment_created': datetime.datetime(2021, 7, 15, 11, 49, 56, tzinfo=datetime.timezone.utc), 'commenter': 'mfherbst', 'type': 'User'}, {'comment_id': 670390588, 'comment_body': 'Sure but this loads the forwarddiff stuff when intervalarithmetic is loaded?', 'comment_created': datetime.datetime(2021, 7, 15, 11, 51, 44, tzinfo=datetime.timezone.utc), 'commenter': 'antoine-levitt', 'type': 'User'}, {'comment_id': 670390661, 'comment_body': 'added a line break https://github.com/JuliaMolSim/DFTK.jl/pull/476/commits/30ada7f9967b715576a246d4a70d509b30a3f5d4', 'comment_created': datetime.datetime(2021, 7, 15, 11, 51, 50, tzinfo=datetime.timezone.utc), 'commenter': 'niklasschmitz', 'type': 'User'}, {'comment_id': 670391381, 'comment_body': 'dummy inplace is also needed for generic ffts', 'comment_created': datetime.datetime(2021, 7, 15, 11, 52, 54, tzinfo=datetime.timezone.utc), 'commenter': 'mfherbst', 'type': 'User'}, {'comment_id': 670392733, 'comment_body': 'This should be `1:n_dim` now. ', 'comment_created': datetime.datetime(2021, 7, 15, 11, 55, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mfherbst', 'type': 'User'}, {'comment_id': 670393589, 'comment_body': 'then can we just have include(""dummy_inplace_fft.jl"") in fft_generic.jl?\r\n\r\n', 'comment_created': datetime.datetime(2021, 7, 15, 11, 56, 26, tzinfo=datetime.timezone.utc), 'commenter': 'antoine-levitt', 'type': 'User'}, {'comment_id': 670394144, 'comment_body': 'dummy_inplace was previously part of generic_fft.jl (it does not include ForwardDiff stuff but is a common prerequisite for all three of ForwardDiff, DoubleFloats and IntervalArithmetic)', 'comment_created': datetime.datetime(2021, 7, 15, 11, 57, 16, tzinfo=datetime.timezone.utc), 'commenter': 'niklasschmitz', 'type': 'User'}, {'comment_id': 670394285, 'comment_body': 'Or not... never mind anyway', 'comment_created': datetime.datetime(2021, 7, 15, 11, 57, 30, tzinfo=datetime.timezone.utc), 'commenter': 'antoine-levitt', 'type': 'User'}, {'comment_id': 670394912, 'comment_body': 'ah yes!', 'comment_created': datetime.datetime(2021, 7, 15, 11, 58, 30, tzinfo=datetime.timezone.utc), 'commenter': 'niklasschmitz', 'type': 'User'}, {'comment_id': 670395101, 'comment_body': ""we could, but I think that's only more confusing. Let's leave it as is."", 'comment_created': datetime.datetime(2021, 7, 15, 11, 58, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mfherbst', 'type': 'User'}, {'comment_id': 670395231, 'comment_body': 'https://github.com/JuliaMolSim/DFTK.jl/pull/476/commits/cb466c1903f805af1008fb009472712cef51f8ea', 'comment_created': datetime.datetime(2021, 7, 15, 11, 59, 4, tzinfo=datetime.timezone.utc), 'commenter': 'niklasschmitz', 'type': 'User'}, {'comment_id': 670398545, 'comment_body': 'Yup OK! ', 'comment_created': datetime.datetime(2021, 7, 15, 12, 4, 31, tzinfo=datetime.timezone.utc), 'commenter': 'antoine-levitt', 'type': 'User'}]","[{'commit_sha': 'd442e91608e7f767c32128553845eaa0f6316a3b', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2074095340ca2ee459828feaf16535259344c8fd', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cafed13ddc5d3f95d370fafcdb01869f3a61a23b', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38db38fd7ff559f562379541b38a3e428a895475', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '797bf3417e0eb9c3efca8cf9630823f0c19a01cf', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '223dc240c8d30338f9af1355b5040878d883ddd4', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abe7c7bc308fc864142c2cb38791205c4456ce85', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4861677df4b56d9556329f671d14584bc55ac355', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bea5293b755a01d627cba8ea9b7d20e69579c80', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30dbc98bced642d9d8d33891d85a08fc28075c47', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5660f8ecc3e3fd39135a3340d41bad61cc18425', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '746aad66fcc98655a0e66da4b4db8f41d5b6d28a', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdad8eb706a45c1eb6cab5ef3525ae4a4bfb928b', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '324918fc42a174ea35455eb4f06c90c5b1d8cb74', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e772a5f6d74a86161ff1bb9296ce80f890badfb', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7c410572109337b09e79d48dd197a97e54ed781', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55125261676dc41b436df046e6b4f8f47dfd557e', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a5b54c08ea1d830294b57dc15281049f34f99a4', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42cb0763e78344763c3af21d9ad733fa4ad3f8f3', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '791a5a8638dc747669d8ef41c8e064436262609c', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '320ce60ed35cb0c11186869e383afdb1dd383093', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57331b0d498756dc85322ef67c02daf781bc5318', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3da7d29d72b169d51b088792be7026f3370ec8de', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a0dcf3a847c9a1c1d2f3c8aad6a7aadee05d19a', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7630153e0214e75d8f6c20da253cad95da93092', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34b5129304364210396e450d9fcb5389e1fce1e7', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cf5a2c7825028a2835fa8301a030e95ce51350c', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb89f369b4a381b69b012e46b439156940f38d50', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb1b96815c6102e2ed0e5e25c5112950c5f6ab0f', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6eafdefac5e90856e6bf3ba43631a4d4b4775d9f', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0dcf5e7e2b6cde7b97d1fd368aa99d8bf4053a1', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11288af712d70673b32e607da4b2a2b063c5b8ef', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '631b591bc78131e49d888c9442086590d161ae3a', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00078e39694f70558755ac51869656bee7285c0c', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b878050522353822bf3cd6a026766473f8911c77', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51593f68323052bf958f9aa578fba45ff4f1a9bc', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65aad15e2df50cd15c60ba0569eaea94c02ee38e', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8c9b5f20bc109b8ce7430cf3cea39cdab850156', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80f30bdf448c8882c0aee069f5e90790f71b4fb9', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21e39c9331bfb8a188fddcda30fa97587c12dafc', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'badd501751bb831f74ba48a0b6f9a833b04823ef', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f377c5a3c7f351be7ee15590544a07bfb0ac476a', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd00aed51f3105cf9ffc8c33e8140bae0f9b9bee8', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23a77a8ffb48929bf36fbf735501a3c0d174b1cc', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a181ed2a34cfba798899c5e01509035de96a5c4e', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c57d6b6d11a8b9d602f16f1e71a7f1b198b9873', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1ef7eec234448a2091ed13f645677ac9db52454', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8be63da5d59ef4a8743d175e0ac71154662688ab', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a821bd79a920dafe7b2001db6609d8aba9644c3', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd90f8ca0834847568c6c386a4f4f90e2c8cb8064', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30ada7f9967b715576a246d4a70d509b30a3f5d4', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb466c1903f805af1008fb009472712cef51f8ea', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}]",Niklas Schmitz,18703284,,User,,44,,206,63
691901267,Extend ForwardDiff fallback for SVector norm to handle multiple partials,Needed for https://github.com/JuliaMolSim/DFTK.jl/pull/487,True,488,https://api.github.com/repos/JuliaMolSim/DFTK.jl/pulls/488,https://github.com/JuliaMolSim/DFTK.jl/pull/488,closed,5,6,1,1,1,0,0,0,[],2021-07-17 10:23:13+00:00,2021-07-17 10:59:25+00:00,2172.0,0:36:12,[],"[{'commit_sha': 'b2c283f85cb68872bb48b64367047a13d9aef3a2', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}]",Niklas Schmitz,18703284,,User,,44,,206,63
692426553,Improve _apply_plan type stability,"The pattern `T = ForwardDiff.tagtype(eltype(x))` caused type instabilities in the Dual construction after, so I replace it by an explicit static type parameter declaration @antoine-levitt 

Before:
```julia
julia> @btime compute_stresses(scfres)
  249.188 ms (2620837 allocations: 246.87 MiB)
3×3 Matrix{Float64}:
 -0.00122464   -2.29076e-18   1.19015e-17
 -2.29076e-18  -0.00122464    5.35591e-18
  8.12389e-18   8.93639e-19  -0.00122464
```
After:
```julia
julia> @btime compute_stresses(scfres)
  66.461 ms (28773 allocations: 112.10 MiB)
3×3 Matrix{Float64}:
 -0.00122464   -2.29076e-18   1.19015e-17
 -2.29076e-18  -0.00122464    5.35591e-18
  8.12389e-18   8.93639e-19  -0.00122464
```",True,494,https://api.github.com/repos/JuliaMolSim/DFTK.jl/pulls/494,https://github.com/JuliaMolSim/DFTK.jl/pull/494,closed,10,3,1,1,0,0,0,0,[],2021-07-19 09:15:02+00:00,2021-07-19 09:17:16+00:00,134.0,0:02:14,[],"[{'commit_sha': 'd8f53a8595333648f9631635873491a4fc464fc7', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}]",Niklas Schmitz,18703284,,User,,44,,206,63
717885412,[WIP] Forwarddiff dipole moment example,"This draft PR contains a rough example of calculating a dipole moment via ForwardDiff. As an example of forward-mode implicit differentiation beyond Hellmann-Feynman, it builds upon our previous ForwardDiff rules (https://github.com/JuliaMolSim/DFTK.jl/pull/476) and externally adds a (currently quite hacky) dual-number version of `self_consistent_field`. This also re-uses the `compute_δρ` and `solve_ΩplusK` from https://github.com/JuliaMolSim/DFTK.jl/pull/433 by @gkemlin . ",True,520,https://api.github.com/repos/JuliaMolSim/DFTK.jl/pulls/520,https://github.com/JuliaMolSim/DFTK.jl/pull/520,closed,83,0,1,12,0,0,0,0,[],2021-08-23 14:22:20+00:00,2021-10-07 12:56:58+00:00,3882878.0,"44 days, 22:34:38",[],"[{'commit_sha': '3c58dfe2863844b0995594d78cf158935b60a590', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '534cd0ff3cb433e1ac11667612275bc2f28592f8', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '881c58a0fbe511fb38ec6e0ddd9967cee65f7503', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd32f6e8c2f569770001a87d85b64de561791902c', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22202637ab67c4197354d3dc92b374efa3361323', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e750e10d1645d14f59a5126fbdd528cc0f6ebb49', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e122c75b65a325aa00ad64a015e0906c69c7db8', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a77d9ca73092c3d5fe285ccdc7b80ad1cc66748', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89152eadf1009b76cd3411f3dd5b52eb1bd998fc', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88e82463d8ae2f919cb86e28fe9f0b37808d185a', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82d4af3897a1f019b6e9246b4eaa16cd50823f05', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd05c912bf3cec1025c21311fa44a3a78050ad36c', 'committer_username': 'mfherbst', 'committer_name': 'Michael F. Herbst', 'committer_email': 'michael.herbst@epfl.ch', 'commit_date': datetime.datetime(2015, 2, 23, 10, 36, 35, tzinfo=datetime.timezone.utc)}]",Niklas Schmitz,18703284,,User,,44,,206,63
716802852,[WIP] Hellmann-Feynman derivatives using ChainRules and Zygote,"This draft PR contains a rough sketch of enabling Hellmann-Feynman derivatives via reverse mode automatic differentiation, using ChainRules and Zygote. This is a complementary approach to the previously implemented HF stresses using ForwardDiff in https://github.com/JuliaMolSim/DFTK.jl/pull/476. It is technically more challenging, partly also due to current limitations of Zygote (no in-place array mutation, no try-catch, no MPI support) but has the promise of enabling cheap force computations for large systems and machine learning applications.

Currently, this still requires quite a few workarounds as can be seen in `workarounds/chainrules.jl`: 
- `G_to_r` and `r_to_G` rrules are expressed in terms of each other, hiding non-Julia FFTW and mutation
- complicated constructors (with sanity checks & control flow) have simplified counterparts that only compute the differentiable fields and return a NamedTuple instead of a full struct. An easier example is `_autodiff_Model_namedtuple`, whereas `_autodiff_PlaneWaveBasis_namedtuple` is arguably currently the most complicated due to necessary term instantiation handling.
- few functions are currently explicitly marked as non-differentiable such as `ElementPsp` and `G_vectors`
- a non-mutating functional (unoptimized) version of compute_density is included

A minimum working example of calculating a HF stress is included in `examples/zygote-stresses.jl`. Currently it is implemented only for Kinetic and AtomicLocal terms, but adding other terms should be similar in terms of the needed rewrite strategies.

Tests against FiniteDiff are included in test/chainrules.jl",False,519,https://api.github.com/repos/JuliaMolSim/DFTK.jl/pulls/519,https://github.com/JuliaMolSim/DFTK.jl/pull/519,closed,535,25,10,43,2,0,0,0,[],2021-08-20 14:58:11+00:00,2022-01-14 14:00:59+00:00,12697368.0,"146 days, 23:02:48",[],"[{'commit_sha': 'f9b11d65692329afb41f12970521cd6a3a85cdcf', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd039d9c52d2cce0e0074622115e387bfb0236bc1', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '596784b3e1b5c4fed618cb77d4c9b42c5c40eeb4', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c9c75a7b87bf3bb77e58f3f42e1ea15f340bcbc', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fe2027479685fc89c8b19d88a103a4c76df49ce', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5272d16530208429ec98395cfe88a3084cd632a3', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80816886ff59c42e66f74d007240fa6cae335f3f', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42e12ecc6c124dc94f72233c99c9ef7606ab9705', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1226b5294bdcadcd79827242d29cc870a136b98', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6d68f6a7ea32bbfa6cb15f05c00d40453b1955f', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69e52d7ca0d01e95cda6875209f2b00369fac8d7', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '604f14d63de285a9ab4081fd56f3a952fa1a6f4c', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d0e1cd92c516ccfd6f54fe58a9115f6278ac34d', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c0a22ae19a60556c206a00e028450e3c2465e37', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '679926416f64adaab4c3f705657525f7e7c7a98f', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aabdfb5f17c501d4d243aec843b8767bdfd3056b', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2d4908331ca1188020b667b1c61dc219449016e', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43c97832f741f7d10ffb227498e089347d63b643', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89cecd152294e333b01ec8fc8ce8f97f52d9f17d', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f08cb6f85121ab1c21bb8249c71d2083369c9a29', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a7a36ea4503d316a892572f566c9c7a0eb9a7bc', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7421b78d8474be2c4e9f1114598e8582f116667c', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c495090cee186f0fbe3a9bce1c4f343f80174fa2', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c28fb3d5277ce1cff0d6e883c85d3e4895adf2d', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e90dde03de56edf86edb7d3aaa18ea9054cb14f', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76f11e4cc924e89aa0427eec388e6afb04fefb03', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cbc0f18581f6a6c3db2da0a7f24ecb7b0b174ea', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d0ef99ea07d114b9f58fbf24a762667f2510f56', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b83a58cb6e320ef2de5383de816944578a57b6eb', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '989f378c5412a2c9c201d47f5573badba2df80c4', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de1786bd4f49bdec8f38c440d61ac48604b65dae', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3f11decc658e3c925fb3bbbf8040d36c70362e3', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4cc870501fbd2105576ee3e64294845a5aa522f', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4945e725428bb1da36a3f56f9fffd37b2bef3b36', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd70fce3fdcd454a440ab388deb9d8e7ad5bd1c93', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '521e8105c6511b46a89616c154d58ebf4d739218', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f2b627353a21ab35c1aa0195a77c142ad52a087', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0b74862c8e1afb2a44212f740c9ad3f581cb54f', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6fa69a1bb4e0bde64480d2f856dde8874a2c908', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18c1fbf0a030946f7d996b5134b434e14a8b9cb6', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2dd1499efbc088886ceaa62828b19eb534f7b530', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c4f258f1fb2854fc5a4d5862b2d866f48b3936b', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b05a34ad79b1c112f3174947a368c01f095e2e3a', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}]",Niklas Schmitz,18703284,,User,,44,,206,63
682434953,Add nondiff rules for one ones zero zeros,"Porting nograd rules for `one`, `ones`, `zero`, `zeros` from Zygote https://github.com/FluxML/Zygote.jl/blob/master/src/lib/array.jl#L11

Follow-up to https://github.com/JuliaDiff/ChainRules.jl/pull/252
",True,465,https://api.github.com/repos/JuliaDiff/ChainRules.jl/pulls/465,https://github.com/JuliaDiff/ChainRules.jl/pull/465,closed,6,1,2,3,5,2,0,0,[],2021-07-02 08:22:06+00:00,2021-07-02 11:29:22+00:00,11236.0,3:07:16,"[{'comment_id': 662875748, 'comment_body': '```suggestion\r\n@non_differentiable one(::Any)\r\n```', 'comment_created': datetime.datetime(2021, 7, 2, 9, 28, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mzgubic', 'type': 'User'}, {'comment_id': 662875828, 'comment_body': '```suggestion\r\n@non_differentiable zero(::Any)\r\n```', 'comment_created': datetime.datetime(2021, 7, 2, 9, 28, 44, tzinfo=datetime.timezone.utc), 'commenter': 'mzgubic', 'type': 'User'}]","[{'commit_sha': 'd44b70649907ebf94f6edee272f11f79e3c4332d', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07f6a5ad60c68ba0fef36d116cdb84505c9ea764', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa3ba9cda09a2fb7e45a372c48118aebeb78c294', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}]",Niklas Schmitz,18703284,,User,,44,,206,63
670660971,(Fix #446) Widen _mulsubtrans!! type signature,Fixes #446,True,447,https://api.github.com/repos/JuliaDiff/ChainRules.jl/pulls/447,https://github.com/JuliaDiff/ChainRules.jl/pull/447,closed,12,5,3,7,7,2,0,0,[],2021-06-15 18:48:34+00:00,2021-06-16 13:34:37+00:00,67563.0,18:46:03,"[{'comment_id': 652113442, 'comment_body': 'Not sure if there are many situations where this could happen, but just to be on the safe side.\n```suggestion\n    Y = (T <: eltype(X)) ? X : similar(X, T)\n```\n', 'comment_created': datetime.datetime(2021, 6, 15, 20, 5, 43, tzinfo=datetime.timezone.utc), 'commenter': 'simeonschaub', 'type': 'User'}, {'comment_id': 652643631, 'comment_body': 'Master is 0.8.9 now, so you will likely need to rebase and change that to 0.8.10', 'comment_created': datetime.datetime(2021, 6, 16, 12, 34, 3, tzinfo=datetime.timezone.utc), 'commenter': 'simeonschaub', 'type': 'User'}]","[{'commit_sha': 'd63088aee2449bf9848e155e25a2c9c0b63899fd', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1337099ed27b99a39ef112cf846092a2f4ea68bd', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3e0132653e57e6f4a674016085459f4502d523e', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c35042ba60ae7e7e5c9b510f377bcc3e9bc2651e', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f6f19817ad5f0d168c97d8f3171adeca7fec70d', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90ab78aad3f9abc24ff62d5746a4de96168a027b', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed8c5ca10fdc1439f9cce87e05d4c533fe3bb87a', 'committer_username': 'niklasschmitz', 'committer_name': 'Niklas Schmitz', 'committer_email': None, 'commit_date': datetime.datetime(2016, 4, 27, 15, 8, 52, tzinfo=datetime.timezone.utc)}]",Niklas Schmitz,18703284,,User,,44,,206,63
555275144,RFC: Rules for FFTs,"This adds minimal support for using FFTW with ForwardDiff. This is done via the very lightweight AbstractFFTs package.

It would be the first mention of `Complex` in the code here. And it uses `Complex{Dual{...}}`, although in fact `Dual{Complex{...}}` would be more convenient, if I am thinking correctly. The latter means the complex pairs are still neighbours, and so an array could be reinterpreted to just `ComplexF64`, passed to FFTW, and then reinterpreted back. But, instead, this makes new arrays for the values & then the partials, processes them, and then re-assembles. 

Quick demonstration:
```julia
julia> x1 = Dual.([1,ℯ,pi], [1,0,0], [0,1,0], [0,0,1]);

julia> Zygote.gradient(x -> sum(abs2, fft(x)), value.(x1))[1]
3-element Vector{ComplexF64}:
                6.0 + 0.0im
 16.309690970754268 + 0.0im
  18.84955592153876 + 0.0im

julia> partials(sum(abs2, fft(x1)))
3-element ForwardDiff.Partials{3, Float64}:
  6.0
 16.309690970754268
 18.84955592153876
 ```
 
 Possibly full of bugs, barely tested, etc. Doesn't try to treat `fft!` and friends. 

 cc @tholdem ",False,495,https://api.github.com/repos/JuliaDiff/ForwardDiff.jl/pulls/495,https://github.com/JuliaDiff/ForwardDiff.jl/pull/495,closed,108,1,5,4,4,6,0,0,[],2021-01-14 22:53:01+00:00,2021-11-13 15:59:09+00:00,26154368.0,"302 days, 17:06:08","[{'comment_id': 649006179, 'comment_body': '```suggestion\r\n    @test value.(f(x1)) == f(value.(x1))\r\n    @test partials.(f(x1), 1) == f(partials.(x1, 1))\r\n```', 'comment_created': datetime.datetime(2021, 6, 10, 9, 16, 39, tzinfo=datetime.timezone.utc), 'commenter': 'niklasschmitz', 'type': 'User'}, {'comment_id': 649028254, 'comment_body': 'Even more ""barely tested"" than intended!', 'comment_created': datetime.datetime(2021, 6, 10, 9, 46, 21, tzinfo=datetime.timezone.utc), 'commenter': 'mcabbott', 'type': 'User'}, {'comment_id': 649176304, 'comment_body': '```suggestion\r\ntest = [""Calculus"", ""DiffTests"", ""FFTW"", ""SparseArrays"", ""Test"", ""InteractiveUtils""]\r\n```', 'comment_created': datetime.datetime(2021, 6, 10, 13, 20, 55, tzinfo=datetime.timezone.utc), 'commenter': 'mcabbott', 'type': 'User'}, {'comment_id': 658724965, 'comment_body': 'This is assuming the `Plan` is complex-valued, but not all of them are.', 'comment_created': datetime.datetime(2021, 6, 25, 12, 27, 55, tzinfo=datetime.timezone.utc), 'commenter': 'dlfivefifty', 'type': 'User'}, {'comment_id': 658725511, 'comment_body': 'Add tests for `rfft` and `FFTW.r2r`', 'comment_created': datetime.datetime(2021, 6, 25, 12, 28, 47, tzinfo=datetime.timezone.utc), 'commenter': 'dlfivefifty', 'type': 'User'}, {'comment_id': 663518450, 'comment_body': ""Indeed. This is at the moment a very rough sketch of how FFT might be supported, but is far from handling everything, and probably full of bugs. \r\n\r\nIf anyone wished to tidy it up they would be most welcome. Whether the maintainers think that this is something this package should do at all, and do in this way, I don't know."", 'comment_created': datetime.datetime(2021, 7, 4, 15, 15, 21, tzinfo=datetime.timezone.utc), 'commenter': 'mcabbott', 'type': 'User'}]","[{'commit_sha': '2c13f22208a9474149e48562c5c056b08567bbca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '90839a9ef4e3a5e66ee60b7248873bda20d15629', 'committer_username': 'mcabbott', 'committer_name': 'Michael Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 6, 15, 18, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad74b9e21178b26b4623c52b3a11c778d98d83a8', 'committer_username': 'mcabbott', 'committer_name': 'Michael Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 6, 15, 18, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9be122c4f366ae92eee6fedade491f1f60af7d55', 'committer_username': 'mcabbott', 'committer_name': 'Michael Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 6, 15, 18, 57, tzinfo=datetime.timezone.utc)}]",Michael Abbott,32575566,,User,,100,,0,134

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
181734238,DFTK.jl,JuliaMolSim/DFTK.jl,Julia,87,424,18,40,1261,101,32,26,"[{'id': 1985512211, 'number': 990, 'closed': datetime.datetime(2024, 7, 24, 19, 26, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 24, 13, 53, 9, tzinfo=datetime.timezone.utc), 'time_taken': 19994.0, 'time_delta': '5:33:14', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 1765324075, 'number': 962, 'closed': datetime.datetime(2024, 3, 11, 10, 10, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 11, 10, 4, 33, tzinfo=datetime.timezone.utc), 'time_taken': 373.0, 'time_delta': '0:06:13', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1116138392, 'number': 779, 'closed': datetime.datetime(2022, 11, 11, 6, 55, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 9, 13, 50, 45, tzinfo=datetime.timezone.utc), 'time_taken': 147870.0, 'time_delta': '1 day, 17:04:30', 'additions': 32, 'deletions': 7, 'state': 'closed'}, {'id': 1027983657, 'number': 709, 'closed': datetime.datetime(2022, 8, 31, 5, 19, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 16, 19, 12, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1246063.0, 'time_delta': '14 days, 10:07:43', 'additions': 75, 'deletions': 32, 'state': 'closed'}, {'id': 1023854949, 'number': 706, 'closed': datetime.datetime(2023, 11, 23, 20, 12, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 11, 13, 19, 47, tzinfo=datetime.timezone.utc), 'time_taken': 40546387.0, 'time_delta': '469 days, 6:53:07', 'additions': 10, 'deletions': 15, 'state': 'closed'}, {'id': 961371050, 'number': 663, 'closed': datetime.datetime(2022, 6, 13, 14, 33, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 8, 8, 53, 31, tzinfo=datetime.timezone.utc), 'time_taken': 452388.0, 'time_delta': '5 days, 5:39:48', 'additions': 52, 'deletions': 76, 'state': 'closed'}, {'id': 951712425, 'number': 659, 'closed': datetime.datetime(2022, 6, 2, 15, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 31, 9, 13, 41, tzinfo=datetime.timezone.utc), 'time_taken': 194479.0, 'time_delta': '2 days, 6:01:19', 'additions': 65, 'deletions': 81, 'state': 'closed'}, {'id': 870817474, 'number': 613, 'closed': datetime.datetime(2022, 3, 3, 19, 54, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 3, 17, 7, 14, tzinfo=datetime.timezone.utc), 'time_taken': 10034.0, 'time_delta': '2:47:14', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 859187644, 'number': 599, 'closed': datetime.datetime(2022, 2, 21, 11, 17, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 21, 8, 23, 8, tzinfo=datetime.timezone.utc), 'time_taken': 10447.0, 'time_delta': '2:54:07', 'additions': 41, 'deletions': 13, 'state': 'closed'}, {'id': 821197298, 'number': 563, 'closed': datetime.datetime(2022, 1, 13, 16, 56, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 13, 16, 55, 49, tzinfo=datetime.timezone.utc), 'time_taken': 17.0, 'time_delta': '0:00:17', 'additions': 969, 'deletions': 27, 'state': 'closed'}, {'id': 789394212, 'number': 548, 'closed': datetime.datetime(2021, 12, 1, 7, 51, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 26, 9, 18, 27, tzinfo=datetime.timezone.utc), 'time_taken': 426756.0, 'time_delta': '4 days, 22:32:36', 'additions': 3, 'deletions': 4, 'state': 'closed'}, {'id': 746539984, 'number': 528, 'closed': datetime.datetime(2021, 10, 10, 15, 27, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 30, 10, 5, 19, tzinfo=datetime.timezone.utc), 'time_taken': 883304.0, 'time_delta': '10 days, 5:21:44', 'additions': 66, 'deletions': 0, 'state': 'closed'}, {'id': 717885412, 'number': 520, 'closed': datetime.datetime(2021, 10, 7, 12, 56, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 23, 14, 22, 20, tzinfo=datetime.timezone.utc), 'time_taken': 3882878.0, 'time_delta': '44 days, 22:34:38', 'additions': 83, 'deletions': 0, 'state': 'closed'}, {'id': 716802852, 'number': 519, 'closed': datetime.datetime(2022, 1, 14, 14, 0, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 20, 14, 58, 11, tzinfo=datetime.timezone.utc), 'time_taken': 12697368.0, 'time_delta': '146 days, 23:02:48', 'additions': 535, 'deletions': 25, 'state': 'closed'}, {'id': 692426553, 'number': 494, 'closed': datetime.datetime(2021, 7, 19, 9, 17, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 9, 15, 2, tzinfo=datetime.timezone.utc), 'time_taken': 134.0, 'time_delta': '0:02:14', 'additions': 10, 'deletions': 3, 'state': 'closed'}, {'id': 691901267, 'number': 488, 'closed': datetime.datetime(2021, 7, 17, 10, 59, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 17, 10, 23, 13, tzinfo=datetime.timezone.utc), 'time_taken': 2172.0, 'time_delta': '0:36:12', 'additions': 5, 'deletions': 6, 'state': 'closed'}, {'id': 685782022, 'number': 476, 'closed': datetime.datetime(2021, 7, 15, 12, 36, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 8, 2, 53, tzinfo=datetime.timezone.utc), 'time_taken': 621198.0, 'time_delta': '7 days, 4:33:18', 'additions': 220, 'deletions': 21, 'state': 'closed'}, {'id': 582319220, 'number': 415, 'closed': datetime.datetime(2021, 3, 2, 10, 51, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 1, 19, 25, 51, tzinfo=datetime.timezone.utc), 'time_taken': 55540.0, 'time_delta': '15:25:40', 'additions': 10, 'deletions': 6, 'state': 'closed'}]"
157899791,ChainRules.jl,JuliaDiff/ChainRules.jl,Julia,87,431,20,67,1202,130,53,37,"[{'id': 874385259, 'number': 597, 'closed': datetime.datetime(2022, 3, 9, 0, 24, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 8, 16, 46, 6, tzinfo=datetime.timezone.utc), 'time_taken': 27528.0, 'time_delta': '7:38:48', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 682434953, 'number': 465, 'closed': datetime.datetime(2021, 7, 2, 11, 29, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 8, 22, 6, tzinfo=datetime.timezone.utc), 'time_taken': 11236.0, 'time_delta': '3:07:16', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 670660971, 'number': 447, 'closed': datetime.datetime(2021, 6, 16, 13, 34, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 18, 48, 34, tzinfo=datetime.timezone.utc), 'time_taken': 67563.0, 'time_delta': '18:46:03', 'additions': 12, 'deletions': 5, 'state': 'closed'}, {'id': 549699499, 'number': 339, 'closed': datetime.datetime(2021, 1, 6, 13, 51, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 6, 0, 1, 26, tzinfo=datetime.timezone.utc), 'time_taken': 49822.0, 'time_delta': '13:50:22', 'additions': 29, 'deletions': 123, 'state': 'closed'}]"
9411959,ForwardDiff.jl,JuliaDiff/ForwardDiff.jl,Julia,141,879,27,77,802,160,29,31,[]
