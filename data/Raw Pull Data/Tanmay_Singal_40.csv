pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
431114200,Added basic auth for admin controller,"I have copy-pasted some code and do not fully understand how this works, but it does work. `AdminController` requires authentication to be able to perform any requests and `ContigController` works without authentication. Tests in `AdminControllerIntegrationTest` are broken because `MockMVC` isn't able to authenticate with the controller. I'm looking into how to do that now. Related issue #15 ",True,19,https://api.github.com/repos/EBIvariation/contig-alias/pulls/19,https://github.com/EBIvariation/contig-alias/pull/19,closed,287,55,9,7,0,9,1,1,[{'name': 'enhancement'}],2020-06-08 12:53:26+00:00,2020-06-24 13:49:03+00:00,1385737.0,"16 days, 0:55:37","[{'comment_id': 439354030, 'comment_body': ""The problem with this approach is that usernames and passwords are hard coded as clear text. Should I try to move them to a separate configuration file that won't be included in the GitHub repository?"", 'comment_created': datetime.datetime(2020, 6, 12, 11, 3, 52, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 440053924, 'comment_body': ""we can do this with maven profiles. I will do the changes for you because it's a bit obscure and it's not documented very well."", 'comment_created': datetime.datetime(2020, 6, 15, 9, 40, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 440097757, 'comment_body': 'I have already moved these to application.properties in a commit following this comment.', 'comment_created': datetime.datetime(2020, 6, 15, 11, 3, 52, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 443524336, 'comment_body': 'Use the same value for realm everywhere. Since there is a constant `REALM` in the `SecurityConfiguration` that can be used here', 'comment_created': datetime.datetime(2020, 6, 22, 12, 32, 21, tzinfo=datetime.timezone.utc), 'commenter': 'andresfsilva', 'type': 'User'}, {'comment_id': 443524826, 'comment_body': ""I think we don't need to override this method, I suggest to delete it"", 'comment_created': datetime.datetime(2020, 6, 22, 12, 33, 20, tzinfo=datetime.timezone.utc), 'commenter': 'andresfsilva', 'type': 'User'}, {'comment_id': 443526924, 'comment_body': 'I think injecting the Bean into this class would be better than instantiating it.\r\n\r\nYou need to declare it and receive it in the constructor\r\n```    \r\nprivate CustomBasicAuthenticationEntryPoint customBasicAuthenticationEntryPoint;\r\n\r\npublic SecurityConfiguration(CustomBasicAuthenticationEntryPoint customBasicAuthenticationEntryPoint) {\r\n        this.customBasicAuthenticationEntryPoint = customBasicAuthenticationEntryPoint;\r\n    }\r\n```\r\nAnd then use it instead of calling the method (that should be deleted)\r\nNote that this change will require the `CustomBasicAuthenticationEntryPoint` class to be annotated with `@Component`\r\n', 'comment_created': datetime.datetime(2020, 6, 22, 12, 37, 10, tzinfo=datetime.timezone.utc), 'commenter': 'andresfsilva', 'type': 'User'}, {'comment_id': 444038298, 'comment_body': ""I get an error when I try to do this\r\n\r\n```\r\nDescription:\r\n\r\nParameter 0 of constructor in com.ebivariation.contigalias.controller.authentication.SecurityConfiguration required a bean of type 'com.ebivariation.contigalias.controller.authentication.CustomBasicAuthenticationEntryPoint' that could not be found.\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.ebivariation.contigalias.controller.authentication.CustomBasicAuthenticationEntryPoint' in your configuration.\r\n\r\n```"", 'comment_created': datetime.datetime(2020, 6, 23, 8, 5, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 444038590, 'comment_body': 'My code:- \r\n\r\n```\r\n\r\n    private final CustomBasicAuthenticationEntryPoint customBasicAuthenticationEntryPoint;\r\n\r\n    @Autowired\r\n    public SecurityConfiguration(CustomBasicAuthenticationEntryPoint customBasicAuthenticationEntryPoint) {\r\n        this.customBasicAuthenticationEntryPoint = customBasicAuthenticationEntryPoint;\r\n    }\r\n\r\n```\r\n\r\nI added @Component to CustomBasicAuthenticationEntryPoint\r\n\r\n```\r\n@Component\r\npublic class CustomBasicAuthenticationEntryPoint extends BasicAuthenticationEntryPoint {\r\n```', 'comment_created': datetime.datetime(2020, 6, 23, 8, 5, 35, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 444904673, 'comment_body': ""the problem was that the tests don't auto scan components as the main code does. a simple `@Import` fixes it."", 'comment_created': datetime.datetime(2020, 6, 24, 13, 45, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}]","[{'commit_sha': '303700342fcda6ccd4430f3a55443dc0eb0f802b', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '975f07b33af314bc1aeb2c8ed53797f70f90bbdf', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f2b6ee26ee6160319b4e274b17a80028e49bd51', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c10fcbd7b37cc21a55eef1fe3d20b040800916dc', 'committer_username': 'jmmut', 'committer_name': 'jmmut', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 20, 16, 2, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18b5579782657daef9d4e882f007139ebb55610e', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20e8069b5d49b9dd7dbe553f21fc0a9e0cfd1c96', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9eeb94fb7f09529ae27313cb66e2dc61b307ee14', 'committer_username': 'jmmut', 'committer_name': 'jmmut', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 20, 16, 2, 7, tzinfo=datetime.timezone.utc)}]",Tanmay Singal,31047659,tanmaysingal@icloud.com,User,,122,,8,7
437534207,Adds pagination to all endpoints,,True,29,https://api.github.com/repos/EBIvariation/contig-alias/pulls/29,https://github.com/EBIvariation/contig-alias/pull/29,closed,397,226,12,24,2,10,1,1,[{'name': 'enhancement'}],2020-06-21 11:49:40+00:00,2020-07-09 19:24:46+00:00,1582506.0,"18 days, 7:35:06","[{'comment_id': 447315532, 'comment_body': 'I would suggest minimising test output, specially when it passes', 'comment_created': datetime.datetime(2020, 6, 29, 23, 26, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 447319053, 'comment_body': ""I know I said we should provide pagination in all endpoints (Controller level), but I don't think we should do that at lower levels (AssemblyService and AssemblyRepository).\r\n\r\nThe only reason to strive for a uniform REST interface is because you don't have autocompletion or any other tool that helps you writing a client (besides docs like swagger). For in-java usages we do have those tools and it's actually clearer to return an Optional than a list that will only have 1 element."", 'comment_created': datetime.datetime(2020, 6, 29, 23, 37, 20, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 447320170, 'comment_body': 'I think we can improve these ""delete"" methods. Think how many queries you are doing to remove a single assembly. Why not this?\r\n```\r\n    public void deleteAssemblyByGenbank(String genbank) {\r\n        repository.deleteByGenbank(genbank);\r\n    }\r\n    public void deleteAssemblyByRefseq(String refseq) {\r\n        repository.deleteByRefseq(refseq);\r\n    }\r\n    public void deleteAssembly(AssemblyEntity entity) {\r\n        repository.delete(entity);\r\n    }\r\n```\r\n', 'comment_created': datetime.datetime(2020, 6, 29, 23, 40, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 447322975, 'comment_body': 'as I say below, I think these are better as Optional', 'comment_created': datetime.datetime(2020, 6, 29, 23, 49, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 447328430, 'comment_body': 'the problem with this pagination approach is that when users do a query like ""/assemblies/taxid/9606"" and receive a list with 10 results, they might not know about the pagination thing and think that\'s the complete result.\r\n\r\nWe have to provide something in the result to signal that it\'s only a page. I\'m not a huge fan of HATEOAS but it seems to be the closest to a standard that we currently have. take a look at one of our endpoints:\r\n- swagger: https://www.ebi.ac.uk/eva/webservices/rest/swagger-ui.html#!/studies/getBrowsableStudiesUsingGET_1\r\n- single page example: https://www.ebi.ac.uk/eva/webservices/rest/v2/studies?species=ecaballus&assembly=20&pageNumber=0&pageSize=20\r\n- several page example: https://www.ebi.ac.uk/eva/webservices/rest/v2/studies?species=hsapiens&assembly=grch37&pageNumber=0&pageSize=20\r\n- code: https://github.com/EBIvariation/eva-ws/blob/c4a5bbf892cbe2aa46c2f21f8f3fb5a4f3ed99b2/eva-server/src/main/java/uk/ac/ebi/eva/server/ws/StudyWSServerV2.java#L85\r\n\r\nThe good thing about it is that it tells you how many pages are there, and also gives you the links to get the next/previous/first/last pages (when it makes sense).', 'comment_created': datetime.datetime(2020, 6, 30, 0, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 448603245, 'comment_body': 'why should this return a list of assemblyEntities?\r\nif this is about paginating the inner chromosome list, maybe we need to stop a bit to do another design iteration about the returned objects. \r\nMaybe it makes more sense to split these responses, like:\r\n```\r\nassemblies/GCA_x:\r\n{\r\n  genbank: ""..."", refseq: ""..."", \r\n  _links: [{chromosomes: ""assemblies/GCA_x/chromosomes""}]\r\n}      // no chromosome list here\r\n\r\nassemblies/GCA_x/chromosomes:\r\n{\r\n  _embedded: [ \r\n    { name: ""chr1"", },\r\n    { name: ""chr2"", },\r\n    ...\r\n  ],\r\n  pageinfo : ...   // pagination fields like page number or size, or page links here.\r\n}\r\n```\r\nwhat do you think about this? we can discuss this further in slack or a call.', 'comment_created': datetime.datetime(2020, 7, 1, 20, 37, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 448615769, 'comment_body': ""here again, I don't understand why we should return a list when querying by accession. This makes sense for searching by taxonomy."", 'comment_created': datetime.datetime(2020, 7, 1, 21, 5, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 448618319, 'comment_body': 'probably this method should not exist. if we are converting an optional into a list we might be doing something wrong.', 'comment_created': datetime.datetime(2020, 7, 1, 21, 11, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 448829588, 'comment_body': 'mmm, ok if we want a uniform REST interface, we might need this method in the controller.', 'comment_created': datetime.datetime(2020, 7, 2, 8, 18, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 451865681, 'comment_body': 'BaseController has static methods and static fields, it would be cleaner to not inherit from it and use static imports from it.', 'comment_created': datetime.datetime(2020, 7, 8, 22, 45, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}]","[{'commit_sha': 'cdd881f633ddeebd8c1ebe0b5068c5ddb9b9b187', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '280e5f28df039f31127aa2ff9dcefe6f70fa682f', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1994dacdf14456a15ada79a2b7e58216931d0422', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdbf8aa4fb3e8a35c4818c0e3f5bb163fb35341f', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f79c56bd0d3bfe9ad49ffe9ce4f12d6a11e6dcde', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3feb30c519ca2c28147b645261f4f7c2fc44245', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c280885719aca7c8002485b1f53658c402f07cd', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e403f420753e9e1756b318ea73463d32af3dc8b', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd09fc13ab6769a8fd31b8662cf2b016a12770084', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '359227dbb06149c6839830edd8976c03b340f6dc', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39857b19cc29b80e02e49d708ccf46d101025229', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f35e9c8e62c401c062161b40121a85ca8596c4d', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ec67c5ed5df7cf6026a9e1f9137719cc7c4f2fe', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3666444b9c6bd47cb18409a837fb062aa6f471a7', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0238c492a6e69bd9c83ea145bfcc98b903fd23b3', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19a792cb5274ea1eb819414fe661ae5d44be1f33', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cb28b8373bc1fd79151b191197f01da37a1cda1', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff38948b66d0dd096c19cc3a523e3602442e15c3', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccc7f498f0a01892df8be90908dbc6b946cd55a8', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea221cab24d1defdbe8747c105270d2672b3c94f', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eff0c2f16c74a671c4ece90fb49b7863381982a7', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c683b422fbc4ccd8dbd8c9a71fec9d0a9531b047', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cc688f798b69e91b3975adc1808308284224e64', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66ba6b94bcfe8f708525779b97d7e7c8f53a3b2a', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}]",Tanmay Singal,31047659,tanmaysingal@icloud.com,User,,122,,8,7
447405492,Add HateOAS to Paginated endpoints,This is a demo implementation of HateOAS on a single endpoint `getAssembliesByTaxid()`.,True,46,https://api.github.com/repos/EBIvariation/contig-alias/pulls/46,https://github.com/EBIvariation/contig-alias/pull/46,closed,309,243,14,16,3,8,1,1,[{'name': 'enhancement'}],2020-07-10 12:14:00+00:00,2020-07-16 15:20:22+00:00,529582.0,"6 days, 3:06:22","[{'comment_id': 453822559, 'comment_body': ""either format it properly, or don't touch it at all. If you know you have another simultaneous PR that changes the parameter anotations, you can just do the rename there and avoid conflicts. \r\n```suggestion\r\n            @RequestParam(required = false) Integer pageNumber,\r\n            @RequestParam(required = false) Integer pageSize) {\r\n```"", 'comment_created': datetime.datetime(2020, 7, 13, 17, 46, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 453823115, 'comment_body': '```suggestion\r\n        if (req.equals(""/"") || req.equals(""/contig-alias"") || req.equals(""/contig-alias/"")\r\n```', 'comment_created': datetime.datetime(2020, 7, 13, 17, 47, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 453828745, 'comment_body': ""wait, I missed this. it looks that we have different understanding on what our paging strategy should be. My point is to provide a uniform interface, so that you can use every endpoint in the same way. However, if you query by an assembly accession and we know it can only possibly return 1 element, we can just ignore the pagination parameters, (or remove them actually, if spring doesn't complain if they are provided). I don't think we should change the service interface from `Optional<>` to `Page<>` either. Only ` return createAppropriateResponseEntity(optionalAssembly, assemblyAssembler);` should stay from the current form, and you can add a method overload that takes an optional and creates a page so that the assembler can build the response."", 'comment_created': datetime.datetime(2020, 7, 13, 17, 56, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 454217356, 'comment_body': 'In my other comment about the paging strategy I referred to this. I think this should return an Optional and not ask for a pageable.', 'comment_created': datetime.datetime(2020, 7, 14, 9, 13, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 454218896, 'comment_body': 'here I understand your concerns about testing but I would rather have a List here. The reason for having a list instead of an Optional is to make tests easier because the controller was doing too many things, right?', 'comment_created': datetime.datetime(2020, 7, 14, 9, 16, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 455657459, 'comment_body': 'Created a new issue for this #52 ', 'comment_created': datetime.datetime(2020, 7, 16, 9, 37, 40, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 455657549, 'comment_body': 'Created a new issue for this #52', 'comment_created': datetime.datetime(2020, 7, 16, 9, 37, 50, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 455657618, 'comment_body': 'Created a new issue for this #52', 'comment_created': datetime.datetime(2020, 7, 16, 9, 37, 56, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}]","[{'commit_sha': '4a5ebc208c5080fbc1d1f20b69e872f8bde701fa', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cad3c909e26efaa6734143872f8585399ccd5564', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6b59d28569b438802510b95806d4ea5798ba803', 'committer_username': 'jmmut', 'committer_name': 'jmmut', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 20, 16, 2, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac46cc16c6cd16690736f39877af391c8bf59124', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e82f7b6f572a525ebf9c26dda790e516aab8703e', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09583ddf11cdf85eec2ad1aab4243786a31a4c28', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18784ff1832101b5a4f041e4fbeeaee96984f421', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff5137f982d5102d548dd7445c2d6d95b44b585e', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b3eccd11de6e9d480c784e5cb77d5b7c7e92a5d', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc77e7de605d937c57e37c1800852cd492870c0d', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56ca5c7c1fbdf3aab89871b51186e4a5d321dc8d', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '905583e716f321d48049a00325b064b708b3c51e', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13102d3505c585b69f0e24357ff4668eadea5f69', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '632edb3db41b2d0321a8aeddb16202aae2f6c8bf', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6969f57670ac10ce34803e54dec0260592b3c437', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '281a8e9c9494ded7c9b82fbe6f23081c84a86d0b', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}]",Tanmay Singal,31047659,tanmaysingal@icloud.com,User,,122,,8,7
417381380,Apache ftp,,True,3,https://api.github.com/repos/EBIvariation/contig-alias/pulls/3,https://github.com/EBIvariation/contig-alias/pull/3,closed,161,0,3,8,0,1,0,0,[],2020-05-13 13:57:06+00:00,2020-05-13 15:49:01+00:00,6715.0,1:51:55,"[{'comment_id': 424462257, 'comment_body': 'Just noticed the ""(opens in new tab)"" but removing it didn\'t affect it', 'comment_created': datetime.datetime(2020, 5, 13, 14, 1, 56, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}]","[{'commit_sha': '3d08c663b932bb685a4f83b6b1c106afb6c32002', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '710a0ae633c3b4d47d168d9c4415ab8b5f2bb864', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0afd83f273295caea9c3e2e6beea872d93860b65', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40ed42e4809e9e2f24c5be9402dc638c12eaa427', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c6861b3f826c4867e1986beefe7cbc9f98ea719', 'committer_username': 'jmmut', 'committer_name': 'jmmut', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 20, 16, 2, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9a608cc6b1efc29a4e0aba34e73fe900e568dff', 'committer_username': 'jmmut', 'committer_name': 'jmmut', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 20, 16, 2, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '633c6b575071f7c16c2cb99a459681f7c91edfe3', 'committer_username': 'jmmut', 'committer_name': 'jmmut', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 20, 16, 2, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20cccf6a3186b6c25252123cd21caa01b1ae7199', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}]",Tanmay Singal,31047659,tanmaysingal@icloud.com,User,,122,,8,7
419437297,NCBI Assembly Reader + Parser,AssemblyReportReader takes an InputStreamReader with an NCBI Assembly Report file and can parse into an AssemblyEntity object containing a List of ChromosomeEntity objects. I have also added a static assembly report at src/test/resources/GCF_000003055.4_Bos_taurus_UMD_3.1_assembly_report.txt to run tests on.,True,7,https://api.github.com/repos/EBIvariation/contig-alias/pulls/7,https://github.com/EBIvariation/contig-alias/pull/7,closed,3775,1,12,11,1,8,0,0,[],2020-05-18 11:25:21+00:00,2020-05-19 15:56:25+00:00,102664.0,"1 day, 4:31:04","[{'comment_id': 427117256, 'comment_body': 'another important field that we will need for sure is ""# RefSeq assembly and GenBank assemblies identical: no""', 'comment_created': datetime.datetime(2020, 5, 19, 8, 21, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 427118067, 'comment_body': '```suggestion\r\n            String sequenceName = line.substring(0, tabIndex);\r\n            chromosomeEntity.setName(sequenceName);\r\n```', 'comment_created': datetime.datetime(2020, 5, 19, 8, 22, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 427121020, 'comment_body': 'instead of all these empty handlings of irrelevant columns, do you know the method String::split? You get an array of columns and then you use the elements you need.', 'comment_created': datetime.datetime(2020, 5, 19, 8, 27, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 427148356, 'comment_body': 'our code style prioritises higher level methods first, and the inner methods later. An example:\r\n\r\n```\r\nA() {\r\n  B();\r\n  D();\r\n}\r\nB() {\r\n  C();\r\n}\r\nC() { }\r\nD() { }\r\n```\r\nso please move getAssemblyEntity before parseReport.', 'comment_created': datetime.datetime(2020, 5, 19, 9, 8, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 427148655, 'comment_body': 'I think the `lines()` method consumes the reader, so if you have an AssemblyReportReader you can either parse the asm report *or* count its lines, and this constraint is not reflected in the class interface.', 'comment_created': datetime.datetime(2020, 5, 19, 9, 8, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 427197119, 'comment_body': 'How can I fix this? Currently this is only used to check if reader has loaded the data. I can just modify the test to use reader.ready() and remove this method entirely.', 'comment_created': datetime.datetime(2020, 5, 19, 10, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 427397002, 'comment_body': 'yes, that sounds good. use ready and remove the method.', 'comment_created': datetime.datetime(2020, 5, 19, 15, 32, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 427397309, 'comment_body': 'also, expand these imports (and any other we have missed).', 'comment_created': datetime.datetime(2020, 5, 19, 15, 32, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}]","[{'commit_sha': '4a7b375f0ec008dcc49b5825c8f515c30e6240fb', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c034ff36c783bf9e09be4e7d778c1755b49526b0', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80625d0e1214ae8f82eb12bb057978c7af09405f', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa8801035321dd78a1bf68b894e3068fcc7aa823', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56777b58d525e9d68aef55f30a106609c987c64f', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f6b74e3babf84f16d3e8ce81e427d4f00529a22', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c38bbf77c1c0daa1901fd16aa1e167d5b8317fef', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16ad32cce2f1d5aa6357c87017b5676dd1db67f5', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ba819d1119131e8e51e647c0039888d5bb5bacc', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00db9997808cc6c7130e4b199f20d9dbd18d5664', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9c7e8f598874edff9e0aebdc5103e332d636b46', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}]",Tanmay Singal,31047659,tanmaysingal@icloud.com,User,,122,,8,7
465140439,Allow proxy address and port for NCBI FTP browser,,True,77,https://api.github.com/repos/EBIvariation/contig-alias/pulls/77,https://github.com/EBIvariation/contig-alias/pull/77,closed,49,4,8,11,1,0,1,1,[{'name': 'enhancement'}],2020-08-09 11:32:07+00:00,2020-08-15 18:09:27+00:00,542240.0,"6 days, 6:37:20",[],"[{'commit_sha': 'bdaa0d2c45f0ac49265b804b43f99be94e6ea327', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25b618add2c1a5791616583a0eb5bf6d6b4050e2', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a9904248a06c852e81a0d6cfb60fe4f83a8a076', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4933d803c8fcdd43bd813ff4cb43f333c0c7896e', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd86bb8f9ff17aaa0fa3ee128536b022e31e1b432', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0333ba4547246170b3c680aff1846c25c80e64e', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c771e977cacc340c4b67bc3be17cb3f4beb7fae3', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a33ecfec3d538de6185b90c4b1b103668c98ac82', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f3d3cc5e2fa6a207748028a734d8f12318ac127', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e006c8df590c5fc655cff58cb4d6e036c6e349da', 'committer_username': 'jmmut', 'committer_name': 'jmmut', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 20, 16, 2, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9822c5d4043083ad56c08ace8ca47b07b15e24ae', 'committer_username': 'jmmut', 'committer_name': 'jmmut', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 20, 16, 2, 7, tzinfo=datetime.timezone.utc)}]",Tanmay Singal,31047659,tanmaysingal@icloud.com,User,,122,,8,7
428642096,Alias Resolution,Alias resolution for queries involving access to a single table at a time. See related #16,True,18,https://api.github.com/repos/EBIvariation/contig-alias/pulls/18,https://github.com/EBIvariation/contig-alias/pull/18,closed,671,135,15,20,0,7,1,1,[{'name': 'enhancement'}],2020-06-05 18:18:23+00:00,2020-06-15 12:58:13+00:00,844790.0,"9 days, 18:39:50","[{'comment_id': 436220337, 'comment_body': ""all this would work but it's too manual. try query by example: https://docs.spring.io/spring-data/data-commons/docs/current/reference/html/#query-by-example\r\n\r\nI think with that we can remove QueryUtils and AliasFilters, and we won't need to inject the entityManager"", 'comment_created': datetime.datetime(2020, 6, 6, 0, 46, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 436650871, 'comment_body': ""taxonomy doesn't uniquely identify an assembly. In other words, there are several assemblies that describe a taxonomy."", 'comment_created': datetime.datetime(2020, 6, 8, 12, 19, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 436913910, 'comment_body': 'tautological tests! :D\r\n\r\neither rename the ""entity"" variable or use ""this->entity"" for the expected parameter.\r\n\r\nOther tests have the same issue.\r\n\r\nalso, I suggest extracting this to a method `void assertEntityEquals(AssemblyEntity expected, AssemblyEntity actual)`. Tests should be refactored and DRY as much as main code.', 'comment_created': datetime.datetime(2020, 6, 8, 18, 38, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 440045349, 'comment_body': ""I think you don't need this import"", 'comment_created': datetime.datetime(2020, 6, 15, 9, 25, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 440049097, 'comment_body': ""this tests are fine as they are now, but for future code, remember you don't need to do the same tests twice (once in the controller integration test, and again in the controller unit tests).\r\n\r\nThe integration tests are meant to test that everything is wired properly and check things at the ends of the processes, like the serialization, the autowiring, etc. Most of the other things can be tested only in the unit tests."", 'comment_created': datetime.datetime(2020, 6, 15, 9, 32, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 440050785, 'comment_body': 'is it possible to return an empty list and an empty optional? do they mean different things? in these cases people usually just return a list.', 'comment_created': datetime.datetime(2020, 6, 15, 9, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 440060414, 'comment_body': 'Removed. I think it got auto imported when I mistyped Optional as Option at some point.', 'comment_created': datetime.datetime(2020, 6, 15, 9, 51, 39, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}]","[{'commit_sha': '34da767665047717567e5b8e6af050b5f89d3cf7', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77714b256bf1cd1a78705612b456eb81f53c7ca7', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efaafee891b35d6bd067f90245eb27af4569f12f', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd08dead3adc5e49c21812d3c474ac914a5f269a5', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '331897e91a2ade7edd1ff321375785a72f3593e3', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b98cf626171d2485d88684aec479bf66c82dbd56', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc296cb53cd1445dc45bb6646a9c52885d0a4dbc', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bf598b09789bbc10ebf4c96addf526b5be9303d', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72cb3cbb387b3ec741c926fcd98d941114955c7e', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fed433f3765741c8a3f240e10a1e87d6468963ba', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2dc5f6ceb4c89390e9836a7c4be396f5894fb047', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6b90d2daa238e929486c51e0b9565fb77074a9d', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2e4736d4215ef62637ab11a4f819e612d8037d8', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bd3ed54817711646ccd769fc7ce3e72292dba5b', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ffced7ad5379326dbbbb8d3c381815f48bba857', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f54fd9181ea9666e1a419cf8ed1b8f31cfa06f6d', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a93ae2ebea8b3525bb38eecbf7d6b6466d1f710', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7463a34512fc848220dd9f457f953208cf7b8e12', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29b2c1a7e1d17b2400ab2150dd04161bae48316f', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d49a0387607e5029aeff6697ded4b37ff3f5bb2', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}]",Tanmay Singal,31047659,tanmaysingal@icloud.com,User,,122,,8,7
444447656,Resolve queries that involve accession both assembly and chromosome tables,,True,41,https://api.github.com/repos/EBIvariation/contig-alias/pulls/41,https://github.com/EBIvariation/contig-alias/pull/41,closed,527,71,10,14,0,8,1,1,[{'name': 'enhancement'}],2020-07-05 19:07:05+00:00,2020-07-14 12:32:02+00:00,753897.0,"8 days, 17:24:57","[{'comment_id': 452923878, 'comment_body': '```suggestion\r\n    @ApiOperation(value = ""Get an assembly using the genbank accession of one of its chromosomes."")\r\n```', 'comment_created': datetime.datetime(2020, 7, 10, 15, 43, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 452924206, 'comment_body': '```suggestion\r\n    @ApiOperation(value = ""Get an assembly using the refseq accession of one of its chromosomes."")\r\n```', 'comment_created': datetime.datetime(2020, 7, 10, 15, 44, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 452924401, 'comment_body': '```suggestion\r\n    @ApiOperation(value = ""Get chromosomes using the genbank accession of its parent assembly."")\r\n```', 'comment_created': datetime.datetime(2020, 7, 10, 15, 44, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 452924465, 'comment_body': '```suggestion\r\n    @ApiOperation(value = ""Get chromosomes using the refseq accession of its parent assembly."")\r\n```', 'comment_created': datetime.datetime(2020, 7, 10, 15, 45, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 452930126, 'comment_body': 'I think this url would be clearer\r\n```suggestion\r\n    @GetMapping(value = ""v1/assemblies/refseq/{refseq}/chromosomes"", produces = ""application/json"")\r\n```\r\nlook at this advice with companies and employees: https://stackoverflow.com/a/26388209/2375586\r\ngeneral REST api design advice: https://www.moesif.com/blog/technical/api-design/REST-API-Design-Best-Practices-for-Sub-and-Nested-Resources/\r\n\r\nI\'ve been also thinking a lot about moving the `/refseq/` part to a query param `?authority=refseq` as suggested in the last refget call, and I think it makes sense, but let\'s do that in another PR.', 'comment_created': datetime.datetime(2020, 7, 10, 15, 55, 3, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 452938656, 'comment_body': ""these tests are basically redundant with the ones in ContigAliasControllerTest.java , we can drop these, and keep the integration tests only for things that can't be tested in the unit tests."", 'comment_created': datetime.datetime(2020, 7, 10, 16, 10, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 454318476, 'comment_body': 'Created new issue #49 ', 'comment_created': datetime.datetime(2020, 7, 14, 12, 27, 15, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 454318674, 'comment_body': 'Created new issue #50 ', 'comment_created': datetime.datetime(2020, 7, 14, 12, 27, 35, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}]","[{'commit_sha': '489761dd1d4c0ad2657fb53ad09d1ef785ba3c94', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a770c18efcd294e738797f9f3a53c2b8b5f3ab88', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d830bb4a97d3d56de644f475732a446f7003288', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2d2db8e255553c4f435f7ce828dfc3ae1e839c0', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f96d0c65aa483c8de80174cba938a9164b952cc', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '029cd49bb7be907ea18153442fb877de58fcca18', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3e9c5235f2198fadc39b44fe337a091960c752f', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd477380c026b142cf17a157b73ea69ce21bfbf0', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68fe8e08dce57047ddd826f1fe9c9028dbafeff6', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfcd0ca9687942dd1d2995c27f8300a2e8e952a1', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d1a60eb131e13fd937a0523baf17e7778087a49', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a9f68e50a618008c85c8f2e80765cff8ae820d3', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c594ef4b77972351f7173ffe42e89b7849ac2a05', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc2b716ea65376ee25c5b2f599c63176c7ee15f4', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}]",Tanmay Singal,31047659,tanmaysingal@icloud.com,User,,122,,8,7
422066554,Persistence,See issue #14 for information,True,13,https://api.github.com/repos/EBIvariation/contig-alias/pulls/13,https://github.com/EBIvariation/contig-alias/pull/13,closed,950,185,22,36,4,49,0,0,[],2020-05-22 17:49:12+00:00,2020-06-04 14:27:08+00:00,1111076.0,"12 days, 20:37:56","[{'comment_id': 430259689, 'comment_body': 'why the weird name? If the only purpose of this method is to return an optional, I think the method naming mechanics allow for that. I strongly suggest reading the spring data repositories docs, specially this section https://docs.spring.io/spring-data/data-commons/docs/current/reference/html/#repositories.limit-query-result', 'comment_created': datetime.datetime(2020, 5, 26, 8, 57, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 430266474, 'comment_body': 'I feels weird having a service, a DAO and a repository; in the sense that what the DAO class does, maybe is not exactly a DAO, and DAOs and repositories are basically the same. However, asking for the DAO interface or however we name it (that has the FTP implementation and might have other future implementations) is a great usage of polymorphism, aligned with what I said about the open-close principle. Good design here :+1:. I know it feels trivial but this is the kind of things that improve the overall stability of the system.', 'comment_created': datetime.datetime(2020, 5, 26, 9, 8, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 430267732, 'comment_body': 'why not letting the exception raise? if it reaches the controller it will send a 500 code, letting the user know that somethings wrong. Otherwise you can not know if the assembly does not exist or if something crashed.', 'comment_created': datetime.datetime(2020, 5, 26, 9, 10, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 430274976, 'comment_body': ""I haven't used hibernate much, but it seems that if you get this exception, you are making a lazy query and expecting the relations (joins) to be made. If this happens, it should probably fail as loud as possible to tell us that we have to change something.\r\nIf you really want to log the message here, you can log and rethrow. "", 'comment_created': datetime.datetime(2020, 5, 26, 9, 22, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 430278672, 'comment_body': ""I don't understand this comment. You can test the controller with a custom DB by providing an AssemblyService bean pre-filled with whatever data you want. The usual thing is to do an inner class Config with a @Bean method that returns the AssemblyService. Either that or an AssemblyService mock."", 'comment_created': datetime.datetime(2020, 5, 26, 9, 28, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 430281361, 'comment_body': ""will this use the dao? if so, this becomes an integration test. We need to have some integration tests, but it's best to minimise them and mark them clearly. To make this a unit test you can provide a custom (or mock) dao, just like I said in the controller tests."", 'comment_created': datetime.datetime(2020, 5, 26, 9, 33, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 430367989, 'comment_body': 'Fixed in commit 62c1ba388571bf66a2e938cf3d36ae7decbcfbc1', 'comment_created': datetime.datetime(2020, 5, 26, 12, 17, 48, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 430374702, 'comment_body': '`findAssemblyEntityByGenbankOrRefseq()` now returns an `Optional`. I was using the `d` notation for `default` methods to differentiate custom methods from the ones implemented by Spring. Changed it to `findAssemblyEntityByAccession()`.', 'comment_created': datetime.datetime(2020, 5, 26, 12, 29, 59, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 430387752, 'comment_body': 'I did some research and got rid of `LazyInitializationException` using FetchType.EAGER. Disabling lazy load turn out to be a problem once each entity has hundreds of scaffolds associated with it.', 'comment_created': datetime.datetime(2020, 5, 26, 12, 52, 6, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 430409092, 'comment_body': 'This is an old comment that I had added when the controller could only get from db and not the server. I have removed it and re-enabled the tests.', 'comment_created': datetime.datetime(2020, 5, 26, 13, 24, 53, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 430515669, 'comment_body': ""I get chromosomes == null when running tests and debugging on my computer as well as on the HTTP request but for some reason when this test is run on GitHub actions, chromosomes is an empty List instead on being null. So I've modified the test and now it passes on GitHub as well."", 'comment_created': datetime.datetime(2020, 5, 26, 15, 44, 38, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 430540232, 'comment_body': '```suggestion\r\n@Repository\r\npublic interface AssemblyRepository extends JpaRepository<AssemblyEntity, Long> {\r\n```', 'comment_created': datetime.datetime(2020, 5, 26, 16, 19, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 430540412, 'comment_body': '```suggestion\r\n@Repository\r\npublic interface ChromosomeRepository extends JpaRepository<ChromosomeEntity, Long> {\r\n```', 'comment_created': datetime.datetime(2020, 5, 26, 16, 19, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 431214440, 'comment_body': 'Fixed. Fetching from server returned null and querying db returned null list. Now you get an empty list both ways.', 'comment_created': datetime.datetime(2020, 5, 27, 15, 7, 3, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 431217472, 'comment_body': ""I'm using a `while` loop instead of an `if` statement because if two requests reach at once, they both might read `cache size < 10` and add an entry leading to cache having more than 10 entries. `While` loop on next run deletes entities till `cache size < 10`. Now of course the same problem can arise if two requests start deleting at the same time but all that will lead to is the cache getting completely emptied."", 'comment_created': datetime.datetime(2020, 5, 27, 15, 11, 9, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 431219977, 'comment_body': 'Earlier unrelated assemblies were getting matched if they both had `refget == null`. Now I am substituing `null` with an ""invalid"" pattern so only genuine entries get found. An alternative to this would be writing a custom query that excludes parameters with null values from getting matched.', 'comment_created': datetime.datetime(2020, 5, 27, 15, 14, 28, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 431969448, 'comment_body': ""for now it's ok to use EAGER to see the data, but when we have some more endpoints, most of the queries will be lazy."", 'comment_created': datetime.datetime(2020, 5, 28, 16, 30, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 431971078, 'comment_body': 'I think PUT fits better, as the user provides the ID and the endpoint is idempotent.', 'comment_created': datetime.datetime(2020, 5, 28, 16, 33, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 431975588, 'comment_body': 'PUT too', 'comment_created': datetime.datetime(2020, 5, 28, 16, 40, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 431976957, 'comment_body': 'why do we want the ""notNull"" filter? isn\'t the id autogenerated, and thus never null?', 'comment_created': datetime.datetime(2020, 5, 28, 16, 43, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 431978591, 'comment_body': 'extract this link removal to a private method to reuse it.', 'comment_created': datetime.datetime(2020, 5, 28, 16, 46, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 431980039, 'comment_body': 'whenever you find yourself adding a comment to describe a subset of the statements of a method ""A"", extract that into another method ""B"" and turn the comment into the name of method ""B"".', 'comment_created': datetime.datetime(2020, 5, 28, 16, 48, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 431981366, 'comment_body': ""instead of making useless queries that won't ever yield any result, add other queries that search only one of the fields, and use here whichever applies."", 'comment_created': datetime.datetime(2020, 5, 28, 16, 50, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 431982359, 'comment_body': 'this comment in github should be a javadoc of the method', 'comment_created': datetime.datetime(2020, 5, 28, 16, 52, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 431985968, 'comment_body': 'I added this assertion as proof of concept, we should check the other fields too.', 'comment_created': datetime.datetime(2020, 5, 28, 16, 58, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 431986153, 'comment_body': 'check the other fields here too.', 'comment_created': datetime.datetime(2020, 5, 28, 16, 58, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 431986601, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 5, 28, 16, 59, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 431988301, 'comment_body': 'this is not common, but I would be fine with it in other cases. In this case, the exception would be clearer if you include the accession that is already present in the DB (or even the whole AssemblyEntity).', 'comment_created': datetime.datetime(2020, 5, 28, 17, 2, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 431990856, 'comment_body': ""as a reminder to myself: check if Optional.empty() ends up being a http-404. If you try to getOrFetch something, and it's not present in any place, a 404 is probably the correct response."", 'comment_created': datetime.datetime(2020, 5, 28, 17, 5, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 431991646, 'comment_body': ""arguably you are implementing here some of the synonym functionality. it's ok if you back this down and support only genbank assembly accessions for now."", 'comment_created': datetime.datetime(2020, 5, 28, 17, 6, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 431992291, 'comment_body': 'either rethrow, or log the exception and rethrow.\r\n\r\nEDIT: oh wait this is a thread executor. I understand that you may not be able to rethrow. The point about logging still applies. I have to study carefully what to do in this case.', 'comment_created': datetime.datetime(2020, 5, 28, 17, 8, 3, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 431995639, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 5, 28, 17, 13, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 432363283, 'comment_body': '![check404](https://user-images.githubusercontent.com/31047659/83243820-149d5400-a1bc-11ea-8659-b85dab320fc2.png)\r\nIt is not a 404 but a 500', 'comment_created': datetime.datetime(2020, 5, 29, 9, 23, 23, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 432366346, 'comment_body': 'There is no other simple way to count items in the db. A simple countById() requies a long as an argument and will give the number of accessions that match that argument. The notNull filter is not required but it is the only one that ensures every row gets counted.', 'comment_created': datetime.datetime(2020, 5, 29, 9, 29, 1, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 432370283, 'comment_body': ""They are kinda idempotent but only because thrown exceptions might not always make it to the http response. So for `fetchAndInsertAssemblyByAccession(@PathVariable String accession)` the user does get an exception but on `fetchAndInsertAssemblyByAccession(@RequestBody Optional<List<String>> accessions` it doesn't because of 2 reasons: \r\n\r\n1. Execution is done by thread executor so exception is not propogated back.\r\n2. It takes time to process a list of accessions and by the time an exception is thrown, the http request has already been responded to with a 200 OK."", 'comment_created': datetime.datetime(2020, 5, 29, 9, 36, 27, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 432437576, 'comment_body': 'I have added a check for both genbank and refseq being null at the same time so there won\'t be any useless queries being made. To scale this back to only being genbank, I will have to change the functionality of a lot of other things. This method will probably get replaced soon anyway or work fine till the day ""##########"" becomes a valid accession.', 'comment_created': datetime.datetime(2020, 5, 29, 12, 3, 48, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 432469587, 'comment_body': 'ok then please change the controller to return 404 if empty.', 'comment_created': datetime.datetime(2020, 5, 29, 13, 6, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 432470194, 'comment_body': '```suggestion\r\n            } else {\r\n                throw new IllegalArgumentException(""List of accessions can not be empty!"");\r\n            }\r\n```', 'comment_created': datetime.datetime(2020, 5, 29, 13, 8, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 432471090, 'comment_body': '```suggestion\r\n            builder.append(""Number of chromosome :\\t"")\r\n```\r\nit doesn\'t make sense to save 4 bytes at the cost of being less understandable.', 'comment_created': datetime.datetime(2020, 5, 29, 13, 9, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 432476342, 'comment_body': '```suggestion\r\n    long count();\r\n```\r\nI tried this and it works.', 'comment_created': datetime.datetime(2020, 5, 29, 13, 18, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 432477841, 'comment_body': 'extract this using stripAssemblyFromChromosomes', 'comment_created': datetime.datetime(2020, 5, 29, 13, 21, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 432478409, 'comment_body': 'does it make sense to put this in stripAssemblyFromChromosomes too?', 'comment_created': datetime.datetime(2020, 5, 29, 13, 22, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 432480663, 'comment_body': ""the comment doesn't need to be there anymore and the number should be extracted to a constant. Replace the number with the constant in the javadoc too."", 'comment_created': datetime.datetime(2020, 5, 29, 13, 25, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 432482927, 'comment_body': ""when you give an error that something is already present, it's more useful to show what was already present (not what you are providing. Or even better, show both."", 'comment_created': datetime.datetime(2020, 5, 29, 13, 29, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 432488264, 'comment_body': 'and add a test in ControllerIntegrationTest to check the return code.', 'comment_created': datetime.datetime(2020, 5, 29, 13, 38, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 433761165, 'comment_body': 'if would be nice to know exactly what query this method is doing. i.e. querying by id, or querying by all fields; what happens if we query with a null id; and what indexes are used for it.', 'comment_created': datetime.datetime(2020, 6, 2, 9, 59, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 435299496, 'comment_body': '`isEntityPresent` is a method in this class that searches for an entity based on genbank or refseq. ID is not used for this query so it doesn’t matter if it is null. ', 'comment_created': datetime.datetime(2020, 6, 4, 14, 25, 1, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}, {'comment_id': 435300996, 'comment_body': 'I mean the repository::delete internal query. like `delete from ... where ???`. what is in the `where ???`', 'comment_created': datetime.datetime(2020, 6, 4, 14, 26, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 435309503, 'comment_body': '`repository` is an instance of `AssemblyRepository`, so `repository::delete` deletes the entity from the `assembly` table. Also any chromosomes associated to the assembly also automatically get deleted from `chromosome` table. ', 'comment_created': datetime.datetime(2020, 6, 4, 14, 37, 31, tzinfo=datetime.timezone.utc), 'commenter': 'singaltanmay', 'type': 'User'}]","[{'commit_sha': '938e063a19fe05db902f067bfb5a2d9fdf42cbc7', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06137267a3cd04ef9487b545fd9857d46f2eaeef', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cccde87da1e70034b679692dcc8b886607a19263', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7033c3163786ab9317a5be9337b8bdb7e0a42533', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa3bf47976c82a9ece7030d9673a2526e174b9a9', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'feb000f27b8f5a8ecfe3a8037b2ed206a02f6a3a', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62c1ba388571bf66a2e938cf3d36ae7decbcfbc1', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df16094d2c9cf25690eba87aaaf3d66dc911e050', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2872794f7532b08c9bae7f832fd9c27874e13ea5', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2845b13ff9a2236991433639f0849ad7fec969e', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e09573cb3622bf8cbe2304d617daea2327938208', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c8e4d5092c9ff191aeeb60beb3374c372887dcb', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9d18d2091c7a19b9f356685e7519cda94080239', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb85745da170694e64ce7921f3d334c1de5dcbf7', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a363979cc8957fb050567b8dbd2ffa6686def63', 'committer_username': 'jmmut', 'committer_name': 'jmmut', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 20, 16, 2, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5547e03123008026c5abeeed14128e924efb01bc', 'committer_username': 'jmmut', 'committer_name': 'jmmut', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 20, 16, 2, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77dc9977d4d98070eb7d7aa752c5a05dec68d96d', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06a263d09c2cc2740757812b6e2bd8d2ef0a971e', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2ead93c6b4452e92accf766e25308118803d9a2', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa5ae20b34091fab2a79c1865633aa02383ce024', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90ce64818ccdbd98e6292eb1d8da2fef0f6b3cee', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd45fdef9aefb6270e799e150173c2e79fe2089ee', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e160bc25101766e92d55dd11854fd624105ad34', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4be1769434553fd4d269f727d223fe7a945c0e5d', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f44f8c64675de89a41d0366ae077821a6077386d', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68101e070fd6785df004223d9e54a90a21e995bb', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f51b54cd2cffafff59853994467514633a9089e', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7725a1da488c583033ef9894ef513eebbae3e0f9', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96b4dcbc91e9bfe9d3f00163003aa1728d4d4599', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3021fbf6ddc8feca348fbc9fb9afde2fbddf1294', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '856aec51c4f5400b7327addf6e8954fce25ec287', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3b71e8c15a6a420b9e654b3a5cc3f1a219849f9', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f58666919b7bedea4363b1ec293cd69e4ccb672', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a17d99e1ca9299a3429285982fb90b862154a96f', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '370f852716afbee84eb8c5f0691d3a8e57e18ddc', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87d89ecc46e449cadd240c0318c7da6b110c40a8', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}]",Tanmay Singal,31047659,tanmaysingal@icloud.com,User,,122,,8,7
448217172,Use a real db (postgres),,True,48,https://api.github.com/repos/EBIvariation/contig-alias/pulls/48,https://github.com/EBIvariation/contig-alias/pull/48,closed,52,5,8,3,0,1,1,1,[{'name': 'enhancement'}],2020-07-13 12:15:35+00:00,2020-07-14 10:11:05+00:00,78930.0,21:55:30,"[{'comment_id': 454221372, 'comment_body': ""It's ok as it is, but have you tried without this annotation? in our other projects we just specify the test application.properties and it just works."", 'comment_created': datetime.datetime(2020, 7, 14, 9, 20, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}]","[{'commit_sha': '3b82a9ba1620adaf7748d4e4095233960aeb179b', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a14ad58024371e95129eef2a057bfd54bd7387a', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05cf94eb7f75ecb79cf7d7899e2eeafd45d9fd38', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}]",Tanmay Singal,31047659,tanmaysingal@icloud.com,User,,122,,8,7
463382779,Added scaffolds,,True,75,https://api.github.com/repos/EBIvariation/contig-alias/pulls/75,https://github.com/EBIvariation/contig-alias/pull/75,closed,1481,374,29,36,0,4,1,1,[{'name': 'enhancement'}],2020-08-05 13:26:07+00:00,2020-09-23 21:56:21+00:00,4264214.0,"49 days, 8:30:14","[{'comment_id': 470724419, 'comment_body': 'if you access columns[9] you need 10 elements.\r\n```suggestion\r\n        if (columns.length >= 10) {\r\n```', 'comment_created': datetime.datetime(2020, 8, 14, 16, 20, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 471813072, 'comment_body': '```suggestion\r\n                <contig-alias.scaffolds-enabled>${optional default=false}</contig-alias.scaffolds-enabled>\r\n```', 'comment_created': datetime.datetime(2020, 8, 17, 22, 39, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 471814348, 'comment_body': '```suggestion\r\n        if (columns.length > 9 && !columns[9].equals(""na"")) {\r\n```', 'comment_created': datetime.datetime(2020, 8, 17, 22, 43, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}, {'comment_id': 471818585, 'comment_body': 'is there any substantial difference between this and ChromosomeService? if not, extract everything into a SequenceService<> and use SequenceService<ScaffoldEntity> here and SequenceService<Chromosome> in ChromosomeService.', 'comment_created': datetime.datetime(2020, 8, 17, 22, 56, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jmmut', 'type': 'User'}]","[{'commit_sha': 'a0f6d2ab092148efe2d642e7228fa4a24359c6a1', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd82e9ea83f72fed81a93acd01d1c64e2c1c94f5', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c13b4d3811f020ca1a47b18c8d8ea8a571c8f31e', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ce0ca1bb9c512dc19b18072c483fd160e3e4702', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8e4ef98b98046f135b5ba2b11cc42203070bae7', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebd2f450a86957af3bcfa2c7233dec34847974f3', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b09926b417e0422bd39feccd12479d914a383c10', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c98b5ed4dc486134a6161e581de1fb4091c1189', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc6b2fa3284443397598805cbd161e08e37d696e', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52f6f8bf9f5f3532d524eedb53a6c2dba8ada996', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d130c36ec263dc941b68729adeaee52b577366d', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1efb985930a0ea275327d154b5ec71a36033e0ba', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c22fa136a00cb566a44516fe5f9f0f9eaa20733e', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce8a92dcb2541b08ebd6f40213b6ecf81ac4097f', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02ca9db9aec7c04aa2fd6ae7235f6345927a9d1f', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '843ceede02357627c1ce38608fec67a57f34ec64', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b23a2c40809e19d198b1b97bb288b2e2b85a8175', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c11c927f5b7874a0ada524704db4f1beeb94f4ec', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8dec8aeaee7b1ceea1ae7a648a38da9ad1271abf', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0807f72d853fd60591ca0fce4a2651610abe82be', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5a2913dc079704a9a0288299beca3eaf7511ddf', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7169593174ebe4566f37184db7c59b075851e858', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b02aa8f1281320907e124d2c541b8c63269c840', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c322bf1673f8dbbe149daab28adefe36abcef581', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c182e53be3a311771d4d34f1efdeaa3bd2c7cfca', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec05c05e6cb7292ef1e2aee8bacd89fe2fa3fb0a', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21c0139ad53f93bc919f7c08bdbded38725d53a4', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bc0c222caac42844ec535565d2dbbee2e7daa04', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de2075ee62deb847916f0bb7defe8328e1727894', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b86face889c039cd820da2c3dac8e43cd4771a0c', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '860457e05d1ecdac60e741174d1fe85d0f0ec90c', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf9abc931cd1fbfedca78e649ca8efa03b663d30', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24574b14648c271a9d2f8d10524a403baa7c8fd5', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '797875debcd9563874c995b74125420f1b65a3cb', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f523599088772c428bed002be01f571a4e844c09', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b68135a49e63081d1be6d561a69b9018250b63a', 'committer_username': 'singaltanmay', 'committer_name': 'Tanmay Singal', 'committer_email': 'tanmaysingal@icloud.com', 'commit_date': datetime.datetime(2017, 8, 15, 19, 45, 43, tzinfo=datetime.timezone.utc)}]",Tanmay Singal,31047659,tanmaysingal@icloud.com,User,,122,,8,7

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
261804761,contig-alias,EBIvariation/contig-alias,Java,12,4,5,6,547,20,4,10,"[{'id': 468470934, 'number': 87, 'closed': datetime.datetime(2020, 8, 17, 22, 24, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 16, 17, 15, 33, tzinfo=datetime.timezone.utc), 'time_taken': 104925.0, 'time_delta': '1 day, 5:08:45', 'additions': 48, 'deletions': 6, 'state': 'closed'}, {'id': 467993591, 'number': 84, 'closed': datetime.datetime(2020, 8, 15, 17, 41, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 14, 13, 46, 7, tzinfo=datetime.timezone.utc), 'time_taken': 100546.0, 'time_delta': '1 day, 3:55:46', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 467936319, 'number': 83, 'closed': datetime.datetime(2020, 8, 21, 14, 52, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 14, 11, 38, 28, tzinfo=datetime.timezone.utc), 'time_taken': 616426.0, 'time_delta': '7 days, 3:13:46', 'additions': 184, 'deletions': 16, 'state': 'closed'}, {'id': 465175782, 'number': 80, 'closed': datetime.datetime(2020, 8, 12, 17, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 9, 16, 55, 21, tzinfo=datetime.timezone.utc), 'time_taken': 260139.0, 'time_delta': '3 days, 0:15:39', 'additions': 99, 'deletions': 63, 'state': 'closed'}, {'id': 465146146, 'number': 79, 'closed': datetime.datetime(2020, 8, 12, 17, 36, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 9, 12, 28, 3, tzinfo=datetime.timezone.utc), 'time_taken': 277679.0, 'time_delta': '3 days, 5:07:59', 'additions': 39, 'deletions': 13, 'state': 'closed'}, {'id': 465141428, 'number': 78, 'closed': datetime.datetime(2020, 8, 24, 11, 6, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 9, 11, 42, 18, tzinfo=datetime.timezone.utc), 'time_taken': 1293825.0, 'time_delta': '14 days, 23:23:45', 'additions': 183, 'deletions': 130, 'state': 'closed'}, {'id': 465140439, 'number': 77, 'closed': datetime.datetime(2020, 8, 15, 18, 9, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 9, 11, 32, 7, tzinfo=datetime.timezone.utc), 'time_taken': 542240.0, 'time_delta': '6 days, 6:37:20', 'additions': 49, 'deletions': 4, 'state': 'closed'}, {'id': 463382779, 'number': 75, 'closed': datetime.datetime(2020, 9, 23, 21, 56, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 5, 13, 26, 7, tzinfo=datetime.timezone.utc), 'time_taken': 4264214.0, 'time_delta': '49 days, 8:30:14', 'additions': 1481, 'deletions': 374, 'state': 'closed'}, {'id': 462339192, 'number': 73, 'closed': datetime.datetime(2020, 8, 4, 12, 11, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 3, 18, 48, 21, tzinfo=datetime.timezone.utc), 'time_taken': 62612.0, 'time_delta': '17:23:32', 'additions': 30, 'deletions': 29, 'state': 'closed'}, {'id': 458403930, 'number': 72, 'closed': datetime.datetime(2020, 8, 7, 0, 11, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 29, 12, 23, 13, tzinfo=datetime.timezone.utc), 'time_taken': 733726.0, 'time_delta': '8 days, 11:48:46', 'additions': 142, 'deletions': 155, 'state': 'closed'}, {'id': 458265796, 'number': 71, 'closed': datetime.datetime(2020, 8, 6, 17, 46, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 29, 8, 2, 38, tzinfo=datetime.timezone.utc), 'time_taken': 726234.0, 'time_delta': '8 days, 9:43:54', 'additions': 187, 'deletions': 58, 'state': 'closed'}, {'id': 456785477, 'number': 63, 'closed': datetime.datetime(2020, 7, 27, 14, 16, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 26, 18, 12, 19, tzinfo=datetime.timezone.utc), 'time_taken': 72230.0, 'time_delta': '20:03:50', 'additions': 163, 'deletions': 289, 'state': 'closed'}, {'id': 455651452, 'number': 61, 'closed': datetime.datetime(2020, 7, 27, 14, 4, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 23, 11, 42, 9, tzinfo=datetime.timezone.utc), 'time_taken': 354133.0, 'time_delta': '4 days, 2:22:13', 'additions': 358, 'deletions': 189, 'state': 'closed'}, {'id': 454990053, 'number': 60, 'closed': datetime.datetime(2020, 7, 27, 13, 41, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 9, 18, 47, tzinfo=datetime.timezone.utc), 'time_taken': 447742.0, 'time_delta': '5 days, 4:22:22', 'additions': 91, 'deletions': 27, 'state': 'closed'}, {'id': 451173869, 'number': 58, 'closed': datetime.datetime(2020, 7, 27, 10, 3, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 17, 14, 44, 41, tzinfo=datetime.timezone.utc), 'time_taken': 847134.0, 'time_delta': '9 days, 19:18:54', 'additions': 536, 'deletions': 298, 'state': 'closed'}, {'id': 450297823, 'number': 55, 'closed': datetime.datetime(2020, 7, 20, 19, 29, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 15, 44, 19, tzinfo=datetime.timezone.utc), 'time_taken': 359114.0, 'time_delta': '4 days, 3:45:14', 'additions': 16, 'deletions': 16, 'state': 'closed'}, {'id': 450109162, 'number': 54, 'closed': datetime.datetime(2020, 7, 21, 10, 59, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 11, 11, 24, tzinfo=datetime.timezone.utc), 'time_taken': 431300.0, 'time_delta': '4 days, 23:48:20', 'additions': 515, 'deletions': 337, 'state': 'closed'}, {'id': 450062413, 'number': 53, 'closed': datetime.datetime(2020, 7, 16, 15, 24, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 9, 56, 30, tzinfo=datetime.timezone.utc), 'time_taken': 19660.0, 'time_delta': '5:27:40', 'additions': 9, 'deletions': 3, 'state': 'closed'}, {'id': 448217172, 'number': 48, 'closed': datetime.datetime(2020, 7, 14, 10, 11, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 12, 15, 35, tzinfo=datetime.timezone.utc), 'time_taken': 78930.0, 'time_delta': '21:55:30', 'additions': 52, 'deletions': 5, 'state': 'closed'}, {'id': 447426433, 'number': 47, 'closed': datetime.datetime(2020, 7, 10, 13, 51, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 10, 13, 0, 17, tzinfo=datetime.timezone.utc), 'time_taken': 3049.0, 'time_delta': '0:50:49', 'additions': 13, 'deletions': 7, 'state': 'closed'}, {'id': 447405492, 'number': 46, 'closed': datetime.datetime(2020, 7, 16, 15, 20, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 10, 12, 14, tzinfo=datetime.timezone.utc), 'time_taken': 529582.0, 'time_delta': '6 days, 3:06:22', 'additions': 309, 'deletions': 243, 'state': 'closed'}, {'id': 444447656, 'number': 41, 'closed': datetime.datetime(2020, 7, 14, 12, 32, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 5, 19, 7, 5, tzinfo=datetime.timezone.utc), 'time_taken': 753897.0, 'time_delta': '8 days, 17:24:57', 'additions': 527, 'deletions': 71, 'state': 'closed'}, {'id': 444254716, 'number': 40, 'closed': datetime.datetime(2020, 7, 14, 14, 28, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 4, 8, 3, 9, tzinfo=datetime.timezone.utc), 'time_taken': 887094.0, 'time_delta': '10 days, 6:24:54', 'additions': 133, 'deletions': 59, 'state': 'closed'}, {'id': 444147168, 'number': 39, 'closed': datetime.datetime(2020, 7, 8, 23, 24, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 3, 17, 31, 16, tzinfo=datetime.timezone.utc), 'time_taken': 453201.0, 'time_delta': '5 days, 5:53:21', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 444016311, 'number': 37, 'closed': datetime.datetime(2020, 7, 8, 23, 23, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 3, 11, 47, 26, tzinfo=datetime.timezone.utc), 'time_taken': 473787.0, 'time_delta': '5 days, 11:36:27', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 442817359, 'number': 34, 'closed': datetime.datetime(2020, 7, 2, 6, 10, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 1, 16, 44, 48, tzinfo=datetime.timezone.utc), 'time_taken': 48323.0, 'time_delta': '13:25:23', 'additions': 116, 'deletions': 101, 'state': 'closed'}, {'id': 440500503, 'number': 32, 'closed': datetime.datetime(2020, 6, 29, 23, 2, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 26, 10, 13, 9, tzinfo=datetime.timezone.utc), 'time_taken': 305371.0, 'time_delta': '3 days, 12:49:31', 'additions': 53, 'deletions': 2, 'state': 'closed'}, {'id': 437534207, 'number': 29, 'closed': datetime.datetime(2020, 7, 9, 19, 24, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 21, 11, 49, 40, tzinfo=datetime.timezone.utc), 'time_taken': 1582506.0, 'time_delta': '18 days, 7:35:06', 'additions': 397, 'deletions': 226, 'state': 'closed'}, {'id': 437436608, 'number': 28, 'closed': datetime.datetime(2020, 6, 25, 13, 28, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 20, 17, 8, 31, tzinfo=datetime.timezone.utc), 'time_taken': 418820.0, 'time_delta': '4 days, 20:20:20', 'additions': 35, 'deletions': 28, 'state': 'closed'}, {'id': 435268819, 'number': 26, 'closed': datetime.datetime(2020, 6, 25, 0, 7, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 16, 14, 50, 7, tzinfo=datetime.timezone.utc), 'time_taken': 724624.0, 'time_delta': '8 days, 9:17:04', 'additions': 121, 'deletions': 25, 'state': 'closed'}, {'id': 431114200, 'number': 19, 'closed': datetime.datetime(2020, 6, 24, 13, 49, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 8, 12, 53, 26, tzinfo=datetime.timezone.utc), 'time_taken': 1385737.0, 'time_delta': '16 days, 0:55:37', 'additions': 287, 'deletions': 55, 'state': 'closed'}, {'id': 428642096, 'number': 18, 'closed': datetime.datetime(2020, 6, 15, 12, 58, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 5, 18, 18, 23, tzinfo=datetime.timezone.utc), 'time_taken': 844790.0, 'time_delta': '9 days, 18:39:50', 'additions': 671, 'deletions': 135, 'state': 'closed'}, {'id': 428551111, 'number': 17, 'closed': datetime.datetime(2020, 6, 5, 16, 55, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 5, 16, 6, 40, tzinfo=datetime.timezone.utc), 'time_taken': 2944.0, 'time_delta': '0:49:04', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 422066554, 'number': 13, 'closed': datetime.datetime(2020, 6, 4, 14, 27, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 22, 17, 49, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1111076.0, 'time_delta': '12 days, 20:37:56', 'additions': 950, 'deletions': 185, 'state': 'closed'}, {'id': 422007074, 'number': 12, 'closed': datetime.datetime(2020, 5, 26, 9, 34, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 22, 16, 10, 21, tzinfo=datetime.timezone.utc), 'time_taken': 321826.0, 'time_delta': '3 days, 17:23:46', 'additions': 192, 'deletions': 1, 'state': 'closed'}, {'id': 420975962, 'number': 11, 'closed': datetime.datetime(2020, 5, 22, 13, 3, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 20, 19, 31, 30, tzinfo=datetime.timezone.utc), 'time_taken': 149512.0, 'time_delta': '1 day, 17:31:52', 'additions': 218, 'deletions': 27, 'state': 'closed'}, {'id': 420954225, 'number': 10, 'closed': datetime.datetime(2020, 5, 21, 14, 42, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 20, 18, 44, 10, tzinfo=datetime.timezone.utc), 'time_taken': 71922.0, 'time_delta': '19:58:42', 'additions': 38, 'deletions': 69, 'state': 'closed'}, {'id': 419437297, 'number': 7, 'closed': datetime.datetime(2020, 5, 19, 15, 56, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 18, 11, 25, 21, tzinfo=datetime.timezone.utc), 'time_taken': 102664.0, 'time_delta': '1 day, 4:31:04', 'additions': 3775, 'deletions': 1, 'state': 'closed'}, {'id': 418526347, 'number': 6, 'closed': datetime.datetime(2020, 5, 19, 15, 27, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 15, 11, 6, 11, tzinfo=datetime.timezone.utc), 'time_taken': 361259.0, 'time_delta': '4 days, 4:20:59', 'additions': 46, 'deletions': 0, 'state': 'closed'}, {'id': 418525617, 'number': 5, 'closed': datetime.datetime(2020, 5, 16, 17, 51, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 15, 11, 4, 30, tzinfo=datetime.timezone.utc), 'time_taken': 110802.0, 'time_delta': '1 day, 6:46:42', 'additions': 416, 'deletions': 75, 'state': 'closed'}, {'id': 417907826, 'number': 4, 'closed': datetime.datetime(2020, 5, 15, 17, 45, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 14, 10, 39, 39, tzinfo=datetime.timezone.utc), 'time_taken': 111954.0, 'time_delta': '1 day, 7:05:54', 'additions': 222, 'deletions': 68, 'state': 'closed'}, {'id': 417381380, 'number': 3, 'closed': datetime.datetime(2020, 5, 13, 15, 49, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 13, 13, 57, 6, tzinfo=datetime.timezone.utc), 'time_taken': 6715.0, 'time_delta': '1:51:55', 'additions': 161, 'deletions': 0, 'state': 'closed'}, {'id': 416034208, 'number': 2, 'closed': datetime.datetime(2020, 5, 12, 10, 8, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 11, 11, 8, 21, tzinfo=datetime.timezone.utc), 'time_taken': 82831.0, 'time_delta': '23:00:31', 'additions': 747, 'deletions': 0, 'state': 'closed'}, {'id': 414188261, 'number': 1, 'closed': datetime.datetime(2020, 5, 6, 16, 6, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 6, 16, 1, 30, tzinfo=datetime.timezone.utc), 'time_taken': 282.0, 'time_delta': '0:04:42', 'additions': 2, 'deletions': 0, 'state': 'closed'}]"
