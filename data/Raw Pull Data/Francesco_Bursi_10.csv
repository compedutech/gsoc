pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
658428086,[bugfix][ui][rastercalculator] fixes #42441 disabling translation rastcalc operator,"## Description

fixes #42441
Commit for disabling translation for operators in raster calculator.
I changed two files, unchecking the option for translation for the operators button of the calculator. In this way the button operators should be the same for every version regardless of the language (e.g. in the spanish version there will be not ""Y"" but ""AND"", the same for ""raiz cuadrada"" and ""sqrt""). 
I made this change in the c++ rastcalc and in the processing (py) one.

![image](https://user-images.githubusercontent.com/79576081/120223419-db217d80-c241-11eb-9a92-af6c867b2324.png)


",True,43469,https://api.github.com/repos/qgis/QGIS/pulls/43469,https://github.com/qgis/QGIS/pull/43469,closed,54,54,2,1,1,0,0,0,[],2021-05-31 16:43:49+00:00,2021-06-02 14:40:46+00:00,165417.0,"1 day, 21:56:57",[],"[{'commit_sha': '3639eb548390dc95df0b9f6fdd26657bd7ed44c0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",,79576081,,User,,9,,5,6
691362928,VirtualRasterDataProvider-for-QgsRasterCalculator-GSoC2021,"## Description

This is PR concerning the feature I'm working on for the GSoC 2021 (https://docs.google.com/document/d/1u8L_L1IJjGCZ3d8Vq8duxHbsHZeyzwqOe3tXa1JcKbs/edit#heading=h.2o0z6qez6zak).

This feature allows the user to use the raster calculator without the need of writing the result on a file. 
It is possible to test the feature via py console or via UI by choosing ""raster calculator"" under the ""Raster"" tab and by checking the first checkbox of the dialog near the label: ""Create on-the-fly raster instead of writing layer to disk"".
By checking this option, some things will happen:

* It will be given the possibility to choose a name for the layer that will be automatically added to the project, if nothing is typed the name is automatically taken from the formula;
* The possibility to choose a folder and the format for the output file will be hidden;
* The ""Add result to project"" checkbox will be checked without any other possibility.

In the next GIF is shown a simple example with the creation of an on-the-fly raster that takes the name from the formula that is used to compute it.

![withExpressionName](https://user-images.githubusercontent.com/79576081/129760313-8b7d5ec2-404a-4bfc-9e66-6f16e59428de.gif)

As I mentioned it is also possible to choose a name, as it is done in the next GIF (firstGenerationRaster).

![withCostumName](https://user-images.githubusercontent.com/79576081/129760737-039e0f5b-af15-42a3-bafe-631e5e4fe2ef.gif)

It is also possible to compute a raster that is created by using this feature, in the next example, starting from a raster created with this feature (the layer is called ""firstGenerationRaster"") I compute (with a trivial formula in this case) a layer that I'm calling ""secondGenerationRaster"".

![seconGeneration](https://user-images.githubusercontent.com/79576081/129761441-0160da19-617f-4be2-900e-7f3279ef2147.gif)

This new feature is a subclass of `QgsRasterDataProvider` and the uri that I used to pass the input information can take 7 different type of parameters:

* crs
* extent
* width
* height,
* formula,
* rasterX:uri
* rasterX:provider
* (other rasters uri and providers if needed)

Where rasterX:uri is uri the of the raster you are using in the formula and rasterX:provider is its provider. If you target multiple rasters you’ll need to add the uri and the provider for every raster (in the test class there are some examples of uri).",True,44195,https://api.github.com/repos/qgis/QGIS/pulls/44195,https://github.com/qgis/QGIS/pull/44195,closed,1237,39,17,131,17,75,3,0,"[{'name': 'Feature'}, {'name': 'Needs Documentation'}, {'name': 'ChangelogHarvested'}]",2021-07-16 10:13:57+00:00,2021-08-17 08:00:17+00:00,2756780.0,"31 days, 21:46:20","[{'comment_id': 673205997, 'comment_body': ""We should have a check whether `ok` is not a null pointer, to make sure we don't get a crashes:\r\n```\r\nif ( ok )\r\n  *ok = false;\r\n```"", 'comment_created': datetime.datetime(2021, 7, 20, 15, 0, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 673206580, 'comment_body': ""I don't see anywhere that we would be setting `ok` to true on success..."", 'comment_created': datetime.datetime(2021, 7, 20, 15, 1, 23, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 673209637, 'comment_body': 'createFromString() returns false if it failed to create CRS, we should check that...', 'comment_created': datetime.datetime(2021, 7, 20, 15, 5, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 673210036, 'comment_body': 'We should make sure that pointValuesList has exactly 4 items before accessing them...', 'comment_created': datetime.datetime(2021, 7, 20, 15, 5, 32, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 673211280, 'comment_body': ""I think there's no point in checking `components.width > std::numeric_limits<int>::max()` because by definition that's the highest number that can be represented as `int`, so the `width` can't get any higher :-)"", 'comment_created': datetime.datetime(2021, 7, 20, 15, 7, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 673213788, 'comment_body': 'maybe rename to plural `layerNames` ?', 'comment_created': datetime.datetime(2021, 7, 20, 15, 9, 44, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 673214614, 'comment_body': 'I guess no need to do early return here... the for-cycle below will be skipped', 'comment_created': datetime.datetime(2021, 7, 20, 15, 10, 38, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 673221875, 'comment_body': ""hehe I was surprised to see `%` used here for concatenation of strings - didn't really know one can use that :-) From Qt help I can see it is using QStringBuilder to delay concatenation to make it more efficient if there are multiple concatenations. As here there's just one concat, I would suggest to use the more standard (and less surprising) `+` operator. Also, it would be easier to read if you used `rLayer.name` instead of `( *i )` on these two lines..."", 'comment_created': datetime.datetime(2021, 7, 20, 15, 19, 8, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 673223768, 'comment_body': 'Instead of having two for-cycles, one could simplify the logic a bit by having just a single for-cycle that would look for query items that end with `:uri` and look up a matching `:provider` query item...', 'comment_created': datetime.datetime(2021, 7, 20, 15, 21, 19, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 673225316, 'comment_body': ""just a detail, you probably don't need to explicitly check `if ( parts.width )` or `if ( ! parts.formula.isNull() )` and simply always add their query items, no matter what their value is..."", 'comment_created': datetime.datetime(2021, 7, 20, 15, 22, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 673225568, 'comment_body': ""let's get rid of commented code"", 'comment_created': datetime.datetime(2021, 7, 20, 15, 23, 12, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 673227122, 'comment_body': 'we should add a note that this method has been added in QGIS 3.22 (and also in the encode method help)', 'comment_created': datetime.datetime(2021, 7, 20, 15, 25, 1, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 673227921, 'comment_body': 'What do you think about renaming this struct to something more related to our provider - e.g. `VirtualRasterParameters` ?', 'comment_created': datetime.datetime(2021, 7, 20, 15, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 673228651, 'comment_body': 'This struct could be renamed to make it clearer that it is related to our virtual raster provider - e.g. `VirtualRasterInputLayers` ?', 'comment_created': datetime.datetime(2021, 7, 20, 15, 26, 46, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 673229130, 'comment_body': 'as there are only providers in this directory, we could drop the ""provider"" suffix and just call it ""virtualraster""', 'comment_created': datetime.datetime(2021, 7, 20, 15, 27, 21, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 673230088, 'comment_body': ""Let's just remove this section"", 'comment_created': datetime.datetime(2021, 7, 20, 15, 28, 18, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 673230459, 'comment_body': ""Also let's remove this section copied from db2 provider"", 'comment_created': datetime.datetime(2021, 7, 20, 15, 28, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 673230886, 'comment_body': 'I would shorten the provider key to just ""virtualraster""', 'comment_created': datetime.datetime(2021, 7, 20, 15, 29, 11, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 673232005, 'comment_body': 'This check is probably not needed, with empty formula we should get a parser error below...', 'comment_created': datetime.datetime(2021, 7, 20, 15, 30, 30, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 675967449, 'comment_body': ""yes, that's becouse I set bool  ok = true; when I declare ok (in qgsvirtualprovider constructor) I'll declare bool ok; in the provider constructor and set it to true at the end of the decode methods, before returning components!"", 'comment_created': datetime.datetime(2021, 7, 24, 8, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Franc-Brs', 'type': 'User'}, {'comment_id': 675969419, 'comment_body': ""Yes, In fact in the provider constructor I check if the crs is valid but it make sense to add a check in the decode method. I'll add it."", 'comment_created': datetime.datetime(2021, 7, 24, 8, 34, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Franc-Brs', 'type': 'User'}, {'comment_id': 675972971, 'comment_body': ""yes, there is no reason to use see `%`. I'll stick with `+` :)\r\nYeah I agree that  `( *i )` is more clear!"", 'comment_created': datetime.datetime(2021, 7, 24, 9, 7, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Franc-Brs', 'type': 'User'}, {'comment_id': 676190550, 'comment_body': ""I think it's more clear, I'll change according to the advice :)"", 'comment_created': datetime.datetime(2021, 7, 25, 19, 19, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Franc-Brs', 'type': 'User'}, {'comment_id': 677273200, 'comment_body': 'ok then, I will let `mCalcNode.reset( QgsRasterCalcNode::parseRasterCalcString( mFormulaString, mLastError ) ) ` and the following check doing all the work :)', 'comment_created': datetime.datetime(2021, 7, 27, 9, 19, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Franc-Brs', 'type': 'User'}, {'comment_id': 680769688, 'comment_body': 'This code is to remove the double quotes, right? I think the syntax of expressions allows raster references also without quotes, so you should probably check first if the quotes are present before removing them...', 'comment_created': datetime.datetime(2021, 8, 2, 8, 19, 49, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 680769886, 'comment_body': 'this include for multi-hash is probably not needed anymore', 'comment_created': datetime.datetime(2021, 8, 2, 8, 20, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 680770566, 'comment_body': 'please remove the SIP_FACTORY annotation - this is used when we return a pointer to an object and its ownership is passed to the caller.', 'comment_created': datetime.datetime(2021, 8, 2, 8, 21, 13, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 680770998, 'comment_body': ""let's remove commented code"", 'comment_created': datetime.datetime(2021, 8, 2, 8, 21, 47, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 680771360, 'comment_body': 'rather than `str == QString( """" )` it is better to do `str.isEmpty()` as this removes creation of a temporary QString', 'comment_created': datetime.datetime(2021, 8, 2, 8, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 680771460, 'comment_body': 'remove commented code', 'comment_created': datetime.datetime(2021, 8, 2, 8, 22, 30, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 680771554, 'comment_body': 'commented code', 'comment_created': datetime.datetime(2021, 8, 2, 8, 22, 40, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 680772366, 'comment_body': ""When adding docs for functions, let's use `//!` or `/**  .... */` so that it is understood by Doxygen"", 'comment_created': datetime.datetime(2021, 8, 2, 8, 23, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 680775316, 'comment_body': ""My preference would be that instead of modifying `query` based on `decodedVirtualParams`, let's just modify URIs inside `decodedVirtualParams.rInputLayers` and then call `QgsRasterDataProvider::encodeVirtualRasterProviderUri()` to get updated URI - this should be more robust and keeps the details of URI encoding in one place"", 'comment_created': datetime.datetime(2021, 8, 2, 8, 28, 20, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 680775503, 'comment_body': 'delete commented code', 'comment_created': datetime.datetime(2021, 8, 2, 8, 28, 41, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 680776925, 'comment_body': 'As mentioned earlier, also here - I think the raster references can be unquoted. Maybe it would be good to add another function to QgsRasterCalcNode to return ""clean"" version of raster reference without quotes so that the code is not spread in multiple places', 'comment_created': datetime.datetime(2021, 8, 2, 8, 30, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 680779723, 'comment_body': ""let's switch from `%` to `+` here and also in few places below"", 'comment_created': datetime.datetime(2021, 8, 2, 8, 34, 44, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 680779998, 'comment_body': 'by the way, this can be replaced by `qDeleteAll( mRasterLayers );`', 'comment_created': datetime.datetime(2021, 8, 2, 8, 35, 11, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 680781089, 'comment_body': 'You could actually remove this method if it does not change behavior of the original method in the base class', 'comment_created': datetime.datetime(2021, 8, 2, 8, 36, 47, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 681523149, 'comment_body': 'Ok, I added the check for the moment. Thank you :+1: ', 'comment_created': datetime.datetime(2021, 8, 3, 7, 53, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Franc-Brs', 'type': 'User'}, {'comment_id': 681626074, 'comment_body': 'Ok, thanks for the advice, in fact there are some part that can be improved. I added a method that should return a clean version of the the raster references and I used it in the above method and in the constructor of my provider, thank you', 'comment_created': datetime.datetime(2021, 8, 3, 10, 14, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Franc-Brs', 'type': 'User'}, {'comment_id': 681657713, 'comment_body': 'Ok, I added the change in the last commit (I will delete the commented code, sorry)', 'comment_created': datetime.datetime(2021, 8, 3, 11, 5, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Franc-Brs', 'type': 'User'}, {'comment_id': 683448535, 'comment_body': 'can you please improve , for example ""Returns a list of raster layer names that are referenced in the formula"" or something like that.', 'comment_created': datetime.datetime(2021, 8, 5, 13, 23, 34, tzinfo=datetime.timezone.utc), 'commenter': 'PeterPetrik', 'type': 'User'}, {'comment_id': 683449428, 'comment_body': 'Returns a list of raster layer names that are refernenced without quotation marks', 'comment_created': datetime.datetime(2021, 8, 5, 13, 24, 33, tzinfo=datetime.timezone.utc), 'commenter': 'PeterPetrik', 'type': 'User'}, {'comment_id': 683451262, 'comment_body': 'not possible to call setOutputToVirtual() here?', 'comment_created': datetime.datetime(2021, 8, 5, 13, 26, 50, tzinfo=datetime.timezone.utc), 'commenter': 'PeterPetrik', 'type': 'User'}, {'comment_id': 683451494, 'comment_body': 'Disables', 'comment_created': datetime.datetime(2021, 8, 5, 13, 27, 10, tzinfo=datetime.timezone.utc), 'commenter': 'PeterPetrik', 'type': 'User'}, {'comment_id': 683453833, 'comment_body': 'Are the errors here (whole file) something we should show to the user (in the log)? or they are strictly development/developer ? ', 'comment_created': datetime.datetime(2021, 8, 5, 13, 29, 46, tzinfo=datetime.timezone.utc), 'commenter': 'PeterPetrik', 'type': 'User'}, {'comment_id': 683454273, 'comment_body': 'can you document here when this happens?', 'comment_created': datetime.datetime(2021, 8, 5, 13, 30, 14, tzinfo=datetime.timezone.utc), 'commenter': 'PeterPetrik', 'type': 'User'}, {'comment_id': 683454319, 'comment_body': 'can you document here when this happens?', 'comment_created': datetime.datetime(2021, 8, 5, 13, 30, 18, tzinfo=datetime.timezone.utc), 'commenter': 'PeterPetrik', 'type': 'User'}, {'comment_id': 683454782, 'comment_body': 'Struct that stores ..', 'comment_created': datetime.datetime(2021, 8, 5, 13, 30, 53, tzinfo=datetime.timezone.utc), 'commenter': 'PeterPetrik', 'type': 'User'}, {'comment_id': 683455199, 'comment_body': 'remove commented out code', 'comment_created': datetime.datetime(2021, 8, 5, 13, 31, 22, tzinfo=datetime.timezone.utc), 'commenter': 'PeterPetrik', 'type': 'User'}, {'comment_id': 683455337, 'comment_body': 'remove', 'comment_created': datetime.datetime(2021, 8, 5, 13, 31, 30, tzinfo=datetime.timezone.utc), 'commenter': 'PeterPetrik', 'type': 'User'}, {'comment_id': 683455643, 'comment_body': 'remove', 'comment_created': datetime.datetime(2021, 8, 5, 13, 31, 55, tzinfo=datetime.timezone.utc), 'commenter': 'PeterPetrik', 'type': 'User'}, {'comment_id': 683455903, 'comment_body': 'invalid email', 'comment_created': datetime.datetime(2021, 8, 5, 13, 32, 15, tzinfo=datetime.timezone.utc), 'commenter': 'PeterPetrik', 'type': 'User'}, {'comment_id': 683456141, 'comment_body': 'if ( !ok )', 'comment_created': datetime.datetime(2021, 8, 5, 13, 32, 32, tzinfo=datetime.timezone.utc), 'commenter': 'PeterPetrik', 'type': 'User'}, {'comment_id': 683456580, 'comment_body': '???', 'comment_created': datetime.datetime(2021, 8, 5, 13, 33, 4, tzinfo=datetime.timezone.utc), 'commenter': 'PeterPetrik', 'type': 'User'}, {'comment_id': 683457476, 'comment_body': 'would be nice to have some more extended doc here for developers. what is virtual raster provider, how it is used etc..', 'comment_created': datetime.datetime(2021, 8, 5, 13, 34, 7, tzinfo=datetime.timezone.utc), 'commenter': 'PeterPetrik', 'type': 'User'}, {'comment_id': 683457702, 'comment_body': 'add default values', 'comment_created': datetime.datetime(2021, 8, 5, 13, 34, 21, tzinfo=datetime.timezone.utc), 'commenter': 'PeterPetrik', 'type': 'User'}, {'comment_id': 683497108, 'comment_body': ""I should've delete it, it's from the original qgsrastercalculator class"", 'comment_created': datetime.datetime(2021, 8, 5, 14, 18, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Franc-Brs', 'type': 'User'}, {'comment_id': 683552470, 'comment_body': 'Yes, it checks if the uri has or not a first element of the derived `QUrlQuery query` that contains `:` such as `dem:uri` (but in this case also `dem:provider`).\r\nIn fact the code at the begininng was different in this part so I think that the second check (the one you asked in the next comment) is enough.', 'comment_created': datetime.datetime(2021, 8, 5, 15, 17, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Franc-Brs', 'type': 'User'}, {'comment_id': 683556692, 'comment_body': 'Yes, maybe with the above answer this one is not that useful but, as the above check, this check search for an item of the `QUrlQuery query` that ends with `:uri` (the uri as I mentioned in the description, is something like:\r\n\r\n`""?crs=EPSG:32633&extent=781662.375,3339523.125,793062.375,3350923.125&width=200&height=200&formula=\\""landsat@1\\"" + \\""landsat@2\\""&landsat:uri=/home/franc/dev/clean/QGIS/tests/testdata/landsat.tif&landsat:provider=gdal""`\r\n\r\nI think I should keep only this check and delete the one addressed in the previous comment (line 731)', 'comment_created': datetime.datetime(2021, 8, 5, 15, 22, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Franc-Brs', 'type': 'User'}, {'comment_id': 683568237, 'comment_body': 'In my opinion they can be useful also for the users (is someone calls the provider form py console and use a uri without some of the needed components)..', 'comment_created': datetime.datetime(2021, 8, 5, 15, 35, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Franc-Brs', 'type': 'User'}, {'comment_id': 683602449, 'comment_body': 'yes it is. thank you :)', 'comment_created': datetime.datetime(2021, 8, 5, 16, 18, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Franc-Brs', 'type': 'User'}, {'comment_id': 683967965, 'comment_body': 'another typo', 'comment_created': datetime.datetime(2021, 8, 6, 5, 58, 20, tzinfo=datetime.timezone.utc), 'commenter': 'PeterPetrik', 'type': 'User'}, {'comment_id': 683991754, 'comment_body': ""it seems that I'm not able to write my name... sorry for that."", 'comment_created': datetime.datetime(2021, 8, 6, 6, 53, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Franc-Brs', 'type': 'User'}, {'comment_id': 685042726, 'comment_body': 'let\'s modify this function to be non-static and use ""this"" object to return its raster references rather than taking an argument:\r\n```c++\r\nQStringList QgsRasterCalcNode::clearRasterReferences()\r\n```', 'comment_created': datetime.datetime(2021, 8, 9, 9, 29, 36, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 685043420, 'comment_body': ""Also let's modify this function to just be called as `node->referencedLayerNames()`"", 'comment_created': datetime.datetime(2021, 8, 9, 9, 30, 27, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 685047916, 'comment_body': 'it looks like this object is leaking - best to wrap it in unique_ptr', 'comment_created': datetime.datetime(2021, 8, 9, 9, 37, 44, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 685050377, 'comment_body': ""instead of qDebugs, let's add checks for the expected values of `name` and `uri` as well."", 'comment_created': datetime.datetime(2021, 8, 9, 9, 41, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 685051622, 'comment_body': ""let's modify this test to have automatic testing: create `QgsRasterDataProvider::VirtualRasterParameters` struct and manually populate its values (`params.width = 600;` and so on), then call encodeVirtualRasterProviderUri() and check the returned URI against expected string."", 'comment_created': datetime.datetime(2021, 8, 9, 9, 43, 41, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 685053185, 'comment_body': ""with this if/else approach I think we are not actually auto-testing things - let's replace it by just something like this:\r\n```c++\r\n    QVERIFY( !layer->isValid() );\r\n```"", 'comment_created': datetime.datetime(2021, 8, 9, 9, 46, 14, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 685054136, 'comment_body': 'Also here, make sure to check test outputs against expected values using QVERIFY / QCOMPARE', 'comment_created': datetime.datetime(2021, 8, 9, 9, 47, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 685489452, 'comment_body': 'Ok, I understand it. \r\nat this line I should avoid the creation of a qgsrastercalcnode object _that I\'m avoiding right now since the method is static and I call it on a string)(https://github.com/qgis/QGIS/blob/d5f14cb8887cba0fa8525860f5e7ad92f7031f01/src/app/qgisapp.cpp#L6578)\r\nand change the check where I use the output of the ""ex-static"" method? \r\n\r\nThis check https://github.com/qgis/QGIS/blob/d5f14cb8887cba0fa8525860f5e7ad92f7031f01/src/app/qgisapp.cpp#L6584', 'comment_created': datetime.datetime(2021, 8, 9, 20, 12, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Franc-Brs', 'type': 'User'}, {'comment_id': 686645753, 'comment_body': ""Let's remove checking with uniqueRasterUriTmp - it does not seem useful"", 'comment_created': datetime.datetime(2021, 8, 11, 9, 9, 10, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 686647115, 'comment_body': 'change from publicSource() to source()', 'comment_created': datetime.datetime(2021, 8, 11, 9, 10, 55, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 687901236, 'comment_body': 'Better to check that calcNodeApp is not null before using it', 'comment_created': datetime.datetime(2021, 8, 12, 16, 26, 48, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}]","[{'commit_sha': 'b1d929809e3239e371124b361badad546df3d0e5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '62f09c9b4231b6ef902a887e2733ca1f07a20ea7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '584f7c5cc8c8d225cee46d8e6cb185acc200e98d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9d18123f1750645ee349e2634c29ee7942c7341d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e2e74da14415ef7bd6762cb6991beb0b56a140ae', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '20a795521a982368f6378a06a34069bca52fadfe', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ccd4fc59952578bf8249fe32f915cb9cc20d770d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '71561f6e047be9dd2f7b68fb0f38b22a645ed35f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e7a6448e1cf2dc6f011faef7e185b715c2289ef4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '12ac880783a78be54e98b5421ae1a9375f3a8874', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8dd3ecfa3f3c18d92f5ae897fed91da0ea3a18f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '467b7043c82f46012df4008378853ed30da408b3', 'committer_username': 'Franc-Brs', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 24, 10, 36, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b1e4ed461844d480140560348568254cca4dbc7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4be4c4afecbc961fa877180118c64594039e6fbb', 'committer_username': 'Franc-Brs', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 24, 10, 36, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ac8c0a530ee14e1b164bd43fcd485f691b8fdb9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e65ca19dce19367065225c82a109b9aba77e5952', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5eb0294c58bdc19c1207fb999a950ad21ad55b51', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1f617655b946437c724be1bc35ba40cc71d2feff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '790a47fa8c7b0607c13a65d748ff80e0c327eaa4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5aeb4da24521849e317105c481e75b55b2d34a47', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e54dd3ea8f0c4189dd7217a08dde3bf3e86fa064', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '056f51917d81978750b919ab09ed1266e10e19fa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '427fc6a504965482782480f1c22167e47e980009', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79d9d2df4211911d224fc86b7258a0def0e17005', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40c42e820dc9beb9bb48b709691832d6b60970e5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '893864395a722d8526952131a8ee56a3375dd119', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fed2406ac310cd2e2035d16e9de71dbaf22d2ada', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fa6a8436b333a807474eb48508eaaa0ce43f6476', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd4b142c9a5051d69951dada467ed9b7a75127094', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9723c43972e3776884e5ca7cffe0db8b28f96a7e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '43d61dac0aa619acf80781c74c1c4c6d0abac4d5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '38c5d0300c9da35b8f9aa992b7d83a07c251bc84', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4a8c793b3316c9a15449dbb4efa847bba9b13a42', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '61938ec0677b872a42603638623d1c167d77a0ce', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '29d46bee6b5a3af3e06fc7031b76f06bdd08826a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ff762556647d707d419bdd2286a4bf6be7eb1567', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e71dd8e6e16b78a6c37df6ce7377c064febe0ac1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fbac91138c692765c166bebdfdb00f0a362278f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '741cef0d863a9a99a31107b254d16bb233822907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'dc10d2f4334e01129d739561646077db2e650546', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4270dd08cf826fad46bd2afb4bfa1b5044823769', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'da9a60e7d3cb82aa7143e6e0f19f5bfe31226b51', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '54080bdf8ff7f16d56c91218e856035c58e636b7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f9feed69e21e2ed92d067c217d64d7cc972ea385', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a20cb3ca85c0eafd4048101dae29f795402e319f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc68fa6a18475e449accbf58545a5c9e63b17c63', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ac5d7b905678cc856571089818779f3d327df2b2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4be2ed867fedda73d35d9011b20540f38da670ea', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bab6ee622e57c8b84c9a9bbf94c667b61c8a214d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4055455070c7f82fa1166addc9d8170eace16665', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '60e781618eeff7ea13bf2757031ee3e777d33497', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '87d1680570b7549bd28415e58000673a08e17d3c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f5a03f9fdc861e25cabb6dd42900686324a05a2d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c429acd6ce31358b23e6bb462d5aab064c169df2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73a464ae54831e4a59719767e200419c80c996b2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '170488a85c5e90e8d64c67b03959f7cbcf7f9ada', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0bf1d595602d7d91d4f8fa4b952645a5ea86b634', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c27bf9919b77a7119f5d327bedddedae882b1f2f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4261b517a61077072d1c32b8e3f69cef8ff13145', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3b87080c00f6b9c83cb3e444c66344e66923bf21', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fcbc3e5c666fb2d03e5f1e77b4d26522aaeffb16', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9e2b92a6cf43e0c878194c54e0bea8f4033e946', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9937c1ade6499e11e233e8115ed81ae2a757eea7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5372dc0a9572d7363d789fda61fe0aa39ad04f22', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4aa36796a14de3ffd214d4c783582e70727e89c2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a2b470f5e87137c3bc84fbce44470b3cc1d4e408', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2505319d108dd02c2a6e3f46d05f339a16cc6a5a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '29b88a6d201d0ffa668cd8806c8bcf5247097770', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '427699d62d6ed972fc66a934e2c226c17eae267b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a7e18b1b390d2bfdb36084174d5da7f767b9cacd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4702c86b36be75f7f0847ca98d9ec1503d199f4d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc898a3ea36a371eb767618be35c62a1e9f4b874', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '31e55e5986c86efaa2f191880f9249c3f95ffde9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a6d87724170623e52c2023bd1cc81659e7f2a143', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c9b163a5bfa3c34fd02c8c9484dabb2f73b76339', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '452a6ad1e95e4a5ae9fdeb61f9f44af910b15b20', 'committer_username': 'Franc-Brs', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 24, 10, 36, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca9b7e2c85fcbdc92fc6db7870399a6693e4a7f8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '15eb7fd5e8888ad8a92118c735d916e99fe49963', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1f1bf339b4a0e57f26673f96b6f30103933c8814', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '702b11f7aff1d483d844a6c9e652bdc4bca69638', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c5f77f0c010bbc89a2a0a45317b4740803685a83', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a01b3e6a4e647a455f1386ee5f32f49a6c75a279', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7e189efac6c519fbc4439f411813c48e582ecc24', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cd4da1054f0adfc8c6a8dfdeef96b57338730105', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79cf3e8948c4da8f4c7a4fa646574aac63bd20bb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f70efd893fca552412393ec2190a6af62cc1f2e4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ce1474c9ad1f4566e5e5badd1e0bb03dd5c0f906', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c9382dfbce3329e50947da6749485508c4f04f9d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9094fe42fa16e1790cf86bcf1f4259bbf8a38bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f6d86102c08cbe776bbbccc515d1836a2348a88b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '197df98b46c01768dd308e70dff686c350561ba7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8d095b5ad5d4c9371b526ab184bc1c6574ebcbc4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e913c2d6aa2fcc6e810aca2281b700ad6288a48b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1a1ca9ab470d7b276b55bc8ff8e5c93712553d8c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5a384d19c391c9c3b1bb7840c94d21bf39bbd82b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4539b0388ecc971611c7762b272ab4afdbf16d04', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd3c469257fc65275de96c5a639e875483fc60168', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd845b97951352e95e999f9c8f6558bc957fee496', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '550655fd457e5761282cf30906fc57620c3098dd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '303310f565f23e5d78ead8bc2a36e3f65e802c86', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'dd1100ff502ec1b4eed695d3737f3530813e21ac', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '69d02e10c2a7b8d329802d2dc4c7d13245aa3dfd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7338fddf8ce5f6a9e88fef7260ea2187230392fc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd2093cd695f443f4cbcb49f0113e0548a3ff9f22', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46de87fde7df4e9183e7d8f74641e3f68bc3f82e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4a5e4a3c82b67bee68f0fa2bcc7d8e9003805686', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd78d4f307b615dc81fa85de1d5b594d140d5b3eb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0b49dff20857443e62c105fa48d35c65d4b847fe', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79ddf6bf89a542e3b7d1b2a6c3adc9697a8bc0b2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3834d9418af2bb606442789fb31f4cfbf19cd582', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '872802852a4568348019cc936449e7c6e8b0b433', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1a49f685a5e3b797c489c7d0f4010add732bba17', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1ff35bdc633d595005ca8768c73b00310d2d0f8e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '92a638cb17734d7e6b65c6cdc1e9ee7f26e0bbb1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '412501938bf4e399c9ee8e403bb5d1f1a667eff3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ac3ab500a915d736537a7aed8dadf8609f6a9e6a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '796fc10727305d1fd70b99b37fb7724a04a997dd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c460376b8170e5d5446beacfcc49f294da1b7234', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'caab01aa96f093f8eb8ffac1f38be0bae75235b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e70313f2f303ce2b6f1730d622162ef16906e1cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '00d37764c2cb638b33ccb91605d6fb9adc122d8f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e4ed324a9ee28acf82a71d561b1b6d87752028a2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8080d5cc7f0d76ae25a1de0d885ca0af79e89fc0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '69dd195dccdbd55be14b51ef79b4fa903d025567', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd5f14cb8887cba0fa8525860f5e7ad92f7031f01', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2cb551916676f285e52415a327d604077838fb51', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5674436a1da9a078caab55ae4325d021e5ce8772', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c2eed2698991090a13488bdc9a82f09d3004130', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'db5cbc0de2ba6039b0b075e9fb07b1ece8445b6d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0704bbb13bf232f17bcc56e15591967437088211', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '147708a79ec8d9c6e0a252d6e79962af09819aec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",,79576081,,User,,9,,5,6
699632147,start to work on new branch for conditional statement,"## Description

[Replace this with some text explaining the rationale and details about this pull request]

<!--
  BEFORE HITTING SUBMIT -- Please BUILD AND TEST your changes thoroughly. This is YOUR responsibility! Do NOT rely on the QGIS code maintainers to do this for you!!

  IMPORTANT NOTES FOR FIRST TIME CONTRIBUTORS
  ===========================================

  Congratulations, you are about to make a pull request to QGIS! To make this as easy and pleasurable for everyone, please take the time to read these lines before opening the pull request.

  Include a few sentences describing the overall goals for this pull request (PR). If applicable also add screenshots or - even better - screencasts.
  Include both: *what* you changed and *why* you changed it.

  If this is a pull request that adds new functionality which needs documentation, give an especially detailed explanation.
  In this case, start with a short abstract and then write some text that can be copied 1:1 to the documentation in the best case.

  Also mention if you think this PR needs to be backported. And list relevant or fixed issues.

------------------------

  Reviewing is a process done by project maintainers, mostly on a volunteer basis. We try to keep the overhead as small as possible and appreciate if you help us to do so by checking the following list.
  Feel free to ask in a comment if you have troubles with any of them.

  - Commit messages are descriptive and explain the rationale for changes.

  - Commits which fix bugs include `Fixes #11111` at the bottom of the commit message. If this is your first pull request and you forgot to do this, write the same statement into this text field with the pull request description.

  - New unit tests have been added for relevant changes

  - You have run the `scripts/prepare_commit.sh` script (https://github.com/qgis/QGIS/blob/master/.github/CONTRIBUTING.md#contributing-to-qgis) before each commit.
    If you didn't do this, you can also run `./scripts/astyle_all.sh` from your source folder.

  - You have read the QGIS Coding Standards (https://docs.qgis.org/testing/en/docs/developers_guide/codingstandards.html) and this PR complies with them
-->
",False,4,https://api.github.com/repos/Franc-Brs/QGIS/pulls/4,https://github.com/Franc-Brs/QGIS/pull/4,open,291,3,9,25,0,9,0,0,[],2021-07-29 15:27:20+00:00,,0.0,,"[{'comment_id': 694198447, 'comment_body': ""let's rename this to a full name - `tFunction` - this is preferred in qgis code"", 'comment_created': datetime.datetime(2021, 8, 23, 18, 10, 40, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 694198619, 'comment_body': 'we can keep the trailing comma :-)', 'comment_created': datetime.datetime(2021, 8, 23, 18, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 694199334, 'comment_body': ""1. let's rename the function to something more descriptive - e.g. `evaluateFunction` - to make it clear this is used for functions\r\n2. make the function private - there's no need to have it in public api"", 'comment_created': datetime.datetime(2021, 8, 23, 18, 12, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 694201233, 'comment_body': 'now that parsing of ""if"" condition works, it will be better to use the parser instead of manually creating the expression - it will be also much easier to read/understand the test(s)', 'comment_created': datetime.datetime(2021, 8, 23, 18, 15, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 694201946, 'comment_body': 'if you use the same test raster block multiple times, it would be good to move the raster block initialization to a dedicated function in the test (to avoid code duplicity)', 'comment_created': datetime.datetime(2021, 8, 23, 18, 16, 11, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 694202530, 'comment_body': 'remove commented code', 'comment_created': datetime.datetime(2021, 8, 23, 18, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 694351134, 'comment_body': ""Ok, I see what you mean. Taking into account the last two comments I decided to chage the test method a little bit. I'll skip the creation of the raster and use existing raster data (such as `landsat.tif`), if this last path is not clear or is not more understandable, I'll get back to the first approach..\r\nI also add more complex arguments  as options."", 'comment_created': datetime.datetime(2021, 8, 23, 22, 29, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Franc-Brs', 'type': 'User'}, {'comment_id': 694676965, 'comment_body': '```suggestion\r\n      tFunction\r\n```', 'comment_created': datetime.datetime(2021, 8, 24, 9, 23, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wonder-sk', 'type': 'User'}, {'comment_id': 694679702, 'comment_body': 'yes, unable to write defined-by-me type correctly', 'comment_created': datetime.datetime(2021, 8, 24, 9, 27, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Franc-Brs', 'type': 'User'}]","[{'commit_sha': 'e7387d4624426be6fe3bd14ce251c3ca9367ffdb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9c3bdafe8d1fcd5897b362b776337bd03c88ef1d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5913c349ddd546a59088d617d0c218d8c97d78c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e19e0793378110d0f87e35bc27f0cbb2875ffdec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cf2653038cbf4241b51c38800f5166cc5ec2cc25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'dff3c6219f9c77fad3e3a2b08567772788c8a0e1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9eea280423f741ddbfdb3deecbab48bb92d7923b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bd11ab75918ef67196b01485dc29c7d9cf2d9b95', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a35af31ee529395290f5d452e4bcfc7111a9fd8a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2dddd186e6ebd46153681f2880708d42eea4de72', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7a55761dfde14ebffe1acb72876f447643734e89', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b95e6a8072b30ce30ada65a9b6c8d3d1bb84a8d9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'be6607bad5f13758d157fef77c1a2786812b6078', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cdce4537cf7801959349e34ddc29e9cda0d7c93f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ebbef57f07e2ba203b12e5472c475ef7e6f7c28', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '297967c943bdf93bccf748b95fdfd522203cdea1', 'committer_username': 'Franc-Brs', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 24, 10, 36, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78830a16e6fb172cd9ab4cc0455e8378442c1d5f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5cc9d91e510ae0bef253c8cbc71542828fd7e856', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6f5708fbad7576099f4e72def210ffebd07e6dc5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0626dcfc4417e4c12ed1934bd223c5d78e1ece6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e556949545cb843fbcb71e1035e24876a284e617', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7395c819afdbe354666b194dd4b2ee8f407f24e3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '72f49d4fa56a3c3d2bda5995d89225949ab3b011', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c22e113e12865943678efc39e9d57cd7c1497236', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '219a37a7974a8e89f939b7f7ebae102ba6712253', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",,79576081,,User,,9,,5,6

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
1690480,QGIS,qgis/QGIS,C++,2953,10265,356,695,87425,4648,89,45,"[{'id': 720268365, 'number': 44849, 'closed': datetime.datetime(2021, 8, 27, 11, 48, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 26, 7, 49, 34, tzinfo=datetime.timezone.utc), 'time_taken': 100754.0, 'time_delta': '1 day, 3:59:14', 'additions': 7, 'deletions': 7, 'state': 'closed'}, {'id': 719319198, 'number': 44839, 'closed': datetime.datetime(2021, 9, 7, 7, 48, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 25, 7, 7, 42, tzinfo=datetime.timezone.utc), 'time_taken': 1125631.0, 'time_delta': '13 days, 0:40:31', 'additions': 291, 'deletions': 3, 'state': 'closed'}, {'id': 717815111, 'number': 44804, 'closed': datetime.datetime(2021, 8, 23, 14, 46, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 23, 13, 3, 30, tzinfo=datetime.timezone.utc), 'time_taken': 6189.0, 'time_delta': '1:43:09', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 691362928, 'number': 44195, 'closed': datetime.datetime(2021, 8, 17, 8, 0, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 10, 13, 57, tzinfo=datetime.timezone.utc), 'time_taken': 2756780.0, 'time_delta': '31 days, 21:46:20', 'additions': 1237, 'deletions': 39, 'state': 'closed'}, {'id': 658428086, 'number': 43469, 'closed': datetime.datetime(2021, 6, 2, 14, 40, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 31, 16, 43, 49, tzinfo=datetime.timezone.utc), 'time_taken': 165417.0, 'time_delta': '1 day, 21:56:57', 'additions': 54, 'deletions': 54, 'state': 'closed'}]"
366730259,QGIS,Franc-Brs/QGIS,C++,0,1,0,602,72935,3,110,3,"[{'id': 719346472, 'number': 5, 'closed': None, 'created': datetime.datetime(2021, 8, 25, 7, 46, 28, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 7, 'deletions': 7, 'state': 'open'}, {'id': 699632147, 'number': 4, 'closed': None, 'created': datetime.datetime(2021, 7, 29, 15, 27, 20, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 291, 'deletions': 3, 'state': 'open'}, {'id': 667767254, 'number': 3, 'closed': None, 'created': datetime.datetime(2021, 6, 11, 7, 20, 16, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 6, 'deletions': 6, 'state': 'open'}, {'id': 667757393, 'number': 2, 'closed': datetime.datetime(2021, 6, 11, 7, 15, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 7, 8, 15, tzinfo=datetime.timezone.utc), 'time_taken': 415.0, 'time_delta': '0:06:55', 'additions': 602, 'deletions': 1, 'state': 'closed'}, {'id': 665703735, 'number': 1, 'closed': datetime.datetime(2021, 6, 11, 7, 0, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 9, 8, 54, 40, tzinfo=datetime.timezone.utc), 'time_taken': 165938.0, 'time_delta': '1 day, 22:05:38', 'additions': 601, 'deletions': 1, 'state': 'closed'}]"
