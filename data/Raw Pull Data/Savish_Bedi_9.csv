pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
651480578,Add: Static code upload challenge Model changes and Message Queue Changes ,"Context: Static Code upload challenge Addition
Overview: Model changes + Message Queue Changes
Deliverables:
- [x]  Add is_static_dataset_docker_based_challenge field in challenge model.
- [x]  Add submission_input_file field in submission model.
- [x] Add is_static_code_upload_submission flag in SQS queue message for submissions made to static code upload challenge.
- [x] Worker Changes w.r.t Message body.

@KhalidRmb 
cc: @Ram81 
This PR had changes in various files so, for abstraction would create a new PR for Django admin actions.",True,3429,https://api.github.com/repos/Cloud-CV/EvalAI/pulls/3429,https://github.com/Cloud-CV/EvalAI/pull/3429,closed,129,7,14,12,4,25,1,0,[{'name': 'can-be-merged'}],2021-05-24 16:53:58+00:00,2021-05-31 19:17:28+00:00,613410.0,"7 days, 2:23:30","[{'comment_id': 639496854, 'comment_body': ""@savish28 this should be `submission_input_file`. We are going to store the output of docker evaluation in a separate file and not maintain multiple copies of input file. Having different submission flows isn't ideal."", 'comment_created': datetime.datetime(2021, 5, 26, 8, 8, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 639497104, 'comment_body': 'Please revert these changes too', 'comment_created': datetime.datetime(2021, 5, 26, 8, 9, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 639498773, 'comment_body': ""@savish28 let's not add these changes yet. We can these changes once we start working on the worker changes."", 'comment_created': datetime.datetime(2021, 5, 26, 8, 11, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 639501320, 'comment_body': '@savish28 this will be `submission_input_file` ', 'comment_created': datetime.datetime(2021, 5, 26, 8, 14, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 640704639, 'comment_body': 'Maybe just leave the title as is, without string formatting? \r\n`data[""message""] = ""{}"".format(challenge_obj.title)` -> `data[""message""] = challenge_obj.title`', 'comment_created': datetime.datetime(2021, 5, 27, 14, 55, 40, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 640707979, 'comment_body': '@KhalidRmb This was a pre-commit change and unrelated with the pr. It was showing syntax error so I shifted to the format type.But yeah we can simply do that :)', 'comment_created': datetime.datetime(2021, 5, 27, 14, 59, 6, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 640713036, 'comment_body': 'Is this right? @savish28  Why is the `upload_to` location same as that of `input_file`? Will only one of them be uploaded in any scenario?\r\ncc: @Ram81 ', 'comment_created': datetime.datetime(2021, 5, 27, 15, 4, 24, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 640715437, 'comment_body': 'Can you follow similar format for checking this? i.e `self.submission.submission_input_file` @savish28 \r\nSame in other places.\r\ncc: @Ram81 ', 'comment_created': datetime.datetime(2021, 5, 27, 15, 7, 9, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 640715973, 'comment_body': 'Actually, input_file would contain the docker image URI information in code-based challenges and submission_input_file would contain the output of the job created the code. All the submission-related file data is stored in submission_{id}, like stderr/stdout/input_file so I think this would be the best location to store the file.', 'comment_created': datetime.datetime(2021, 5, 27, 15, 7, 43, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 640717510, 'comment_body': 'I understand and they do mean the same, but using string formatting here is redundant. Better to remove it', 'comment_created': datetime.datetime(2021, 5, 27, 15, 9, 27, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 640719741, 'comment_body': 'Got it. Thanks', 'comment_created': datetime.datetime(2021, 5, 27, 15, 11, 44, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 640725284, 'comment_body': '@KhalidRmb, Ideally since it is a file it should be ""http://testserver%s""% (self.submission.submission_input_file.url), but since during initial submission of the file this would always be NONE. So should I change it to self.submission.submission_input_file or keep it as None? Same is the case with stderr/stoud file they are also checked as None.', 'comment_created': datetime.datetime(2021, 5, 27, 15, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 640729185, 'comment_body': '@KhalidRmb Done the required change.', 'comment_created': datetime.datetime(2021, 5, 27, 15, 21, 54, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 640802170, 'comment_body': '> @KhalidRmb, Ideally since it is a file it should be ""http://testserver%s""% (self.submission.submission_input_file.url), but since during initial submission of the file this would always be NONE. So should I change it to self.submission.submission_input_file or keep it as None? Same is the case with stderr/stoud file they are also checked as None.\n\nMakes sense. None is fine for now', 'comment_created': datetime.datetime(2021, 5, 27, 16, 52, 44, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 641351686, 'comment_body': 'Change to `Is static dataset docker based`', 'comment_created': datetime.datetime(2021, 5, 28, 8, 3, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 641353771, 'comment_body': '@savish28 did you test this API by making a call with `submission_input_file`?', 'comment_created': datetime.datetime(2021, 5, 28, 8, 6, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 641477189, 'comment_body': '@Ram81 Yeah I have checked both the file submission and also the message by making a static code upload challenge and a normal challenge by Postman.', 'comment_created': datetime.datetime(2021, 5, 28, 11, 28, 39, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 641512584, 'comment_body': '@Ram81 Sure, Done. ', 'comment_created': datetime.datetime(2021, 5, 28, 12, 33, 21, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 642464433, 'comment_body': '@savish28 please change it to `Is Static Dataset Docker Based`', 'comment_created': datetime.datetime(2021, 5, 31, 12, 49, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 642557924, 'comment_body': '`is_static_dataset_docker_based_challenge` -> `is_static_dataset_docker_based`', 'comment_created': datetime.datetime(2021, 5, 31, 15, 17, 51, tzinfo=datetime.timezone.utc), 'commenter': 'RishabhJain2018', 'type': 'User'}, {'comment_id': 642559251, 'comment_body': '`is_static_code_upload_submission` -> `is_static_dataset_docker_based_submission`', 'comment_created': datetime.datetime(2021, 5, 31, 15, 20, 20, tzinfo=datetime.timezone.utc), 'commenter': 'RishabhJain2018', 'type': 'User'}, {'comment_id': 642559370, 'comment_body': '`is_static_dataset_docker_based_submission`', 'comment_created': datetime.datetime(2021, 5, 31, 15, 20, 34, tzinfo=datetime.timezone.utc), 'commenter': 'RishabhJain2018', 'type': 'User'}, {'comment_id': 642559462, 'comment_body': '`is_static_dataset_docker_based_submission `', 'comment_created': datetime.datetime(2021, 5, 31, 15, 20, 43, tzinfo=datetime.timezone.utc), 'commenter': 'RishabhJain2018', 'type': 'User'}, {'comment_id': 642559669, 'comment_body': '`is_static_dataset_docker_based_submission`', 'comment_created': datetime.datetime(2021, 5, 31, 15, 21, 6, tzinfo=datetime.timezone.utc), 'commenter': 'RishabhJain2018', 'type': 'User'}, {'comment_id': 642559735, 'comment_body': '`is_static_dataset_docker_based_submission`', 'comment_created': datetime.datetime(2021, 5, 31, 15, 21, 11, tzinfo=datetime.timezone.utc), 'commenter': 'RishabhJain2018', 'type': 'User'}]","[{'commit_sha': 'a1c7b14f815685e283c927ab05f9c2a37dd2ab6a', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ef2ef9bcd93a6daf19989d3a953188c73963f9b', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e204a5c42df9b179a019ab6f9b0ddabbd3afed7f', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95d287923691b35fbe4f47f9e7870c54bbc080a0', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc7ea3407cbbc95f2d992a30fb5ee7c0d88b08d9', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c66ce4cbde7eab48635d870ad04d6f3bc60bc9c', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '152d3ea0625e6d0c08400ab336b241eb33852bbd', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7b44b9f5e08b28ce718ab9eb14cc12a8c6d438f', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73cbdaa42793a3ea7c192a8f992a70882c731858', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cd44e55cdf52067815472cf766e345a4a520eac', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68b006bbde51315e6fd2af606447e72fb490a6d8', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb64b9f41bf150420f4df3baa3a20dbbfc31b37f', 'committer_username': 'RishabhJain2018', 'committer_name': 'Rishabh Jain', 'committer_email': 'rishabhjain2018@gmail.com', 'commit_date': datetime.datetime(2015, 5, 2, 4, 7, 52, tzinfo=datetime.timezone.utc)}]",,32800267,,User,,23,,18,8
657441858,Add: Static data set code upload challenge service and task defination with Start/stop/delete worker Action,"Context: Static Code upload challenge Addition
Overview: Addition worker in Django admin pipeline.
Depends on: #3429 
Deliverables:
- [x] Add Django admin actions to start/delete evaluation cluster for code upload challenge.
- [x] Add Task definition for static dataset code upload challenge. 

File Changed: aws_utils.py, others are part of depends on PR.

@KhalidRmb
cc: @Ram81",True,3436,https://api.github.com/repos/Cloud-CV/EvalAI/pulls/3436,https://github.com/Cloud-CV/EvalAI/pull/3436,closed,252,36,1,15,2,5,1,0,[{'name': 'can-be-merged'}],2021-05-29 10:20:09+00:00,2021-06-05 15:04:12+00:00,621843.0,"7 days, 4:44:03","[{'comment_id': 641928905, 'comment_body': '@savish28 why do we need a new task definition for `static_code_upload_worker`? The task definition will be same as `code_upload_worker` task definition. If you need additional environment variables we can add it to `code_upload_worker` task def.', 'comment_created': datetime.datetime(2021, 5, 29, 11, 50, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 641929004, 'comment_body': ""If we are using `code_upload_worker` task def we won't need a separate config here. The cluster creation setup for static code upload challenge is exactly same as code upload worker."", 'comment_created': datetime.datetime(2021, 5, 29, 11, 51, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 641929283, 'comment_body': '@Ram81 It is not just the change in env variables but also the container definitions. The static code has two containers and code upload has only one so needed to create a new defn', 'comment_created': datetime.datetime(2021, 5, 29, 11, 54, 8, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 641931267, 'comment_body': '@Ram81 Yeah, `containerDefinitions` parameter is a list and contains the container info. If we wish to use same defn for both code upload and static code upload challenge, we might need to contain {containerDefinitions} as a variable in the code upload task defn, currently, it is provided as-is. So in that case for static code upload, we would create containerDefinitions with two containers and in case of code upload pass only one container. This might be a workaround but limits the flexibility.', 'comment_created': datetime.datetime(2021, 5, 29, 12, 14, 26, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 642425539, 'comment_body': 'I see, if that is the case then we can have separate task def for both challenge types', 'comment_created': datetime.datetime(2021, 5, 31, 11, 42, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}]","[{'commit_sha': 'a1c7b14f815685e283c927ab05f9c2a37dd2ab6a', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ef2ef9bcd93a6daf19989d3a953188c73963f9b', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e204a5c42df9b179a019ab6f9b0ddabbd3afed7f', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95d287923691b35fbe4f47f9e7870c54bbc080a0', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc7ea3407cbbc95f2d992a30fb5ee7c0d88b08d9', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c66ce4cbde7eab48635d870ad04d6f3bc60bc9c', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '152d3ea0625e6d0c08400ab336b241eb33852bbd', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7b44b9f5e08b28ce718ab9eb14cc12a8c6d438f', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73cbdaa42793a3ea7c192a8f992a70882c731858', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cd44e55cdf52067815472cf766e345a4a520eac', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68b006bbde51315e6fd2af606447e72fb490a6d8', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb64b9f41bf150420f4df3baa3a20dbbfc31b37f', 'committer_username': 'RishabhJain2018', 'committer_name': 'Rishabh Jain', 'committer_email': 'rishabhjain2018@gmail.com', 'commit_date': datetime.datetime(2015, 5, 2, 4, 7, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '569f9de88133e0dabdab8321c533134b12a49b05', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cc2c248257eeb777d8f74bb7b9ebff934883181', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccba2126d649cddba3e80a3d51c8f01f8b2bd7bd', 'committer_username': 'RishabhJain2018', 'committer_name': 'Rishabh Jain', 'committer_email': 'rishabhjain2018@gmail.com', 'commit_date': datetime.datetime(2015, 5, 2, 4, 7, 52, tzinfo=datetime.timezone.utc)}]",,32800267,,User,,23,,18,8
661218295,Refactor code upload worker to spawn single pod for static code upload challenge,"Context: Static Code Upload Challenge

Deliverables:
- [x] Refactor code upload worker to spawn single pod for static code upload challenge.
- [x] Refactor submission worker to disregard static dataset code upload job submission message.
- [x] Add volume mount setup in job pods to mount test dataset
- [x] Add volume mount setup in job pods to mount scripts for submission.
- [x] Add pre-stop hook to submit the job output csv/json to EvalAI.
- [x] Export stdout, stderr logs from jobs to share with participants
- [x] Create monitor_submission.sh
- [x] Update make_submission.sh to create completed.txt/failed.txt
- [x] Create Sidecar container
- [x] Refactor pre-stop hook code to sidecar container. 

@KhalidRmb 
cc: @Ram81 ",True,3452,https://api.github.com/repos/Cloud-CV/EvalAI/pulls/3452,https://github.com/Cloud-CV/EvalAI/pull/3452,closed,327,25,9,21,1,69,1,0,[{'name': 'can-be-merged'}],2021-06-03 21:17:21+00:00,2021-06-28 17:19:19+00:00,2145718.0,"24 days, 20:01:58","[{'comment_id': 646680840, 'comment_body': '@savish28 Please fix the spelling', 'comment_created': datetime.datetime(2021, 6, 7, 15, 9, 12, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 647570935, 'comment_body': 'please change this to `life_cycle_config`', 'comment_created': datetime.datetime(2021, 6, 8, 15, 45, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 647571119, 'comment_body': '@savish28 is this incomplete?', 'comment_created': datetime.datetime(2021, 6, 8, 15, 45, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 647571565, 'comment_body': 'Please rename the container to `submission_container` and name of the container will be `submission`', 'comment_created': datetime.datetime(2021, 6, 8, 15, 46, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 647571956, 'comment_body': 'environment variable to make submission API call will also be part of this list', 'comment_created': datetime.datetime(2021, 6, 8, 15, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 647573002, 'comment_body': 'We can create a new method to get the `Job` object. Parameters of this method will be `submission_pk` with needed specs', 'comment_created': datetime.datetime(2021, 6, 8, 15, 47, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 647573538, 'comment_body': ""Let's rename the method to `create_static_code_upload_submission_job_object`"", 'comment_created': datetime.datetime(2021, 6, 8, 15, 48, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 647801368, 'comment_body': '@Ram81 Initially I thought of creating the pipeline first in this PR and creating the curl request in another PR, but now updating the changes in this PR.', 'comment_created': datetime.datetime(2021, 6, 8, 21, 20, 6, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 649993890, 'comment_body': ""@savish28 let's move this to a script `make_submission.sh` and in pre-stop hook just do `sh /path/to/make_submission.sh`"", 'comment_created': datetime.datetime(2021, 6, 11, 13, 49, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 649996166, 'comment_body': '@savish28 `submission` folder should be present when initializing the container', 'comment_created': datetime.datetime(2021, 6, 11, 13, 52, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 649998989, 'comment_body': ""participant can save multiple files we don't need to check if there is only a single file. You can remove the `tail` command. We expect the participant to save submission file as `submission.csv`. If the file is not present we will fail the submission"", 'comment_created': datetime.datetime(2021, 6, 11, 13, 56, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 650016990, 'comment_body': 'Yeah, I thought, in case the participant deletes the submission folder(by mistake or something) xD our pre-stop hook method might fail, so added ""mkdir -p"". I guess if we are checking only submission.json or submission.csv I would refactor it and directly check if the file exists.', 'comment_created': datetime.datetime(2021, 6, 11, 14, 19, 49, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 650407606, 'comment_body': ""@savish28 why are we making curl request from the worker? This is not the approach we discussed. The curl requests will be written in `make_submission.sh` we will only pass environment variables to the container. The curl request will use environment variable. Code upload worker shouldn't substitute curl params and share fixed curl with the submission job."", 'comment_created': datetime.datetime(2021, 6, 12, 16, 3, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 650407615, 'comment_body': 'please move this curl to `make_submission.sh`', 'comment_created': datetime.datetime(2021, 6, 12, 16, 4, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 650407737, 'comment_body': 'Here you need to execute `sh /scripts/make_submission.sh` and all required parameters needed for `make_submission.sh` should be environment variables', 'comment_created': datetime.datetime(2021, 6, 12, 16, 5, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 650407786, 'comment_body': 'Please add actual curl requests here.', 'comment_created': datetime.datetime(2021, 6, 12, 16, 6, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 650407790, 'comment_body': 'Add newline', 'comment_created': datetime.datetime(2021, 6, 12, 16, 6, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 654789128, 'comment_body': '@savish28 you can refactor this method to use `get_config_map_volume_object` for dataset volume as well', 'comment_created': datetime.datetime(2021, 6, 19, 12, 13, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 654789201, 'comment_body': 'rename it to `evalai-scripts-cm`', 'comment_created': datetime.datetime(2021, 6, 19, 12, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 654789257, 'comment_body': 'rename to `evalai-scripts`', 'comment_created': datetime.datetime(2021, 6, 19, 12, 14, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 654789271, 'comment_body': ""let's change the mount path to `evalai_scripts`"", 'comment_created': datetime.datetime(2021, 6, 19, 12, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 654789510, 'comment_body': 'We need to take this extension as part of challenge config. For now we can use this script. Once we test everything we can switch to accepting submisison extension from challenge config', 'comment_created': datetime.datetime(2021, 6, 19, 12, 16, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 654789956, 'comment_body': 'Change this to `Submitting file to EvalAI...`', 'comment_created': datetime.datetime(2021, 6, 19, 12, 21, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 654789988, 'comment_body': 'Add a message here `File submission failed` and exit the script after API call.', 'comment_created': datetime.datetime(2021, 6, 19, 12, 22, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 654790072, 'comment_body': 'Add a message here `File submitted successfully`', 'comment_created': datetime.datetime(2021, 6, 19, 12, 23, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 654790210, 'comment_body': 'This submission also needs to be deleted from the queue after it is marked failed. Can you please make that change as well.', 'comment_created': datetime.datetime(2021, 6, 19, 12, 24, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 654790922, 'comment_body': ""@Ram81, wouldn't the code upload worker do that? I saw there was a condition that deletes the message when the status is changed. \r\nCurrent flow: status change -> worker reads the message again -> check status and then deletes.\r\nIs this suggested flow : change status and delete message directly?\r\nIs the idea we also pass receipt_handle and then delete from message by sending it to evalai."", 'comment_created': datetime.datetime(2021, 6, 19, 12, 31, 48, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 654794892, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 19, 13, 12, 6, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 654794908, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 19, 13, 12, 13, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 654794956, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 19, 13, 12, 38, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 654794977, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 19, 13, 12, 43, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 654795027, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 19, 13, 13, 21, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 654797705, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 19, 13, 39, 54, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 654816306, 'comment_body': ""Yes, the code upload worker will delete it we don't need to do it explicitly"", 'comment_created': datetime.datetime(2021, 6, 19, 16, 45, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 655421891, 'comment_body': ""@savish28 Please add a try except block + logging message here. Isn't this communicating with something external?"", 'comment_created': datetime.datetime(2021, 6, 21, 14, 22, 43, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 655440101, 'comment_body': '@KhalidRmb this is creating the config map object locally and not connecting to external service at this stage, It connects with eks at a later stage where the actual job is created.', 'comment_created': datetime.datetime(2021, 6, 21, 14, 43, 32, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 655445244, 'comment_body': 'We can take the example of V1Volume as well, all these objects Volume, ConfigMap, VolumeMounts are created as-is, although they are all in a single try-except block at the creation stage where it connects with external client.', 'comment_created': datetime.datetime(2021, 6, 21, 14, 49, 17, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 658689202, 'comment_body': ""@savish28 this would need to be rebased. See the changes in my recent [PR](https://github.com/Cloud-CV/EvalAI/pull/3497). `busybox` doesn't have `curl` so we have to use a ubuntu image and install curl explicitly. We will merge my PR today, you can rebase after that."", 'comment_created': datetime.datetime(2021, 6, 25, 11, 19, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 658690490, 'comment_body': ""@savish28 this won't work in a `busybox` container. We have to use the ubuntu image and install curl explicitly. See my PR for reference. Also, the args might also not work. I had to pass the args as part of the command."", 'comment_created': datetime.datetime(2021, 6, 25, 11, 22, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 658691318, 'comment_body': '@savish28 instead of this you can use `echo $(date) > ""$SUBMISSION_PATH/completed.txt""`. We don\'t need to create a file explicitly', 'comment_created': datetime.datetime(2021, 6, 25, 11, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 658691858, 'comment_body': '@savish28 please change the variable name to something like `time_delta` or `wait_interval`', 'comment_created': datetime.datetime(2021, 6, 25, 11, 24, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 658692567, 'comment_body': 'Add a log statement here `Submission not complete`', 'comment_created': datetime.datetime(2021, 6, 25, 11, 26, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 658693013, 'comment_body': ""Instead of this we could've just checked for `submission.csv/json` file in the monitor script. We woudn't need a `completed.txt` in that case. Any reason you preferred this setup?"", 'comment_created': datetime.datetime(2021, 6, 25, 11, 27, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 658693527, 'comment_body': 'This error is misleading right? This block is executed when submissions times out correct? If that is the case please make `stderr: ""Execution time limit exceeded""`. \r\n\r\nWe should handle error messages correctly here. If the submission containers exits before creating `submission.csv/json` show `submission.csv not found` otherwise if container is still running after n hours we should `Execution time limit exceeded`. ', 'comment_created': datetime.datetime(2021, 6, 25, 11, 28, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 658700542, 'comment_body': ""@Ram81 Yes, because I thought monitor_submission.sh should be independent of particulars of what file is submitted. `make_submission.sh` would take care of the particulars. Even if we modify that we want these types of files or maybe in future we want to submit multiple files all that logic would go into `make_submission.sh` and `monitor_submision.sh` would only check for `completed.txt`. In this way we don't have to repeat our logic again and again."", 'comment_created': datetime.datetime(2021, 6, 25, 11, 42, 28, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 658705876, 'comment_body': '@Ram81 do you mean changing `SUBMISSION_TIME_DELTA` to `time_delta`? `next_checkpoint` would be the next time at which we would be going to check.', 'comment_created': datetime.datetime(2021, 6, 25, 11, 53, 1, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 658706594, 'comment_body': 'Yeah, we have a plan to check the health of submission docker from sidecar in near future, would add this error there. Changing this error to TLE error as suggested.', 'comment_created': datetime.datetime(2021, 6, 25, 11, 54, 23, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 658718023, 'comment_body': 'Okay, updated.', 'comment_created': datetime.datetime(2021, 6, 25, 12, 15, 41, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 658718114, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2021, 6, 25, 12, 15, 51, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 658718226, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 6, 25, 12, 16, 3, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 658718367, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 6, 25, 12, 16, 15, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 658718825, 'comment_body': '@Ram81, Sure would do the required changes as soon as the respective PR is merged.', 'comment_created': datetime.datetime(2021, 6, 25, 12, 17, 7, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 658730328, 'comment_body': 'I meant change the name of `next_checkpoint` to something relevant to next time interval or similar', 'comment_created': datetime.datetime(2021, 6, 25, 12, 37, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 658730679, 'comment_body': 'Makes sense.', 'comment_created': datetime.datetime(2021, 6, 25, 12, 37, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 658754403, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 6, 25, 13, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 659288620, 'comment_body': ""Why are we passing `submission_time_limit` in sqs message? This will be a fixed value for each challenge. Let's pass this as task_definition param to the worker. Let's not add too many details in sqs message"", 'comment_created': datetime.datetime(2021, 6, 27, 9, 3, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 659293124, 'comment_body': '@Ram81, Since we are getting challenge object already in code upload worker, why is there a need to pass it from task_defn_worker? \r\nWe could just set an env variable one time at the starting of the code upload worker when we are fetching the challenge details.\r\nOR \r\nWe could have a variable `submission_time_limit` passed explicitly to the function.\r\n\r\nThe submission_time_limit is not in the actual sqs message though it is in our local message_body variable but yeah we have that separate for good abstraction. The disadvantage is when we have some more info to pass we eventually have to pass it in some dict.\r\nWhat do you suggest how we proceed?', 'comment_created': datetime.datetime(2021, 6, 27, 9, 41, 8, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 659293626, 'comment_body': ""I see, let's create a new dict `submission_meta` and populate that in the same message body object for now. Adding new param to existing functions will need more changes."", 'comment_created': datetime.datetime(2021, 6, 27, 9, 44, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 659294598, 'comment_body': 'Updated these changes.', 'comment_created': datetime.datetime(2021, 6, 27, 9, 52, 53, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 659825654, 'comment_body': 'This should be full path inside the docker container for it to work when reading the file. This should be `/code/scripts/workers/code_upload_worker_utils/make_submission.sh`', 'comment_created': datetime.datetime(2021, 6, 28, 14, 14, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 659825717, 'comment_body': 'same here', 'comment_created': datetime.datetime(2021, 6, 28, 14, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 659829700, 'comment_body': '@savish28 have you verified these curl requests locally once?', 'comment_created': datetime.datetime(2021, 6, 28, 14, 19, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 659830616, 'comment_body': 'Why is this repeated twice here?', 'comment_created': datetime.datetime(2021, 6, 28, 14, 20, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 659836377, 'comment_body': '@savish28 where are the respective API changes to update the `submission_input_file` and republishing the submission message to the queue? For this API there is not PATCH update available', 'comment_created': datetime.datetime(2021, 6, 28, 14, 26, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 659863987, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2021, 6, 28, 14, 57, 21, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 659865656, 'comment_body': '@Ram81 yes.', 'comment_created': datetime.datetime(2021, 6, 28, 14, 59, 12, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 659867528, 'comment_body': '@Ram81 `change_submission_data_and_visibility` in jobs views.py is related to this, we have made changes to send message in this particular view in a previous PR that is merged. ', 'comment_created': datetime.datetime(2021, 6, 28, 15, 1, 15, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 659867902, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 28, 15, 1, 43, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 659868019, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2021, 6, 28, 15, 1, 50, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}]","[{'commit_sha': 'a49841f08ef3393b6e999dba472d7d30c53706f8', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '351a252fee2bd5e26c9c4cd3e8435521d8d9431f', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '286551dd877977d860cca5a391707ae844a0b491', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec580996ead1af5ff6f34054053d27d676f548e8', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '137dfb199eeae3beaa4346e64e71b8a98a50d17d', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50917b27064c38b89c95ccc3cf285d809fdfa3a9', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cf9cfb688f7b569392c6152545b2d8ceceea26c', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c82f7682dec5012b98747810f9485a383e8b3b4e', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '593c94f336c4907454d89dae8c02373edbafcf05', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62c22a1794aace9df7f03f8301a3e7a0f2149eed', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc24aea0d2645d9a198a88c0e457eb36f85e4716', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c330e73814474d0e23c9392ac1ec0fb9cda2c395', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0a601596d22348a5f37846a5c00dafa36d4248d', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b754587ca2bb01c78f43410a37934756053622b', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfdcb2c910a2d9afab5f919a46e99a45df20a56f', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5021d93e71727d80bc99ca90765ec1bffbc3d2a3', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11545872a47bd85a4e80d70cc6edf2d706bcea6b', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5beff98de3054237fa588128692f13d3135cd34', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fbfb50e96739c64445ba53705a676f92e09e188', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9acdf040c9da39be9817bfa37dd74243caa2ffe2', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9de3c95109a0c02e4c789e95c1144196288d1fb', 'committer_username': 'RishabhJain2018', 'committer_name': 'Rishabh Jain', 'committer_email': 'rishabhjain2018@gmail.com', 'commit_date': datetime.datetime(2015, 5, 2, 4, 7, 52, tzinfo=datetime.timezone.utc)}]",,32800267,,User,,23,,18,8
679396470,Bug Fix: static code upload worker challenge integrations,"Context: Static code upload challenge.

These changes are based on the testing of static code upload worker.

Deliverables:
- [x] Challenge object dict bug
- [x] messgae_body None 
- [x] Config Map creation
- [x] Change API endpoint from `change_submission_data_and_visibility` to `update_submission` for evaluation stage

@KhalidRmb 
cc: @Ram81 ",True,3506,https://api.github.com/repos/Cloud-CV/EvalAI/pulls/3506,https://github.com/Cloud-CV/EvalAI/pull/3506,closed,65,33,3,8,1,14,1,0,[{'name': 'can-be-merged'}],2021-06-28 20:54:42+00:00,2021-06-29 16:50:31+00:00,71749.0,19:55:49,"[{'comment_id': 660349474, 'comment_body': 'Why are we overriding `api_instance` here? It is already being used at multiple places', 'comment_created': datetime.datetime(2021, 6, 29, 7, 25, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 660353198, 'comment_body': '@savish28 can you add a one line comment to describe what we are doing here', 'comment_created': datetime.datetime(2021, 6, 29, 7, 30, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 660355532, 'comment_body': 'Also, it would be good if you add a `if else` here. Update the `submission_input_file` if the challenge is static code upload challenge. Else if the challenge is code upload challenge do the other update. Check for the `request.FILES.get(""submission_input_file"")` should be inside if. ', 'comment_created': datetime.datetime(2021, 6, 29, 7, 34, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 660356506, 'comment_body': 'Where is the submission pk for this API call?', 'comment_created': datetime.datetime(2021, 6, 29, 7, 35, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 660357025, 'comment_body': 'The above API expects submission pk to be in request data. Please add that change', 'comment_created': datetime.datetime(2021, 6, 29, 7, 36, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 660366028, 'comment_body': '@Ram81, it was being overridden in the While before and the parameters were not changing, so just moved the code outside the While. \r\nAlso, it is assigned firstly by `get_api_client` and then calls `install_gpu_drivers` and then assigned by `get_api_object` so followed the same thing. Just took api_instance out of the while loop.\r\nWe could change the name of the firstly used `api_instance` to `api_instance_client`.', 'comment_created': datetime.datetime(2021, 6, 29, 7, 49, 14, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 660371916, 'comment_body': 'the current flow is\r\nif File_submitted + static_code_upload_challenge: Do our thing and return\r\n""Prev flow""\r\n\r\nAre you suggesting\r\nif static_code_upload_challenge:\r\n    if File_submitted: Do our thing\r\nelse:\r\n     ""Prev flow""\r\n\r\nThe reason for not following the second design is that we are using the Prev flow as well for the static_code_upload_challenge.\r\n\r\n', 'comment_created': datetime.datetime(2021, 6, 29, 7, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 660378631, 'comment_body': 'I see, then above changes are fine', 'comment_created': datetime.datetime(2021, 6, 29, 8, 5, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 660423378, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 6, 29, 9, 3, 2, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 660424144, 'comment_body': '@Ram81, Sure,\r\nAdded it in the code, also tested it locally by creating a challenge and submitting using this script, also tested the formation of new message.', 'comment_created': datetime.datetime(2021, 6, 29, 9, 4, 1, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 660650019, 'comment_body': 'Change to `Update submission_input_file for is_static_dataset_code_upload submission evaluation`', 'comment_created': datetime.datetime(2021, 6, 29, 14, 3, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 660652522, 'comment_body': ""@savish28 shouldn't this `-F 'submission=$SUBMISSION_PK'` be part of request body?  Have you tested by making a API call locally?"", 'comment_created': datetime.datetime(2021, 6, 29, 14, 6, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 660657496, 'comment_body': '@Ram81 It is part of the request body itself, the F stands for Form Data. Yes, I have tested these changes locally and the file reflected on the submission model. Verified from django admin. We are eventually using request.data and it contains submission and the submission_input_file', 'comment_created': datetime.datetime(2021, 6, 29, 14, 11, 10, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 660659001, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2021, 6, 29, 14, 12, 46, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}]","[{'commit_sha': '0b20f721a0aaad8c39912624876f5cfe1cc4bb13', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e598903b9f1eb13c4c94cfea30f25ce5f158813', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccec1521b83aebff5b12ae4fac5ae4e73d372398', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '935c9c913c42808d8cd92d3874913e599916f02e', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd341524cb0e4b359e592aa08683cef356c133e47', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48199ec39125d9a74661c4b0e6561d6268f0d4da', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eae5bc4dc4cc58c5e43a2ecccd1e364c1a0f25ad', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '985c63bd5280ecc6962af5828a29de00409b5f8a', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}]",,32800267,,User,,23,,18,8
668948009,Refactor submission worker to evaluate static dataset code upload challenge submissions,"Context: Static Code Upload Challenge

Deliverables:
- [x] Refactor submission worker to evaluate static dataset code upload challenge submissions. (submission_input_file)

@KhalidRmb
cc: @Ram81",True,3480,https://api.github.com/repos/Cloud-CV/EvalAI/pulls/3480,https://github.com/Cloud-CV/EvalAI/pull/3480,closed,17,3,1,4,6,3,1,0,[{'name': 'can-be-merged'}],2021-06-12 20:36:11+00:00,2021-07-07 15:35:53+00:00,2141982.0,"24 days, 18:59:42","[{'comment_id': 652878238, 'comment_body': ""Hey, maybe I'm missing something here, but doesn't this mean a submission for `is_static_dataset_code_upload_submission` won't be evaluated? Why the code changes in the other lines then? @savish28 "", 'comment_created': datetime.datetime(2021, 6, 16, 16, 59, 3, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 652886535, 'comment_body': '@KhalidRmb Basically when `is_static_dataset_code_upload_submission` is true we do the creation of job on eks cluster and create submission file in `submission_input_file`. When this submission is done we add a message in this queue so, the submission would be evaluated here where the input file is not stored in submission.input_file but in submission.submission_input_file.', 'comment_created': datetime.datetime(2021, 6, 16, 17, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 652887490, 'comment_body': 'Since we are using the same queue we are adding the check that the creation of job part is not considered. in case of evaluation stage `is_static_dataset_code_upload_submission` would be false.', 'comment_created': datetime.datetime(2021, 6, 16, 17, 10, 54, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}]","[{'commit_sha': '15fdaf6c62df49d5dde7694ee3203bb133d37bf1', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c9271e8ea3821c73120d5e27b8be4e565a6be9a', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eab8eb369a5042ffd21cfb5ea8aae89805ff475b', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e18219492cb6d0359754a1a5ebcc8ff08dfd2b7', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}]",,32800267,,User,,23,,18,8
651480578,Add: Static code upload challenge Model changes and Message Queue Changes ,"Context: Static Code upload challenge Addition
Overview: Model changes + Message Queue Changes
Deliverables:
- [x]  Add is_static_dataset_docker_based_challenge field in challenge model.
- [x]  Add submission_input_file field in submission model.
- [x] Add is_static_code_upload_submission flag in SQS queue message for submissions made to static code upload challenge.
- [x] Worker Changes w.r.t Message body.

@KhalidRmb 
cc: @Ram81 
This PR had changes in various files so, for abstraction would create a new PR for Django admin actions.",True,3429,https://api.github.com/repos/Cloud-CV/EvalAI/pulls/3429,https://github.com/Cloud-CV/EvalAI/pull/3429,closed,129,7,14,12,4,25,1,0,[{'name': 'can-be-merged'}],2021-05-24 16:53:58+00:00,2021-05-31 19:17:28+00:00,613410.0,"7 days, 2:23:30","[{'comment_id': 639496854, 'comment_body': ""@savish28 this should be `submission_input_file`. We are going to store the output of docker evaluation in a separate file and not maintain multiple copies of input file. Having different submission flows isn't ideal."", 'comment_created': datetime.datetime(2021, 5, 26, 8, 8, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 639497104, 'comment_body': 'Please revert these changes too', 'comment_created': datetime.datetime(2021, 5, 26, 8, 9, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 639498773, 'comment_body': ""@savish28 let's not add these changes yet. We can these changes once we start working on the worker changes."", 'comment_created': datetime.datetime(2021, 5, 26, 8, 11, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 639501320, 'comment_body': '@savish28 this will be `submission_input_file` ', 'comment_created': datetime.datetime(2021, 5, 26, 8, 14, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 640704639, 'comment_body': 'Maybe just leave the title as is, without string formatting? \r\n`data[""message""] = ""{}"".format(challenge_obj.title)` -> `data[""message""] = challenge_obj.title`', 'comment_created': datetime.datetime(2021, 5, 27, 14, 55, 40, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 640707979, 'comment_body': '@KhalidRmb This was a pre-commit change and unrelated with the pr. It was showing syntax error so I shifted to the format type.But yeah we can simply do that :)', 'comment_created': datetime.datetime(2021, 5, 27, 14, 59, 6, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 640713036, 'comment_body': 'Is this right? @savish28  Why is the `upload_to` location same as that of `input_file`? Will only one of them be uploaded in any scenario?\r\ncc: @Ram81 ', 'comment_created': datetime.datetime(2021, 5, 27, 15, 4, 24, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 640715437, 'comment_body': 'Can you follow similar format for checking this? i.e `self.submission.submission_input_file` @savish28 \r\nSame in other places.\r\ncc: @Ram81 ', 'comment_created': datetime.datetime(2021, 5, 27, 15, 7, 9, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 640715973, 'comment_body': 'Actually, input_file would contain the docker image URI information in code-based challenges and submission_input_file would contain the output of the job created the code. All the submission-related file data is stored in submission_{id}, like stderr/stdout/input_file so I think this would be the best location to store the file.', 'comment_created': datetime.datetime(2021, 5, 27, 15, 7, 43, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 640717510, 'comment_body': 'I understand and they do mean the same, but using string formatting here is redundant. Better to remove it', 'comment_created': datetime.datetime(2021, 5, 27, 15, 9, 27, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 640719741, 'comment_body': 'Got it. Thanks', 'comment_created': datetime.datetime(2021, 5, 27, 15, 11, 44, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 640725284, 'comment_body': '@KhalidRmb, Ideally since it is a file it should be ""http://testserver%s""% (self.submission.submission_input_file.url), but since during initial submission of the file this would always be NONE. So should I change it to self.submission.submission_input_file or keep it as None? Same is the case with stderr/stoud file they are also checked as None.', 'comment_created': datetime.datetime(2021, 5, 27, 15, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 640729185, 'comment_body': '@KhalidRmb Done the required change.', 'comment_created': datetime.datetime(2021, 5, 27, 15, 21, 54, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 640802170, 'comment_body': '> @KhalidRmb, Ideally since it is a file it should be ""http://testserver%s""% (self.submission.submission_input_file.url), but since during initial submission of the file this would always be NONE. So should I change it to self.submission.submission_input_file or keep it as None? Same is the case with stderr/stoud file they are also checked as None.\n\nMakes sense. None is fine for now', 'comment_created': datetime.datetime(2021, 5, 27, 16, 52, 44, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 641351686, 'comment_body': 'Change to `Is static dataset docker based`', 'comment_created': datetime.datetime(2021, 5, 28, 8, 3, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 641353771, 'comment_body': '@savish28 did you test this API by making a call with `submission_input_file`?', 'comment_created': datetime.datetime(2021, 5, 28, 8, 6, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 641477189, 'comment_body': '@Ram81 Yeah I have checked both the file submission and also the message by making a static code upload challenge and a normal challenge by Postman.', 'comment_created': datetime.datetime(2021, 5, 28, 11, 28, 39, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 641512584, 'comment_body': '@Ram81 Sure, Done. ', 'comment_created': datetime.datetime(2021, 5, 28, 12, 33, 21, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 642464433, 'comment_body': '@savish28 please change it to `Is Static Dataset Docker Based`', 'comment_created': datetime.datetime(2021, 5, 31, 12, 49, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 642557924, 'comment_body': '`is_static_dataset_docker_based_challenge` -> `is_static_dataset_docker_based`', 'comment_created': datetime.datetime(2021, 5, 31, 15, 17, 51, tzinfo=datetime.timezone.utc), 'commenter': 'RishabhJain2018', 'type': 'User'}, {'comment_id': 642559251, 'comment_body': '`is_static_code_upload_submission` -> `is_static_dataset_docker_based_submission`', 'comment_created': datetime.datetime(2021, 5, 31, 15, 20, 20, tzinfo=datetime.timezone.utc), 'commenter': 'RishabhJain2018', 'type': 'User'}, {'comment_id': 642559370, 'comment_body': '`is_static_dataset_docker_based_submission`', 'comment_created': datetime.datetime(2021, 5, 31, 15, 20, 34, tzinfo=datetime.timezone.utc), 'commenter': 'RishabhJain2018', 'type': 'User'}, {'comment_id': 642559462, 'comment_body': '`is_static_dataset_docker_based_submission `', 'comment_created': datetime.datetime(2021, 5, 31, 15, 20, 43, tzinfo=datetime.timezone.utc), 'commenter': 'RishabhJain2018', 'type': 'User'}, {'comment_id': 642559669, 'comment_body': '`is_static_dataset_docker_based_submission`', 'comment_created': datetime.datetime(2021, 5, 31, 15, 21, 6, tzinfo=datetime.timezone.utc), 'commenter': 'RishabhJain2018', 'type': 'User'}, {'comment_id': 642559735, 'comment_body': '`is_static_dataset_docker_based_submission`', 'comment_created': datetime.datetime(2021, 5, 31, 15, 21, 11, tzinfo=datetime.timezone.utc), 'commenter': 'RishabhJain2018', 'type': 'User'}]","[{'commit_sha': 'a1c7b14f815685e283c927ab05f9c2a37dd2ab6a', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ef2ef9bcd93a6daf19989d3a953188c73963f9b', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e204a5c42df9b179a019ab6f9b0ddabbd3afed7f', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95d287923691b35fbe4f47f9e7870c54bbc080a0', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc7ea3407cbbc95f2d992a30fb5ee7c0d88b08d9', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c66ce4cbde7eab48635d870ad04d6f3bc60bc9c', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '152d3ea0625e6d0c08400ab336b241eb33852bbd', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7b44b9f5e08b28ce718ab9eb14cc12a8c6d438f', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73cbdaa42793a3ea7c192a8f992a70882c731858', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cd44e55cdf52067815472cf766e345a4a520eac', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68b006bbde51315e6fd2af606447e72fb490a6d8', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb64b9f41bf150420f4df3baa3a20dbbfc31b37f', 'committer_username': 'RishabhJain2018', 'committer_name': 'Rishabh Jain', 'committer_email': 'rishabhjain2018@gmail.com', 'commit_date': datetime.datetime(2015, 5, 2, 4, 7, 52, tzinfo=datetime.timezone.utc)}]",,32800267,,User,,23,,18,8
684467501,Cleanup submission: file not found before TLE,"Context: Monitoring static code upload challenge

Deliverables:
- [x] Cleanup submission code upload: file not found

Depends on: #3492 

@KhalidRmb 
cc: @Ram81 ",True,3523,https://api.github.com/repos/Cloud-CV/EvalAI/pulls/3523,https://github.com/Cloud-CV/EvalAI/pull/3523,closed,39,15,1,9,1,13,1,0,[{'name': 'can-be-merged'}],2021-07-06 15:16:05+00:00,2021-07-14 15:21:23+00:00,691518.0,"8 days, 0:05:18","[{'comment_id': 665496105, 'comment_body': ""@savish28 let's move this check to a separate function. This is not readable"", 'comment_created': datetime.datetime(2021, 7, 7, 15, 45, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 665535449, 'comment_body': '@Ram81 Updated', 'comment_created': datetime.datetime(2021, 7, 7, 16, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 666936386, 'comment_body': 'Please rename this method to `is_submission_evaluation_done`', 'comment_created': datetime.datetime(2021, 7, 9, 13, 9, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 666937550, 'comment_body': 'Also add a one line comment describing the check ', 'comment_created': datetime.datetime(2021, 7, 9, 13, 11, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 667003583, 'comment_body': ""@savish28 Check if it's a submission container as a first condition here itself. Minor nit"", 'comment_created': datetime.datetime(2021, 7, 9, 14, 44, 9, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 667009296, 'comment_body': '@savish28 Refactoring: This call is repeated in this function 3 times with only one param being different. Just use a boolean to set cleanup and store the log/error. Then just call the function once at the end', 'comment_created': datetime.datetime(2021, 7, 9, 14, 51, 47, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 667017786, 'comment_body': '@Ram81 Docstring is added in the function heading, should I add that here as well?', 'comment_created': datetime.datetime(2021, 7, 9, 15, 3, 38, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 667020038, 'comment_body': '@KhalidRmb We were checking the conditions here only but for better readability, we shifted the checks to the function. Do we want the submission condition to be segregated from the function?', 'comment_created': datetime.datetime(2021, 7, 9, 15, 6, 53, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 667020413, 'comment_body': 'Good idea,sure.', 'comment_created': datetime.datetime(2021, 7, 9, 15, 7, 19, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 667031641, 'comment_body': ""Hmm...just the one check. Because why enter the function if it's not the submission container"", 'comment_created': datetime.datetime(2021, 7, 9, 15, 23, 27, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 667045913, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2021, 7, 9, 15, 44, 39, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 667046200, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2021, 7, 9, 15, 45, 6, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 667046298, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 7, 9, 15, 45, 14, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}]","[{'commit_sha': '7f2273b44f9b6b47abc800329cec89dfc789ba5d', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c468fbc5602bfa5d04df53aafab665a68eb3929', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d285ad738bb12c83950603827e9a58c62c27f6f', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee97fcd1a0ac210224bf47610b7952e678252b51', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f110d3b7b656884f4fb7ab280abc3fd2c6f7a22c', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b27e81b2f3d45ae4d39702b350c2b6693993df9d', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c3cad4da57e3edb6c54cea779cced74f4bc34c1', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24c3ddcb41fab40d6bfba0838ed0e8a0afc979ee', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0a5ec28428b338c5af27aba30792e492e3d21b9', 'committer_username': 'RishabhJain2018', 'committer_name': 'Rishabh Jain', 'committer_email': 'rishabhjain2018@gmail.com', 'commit_date': datetime.datetime(2015, 5, 2, 4, 7, 52, tzinfo=datetime.timezone.utc)}]",,32800267,,User,,23,,18,8
684384288,Add check before creating config maps code upload worker,"Context: Static Code upload worker

Deliverables:
- [x] Add check before creating config maps code upload worker.
- [x] Reduce time_delta to 1 minute. 

@KhalidRmb 
cc: @Ram81 ",True,3522,https://api.github.com/repos/Cloud-CV/EvalAI/pulls/3522,https://github.com/Cloud-CV/EvalAI/pull/3522,closed,12,0,1,5,1,2,1,0,[{'name': 'can-be-merged'}],2021-07-06 13:35:23+00:00,2021-07-14 16:16:59+00:00,700896.0,"8 days, 2:41:36","[{'comment_id': 667001472, 'comment_body': '@savish28 Please add a comment here, why this is necessary.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 41, 5, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 667049964, 'comment_body': '@KhalidRmb sure done.', 'comment_created': datetime.datetime(2021, 7, 9, 15, 50, 51, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}]","[{'commit_sha': '433f24a7814b14300f60ffe1fb96efe03de22c1d', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7af03131691d4f17a48ea2fdd1d1e12f25dec2a', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef4a614469d67c27fbdfc3515e19162bea9c1e5f', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c83dd1febecd748f67a92d38e6afc4edc4f5b111', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c665cbf9038721142868a17365db5bb6c91640f', 'committer_username': 'RishabhJain2018', 'committer_name': 'Rishabh Jain', 'committer_email': 'rishabhjain2018@gmail.com', 'commit_date': datetime.datetime(2015, 5, 2, 4, 7, 52, tzinfo=datetime.timezone.utc)}]",,32800267,,User,,23,,18,8
691915345,Restart static code upload workers at evaluation_script modification,"Context: Static code upload worker.

Deliverables:
At evaluation_script updations, the static code upload workers [Submission worker] need to be restarted. 

@KhalidRmb 
cc: @Ram81 ",True,3535,https://api.github.com/repos/Cloud-CV/EvalAI/pulls/3535,https://github.com/Cloud-CV/EvalAI/pull/3535,closed,4,1,1,1,1,0,1,0,[{'name': 'can-be-merged'}],2021-07-17 11:04:29+00:00,2021-07-18 18:32:41+00:00,113292.0,"1 day, 7:28:12",[],"[{'commit_sha': 'aa1381735c4c1773983305ad6577ae799920f561', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}]",,32800267,,User,,23,,18,8
691753912,Update api_instacne for kubernetes token refresh,"Context: Code upload challenge worker.

Bug:
- [x] api_instance did not update so caused authentication error

@KhalidRmb 
cc: @Ram81 ",True,3533,https://api.github.com/repos/Cloud-CV/EvalAI/pulls/3533,https://github.com/Cloud-CV/EvalAI/pull/3533,closed,6,0,1,1,1,0,1,0,[{'name': 'can-be-merged'}],2021-07-16 21:32:20+00:00,2021-07-18 18:33:11+00:00,162051.0,"1 day, 21:00:51",[],"[{'commit_sha': '6ec8185412d2d349898a596c2f6b92ec39236957', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}]",,32800267,,User,,23,,18,8
692027795,"Refactor static code upload challenge workers for logs, wait time and exception","Context: Static code upload challenge workers.

Deliverables-
- [x] Add logs in code upload worker.
- [x] Change time delta -> To have monitoring setup to job if no file present.
- [x] Add time sleep in code upload challenge for messages meant for submission worker to reduce evaluation wait time.
- [x] Add exception handling in case submission input file is none in submission worker.

@KhalidRmb 
cc: @Ram81 ",True,3536,https://api.github.com/repos/Cloud-CV/EvalAI/pulls/3536,https://github.com/Cloud-CV/EvalAI/pull/3536,closed,12,26,1,7,2,7,1,0,[{'name': 'can-be-merged'}],2021-07-18 04:33:22+00:00,2021-07-24 16:36:28+00:00,561786.0,"6 days, 12:03:06","[{'comment_id': 671855830, 'comment_body': ""This value to should be 1 hour. Let's not check in values like 1 second for testing purposes only"", 'comment_created': datetime.datetime(2021, 7, 18, 15, 0, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 671855871, 'comment_body': 'Why this big wait time?', 'comment_created': datetime.datetime(2021, 7, 18, 15, 0, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 671855983, 'comment_body': ""This case should never happen. `input_file` should never be `None`. This needs to be fixed when making a submission/updating it. We can;'t handle it in submission worker."", 'comment_created': datetime.datetime(2021, 7, 18, 15, 1, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 671858544, 'comment_body': '@Ram81 actually this is set on purpose.\r\nAssume the following situation.\r\n\r\n- time_delta is 1 hr\r\n- submission worker stops after 15 mins and saving the file.\r\n- whenever code_upload_worker would receive the message and see submission worker is completed but sidecar is running. So it would notify EvalAI that no submission file was found.\r\n- So in order to support delete of job and updation to evalai, we need to have it 1 sec.\r\n- Because the message is checked every 0.5 secs in code upload worker now.', 'comment_created': datetime.datetime(2021, 7, 18, 15, 21, 32, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 671858805, 'comment_body': '@Ram81 This is to guarantee that submission worker reads this message and evaluates it. Waittime of a message is 30 secs in SQS by default. This approach removes the probablistic approach, and is more inclined towards deterministic and which increase speed.\r\nTested this approach and the whole submission lifecycle time was reduced drastically due to this.', 'comment_created': datetime.datetime(2021, 7, 18, 15, 23, 19, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 671859650, 'comment_body': '@Ram81 Yeah agreed, this should not happen here. \r\nThis is a rare thing and the events which I interpreted were:\r\n- Both the requests Submission file from the side-car container and ""submission.json/csv not found"" from the code_upload worker happened in parallel.\r\n[Status update request] fetched submission object which did not have submission_input_file.\r\n[Submisison file request] came and updated the db and created a message and returned.\r\n[Status update request] used the variable in memory that had submission_input_file as None.\r\n\r\nAdded the exception handling here just in case. I totally agree we should take care of this.', 'comment_created': datetime.datetime(2021, 7, 18, 15, 30, 43, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 671860007, 'comment_body': 'If we have less time_delta then side-car container would exit as soon as the submission container and this situation would not occur. This is also one of the reasons of having less time_delta.', 'comment_created': datetime.datetime(2021, 7, 18, 15, 33, 19, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}]","[{'commit_sha': '78bca9c2bbc8b957d0feceb30c68807c54f08076', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db0790f832f07a0dc4b3861427dc0e10b1c93921', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5f27b14a4c8b84abb574a21a3257e912327ae8e', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33f70922c63974e16f704ee31ee8978563471291', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4d2d7b45ffaeee111d780c248b5f876f7379756', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c13dfdaf56e9356b17fabdb0f17b1302277b9c99', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '371ae42939b40f87dd4be2edc7b2458e19659247', 'committer_username': 'RishabhJain2018', 'committer_name': 'Rishabh Jain', 'committer_email': 'rishabhjain2018@gmail.com', 'commit_date': datetime.datetime(2015, 5, 2, 4, 7, 52, tzinfo=datetime.timezone.utc)}]",,32800267,,User,,23,,18,8
687316145,Aws: Add multi key support submission and code upload container,"Context: Static code upload challenge Fargate workers.

Deliverables:
- [x] Add multi AWS key support submission and code upload container.

This PR solves the bug of `AWS_STORAGE_BUCKET_NAME = """"` on fargate.
@KhalidRmb 
cc: @Ram81 ",True,3530,https://api.github.com/repos/Cloud-CV/EvalAI/pulls/3530,https://github.com/Cloud-CV/EvalAI/pull/3530,closed,528,497,2,5,1,12,1,0,[{'name': 'can-be-merged'}],2021-07-11 11:07:24+00:00,2021-07-24 16:37:52+00:00,1143028.0,"13 days, 5:30:28","[{'comment_id': 671226063, 'comment_body': 'Please fix the variable name', 'comment_created': datetime.datetime(2021, 7, 16, 12, 50, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 671227153, 'comment_body': ""@savish28 Also, we can't have have these huge task definitions as variables in `aws_utils.py`. Please move these to a separate file."", 'comment_created': datetime.datetime(2021, 7, 16, 12, 51, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 671227496, 'comment_body': 'Fix the variable name', 'comment_created': datetime.datetime(2021, 7, 16, 12, 51, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 671230873, 'comment_body': ""Please move this to a separate method. This piece of code is unreadable. Also, why do we need to substitute same variables in two task definitions can't we dedup it and make this code more readble?"", 'comment_created': datetime.datetime(2021, 7, 16, 12, 54, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 671239508, 'comment_body': '@Ram81 Should we shift all task defn to a new file say `task_definations.py` and import all from there? or just these two container defns?', 'comment_created': datetime.datetime(2021, 7, 16, 13, 6, 45, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 671251415, 'comment_body': 'Sure, we can move that to a different function, the common variables are `queue_name` and `COMMON_SETTINGS_DICT`, but still since `code_upload_container` and `submission_container_defination` are passed as a variable to `task_definition_static_code_upload_worker` so we need to format the all the varaibles of them before right? before passing', 'comment_created': datetime.datetime(2021, 7, 16, 13, 24, 3, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 671686493, 'comment_body': '@Ram81, Should we test these changes first on fargate and if everything works we can maybe add the container definitions in  task_defination and task_definations_code_upload_worker as well and create three functions on `get_challenge_task_defn`, `get_code_upload_challenge_task_defn`, `get_static_dataset_code_upload_challenge_task_defn` in `task_definations.py` and eventually this peice of code can shift to `get_static_dataset_code_upload_challenge_task_defn` function.', 'comment_created': datetime.datetime(2021, 7, 17, 11, 38, 43, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 671687246, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2021, 7, 17, 11, 47, 1, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 671687293, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2021, 7, 17, 11, 47, 8, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 671687311, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2021, 7, 17, 11, 47, 16, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 671856215, 'comment_body': 'It should be `task_definitions` not `task_definations`. Please replace `definations` with `definition`', 'comment_created': datetime.datetime(2021, 7, 18, 15, 3, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 671858070, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 7, 18, 15, 17, 42, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}]","[{'commit_sha': '666e1eb834182bbe9831b558f3147464a432d647', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49f0ba3d0a4be98d2dc3fcb19b3cef573acef232', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ef835218f10d6b51e7943aa24b94044f74ef09f', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56a504c937f54732700c5fd41bf82a2a67ccc1d0', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '093fb108164e75f8fce3a691c7f287d48f04c4c1', 'committer_username': 'RishabhJain2018', 'committer_name': 'Rishabh Jain', 'committer_email': 'rishabhjain2018@gmail.com', 'commit_date': datetime.datetime(2015, 5, 2, 4, 7, 52, tzinfo=datetime.timezone.utc)}]",,32800267,,User,,23,,18,8
699883233,[Worker]: BugFix code upload worker for limited nodes,"Context: Code upload worker.

This PR solves the following bugs

- [x] Prevent Logs in code upload worker being printed twice.
- [x] Fix read_job function in case of job not present.
- [x] Prevent failure of submission when pod is in pending state. [nodes are fully utilized and a new job is created]

Detailed Explanation for point 3:
This scenario occurs when the job is created but the number of nodes available are fully utilized, so the job is created but the corresponding pod is in a pending state in which the container statuses does not exist. 

@KhalidRmb 
cc: @Ram81 ",True,3560,https://api.github.com/repos/Cloud-CV/EvalAI/pulls/3560,https://github.com/Cloud-CV/EvalAI/pull/3560,closed,56,32,1,2,0,5,1,0,[{'name': 'can-be-merged'}],2021-07-29 22:37:09+00:00,2021-07-31 14:21:17+00:00,143048.0,"1 day, 15:44:08","[{'comment_id': 679893179, 'comment_body': '@savish28 `read_job` will return a valid kubernetes job if the job is in pending state. Have you tested this change?', 'comment_created': datetime.datetime(2021, 7, 30, 12, 39, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 679895249, 'comment_body': '@Ram81 this is the case when I manually delete the job from kubectl and in this case read_job would return None, this is a different usecase.', 'comment_created': datetime.datetime(2021, 7, 30, 12, 42, 53, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 679895398, 'comment_body': 'Yeah, I have tested this change', 'comment_created': datetime.datetime(2021, 7, 30, 12, 43, 8, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 679995569, 'comment_body': 'Is this the reason why fargate worker was failing?', 'comment_created': datetime.datetime(2021, 7, 30, 15, 3, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 679997136, 'comment_body': 'Not sure, why the fargate was restarting is still a mystery', 'comment_created': datetime.datetime(2021, 7, 30, 15, 5, 36, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}]","[{'commit_sha': '0804aa4a900201a745464b32c86ecc6908bebc77', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe5906483c684b5bc6a8fb95cc40f3811afed202', 'committer_username': 'RishabhJain2018', 'committer_name': 'Rishabh Jain', 'committer_email': 'rishabhjain2018@gmail.com', 'commit_date': datetime.datetime(2015, 5, 2, 4, 7, 52, tzinfo=datetime.timezone.utc)}]",,32800267,,User,,23,,18,8
703849008,Limit pod logs for stdout for code upload base challenges,"Context: Code upload based challenges

-[x] Limit pod logs for stdout for code upload base challenges

@KhalidRmb 
cc: @Ram81 ",True,3564,https://api.github.com/repos/Cloud-CV/EvalAI/pulls/3564,https://github.com/Cloud-CV/EvalAI/pull/3564,closed,1,0,1,3,0,0,1,0,[{'name': 'can-be-merged'}],2021-08-04 18:46:49+00:00,2021-08-07 21:03:21+00:00,267392.0,"3 days, 2:16:32",[],"[{'commit_sha': '96e54561d8c45dbda506ebc0587f1550fd52aadb', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1df06b7912bacfadef107fd87eea96d971d1450', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd12257eeaad1c90d0adc9c3324152865da88430', 'committer_username': 'RishabhJain2018', 'committer_name': 'Rishabh Jain', 'committer_email': 'rishabhjain2018@gmail.com', 'commit_date': datetime.datetime(2015, 5, 2, 4, 7, 52, tzinfo=datetime.timezone.utc)}]",,32800267,,User,,23,,18,8
709861831,GitHub: Add bi-directional sync,"Context: Github Bi-directional Sync

Related Pull Request: https://github.com/Cloud-CV/EvalAI-Starters/pull/52

Models Considered:
- [x] Challenge
- [x] Challenge Phase
 
Deliverables:
- [x] Add github_token
- [x] Add sync for non-file fields
- [x] Add sync for file fields for challenge model
- [x] Add only updated fields commit 

Testing without celery:
https://user-images.githubusercontent.com/32800267/129727539-80d18fd0-7cdc-489d-a3c6-0b346ce605c8.mp4


@KhalidRmb 
cc: @Ram81 ",False,3565,https://api.github.com/repos/Cloud-CV/EvalAI/pulls/3565,https://github.com/Cloud-CV/EvalAI/pull/3565,open,309,0,8,13,5,60,0,0,[],2021-08-12 00:12:08+00:00,,0.0,,"[{'comment_id': 693635064, 'comment_body': 'Please rename class to `GithubInterface`', 'comment_created': datetime.datetime(2021, 8, 23, 3, 54, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 694968414, 'comment_body': 'rename the method to `get_github_url`', 'comment_created': datetime.datetime(2021, 8, 24, 15, 34, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 694970249, 'comment_body': 'Please add docstring for this method', 'comment_created': datetime.datetime(2021, 8, 24, 15, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 694970344, 'comment_body': 'same here', 'comment_created': datetime.datetime(2021, 8, 24, 15, 36, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 694970453, 'comment_body': 'same here', 'comment_created': datetime.datetime(2021, 8, 24, 15, 36, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 694971066, 'comment_body': 'same here', 'comment_created': datetime.datetime(2021, 8, 24, 15, 37, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 694971396, 'comment_body': 'rename to `is_repository`', 'comment_created': datetime.datetime(2021, 8, 24, 15, 37, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 694971834, 'comment_body': 'Why are we putting a celery task in a `utils` file?', 'comment_created': datetime.datetime(2021, 8, 24, 15, 38, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 694972649, 'comment_body': 'please use global imports. Imports in methods is not a good practice. We have to move away from local imports', 'comment_created': datetime.datetime(2021, 8, 24, 15, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 694973107, 'comment_body': 'Please make a generic method to deserialize object and use that', 'comment_created': datetime.datetime(2021, 8, 24, 15, 39, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 694974207, 'comment_body': 'We should add a log here. \r\n\r\nQuestion: When would the `github_repository` will have a value that is not a git repo?', 'comment_created': datetime.datetime(2021, 8, 24, 15, 40, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 694974990, 'comment_body': ""This field should be present in a common utils file from where we can import this anywhere in the project. It shouldn't be local to the method"", 'comment_created': datetime.datetime(2021, 8, 24, 15, 41, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 694975172, 'comment_body': 'same here', 'comment_created': datetime.datetime(2021, 8, 24, 15, 41, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 694975346, 'comment_body': 'move to global imports', 'comment_created': datetime.datetime(2021, 8, 24, 15, 42, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 694975614, 'comment_body': 'create a util method for deserializing and use that', 'comment_created': datetime.datetime(2021, 8, 24, 15, 42, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 694975759, 'comment_body': 'move to a common util file', 'comment_created': datetime.datetime(2021, 8, 24, 15, 42, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 694975914, 'comment_body': 'same here', 'comment_created': datetime.datetime(2021, 8, 24, 15, 42, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 694977050, 'comment_body': '@savish28 the method names are confusing `github_challenge_sync` and `github_sync_challenge` (post save hook) it is not clear what these methods are for. Please rename the methods.', 'comment_created': datetime.datetime(2021, 8, 24, 15, 44, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 694981956, 'comment_body': '@Ram81, In case the GitHub token expires or the repo is deleted -> Any possible situation in which we cannot connect to github repo.', 'comment_created': datetime.datetime(2021, 8, 24, 15, 49, 53, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 694983611, 'comment_body': 'This is the main function which would be called from posthook.', 'comment_created': datetime.datetime(2021, 8, 24, 15, 51, 49, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 694984911, 'comment_body': 'The reason of needing imports in methods was bcz we are importing it was a circular import.\r\nmodels.py -> github_utils.py\r\ngithub_utils.py -> serializer -> model.', 'comment_created': datetime.datetime(2021, 8, 24, 15, 53, 23, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 695021307, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 8, 24, 16, 38, 21, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 695021410, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 8, 24, 16, 38, 28, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 695021515, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 8, 24, 16, 38, 35, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 695021612, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 8, 24, 16, 38, 42, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 695021816, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 8, 24, 16, 38, 57, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 695021911, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 8, 24, 16, 39, 5, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 695022013, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 8, 24, 16, 39, 15, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 695022615, 'comment_body': 'Since it is a circular import.', 'comment_created': datetime.datetime(2021, 8, 24, 16, 39, 59, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 695022843, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 8, 24, 16, 40, 20, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 695022911, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 8, 24, 16, 40, 27, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 695022971, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 8, 24, 16, 40, 32, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 695023081, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 8, 24, 16, 40, 37, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 695023161, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2021, 8, 24, 16, 40, 43, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 695023231, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 24, 16, 40, 49, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 695023304, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 24, 16, 40, 54, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 706902068, 'comment_body': ""@savish28 is there a way we can use the serializer or model to generate this list of fields? Currently, if a new field gets added we'll have to add it here manually. It might happen that some forgets adding it here which would mean there is no sync happening for that field. If we can use models/serializer for this list it would be great"", 'comment_created': datetime.datetime(2021, 9, 12, 20, 39, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 706902487, 'comment_body': '@savish28 can we move this class to a separate file called `github_interface.py`', 'comment_created': datetime.datetime(2021, 9, 12, 20, 40, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 706903158, 'comment_body': 'Change to `Challenge non-file field update`', 'comment_created': datetime.datetime(2021, 9, 12, 20, 42, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 706903647, 'comment_body': 'Change to `Challenge file fields update`', 'comment_created': datetime.datetime(2021, 9, 12, 20, 43, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 706903978, 'comment_body': 'Why is this a info log? This should be a error log', 'comment_created': datetime.datetime(2021, 9, 12, 20, 44, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 706904512, 'comment_body': 'Change to `Challenge phase non-file field update`', 'comment_created': datetime.datetime(2021, 9, 12, 20, 45, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 706905544, 'comment_body': 'Change to `Challenge phase file fields update`', 'comment_created': datetime.datetime(2021, 9, 12, 20, 47, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 706905697, 'comment_body': 'remove newline', 'comment_created': datetime.datetime(2021, 9, 12, 20, 48, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 706905771, 'comment_body': 'why do we have a break here?', 'comment_created': datetime.datetime(2021, 9, 12, 20, 48, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 706905943, 'comment_body': 'same here, Why is this not a error log?', 'comment_created': datetime.datetime(2021, 9, 12, 20, 48, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 706906231, 'comment_body': 'rename to `challenge_details_sync`', 'comment_created': datetime.datetime(2021, 9, 12, 20, 49, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 706906401, 'comment_body': 'change to `challenge_phase_details_sync`', 'comment_created': datetime.datetime(2021, 9, 12, 20, 49, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 706909416, 'comment_body': '@Ram81, we only wish to have only selected fields(that are editable from frontend) in the sync and not all fields, getting it from serializer would mean using all fields and that is undesirable because there are a lot of fields that are not in the challenge_config and might also be critical to share those. ', 'comment_created': datetime.datetime(2021, 9, 12, 20, 56, 29, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 706910261, 'comment_body': 'Because at a time only one challenge_phase is updated. Because it is initiated by post-hook of ChallengePhase', 'comment_created': datetime.datetime(2021, 9, 12, 20, 58, 26, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 706913456, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 9, 12, 21, 11, 7, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 706913462, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 9, 12, 21, 11, 16, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 706913467, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 9, 12, 21, 11, 22, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 706913518, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 9, 12, 21, 12, 3, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 706913524, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 9, 12, 21, 12, 10, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 706913561, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 9, 12, 21, 12, 19, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 706913565, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 9, 12, 21, 12, 27, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 706913571, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 9, 12, 21, 12, 33, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 706913574, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 9, 12, 21, 12, 39, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 706913584, 'comment_body': 'Yeah sure :) Done.', 'comment_created': datetime.datetime(2021, 9, 12, 21, 12, 49, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}]","[{'commit_sha': '4851c3d2dd971865e42c3981ed426743a235e688', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96af768b3d80c97738e6d363e06aee96898d3abe', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c0585ba544083fb4f40de7b20cbb78c947dab57', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b8f5eee1b841ba89754386724d5781824cb865c', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43e3eece88472de104a44bbb2028e3e9fbc64d9b', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f90106869a7366d45570feb113cb498a61a14db', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33cb3425504fc3d9ec830505433cdec79094886a', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22d312c31653be05baa4aacc982d8adf4771fe4e', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d7198927b33f0d458d08f3d4e4b1d91e5f99a6d', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46e4a11e1896e10c50b7883653e0f53e578f02a3', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8693a33229970966e9cab7aa04faced47cfa9248', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fd2db6385a3b569cca8b5eba00b3a0e00f3f737', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77986bf8f30fd511913d8063c5bea2546a7724c7', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}]",,32800267,,User,,23,,18,8
657550037,Add django admin actions to delete evaluation cluster for code upload challenge,"Context: Code upload challenge Addition

Deliverables:
- [x] Add Django admin actions to start/delete evaluation cluster for code upload challenge.
- [x] Add aws_util functions to delete evaluation cluster for code upload challenge 

Testing Status: Not Tested on Aws

@KhalidRmb 
cc: @Ram81 ",False,3440,https://api.github.com/repos/Cloud-CV/EvalAI/pulls/3440,https://github.com/Cloud-CV/EvalAI/pull/3440,open,429,0,5,9,9,12,0,0,[],2021-05-29 22:57:03+00:00,,0.0,,"[{'comment_id': 652820625, 'comment_body': '@savish28 Can you add a brief comment here as to what this is for?', 'comment_created': datetime.datetime(2021, 6, 16, 15, 47, 25, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 652822716, 'comment_body': 'Please write this in alphabetical order.', 'comment_created': datetime.datetime(2021, 6, 16, 15, 49, 51, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 652824277, 'comment_body': '`cluster`->`cluster(s)`', 'comment_created': datetime.datetime(2021, 6, 16, 15, 51, 40, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 652851995, 'comment_body': 'What if this fails? Need to capture this and trigger a failure in this method as well @savish28 , with the proper error response from the method\r\ncc: @Ram81 ', 'comment_created': datetime.datetime(2021, 6, 16, 16, 25, 9, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 652853868, 'comment_body': 'Why are you importing here and not at the top? Is this going to be a celery task? Same for other methods.', 'comment_created': datetime.datetime(2021, 6, 16, 16, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 652855985, 'comment_body': 'This error message is very generic. There are a bunch of calls in this workflow, and better to be more specific with where the failure happened, and show that to the user. (Make sure you display the proper HTTP error message along with context. If not feasible, a more verbose custom message regarding the failure from all the try/except blocks.)', 'comment_created': datetime.datetime(2021, 6, 16, 16, 30, 25, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 652857397, 'comment_body': '@KhalidRmb It is imported like this in order to preserve circular imports. The current pipeline of creating cluster also maintains similar code structure.', 'comment_created': datetime.datetime(2021, 6, 16, 16, 32, 12, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 652867904, 'comment_body': 'Oh...got it', 'comment_created': datetime.datetime(2021, 6, 16, 16, 46, 55, tzinfo=datetime.timezone.utc), 'commenter': 'KhalidRmb', 'type': 'User'}, {'comment_id': 652868637, 'comment_body': 'In the cluster setup when we create route table we associate them \r\n', 'comment_created': datetime.datetime(2021, 6, 16, 16, 47, 48, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 652872062, 'comment_body': 'Updated as a comment in the code', 'comment_created': datetime.datetime(2021, 6, 16, 16, 52, 15, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 652872184, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2021, 6, 16, 16, 52, 24, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}, {'comment_id': 652872306, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2021, 6, 16, 16, 52, 33, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}]","[{'commit_sha': 'fb96b88ae1b691365808006cb20451898db7e32b', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e69200b84e82af99fb9ef1644467e0d685a2d14e', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6acac75f249dff722e56a286e3d408d66909d4d5', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58fed9a1d61f9abc9a02b76b0a7a15de0b06ba02', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1583620c008f25c63129b4011ae51018b0f9b490', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b29ffbc8512d817e522f37f974555cf6a7f5874', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e1840e245320784ed84e3f89f3a329514533a10', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2e09870de0a1549f37bce673c90bb42919a7d96', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2747c366e1e0dcacd2626c0eab8d4f00d91a1588', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}]",,32800267,,User,,23,,18,8
704633245,Sync: Bi-directional sync from EvalAI to github,"Context: Bi-directional GitHub sync

Deliverables:
- [x] Avoiding unnecessary EvalAI calls for the GitHub sync.
- [x] Add Github token

@KhalidRmb 
cc: @Ram81 ",False,52,https://api.github.com/repos/Cloud-CV/EvalAI-Starters/pulls/52,https://github.com/Cloud-CV/EvalAI-Starters/pull/52,open,8,1,1,2,0,2,0,0,[],2021-08-05 11:46:41+00:00,,0.0,,"[{'comment_id': 693628763, 'comment_body': '@savish28 can you explain why we need this check ?', 'comment_created': datetime.datetime(2021, 8, 23, 3, 30, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Ram81', 'type': 'User'}, {'comment_id': 693650018, 'comment_body': '@Ram81, this is to prevent syncing back changes to EvalAi which came through evalai. So the commits we make start with this.', 'comment_created': datetime.datetime(2021, 8, 23, 4, 46, 57, tzinfo=datetime.timezone.utc), 'commenter': 'savish28', 'type': 'User'}]","[{'commit_sha': '96bcd4095ef81fe0fe3c4197c5d58dbc7106f242', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f06ae0118ddbaaa1cbd95545ed863e22d2ea7ef5', 'committer_username': 'savish28', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 14, 17, 22, 18, tzinfo=datetime.timezone.utc)}]",,32800267,,User,,23,,18,8

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
71516397,EvalAI,Cloud-CV/EvalAI,Python,782,1737,54,140,2423,425,42,194,"[{'id': 716974571, 'number': 3577, 'closed': datetime.datetime(2021, 8, 21, 18, 27, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 20, 20, 13, 35, tzinfo=datetime.timezone.utc), 'time_taken': 80050.0, 'time_delta': '22:14:10', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 709861831, 'number': 3565, 'closed': None, 'created': datetime.datetime(2021, 8, 12, 0, 12, 8, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 309, 'deletions': 0, 'state': 'open'}, {'id': 703849008, 'number': 3564, 'closed': datetime.datetime(2021, 8, 7, 21, 3, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 18, 46, 49, tzinfo=datetime.timezone.utc), 'time_taken': 267392.0, 'time_delta': '3 days, 2:16:32', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 699883233, 'number': 3560, 'closed': datetime.datetime(2021, 7, 31, 14, 21, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 29, 22, 37, 9, tzinfo=datetime.timezone.utc), 'time_taken': 143048.0, 'time_delta': '1 day, 15:44:08', 'additions': 56, 'deletions': 32, 'state': 'closed'}, {'id': 692027795, 'number': 3536, 'closed': datetime.datetime(2021, 7, 24, 16, 36, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 18, 4, 33, 22, tzinfo=datetime.timezone.utc), 'time_taken': 561786.0, 'time_delta': '6 days, 12:03:06', 'additions': 12, 'deletions': 26, 'state': 'closed'}, {'id': 691915345, 'number': 3535, 'closed': datetime.datetime(2021, 7, 18, 18, 32, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 17, 11, 4, 29, tzinfo=datetime.timezone.utc), 'time_taken': 113292.0, 'time_delta': '1 day, 7:28:12', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 691753912, 'number': 3533, 'closed': datetime.datetime(2021, 7, 18, 18, 33, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 21, 32, 20, tzinfo=datetime.timezone.utc), 'time_taken': 162051.0, 'time_delta': '1 day, 21:00:51', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 687316145, 'number': 3530, 'closed': datetime.datetime(2021, 7, 24, 16, 37, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 11, 11, 7, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1143028.0, 'time_delta': '13 days, 5:30:28', 'additions': 528, 'deletions': 497, 'state': 'closed'}, {'id': 684467501, 'number': 3523, 'closed': datetime.datetime(2021, 7, 14, 15, 21, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 15, 16, 5, tzinfo=datetime.timezone.utc), 'time_taken': 691518.0, 'time_delta': '8 days, 0:05:18', 'additions': 39, 'deletions': 15, 'state': 'closed'}, {'id': 684384288, 'number': 3522, 'closed': datetime.datetime(2021, 7, 14, 16, 16, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 13, 35, 23, tzinfo=datetime.timezone.utc), 'time_taken': 700896.0, 'time_delta': '8 days, 2:41:36', 'additions': 12, 'deletions': 0, 'state': 'closed'}, {'id': 679396470, 'number': 3506, 'closed': datetime.datetime(2021, 6, 29, 16, 50, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 28, 20, 54, 42, tzinfo=datetime.timezone.utc), 'time_taken': 71749.0, 'time_delta': '19:55:49', 'additions': 65, 'deletions': 33, 'state': 'closed'}, {'id': 674101451, 'number': 3493, 'closed': datetime.datetime(2021, 6, 23, 9, 24, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 20, 21, 36, 6, tzinfo=datetime.timezone.utc), 'time_taken': 215309.0, 'time_delta': '2 days, 11:48:29', 'additions': 351, 'deletions': 22, 'state': 'closed'}, {'id': 674086502, 'number': 3492, 'closed': datetime.datetime(2021, 7, 8, 18, 2, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 20, 19, 28, 49, tzinfo=datetime.timezone.utc), 'time_taken': 1550008.0, 'time_delta': '17 days, 22:33:28', 'additions': 99, 'deletions': 40, 'state': 'closed'}, {'id': 668948009, 'number': 3480, 'closed': datetime.datetime(2021, 7, 7, 15, 35, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 12, 20, 36, 11, tzinfo=datetime.timezone.utc), 'time_taken': 2141982.0, 'time_delta': '24 days, 18:59:42', 'additions': 17, 'deletions': 3, 'state': 'closed'}, {'id': 661218295, 'number': 3452, 'closed': datetime.datetime(2021, 6, 28, 17, 19, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 3, 21, 17, 21, tzinfo=datetime.timezone.utc), 'time_taken': 2145718.0, 'time_delta': '24 days, 20:01:58', 'additions': 327, 'deletions': 25, 'state': 'closed'}, {'id': 657550037, 'number': 3440, 'closed': None, 'created': datetime.datetime(2021, 5, 29, 22, 57, 3, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 429, 'deletions': 0, 'state': 'open'}, {'id': 657441858, 'number': 3436, 'closed': datetime.datetime(2021, 6, 5, 15, 4, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 29, 10, 20, 9, tzinfo=datetime.timezone.utc), 'time_taken': 621843.0, 'time_delta': '7 days, 4:44:03', 'additions': 252, 'deletions': 36, 'state': 'closed'}, {'id': 651480578, 'number': 3429, 'closed': datetime.datetime(2021, 5, 31, 19, 17, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 24, 16, 53, 58, tzinfo=datetime.timezone.utc), 'time_taken': 613410.0, 'time_delta': '7 days, 2:23:30', 'additions': 129, 'deletions': 7, 'state': 'closed'}, {'id': 599728966, 'number': 3355, 'closed': datetime.datetime(2021, 5, 31, 19, 20, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 24, 14, 15, 26, tzinfo=datetime.timezone.utc), 'time_taken': 5893519.0, 'time_delta': '68 days, 5:05:19', 'additions': 89, 'deletions': 72, 'state': 'closed'}, {'id': 599535204, 'number': 3354, 'closed': datetime.datetime(2021, 4, 4, 14, 31, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 24, 9, 43, 32, tzinfo=datetime.timezone.utc), 'time_taken': 967685.0, 'time_delta': '11 days, 4:48:05', 'additions': 6, 'deletions': 11, 'state': 'closed'}, {'id': 594876708, 'number': 3322, 'closed': datetime.datetime(2021, 4, 3, 21, 5, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 17, 16, 25, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1485573.0, 'time_delta': '17 days, 4:39:33', 'additions': 77, 'deletions': 10, 'state': 'closed'}, {'id': 592525933, 'number': 3310, 'closed': datetime.datetime(2021, 4, 7, 14, 10, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 14, 11, 34, 47, tzinfo=datetime.timezone.utc), 'time_taken': 2082969.0, 'time_delta': '24 days, 2:36:09', 'additions': 7, 'deletions': 7, 'state': 'closed'}, {'id': 591149047, 'number': 3305, 'closed': datetime.datetime(2021, 4, 7, 14, 11, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 11, 20, 19, 34, tzinfo=datetime.timezone.utc), 'time_taken': 2310720.0, 'time_delta': '26 days, 17:52:00', 'additions': 7, 'deletions': 3, 'state': 'closed'}, {'id': 590822343, 'number': 3303, 'closed': datetime.datetime(2021, 3, 11, 16, 20, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 11, 12, 24, 13, tzinfo=datetime.timezone.utc), 'time_taken': 14160.0, 'time_delta': '3:56:00', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
128262638,EvalAI-Starters,Cloud-CV/EvalAI-Starters,Python,154,73,9,12,54,32,7,20,"[{'id': 704633245, 'number': 52, 'closed': None, 'created': datetime.datetime(2021, 8, 5, 11, 46, 41, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 8, 'deletions': 1, 'state': 'open'}]"
