pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1394143364,"GSoC Midterm Evaluation: Changing the way the serialize, serialize_into and deserialize functions work","## Midterm GSoC Update

Closes #2326.
This pull request contains updates for my Google Summer of Code (GSoC) project at the midterm evaluation stage.

Second PR (Final Evaluation Part1): [Implementing (de)serialization routines for generic data types](https://github.com/enigma-dev/enigma-dev/pull/2351)
Third PR (Final Evaluation Part2): [Adding support for JSON format](https://github.com/enigma-dev/enigma-dev/pull/2359)


## Existing Errors
- [x] Fixing existing errors.

## Updating Functions
- [x] Updating `enigma_internal_sizeof` function.
- [x] Updating `serialize_into` function.
- [x] Updating `serialize` function.
- [x] Updating `deserialize` function.
- [x] Updating `resize_buffer_for` function.
- [x] Updating `enigma_internal_deserialize` function.

## Testing Functions ([SOG/unit tests](https://github.com/FaresAtef1/enigma-dev/tree/GSoC-Part1/CommandLine/testing/SimpleTests/game_save_load.multi))
- [x] Testing `enigma_internal_sizeof` function.
- [x] Testing `serialize_into` function.
- [x] Testing `serialize` function.
- [x] Testing `deserialize` function.
- [x] Testing `resize_buffer_for` function.
- [x] Testing `enigma_internal_deserialize` function.
- [x] SOG test for `game_save_buffer` and `game_load_buffer`

## Organization
- [x] Making `detect_size.h` file.
- [x] Better naming for all `serialization.h` functions.
- [x] Making a `Serialization` directory.
- [x] Making `serialization_fwd_decl.h` file.

## To Be Done Before Merging
- [x] Resolve multiple definitions of the function `Size` [gist](https://gist.github.com/FaresAtef1/de60767d8b6766fc00009e4cab096497) (To have Cleaner Code)
- [x] Replace has_byte_size_free_function_v2
- [x] Replace has_serialize_into_fn_free_function_v2
- [x] Replace has_serialize_free_function_v2
- [x] Replace has_deserialize_free_function_v2
- [x] Replace has_resize_buffer_for_free_function_v2
- [x] Replace has_enigma_internal_deserialize_free_function_v2

## Newly Implemented Features
- `HAS_FREE_FUNCTION` macro in [`detect_serialization.h`](https://github.com/FaresAtef1/enigma-dev/blob/GSoC-Part3/ENIGMAsystem/SHELL/Universal_System/Serialization/detect_serialization.h#L137), which is used to determine whether there exists a free function that can be called with a particular signature.
``` cpp
    HAS_FREE_FUNCTION(NAMESPACE, NAME, PARAMETERS...)
```

## Adding new types for the bytes format
Create a new file in the [Types_Impl_Bytes](https://github.com/FaresAtef1/enigma-dev/tree/GSoC-Part3/ENIGMAsystem/SHELL/Universal_System/Serialization/Bytes_Serialization/Types_Impl_Bytes) directory for your new type, and then include this file in the [bytes_types_serialization_includes.h](https://github.com/FaresAtef1/enigma-dev/blob/GSoC-Part3/ENIGMAsystem/SHELL/Universal_System/Serialization/Bytes_Serialization/bytes_types_serialization_includes.h) file.

### Every new data type in our system should implement the following functions
`is_new_type` is a type trait that should be implemented in [`type_traits.h`](https://github.com/FaresAtef1/enigma-dev/blob/GSoC-Part3/ENIGMAsystem/SHELL/Universal_System/Serialization/type_traits.h).

- `byte_size`
``` cpp
    template <typename T>
    matches_t<T, std::size_t, is_new_type> inline byte_size(const T& value) {
        std::size_t totalSize = // ....
        return totalSize;
    }
```

- `internal_serialize_into_fn`
``` cpp
    template <typename T>
    matches_t<T, void, is_new_type> inline internal_serialize_into_fn(std::byte *iter, T &&value) {
        // ....
    }
```

- `internal_serialize_fn`
``` cpp
    template <typename T>
    matches_t<T, std::vector<std::byte>, is_new_type> inline internal_serialize_fn(T &&value) {
        std::vector<std::byte> result;
        // ....
        return result;
    }
```

- `internal_deserialize_fn`
``` cpp
    template <typename T>
    matches_t<T, T, is_new_type> inline internal_deserialize_fn(std::byte *iter) {
        // ....
    }
```

- `internal_resize_buffer_for_fn`
``` cpp
    template <typename T>
    matches_t<T, void, is_new_type> inline internal_resize_buffer_for_fn(std::vector<std::byte> &buffer, T &&value) {
        // ....
    }
```

- `enigma_internal_deserialize_fn`
``` cpp
    template <typename T>
    matches_t<T, void, is_new_type> inline void enigma_internal_deserialize_fn(T &value, std::byte *iter, std::size_t &len) {
        value = ....
        len += ....
    }
```

## Sample game that is compatible with the AST_Generation branch
[Balloon_Pop](https://drive.google.com/drive/folders/1E2CgPBlUpRraGMZZLNSydRsgW-TI86jZ?usp=drive_link) (_It is the same game in the [ENIGMA](https://enigma-dev.org/edc/games.php?game=113) site but with modified scripts_).

## Ongoing Work


## What's Next
GSoC Final Evaluation: Implementing (de)serialization routines for generic data types
",False,2345,https://api.github.com/repos/enigma-dev/enigma-dev/pulls/2345,https://github.com/enigma-dev/enigma-dev/pull/2345,open,1171,770,29,32,0,12,0,0,[],2023-06-15 13:26:50+00:00,,0.0,,"[{'comment_id': 1251903741, 'comment_body': ""Don't commit the auto-generated `.vscode` files."", 'comment_created': datetime.datetime(2023, 7, 4, 11, 32, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1251903929, 'comment_body': 'Same thing with this file as well.', 'comment_created': datetime.datetime(2023, 7, 4, 11, 32, 30, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1251904688, 'comment_body': ""I don't think this change should be pushed either, cause it affects `emake` afaik."", 'comment_created': datetime.datetime(2023, 7, 4, 11, 33, 9, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1251911758, 'comment_body': 'You should add a generalized version of this struct using macros in `detect_serialization.h` (with the name `has_##NAME##_free_function` imo for consistency) so that it can also be used to check for other functions.\r\n\r\nAlso, consider renaming `Size` to `byte_size` so that it is consistent with the rest of the functions. Then, the `_v` form would be `has_byte_size_free_function_v`.', 'comment_created': datetime.datetime(2023, 7, 4, 11, 40, 19, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1251914969, 'comment_body': ""I don't think the changes in this file are necessary?"", 'comment_created': datetime.datetime(2023, 7, 4, 11, 43, 30, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1251915711, 'comment_body': 'Hmm, why the change from U to V?', 'comment_created': datetime.datetime(2023, 7, 4, 11, 44, 16, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1251922406, 'comment_body': 'Using different template parameters for the `Check` struct, instead of T and U, would enhance code clarity and readability. We discussed this in a previous conversation.\r\n', 'comment_created': datetime.datetime(2023, 7, 4, 11, 51, 23, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}, {'comment_id': 1251925006, 'comment_body': 'Yeah', 'comment_created': datetime.datetime(2023, 7, 4, 11, 53, 43, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}, {'comment_id': 1251928992, 'comment_body': 'Ok, i will consider that.', 'comment_created': datetime.datetime(2023, 7, 4, 11, 56, 19, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}, {'comment_id': 1256148044, 'comment_body': 'To eliminate a warning.', 'comment_created': datetime.datetime(2023, 7, 7, 17, 7, 12, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}, {'comment_id': 1273982357, 'comment_body': ""This is a very large review, and it's made more difficult by the automatic formatting changes being thrown in. Can you remove these from the PR, or create a separate PR to check them in and then rebase yours onto it?\r\n\r\nIn general, formatting and refactors are best kept separate from functional changes as it improves reviewability and makes it easier to tell why a change was made later (e.g. when picking through the [blame layer](https://git-scm.com/docs/git-blame))."", 'comment_created': datetime.datetime(2023, 7, 25, 19, 16, 53, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 1274104269, 'comment_body': 'Sure I will do that. ', 'comment_created': datetime.datetime(2023, 7, 25, 20, 46, 39, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}]","[{'commit_sha': '35b82acf91eb5da1af39389bd352ba33bcdafbfd', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d72ef73d13751450269d5ab95a29e51c161407f', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '139c0a9e9e0570a322aab092a511b45e10253ca2', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1895c11098ded61f8749f10533301a5ce3acd9be', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2efaa6faa38978111bbf168d3304b6c93eff92cd', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cf28b94e068cf03eb54e177bad733d8e7a53f4b', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69a30b65de7e831018f2eef32530b85bb7f8a829', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3dc2a85946da3764032e47da10e9795223224008', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b849d35b22c5ada3a37401273b031c8c5467504', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcff09953b8e517da4dd7a9e060155601a2c0546', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5081146338ea575f03509be9222ada5fec98f0c', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '087020d16ed7ae6669e1b78321428a3277639446', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '791561e4ec020f7665b05a1fe6640c1aacb530fa', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ce89ca0f4765231b639f7a52c463fc708608406', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b2bac0f30da6cb3eaa1f57adac80477ea8d6fba', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67e3ce252fe8e9ac6de8e2873091c0e5ee8851ec', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76fb4960439c7c41d087bf72eca347268353a6ac', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9929afc5e97a869e0073d014ce7d0634ca6ac6d9', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21e131f2433980b1d132eae43e45e1e589234ed6', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9d40a256bedab7f89331793ecbb1b1a16f25c28', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d03e5721d4f9e19481065e565e3af4adea143ed', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfae483355081004c2e498c408034a8bd2f2c236', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cea578c5195a3885d3c00326e8b6c2b77599fa83', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b2d69f4d056cdeb4f39e74143d2b5fbfa80eb48', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12cb1baca1045a9bc262be86e6d14fa654018279', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ec12df1f9cb20d3f84bfa53e3d248f9554494a5', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff96c660fd791cda95906524ba7de211ab1fde03', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f128a5fcbdc8a112846c65c75e2947e22e2089d', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5375f4a4329d9a63aa1d6de5a29dcf92b6f0917d', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9087a654ed6420e0c2135a8f9c9aaaed04aa9e16', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38393bc9e4d84b3f2b01aac4df1ce25a729c3c85', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dfdae9f9928135bb9a1706e03bcd1e9216fb828', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}]",Fares Atef,96792115,faresatef553@gmail.com,User,,19,,32,28
1467908885,GSoC Final Evaluation Part1: Implementing (de)serialization routines for generic data types,"## Final GSoC Part1 Update

Closes #2326.
This pull request contains updates for my Google Summer of Code (GSoC) project at the Final evaluation stage.

First PR (Midterm Evaluation Part): [Changing the way the serialize, serialize_into and deserialize functions work](https://github.com/enigma-dev/enigma-dev/pull/2345)
Third PR(Final Evaluation Part2): [Adding support for JSON format](https://github.com/enigma-dev/enigma-dev/pull/2359)

## Feature Implementation
- [x] Adding support for `std::vector`.
- [x] Adding support for `std::map`.
- [x] Adding support for `std::complex`.
- [x] Adding support for `std::set`.
- [x] Adding support for `std::tuple`.
- [x] Adding support for `std::queue`.
- [x] Adding support for `std::stack`.
- [x] Adding support for `std::pair`.

## Testing Functions ([unit tests](https://github.com/FaresAtef1/enigma-dev/tree/GSoC-Part2/CommandLine/testing/Tests/generic_types_serialize_tests))
- [x] Testing `std::vector` functions.
- [x] Testing `std::map` functions.
- [x] Testing `std::complex` functions.
- [x] Testing `std::set` functions.
- [x] Testing `std::tuple` functions.
- [x] Testing `std::queue` functions.
- [x] Testing `std::stack` functions.
- [x] Testing `std::pair` functions.


## Organization
- [x] Seperate file for each type. 
- [x] `type_traits.h` for all the `is_std_type`.
- [x] Move `insert_back` to a better place.
- [x] `Types_Implementation` new directory.
- [x] Clean `serialization_fwd_decl.h`.

## To Be Done Before Merging
- [x] Update `byte_size` for `std::vector` and `std::map`. 
- [x] Update `byte_size` for `lua_table`.
- [x] Get rid of `enigma_internal_sizeof_type` and replace with `byte_size` directly.
- [x] Replace `enable_if<is_same_v<>>` with `is_type_t`.
- [x] Replace all r-value refs.

## Adding new types
See `Adding new types for the bytes format` section [here](https://github.com/enigma-dev/enigma-dev/pull/2345).

## Sample game that is compatible with the AST_Generation branch
[Balloon_Pop](https://drive.google.com/drive/folders/1E2CgPBlUpRraGMZZLNSydRsgW-TI86jZ?usp=drive_link) (_It is the same game in the [ENIGMA](https://enigma-dev.org/edc/games.php?game=113) site but with modified scripts_).

## Ongoing Work

## What's Next
GSoC Final Evaluation 2: Adding support for other serialization formats
",False,2351,https://api.github.com/repos/enigma-dev/enigma-dev/pulls/2351,https://github.com/enigma-dev/enigma-dev/pull/2351,open,3453,775,50,63,0,18,0,0,[],2023-08-09 04:34:21+00:00,,0.0,,"[{'comment_id': 1290922428, 'comment_body': 'To eliminate a warning.', 'comment_created': datetime.datetime(2023, 8, 11, 5, 55, 57, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}, {'comment_id': 1291135191, 'comment_body': 'One of the problems with doing byte size this way has to do with values whose serialized size may not match the compile time size, eg. `std::string`, whose serialized size is `8 + number of characters`  bytes instead of the probable 24-32 bytes size of the structure at compile time. Thus, it is probably best to loop over each element in the vector, call `enigma_internal_sizeof` on them and add that to a sum value. You also need to factor in the 8 bytes required to store the size of the vector itself.\r\n\r\nThe same applies to the function for `std::map`.', 'comment_created': datetime.datetime(2023, 8, 11, 9, 51, 6, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1291138625, 'comment_body': 'One thing you can do to make the code easier to follow is instead of having these one-liner functions that return a call to the implementation, just rename the implementation to the new name, eg. `enigma_internal_sizeof_lua_table` gets renamed to `byte_size` because these two functions are equivalent. That will reduce code size as well.', 'comment_created': datetime.datetime(2023, 8, 11, 9, 53, 37, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1291145901, 'comment_body': ""Going forward, I think it may be a good idea to either:\r\n- have six separate files for the six functions where each file contains implementations for all types\r\n- have (roughly) separate files for each type implementing all of the functions per file\r\n\r\nOf these, I like the second option more because it groups all the functionality for either a type or a set of related types together without noise from implementations for other types. In this case, I think it'd be a good idea to have all the functions for the integral and floating types in one file."", 'comment_created': datetime.datetime(2023, 8, 11, 10, 0, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1291151230, 'comment_body': 'I think the most important thing you should do before adding functions for more types is to update all of these to use the const-reference parameters and pattern match instead of using `is_same_v` so that it is less effort to move them later.', 'comment_created': datetime.datetime(2023, 8, 11, 10, 3, 22, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1291153380, 'comment_body': 'May be a good idea to create a trait for this pattern, by calling it `is_type_t` or even `is_t` to make the code much terser and easier to read.', 'comment_created': datetime.datetime(2023, 8, 11, 10, 5, 3, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1291154676, 'comment_body': ""I should've done this in my project itself, but we can probably drop the VBR encoding functions which are commented out because these will probably never be used."", 'comment_created': datetime.datetime(2023, 8, 11, 10, 6, 23, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1291158157, 'comment_body': 'Hmm, my plan for this file was to have just six lines of code: the six forward declarations for the functions that the user can implement. This way it is automatically documenting and we can just point users here to tell them what functions to implement. Its not required to forward-declare the templates which are specialized for the various types, because the user will get them anyways when `serialization.h` is included. For the type traits, I would suggest making a `type_traits.h` header file within this directory itself.', 'comment_created': datetime.datetime(2023, 8, 11, 10, 10, 3, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1291159097, 'comment_body': 'I think to match the comment style it is probably best to have ` **` instead of `***` (space instead of star)', 'comment_created': datetime.datetime(2023, 8, 11, 10, 11, 5, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1291163287, 'comment_body': 'Actually, given this condition, I think the function for `lua_table` is also wrong because I wrote it only thinking about fixed-size types as well. So it would probably be a good idea to fix that as well.', 'comment_created': datetime.datetime(2023, 8, 11, 10, 15, 29, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1291199872, 'comment_body': 'Ok, I will fix them.', 'comment_created': datetime.datetime(2023, 8, 11, 10, 54, 47, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}, {'comment_id': 1291201224, 'comment_body': 'Ok, and so I will do the same thing with `internal_resize_buffer_for_type` and `internal_resize_buffer_for_fn`.', 'comment_created': datetime.datetime(2023, 8, 11, 10, 56, 24, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}, {'comment_id': 1291206782, 'comment_body': 'Cool solution, I will do that.', 'comment_created': datetime.datetime(2023, 8, 11, 11, 2, 27, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}, {'comment_id': 1291217462, 'comment_body': 'Ok, I will do that. ', 'comment_created': datetime.datetime(2023, 8, 11, 11, 14, 49, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}, {'comment_id': 1291217816, 'comment_body': 'Nice idea.', 'comment_created': datetime.datetime(2023, 8, 11, 11, 15, 10, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}, {'comment_id': 1293859909, 'comment_body': 'To eliminate a warning.', 'comment_created': datetime.datetime(2023, 8, 14, 19, 3, 10, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}, {'comment_id': 1294225381, 'comment_body': '> I think to match the comment style it is probably best to have ` **` instead of `***` (space instead of star)\r\n\r\nOh, nevermind this, its been a while since I looked at this code and the comment style is indeed `***`. Oops.\r\n', 'comment_created': datetime.datetime(2023, 8, 15, 6, 1, 12, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1294227093, 'comment_body': 'np', 'comment_created': datetime.datetime(2023, 8, 15, 6, 4, 50, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}]","[{'commit_sha': '35b82acf91eb5da1af39389bd352ba33bcdafbfd', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d72ef73d13751450269d5ab95a29e51c161407f', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '139c0a9e9e0570a322aab092a511b45e10253ca2', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1895c11098ded61f8749f10533301a5ce3acd9be', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2efaa6faa38978111bbf168d3304b6c93eff92cd', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cf28b94e068cf03eb54e177bad733d8e7a53f4b', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69a30b65de7e831018f2eef32530b85bb7f8a829', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3dc2a85946da3764032e47da10e9795223224008', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b849d35b22c5ada3a37401273b031c8c5467504', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcff09953b8e517da4dd7a9e060155601a2c0546', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5081146338ea575f03509be9222ada5fec98f0c', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '087020d16ed7ae6669e1b78321428a3277639446', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '791561e4ec020f7665b05a1fe6640c1aacb530fa', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ce89ca0f4765231b639f7a52c463fc708608406', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b2bac0f30da6cb3eaa1f57adac80477ea8d6fba', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67e3ce252fe8e9ac6de8e2873091c0e5ee8851ec', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76fb4960439c7c41d087bf72eca347268353a6ac', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9929afc5e97a869e0073d014ce7d0634ca6ac6d9', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21e131f2433980b1d132eae43e45e1e589234ed6', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9d40a256bedab7f89331793ecbb1b1a16f25c28', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d03e5721d4f9e19481065e565e3af4adea143ed', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfae483355081004c2e498c408034a8bd2f2c236', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cea578c5195a3885d3c00326e8b6c2b77599fa83', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b2d69f4d056cdeb4f39e74143d2b5fbfa80eb48', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12cb1baca1045a9bc262be86e6d14fa654018279', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ec12df1f9cb20d3f84bfa53e3d248f9554494a5', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff96c660fd791cda95906524ba7de211ab1fde03', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f128a5fcbdc8a112846c65c75e2947e22e2089d', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5375f4a4329d9a63aa1d6de5a29dcf92b6f0917d', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9087a654ed6420e0c2135a8f9c9aaaed04aa9e16', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1c9c015c631ea3e8e200784a44d30f78ed9cede', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28b9bc293d1aa565743d3caba7ca983000b10686', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a695362f4705d2cc959982ce40a9a8e9de94d595', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91a8d82dd79ccf9e6641dda32fa7be95d2d47b6a', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c90d9299605c3b8c91ccb1d08d024e4857b39e57', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebfc85714a1fe5c60f733f166b49d553fa02bccd', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa5a21812dac875cab22aec5aa1e6c8bfeed20ac', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a648e460a2ddce616a7153197fbcd7355ac0998', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8f86eea99a24eeb3d244887d307cfc30e408836', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcb43fc4fb422dab6b046d99163453ee6075bf1a', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fe75f95d084ad16e9f46891a72d4a599d95a26e', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '477bf933471d73d57383f11c566fa6c08334d28e', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aaea74a907494c4bdf50abf24c8193f77bfbc47f', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7e3875eea1fc59bf01b90e74c73055a6bb16586', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec745d89c7e2e6b7090fb505ff5f5fde6729c979', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84bfc21c6aa84014e20fda35c4a6a28b43e21b3c', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8e043d9eed02e1a1973724db727a09990cd87bf', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1452e0503b21062dd784846abde942f7c0b7f5eb', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e531f52f4fcbbe08299b744eb09981fbf5b954b9', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6bc6af3d103c0533966c4c3ae059cada07517ce', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b4bef20b0aec8fcb165ea431eea10a546b45bf6', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fd7980853d6a6740e5e6ee9517fada69d779947', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98c325bff31a51d49f0e2dd577f23637e60a586f', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6566e975eb26dc6bbd9ac9c0c620b902cfa4ac31', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcd0b6b67f2713a6f8be9fc3d352824c1459556e', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f55cb10523722964ed3888bc3b08dd597b447286', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4efbddac63b1022c0359f0db1d68c5868a6c73de', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2c443bb56f262f8f2f4a05f09914c7cb3871c0a', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5b5ded40d8a220ee0eebb0dccb762789393ccab', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a1822b6bcf7826a7cc7d8332f88830dc9826b7b', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '574369e4ab3e6d33533fb54db083f1d3fc60ff81', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e8adff64c147ec5cbbbf6eb8e75660d37c1d33f', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10134d036bc44f25590c669403015ae7b0b74ca3', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}]",Fares Atef,96792115,faresatef553@gmail.com,User,,19,,32,28
1483233440,GSoC Final Evaluation Part2: Adding support for JSON format in the serialization system,"## Final GSoC Part2 Update

Closes #2326.
This pull request contains updates for my Google Summer of Code (GSoC) project at the Final evaluation stage.

First PR (Midterm Evaluation Part): [Changing the way the serialize, serialize_into and deserialize functions work](https://github.com/enigma-dev/enigma-dev/pull/2345)
Second PR (Final Evaluation Part1): [Implementing (de)serialization routines for generic data types](https://github.com/enigma-dev/enigma-dev/pull/2351)

## Feature Implementation
- [x] Implementing `serialize_into` for all the types.
- [x] Implementing `deserialize` for all the types.
- [x] Implementing serialization functions for `lua_table`.
- [x] Implementing serialization functions for `var`. 
- [x] Implementing serialization functions for `Object_Tiers`.
- [x] Implementing serialization functions for `enigma::Background`.
- [x] Implementing serialization functions for `enigma::AssetArray`.
- [x] Creating a map for script variables that is generated at compile time.
- [x] Implementing compiler serialization functions.
- [x] Modifing `game_save_buffer` and `game_load_buffer`.

## Testing Functions ([unit tests](https://github.com/FaresAtef1/enigma-dev/tree/GSoC-Part3/CommandLine/testing/Tests/JSON_serialization_tests)/[SOG](https://github.com/FaresAtef1/enigma-dev/tree/GSoC-Part3/CommandLine/testing/SimpleTests/game_save_load.multi))
- [x] Testing `serialize_into`.
- [x] Testing `deserialize`.
- [x] Unit testing for the generic types.
- [x] SOG tests for `game_save_buffer` and `game_load_buffer`.

## Organization
- [x] Make a new directory for JSON serialization functions.
- [x] Separate file for each type.
- [x] `bytes_serialization` namespace.
- [x] `JSON_serialization` namespace.
- [x] Make a new directory for `Types_Impl_Bytes`.
- [x] Make a new directory for `Types_Impl_JSON`.
- [x] Make new file `JSON_parsing_utilities.h`.

## To Be Done Before Merging
- [x] Modify `detect_serialization.h`.
- [x] Modify all `serialization.h` functions.
- [x] Replace `internal_serialize_into_fn` in `Object_Tiers`, `Background` and tests.
- [x] Documentation for all the files.
- [x] Extract `split` and `find_value` functions from the functions.
- [x] Add `remove_whitespaces` function.

## Adding new types for the JSON format
Create a new file in the [Types_Impl_JSON](https://github.com/FaresAtef1/enigma-dev/tree/GSoC-Part3/ENIGMAsystem/SHELL/Universal_System/Serialization/JSON_Serialization/Types_Impl_JSON) directory for your new type, and then include this file in the [JSON_types_serialization_includes.h](https://github.com/FaresAtef1/enigma-dev/blob/GSoC-Part3/ENIGMAsystem/SHELL/Universal_System/Serialization/JSON_Serialization/JSON_types_serialization_includes.h) file.

### Every new data type in our system should implement the following functions
- `internal_serialize_into_fn`
``` cpp
    template <typename T>
    matches_t<T, std::size_t, is_new_type> inline internal_serialize_into_fn(const T& value) {
        std::string json = // ....
        // ....
        return json;
    }
```

- `internal_deserialize_fn`
``` cpp
    template <typename T>
    matches_t<T, T, is_new_type> inline internal_deserialize_fn(const std::string& json) {
        T result;
        // ....
        return result;
    }
```

## Sample game that is compatible with the AST_Generation branch
[Balloon_Pop](https://drive.google.com/drive/folders/1E2CgPBlUpRraGMZZLNSydRsgW-TI86jZ?usp=drive_link) (_It is the same game in the [ENIGMA](https://enigma-dev.org/edc/games.php?game=113) site but with modified scripts_).


## Ongoing Work",False,2359,https://api.github.com/repos/enigma-dev/enigma-dev/pulls/2359,https://github.com/enigma-dev/enigma-dev/pull/2359,open,6417,888,68,95,0,39,0,0,[],2023-08-21 16:47:33+00:00,,0.0,,"[{'comment_id': 1303591714, 'comment_body': 'A new type trait.', 'comment_created': datetime.datetime(2023, 8, 23, 22, 12, 35, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}, {'comment_id': 1306299819, 'comment_body': 'To run this test file, you need to manually set the value of [default_type](https://github.com/enigma-dev/enigma-dev/blob/8d105a42b6ab640d766b23f3bee0207d85bdc15e/ENIGMAsystem/SHELL/Universal_System/var4.h#L284) since it is defined during compilation.', 'comment_created': datetime.datetime(2023, 8, 26, 2, 37, 48, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}, {'comment_id': 1310908255, 'comment_body': 'Handling user JSON inputs.', 'comment_created': datetime.datetime(2023, 8, 30, 22, 43, 37, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}, {'comment_id': 1311072100, 'comment_body': 'It is defined [here](https://github.com/FaresAtef1/enigma-dev/blob/GSoC-Part3/ENIGMAsystem/SHELL/Universal_System/var4.h#L266).', 'comment_created': datetime.datetime(2023, 8, 31, 4, 20, 44, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}, {'comment_id': 1320726122, 'comment_body': 'nit: missing newline', 'comment_created': datetime.datetime(2023, 9, 10, 8, 56, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1320726933, 'comment_body': ""Maybe I missed it, but I think this class should also have JSON functions (even though they'd be trivial)?"", 'comment_created': datetime.datetime(2023, 9, 10, 9, 0, 25, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1320728709, 'comment_body': 'Can you undo the formatting changes in this file if possible?', 'comment_created': datetime.datetime(2023, 9, 10, 9, 6, 50, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1320729150, 'comment_body': 'Would also suggest removing the formatting changes here (makes reviewing harder).', 'comment_created': datetime.datetime(2023, 9, 10, 9, 9, 53, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1320729585, 'comment_body': '`_` followed by capital letter is reserved by the standard, should probably remove the leading underscore.', 'comment_created': datetime.datetime(2023, 9, 10, 9, 12, 55, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1320734932, 'comment_body': 'Should probably update the messages of the `static_assert`s in this file.', 'comment_created': datetime.datetime(2023, 9, 10, 9, 34, 38, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1320735561, 'comment_body': 'I think you can change `base_of` to `inherits` so that its more obvious, i.e. `enable_if_inherits_variant_t`', 'comment_created': datetime.datetime(2023, 9, 10, 9, 39, 51, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1320739035, 'comment_body': 'I think instead of having a message which lists what types have the functions implemented, it may be better to generically say ""Type to be deserialized has to implement one of deserialize or deserialize_self!"" because the error message cannot catch user types. Serialize would also have a similar message. Same for the JSON functions.', 'comment_created': datetime.datetime(2023, 9, 10, 10, 7, 11, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1320740515, 'comment_body': 'I do believe this can be replaced by [`std::disjunction`](https://en.cppreference.com/w/cpp/types/disjunction).', 'comment_created': datetime.datetime(2023, 9, 10, 10, 18, 19, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1320740810, 'comment_body': 'I think you should format the JSON before putting it in here (its basically unreadable right now :slightly_smiling_face: )', 'comment_created': datetime.datetime(2023, 9, 10, 10, 20, 21, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1320740963, 'comment_body': 'nit: the formatting is a bit off here.', 'comment_created': datetime.datetime(2023, 9, 10, 10, 21, 52, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1320741089, 'comment_body': 'nit: this whole block should be indented one more level and the else moved after the closing brace on the line above it', 'comment_created': datetime.datetime(2023, 9, 10, 10, 22, 42, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1320741121, 'comment_body': 'nit: should indent the block here', 'comment_created': datetime.datetime(2023, 9, 10, 10, 23, 4, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1320741528, 'comment_body': 'Is this still causing an issue? I think you can change this to `numeric_limits<enigma::variant>` or `numeric_limits<enigma_user::variant>` to prevent the lookup ambiguity.', 'comment_created': datetime.datetime(2023, 9, 10, 10, 25, 58, tzinfo=datetime.timezone.utc), 'commenter': 'dc03', 'type': 'User'}, {'comment_id': 1320748894, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2023, 9, 10, 11, 12, 29, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}, {'comment_id': 1320762901, 'comment_body': 'Great, it works perfectly with `numeric_limits<enigma_user::variant>`.', 'comment_created': datetime.datetime(2023, 9, 10, 12, 39, 7, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}, {'comment_id': 1328115378, 'comment_body': ""Here and throughout: This seems to be working well, so, no action required, but remember that 3.14 is a very simple decimal fraction, but a lousy binary one. \r\n\r\nIn binary, 3.14 is `11.0010001111010`[`11100001010001111010`]... (repeats forever)\r\nConsider using fractions that represent well in both systems (.5, .25, .75, .125, .375, .625, .875, ...) and using powers of two for arithmetic, as this will ensure unit tests pass across all classic ALUs.\r\n\r\nIn particular, looking at the file below this one ([game_save_load_integral_floating.sog/create.edl](https://github.com/enigma-dev/enigma-dev/pull/2359/files#diff-70b065b05c02ba2a02bf415df584585c90aa577113de53a7152d61536f6cac18)), your decimal expression far exceeds the precision of a 64-bit float (double), so it's pointless to write this much (and moreover, even simple math operations will cause flaky tests). Now, since most of your testing serves as data round-trip tests, there's a good chance you never ran into this problem. Just keep this in mind for later."", 'comment_created': datetime.datetime(2023, 9, 17, 16, 38, 16, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 1328116410, 'comment_body': ""I notice you have both Single Object Game tests to exercise the game_save/load logic (where an entire game is built and deployed) and gTest-based C++ routines. Nicely done, and good call on which is which. I might have combined some of the above tests into a single game, as SOG tests are an order of magnitude more expensive than adding a gTest routine, but this was a good judgment call and a good demonstration of how familiar you've become with these systems. Well done."", 'comment_created': datetime.datetime(2023, 9, 17, 16, 46, 52, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 1328179166, 'comment_body': ""This is also not an important change, but it's good to know the difference between ASSERT and EXPECT: ASSERT will abort the current test routine on failure, while EXPECT just adds the failure. This means that it's important to use ASSERT on nullity checks to prevent crashes, but it's preferable to use EXPECT on non-critical checks to log better details about how the test failed (e.g. it might help a reader understand how one deserialization routine failed to be able to see how the next failed. Most basically, maybe the first routine clearly read one fewer value than it should have, so the next routine picks it up.\r\n\r\nThis isn't critical and when in doubt, it's better to use ASSERT as you have done."", 'comment_created': datetime.datetime(2023, 9, 18, 0, 50, 8, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 1328179594, 'comment_body': 'Again totally optional: feel free to add using directives or even aliases for long template names anytime it improves readability.\r\n\r\nConventional advice is, no using namespaces as a whole, and no using directives in headers except to define public API (e.g. `using string = basic_string<char>`).', 'comment_created': datetime.datetime(2023, 9, 18, 0, 53, 13, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 1328180692, 'comment_body': 'This looks like a good way to leak memory. Consider setting a const expr string_view to the values you care about (""\\x12\\x34\\x56\\x78\\x9A"") and then using sv.length().\r\n\r\nIn general, modern C++ will effectively never call on you to write the word `new`; when it seems to, consider not only if you are patient and focused enough to maintain it, but if all your other team members are (and will figure out the nuances of how!).', 'comment_created': datetime.datetime(2023, 9, 18, 0, 59, 48, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 1328181971, 'comment_body': ""I apologize for not pointing this out sooner when it would have been more worth the tweak, but in general the plus\r\nlua_table class should be smart enough to govern its own dense/sparse partitioning, so it's probably better to serialize this as a typical associative array (i.e. a normal JSON mapping).\r\n\r\nI wouldn't try to rebuild the guts of the lua_table exactly as they were in the serializing implementation, as the nitty-gritty of that implementation may have changed in a way that could cause subtle misbehavior.\r\n\r\nAs a general rule, serialized formats should capture only information that the user is concerned with, and do so as flexibly as practical (without undue overhead)."", 'comment_created': datetime.datetime(2023, 9, 18, 1, 7, 41, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 1328184303, 'comment_body': 'Deep, bowels-of-the-project stuff here. Good work. Knowing to make a change like this requires a good understanding of a complex system.', 'comment_created': datetime.datetime(2023, 9, 18, 1, 19, 30, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 1328186541, 'comment_body': ""Another bit that I'm not succeeding to ignore: you don't need both the C++ namespace `enigma::` *and* the C namespace `enigma_`. They serve the same purpose. A using directive or alias would make this make sense.\r\n\r\nConsider `using enigma_serialize = enigma::bytes_serialization:: serialize;`.\r\n\r\nIn fact, within a short source file or long routine, I'd use a namespace like `ebs_`, but that's just me."", 'comment_created': datetime.datetime(2023, 9, 18, 1, 29, 55, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 1328201899, 'comment_body': ""JFYI: Many people argue it is best practice to list out every push(), one item per line as you've done here, rather than using a for-loop to push a range of items. In general, we like to avoid complex logic in unit tests.\r\n\r\nHowever, another way to write this is `std::queue<int> Queue1 { 123, 2332, 223, 23424 };`"", 'comment_created': datetime.datetime(2023, 9, 18, 2, 26, 46, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 1328212379, 'comment_body': 'nit: might as well qualify both; better future proofing this way.', 'comment_created': datetime.datetime(2023, 9, 18, 3, 7, 3, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 1328212662, 'comment_body': 'style nit: generally we put ""inline"" before the return type', 'comment_created': datetime.datetime(2023, 9, 18, 3, 8, 25, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 1328213900, 'comment_body': ""I don't know that I understand why we need to move all these values back and forth between stacks. Why can't we accomplish the same thing with `const_iterator`s and a `const T &value`? Are we worried about container guarantees on iterating backward from end()?"", 'comment_created': datetime.datetime(2023, 9, 18, 3, 13, 19, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 1328257519, 'comment_body': ""tbh I would use macros for this. It's fallen out of style, though.\r\n\r\nHave you tried a generic `is_container<T, container>`? I believe you could do this with `std::is_same` (and FYI you can instantiate dependent templates if you say `template` before the class you want the parser to treat as a template)."", 'comment_created': datetime.datetime(2023, 9, 18, 5, 24, 29, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 1328260304, 'comment_body': 'What happened to the newline here?', 'comment_created': datetime.datetime(2023, 9, 18, 5, 29, 1, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 1328261548, 'comment_body': ""These are good places to use a `std::stringstream`, though this leaves me wondering if it isn't better to have some kind of builder for these that could be macro'd with a single stringify. Macros are kind of unpopular, though."", 'comment_created': datetime.datetime(2023, 9, 18, 5, 32, 6, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 1334386499, 'comment_body': ""`std::stack` doesn't have iterators."", 'comment_created': datetime.datetime(2023, 9, 22, 13, 31, 31, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}, {'comment_id': 1334408823, 'comment_body': 'Okay, nice idea.', 'comment_created': datetime.datetime(2023, 9, 22, 13, 48, 52, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}, {'comment_id': 1334410178, 'comment_body': 'It is back now 😅.', 'comment_created': datetime.datetime(2023, 9, 22, 13, 49, 41, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}, {'comment_id': 1334441948, 'comment_body': 'Okay, I replaced it with `std::stringstream`, and yeah, this is why I avoid macros.', 'comment_created': datetime.datetime(2023, 9, 22, 14, 14, 43, tzinfo=datetime.timezone.utc), 'commenter': 'FaresAtef1', 'type': 'User'}]","[{'commit_sha': '35b82acf91eb5da1af39389bd352ba33bcdafbfd', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d72ef73d13751450269d5ab95a29e51c161407f', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '139c0a9e9e0570a322aab092a511b45e10253ca2', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1895c11098ded61f8749f10533301a5ce3acd9be', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2efaa6faa38978111bbf168d3304b6c93eff92cd', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cf28b94e068cf03eb54e177bad733d8e7a53f4b', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69a30b65de7e831018f2eef32530b85bb7f8a829', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3dc2a85946da3764032e47da10e9795223224008', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b849d35b22c5ada3a37401273b031c8c5467504', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcff09953b8e517da4dd7a9e060155601a2c0546', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5081146338ea575f03509be9222ada5fec98f0c', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '087020d16ed7ae6669e1b78321428a3277639446', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '791561e4ec020f7665b05a1fe6640c1aacb530fa', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ce89ca0f4765231b639f7a52c463fc708608406', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b2bac0f30da6cb3eaa1f57adac80477ea8d6fba', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67e3ce252fe8e9ac6de8e2873091c0e5ee8851ec', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76fb4960439c7c41d087bf72eca347268353a6ac', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9929afc5e97a869e0073d014ce7d0634ca6ac6d9', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21e131f2433980b1d132eae43e45e1e589234ed6', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9d40a256bedab7f89331793ecbb1b1a16f25c28', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d03e5721d4f9e19481065e565e3af4adea143ed', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfae483355081004c2e498c408034a8bd2f2c236', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cea578c5195a3885d3c00326e8b6c2b77599fa83', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b2d69f4d056cdeb4f39e74143d2b5fbfa80eb48', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12cb1baca1045a9bc262be86e6d14fa654018279', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ec12df1f9cb20d3f84bfa53e3d248f9554494a5', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff96c660fd791cda95906524ba7de211ab1fde03', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f128a5fcbdc8a112846c65c75e2947e22e2089d', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5375f4a4329d9a63aa1d6de5a29dcf92b6f0917d', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9087a654ed6420e0c2135a8f9c9aaaed04aa9e16', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1c9c015c631ea3e8e200784a44d30f78ed9cede', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28b9bc293d1aa565743d3caba7ca983000b10686', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a695362f4705d2cc959982ce40a9a8e9de94d595', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91a8d82dd79ccf9e6641dda32fa7be95d2d47b6a', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c90d9299605c3b8c91ccb1d08d024e4857b39e57', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebfc85714a1fe5c60f733f166b49d553fa02bccd', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa5a21812dac875cab22aec5aa1e6c8bfeed20ac', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a648e460a2ddce616a7153197fbcd7355ac0998', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8f86eea99a24eeb3d244887d307cfc30e408836', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcb43fc4fb422dab6b046d99163453ee6075bf1a', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fe75f95d084ad16e9f46891a72d4a599d95a26e', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '477bf933471d73d57383f11c566fa6c08334d28e', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aaea74a907494c4bdf50abf24c8193f77bfbc47f', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7e3875eea1fc59bf01b90e74c73055a6bb16586', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec745d89c7e2e6b7090fb505ff5f5fde6729c979', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84bfc21c6aa84014e20fda35c4a6a28b43e21b3c', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8e043d9eed02e1a1973724db727a09990cd87bf', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1452e0503b21062dd784846abde942f7c0b7f5eb', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e531f52f4fcbbe08299b744eb09981fbf5b954b9', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6bc6af3d103c0533966c4c3ae059cada07517ce', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b4bef20b0aec8fcb165ea431eea10a546b45bf6', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fd7980853d6a6740e5e6ee9517fada69d779947', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98c325bff31a51d49f0e2dd577f23637e60a586f', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6566e975eb26dc6bbd9ac9c0c620b902cfa4ac31', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcd0b6b67f2713a6f8be9fc3d352824c1459556e', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f55cb10523722964ed3888bc3b08dd597b447286', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4efbddac63b1022c0359f0db1d68c5868a6c73de', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2c443bb56f262f8f2f4a05f09914c7cb3871c0a', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5b5ded40d8a220ee0eebb0dccb762789393ccab', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a1822b6bcf7826a7cc7d8332f88830dc9826b7b', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02cc7b122d4d3b4b151a1648d7969b773313d8da', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bebb107b511bc937b904f4ce1252d7bbb8067b8', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cc05f4145ff15c0d882f252301a2802185014f7', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c32fb244469511e93ca64530449685dc1d3a677', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a936ab39a683530944a93cab88401b0244ede215', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bf737822cbf4857233edb10a890042d90b3cd4c', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd531b188e81f8dc438b4ca04ceb54c20505801f7', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f34c3f9bdd2bb2558a7376db6f98eac8c5d841a5', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9365dee6fd0753e7ec78ed927f779419f701a3f', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b400ab864f52846b1cede57f3d9626afb5f11415', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9d57bced5ce1ff3c1a94a1cec447f0b0ceea43f', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3724b4811f15574b56ddfebecabffcbb760908d', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0099e4d729a8ee4205a549342e1b97b9d7318841', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a59e652d52176452da538a904a1753429b2897c5', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2dc0a85be8c29a6823998fff3643c021b06af2d1', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df7fd26801631ae0fd12a4dda862742c46c4a392', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '280817e31aec9c6797e2db387ba344cf49ba0f41', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6ad8436361e9f07c98c7ef0aa1ad8f98c5a3bde', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b74a840e396aec0b8753dffcc5f81e3385b81b6', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cac8ee852aea153ac7739861e3140a740aec563d', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1394a111ab55ec75eaf8d3c932d3612550a0ef5c', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04efcb4c717a05fe2670d103a6f27382c0e2a45f', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '801119481fc02dbfb2ba3c3f4d877a184ef0b52c', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fabc7af99ab963912e237318b65c109de9069ca', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2691421ae02656610cecf570ac4e29cff9a295b2', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9f43bfb28dd5da920a7ebad3136a8207df1a123', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '454a71a296c14ca48840651da143fa15cc102598', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f9e8f73ed35eba972a52b62f283ad28227a6b0d', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34fac243e00397410ba9de87bf64a83d5da66bff', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1e0ad997783b27178c9e24b70e974ebf7a671cd', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20612c5a4d275432529607ae7f07e195b7f506d2', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '073c637cfce2fe4f940bfa94cd6a9f06cf0dcdae', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1488940038b5244c362a3619f8130c7ee653b2c', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd00ec85e42010d5cd020edac0abf7da667187e10', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a1176d756e6b53e1c3945ed2ab9707c79d4fe30', 'committer_username': 'FaresAtef1', 'committer_name': 'Fares Atef', 'committer_email': 'faresatef553@gmail.com', 'commit_date': datetime.datetime(2021, 12, 28, 18, 26, 33, tzinfo=datetime.timezone.utc)}]",Fares Atef,96792115,faresatef553@gmail.com,User,,19,,32,28

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
3319723,enigma-dev,enigma-dev/enigma-dev,C++,120,335,31,69,4788,149,50,37,"[{'id': 1980281610, 'number': 2398, 'closed': None, 'created': datetime.datetime(2024, 7, 22, 3, 12, 20, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 2185, 'deletions': 535, 'state': 'open'}, {'id': 1926580860, 'number': 2396, 'closed': datetime.datetime(2024, 7, 21, 15, 23, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 18, 14, 3, 13, tzinfo=datetime.timezone.utc), 'time_taken': 2856041.0, 'time_delta': '33 days, 1:20:41', 'additions': 2927, 'deletions': 341, 'state': 'closed'}, {'id': 1923262450, 'number': 2395, 'closed': datetime.datetime(2024, 6, 30, 23, 15, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 17, 3, 15, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1195217.0, 'time_delta': '13 days, 20:00:17', 'additions': 523, 'deletions': 333, 'state': 'closed'}, {'id': 1919925067, 'number': 2393, 'closed': datetime.datetime(2024, 6, 17, 3, 1, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 14, 4, 58, 8, tzinfo=datetime.timezone.utc), 'time_taken': 252219.0, 'time_delta': '2 days, 22:03:39', 'additions': 2242, 'deletions': 2131, 'state': 'closed'}, {'id': 1917784350, 'number': 2392, 'closed': datetime.datetime(2024, 6, 17, 3, 1, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 13, 4, 21, 49, tzinfo=datetime.timezone.utc), 'time_taken': 340795.0, 'time_delta': '3 days, 22:39:55', 'additions': 2451, 'deletions': 2150, 'state': 'closed'}, {'id': 1751554375, 'number': 2380, 'closed': datetime.datetime(2024, 6, 13, 0, 51, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 1, 11, 56, 13, tzinfo=datetime.timezone.utc), 'time_taken': 8945735.0, 'time_delta': '103 days, 12:55:35', 'additions': 815, 'deletions': 442, 'state': 'closed'}, {'id': 1751537842, 'number': 2379, 'closed': datetime.datetime(2024, 3, 1, 11, 45, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 1, 11, 44, 40, tzinfo=datetime.timezone.utc), 'time_taken': 41.0, 'time_delta': '0:00:41', 'additions': 1024, 'deletions': 62, 'state': 'closed'}, {'id': 1710052319, 'number': 2375, 'closed': datetime.datetime(2024, 2, 28, 15, 59, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 3, 23, 39, 57, tzinfo=datetime.timezone.utc), 'time_taken': 2132361.0, 'time_delta': '24 days, 16:19:21', 'additions': 941, 'deletions': 59, 'state': 'closed'}, {'id': 1707474442, 'number': 2374, 'closed': None, 'created': datetime.datetime(2024, 2, 2, 1, 24, 38, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 27, 'deletions': 2, 'state': 'open'}, {'id': 1483233440, 'number': 2359, 'closed': None, 'created': datetime.datetime(2023, 8, 21, 16, 47, 33, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 6417, 'deletions': 888, 'state': 'open'}, {'id': 1467908885, 'number': 2351, 'closed': None, 'created': datetime.datetime(2023, 8, 9, 4, 34, 21, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 3453, 'deletions': 775, 'state': 'open'}, {'id': 1394143364, 'number': 2345, 'closed': None, 'created': datetime.datetime(2023, 6, 15, 13, 26, 50, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1171, 'deletions': 770, 'state': 'open'}]"
