pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
429935294,Mass calibration module,"Mass calibration module
",True,78,https://api.github.com/repos/mzmine/mzmine/pulls/78,https://github.com/mzmine/mzmine/pull/78,closed,14262,2552,92,136,10,40,0,0,[],2020-06-07 10:14:26+00:00,2020-09-28 11:35:16+00:00,9768050.0,"113 days, 1:20:50","[{'comment_id': 436399062, 'comment_body': 'Why do you need jcommon?', 'comment_created': datetime.datetime(2020, 6, 7, 20, 30, 10, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 436399617, 'comment_body': 'This should be moved into the MassCalibrationTask. The runModule() method is executed on the JavaFX thread, so it should not be performing any real data manipulations (freezes the GUI). Everything should be done in the task.', 'comment_created': datetime.datetime(2020, 6, 7, 20, 37, 21, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 436399713, 'comment_body': 'Use the logging system instead of System.out.println', 'comment_created': datetime.datetime(2020, 6, 7, 20, 38, 54, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 436399751, 'comment_body': ""Do you need a specific class for this? Isn't it better to use a simple `List<Standard>`?"", 'comment_created': datetime.datetime(2020, 6, 7, 20, 39, 45, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 436399846, 'comment_body': 'logger.info should be only for important messages', 'comment_created': datetime.datetime(2020, 6, 7, 20, 40, 42, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 438507256, 'comment_body': 'Should not we check whether the file is valid before we open tasks? If it happens that the file is corrupted, the standards list will not load and that will cancel all tasks open for the module giving a lot of errors popping up in logs and console output. Checking the file once before starting the tasks seems like a nice place for it.\r\nAlso it does not perform any heavier data handling, just creates spreadsheet object. Standards list is loaded and cached on the first call to `extractStandardsList()` which happens within task run method.\r\n', 'comment_created': datetime.datetime(2020, 6, 11, 2, 24, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lukasz-fiszer', 'type': 'User'}, {'comment_id': 438509945, 'comment_body': 'We have just used a standard calibrants list of hundreds of items, but later on we might have biggest lists and dataset of higher resolution giving orders of magnitude more matching attempts between mass peaks and calibrants from the list. We might use a more specialized data structure for this, also standards list is pretty much an entity of its own, with its own search methods.\r\nSo I decided to have a StandardsList class encapsulating that. Other causes include self-documentation and it seems easier to toss the list around in the codebase.\r\nThough I agree it is a pretty small class as of now, but it is likely gonna grow as we demand more and move on with the module.', 'comment_created': datetime.datetime(2020, 6, 11, 2, 35, 56, tzinfo=datetime.timezone.utc), 'commenter': 'lukasz-fiszer', 'type': 'User'}, {'comment_id': 438510881, 'comment_body': 'Changed to logger.fine, left logger.info just when printing the summary of the file. Also when it happens that some rows were skipped, eg: misformatted, I used logger.warning to print how many were skipped.\r\n', 'comment_created': datetime.datetime(2020, 6, 11, 2, 40, 6, tzinfo=datetime.timezone.utc), 'commenter': 'lukasz-fiszer', 'type': 'User'}, {'comment_id': 438512330, 'comment_body': 'It is left from the experimental implementation, but it still seems to be required for DistributionPlot', 'comment_created': datetime.datetime(2020, 6, 11, 2, 46, 5, tzinfo=datetime.timezone.utc), 'commenter': 'lukasz-fiszer', 'type': 'User'}, {'comment_id': 438539154, 'comment_body': ""You should think of the task as a self-sufficient unit of work. The task is submitted to the task controller, and in principle it may be executed after a long delay or it may be executed by a different computer on a computing cluster (we don't have that now but in the future). So all the input checks should be done within the task, as the situation between the runModule() method and the execution of the task can change dramatically - even filesystem location and availability can change. \r\n\r\nIf you like, you can keep a simple *additional* check in the runModule() method, but that should be only minimal, e.g. using File.exists() and File.canRead() methods, no parsing. And the checks needs to be repeated in the task's run() method, anyway, for the above mentioned reasons.\r\n\r\nParsing the standards list does count as heavy data handling. Imagine the list has a million rows, and the file is loaded from a network filesystem that is connected via a VPN from a server on a different continent (happens to me all the time). It will freeze the GUI.\r\n"", 'comment_created': datetime.datetime(2020, 6, 11, 4, 42, 6, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 438539353, 'comment_body': 'Ok', 'comment_created': datetime.datetime(2020, 6, 11, 4, 43, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 438744213, 'comment_body': 'Alright, thank you for explaining the issue. The distributed processing argument makes a lot of sense.\r\nBut should we make sure that we load the list only once per module run, so that all tasks use the same list? Would all the tasks from the same module run be processed with access to the same storage?\r\nOn one hand it seems wasteful to load the same list multiple times, on the other hand it might be intentional that each task loads it within its own execution context. I assume, at least for now, we could make the list load only once and be cached for subsequent uses. This could be done for instance by synchronizing the `extractStandardsList()` method.', 'comment_created': datetime.datetime(2020, 6, 11, 12, 25, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lukasz-fiszer', 'type': 'User'}, {'comment_id': 444267506, 'comment_body': 'This parameter needs a better description. What kind of discance? What are the units of this value? What does it mean ""included in the range""?', 'comment_created': datetime.datetime(2020, 6, 23, 14, 27, 57, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 444268292, 'comment_body': 'We have a specific parameter type called MZToleranceParameter, so please use that instead of DoubleParameter', 'comment_created': datetime.datetime(2020, 6, 23, 14, 28, 52, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 444268521, 'comment_body': 'Please use RTToleranceParameter', 'comment_created': datetime.datetime(2020, 6, 23, 14, 29, 8, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 444274189, 'comment_body': 'Why did you add jcommon?', 'comment_created': datetime.datetime(2020, 6, 23, 14, 36, 22, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 449027389, 'comment_body': 'Don\'t mention seconds in the description, just say ""Max retention time difference""', 'comment_created': datetime.datetime(2020, 7, 2, 14, 6, 14, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 450161330, 'comment_body': ""This should be tolerance * 60, shouldn't it?"", 'comment_created': datetime.datetime(2020, 7, 6, 11, 36, 17, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 450162927, 'comment_body': 'This parameter still needs a better description. ""Range tolerance"" doesn\'t really give any intuitive idea to a mass spectrometrist what range is it talking about. Can you explain more clearly?', 'comment_created': datetime.datetime(2020, 7, 6, 11, 39, 54, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 450172087, 'comment_body': 'The same comment here - try to expand the description. Also, ""in PPM m/z ratio"" is a bit confusing. Is the value relative (in PPM) or absolute (in m/z)?', 'comment_created': datetime.datetime(2020, 7, 6, 11, 59, 34, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 450176259, 'comment_body': 'The Apache Math library already has functions for these basic math calculations, so it is better to avoid reinventing the wheel: https://commons.apache.org/proper/commons-math/javadocs/api-3.4/org/apache/commons/math3/stat/StatUtils.html#mean(double[])\r\n', 'comment_created': datetime.datetime(2020, 7, 6, 12, 8, 41, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 450178527, 'comment_body': 'Using the column names to extract the values is a bit too restrictive. E.g., somebody might call it ""ret. time"" instead of ""retention time (min)"" and your module won\'t work anymore. I think it is better to simply define the format as first column = RT and second column = ion formula, and ignore the headers.', 'comment_created': datetime.datetime(2020, 7, 6, 12, 13, 19, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 450188025, 'comment_body': 'Also the Guava library: https://guava.dev/releases/snapshot/api/docs/com/google/common/math/Stats.html#meanOf-java.lang.Iterable-', 'comment_created': datetime.datetime(2020, 7, 6, 12, 31, 51, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 450521360, 'comment_body': 'I would say it is correct. Value of `absolute tolerance` should be in minutes, so if the tolerance parameter in constructor is given in seconds, then it should be divided by 60 to get minutes. As a sanity check, if tolerance of 60 seconds is given, it should be just a minute. This is used to build the range with `rtValue` given in minutes.', 'comment_created': datetime.datetime(2020, 7, 6, 22, 59, 2, tzinfo=datetime.timezone.utc), 'commenter': 'lukasz-fiszer', 'type': 'User'}, {'comment_id': 450525643, 'comment_body': 'This class was meant for keeping related code together. When we add error size vs m/z value regression and shift the mass peaks with different values, this class is likely going to get an update. Also, because we are estimating bias from a list of errors, when the list is empty we want a bias of 0 not an exception or `Double.NaN` as the other methods give.\r\n', 'comment_created': datetime.datetime(2020, 7, 6, 23, 13, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lukasz-fiszer', 'type': 'User'}, {'comment_id': 450546465, 'comment_body': 'I have raised the issue of column naming (including the units of the columns) on slack before.\r\nColumn names are documented in help and in code docs. We could allow different units (min/sec) in parentheses and different naming (retention time/ret time/rt and so on) if needed, but for now fixed column names seemed enough.\r\nI am not as convinced towards the variant where we fix columns by their position.\r\nFirst, it is less portable, as other use cases for the standards library file could already dictate a certain column ordering. In both cases user needs to check the docs/help file to see the expected format, but it is easier to rename/duplicate a column then to maintain a certain order of columns.\r\nAlso with column names it would be easier to allow for m/z values to be given in another column (taking priority over ion formula if it was present). I have spoken with Albert recently and it seems like a valuable addition.\r\nAlso if we actually allow m/z values, then column names additionally defend against the case when RT and m/z columns would get swapped, which might not be trivial to detect and the module would likely casually run but with gibberish data.\r\nI have updated the extractor classes to explicitly mention required columns names if an exception occurs when checking the file.\r\nPlease comment on what is your opinion on that, if you still want to use fixed column positions I can add it, but I feel more convinced towards the method we use currently.', 'comment_created': datetime.datetime(2020, 7, 7, 0, 27, 16, tzinfo=datetime.timezone.utc), 'commenter': 'lukasz-fiszer', 'type': 'User'}, {'comment_id': 450546814, 'comment_body': 'I have updated it a little, it is likely going to change more when we add the error size vs m/z regression for mass peak shifting\r\n', 'comment_created': datetime.datetime(2020, 7, 7, 0, 28, 33, tzinfo=datetime.timezone.utc), 'commenter': 'lukasz-fiszer', 'type': 'User'}, {'comment_id': 451106966, 'comment_body': 'In other MZmine modules we use defined column order, not column names. I would like to use the same approach here for consistency. In addition, relying on column names means you are relying on the user not making even a small difference when naming the columns, and that is just asking for problems. Please change it to defined column order, thanks.', 'comment_created': datetime.datetime(2020, 7, 7, 19, 54, 37, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 451107174, 'comment_body': ""You're right, sorry for that."", 'comment_created': datetime.datetime(2020, 7, 7, 19, 55, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 451108787, 'comment_body': 'Perhaps you can name this ""Max m/z error range size (ppm)"", that makes it more obvious what the parameter is for.', 'comment_created': datetime.datetime(2020, 7, 7, 19, 58, 9, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 451109302, 'comment_body': '""The tolerance is the absolute difference in PPM errors of m/z ratio"" - not sure I understand the meaning of this. PPM is a relative value, not absolute.', 'comment_created': datetime.datetime(2020, 7, 7, 19, 59, 11, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 451180131, 'comment_body': 'When the column names would not match, an exception would get thrown and a very explicit error message with required column names would appear. But the consistency case does change the situation a little as you mention and adds to the fixed column position format. Updated as requested, retention time is taken from first column and ion formula string is taken from the second column.\r\n\r\n\r\n', 'comment_created': datetime.datetime(2020, 7, 7, 22, 29, 55, tzinfo=datetime.timezone.utc), 'commenter': 'lukasz-fiszer', 'type': 'User'}, {'comment_id': 451186848, 'comment_body': ""Yes, PPM is relative value, but the tolerance (used for extending the error range) is just a difference/distance between two PPM errors. It is an absolute value/difference used with the collection of values that also happen to have a prior meaning that is relative.\r\nFor instance, if a range's upper endpoint is at 0.4 (PPM error of the m/z match), if then next biggest error that appears in the distribution is at 0.55 and the tolerance is 0.2, the bigger error is within that fixed tolerance over the relative PPM errors and as such it would get included in the range, that is the range would get extended to contain it, having a newly established upper endpoint at 0.55. The range extension process continues until the range cannot be extended with such tolerance, that is no errors are within the tolerance from the range.\r\nThe method contains some subtleties that are not trivial to be communicated in a sentence or two of a short description. The help file contains more details, but it is likely going to get a retouch when we finish with the module as details might still change. When the live preview is added to the module the range extraction method and the parameters are going to be more clear."", 'comment_created': datetime.datetime(2020, 7, 7, 22, 49, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lukasz-fiszer', 'type': 'User'}, {'comment_id': 451189041, 'comment_body': 'When using the tolerance to extend the range later on, that range size might get bigger than what would have been called max at this stage. This is still correct for that part, but for the whole run of the module it is not really max and it might get more confusing for the user.\r\n', 'comment_created': datetime.datetime(2020, 7, 7, 22, 56, 14, tzinfo=datetime.timezone.utc), 'commenter': 'lukasz-fiszer', 'type': 'User'}, {'comment_id': 451191475, 'comment_body': 'I have changed the wording in the description a little to make it more clear.\r\n', 'comment_created': datetime.datetime(2020, 7, 7, 23, 3, 50, tzinfo=datetime.timezone.utc), 'commenter': 'lukasz-fiszer', 'type': 'User'}, {'comment_id': 466243121, 'comment_body': 'This change should not be included in the PR, because it will create a conflict for someone else who is working on the CliqueMS module.', 'comment_created': datetime.datetime(2020, 8, 6, 8, 43, 28, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 482058011, 'comment_body': ""Please remove the caching function. It can cause problems, because the file might not be static but can be updated by the user. You would have to track last modification time etc... It's better to avoid caching altogether, I think."", 'comment_created': datetime.datetime(2020, 9, 2, 13, 13, 48, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 484108406, 'comment_body': 'I think the selection of the calibration list could be moved to this enum - that way you can remove one additional combo box.\r\nOptions:\r\n- Custom standards list\r\n- Universal calibrants from Keller et al., Anal Chim Acta 2008, positive mode\r\n- Universal calibrants from Keller et al., Anal Chim Acta 2008, negative mode\r\n- Universal calibrants from Hawkes et al., Limnol Oceanogr Methods 2020, positive mode\r\n- Universal calibrants from Hawkes et al., Limnol Oceanogr Methods 2020, negative mode\r\n- Universal calibrants merged, positive mode\r\n- Universal calibrants merged, negative mode\r\n\r\n', 'comment_created': datetime.datetime(2020, 9, 6, 20, 2, 17, tzinfo=datetime.timezone.utc), 'commenter': 'tomas-pluskal', 'type': 'User'}, {'comment_id': 485979224, 'comment_body': 'This was needed for when caching was used in the extractor factory. Currently it is not used, as extraction happens only once per module run and each extractor instance is created separately. But when the boolean flag to use caching is set on in extractor factory, then it would share the same instance among task runs and then the caching might get used. \r\nSo as we currently do not use that, the user might edit the file between module runs and the new contents would be used. But we can use caching later by just changing the boolean flag in the method call. ', 'comment_created': datetime.datetime(2020, 9, 9, 23, 38, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lukasz-fiszer', 'type': 'User'}, {'comment_id': 485984407, 'comment_body': 'With current codebase it required much less changes to introduce multiple universal calibrants list choices with a separate combo and then use a fixed mapping from the choice to a string pointing to the java resource containing the list. Also, it is safer to use separate parameters for nested combo parameter, so it would then require duplication of the mz tolerance parameter. We could make it into a single combobox but that would require unnecessarily more changes in module code. Also on the user side, the parameters pane is still going to be the same size, as the standards list choice has more nested paramters that make it take more space in the module setup dialog.', 'comment_created': datetime.datetime(2020, 9, 9, 23, 56, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lukasz-fiszer', 'type': 'User'}]","[{'commit_sha': 'bb438bca97619c84c06dab6b04690a7c80eb2298', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3b157e1bb9568de9b72a10549fa43ac36e842d7', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bc82a90601a1cb9dabb5e0adce232dd311cd734', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25afad16b736b679ff880c78b1df433b0dbe1d6e', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de21859606b08955a1411dce4b6328a1f4e3aa3c', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5c43de4cf29feb888addf9bc71269b6644f1040', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5746921c6152841c5bbc87e44ac4e851660e757', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d2f8d4b5144d6c0099a40a02955b31eb01f47f7', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14e0db4d9375d93aacf120da5f0db2bb07033e66', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f48d3a8a19c3a60b5f55140527fbe22da4dc407', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26ccccafe8a24fb97f4578d0d0e789966d515667', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed392c108fccf3be124f0df60ad9e1c0da1bb177', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '559776221fac87b06b54f5b7c5ece7ca086ee1af', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97c781fb4a2007c1b525dc749598275e7971f13d', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd52d490159990c578e010b140831288f760ff23', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c21f80ea6f0acb2cda081bda05f52b6538cd6f1', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '714656791321bf0862355842c208e96747d688fe', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02338e3e3f58684f132bb27b3bc1d8b97a43458f', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef4595614dd701641605716c9ab133d8254ed196', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e8a7f8ebc41c84d8c9cda8a4a8ed72f27c38730', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc2424d356710c31fc590a7dbec9d2bf1ae338ba', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '406ee0852195112e2e1a5153c3a9a0b1eb4232f7', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0491b3151686d449799ec231a68b45f8975e662', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '415b057ed608fc2a54b8c8d0f02ac4a7aca19e2e', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '928c3268b681f9e1514cfd0bde1e6e3da9a47462', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb4909186b95fd1b19a9922c44dd0e551fd5ca5e', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65e18353b37387fa4cf6362430f72538696bafa3', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eacb6653d64877eb97c9ee1ed370cacde69ee096', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a81494f5215ea39a588f6840b883cffeeeba8d95', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29538c080d522eb1b8b8f526ece6fff5c9d7d171', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdcc80989d20d00bee0f6de57c8728a24b4e3589', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '487f4247d6efaeccbf72fca1135ac57eb2039963', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40584e1508ed3de2c243fadc4229d2cc2ab707c7', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f04e10f6fe733c8494d7d1a638d4a8439bce7d3', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e669c5c15f4471c26670c31bfbfae2b867162d0', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f8958bfa675dfc6518156efe71fc69eb6dfa1dd', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd57a9efce74f98264a4cc4518a67a5403f62e04d', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c67628765686843cb9bb996634d55ceee36778ca', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf9c8ed6ff49332ec838d9083ad86fc11d1e3542', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d79c0c96615c72eaf3027dfca8f93960186237a', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6467459271ce5251d4b03917923efa305dc64e8', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9a74a89fb106ceb65d5e1aabf6136cb49b04831', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a5eed7860d1746b84aa0b2d8628cb5119d9afca', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81a09ca8fdfdc581a92e7fa5334bb0f323725e2b', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b95d51dad563ed8a40bb6794e08109423dec575', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5548664d1703f7ecd46c513157200fc5b5b3505c', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88fee8d4c3fc445eb7b605ad401a2bc7a7de046c', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fd807602b94f65a3fab7ab85ca358ce0dc707d6', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f42059fedb85ebda97c22620b58944c0857fd08e', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46898d3e1188af40e6eeb4b2e811cb6ce3140e5f', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '127ab0718a054971204d4007806b40661b6e6c33', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4146165999c400f690f69757026557e50b2bcc1', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '052d54a8d48685620220e1a604b5a5b7024cd398', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50eeaa86a6489b6ad81cd175d7e5ca8cc9450fc1', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e64697bb585365822f38adee25fb6fd6cbb30ea', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '653dd4db517c31434ea3691d1b086df55f2dff85', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4e64a6d9c915fe74e44f9acc6763a18c1f05aee', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83994304793846dc26783bec6bdee409b0a98983', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65c8a85b238e374fa04387624a27d7465f427b36', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31ffe0b02bfb901012ef80d3fa934db5c9e5d168', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28a8435c274c6dbc5f42a73d92ff5b29c9ae6561', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cd6ca46f2425583d50dd903a0d8f4c9bad23a25', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e816034913938499b9b7f7c927dc7f1e82f096a6', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2277daa9f511e92f0ca1cfb3e15e5dfa40f98911', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52a00987ad5c5bb5eecfe09655c5b66e27104de0', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '618849551bb3c5844cb5465dd553c36c10544eb6', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65f29b66cef0681e3ce9af4aea89c3ad4c02f9d2', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7eaa1c66447a8a15ef809538d0c2c821d9a9a92f', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3b28f492b2e1e08c3c77243a93230cb6ed50103', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad6b691e56d09e4f89411f03556f7cb83de73f17', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd56b322ff2d292503dcb967a6ec89317c4cb210', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98d4157d77e939f05ef5b63613f476576ad7a3b7', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad85c1c107e85ebc6187fefbf74ad3be44a20f95', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b60fdac1b66fd4e86aa976703d9f166ad55d3660', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9374d8b873c545c208e93849dff1deff46d9168', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a8e8696f97dc619e6c7c00fb7a8aed881fdd7d5', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7441bff43e508ccfb3f33b27d14cf263c601077', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe07b133320c70818560360e013887eb2ea61c63', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be20c377c89d76cfde3ac79b69c1a6f1632f1a9c', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '847f16697b125e44eaaf9e11435dde51b7b0b7bf', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '722c3f8dcfcf86ef1e2c175d335ef78d86ca48c1', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75b81e666ef9a01f8ad4375b2b30c3737a66ac21', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6515f9fb294b6ac88e96c51f03bb105dd1d17a5a', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be2fd01d531dead62d48eaa6bc95309fc9937a3a', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e56c4587f721ebfd6d67c8647ba77d94cbaa5d1', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b4db5cfb596fe158696df5964b38e0022f17ac6', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aba8623042f1e8331f75b5ed19bdca249daed0b1', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '078beb0f3cea66a2bdb6bc20e5c7b5f46c6a1d8e', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9377e5553cc9c6d7b81efa168b05220a59111ea5', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '742beaaa1e4010647b4b2cf24b71f35a1938ce68', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42200f1879cf8ec25869d8b384daff63aaf21d1e', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0650f7d8e4f5cb6e45ed405c0d68f7f3409e6ca7', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '334183592417b79539a1db282437ae134d62bbe7', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b0028b8e53f4c8c2e60f394fe72c7624c1b2eb6', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdbc9f20ffb201cdd732f0f073d32486088fd5c5', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '351a734a1416e978bf9334c91edd4cfcf4b3db79', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3d6fee4a8aa1421150a8502956f85d0984fbb69', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a9e7c8e16930882d8f8dec1150ae0e7f969b1e3', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffca66b0dfc11d8aeee87666780807e7e7800796', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3c6993810bd521220944c6efcd81d2ea3f41c28', 'committer_username': 'tomas-pluskal', 'committer_name': 'Tomáš Pluskal', 'committer_email': 'plusik@gmail.com', 'commit_date': datetime.datetime(2012, 5, 31, 1, 32, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8209ac3d4d9c7918539fd5fdfbfac2f32f2ebd6d', 'committer_username': 'tomas-pluskal', 'committer_name': 'Tomáš Pluskal', 'committer_email': 'plusik@gmail.com', 'commit_date': datetime.datetime(2012, 5, 31, 1, 32, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cde204ca32b47f2d4d257889a7312cc7612ea1c', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74c07d9ad208834a812604ac1d339f471fd4e193', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfdda6c5ff40e11f93f3f7161b6bd737cb91a268', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa2ddbd2a1f4f9456dcb21eb841817f9691655d1', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84232c72feba8673b9d68127b494f70cc23a5b8a', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9be37b4c725edbb949d57296fcc534cb21a8dec', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3de0726e47a041e6fd5136bf18db407aea7d6de5', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cc36b3fc6c20acd7e1b86036c6bf5676f34d3ce', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '515663ceb27261f39377057bcace7d5fa19f6831', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0f911c1ae478550ddef60e07146845df0511d8f', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8dc9062bcec0a37f302836b7b06e45f34a6b925f', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '890c97f138d866da4e928b5735f46fc61ce613a1', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a16787067f1166135e06f717e1c8a964127733af', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d679c81ea3330773bc2e8e4e2da0cde0e1dd709', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb13f09d5e7826c2ddaaadf2b07b18ed2137e59c', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a08cada2483d0940642fb1d19b52599b96db3b6e', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6c4290c39f178ee752e6d9e4e67c31e26a46183', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95e94c7b1075e52bd56c3e4ae118fd6d12c067d9', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04285afd210ff3161eaf38c449363afa8f8ab907', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfafe243c62a4a54ec6ffa23d3e2ebb5efa9c2d9', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '902a1c37d0a6419e0b5cb7c4a10c713882b21e0c', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f254161fd3cad2da99312ce48f094a3c7d75772e', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c3a63b54833d51c3181a651c0c5e3bb8f85f78c', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3637cac9050317ff2eaea9bb091cf8a3ce6a2719', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63983b34b695b1f5b63f7fc4b3672d564ef5af7a', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4d505490ad357d3504056ffde1061afcdb3f41a', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d8eb55b7bcb12959b238ddd134c801acc95bc09', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '983b3f1d9ed3a7b12b480a224b450ec95b2688b4', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edebc984d1eb665b69b4285cc226253b1708727a', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd12d915388e7e506a7b3502a175e060be59aaab', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8323ed93ef11b5156d39633d3874052fe6e86a60', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af943a55e0bf5186ba26bd730caf3dfd9d72b607', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '840d1a19e15bdcdd9cbca4a4b396e62c65e0deee', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a17ec3f4af74bd36785686223473e34cc632217e', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'feae486280d3998c308bb87be4f8119556c4f266', 'committer_username': 'lukasz-fiszer', 'committer_name': 'Łukasz Fiszer', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 1, 23, 3, 21, tzinfo=datetime.timezone.utc)}]",Łukasz Fiszer,45523649,,User,,9,,0,0

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
223040641,mzmine,mzmine/mzmine,Java,122,180,12,83,14880,294,14,37,"[{'id': 493723195, 'number': 101, 'closed': datetime.datetime(2020, 11, 16, 8, 46, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 27, 13, 40, 15, tzinfo=datetime.timezone.utc), 'time_taken': 4302374.0, 'time_delta': '49 days, 19:06:14', 'additions': 14826, 'deletions': 2498, 'state': 'closed'}, {'id': 429935294, 'number': 78, 'closed': datetime.datetime(2020, 9, 28, 11, 35, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 7, 10, 14, 26, tzinfo=datetime.timezone.utc), 'time_taken': 9768050.0, 'time_delta': '113 days, 1:20:50', 'additions': 14262, 'deletions': 2552, 'state': 'closed'}, {'id': 422350825, 'number': 71, 'closed': datetime.datetime(2020, 6, 2, 13, 47, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 24, 1, 51, 46, tzinfo=datetime.timezone.utc), 'time_taken': 820556.0, 'time_delta': '9 days, 11:55:56', 'additions': 41, 'deletions': 0, 'state': 'closed'}, {'id': 385226733, 'number': 39, 'closed': datetime.datetime(2020, 3, 8, 8, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 8, 5, 0, 39, tzinfo=datetime.timezone.utc), 'time_taken': 11301.0, 'time_delta': '3:08:21', 'additions': 61, 'deletions': 18, 'state': 'closed'}]"
