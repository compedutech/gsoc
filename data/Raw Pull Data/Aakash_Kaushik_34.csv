pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
673868587,Addition of resnet module. ,Extension of #61 and a PR for review of the Additon of resnet module. ,True,63,https://api.github.com/repos/mlpack/models/pulls/63,https://github.com/mlpack/models/pull/63,closed,813,21,9,39,78,99,1,0,[{'name': 't: added feature'}],2021-06-19 11:49:54+00:00,2021-07-03 12:55:20+00:00,1213526.0,"14 days, 1:05:26","[{'comment_id': 654793958, 'comment_body': 'Printing out Params like this doesn\'t make much sense. See the below image for Darknet. Also added an image for model.summary in PyTorch. A good user-experience would be simplifying things.\r\n<img width=""428"" alt=""Screenshot 2021-06-19 at 6 29 32 PM"" src=""https://user-images.githubusercontent.com/39593019/122643247-65b41900-d12c-11eb-998e-6405ab019820.png"">\r\n<img width=""562"" alt=""27968068-89234e14-6313-11e7-92dc-92c31b8e28b9"" src=""https://user-images.githubusercontent.com/39593019/122643305-b0359580-d12c-11eb-90d7-1a65e2897a59.png"">\r\n\r\n', 'comment_created': datetime.datetime(2021, 6, 19, 13, 3, 1, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 654794252, 'comment_body': 'Since there are a lot of versions if-else statements look repetitive. Create a function that returns a map that whose key value pair is int - [vector,string]. If key exists set values, else throw an error.', 'comment_created': datetime.datetime(2021, 6, 19, 13, 6, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 654794283, 'comment_body': 'Makes sense, btw pytorch does throws out all the parameters that you have in your model, i think this example is from tensorflow, but i do like the ones pytorch has so that made me implement all the params', 'comment_created': datetime.datetime(2021, 6, 19, 13, 6, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 654794616, 'comment_body': ""Ahh, its from Keras I believe. Its much cleaner. The user only cares about the dim changes since if he is going to use a pre-trained model he doesn't care about layer params since he won't be changing them."", 'comment_created': datetime.datetime(2021, 6, 19, 13, 9, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 654804547, 'comment_body': 'Will make this change, btw how do you see the otuput of `mlpack::Log::Info`', 'comment_created': datetime.datetime(2021, 6, 19, 14, 47, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 654834951, 'comment_body': 'Hey, did this with maps, hope this is more elegant than the previous solution. ', 'comment_created': datetime.datetime(2021, 6, 19, 20, 5, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 660532224, 'comment_body': '@kartikdutt18 here the new function in ffn tests. ', 'comment_created': datetime.datetime(2021, 6, 29, 11, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 660532491, 'comment_body': 'and here are the typedefs so the API is a bit consistent. ', 'comment_created': datetime.datetime(2021, 6, 29, 11, 39, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 660533563, 'comment_body': 'changed this to darknet, should reflect in the latest push. ', 'comment_created': datetime.datetime(2021, 6, 29, 11, 41, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 660722747, 'comment_body': '```suggestion\r\n// Convenience typedefs for different DarkNet models.\r\n```', 'comment_created': datetime.datetime(2021, 6, 29, 15, 18, 56, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 660723165, 'comment_body': 'I think we can remove the sentence here.', 'comment_created': datetime.datetime(2021, 6, 29, 15, 19, 24, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 660724660, 'comment_body': '```suggestion\r\n  //  named ""ResNet"".\r\n```', 'comment_created': datetime.datetime(2021, 6, 29, 15, 20, 58, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 660724837, 'comment_body': '```suggestion\r\n  //  named ""ResNet"".\r\n```', 'comment_created': datetime.datetime(2021, 6, 29, 15, 21, 9, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 660726006, 'comment_body': 'Do you think it makes sense to add a model name and set this to `ResNet`?', 'comment_created': datetime.datetime(2021, 6, 29, 15, 22, 25, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 660726648, 'comment_body': '```suggestion\r\n    // Updating input dimensions.\r\n```', 'comment_created': datetime.datetime(2021, 6, 29, 15, 23, 7, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 660727187, 'comment_body': ""```suggestion\r\n   * @param downSample Bool if it's a downsample block or not. Default is false.\r\n```"", 'comment_created': datetime.datetime(2021, 6, 29, 15, 23, 43, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 660729579, 'comment_body': '```suggestion\r\n      // Updating input dimensions.\r\n```', 'comment_created': datetime.datetime(2021, 6, 29, 15, 26, 21, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 660730666, 'comment_body': 'Would be a good idea to wrap this in a `\\code/endcode` that way doxygen can parse this.', 'comment_created': datetime.datetime(2021, 6, 29, 15, 27, 36, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 660734178, 'comment_body': 'Might be useful to switch to `mlpack::Log` which can be enabled/disabled by the user.', 'comment_created': datetime.datetime(2021, 6, 29, 15, 31, 30, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 660735119, 'comment_body': 'Can you add the link to the Pytorch code here as well.', 'comment_created': datetime.datetime(2021, 6, 29, 15, 32, 38, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 660744006, 'comment_body': 'I am not really sure what you meant by this. \r\n', 'comment_created': datetime.datetime(2021, 6, 29, 15, 42, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 660748094, 'comment_body': ""It was intentional because this only occurs when the user doesn't has the model and if that is not there curl starts a download bar so it prompts the user that this file has been downloaded to this place. \r\nI would like to keep it this way if possible. "", 'comment_created': datetime.datetime(2021, 6, 29, 15, 47, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 660750787, 'comment_body': 'This was a local file, and these are just taken by having a input tensor of the same size as here and filling up with ones and passing that, basically the same procedure in torch.', 'comment_created': datetime.datetime(2021, 6, 29, 15, 50, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 660823846, 'comment_body': 'I see, thanks for the clarification.', 'comment_created': datetime.datetime(2021, 6, 29, 17, 28, 19, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 660824585, 'comment_body': 'Sure, does that apply to all the` std::cout` you used int he code?', 'comment_created': datetime.datetime(2021, 6, 29, 17, 29, 9, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 660825557, 'comment_body': 'Right now we expect the user to save the model with `""ResNet""` which I think is good and should be the default, was just wondering if we should add a parameter to the Load/Save function to change the name.', 'comment_created': datetime.datetime(2021, 6, 29, 17, 30, 12, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 660827784, 'comment_body': ""I don't think that should be needed they can already change the file name for the model to save different models and i believe it would be great to limit the internal matrix name, that way bugs or any undefined load/save behavior would be easily identifiable.  "", 'comment_created': datetime.datetime(2021, 6, 29, 17, 32, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 660828437, 'comment_body': 'I believe for the new code this is the only place i have used `std::cout`.', 'comment_created': datetime.datetime(2021, 6, 29, 17, 33, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 660828709, 'comment_body': 'Sure, no problem. ', 'comment_created': datetime.datetime(2021, 6, 29, 17, 33, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 660844546, 'comment_body': 'Right, I thought I have seen it in other places as well, but you are right this is the only place you used `cout`.', 'comment_created': datetime.datetime(2021, 6, 29, 17, 57, 19, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 660845757, 'comment_body': 'You might have seen some previous code, a lot of the things wete already shifted to `Log`. ', 'comment_created': datetime.datetime(2021, 6, 29, 17, 59, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 660853715, 'comment_body': '```suggestion\r\ntypedef DarkNet<ann::CrossEntropyError<>, ann::RandomInitialization, 19>\r\n    DarkNet19;\r\n\r\ntypedef DarkNet<ann::CrossEntropyError<>, ann::RandomInitialization, 53>\r\n    DarkNet53;\r\n```', 'comment_created': datetime.datetime(2021, 6, 29, 18, 11, 15, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 660854392, 'comment_body': '```suggestion\r\n  ann::FFN<OutputLayerType, InitializationRuleType>& GetModel() { return resNet; }\r\n```', 'comment_created': datetime.datetime(2021, 6, 29, 18, 12, 18, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 661134732, 'comment_body': 'Conv1x1 and Conv3x3 can be combined into a single function. Seems repetitive, passing correct params should help.', 'comment_created': datetime.datetime(2021, 6, 30, 5, 9, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 661134836, 'comment_body': 'Lets also avoid else statements.', 'comment_created': datetime.datetime(2021, 6, 30, 5, 10, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 661135433, 'comment_body': 'Every conv layer is followed by batchnorm, so maybe move it into convBlock (the one which will be created after combining 3x3 and 1x1) function definition.', 'comment_created': datetime.datetime(2021, 6, 30, 5, 11, 39, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 661136439, 'comment_body': 'Should we add a function to add custom blocks (getter / setter) so that user can have a custom resnet if needed.', 'comment_created': datetime.datetime(2021, 6, 30, 5, 14, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 661136624, 'comment_body': '```suggestion\r\n    }\r\n\r\n    LoadModel(preTrainedPath);\r\n    return;\r\n  }\r\n\r\n```', 'comment_created': datetime.datetime(2021, 6, 30, 5, 14, 58, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 661136718, 'comment_body': 'Lets also avoid `auto` type.', 'comment_created': datetime.datetime(2021, 6, 30, 5, 15, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 661511250, 'comment_body': ""Hey, they are seperate because just having these two with default params saves a lot of other code and supplying values everywhere. I would like to keep it this way if that's possible. "", 'comment_created': datetime.datetime(2021, 6, 30, 14, 9, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 661511994, 'comment_body': 'combining them complicates the whole code a lot more and is basically non understable then. ', 'comment_created': datetime.datetime(2021, 6, 30, 14, 9, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 661512971, 'comment_body': 'Sure, we can do this, but then again keeping them seperate. ', 'comment_created': datetime.datetime(2021, 6, 30, 14, 10, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 661514435, 'comment_body': ""I don't know if that makes sense because pre trained models or specific models have a specific architecture so it doesn't makes sense to me add such a functionality here, users can use mlpack to create custom models.\r\n "", 'comment_created': datetime.datetime(2021, 6, 30, 14, 12, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 661515024, 'comment_body': 'Done ', 'comment_created': datetime.datetime(2021, 6, 30, 14, 13, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 661515448, 'comment_body': 'Will push this with the next commit. ', 'comment_created': datetime.datetime(2021, 6, 30, 14, 13, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 661516634, 'comment_body': ""Not sure how can i go by it then, because there isn't a condition that always executes."", 'comment_created': datetime.datetime(2021, 6, 30, 14, 14, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 661540947, 'comment_body': 'applied this. ', 'comment_created': datetime.datetime(2021, 6, 30, 14, 40, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 661541128, 'comment_body': 'done ', 'comment_created': datetime.datetime(2021, 6, 30, 14, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 661569964, 'comment_body': 'Lets do one thing, share the snippet you wrote that you feel is complicated we can see if its possible to simplify that. As general practice, follow : DRY principle.', 'comment_created': datetime.datetime(2021, 6, 30, 15, 11, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 661571192, 'comment_body': 'Umm, return statement inside first `if` condition?', 'comment_created': datetime.datetime(2021, 6, 30, 15, 13, 6, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 661590765, 'comment_body': 'done.', 'comment_created': datetime.datetime(2021, 6, 30, 15, 34, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 661602553, 'comment_body': ""Yup i get that but removing duplicate code here would make things complex and i don't have some code to show your right now but i can explain why i did this in the first place. \r\n\r\n1. So for now the conv1x1 has two functions or ways where it uses different image size depending if it's a down sample block or not.\r\n2. If we merge both the blocks this would still need to be set somewhere inside the function with some kind of condition  \r\n3.  if we merge them I would need to specify all the parameters at every place i use a 3x3 block or a 1x1 block, I can make it look clean without merging them and specifying only the params that i need. \r\n4. and you can see in the code for basicblock and bottleneck block, I have only specified stride width and stride height for the first layer and second layer respectively, if i merge them I would again need some condition and would need to pass all the params again.\r\n\r\nI guess these were some of the things that came in my mind when i thought about merging these two block initially. it's not that i don't want to make the code more concise but i would like to avoid making it more complicated. and keeping them sepearte allows greater level of freedom and simplicity. \r\n"", 'comment_created': datetime.datetime(2021, 6, 30, 15, 47, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 661603614, 'comment_body': 'Do you want me to write it and see if its simple?', 'comment_created': datetime.datetime(2021, 6, 30, 15, 48, 59, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 661604917, 'comment_body': 'Yeah it will be great, also i do want to say that i am not trying to avoid the change. :smile: \r\nbtw i am pushing some of the requested changes maybe then you can base your code upon that ? ', 'comment_created': datetime.datetime(2021, 6, 30, 15, 50, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 661607259, 'comment_body': 'btw for this part can you take a look at the new change? i think would need to add batch norm in the if statment too if i remove else, right ? ', 'comment_created': datetime.datetime(2021, 6, 30, 15, 53, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 661607600, 'comment_body': 'Hmm, Will share it, For mobile net lets spend more time on what should be coded than just making it work.', 'comment_created': datetime.datetime(2021, 6, 30, 15, 53, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 661610634, 'comment_body': 'Yup Sure, Do you want to discuss that over a call?  that way it would be more clear to me. ', 'comment_created': datetime.datetime(2021, 6, 30, 15, 57, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 661618494, 'comment_body': '```\r\nvoid ConvolutionBlock(SequentialType* baseLayer,\r\n                   \t  const size_t inSize,\r\n                       \t   const size_t outSize,\r\n                            const size_t strideWidth,\r\n                            const size_t strideHeight,\r\n                            const size_t kernelWidth,\r\n                            const size_t kernelHeight,\r\n                            const size_t padW = 0,\r\n                            const size_t padH = 0,\r\n                            const bool downSample = false,\r\n                            const size_t downSampleInputWidth = 0,\r\n                            const size_t downSampleInputHeight = 0)\r\n{\r\n\r\n\tif (downsample)\r\n\t{\r\n\t\tinputWidth = downSampleInputWidth;\r\n\t\tinputHeigt = downSampleInputHeight;\r\n\t}\r\n\r\n\tbaseLayer->Add(new ann::Convolution<>(inSize, outSize, kernelWidth,\r\n           kernelHeight, strideWidth, strideHeight, padW, padH,\r\n           inputWidth, inputHeight));\r\n\tbaseLayer->Add(new ann::BatchNorm<>(outSize, 1e-5));\r\n\t// Updating input dimensions.\r\n\tinputWidth = ConvOutSize(inputWidth, kernelWidth, strideWidth, padW);\r\n\tinputHeight = ConvOutSize(inputHeight, kernelHeight, strideHeight, padH);\t\r\n}\r\n```\r\nIf correctly parameters are passed this is all that is required to implement all blocks. This reduced about 50 or so lines or redundant code. Always a single function would be called with different params.', 'comment_created': datetime.datetime(2021, 6, 30, 16, 6, 57, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 661619863, 'comment_body': '> Yup Sure, Do you want to discuss that over a call? that way it would be more clear to me.\r\n\r\nSure, You can form an initial draft of the class and then we can discuss it.', 'comment_created': datetime.datetime(2021, 6, 30, 16, 8, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 661761351, 'comment_body': 'Hi, I have applied these suggestions, can you review the PR once again ? ', 'comment_created': datetime.datetime(2021, 6, 30, 19, 40, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 661840214, 'comment_body': ""Good point, let's keep it this way."", 'comment_created': datetime.datetime(2021, 6, 30, 22, 2, 22, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 661840813, 'comment_body': '```suggestion\r\n  void ConvolutionBlock(SequentialType* baseLayer,\r\n                        const size_t inSize,\r\n                        const size_t outSize,\r\n                        const size_t strideWidth = 1,\r\n                        const size_t strideHeight = 1,\r\n                        const size_t kernelWidth = 3,\r\n                        const size_t kernelHeight = 3,\r\n                        const size_t padW = 1,\r\n                        const size_t padH = 1,\r\n                        const bool downSample = false,\r\n                        const size_t downSampleInputWidth = 0,\r\n                        const size_t downSampleInputHeight = 0)\r\n```', 'comment_created': datetime.datetime(2021, 6, 30, 22, 3, 48, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 661841361, 'comment_body': '```suggestion\r\n   * \\code\r\n```', 'comment_created': datetime.datetime(2021, 6, 30, 22, 5, 3, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 661841587, 'comment_body': 'Should we wrap this into a code block as well?', 'comment_created': datetime.datetime(2021, 6, 30, 22, 5, 38, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 661842014, 'comment_body': '```suggestion\r\n```\r\n\r\nRemove the extra line here.', 'comment_created': datetime.datetime(2021, 6, 30, 22, 6, 39, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 661843611, 'comment_body': 'I think it makes sense to be somewhat restrictive here, and not allow users to change the architecture too much, so I would also just leave it as is.', 'comment_created': datetime.datetime(2021, 6, 30, 22, 9, 48, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 661843744, 'comment_body': '```suggestion\r\n  // Config for different versions.\r\n```', 'comment_created': datetime.datetime(2021, 6, 30, 22, 10, 8, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 661844006, 'comment_body': '```suggestion\r\n    mlpack::Log::Fatal << ""Incorrect ResNet version. Possible values are: 18, ""\r\n```', 'comment_created': datetime.datetime(2021, 6, 30, 22, 10, 43, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 661844259, 'comment_body': '```suggestion\r\n  // Updating input dimensions.\r\n```', 'comment_created': datetime.datetime(2021, 6, 30, 22, 11, 18, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 661844300, 'comment_body': '```suggestion\r\n  // Updating input dimensions.\r\n```', 'comment_created': datetime.datetime(2021, 6, 30, 22, 11, 25, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 661844383, 'comment_body': '```suggestion\r\n  // Updating input dimensions.\r\n```', 'comment_created': datetime.datetime(2021, 6, 30, 22, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 661966010, 'comment_body': 'We can use Conv. Block Function for this.', 'comment_created': datetime.datetime(2021, 7, 1, 4, 43, 13, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 661966719, 'comment_body': 'If we reset the input width and height above to downSampleWidth and downSampleHeight, then we can remove this if condition and always update inputWidth and inputHeight.', 'comment_created': datetime.datetime(2021, 7, 1, 4, 45, 39, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 661969776, 'comment_body': ""These params aren't being used for Downsample block i.e. kernelWidth and Height are always 1 (I guess) and padding is always zero."", 'comment_created': datetime.datetime(2021, 7, 1, 4, 50, 13, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 661973414, 'comment_body': 'Lets move the log inside the Downsample function.', 'comment_created': datetime.datetime(2021, 7, 1, 4, 54, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 661974233, 'comment_body': 'Please fix the indentation issue here.', 'comment_created': datetime.datetime(2021, 7, 1, 4, 55, 28, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 661975774, 'comment_body': 'One more thing that, you can do, is add baseLayer as default Param (set it as NULL), if a base layer is passed, Convolutional block will appended to baseLayer else it will be appended to resnet (therefore removing downSample Block and also add the downSample log in the if condition of downsample.', 'comment_created': datetime.datetime(2021, 7, 1, 4, 59, 19, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 661976177, 'comment_body': 'Lets create a function for this, since ReLU is being added a couple of times through out the code, and similarly logs are also being added.', 'comment_created': datetime.datetime(2021, 7, 1, 5, 0, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 662204260, 'comment_body': 'We would need to create another seq layer and add a identitiy layer at the start of network, should we do that ? \r\n', 'comment_created': datetime.datetime(2021, 7, 1, 11, 23, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 662205082, 'comment_body': 'I am not really sure what you meant by this. can you explain ? ', 'comment_created': datetime.datetime(2021, 7, 1, 11, 24, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 662205515, 'comment_body': 'hmm this would also solve the problem of adding another seq and identity layer, we should do this. ', 'comment_created': datetime.datetime(2021, 7, 1, 11, 25, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 662206410, 'comment_body': 'I think the inputHeight and width comment is a bit confusing other than that i have made all the changes and adding this too. \r\n', 'comment_created': datetime.datetime(2021, 7, 1, 11, 26, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 662211183, 'comment_body': ""um, So if we just want to remove that function, i don't think we need to set it to NULL, the downsample block is itself a seq layer which is added into another seq layer, which is what the current conv block already does. \r\n"", 'comment_created': datetime.datetime(2021, 7, 1, 11, 34, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 662223811, 'comment_body': 'Done ', 'comment_created': datetime.datetime(2021, 7, 1, 11, 56, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 662225306, 'comment_body': 'to do this we would need to pass a newely created, seq block in which both the conv and batch norm block can reside as you remember the last time i forgot to add them and addMerge was treating them as three things so at this point i think if we do this we would add equal number of line of codes that we remove some + or - .\r\nbtw if you still believe we should do it, let me know. ', 'comment_created': datetime.datetime(2021, 7, 1, 11, 58, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 662278631, 'comment_body': 'this was already resolved in the previous push. ', 'comment_created': datetime.datetime(2021, 7, 1, 13, 15, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 662279419, 'comment_body': 'Makes sense. ', 'comment_created': datetime.datetime(2021, 7, 1, 13, 16, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 662681184, 'comment_body': ""Either way is fine for me, if @kartikdutt18 thinks it would improve the code, let's go for it."", 'comment_created': datetime.datetime(2021, 7, 2, 1, 36, 18, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 662684844, 'comment_body': 'Do let me know and we can make the needed changes if any. ', 'comment_created': datetime.datetime(2021, 7, 2, 1, 49, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 662723077, 'comment_body': 'I think we can add a comment at the top of class that, pretrained models can be found from ... , so that once documentation is added using Doxygen, the link to pretrained models shows up.', 'comment_created': datetime.datetime(2021, 7, 2, 4, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 662723560, 'comment_body': '```suggestion\r\n    if (block == ""basicblock"")\r\n    {\r\n      if (stride != 1 || downSampleInSize != outSize * basicBlockExpansion)\r\n        downSample = true;\r\n      BasicBlock(downSampleInSize, outSize * basicBlockExpansion, stride,\r\n          stride, downSample);\r\n      downSampleInSize = outSize * basicBlockExpansion;\r\n      for (size_t i = 1; i != numBlocks; ++i)\r\n        BasicBlock(downSampleInSize, outSize);\r\n      return;\r\n    }\r\n\r\n      // Bottleneck Block (since it will be basic or bottleneck, no need for if / else if.\r\n      if (stride != 1 || downSampleInSize != outSize * bottleNeckExpansion)\r\n        downSample = true;\r\n      BottleNeck(downSampleInSize, outSize, stride, stride, downSample);\r\n      downSampleInSize = outSize * bottleNeckExpansion;\r\n      for (size_t i = 1; i != numBlocks; ++i)\r\n        BottleNeck(downSampleInSize, outSize);\r\n```', 'comment_created': datetime.datetime(2021, 7, 2, 4, 11, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 662924878, 'comment_body': '```suggestion\r\n\r\n    if (downSample == true)\r\n    {\r\n      ann::Sequential<>* downSampleBlock = new ann::Sequential<>();\r\n       ConvolutionBlock(downSampleBlock, inSize, outSize, strideWidth,\r\n           strideHeight, 1, 1, 0, 0, true, downSampleInputWidth,\r\n           downSampleInputHeight);\r\n      resBlock->Add(downSampleBlock);\r\n    }\r\n```\r\n\r\nand the function for convolution block can be changed to :\r\n ```\r\nvoid ConvolutionBlock( ann::Sequential<>* baseLayer,\r\n                         const size_t inSize,\r\n                         const size_t outSize,\r\n                         const size_t strideWidth = 1,\r\n                         const size_t strideHeight = 1,\r\n                         const size_t kernelWidth = 3,\r\n                         const size_t kernelHeight = 3,\r\n                         const size_t padW = 1,\r\n                         const size_t padH = 1,\r\n                         const bool downSample = false,\r\n                         const size_t downSampleInputWidth = 0,\r\n                         const size_t downSampleInputHeight = 0)\r\n{\r\n\r\n     if (downSample)\r\n     {\r\n       mlpack::Log::Info << ""Downsample "";\r\n       inputWidth = downSampleInputWidth;\r\n       inputHeight = downSampleInputHeight;\r\n     }\r\n\r\n     baseLayer->Add(new ann::Convolution<>(inSize, outSize, kernelWidth,\r\n         kernelHeight, strideWidth, strideHeight, padW, padH, inputWidth,\r\n         inputHeight));\r\n     mlpack::Log::Info << ""Convolution: "" << ""("" << inSize << "", "" <<\r\n         inputWidth << "", "" << inputHeight << "")"" << "" ---> ("";\r\n\r\n\r\n    // Updating input dimensions.\r\n    inputWidth = ConvOutSize(inputWidth, kernelWidth, strideWidth, padW);\r\n    inputHeight = ConvOutSize(inputHeight, kernelHeight, strideHeight,\r\n           padH);\r\n\r\n\r\n     mlpack::Log::Info << outSize << "", "" << inputWidth << "", "" <<\r\n         inputHeight << "")"" << std::endl;\r\n\r\n     baseLayer->Add(new ann::BatchNorm<>(outSize, 1e-5));\r\n     mlpack::Log::Info << ""BatchNorm: "" << ""("" << outSize << "")"" << "" ---> (""\r\n         << outSize << "")"" << std::endl;\r\n}\r\n```\r\n\r\nThis solves the comment I left about input width / height above. Also we can remove template if it is always taking sequential layer as input.', 'comment_created': datetime.datetime(2021, 7, 2, 10, 52, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 662925841, 'comment_body': 'Yup sure will add that.', 'comment_created': datetime.datetime(2021, 7, 2, 10, 54, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 662946594, 'comment_body': ""Hey, there is a problem with this, doing this changes the vars `inputWidth` and `inputHeight` which keep a track of input dimensions and changing them when a downsample block occurs messes up with the order they should go in, that's why in the current code i create two temp variables, Also do you think we should replace the downsaple block at two places. right the function itself takes around 15-18 lines, removing that and adding conv and seq layers at two places is again going to create the same number of LOC."", 'comment_created': datetime.datetime(2021, 7, 2, 11, 33, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 662946709, 'comment_body': 'Sure, I will add this too. ', 'comment_created': datetime.datetime(2021, 7, 2, 11, 33, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 662948653, 'comment_body': 'um not really sure what you meant by above the class? do you just mean in `resnet.hpp` above the class declaration ?\r\n ', 'comment_created': datetime.datetime(2021, 7, 2, 11, 37, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 662952099, 'comment_body': 'Lets have a call at 6 PM IST if possible. ', 'comment_created': datetime.datetime(2021, 7, 2, 11, 44, 36, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 662958840, 'comment_body': 'sure, will be there.\r\nWould meet be okay ?', 'comment_created': datetime.datetime(2021, 7, 2, 11, 57, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 662960141, 'comment_body': '@kartikdutt18 sent the inivtes.\r\n@zoq sent you an invite too, feel free to drop by if you want to. ', 'comment_created': datetime.datetime(2021, 7, 2, 12, 0, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}]","[{'commit_sha': '981cd1ae72ed16491ccbb7c15844e63cbc2c1d61', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '757565d62555689a09ec4ed7e2e9eb1d9b5631f5', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '091b8c2a24e9f8d5f8153e5ecdfb549fb16ad7f1', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eceb1a0490ced37aa988e054edde2983452a7e9a', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47bdad2e3646316d376ccadd28ee6210a823e4a6', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f032493984d89691a096ca25d9f49bf0b877becb', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e2d562bb85fe65a6562741b8f71c93416599450', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5350d01e66a4344368c4ec9c915b98d820d00671', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c56f6da4be82e5d68d6bfce215cc96aa787f0c57', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78eef20b2a781b0543efa13ea604474dcf92b434', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d17f7a9767d4a1da8b24fc07b6466f07951afca', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a55e6f72376a93ecf72b6e10e8e7745851d18e6', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba5e008765a1890ca400f36b842239c6aa8627eb', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b61a542f6c0caa4a9b1934f91c461cd88b0d337', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd73469ef627f5b43abdc652cd927d02e8851f891', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '408be6fa62be1331f16ed3d9887625de217416cc', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23fbad45fd0179857b41614b0f7cd9e470283bc0', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2971abd07534c5332940cdc6a09404c8e23ee9c0', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6027a5486dbedbc7a0d55d01b93fb275fa561857', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '060fb42aaf169b65073dbe20b8162c2de1e1c9db', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd514b092d6dd0330209868f86610a5a12f6fa64e', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d12d6dc69ef02a306f2cf8833ab2f28751ea871', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa9ce021e9a412a652a0e61f1a9c42dd2e9a56a2', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b0226aa0b13c2dcb99b9126fc8893adef29c925', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '759d29ab20f7ffaade2c1097c224f4e49daab7d9', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24629b62afe38b53c58f626db3b28c5a7bd72bfb', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d6cf2a5393a74fa519a8cdf1668682bbedbe0f5', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec9cd8b14d9fed93da2fd692e400347ed8f7123a', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2dd2fbf5c46669d0dc77e11521a1c3faaa847542', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82e171d46c190401c72bb7b58beb6db8042c7411', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52e05f9e2408bd2539394cba0f90f8d490d6548e', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18bfb63ebcbc634c23c17de8f9893eb576c9050b', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8558cf7a692a5daf5b7b9e4365339fa3dc4fc62d', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee0924ada04fd9b5446799b5d534e59778f02f74', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b0a2f688b3fc4d33184d9c3aa667eb311515608', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dfc6b341dfadf7353620336657db188266cf122', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f401949b76fc82a1b054e8a2d0c1b4607d73ef63', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '545097199a668b485ca2bfb03072608ef17c479c', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfae86a2e3cc27ddc861750158bd7e608d0c5bcc', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}]",Aakash kaushik,39410692,kaushikaakash7539@gmail.com,User,,34,,1,40
685165958,Addition of MobileNet_V1,,True,72,https://api.github.com/repos/mlpack/models/pulls/72,https://github.com/mlpack/models/pull/72,closed,629,6,9,21,55,26,1,0,[{'name': 't: added feature'}],2021-07-07 12:48:48+00:00,2021-07-21 15:02:41+00:00,1217633.0,"14 days, 2:13:53","[{'comment_id': 665338575, 'comment_body': 'Should we implement something like in mlpack too ? ', 'comment_created': datetime.datetime(2021, 7, 7, 12, 50, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 665780843, 'comment_body': 'I think that would make sense.', 'comment_created': datetime.datetime(2021, 7, 8, 0, 4, 19, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 668216210, 'comment_body': ""@zoq, @kartikdutt18 we probably also need something like global avg pooling, in this the conv layer generates a output of `[1, 1024, 7, 7]` in the order where `[batch, channel, width, height]` so a global avg pool layer takes the avg of `[1, 1->1024, 7, 7]` and produces a output of `[1, 1024]` we don't have anything like this right now, but maybe i am missing something so do let me know. "", 'comment_created': datetime.datetime(2021, 7, 12, 19, 59, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 668220220, 'comment_body': 'Instead of adding fully connected layers on top of the feature maps, we take the average of each feature map, and the resulting vector is fed directly into the softmax layer. One advantage of global average pooling over the fully connected layers is that it is more native to the convolution structure by enforcing correspondences between feature maps and categories. Thus the feature maps can be easily interpreted as categories confidence maps. Another advantage is that there is no parameter to optimize in the global average pooling thus overfitting is avoided at this layer. Futhermore, global average pooling sums out the spatial information, thus it is more robust to spatial translations of the input.\r\n\r\nA more formal defination if the one that i wrote confuses us. \r\nand aa proper reference: https://www.machinecurve.com/index.php/2020/01/30/what-are-max-pooling-average-pooling-global-max-pooling-and-global-average-pooling/#global-average-pooling', 'comment_created': datetime.datetime(2021, 7, 12, 20, 6, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 668353626, 'comment_body': ""Agreed, having global avg pooling is probably the cleanest way to implement this. Your are also right, we currently don't have that layer."", 'comment_created': datetime.datetime(2021, 7, 13, 1, 3, 25, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 668421013, 'comment_body': 'I think we can use ApativePooling layer with output size (1,1). It should work same as global average / max pooling.\r\nRef : https://discuss.pytorch.org/t/global-average-pooling-in-pytorch/6721/10', 'comment_created': datetime.datetime(2021, 7, 13, 4, 39, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 668422582, 'comment_body': 'But that will pool over the output to reduce it to what we want, rather than we want to just take the mean of that [7*7] block for every 1024 output we have. ', 'comment_created': datetime.datetime(2021, 7, 13, 4, 44, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 668422715, 'comment_body': 'So the number of dims might be same but the way how it reduces it would change, right ? ', 'comment_created': datetime.datetime(2021, 7, 13, 4, 44, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 668432304, 'comment_body': 'Could you take a look at this https://colab.research.google.com/drive/1g8ybtpHFCN_VIQWgi4zH4frciao_MUwD?usp=sharing\r\nBecause we do have average pooling layer in mlpack. ', 'comment_created': datetime.datetime(2021, 7, 13, 5, 13, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 668443271, 'comment_body': 'makes sense, thanks for writing this. So i believe our adaptive avg pool with input as (1, 1) should work just fine. ', 'comment_created': datetime.datetime(2021, 7, 13, 5, 43, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 668449599, 'comment_body': 'Yes.', 'comment_created': datetime.datetime(2021, 7, 13, 5, 59, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 670481947, 'comment_body': 'https://github.com/mlpack/mlpack/blob/42071e92be63221da73a620de5beac0a5c537a9c/src/mlpack/methods/ann/layer/convolution_impl.hpp#L71,\r\nHere, total padding would be of 2 but in the PyTorch implementation, https://github.com/ZFTurbo/MobileNet-v1-Pytorch/blob/e08a77a1b93f7fcb68960766cf5958cee3c1a134/mobilenet_v1.py#L19, could you see if dims match?', 'comment_created': datetime.datetime(2021, 7, 15, 13, 51, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 670491924, 'comment_body': 'Hey, so as you can see the output dimensions do match. \r\nMlpack\r\n```bash\r\n[INFO ] Convolution: (3, 224, 224) ---> (32, 112, 112)\r\n[INFO ] BatchNorm: (32) ---> (32)\r\n[INFO ] RelU6\r\n[INFO ] Block starts: \r\n[INFO ] Separable convolution: (32, 112, 112) ---> (32, 112, 112)\r\n[INFO ] BatchNorm: (32) ---> (32)\r\n[INFO ] RelU6\r\n[INFO ] Convolution: (32, 112, 112) ---> (64, 112, 112)\r\n[INFO ] BatchNorm: (64) ---> (64)\r\n[INFO ] RelU6\r\n[INFO ] Block starts: \r\n[INFO ] Padding: (64, 112, 112 ---> (64, 113, 113)\r\n[INFO ] Separable convolution: (64, 113, 113) ---> (64, 56, 56)\r\n[INFO ] BatchNorm: (64) ---> (64)\r\n[INFO ] RelU6\r\n[INFO ] Convolution: (64, 56, 56) ---> (128, 56, 56)\r\n[INFO ] BatchNorm: (128) ---> (128)\r\n[INFO ] RelU6\r\n[INFO ] Block starts: \r\n[INFO ] Separable convolution: (128, 56, 56) ---> (128, 56, 56)\r\n[INFO ] BatchNorm: (128) ---> (128)\r\n[INFO ] RelU6\r\n[INFO ] Convolution: (128, 56, 56) ---> (128, 56, 56)\r\n[INFO ] BatchNorm: (128) ---> (128)\r\n[INFO ] RelU6\r\n[INFO ] Block starts: \r\n[INFO ] Padding: (128, 56, 56 ---> (128, 57, 57)\r\n[INFO ] Separable convolution: (128, 57, 57) ---> (128, 28, 28)\r\n[INFO ] BatchNorm: (128) ---> (128)\r\n[INFO ] RelU6\r\n[INFO ] Convolution: (128, 28, 28) ---> (256, 28, 28)\r\n[INFO ] BatchNorm: (256) ---> (256)\r\n[INFO ] RelU6\r\n[INFO ] Block starts: \r\n[INFO ] Separable convolution: (256, 28, 28) ---> (256, 28, 28)\r\n[INFO ] BatchNorm: (256) ---> (256)\r\n[INFO ] RelU6\r\n[INFO ] Convolution: (256, 28, 28) ---> (256, 28, 28)\r\n[INFO ] BatchNorm: (256) ---> (256)\r\n[INFO ] RelU6\r\n[INFO ] Block starts: \r\n[INFO ] Padding: (256, 28, 28 ---> (256, 29, 29)\r\n[INFO ] Separable convolution: (256, 29, 29) ---> (256, 14, 14)\r\n[INFO ] BatchNorm: (256) ---> (256)\r\n[INFO ] RelU6\r\n[INFO ] Convolution: (256, 14, 14) ---> (512, 14, 14)\r\n[INFO ] BatchNorm: (512) ---> (512)\r\n[INFO ] RelU6\r\n[INFO ] Block starts: \r\n[INFO ] Separable convolution: (512, 14, 14) ---> (512, 14, 14)\r\n[INFO ] BatchNorm: (512) ---> (512)\r\n[INFO ] RelU6\r\n[INFO ] Convolution: (512, 14, 14) ---> (512, 14, 14)\r\n[INFO ] BatchNorm: (512) ---> (512)\r\n[INFO ] RelU6\r\n[INFO ] Block starts: \r\n[INFO ] Separable convolution: (512, 14, 14) ---> (512, 14, 14)\r\n[INFO ] BatchNorm: (512) ---> (512)\r\n[INFO ] RelU6\r\n[INFO ] Convolution: (512, 14, 14) ---> (512, 14, 14)\r\n[INFO ] BatchNorm: (512) ---> (512)\r\n[INFO ] RelU6\r\n[INFO ] Block starts: \r\n[INFO ] Separable convolution: (512, 14, 14) ---> (512, 14, 14)\r\n[INFO ] BatchNorm: (512) ---> (512)\r\n[INFO ] RelU6\r\n[INFO ] Convolution: (512, 14, 14) ---> (512, 14, 14)\r\n[INFO ] BatchNorm: (512) ---> (512)\r\n[INFO ] RelU6\r\n[INFO ] Block starts: \r\n[INFO ] Separable convolution: (512, 14, 14) ---> (512, 14, 14)\r\n[INFO ] BatchNorm: (512) ---> (512)\r\n[INFO ] RelU6\r\n[INFO ] Convolution: (512, 14, 14) ---> (512, 14, 14)\r\n[INFO ] BatchNorm: (512) ---> (512)\r\n[INFO ] RelU6\r\n[INFO ] Block starts: \r\n[INFO ] Separable convolution: (512, 14, 14) ---> (512, 14, 14)\r\n[INFO ] BatchNorm: (512) ---> (512)\r\n[INFO ] RelU6\r\n[INFO ] Convolution: (512, 14, 14) ---> (512, 14, 14)\r\n[INFO ] BatchNorm: (512) ---> (512)\r\n[INFO ] RelU6\r\n[INFO ] Block starts: \r\n[INFO ] Padding: (512, 14, 14 ---> (512, 15, 15)\r\n[INFO ] Separable convolution: (512, 15, 15) ---> (512, 7, 7)\r\n[INFO ] BatchNorm: (512) ---> (512)\r\n[INFO ] RelU6\r\n[INFO ] Convolution: (512, 7, 7) ---> (1024, 7, 7)\r\n[INFO ] BatchNorm: (1024) ---> (1024)\r\n[INFO ] RelU6\r\n[INFO ] Block starts: \r\n[INFO ] Separable convolution: (1024, 7, 7) ---> (1024, 7, 7)\r\n[INFO ] BatchNorm: (1024) ---> (1024)\r\n[INFO ] RelU6\r\n[INFO ] Convolution: (1024, 7, 7) ---> (1024, 7, 7)\r\n[INFO ] BatchNorm: (1024) ---> (1024)\r\n[INFO ] RelU6\r\n[INFO ] Mean pooling: (1024, 7, 7) ---> (1024, 1, 1)\r\n[INFO ] Dropout\r\n[INFO ] Convolution: (1024, 1, 1) ---> (1000 , 1, 1)\r\n[INFO ] Softmax\r\n```\r\nPyTorch\r\n```bash\r\n---------------------------------------------------------------\r\n        Layer (type)               Output Shape         Param #\r\n================================================================\r\n     ConstantPad2d-1          [-1, 3, 225, 225]               0\r\n            Conv2d-2         [-1, 32, 112, 112]             864\r\n       BatchNorm2d-3         [-1, 32, 112, 112]              64\r\n             ReLU6-4         [-1, 32, 112, 112]               0\r\n            Conv2d-5         [-1, 32, 112, 112]             288\r\n       BatchNorm2d-6         [-1, 32, 112, 112]              64\r\n             ReLU6-7         [-1, 32, 112, 112]               0\r\n            Conv2d-8         [-1, 64, 112, 112]           2,048\r\n       BatchNorm2d-9         [-1, 64, 112, 112]             128\r\n            ReLU6-10         [-1, 64, 112, 112]               0\r\n    ConstantPad2d-11         [-1, 64, 113, 113]               0\r\n           Conv2d-12           [-1, 64, 56, 56]             576\r\n      BatchNorm2d-13           [-1, 64, 56, 56]             128\r\n            ReLU6-14           [-1, 64, 56, 56]               0\r\n           Conv2d-15          [-1, 128, 56, 56]           8,192\r\n      BatchNorm2d-16          [-1, 128, 56, 56]             256\r\n            ReLU6-17          [-1, 128, 56, 56]               0\r\n           Conv2d-18          [-1, 128, 56, 56]           1,152\r\n      BatchNorm2d-19          [-1, 128, 56, 56]             256\r\n            ReLU6-20          [-1, 128, 56, 56]               0\r\n           Conv2d-21          [-1, 128, 56, 56]          16,384\r\n      BatchNorm2d-22          [-1, 128, 56, 56]             256\r\n            ReLU6-23          [-1, 128, 56, 56]               0\r\n    ConstantPad2d-24          [-1, 128, 57, 57]               0\r\n           Conv2d-25          [-1, 128, 28, 28]           1,152\r\n      BatchNorm2d-26          [-1, 128, 28, 28]             256\r\n            ReLU6-27          [-1, 128, 28, 28]               0\r\n           Conv2d-28          [-1, 256, 28, 28]          32,768\r\n      BatchNorm2d-29          [-1, 256, 28, 28]             512\r\n            ReLU6-30          [-1, 256, 28, 28]               0\r\n           Conv2d-31          [-1, 256, 28, 28]           2,304\r\n      BatchNorm2d-32          [-1, 256, 28, 28]             512\r\n            ReLU6-33          [-1, 256, 28, 28]               0\r\n           Conv2d-34          [-1, 256, 28, 28]          65,536\r\n      BatchNorm2d-35          [-1, 256, 28, 28]             512\r\n            ReLU6-36          [-1, 256, 28, 28]               0\r\n    ConstantPad2d-37          [-1, 256, 29, 29]               0\r\n           Conv2d-38          [-1, 256, 14, 14]           2,304\r\n      BatchNorm2d-39          [-1, 256, 14, 14]             512\r\n            ReLU6-40          [-1, 256, 14, 14]               0\r\n           Conv2d-41          [-1, 512, 14, 14]         131,072\r\n      BatchNorm2d-42          [-1, 512, 14, 14]           1,024\r\n            ReLU6-43          [-1, 512, 14, 14]               0\r\n           Conv2d-44          [-1, 512, 14, 14]           4,608\r\n      BatchNorm2d-45          [-1, 512, 14, 14]           1,024\r\n            ReLU6-46          [-1, 512, 14, 14]               0\r\n           Conv2d-47          [-1, 512, 14, 14]         262,144\r\n      BatchNorm2d-48          [-1, 512, 14, 14]           1,024\r\n            ReLU6-49          [-1, 512, 14, 14]               0\r\n           Conv2d-50          [-1, 512, 14, 14]           4,608\r\n      BatchNorm2d-51          [-1, 512, 14, 14]           1,024\r\n            ReLU6-52          [-1, 512, 14, 14]               0\r\n           Conv2d-53          [-1, 512, 14, 14]         262,144\r\n      BatchNorm2d-54          [-1, 512, 14, 14]           1,024\r\n            ReLU6-55          [-1, 512, 14, 14]               0\r\n           Conv2d-56          [-1, 512, 14, 14]           4,608\r\n      BatchNorm2d-57          [-1, 512, 14, 14]           1,024\r\n            ReLU6-58          [-1, 512, 14, 14]               0\r\n           Conv2d-59          [-1, 512, 14, 14]         262,144\r\n      BatchNorm2d-60          [-1, 512, 14, 14]           1,024\r\n            ReLU6-61          [-1, 512, 14, 14]               0\r\n           Conv2d-62          [-1, 512, 14, 14]           4,608\r\n      BatchNorm2d-63          [-1, 512, 14, 14]           1,024\r\n            ReLU6-64          [-1, 512, 14, 14]               0\r\n           Conv2d-65          [-1, 512, 14, 14]         262,144\r\n      BatchNorm2d-66          [-1, 512, 14, 14]           1,024\r\n            ReLU6-67          [-1, 512, 14, 14]               0\r\n           Conv2d-68          [-1, 512, 14, 14]           4,608\r\n      BatchNorm2d-69          [-1, 512, 14, 14]           1,024\r\n            ReLU6-70          [-1, 512, 14, 14]               0\r\n           Conv2d-71          [-1, 512, 14, 14]         262,144\r\n      BatchNorm2d-72          [-1, 512, 14, 14]           1,024\r\n            ReLU6-73          [-1, 512, 14, 14]               0\r\n    ConstantPad2d-74          [-1, 512, 15, 15]               0\r\n           Conv2d-75            [-1, 512, 7, 7]           4,608\r\n      BatchNorm2d-76            [-1, 512, 7, 7]           1,024\r\n            ReLU6-77            [-1, 512, 7, 7]               0\r\n           Conv2d-78           [-1, 1024, 7, 7]         524,288\r\n      BatchNorm2d-79           [-1, 1024, 7, 7]           2,048\r\n            ReLU6-80           [-1, 1024, 7, 7]               0\r\n           Conv2d-81           [-1, 1024, 7, 7]           9,216\r\n      BatchNorm2d-82           [-1, 1024, 7, 7]           2,048\r\n            ReLU6-83           [-1, 1024, 7, 7]               0\r\n           Conv2d-84           [-1, 1024, 7, 7]       1,048,576\r\n      BatchNorm2d-85           [-1, 1024, 7, 7]           2,048\r\n            ReLU6-86           [-1, 1024, 7, 7]               0\r\n        AvgPool2d-87           [-1, 1024, 1, 1]               0\r\n           Conv2d-88           [-1, 1000, 1, 1]       1,025,000\r\n================================================================\r\n```', 'comment_created': datetime.datetime(2021, 7, 15, 14, 1, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 670798031, 'comment_body': 'Can you add a comment above, that explains why we build against your fork for now.', 'comment_created': datetime.datetime(2021, 7, 15, 20, 53, 38, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 670798278, 'comment_body': 'Looks like we can remove the include here.', 'comment_created': datetime.datetime(2021, 7, 15, 20, 54, 8, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 670798854, 'comment_body': 'Looks like this is missing the example code.', 'comment_created': datetime.datetime(2021, 7, 15, 20, 55, 1, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 670953502, 'comment_body': 'By default, I think this should be 1.', 'comment_created': datetime.datetime(2021, 7, 16, 4, 20, 27, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 670953635, 'comment_body': 'Lets add an empty line here.', 'comment_created': datetime.datetime(2021, 7, 16, 4, 20, 53, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 670953880, 'comment_body': 'Lets have a function for this, should be cleaner.', 'comment_created': datetime.datetime(2021, 7, 16, 4, 21, 41, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 670954059, 'comment_body': 'The above for convolution can be used here as well.', 'comment_created': datetime.datetime(2021, 7, 16, 4, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 670954413, 'comment_body': 'Could you add a comment here, about what these values are / how we are testing this.', 'comment_created': datetime.datetime(2021, 7, 16, 4, 23, 26, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 670956165, 'comment_body': 'yup, should have been, I missed it. ', 'comment_created': datetime.datetime(2021, 7, 16, 4, 27, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 671016050, 'comment_body': 'do you think it would be fine if we could leave this as is, this would make us write some conditions inside the convblock for when to use the 1, 1 passed by us. ', 'comment_created': datetime.datetime(2021, 7, 16, 7, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 671016445, 'comment_body': ""Done, i've replaced this and also the conv block inside the deptwise conv block. "", 'comment_created': datetime.datetime(2021, 7, 16, 7, 6, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 671016487, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 16, 7, 7, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 671076726, 'comment_body': 'We can also just use input params and init them by default with input width and height but still seems like an overkill for such a simple addition. ', 'comment_created': datetime.datetime(2021, 7, 16, 8, 46, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}]","[{'commit_sha': 'aa97be974f9ee4c9b9f057aae7d25c669e6747a0', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c46c643749a5daaf243cbb03810239b502feace', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f41a4887a3ad8794fe8c155e98b7235f04d8331', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '822b52682789ec15dfb92026499d93c8e5958881', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b41a2ee840d777aa22af029ecdeaa4e91a20b42', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b59a54ba6a85f373377c1ca941a66c9b2bb28a69', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9adacd5192a1bb98bda6d3783b11da9b958158f', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d6fe479c71f20b40d98b1ef7e38b03459b0cbf5', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e66908ccf93d6628204265671439a4b181e95909', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0812ad8cc65579004cee093ed88cce6640fdc6d6', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47d0ffb36a0f091845af0957c98d40952e3db836', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '944257221071daf9c9224b2517b7af08cd1bd46f', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cbf301a9afbcb1e3d53ed1d4b8390d522ba61e2', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5936ff2017caf1edfc569dd9145f669d21d98064', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '496ba85a7fb502ec9464e2552c8f649c523ba0d2', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6d7e0c50383429d1728facf201307a709aff398', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '629c27986179de944829ab2c2d6c7aa27739eceb', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0768a77fb0f974de622316463ff31ab02d04ee2e', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4c2f536f1c3eea460e37188c3063681eec76e7f', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b157d24f62862b42fef54bf7c5d23cb50257b469', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53f2f39f3c4527fd539d9aa74a54802a410987b5', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}]",Aakash kaushik,39410692,kaushikaakash7539@gmail.com,User,,34,,1,40
680088106,Deprecation of ubuntu 16.04 in pipeline ,"![image](https://user-images.githubusercontent.com/39410692/123819135-2b5e2f00-d917-11eb-9866-8434148569f3.png)
The support will go out in September and azure only uses the LTS versions of ubuntu and tags them with `ubuntu-latest` so using this should fix us and wouldn't need any change or a long time but I can also see the benefit of using `ubuntu-20.04` where it doesn't changes and we can have a testing env we know.   

Let me know your opinions. ",True,67,https://api.github.com/repos/mlpack/models/pulls/67,https://github.com/mlpack/models/pull/67,closed,1,1,1,3,2,4,1,0,[{'name': 'c: build system'}],2021-06-29 14:50:29+00:00,2021-06-30 21:57:24+00:00,112015.0,"1 day, 7:06:55","[{'comment_id': 660721516, 'comment_body': 'Using `ubuntu-latest` sounds reasonable to me.', 'comment_created': datetime.datetime(2021, 6, 29, 15, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 660725006, 'comment_body': 'Nice, also this is the same for mlpack too, so should i open a PR there too ? ', 'comment_created': datetime.datetime(2021, 6, 29, 15, 21, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 660732490, 'comment_body': 'For mlpack we wanted to make sure we run tests against the oldest version, so we will wait until September 20.', 'comment_created': datetime.datetime(2021, 6, 29, 15, 29, 38, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 660734241, 'comment_body': 'Sure, maybe we can leave it that way. ', 'comment_created': datetime.datetime(2021, 6, 29, 15, 31, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}]","[{'commit_sha': '981cd1ae72ed16491ccbb7c15844e63cbc2c1d61', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '757565d62555689a09ec4ed7e2e9eb1d9b5631f5', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0077b4615f43207712982ab35b0b02063082c725', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}]",Aakash kaushik,39410692,kaushikaakash7539@gmail.com,User,,34,,1,40
682981499,Use catch2 instead of ctest,"ctest reports tests to pass even if they are failed, this is done just so we know if some tests fail. 

reference comment: https://github.com/mlpack/models/pull/63#issuecomment-870899105

reverting back on #69 closed it automatically so creating this PR. ",True,70,https://api.github.com/repos/mlpack/models/pulls/70,https://github.com/mlpack/models/pull/70,closed,6,6,3,4,2,5,1,0,[{'name': 'c: build system'}],2021-07-03 07:09:32+00:00,2021-07-08 23:23:43+00:00,490451.0,"5 days, 16:14:11","[{'comment_id': 663426684, 'comment_body': '`models_test.exe` should be in  the `Release` folder.', 'comment_created': datetime.datetime(2021, 7, 4, 0, 36, 27, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 666541352, 'comment_body': 'Maybe we should leave off the `-x 50`?  That way the log will contain the logs for all failed tests.  (But maybe there is a reason to add it that I overlooked?)', 'comment_created': datetime.datetime(2021, 7, 8, 21, 51, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rcurtin', 'type': 'User'}, {'comment_id': 666546283, 'comment_body': 'So the -x 50 is included because we would want catch2 to continue even if some tests fail. And suppose you have a couple of tests failing therefore 50 is a big enough number to accomodate them all so you can address them at once. ', 'comment_created': datetime.datetime(2021, 7, 8, 22, 3, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 666547144, 'comment_body': 'Got it.  Thanks for the clarification!', 'comment_created': datetime.datetime(2021, 7, 8, 22, 5, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rcurtin', 'type': 'User'}, {'comment_id': 666548340, 'comment_body': 'No problem 😃', 'comment_created': datetime.datetime(2021, 7, 8, 22, 7, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}]","[{'commit_sha': '669df338135e1b3342c61508468323e2309402cb', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55c5934e15b9f03479f5cc8c6a3e05608f90fc85', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '037c1781eb9249d13eb832df90bb5294b9a95380', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d38aa4bc881b3221683397b09dba530e2271f31', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}]",Aakash kaushik,39410692,kaushikaakash7539@gmail.com,User,,34,,1,40
695974985,Ctest Fix,"We removed ctest couple of days ago because it was reporting failed test cases as passed, this is a fix so it reports tests corectly.

So I have a obvious failing test case in this PR, just to check if it detects and reports the failing tests properly and if so I am just going to remove the extra test i added and this should be good to go then. 

Btw i just found out that if you are not nervous while debugging something it helps a lot in actually concurring the problem. :D
~ Quotes by Aakash :rofl:   ",True,73,https://api.github.com/repos/mlpack/models/pulls/73,https://github.com/mlpack/models/pull/73,closed,35,37,8,6,10,0,1,0,[{'name': 't: bugfix'}],2021-07-23 14:13:59+00:00,2021-07-28 23:36:44+00:00,465765.0,"5 days, 9:22:45",[],"[{'commit_sha': 'f82aa1a0e2f808e654ac979847f85c7cfaac749d', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bd274776b1bd31b79f0372b7fae040a6e577468', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35b2dacf3b0d5038adacce418a6b509799d71f2d', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c64c13853cb3cf04f7e5dc3c4f77720803c1758', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02d4ad4f504a5a407a8a9f0867891b2174033e11', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '433dbd6c9bbb8412462c9a85b565b25adb109329', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}]",Aakash kaushik,39410692,kaushikaakash7539@gmail.com,User,,34,,1,40
677187808,Documentation for models repo,"### Requirements:
```
1. git+https://github.com/bashtage/sphinx-material.git
2. breathe = 4.30.0
3. exhale = 0.2.3
4. sphinx = 3.5.4
5. m2r2
```
All of the above mentioned packages are `pip3` installable 

```
doxygen = 1.9.1
```

### Steps to produce the documentation everytime there is a change 
```
cd doc
make html 
```
this should create a build folder in the doc directory in which you will find a html folder which will have all the files. 

### The main three files if you want to change anything are:
```
1. Doxyfile
2. conf.py
3. index.rst
```
All three files are inside `doc/source`

Do let me know if you need anything else.",True,65,https://api.github.com/repos/mlpack/models/pulls/65,https://github.com/mlpack/models/pull/65,closed,3339,33,14,35,17,0,2,0,"[{'name': 'c: documentation'}, {'name': 't: added feature'}]",2021-06-24 14:59:38+00:00,2021-09-09 19:16:56+00:00,6668238.0,"77 days, 4:17:18",[],"[{'commit_sha': '5e2b9150af2b10e80ee7044fd08d47ec9ce80982', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa97be974f9ee4c9b9f057aae7d25c669e6747a0', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c46c643749a5daaf243cbb03810239b502feace', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f41a4887a3ad8794fe8c155e98b7235f04d8331', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '822b52682789ec15dfb92026499d93c8e5958881', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b41a2ee840d777aa22af029ecdeaa4e91a20b42', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b59a54ba6a85f373377c1ca941a66c9b2bb28a69', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9adacd5192a1bb98bda6d3783b11da9b958158f', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d6fe479c71f20b40d98b1ef7e38b03459b0cbf5', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e66908ccf93d6628204265671439a4b181e95909', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0812ad8cc65579004cee093ed88cce6640fdc6d6', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47d0ffb36a0f091845af0957c98d40952e3db836', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '944257221071daf9c9224b2517b7af08cd1bd46f', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cbf301a9afbcb1e3d53ed1d4b8390d522ba61e2', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5936ff2017caf1edfc569dd9145f669d21d98064', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '496ba85a7fb502ec9464e2552c8f649c523ba0d2', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6d7e0c50383429d1728facf201307a709aff398', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '629c27986179de944829ab2c2d6c7aa27739eceb', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0768a77fb0f974de622316463ff31ab02d04ee2e', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4c2f536f1c3eea460e37188c3063681eec76e7f', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b157d24f62862b42fef54bf7c5d23cb50257b469', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53f2f39f3c4527fd539d9aa74a54802a410987b5', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c0a84b51c1534b3554e56fddf70710341d5b617', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1a23dbbd757f483fab703289d5a972867a653b1', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58e24cc800d0d3b70e44fedb27c0185da5d2e0d5', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d13c357b3e7c3f53eb4abc7f8e3de2725de2c3d', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6485d0fa75ca4a47562380b59f471831e8ccf172', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61d0a980b0a8bda1471c618aa8170b9486aa3441', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ec6f14ed0cedc268e5f09ef8367b63bf770022e', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39007936ab634d95eb5382f559376c595c14db88', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4f013d68174a6fffa97d7097a31007e07b5ed0f', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81fd0374cdfebb2079d9fce00f7641409a22edcb', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b69280eb64d4e154dc6e4a7ec595ba81d4d61e1', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67ec82e1307cce49e0dcddf8004e670f4db29b04', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f3ca8565a7cd09df13d5f2c308ef1133a26d034', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}]",Aakash kaushik,39410692,kaushikaakash7539@gmail.com,User,,34,,1,40
682993849,Addition of DepthWise layer ,"Aims to add depthwise seperable convolution:
Majority of the work was done in #2172 

Has the same purpose as mentioned in the above PR, This is needed for the addition of mobilenet in models repo.
The PR is a work in progress and is just created to track the progress.  ",False,3007,https://api.github.com/repos/mlpack/mlpack/pulls/3007,https://github.com/mlpack/mlpack/pull/3007,closed,1053,41,11,25,37,34,3,0,"[{'name': 's: stale'}, {'name': 'c: methods'}, {'name': 't: added feature'}]",2021-07-03 09:00:52+00:00,2022-06-20 03:59:20+00:00,30394708.0,"351 days, 18:58:28","[{'comment_id': 664602194, 'comment_body': '```suggestion\r\n    const arma::Mat<eT>& error,\r\n```\r\n\r\nMaybe this should fix the issue.', 'comment_created': datetime.datetime(2021, 7, 6, 14, 22, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 664602856, 'comment_body': '```suggestion\r\n                const arma::Mat<eT>& error,\r\n```', 'comment_created': datetime.datetime(2021, 7, 6, 14, 22, 58, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 664888413, 'comment_body': 'I think it would be okay, if you add you here as well.', 'comment_created': datetime.datetime(2021, 7, 6, 21, 25, 23, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664888736, 'comment_body': 'Looks like we only have to include `naive_convolution.hpp`.', 'comment_created': datetime.datetime(2021, 7, 6, 21, 26, 8, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664889099, 'comment_body': 'Should we cite https://openaccess.thecvf.com/content_cvpr_2017/html/Chollet_Xception_Deep_Learning_CVPR_2017_paper.html?', 'comment_created': datetime.datetime(2021, 7, 6, 21, 26, 55, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664889332, 'comment_body': '```suggestion\r\n                       const std::string& paddingType = ""None"");\r\n```\r\n\r\nJust to follow the coding style.', 'comment_created': datetime.datetime(2021, 7, 6, 21, 27, 23, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664889539, 'comment_body': '```suggestion\r\n                       const std::string& paddingType = ""None"");\r\n```\r\n\r\nJust to follow the mlpack style guide.', 'comment_created': datetime.datetime(2021, 7, 6, 21, 27, 46, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664890003, 'comment_body': '```suggestion\r\n    /* left-right flip, up-down flip */\r\n```', 'comment_created': datetime.datetime(2021, 7, 6, 21, 28, 41, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664890806, 'comment_body': '```suggestion\r\n  weight = arma::cube(weights.memptr(), kernelWidth, kernelHeight,\r\n      outSize * (inSize / numGroups), false, false);\r\n  bias = arma::mat(weights.memptr() + weight.n_elem,\r\n      outSize, 1, false, false);\r\n```\r\n\r\nShould be tabbed twice (4 spaces).', 'comment_created': datetime.datetime(2021, 7, 6, 21, 30, 7, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664891544, 'comment_body': 'I think the plan is to compare the gradient as well?', 'comment_created': datetime.datetime(2021, 7, 6, 21, 31, 35, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 665098650, 'comment_body': 'do we add another author with just a `,` or with another `@author` tag ? and i thought that majority of the work was done by @kartikdutt18 so it was better to leave it that way.  ', 'comment_created': datetime.datetime(2021, 7, 7, 7, 4, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 665101477, 'comment_body': 'https://arxiv.org/abs/1403.1687 I believe it would be better if we cite this, depthwise convs i were first introduced in this paper.', 'comment_created': datetime.datetime(2021, 7, 7, 7, 9, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 665103219, 'comment_body': 'sublime gave me an indent of 2 space and just out of habit i tabbed twice :p , fixed it. ', 'comment_created': datetime.datetime(2021, 7, 7, 7, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 665103482, 'comment_body': 'Should add that too. ', 'comment_created': datetime.datetime(2021, 7, 7, 7, 12, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 665113905, 'comment_body': 'Um a bit confsued here but how can i get the gradients for a single layer in pytorch and repeat the same in mlpack. ', 'comment_created': datetime.datetime(2021, 7, 7, 7, 28, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 665121407, 'comment_body': 'I have added all the things except this one, I am not sure how to execute it. ', 'comment_created': datetime.datetime(2021, 7, 7, 7, 39, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 665685142, 'comment_body': ""You should be able to just use:\r\n\r\n```python\r\nlayer._parameters['weight'].grad.data\r\nlayer._parameters['bias'].grad.data\r\n```"", 'comment_created': datetime.datetime(2021, 7, 7, 20, 28, 44, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 665686450, 'comment_body': 'I believe that shows as `None` if you only have a single component, also how do you do this in mlpack. ', 'comment_created': datetime.datetime(2021, 7, 7, 20, 31, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 665691466, 'comment_body': 'You can construct just a simple network, https://discuss.pytorch.org/t/how-to-print-the-computed-gradient-values-for-a-network/34179 does have an example. You can do the same thing in mlpack and use https://github.com/mlpack/mlpack/blob/master/src/mlpack/methods/ann/ffn.hpp#L273 to get the gradient. You could implement a numerical gradient check, https://github.com/mlpack/mlpack/blob/master/src/mlpack/tests/ann_layer_test.cpp#L131-L167 has an example. In this case you just define the layer and the input.', 'comment_created': datetime.datetime(2021, 7, 7, 20, 39, 46, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 666187644, 'comment_body': '@zoq, @kartikdutt18 I added the test and also added a comment on the tolerance of `0.4`.', 'comment_created': datetime.datetime(2021, 7, 8, 13, 22, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 666548981, 'comment_body': 'This is quite large, do you have the output of `CheckGradient(function)`?', 'comment_created': datetime.datetime(2021, 7, 8, 22, 9, 26, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 666549853, 'comment_body': 'It was something around `0.39xx`', 'comment_created': datetime.datetime(2021, 7, 8, 22, 11, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 666804382, 'comment_body': 'The thing is I am not sure if the test case is written properly, so if you could help me rectify that it would be more helpful. ', 'comment_created': datetime.datetime(2021, 7, 9, 9, 18, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 667130304, 'comment_body': 'The test implementation is correct.', 'comment_created': datetime.datetime(2021, 7, 9, 18, 13, 4, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 667611668, 'comment_body': 'Lets also add test cases similar to convolution layer i.e. by varying values of parameters (especially num_groups here).\r\nAlso we should add a test to check value for backward function. \r\nRef : https://github.com/mlpack/mlpack/blob/42071e92be63221da73a620de5beac0a5c537a9c/src/mlpack/tests/ann_layer_test.cpp#L2438', 'comment_created': datetime.datetime(2021, 7, 12, 4, 11, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 667750913, 'comment_body': ""Hi, will add both the tests but do you think it's a better idea to identify the problem i have first because i was not able to find any solution to that and haivng mismatching values when i run them locally vs when on pipeline is creating a lot of problems. "", 'comment_created': datetime.datetime(2021, 7, 12, 8, 58, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 677246959, 'comment_body': 'Hey @kartikdutt18 I am not sure how to get the backward value of a module in pytroch, do you have something i can look into for this? \r\ncc: @zoq ', 'comment_created': datetime.datetime(2021, 7, 27, 8, 45, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 677287025, 'comment_body': ""I have left these blank as i didn't knew how to compute the backward value in PyTorch to compare. "", 'comment_created': datetime.datetime(2021, 7, 27, 9, 38, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 677287115, 'comment_body': 'Same as above', 'comment_created': datetime.datetime(2021, 7, 27, 9, 38, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 678022288, 'comment_body': 'Hey, Could you take a look at this notebook for calculating values (https://colab.research.google.com/drive/1V-g_NmKMuM2EAm79CDwwAXswca1WbE0u?usp=sharing).', 'comment_created': datetime.datetime(2021, 7, 28, 6, 50, 7, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 678093440, 'comment_body': 'So i wrote this \r\n\r\n```python3\r\nimport torch\r\nimport torch.nn as nn\r\n\r\nconv = nn.Conv2d(1, 4, 3, 1, 0, 1, 1)\r\n\r\nconv.weight = nn.Parameter(torch.ones_like(conv.weight))\r\nconv.bias = nn.Parameter(torch.ones_like(conv.bias))\r\none = torch.ones((1, 1, 20, 20), requires_grad=True)\r\none = one * 2\r\none.retain_grad()\r\nout = conv(one)\r\nout.sum().backward(retain_graph=True)\r\nprint(torch.sum(one.grad))\r\n```\r\nand the output is  :\r\n\r\n```bash\r\ntensor(11664.)\r\n```\r\n\r\nWhile for mlpack i have this code : \r\n\r\n```c++\r\n  arma::mat input, output, delta;\r\n  SeparableConvolution<> module2(1, 4, 3, 3, 1, 1, 0, 0, 20, 20, 1);\r\n\r\n  // Test the forward function.\r\n  input.set_size(20 * 20, 1);\r\n  input.fill(2);\r\n  module2.Parameters().fill(1);\r\n  module2.Reset();\r\n  module2.Forward(input, output);\r\n\r\n  // Comparison value taken from PyTorch conv layer with the same config\r\n  std::cout << arma::accu(output) << std::endl; //24624\r\n\r\n  module2.Backward(input, output, delta);\r\n  std::cout << arma::accu(delta) << std::endl;\r\n```\r\n\r\nwhose output is : \r\n\r\n```bash\r\n24624   <- this being the forward output\r\n221616 <- and this is the delta\r\n```\r\n\r\nSo now i am unsure about two things: \r\n1. Am I comparing the right values ?\r\n2. Is the code for both the tests right ? ', 'comment_created': datetime.datetime(2021, 7, 28, 8, 35, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 680454182, 'comment_body': ""I think the comparison is correct. However I'm not completely sure, maybe Marcus can take a look at this."", 'comment_created': datetime.datetime(2021, 8, 1, 5, 34, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 680458129, 'comment_body': '@zoq can you take a look too ? ', 'comment_created': datetime.datetime(2021, 8, 1, 6, 14, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 681014423, 'comment_body': 'Can you print the shape of the gradient and weights as well.', 'comment_created': datetime.datetime(2021, 8, 2, 14, 22, 41, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}]","[{'commit_sha': '969adab85f74a1443d8588761cfa47711cf9aa3f', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2710db5a53aa196721a89b9f953f56e15b4d2a12', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '631f1abc039abbee45a546ff8428b266eba02bd6', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bd9e256ce993635b21d1281fc09d5b884844508', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a384e28b16e5544c189ad36fabf024a59802a5c0', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24e1f9f093565c9cae27da350a336d9d3d40fda2', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7362cfb7afa6a0503e9103c891d7045b195e7dd0', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8ae94df2a8650c4599af2edced8c4369e92cb61', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f3e82f1a4d5a625bbd3c1e5bffe0e2040af5173', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e176f133cd103a6b36773f6da5e17e00294963e6', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6220b8f1bf1af7b41367ab820e4a16b6ecbd13cf', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12042ba9fe2c4fbeb66347749eb2d443665d6b23', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f74f5cf4f0af2454a408efec25f22e4ac9e238e9', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0108786fe185f7031282500191ac0b707b15eac4', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8ade2bd303fa252f57d3955d724f92aa9233b19', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c339754ea5cbd0787527b758008fe285cf9b9ce', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac174febbc5bc5a4a771dab5af410f522c86465b', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9af97d691df0a4bbbfadaf421d86530148da504', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60317a2bf9f51d09945332eadfab4b2eb7ef08db', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b76659319e7d733e9860cce384ab9aa4e2919280', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '850cca86d39f6fe18dcf265b22c4bd77255cedd7', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '919764121e6dde9e831b5283834f7e6607cce69c', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b7137cfc79ad4baf4dabe0666bb47582392055f', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ff0a18608fd63cbbd29fddd9feeafc9d54fe9a5', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5b0e7a0d8f17a5f970b4f0776372b918effc289', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}]",Aakash kaushik,39410692,kaushikaakash7539@gmail.com,User,,34,,1,40
674064802,Documentation with sphinx+breathe+exhale,"Req: 
```
1. Sphinx
2. exhale 
3. breathe
4. karma-sphinx-theme
```
All of these can be simply installed with pip and these are the exact component names, then go to docs and run `make html`

You are going to see that doxygen runs successfully but then it encounters a error somewhere else if this step succeeds we would only need to add a line to index.rst in `doc/sphinx/index.rst` to have a documentation which we can further tune, but for now this errors holds us back. 

Feel free to ask if anything is keeping you from reproducing this and this is no final things i just opened this PR so we can see what we want and experiment over this.  
 ",False,2990,https://api.github.com/repos/mlpack/mlpack/pulls/2990,https://github.com/mlpack/mlpack/pull/2990,closed,198,12,15,17,32,0,2,0,"[{'name': 'help wanted'}, {'name': 's: stale'}]",2021-06-20 16:45:22+00:00,2022-06-20 03:59:19+00:00,31490037.0,"364 days, 11:13:57",[],"[{'commit_sha': '8d6ace079c0073b27ee78a04388a33c86bf6b288', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a67fb72b6b3743c3066ab9e5c71a958c1c9c17e', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f223d2be82c149dc517da8662935245cc114ecdb', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc6b94f71a439d51e71e65b5b3d046e6cbab799f', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '308f2e151329397cae04fc71345494c6553e3129', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e943ffef663815c991aa3563cfd43229a308a1f5', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88f3a80c279d4da12456499706bfa9a13ebf61a1', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad05820edf36968e2b159b9b3f07e35b73bcada7', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8f82e1636f586f0d9d9ce29bc119b9ddc71c31c', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55b905f13dc9227823abe2178c71efb3f27d8446', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cf1f83cc798466262178b18bae5fb42c39ae4e3', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52f9c7e5e5a0d0d2a2977d448fc49faf1617fce8', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39e581b29b84daee218234ed3b7c1c29ed729112', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f144285dfb86eac12b40ddfabd2b03c7714d7080', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f5a3f0c226c0ba6079f833bec80fadc64b01c5d', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5873d69c9df687d71cb3cef2b58b637c6934f39', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9107a4f2fc44615ff71de66580a76812f0297b10', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}]",Aakash kaushik,39410692,kaushikaakash7539@gmail.com,User,,34,,1,40
686155712,Addition of ReLU6,"Initial draft PR for addition of ReLU6
PyTorch reference [here](https://pytorch.org/docs/stable/generated/torch.nn.ReLU6.html)
Requirement: Needed to Implement [Mobilenet V1](https://github.com/mlpack/models/pull/72)

Function Originally introduced in the paper: [MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications](https://arxiv.org/pdf/1704.04861)",True,3009,https://api.github.com/repos/mlpack/mlpack/pulls/3009,https://github.com/mlpack/mlpack/pull/3009,closed,233,0,6,5,10,8,2,0,"[{'name': 'c: methods'}, {'name': 't: added feature'}]",2021-07-08 16:17:58+00:00,2021-07-12 04:06:47+00:00,301729.0,"3 days, 11:48:49","[{'comment_id': 666409068, 'comment_body': '```suggestion\r\ntemplate<typename InputDataType = arma::mat,\r\n         typename OutputDataType = arma::mat>\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 17, 59, 25, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 666411130, 'comment_body': 'That only works if output is already initialized, if not you have to use `output = arma::zeros<OutputDataType>(arma::size(input));`', 'comment_created': datetime.datetime(2021, 7, 8, 18, 2, 41, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 666547692, 'comment_body': 'Some function are missing from the layer, like `Delta()`.', 'comment_created': datetime.datetime(2021, 7, 8, 22, 6, 30, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 666547894, 'comment_body': '```suggestion\r\n  for (size_t i = 0; i < input.n_elem; ++i)\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 22, 6, 57, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 666548131, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 22, 7, 30, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 667128493, 'comment_body': 'Can you add a comment where the values are coming from, I guess from the PyTorch implementation?', 'comment_created': datetime.datetime(2021, 7, 9, 18, 9, 49, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 667151230, 'comment_body': 'Sure, will add a comment. ', 'comment_created': datetime.datetime(2021, 7, 9, 18, 53, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 667152457, 'comment_body': 'Done.\r\nSeems like ready for a final review. ', 'comment_created': datetime.datetime(2021, 7, 9, 18, 56, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}]","[{'commit_sha': '0aa0c7e257fbff8d4ee9c77b40cdb0817d2f7863', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '810258d8d39da1ea23125f3cd56a449b1e620c12', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b2475d89cc5c4f1d86512eb51d16578a5d3cc77', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2a0ed9995c91bf724de14d973de89ced286f9cb', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b7b1079e57ddf5d5b2877ae7fed8274141f286a', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}]",Aakash kaushik,39410692,kaushikaakash7539@gmail.com,User,,34,,1,40
681797087,Move Sequential layers to LayerTypes,"Moving the `sequential` Layers from `MoreTypes` to `LayerTypes` because preTrained models created with these required us to move these layers to make it work and while deserializing it requires that both the layers still be in `LayerTypes` which is currently not the case so the tests in models repo fail and any user who would try to use them would face a similar error in deserialization 

More Info on this [commnet](https://github.com/mlpack/models/pull/63#issuecomment-870899105) 
Related to the [Addtition of resnet Module](https://github.com/mlpack/models/pull/63)

cc: @kartikdutt18, @zoq ",True,3004,https://api.github.com/repos/mlpack/mlpack/pulls/3004,https://github.com/mlpack/mlpack/pull/3004,closed,4,4,1,2,1,0,0,0,[],2021-07-01 12:08:49+00:00,2021-07-02 04:02:02+00:00,57193.0,15:53:13,[],"[{'commit_sha': '2eb2a242e3df275fc803c5f99a0c5d598ee3da2b', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9491f0b01e6bc8fbed01364d54c07eec38176f2a', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}]",Aakash kaushik,39410692,kaushikaakash7539@gmail.com,User,,34,,1,40
679192014,Corrects wrong serialization for BatchNorm and Virtual BN,"While loading models which were using any of these two layer the weights param were not properly initialized because loading was set to false, setting it to true does the trick. 

Thanks to @zoq and @kartikdutt18 for helping find it out.

Closes #2561  ",True,2999,https://api.github.com/repos/mlpack/mlpack/pulls/2999,https://github.com/mlpack/mlpack/pull/2999,closed,2,2,2,1,0,0,2,0,"[{'name': 'c: methods'}, {'name': 't: bugfix'}]",2021-06-28 16:26:59+00:00,2021-06-28 20:35:33+00:00,14914.0,4:08:34,[],"[{'commit_sha': '96703ce69d67093220d78ba0756b71fca99b9fc8', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}]",Aakash kaushik,39410692,kaushikaakash7539@gmail.com,User,,34,,1,40
670716249,Padding layer fix for multiple filters,"The current implementation of the padding layer only accounted for a single filter and added the padding to only a single filter even if there were multiple of them, this PR aims to account for that and the code works but there are somethings that i would like to discuss.

1. This layer was implemented by taking inspiration from the maxpool layer and in that there are two params which are `inputWidth` and `inputHeight` now i don't think those params are auto initialized in a `FFN` class and that class is used as a module rather than a direct layer because of those two params? (I might be wrong here).
2. If we want to use the padding class directly as a layer it would require that it now accepts `inputWidth` and `inputHeight`  or whever it is used as amoudle it would require that we update the internal vairables which are `inputHeight` and `inputWidth` after creating the `Padding` module and in turn so much code change that uses padding. :tired_face: 

Is there any better solution to this ? 
I might have missed something that i would have wanted to say so let me know if you feel like something is missing. ",True,2985,https://api.github.com/repos/mlpack/mlpack/pulls/2985,https://github.com/mlpack/mlpack/pull/2985,closed,103,8,3,11,10,30,3,0,"[{'name': 'c: methods'}, {'name': 't: bugfix'}, {'name': 't: added feature'}]",2021-06-15 20:15:47+00:00,2021-06-17 10:08:55+00:00,136388.0,"1 day, 13:53:08","[{'comment_id': 652404239, 'comment_body': 'Looks like this check fails in the pipeline.', 'comment_created': datetime.datetime(2021, 6, 16, 7, 0, 6, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 652426762, 'comment_body': 'Yes, it just compiled locally too and i checked the same, i think there are some elements that get lost in the translation but i steped throught it with gdb the dimensions seemed right, can you spot something that might be peoducing this ?  ', 'comment_created': datetime.datetime(2021, 6, 16, 7, 34, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 652431219, 'comment_body': 'Let me know if this makes sense, number of slices above nCols * inSize, but in the subcube the last slice is inSize - 1. The code should be you iterate over all columns i.e. batches and shape them as cube and pad them.', 'comment_created': datetime.datetime(2021, 6, 16, 7, 40, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 652431395, 'comment_body': 'So in the code when i assign it to inputTemp it changes for some reason: \r\n```bash\r\ninput: 1.6052e+06\r\ninput Temp: 1.57739e+06\r\n```\r\nthis was the value of the input and when it was assigned to the `inputTemp` var. ', 'comment_created': datetime.datetime(2021, 6, 16, 7, 41, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 652435070, 'comment_body': 'that does make sense, so for now if i assume that there was only a single batch which i have in the test case it should work, right ? \r\n', 'comment_created': datetime.datetime(2021, 6, 16, 7, 45, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 652436097, 'comment_body': 'for now the problem arises when i convert it to a cube, the inside elements change somewhere and somehow, I am not aware what that is and the dimensions are right, I have checked that. \r\n\r\n', 'comment_created': datetime.datetime(2021, 6, 16, 7, 47, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 652437147, 'comment_body': 'Lets first fix the implementation and the we can see if there is an issue with the cube conversion.', 'comment_created': datetime.datetime(2021, 6, 16, 7, 48, 40, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 652438560, 'comment_body': 'Sure will do that in sometime, have a test in 40 mins so. ', 'comment_created': datetime.datetime(2021, 6, 16, 7, 50, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 652439312, 'comment_body': 'Sure, Best of Luck!', 'comment_created': datetime.datetime(2021, 6, 16, 7, 51, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 652440287, 'comment_body': 'Thanks :hugs: ', 'comment_created': datetime.datetime(2021, 6, 16, 7, 52, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 652615936, 'comment_body': 'About what to serialize  `inputWidth` and `inputHeight`.', 'comment_created': datetime.datetime(2021, 6, 16, 11, 54, 47, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 652812032, 'comment_body': ""Can you also add a test case where batch size isn't one."", 'comment_created': datetime.datetime(2021, 6, 16, 15, 37, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 652812684, 'comment_body': 'Please add an empty line after closing braces.', 'comment_created': datetime.datetime(2021, 6, 16, 15, 38, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 652813010, 'comment_body': '```suggestion\r\n    outputTemp = arma::zeros<arma::Cube<eT>>(inputWidth + padWLeft + padWRight,\r\n```', 'comment_created': datetime.datetime(2021, 6, 16, 15, 38, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 652814110, 'comment_body': 'Might be cleaner to remove else statement simply set output values here and return.', 'comment_created': datetime.datetime(2021, 6, 16, 15, 40, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 652818096, 'comment_body': 'Looks good, Could you share a print output for a test case [Output of each slice]. Just to verify that values are being set in the cells.', 'comment_created': datetime.datetime(2021, 6, 16, 15, 44, 42, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 652818650, 'comment_body': ""I somewhere read that in such situations you should have a space so your compiler doesn't misunderstands it as a `>>` pipe, I mean this isn't a preoblem with mine but i just wanted to know if that is a thing because i did read it in accelerated c++. "", 'comment_created': datetime.datetime(2021, 6, 16, 15, 45, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 652823171, 'comment_body': 'I can do that but that would just mean writing the same `outputWidth` and `outputHeight` code two times. Is this what you meant ? ', 'comment_created': datetime.datetime(2021, 6, 16, 15, 50, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 652823332, 'comment_body': 'Sure, give me a minute. ', 'comment_created': datetime.datetime(2021, 6, 16, 15, 50, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 652829511, 'comment_body': 'Code used, i tried to keep it simple with the dimensions so it\'s easy to check\r\n```c++\r\n#include <mlpack/core.hpp>\r\n#include <mlpack/methods/ann/layer/layer.hpp>\r\n#include <mlpack/methods/ann/ffn.hpp>\r\n#include <mlpack/methods/ann/layer/layer_types.hpp>\r\n\r\nusing namespace mlpack;\r\nusing namespace arma;\r\n\r\nint main()\r\n{\r\n  arma::mat input, output;\r\n  ann::Padding<> module(1, 1, 1, 1, 3, 3);\r\n  input = arma::randu(3 * 3 * 1, 1);\r\n\r\n  module.Forward(input, output);\r\n\r\n  std::cout<<""input Rows: ""<<input.n_rows<<std::endl;\r\n  std::cout<<""input Cols: ""<<input.n_cols<<std::endl;\r\n  input.print();\r\n\r\n  std::cout<<""output Rows: ""<<output.n_rows<<std::endl;\r\n  std::cout<<""output Cols: ""<<output.n_cols<<std::endl;\r\n  output.print();\r\n\r\n  return 0;\r\n}\r\n```\r\nNot the best visualization in the world but does the job, \r\n```\r\ninput Rows: 9\r\ninput Cols: 1\r\n   0.7868\r\n   0.2505\r\n   0.7107\r\n   0.9467\r\n   0.0193\r\n   0.4049\r\n   0.2513\r\n   0.0227\r\n   0.5206\r\noutput Rows: 25\r\noutput Cols: 1\r\n        0\r\n        0\r\n        0\r\n        0\r\n        0\r\n        0\r\n   0.7868\r\n   0.2505\r\n   0.7107\r\n        0\r\n        0\r\n   0.9467\r\n   0.0193\r\n   0.4049\r\n        0\r\n        0\r\n   0.2513\r\n   0.0227\r\n   0.5206\r\n        0\r\n        0\r\n        0\r\n        0\r\n        0\r\n        0\r\n```', 'comment_created': datetime.datetime(2021, 6, 16, 15, 56, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 652830232, 'comment_body': 'I have applied the suggestion though. \r\n', 'comment_created': datetime.datetime(2021, 6, 16, 15, 57, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 652830455, 'comment_body': ""held this because wasn't sure about this. \r\n"", 'comment_created': datetime.datetime(2021, 6, 16, 15, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 652864948, 'comment_body': ""Not sure either, I guess @kartikdutt18 likes to add a `return` statement after line 55, and just remove the else case? On the other side, I think we will remove the first case anyway, right now it's just a quick patch so we don't have to update the existing layers/tests?"", 'comment_created': datetime.datetime(2021, 6, 16, 16, 42, 49, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 652870559, 'comment_body': 'for the current implementation we would need the two cases because of the input dimensions if they are zero there will be a float div error  ', 'comment_created': datetime.datetime(2021, 6, 16, 16, 50, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 652872198, 'comment_body': ""and i just believe it's a better idea to keep two cases so no need to change other impls because even now i face a 0 error with max pool layer in my model, though a different case. \r\n"", 'comment_created': datetime.datetime(2021, 6, 16, 16, 52, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 653266779, 'comment_body': 'We can use C++11 features right, so C++ has defer function, so you can right the statement once [set outputWidth and outputHeight]. It will be a lot cleaner.', 'comment_created': datetime.datetime(2021, 6, 17, 6, 36, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 653268239, 'comment_body': 'Testing if we can use this.', 'comment_created': datetime.datetime(2021, 6, 17, 6, 38, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 653270342, 'comment_body': 'I have never used defer so let me take a look at it and if i can i will chage the code that way. \r\n', 'comment_created': datetime.datetime(2021, 6, 17, 6, 42, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}, {'comment_id': 653281852, 'comment_body': ""Will merge this once builds come back green so it isn't blocker anymore, Will raise a PR for the changes in this and other layers that call Padding layer."", 'comment_created': datetime.datetime(2021, 6, 17, 7, 1, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 653284955, 'comment_body': 'Sounds good i just need to fix the tests one more time :D\r\n', 'comment_created': datetime.datetime(2021, 6, 17, 7, 6, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Aakash-kaushik', 'type': 'User'}]","[{'commit_sha': '8ae3f44530bb9f9ece7be377dac282f5782444ad', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16a9740e90d386aed9503575679fe62c23dfaae3', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a69768fb2d2caa367ead542cfe4e1b694a48caba', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d0cbf8c27cbf972e6cf4160c28691bcf1c1c497', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55625e9d43e5bd78241471c9d2598ba46f9b8f64', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9adb7c9f660abebe04d8845efa75afe5bba94176', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f04fc01a770b03f7da7c07c06c9fc1e9dff4702', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e16170fe9878aeb59ef705ef268f8da5d563143', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75ee2878b358f69e79d44863c9e1e74703ee6ca9', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54641c604fa534cfbb18b0c244db3e6129068bc3', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8397a64944c48aee6687d95cf3d95e8f42615e42', 'committer_username': 'Aakash-kaushik', 'committer_name': 'Aakash kaushik', 'committer_email': 'kaushikaakash7539@gmail.com', 'commit_date': datetime.datetime(2018, 5, 18, 14, 3, 13, tzinfo=datetime.timezone.utc)}]",Aakash kaushik,39410692,kaushikaakash7539@gmail.com,User,,34,,1,40

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
248572894,models,mlpack/models,C++,41,34,24,25,456,17,1,12,"[{'id': 695974985, 'number': 73, 'closed': datetime.datetime(2021, 7, 28, 23, 36, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 23, 14, 13, 59, tzinfo=datetime.timezone.utc), 'time_taken': 465765.0, 'time_delta': '5 days, 9:22:45', 'additions': 35, 'deletions': 37, 'state': 'closed'}, {'id': 685165958, 'number': 72, 'closed': datetime.datetime(2021, 7, 21, 15, 2, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 12, 48, 48, tzinfo=datetime.timezone.utc), 'time_taken': 1217633.0, 'time_delta': '14 days, 2:13:53', 'additions': 629, 'deletions': 6, 'state': 'closed'}, {'id': 682981499, 'number': 70, 'closed': datetime.datetime(2021, 7, 8, 23, 23, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 3, 7, 9, 32, tzinfo=datetime.timezone.utc), 'time_taken': 490451.0, 'time_delta': '5 days, 16:14:11', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 682648405, 'number': 69, 'closed': datetime.datetime(2021, 7, 3, 7, 4, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 13, 54, 21, tzinfo=datetime.timezone.utc), 'time_taken': 61827.0, 'time_delta': '17:10:27', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 682644480, 'number': 68, 'closed': datetime.datetime(2021, 7, 2, 13, 49, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 13, 48, 42, tzinfo=datetime.timezone.utc), 'time_taken': 61.0, 'time_delta': '0:01:01', 'additions': 816, 'deletions': 25, 'state': 'closed'}, {'id': 680088106, 'number': 67, 'closed': datetime.datetime(2021, 6, 30, 21, 57, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 29, 14, 50, 29, tzinfo=datetime.timezone.utc), 'time_taken': 112015.0, 'time_delta': '1 day, 7:06:55', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 677187808, 'number': 65, 'closed': datetime.datetime(2021, 9, 9, 19, 16, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 14, 59, 38, tzinfo=datetime.timezone.utc), 'time_taken': 6668238.0, 'time_delta': '77 days, 4:17:18', 'additions': 3339, 'deletions': 33, 'state': 'closed'}, {'id': 677019054, 'number': 64, 'closed': datetime.datetime(2021, 6, 24, 14, 47, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 11, 14, 20, tzinfo=datetime.timezone.utc), 'time_taken': 12781.0, 'time_delta': '3:33:01', 'additions': 43867, 'deletions': 3, 'state': 'closed'}, {'id': 673868587, 'number': 63, 'closed': datetime.datetime(2021, 7, 3, 12, 55, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 19, 11, 49, 54, tzinfo=datetime.timezone.utc), 'time_taken': 1213526.0, 'time_delta': '14 days, 1:05:26', 'additions': 813, 'deletions': 21, 'state': 'closed'}, {'id': 657499014, 'number': 61, 'closed': datetime.datetime(2021, 6, 21, 11, 21, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 29, 16, 44, 3, tzinfo=datetime.timezone.utc), 'time_taken': 1967842.0, 'time_delta': '22 days, 18:37:22', 'additions': 776, 'deletions': 3, 'state': 'closed'}, {'id': 649744355, 'number': 57, 'closed': datetime.datetime(2021, 5, 21, 13, 34, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 21, 7, 45, 50, tzinfo=datetime.timezone.utc), 'time_taken': 20910.0, 'time_delta': '5:48:30', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 645155555, 'number': 56, 'closed': datetime.datetime(2021, 5, 27, 4, 16, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 15, 14, 27, 31, tzinfo=datetime.timezone.utc), 'time_taken': 1000132.0, 'time_delta': '11 days, 13:48:52', 'additions': 519, 'deletions': 122, 'state': 'closed'}, {'id': 622282739, 'number': 55, 'closed': datetime.datetime(2021, 5, 15, 14, 26, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 23, 19, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1882594.0, 'time_delta': '21 days, 18:56:34', 'additions': 18179, 'deletions': 267, 'state': 'closed'}, {'id': 594483917, 'number': 52, 'closed': datetime.datetime(2021, 5, 8, 9, 44, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 17, 7, 45, 35, tzinfo=datetime.timezone.utc), 'time_taken': 4499954.0, 'time_delta': '52 days, 1:59:14', 'additions': 18029, 'deletions': 198, 'state': 'closed'}, {'id': 594399256, 'number': 51, 'closed': datetime.datetime(2021, 3, 17, 15, 32, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 17, 4, 47, 31, tzinfo=datetime.timezone.utc), 'time_taken': 38703.0, 'time_delta': '10:45:03', 'additions': 5, 'deletions': 5, 'state': 'closed'}]"
28149409,mlpack,mlpack/mlpack,C++,1590,4977,183,321,30199,24,11,15,"[{'id': 686155712, 'number': 3009, 'closed': datetime.datetime(2021, 7, 12, 4, 6, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 16, 17, 58, tzinfo=datetime.timezone.utc), 'time_taken': 301729.0, 'time_delta': '3 days, 11:48:49', 'additions': 233, 'deletions': 0, 'state': 'closed'}, {'id': 682993849, 'number': 3007, 'closed': datetime.datetime(2022, 6, 20, 3, 59, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 3, 9, 0, 52, tzinfo=datetime.timezone.utc), 'time_taken': 30394708.0, 'time_delta': '351 days, 18:58:28', 'additions': 1053, 'deletions': 41, 'state': 'closed'}, {'id': 681797087, 'number': 3004, 'closed': datetime.datetime(2021, 7, 2, 4, 2, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 1, 12, 8, 49, tzinfo=datetime.timezone.utc), 'time_taken': 57193.0, 'time_delta': '15:53:13', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 679192014, 'number': 2999, 'closed': datetime.datetime(2021, 6, 28, 20, 35, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 28, 16, 26, 59, tzinfo=datetime.timezone.utc), 'time_taken': 14914.0, 'time_delta': '4:08:34', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 674064802, 'number': 2990, 'closed': datetime.datetime(2022, 6, 20, 3, 59, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 20, 16, 45, 22, tzinfo=datetime.timezone.utc), 'time_taken': 31490037.0, 'time_delta': '364 days, 11:13:57', 'additions': 198, 'deletions': 12, 'state': 'closed'}, {'id': 670716249, 'number': 2985, 'closed': datetime.datetime(2021, 6, 17, 10, 8, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 20, 15, 47, tzinfo=datetime.timezone.utc), 'time_taken': 136388.0, 'time_delta': '1 day, 13:53:08', 'additions': 103, 'deletions': 8, 'state': 'closed'}, {'id': 620442171, 'number': 2925, 'closed': datetime.datetime(2021, 4, 26, 13, 35, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 21, 18, 44, 40, tzinfo=datetime.timezone.utc), 'time_taken': 413457.0, 'time_delta': '4 days, 18:50:57', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 506655817, 'number': 2678, 'closed': datetime.datetime(2020, 11, 11, 19, 31, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 20, 10, 3, 34, tzinfo=datetime.timezone.utc), 'time_taken': 1934874.0, 'time_delta': '22 days, 9:27:54', 'additions': 1573, 'deletions': 1544, 'state': 'closed'}, {'id': 505456839, 'number': 2677, 'closed': datetime.datetime(2020, 10, 20, 10, 4, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 18, 11, 30, 44, tzinfo=datetime.timezone.utc), 'time_taken': 167601.0, 'time_delta': '1 day, 22:33:21', 'additions': 860, 'deletions': 852, 'state': 'closed'}, {'id': 500499093, 'number': 2666, 'closed': datetime.datetime(2020, 10, 11, 14, 28, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 9, 10, 33, 35, tzinfo=datetime.timezone.utc), 'time_taken': 186891.0, 'time_delta': '2 days, 3:54:51', 'additions': 84, 'deletions': 103, 'state': 'closed'}, {'id': 497439539, 'number': 2657, 'closed': datetime.datetime(2020, 10, 7, 9, 46, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 4, 14, 8, 4, tzinfo=datetime.timezone.utc), 'time_taken': 243529.0, 'time_delta': '2 days, 19:38:49', 'additions': 8, 'deletions': 9, 'state': 'closed'}, {'id': 496441096, 'number': 2644, 'closed': datetime.datetime(2020, 10, 10, 11, 42, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 1, 17, 48, 15, tzinfo=datetime.timezone.utc), 'time_taken': 755674.0, 'time_delta': '8 days, 17:54:34', 'additions': 492, 'deletions': 482, 'state': 'closed'}, {'id': 496417503, 'number': 2643, 'closed': datetime.datetime(2020, 10, 1, 17, 17, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 1, 17, 17, 16, tzinfo=datetime.timezone.utc), 'time_taken': 43.0, 'time_delta': '0:00:43', 'additions': 480, 'deletions': 474, 'state': 'closed'}, {'id': 495708552, 'number': 2640, 'closed': datetime.datetime(2020, 10, 2, 14, 27, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 30, 18, 43, 52, tzinfo=datetime.timezone.utc), 'time_taken': 157446.0, 'time_delta': '1 day, 19:44:06', 'additions': 53, 'deletions': 46, 'state': 'closed'}, {'id': 495704693, 'number': 2638, 'closed': datetime.datetime(2020, 10, 1, 11, 46, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 30, 18, 38, 11, tzinfo=datetime.timezone.utc), 'time_taken': 61686.0, 'time_delta': '17:08:06', 'additions': 159, 'deletions': 163, 'state': 'closed'}, {'id': 489521841, 'number': 2627, 'closed': datetime.datetime(2020, 9, 22, 4, 41, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 18, 20, 18, 21, tzinfo=datetime.timezone.utc), 'time_taken': 289408.0, 'time_delta': '3 days, 8:23:28', 'additions': 46, 'deletions': 48, 'state': 'closed'}, {'id': 486861402, 'number': 2622, 'closed': datetime.datetime(2020, 9, 20, 15, 23, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 14, 20, 22, 15, tzinfo=datetime.timezone.utc), 'time_taken': 500483.0, 'time_delta': '5 days, 19:01:23', 'additions': 192, 'deletions': 0, 'state': 'closed'}, {'id': 486855411, 'number': 2621, 'closed': datetime.datetime(2020, 10, 2, 15, 16, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 14, 20, 10, 26, tzinfo=datetime.timezone.utc), 'time_taken': 1537574.0, 'time_delta': '17 days, 19:06:14', 'additions': 235, 'deletions': 0, 'state': 'closed'}, {'id': 486853199, 'number': 2620, 'closed': datetime.datetime(2020, 9, 16, 22, 42, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 14, 20, 5, 50, tzinfo=datetime.timezone.utc), 'time_taken': 182205.0, 'time_delta': '2 days, 2:36:45', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 483122606, 'number': 2612, 'closed': datetime.datetime(2020, 9, 14, 19, 47, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 9, 20, 37, 33, tzinfo=datetime.timezone.utc), 'time_taken': 429019.0, 'time_delta': '4 days, 23:10:19', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 479706433, 'number': 2603, 'closed': datetime.datetime(2020, 9, 14, 19, 46, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 4, 13, 52, 7, tzinfo=datetime.timezone.utc), 'time_taken': 885282.0, 'time_delta': '10 days, 5:54:42', 'additions': 192, 'deletions': 0, 'state': 'closed'}]"
