pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
682656377,Providing SQL statements,"Added support for sql queries. Implemented methods:
* ```Connection::execute()``` - equivalent of  [box.execute()](https://www.tarantool.io/en/doc/latest/reference/reference_lua/box_sql/execute/)
* ```Connection::prepare()``` - equivalent of [box.prepare()](https://www.tarantool.io/en/doc/latest/reference/reference_lua/box_sql/prepare/)

Added new structures ```ColumnMap```, ```SqlInfo```, ```Metadata``` and readers for them.
Added tests for the methods above.",False,16,https://api.github.com/repos/tarantool/tntcxx/pulls/16,https://github.com/tarantool/tntcxx/pull/16,closed,579,23,6,4,1,5,0,0,[],2021-07-02 14:05:25+00:00,2023-12-06 11:33:35+00:00,76627690.0,"886 days, 21:28:10","[{'comment_id': 681338323, 'comment_body': 'These fields should be incapsulated into struct data, so that Body consists only of two parts: data and error_stack.', 'comment_created': datetime.datetime(2021, 8, 2, 23, 55, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Korablev77', 'type': 'User'}, {'comment_id': 681339413, 'comment_body': 'Too many blank lines', 'comment_created': datetime.datetime(2021, 8, 2, 23, 58, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Korablev77', 'type': 'User'}, {'comment_id': 681339590, 'comment_body': 'Why sqlInfo reader should care about access denied errors?', 'comment_created': datetime.datetime(2021, 8, 2, 23, 59, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Korablev77', 'type': 'User'}, {'comment_id': 681340054, 'comment_body': 'Too many blank lines', 'comment_created': datetime.datetime(2021, 8, 3, 0, 0, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Korablev77', 'type': 'User'}, {'comment_id': 693757254, 'comment_body': 'Add also test cases including collations, autoincrements, different spans etc so that cover all possible values of metadata.', 'comment_created': datetime.datetime(2021, 8, 23, 8, 14, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Korablev77', 'type': 'User'}]","[{'commit_sha': 'e4e84e8946faa91be1516f5576f4a4bc92a04132', 'committer_username': 'AnastasMIPT', 'committer_name': 'Anastasiy Belyaev', 'committer_email': 'beliaev.ab@phystech.edu', 'commit_date': datetime.datetime(2019, 9, 5, 14, 26, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87660acbf984a73580e7f236d8264ac9d33926ca', 'committer_username': 'AnastasMIPT', 'committer_name': 'Anastasiy Belyaev', 'committer_email': 'beliaev.ab@phystech.edu', 'commit_date': datetime.datetime(2019, 9, 5, 14, 26, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6c6559c899bce9712d6455dd05115ec3f8b8541', 'committer_username': 'AnastasMIPT', 'committer_name': 'Anastasiy Belyaev', 'committer_email': 'beliaev.ab@phystech.edu', 'commit_date': datetime.datetime(2019, 9, 5, 14, 26, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b41889629ddc2cccbf07f13f6ddc01e8fa441ca', 'committer_username': 'AnastasMIPT', 'committer_name': 'Anastasiy Belyaev', 'committer_email': 'beliaev.ab@phystech.edu', 'commit_date': datetime.datetime(2019, 9, 5, 14, 26, 17, tzinfo=datetime.timezone.utc)}]",Anastasiy Belyaev,54947616,beliaev.ab@phystech.edu,User,,17,,14,21
714025554,Providing user authentication,"* Added an overload to the ```Connector::connect()``` method, which takes
a ```config``` structure containing address, port, username and password.
If the name and password are specified, the user is authorized.
* Added tests to check and as an example of how to use the function.",False,21,https://api.github.com/repos/tarantool/tntcxx/pulls/21,https://github.com/tarantool/tntcxx/pull/21,closed,584,26,10,1,0,13,0,1,[],2021-08-17 08:25:39+00:00,2022-10-28 12:51:13+00:00,37772734.0,"437 days, 4:25:34","[{'comment_id': 693761970, 'comment_body': 'Why do you set scramble.c as a separate lib?', 'comment_created': datetime.datetime(2021, 8, 23, 8, 21, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Korablev77', 'type': 'User'}, {'comment_id': 693762321, 'comment_body': 'Same question..', 'comment_created': datetime.datetime(2021, 8, 23, 8, 22, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Korablev77', 'type': 'User'}, {'comment_id': 693763729, 'comment_body': 'It is not an authorization, but rather preparation of authorization request.', 'comment_created': datetime.datetime(2021, 8, 23, 8, 24, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Korablev77', 'type': 'User'}, {'comment_id': 693766450, 'comment_body': 'Do not use magic constants.\r\nYou do forget to check wait return code.', 'comment_created': datetime.datetime(2021, 8, 23, 8, 27, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Korablev77', 'type': 'User'}, {'comment_id': 693767078, 'comment_body': 'Why do you need this header in encoder? Seems to be messy', 'comment_created': datetime.datetime(2021, 8, 23, 8, 28, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Korablev77', 'type': 'User'}, {'comment_id': 693771659, 'comment_body': 'Why do you have to call default constructor explicitly?', 'comment_created': datetime.datetime(2021, 8, 23, 8, 35, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Korablev77', 'type': 'User'}, {'comment_id': 693772334, 'comment_body': 'Better make Config to be class with proper constructors', 'comment_created': datetime.datetime(2021, 8, 23, 8, 36, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Korablev77', 'type': 'User'}, {'comment_id': 693773106, 'comment_body': 'Why does assertion turn into if?', 'comment_created': datetime.datetime(2021, 8, 23, 8, 37, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Korablev77', 'type': 'User'}, {'comment_id': 693778192, 'comment_body': 'Test case name is confusing ', 'comment_created': datetime.datetime(2021, 8, 23, 8, 43, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Korablev77', 'type': 'User'}, {'comment_id': 693779656, 'comment_body': 'Better export any extra libs in a separate commit', 'comment_created': datetime.datetime(2021, 8, 23, 8, 45, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Korablev77', 'type': 'User'}, {'comment_id': 693780157, 'comment_body': ""I get assertion fault on this test:\r\nClient.test: tntcxx/test/ClientTest.cpp:609: void authentication_test(Connector<BUFFER, NetProvider>&) [with BUFFER = tnt::Buffer<16384>; NetProvider = DefaultNetProvider<tnt::Buffer<16384>, NetworkEngine>]: Assertion `false' failed.\r\n"", 'comment_created': datetime.datetime(2021, 8, 23, 8, 46, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Korablev77', 'type': 'User'}, {'comment_id': 693780940, 'comment_body': 'Please use pre-defined constants:\r\nconst char *user = ""...""', 'comment_created': datetime.datetime(2021, 8, 23, 8, 47, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Korablev77', 'type': 'User'}, {'comment_id': 693782535, 'comment_body': 'Authentication requires a bit more test cases. You can look at examples from Tarantool repo', 'comment_created': datetime.datetime(2021, 8, 23, 8, 49, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Korablev77', 'type': 'User'}]","[{'commit_sha': '1110c322509a3495303d70b208a3a91476d4836f', 'committer_username': 'AnastasMIPT', 'committer_name': 'Anastasiy Belyaev', 'committer_email': 'beliaev.ab@phystech.edu', 'commit_date': datetime.datetime(2019, 9, 5, 14, 26, 17, tzinfo=datetime.timezone.utc)}]",Anastasiy Belyaev,54947616,beliaev.ab@phystech.edu,User,,17,,14,21

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
301188941,tntcxx,tarantool/tntcxx,C++,6,7,22,8,267,24,6,3,"[{'id': 714025554, 'number': 21, 'closed': datetime.datetime(2022, 10, 28, 12, 51, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 17, 8, 25, 39, tzinfo=datetime.timezone.utc), 'time_taken': 37772734.0, 'time_delta': '437 days, 4:25:34', 'additions': 584, 'deletions': 26, 'state': 'closed'}, {'id': 682656377, 'number': 16, 'closed': datetime.datetime(2023, 12, 6, 11, 33, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 14, 5, 25, tzinfo=datetime.timezone.utc), 'time_taken': 76627690.0, 'time_delta': '886 days, 21:28:10', 'additions': 579, 'deletions': 23, 'state': 'closed'}]"
