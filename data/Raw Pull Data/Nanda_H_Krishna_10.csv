pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
388817890,Livecheck Formula DSL,"- [x] Have you followed the guidelines in our [Contributing](https://github.com/Homebrew/brew/blob/master/CONTRIBUTING.md) document?
- [x] Have you checked to ensure there aren't other open [Pull Requests](https://github.com/Homebrew/brew/pulls) for the same change?
- [x] Have you added an explanation of what your changes do and why you'd like us to include them?
- [x] Have you written new tests for your changes? [Here's an example](https://github.com/Homebrew/brew/blob/master/Library/Homebrew/test/PATH_spec.rb).
- [x] Have you successfully run `brew style` with your changes locally?
- [x] Have you successfully run `brew tests` with your changes locally?

-----

Addresses #7027, aims to add a Formula DSL for `livecheck`.

Just starting to implement this and I have a few doubts. Where would the functions for `skip`, `using`, etc. mentioned in the example be defined? Or would they be implemented in some other way?

So far (locally) I have tried this, below the definition of `livecheck(&block)`:
```ruby
def skip(reason)
  puts ""Skipping: #{reason}""
end
```
However, I'm not sure if that's the way I should be doing it.",True,7179,https://api.github.com/repos/Homebrew/brew/pulls/7179,https://github.com/Homebrew/brew/pull/7179,closed,193,0,5,1,43,18,1,0,[{'name': 'outdated'}],2020-03-15 20:16:02+00:00,2020-05-11 07:46:28+00:00,4879826.0,"56 days, 11:30:26","[{'comment_id': 414818577, 'comment_body': '```suggestion\r\n    def skip(skip_msg = nil)\r\n      @skipped = true\r\n      @skip_msg = skip_msg\r\n    end\r\n```\r\n\r\nI think it would be simpler and more in keeping with other methods in `formula.rb` if `skip` simply set a `@skipped` instance variable to `true` (indicating that `skip` was present in the `livecheck` block in the formula) and set a `@skip_msg` instance variable to the provided message or `nil` by default.\r\n\r\nI think it\'s more appropriate to handle the output for the ""skipped"" text and printing `skip_msg` in  Homebrew/livecheck instead. The trouble is that we can only do that if we make `@skipped` and `@skip_msg` available to livecheck through public methods (e.g., `#skipped?` and `#skip_msg`). From my testing, this would seemingly also require adding `#skipped?` and `#skip_msg` methods to `extend/formula.rb` in Homebrew/livecheck (which simply call the class methods).\r\n\r\nThis bumps into the same issue I had before while working on the version-filtering feature, where livecheck\'s access is limited and we seemingly have to expose things that we may not want to expose in `formula.rb`. If it\'s not appropriate to expose `#skipped?` and `#skip_msg` methods, we would seemingly have to wait until after Homebrew/livecheck is part of Homebrew/brew to be able to properly handle `skip`.', 'comment_created': datetime.datetime(2020, 4, 24, 19, 40, 49, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 414852638, 'comment_body': ""Thanks for the suggestion, @samford. I did run into the issue of calling/using private methods when I was trying out different implementations. For now, I guess, I'll go ahead and make this change."", 'comment_created': datetime.datetime(2020, 4, 24, 20, 45, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 420288532, 'comment_body': ""One of the issues that you'll have to wrestle with is the two contexts here: `Formula` and its inner class (the `class << self` part).\r\n\r\nThe `#livecheck` method that handles the DSL block is implemented in the inner class, so the `@livecheck` instance variable is also part of that class. When you reference `@livecheck` here, you're outside of that inner class.\r\n\r\nOnce you're able to test this (see the comment above), you'll be able to understand the problem here."", 'comment_created': datetime.datetime(2020, 5, 5, 17, 37, 49, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 420300358, 'comment_body': ""Thinking about this more, I believe it would be better to name this instance variable `@skip`. This variable is an indicator of whether `skip` was present in the `livecheck` block, whereas `@skipped` is past tense and makes it seem like the skip has already happened.\r\n\r\nThat is to say, the check hasn't actually been skipped at this point in time, so the `@skip` name makes more sense to me and is also in line with the `#url` method setting a `@url` instance variable."", 'comment_created': datetime.datetime(2020, 5, 5, 17, 57, 6, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 420302835, 'comment_body': ""This is just my own perspective but it may be better for us to allow this to error if `url` exists in a `livecheck` block but no argument is provided. That is to say, a default value doesn't seem appropriate here, as a passed URL should be required.\r\n\r\nWhat does everyone else think about this?"", 'comment_created': datetime.datetime(2020, 5, 5, 18, 1, 1, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 420528682, 'comment_body': ""Ah, yes I do understand. I wasn't testing it the right way, maybe that's why I didn't realise earlier. I'll work on it!"", 'comment_created': datetime.datetime(2020, 5, 6, 3, 40, 14, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 420596273, 'comment_body': 'The default value is used in these sort of DSLs to allow the use of both `livecheck.url` and `livecheck do; url ""$URL; end` i.e. this method is both a getter and a setter.', 'comment_created': datetime.datetime(2020, 5, 6, 7, 33, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 420612251, 'comment_body': ""That would mean it's best to remove the `ArgumentError` I've raised when the value is blank, so that it can function as both a getter and a setter?"", 'comment_created': datetime.datetime(2020, 5, 6, 8, 5, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 420676338, 'comment_body': ""> That would mean it's best to remove the `ArgumentError` I've raised when the value is blank, so that it can function as both a getter and a setter?\r\n\r\nYup üëç "", 'comment_created': datetime.datetime(2020, 5, 6, 10, 2, 28, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 420959457, 'comment_body': '```suggestion\r\n    @skip_msg = skip_msg.blank? ? nil : skip_msg\r\n```\r\n\r\nSince this is so simple (conditionally choosing the value to set), you can use the ternary operator (`?:`) to make this less verbose.', 'comment_created': datetime.datetime(2020, 5, 6, 17, 19, 33, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 421300423, 'comment_body': ""I think it would be better to manually specify this hash; it's easier to read and figure out what the format is."", 'comment_created': datetime.datetime(2020, 5, 7, 7, 38, 13, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 422016684, 'comment_body': 'Think this should be a `livecheckable?` method too.', 'comment_created': datetime.datetime(2020, 5, 8, 8, 28, 51, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 422016832, 'comment_body': ""I'd delegate this to `livecheckable?`"", 'comment_created': datetime.datetime(2020, 5, 8, 8, 29, 11, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 422017225, 'comment_body': '```suggestion\r\n    @skip_msg = skip_msg.presence\r\n```', 'comment_created': datetime.datetime(2020, 5, 8, 8, 30, 3, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 422017499, 'comment_body': 'Would be good to have comments on all these methods (and those in `livecheck.rb`)', 'comment_created': datetime.datetime(2020, 5, 8, 8, 30, 37, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 422018010, 'comment_body': ""Can skip this test as it's essentially just testing the behaviour of `blank?` (and isn't needed if you use `.presence`)"", 'comment_created': datetime.datetime(2020, 5, 8, 8, 31, 47, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 422039170, 'comment_body': ""Sure, I'll get working on them. Just trying to frame them in such a way that they're clear and concise. Looking forward to your suggestions once they're done."", 'comment_created': datetime.datetime(2020, 5, 8, 9, 18, 59, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 422042816, 'comment_body': ""Sure thing üëç. They don't need to be more complex than typical methods in `formula.rb`. Think of those in `formula.rb` from the perspective of a contributor trying to write a new formula and in `livecheck.rb` from a Homebrew maintainer wanting to refactor them."", 'comment_created': datetime.datetime(2020, 5, 8, 9, 27, 6, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}]","[{'commit_sha': '77e74e7e699854664e844fcc5a0447538d16934b', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Nanda H Krishna,33784207,me@nandahkrishna.com,User,,68,,54,148
418580463,livecheck: add component order rubocop,"- [x] Have you followed the guidelines in our [Contributing](https://github.com/Homebrew/brew/blob/master/CONTRIBUTING.md) document?
- [x] Have you checked to ensure there aren't other open [Pull Requests](https://github.com/Homebrew/brew/pulls) for the same change?
- [x] Have you added an explanation of what your changes do and why you'd like us to include them?
- [x] Have you written new tests for your changes? [Here's an example](https://github.com/Homebrew/brew/blob/master/Library/Homebrew/test/PATH_spec.rb).
- [x] Have you successfully run `brew style` with your changes locally?
- [x] Have you successfully run `brew tests` with your changes locally?

-----

Adding a component order style check for Livecheck blocks, to ensure they're above the `bottle` block.",True,7578,https://api.github.com/repos/Homebrew/brew/pulls/7578,https://github.com/Homebrew/brew/pull/7578,closed,34,16,2,1,4,0,1,0,[{'name': 'outdated'}],2020-05-15 13:03:35+00:00,2020-05-15 18:22:33+00:00,19138.0,5:18:58,[],"[{'commit_sha': 'a4f9a664068eb93a6822f2b409457912685fa668', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Nanda H Krishna,33784207,me@nandahkrishna.com,User,,68,,54,148
421839964,livecheck: modified urls cop,"- [x] Have you followed the guidelines in our [Contributing](https://github.com/Homebrew/brew/blob/master/CONTRIBUTING.md) document?
- [x] Have you checked to ensure there aren't other open [Pull Requests](https://github.com/Homebrew/brew/pulls) for the same change?
- [x] Have you added an explanation of what your changes do and why you'd like us to include them?
- [ ] Have you written new tests for your changes? [Here's an example](https://github.com/Homebrew/brew/blob/master/Library/Homebrew/test/PATH_spec.rb).
- [x] Have you successfully run `brew style` with your changes locally?
- [ ] Have you successfully run `brew tests` with your changes locally?

-----

Changes to the urls cop, related to the migration of Livecheckables to `livecheck` blocks in Homebrew/homebrew-core Formulae.

Summary:
* `archey-osx`: Shortened the whitelist prefix
* `apache` urls - skipped livecheck urls. Modifying the url to the suggested alternative did not work with livecheck, which currently uses `archive.apache.org` urls for the version heuristic.
* `sourceforge` urls - skipped livecheck urls. **Question:** The alternative suggested is `download.sourceforge.net/...`, however that redirects to just `sourceforge.net/...`; and while I've just disabled the check specifically for livecheck urls, should it be removed as there's a redirection anyway?

Other related changes: PRs Homebrew/homebrew-livecheck#748, Homebrew/homebrew-livecheck#749, Homebrew/homebrew-livecheck#750, Homebrew/homebrew-livecheck#751, Homebrew/homebrew-livecheck#752",True,7625,https://api.github.com/repos/Homebrew/brew/pulls/7625,https://github.com/Homebrew/brew/pull/7625,closed,11,2,1,1,17,1,1,0,[{'name': 'outdated'}],2020-05-22 10:22:39+00:00,2020-05-25 07:12:12+00:00,247773.0,"2 days, 20:49:33","[{'comment_id': 429181715, 'comment_body': '```suggestion\r\n          if (livecheck = find_every_func_call_by_name(body_node, :livecheck).first)\r\n            non_livecheck_urls -= find_every_func_call_by_name(livecheck.parent, :url)\r\n          end\r\n```', 'comment_created': datetime.datetime(2020, 5, 22, 11, 0, 19, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}]","[{'commit_sha': '6f37dc4c413b2d7884aa2d452aa6f36e28087617', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Nanda H Krishna,33784207,me@nandahkrishna.com,User,,68,,54,148
425515112,livecheck: reference Formula URLs,"- [x] Have you followed the guidelines in our [Contributing](https://github.com/Homebrew/brew/blob/master/CONTRIBUTING.md) document?
- [x] Have you checked to ensure there aren't other open [Pull Requests](https://github.com/Homebrew/brew/pulls) for the same change?
- [x] Have you added an explanation of what your changes do and why you'd like us to include them?
- [x] Have you written new tests for your changes? [Here's an example](https://github.com/Homebrew/brew/blob/master/Library/Homebrew/test/PATH_spec.rb).
- [x] Have you successfully run `brew style` with your changes locally?
- [x] Have you successfully run `brew tests` with your changes locally?

-----

This PR adds the ability to reference Formula URLs in the `livecheck` block.

For example,
```ruby
livecheck do
  url :homepage
end
```

This would allow for referencing URLs from the Formula, rather than typing out the URL again (`livecheck` automatically uses URLs in the order `head` > `stable` > `homepage`, but sometimes we want to specify the URL).",True,7668,https://api.github.com/repos/Homebrew/brew/pulls/7668,https://github.com/Homebrew/brew/pull/7668,closed,32,4,4,1,4,1,1,0,[{'name': 'outdated'}],2020-05-30 20:06:06+00:00,2020-05-31 12:02:07+00:00,57361.0,15:56:01,"[{'comment_id': 432913030, 'comment_body': ""Should probably support `:devel` here too. Also, I'd suggest using a `case` statement."", 'comment_created': datetime.datetime(2020, 5, 31, 6, 0, 49, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}]","[{'commit_sha': '9ffd0e66af53855ed8de7033d29d9f0b2d9056cd', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Nanda H Krishna,33784207,me@nandahkrishna.com,User,,68,,54,148
425778470,livecheck: modify regex in tests,"- [x] Have you followed the guidelines in our [Contributing](https://github.com/Homebrew/brew/blob/master/CONTRIBUTING.md) document?
- [x] Have you checked to ensure there aren't other open [Pull Requests](https://github.com/Homebrew/brew/pulls) for the same change?
- [x] Have you added an explanation of what your changes do and why you'd like us to include them?
- [ ] Have you written new tests for your changes? [Here's an example](https://github.com/Homebrew/brew/blob/master/Library/Homebrew/test/PATH_spec.rb).
- [x] Have you successfully run `brew style` with your changes locally?
- [x] Have you successfully run `brew tests` with your changes locally?

-----
This PR modifies the `regex` in the `livecheck`-specific tests in `formula_spec.rb` to be more representative of how `livecheck`'s regexes must be, as suggested by @samford in #7668 ([comment](https://github.com/Homebrew/brew/pull/7668#issuecomment-636480637)).",True,7671,https://api.github.com/repos/Homebrew/brew/pulls/7671,https://github.com/Homebrew/brew/pull/7671,closed,4,4,1,1,1,0,1,0,[{'name': 'outdated'}],2020-06-01 06:17:38+00:00,2020-06-01 08:39:55+00:00,8537.0,2:22:17,[],"[{'commit_sha': '1edff7934e378393ff09e0b343161c291c6744dd', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Nanda H Krishna,33784207,me@nandahkrishna.com,User,,68,,54,148
434960802,Add completion for livecheck,"- [x] Have you followed the guidelines in our [Contributing](https://github.com/Homebrew/brew/blob/master/CONTRIBUTING.md) document?
- [x] Have you checked to ensure there aren't other open [Pull Requests](https://github.com/Homebrew/brew/pulls) for the same change?
- [x] Have you added an explanation of what your changes do and why you'd like us to include them?
- [ ] Have you written new tests for your changes? [Here's an example](https://github.com/Homebrew/brew/blob/master/Library/Homebrew/test/PATH_spec.rb).
- [x] Have you successfully run `brew style` with your changes locally?
- [ ] Have you successfully run `brew tests` with your changes locally?

-----

This PR aims to add completions for `livecheck`. So far, I've added the completion for `zsh`, and will be adding those for `bash` and `fish` soon.

The timing for this might seem weird but I've been carrying out `livecheck` for many formulae, and having completions would make it quite a bit easier for me than having to type out whole Formulae names üòÖ.

CC: @samford @MikeMcQuaid  ",False,7748,https://api.github.com/repos/Homebrew/brew/pulls/7748,https://github.com/Homebrew/brew/pull/7748,closed,29,0,2,1,6,0,1,0,[{'name': 'outdated'}],2020-06-16 04:08:58+00:00,2020-06-17 04:31:22+00:00,87744.0,"1 day, 0:22:24",[],"[{'commit_sha': '2466fe7b16792bd73cfedd3ddf6896cdbc8ae23f', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Nanda H Krishna,33784207,me@nandahkrishna.com,User,,68,,54,148
461384347,livecheck migration: add `brew livecheck` developer command,"- [x] Have you followed the guidelines in our [Contributing](https://github.com/Homebrew/brew/blob/HEAD/CONTRIBUTING.md) document?
- [x] Have you checked to ensure there aren't other open [Pull Requests](https://github.com/Homebrew/brew/pulls) for the same change?
- [x] Have you added an explanation of what your changes do and why you'd like us to include them?
- [x] Have you written new tests for your changes? [Here's an example](https://github.com/Homebrew/brew/blob/HEAD/Library/Homebrew/test/PATH_spec.rb).
- [x] Have you successfully run `brew style` with your changes locally?
- [x] Have you successfully run `brew tests` with your changes locally?

-----

This PR integrates `livecheck` into Homebrew/brew as a developer command. It was almost just a copy-paste of files, but there were some style changes and a couple of minor differences as outlined by @samford. I've also brought over the command completions and placed them in the appropriate files (works on `zsh`, should also work on `bash` and `fish` based on my previous trials).

I tested this locally by also incorporating the changes in #8156 (without which we will get an `undefined method strategy` error), and it works as intended (I also untapped homebrew/livecheck).

Things to discuss:
1. What changes do we make to the livecheck code?
2. What tests do we write?
3. (Minor) Should livecheck be a common command (for completions)?

I will also be working on the RuboCops/audits in parallel. Looking forward to your reviews!",True,8180,https://api.github.com/repos/Homebrew/brew/pulls/8180,https://github.com/Homebrew/brew/pull/8180,closed,211,0,11,1,19,49,1,0,[{'name': 'outdated'}],2020-08-01 20:10:01+00:00,2020-08-31 12:05:51+00:00,2562950.0,"29 days, 15:55:50","[{'comment_id': 463999580, 'comment_body': 'Could this be:\r\n\r\n```suggestion\r\nrequire ""livecheck_strategy""\r\n```\r\n\r\n?', 'comment_created': datetime.datetime(2020, 8, 1, 20, 56, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dawidd6', 'type': 'User'}, {'comment_id': 463999732, 'comment_body': 'I always wondered what does this line do, any explanations?', 'comment_created': datetime.datetime(2020, 8, 1, 20, 58, 33, tzinfo=datetime.timezone.utc), 'commenter': 'dawidd6', 'type': 'User'}, {'comment_id': 463999993, 'comment_body': ""There was a `brew livecheck cat` command before, to view a Livecheckable's source, analogous to `brew cat`which is used to view the Formula source file. We removed that command a while back and this is no longer required (we can just use `brew cat` after the homebrew-core migration), I think. Thanks for pointing it out!"", 'comment_created': datetime.datetime(2020, 8, 1, 21, 1, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 464000375, 'comment_body': 'Yeah that works, making the change üëçüèº', 'comment_created': datetime.datetime(2020, 8, 1, 21, 6, 32, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 464258213, 'comment_body': '```suggestion\r\nmodule Homebrew::Livecheck::Strategy\r\n```', 'comment_created': datetime.datetime(2020, 8, 3, 8, 10, 18, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 464258674, 'comment_body': 'Would be good to have this function be as minimal as possible and essentially just parse/setup arguments and pass them to a method in the `Homebrew::Livecheck` module to actually do the main livecheck logic.', 'comment_created': datetime.datetime(2020, 8, 3, 8, 11, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 464258971, 'comment_body': ""I'd say everything here and below should be in the `Homebrew::Livecheck` module."", 'comment_created': datetime.datetime(2020, 8, 3, 8, 11, 52, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 464259642, 'comment_body': '```suggestion\r\n    raise UsageError, ""No formulae to check."" if formulae_to_check.blank?\r\n```', 'comment_created': datetime.datetime(2020, 8, 3, 8, 13, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 464260242, 'comment_body': '```suggestion\r\n  module Homebrew::Livecheck::Strategies::Apache\r\n```\r\n\r\nand put it in `livecheck/strategies/apache` using `module_function` to avoid `self.`', 'comment_created': datetime.datetime(2020, 8, 3, 8, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 464260715, 'comment_body': 'Add `HOMEBREW_LIVECHECK_WATCHLIST` to `Library/Homebrew/env_config.rb`', 'comment_created': datetime.datetime(2020, 8, 3, 8, 15, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 464489523, 'comment_body': 'With this in mind, we should probably move the constants that come before `def livecheck_args` (e.g., `WATCHLIST_PATH`, `GITHUB_SPECIAL_CASES`, etc.) into the `Homebrew::Livecheck` module as well, correct? If so, `@livecheck_strategy_names` could also be in `Homebrew::Livecheck`.', 'comment_created': datetime.datetime(2020, 8, 3, 15, 30, 16, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 464493511, 'comment_body': 'If strategies are moving to `livecheck/strategies` (e.g., `livecheck/strategies/apache`) should `livecheck_strategy.rb` be moved into the `livecheck` folder as well? If so, does the file need to be renamed?', 'comment_created': datetime.datetime(2020, 8, 3, 15, 36, 54, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 464624096, 'comment_body': 'Yeh, I think so. `livecheck/strategy.rb` or similar may make sense.', 'comment_created': datetime.datetime(2020, 8, 3, 19, 43, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 464627219, 'comment_body': 'We have `Homebrew::Livecheck::Strategy` above and `Homebrew::Livecheck::Strategies::Apache` here. Just to be sure, is the `Strategy` vs. `Strategies` mismatch intentional or should we be doing `Homebrew::Livecheck::Strategy::Apache` here?', 'comment_created': datetime.datetime(2020, 8, 3, 19, 50, 16, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 464629796, 'comment_body': '`Strategy` probably makes more sense to me.', 'comment_created': datetime.datetime(2020, 8, 3, 19, 55, 53, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 464639266, 'comment_body': 'I agree. It makes sense for `LivecheckStrategy` to become `Homebrew::Livecheck::Strategy` and for `LivecheckStrategy::Apache` to become `Homebrew::Livecheck::Strategy::Apache`.\r\n\r\nLast question on this: It seems like we generally align the name of the Ruby file and the related directory (e.g., `version.rb`, `version`). Should we also use a `livecheck/strategy/` directory name, to align with `livecheck/strategy.rb` (as discussed in the other comment)?', 'comment_created': datetime.datetime(2020, 8, 3, 20, 16, 57, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 464873482, 'comment_body': '> Should we also use a `livecheck/strategy/` directory name\r\n\r\nYup üëçüèª ', 'comment_created': datetime.datetime(2020, 8, 4, 8, 4, 57, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466235113, 'comment_body': 'Remove this exclusion. If I ever contradict RuboCop: RuboCop is right üòÅ ', 'comment_created': datetime.datetime(2020, 8, 6, 8, 29, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466235283, 'comment_body': 'These should be non-symbol versions now (see other commands).', 'comment_created': datetime.datetime(2020, 8, 6, 8, 29, 17, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466247287, 'comment_body': ""I guess `Livecheck::WATCHLIST_PATH` should live in this class given it's only used here."", 'comment_created': datetime.datetime(2020, 8, 6, 8, 50, 29, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466247328, 'comment_body': '```suggestion\r\n        Formula\r\n```\r\n\r\nshould work here', 'comment_created': datetime.datetime(2020, 8, 6, 8, 50, 35, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466247458, 'comment_body': '```suggestion\r\n      elsif args.formulae.present?\r\n```', 'comment_created': datetime.datetime(2020, 8, 6, 8, 50, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466248325, 'comment_body': '```suggestion\r\n          Livecheck::WATCHLIST_PATH.read.lines.map do |line|\r\n            next if line.start_with?(""#"")\r\n            \r\n            Formula[word]\r\n          end.compact\r\n```', 'comment_created': datetime.datetime(2020, 8, 6, 8, 52, 27, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466248594, 'comment_body': '```suggestion\r\n  WATCHLIST_PATH = (\r\n    ENV[""HOMEBREW_LIVECHECK_WATCHLIST""] || \r\n    Pathname.new(Dir.home)/"".brew_livecheck_watchlist""\r\n  ).freeze\r\n```', 'comment_created': datetime.datetime(2020, 8, 6, 8, 52, 56, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466248696, 'comment_body': 'Can remove all `private_constant`', 'comment_created': datetime.datetime(2020, 8, 6, 8, 53, 7, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466248917, 'comment_body': ""A variable seems a better fit when it's only used twice in quick succession."", 'comment_created': datetime.datetime(2020, 8, 6, 8, 53, 35, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466249004, 'comment_body': 'Same here.', 'comment_created': datetime.datetime(2020, 8, 6, 8, 53, 45, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466249167, 'comment_body': 'This should be defined in a method instead.', 'comment_created': datetime.datetime(2020, 8, 6, 8, 54, 3, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466249352, 'comment_body': 'Use two `next`s  instead of `unless`.', 'comment_created': datetime.datetime(2020, 8, 6, 8, 54, 22, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466249599, 'comment_body': 'Use string interpolation rather than `File.join` here and elsewhere.', 'comment_created': datetime.datetime(2020, 8, 6, 8, 54, 45, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466250017, 'comment_body': 'Avoid `unless ||` ', 'comment_created': datetime.datetime(2020, 8, 6, 8, 55, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466250164, 'comment_body': 'Refactor this to be easier to follow.', 'comment_created': datetime.datetime(2020, 8, 6, 8, 55, 42, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466250294, 'comment_body': ""Don't need to use `private_class_method` here or anywhere."", 'comment_created': datetime.datetime(2020, 8, 6, 8, 55, 53, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466283049, 'comment_body': '```suggestion\r\n    status_hash[""messages""] = messages.presence\r\n```', 'comment_created': datetime.datetime(2020, 8, 6, 9, 32, 23, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466284741, 'comment_body': 'This regex (and most of these strategies) is a bit inpeneratrable. You may want to use the multiline regex format, add comments, assign to a constant and explain what `1` and `3` refer to using named match groups instead.', 'comment_created': datetime.datetime(2020, 8, 6, 9, 33, 49, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466285254, 'comment_body': 'Use `system_command` `Utils.popen_*` here instead.', 'comment_created': datetime.datetime(2020, 8, 6, 9, 34, 18, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466285593, 'comment_body': 'Everywhere: prefer `blank?` over `empty?` or `nil?`', 'comment_created': datetime.datetime(2020, 8, 6, 9, 34, 33, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466286296, 'comment_body': 'Would be nice to have a test that verifies all these formulae still exist in homebrew-core.', 'comment_created': datetime.datetime(2020, 8, 6, 9, 35, 12, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466286917, 'comment_body': 'Thoughts on having this check a single, specified formula?', 'comment_created': datetime.datetime(2020, 8, 6, 9, 35, 42, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 466513900, 'comment_body': 'Was `Formula[line]` meant here instead of `Formula[word]`?', 'comment_created': datetime.datetime(2020, 8, 6, 15, 53, 34, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 466705956, 'comment_body': ""@samford correct me if I'm wrong, but wouldn't the `strategy` feature make `SPECIAL_CASES` obsolete? Wouldn't we just have to use `strategy :page_match` or something to prevent the GNU strategy from being used?"", 'comment_created': datetime.datetime(2020, 8, 6, 21, 51, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 466714262, 'comment_body': 'Yes, for the `Gnu` and `Sourceforge` `SPECIAL_CASES` we can add/modify the `livecheck` block to use `strategy` instead. I was planning to address this after the Homebrew/brew migration but I can take care of the livecheckable changes if we want to do it as part of this process.\r\n\r\nTo be clear, the `Gnome` strategy‚Äôs `DEV_VERSION_ALLOWLIST` is different. This array constant is used in `#find_versions` to select the proper regex, instead of omitting the URL from matching the strategy. The strings in this particular array are package names, rather than formula names.\r\n\r\n[For what it‚Äôs worth, the special case arrays aren‚Äôt explicitly formula names, as seen in the `Sourceforge` strategy.]', 'comment_created': datetime.datetime(2020, 8, 6, 22, 13, 35, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 466867804, 'comment_body': 'Would anywhere mean methods in `livecheck/strategy.rb` and others in individual strategies as well? Just confirming because we have a `private_class_method :strategies` in `unpack_strategy.rb`.', 'comment_created': datetime.datetime(2020, 8, 7, 7, 23, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 467346945, 'comment_body': ""I've included this issue in the new PR for strategy migration (in the PR description), so I'll resolve it here."", 'comment_created': datetime.datetime(2020, 8, 8, 1, 52, 5, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 470717463, 'comment_body': 'Is it worth having both? Should this have a header?', 'comment_created': datetime.datetime(2020, 8, 14, 16, 6, 56, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 470717701, 'comment_body': '```suggestion\r\n    formulae_to_check = if args.tap\r\n        Tap.fetch(args.tap).formula_names.map { |name| Formula[name] }\r\n    elsif args.installed?\r\n```', 'comment_created': datetime.datetime(2020, 8, 14, 16, 7, 24, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 470718723, 'comment_body': ""Let's limit these to a single test (probably this one)"", 'comment_created': datetime.datetime(2020, 8, 14, 16, 9, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 470843221, 'comment_body': ""> Is it worth having both?\r\n\r\nIt looks like [you added `args` to this output](https://github.com/Homebrew/homebrew-livecheck/commit/3d63817fa3974d4ed5594141dfe6d0a2e5588c5e), so I would say it's up to you.\r\n\r\nI imagine it would only be useful to have both if/when the `args` parsing isn't working properly. However, we can always add temporary output like this when we're debugging issues, so there may not be much value in the interim time.\r\n\r\nIf it were up to me, I would probably favor `args` or even removing these two output lines entirely if there aren't other `brew` commands that do the same thing."", 'comment_created': datetime.datetime(2020, 8, 14, 20, 9, 42, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 475105587, 'comment_body': '```suggestion\r\nrequire ""cli/parser""\r\nrequire ""formula""\r\n```\r\n\r\n`require ""formula""` was recently added here in Homebrew/homebrew-livecheck#1315, so we\'ll want to add it here as well.', 'comment_created': datetime.datetime(2020, 8, 22, 16, 15, 56, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}]","[{'commit_sha': 'e5fe57c1fe14799f1722b3c47861a3fd45e62347', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Nanda H Krishna,33784207,me@nandahkrishna.com,User,,68,,54,148
464924174,livecheck migration: create Homebrew::Livecheck,"- [x] Have you followed the guidelines in our [Contributing](https://github.com/Homebrew/brew/blob/HEAD/CONTRIBUTING.md) document?
- [x] Have you checked to ensure there aren't other open [Pull Requests](https://github.com/Homebrew/brew/pulls) for the same change?
- [x] Have you added an explanation of what your changes do and why you'd like us to include them?
- [x] Have you written new tests for your changes? [Here's an example](https://github.com/Homebrew/brew/blob/HEAD/Library/Homebrew/test/PATH_spec.rb).
- [ ] Have you successfully run `brew style` with your changes locally?
- [x] Have you successfully run `brew tests` with your changes locally?

-----

This PR adds the `Homebrew::Livecheck` module containing livecheck's core logic. PR #8180 was hard to review as it was too large, so it was split up, with the original PR being exclusively to migrate the command.

Changes/suggestions yet to handle:
* I'm working on the tests and am nearly done with them, I'll push them soon.

This PR will have to be merged before we can merge #8180.",True,8254,https://api.github.com/repos/Homebrew/brew/pulls/8254,https://github.com/Homebrew/brew/pull/8254,closed,593,0,3,5,11,65,1,0,[{'name': 'outdated'}],2020-08-08 01:44:07+00:00,2020-08-31 07:09:59+00:00,2006752.0,"23 days, 5:25:52","[{'comment_id': 470720730, 'comment_body': '```suggestion\r\n        next if f.tap.name == CoreTap.instance.name\r\n        next if non_core_taps[f.tap.name]', 'comment_created': datetime.datetime(2020, 8, 14, 16, 13, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 470723679, 'comment_body': ""Maybe worth setting this to the actual `f.tap` so it doesn't need `Tap.fetch` later."", 'comment_created': datetime.datetime(2020, 8, 14, 16, 18, 51, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 470724335, 'comment_body': 'Would be interested in profiling this (even with `time`) to see if this actually speeds things up.', 'comment_created': datetime.datetime(2020, 8, 14, 16, 20, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 470724853, 'comment_body': 'What does `formula.version` return for HEAD-only formulae?', 'comment_created': datetime.datetime(2020, 8, 14, 16, 21, 2, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 470725074, 'comment_body': '```suggestion\r\n          version_info[""latest""] if version_info.present? \r\n```', 'comment_created': datetime.datetime(2020, 8, 14, 16, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 470725467, 'comment_body': 'would be nice to split this logic out into variables.', 'comment_created': datetime.datetime(2020, 8, 14, 16, 22, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 470725610, 'comment_body': 'Can this use symbol keys instead?', 'comment_created': datetime.datetime(2020, 8, 14, 16, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 470726302, 'comment_body': ""I wonder if we need (any of) the head-only logic? It doesn't apply to any formula in Homebrew/core."", 'comment_created': datetime.datetime(2020, 8, 14, 16, 23, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 470727112, 'comment_body': '```suggestion\r\n      if formula.versioned_formula? && !formula.livecheckable?\r\n```\r\n\r\nMight be worth reading the `Formula` class in general to find any other cases that could be used like this.', 'comment_created': datetime.datetime(2020, 8, 14, 16, 25, 23, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 470727450, 'comment_body': '```suggestion\r\n      current_s = if info[""version""][""newer_than_upstream""]\r\n        ""#{Tty.red}#{info[""version""][""current""]}#{Tty.reset}""\r\n      else\r\n        info[""version""][""current""]\r\n      end\r\n```\r\n\r\nWould be nice to use this format everywhere.', 'comment_created': datetime.datetime(2020, 8, 14, 16, 26, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 470728034, 'comment_body': ""There's some code in `audit.rb` and `utils/notability.rb` that seems similar to this that might be cool to combine?"", 'comment_created': datetime.datetime(2020, 8, 14, 16, 27, 24, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 470728224, 'comment_body': 'Why the string check?', 'comment_created': datetime.datetime(2020, 8, 14, 16, 27, 47, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 470728376, 'comment_body': '```suggestion\r\n        puts\r\n        puts ""Formula:          #{formula_name(formula, args: args)}""\r\n```', 'comment_created': datetime.datetime(2020, 8, 14, 16, 28, 6, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 470728583, 'comment_body': 'and same elsewhere. Generally outputting strings with a `\\n` is a sign another `puts` or `<~EOS` may be a better fit.', 'comment_created': datetime.datetime(2020, 8, 14, 16, 28, 31, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 470885862, 'comment_body': ""This caching approach was added by me, so I'll explain.\r\n\r\nI isolated this code in a script and did some simple speed and memory profiling (using the `ruby_prof` and `memory_profiler` gems) to compare the caching approach (i.e., `@livecheck_strategy_names`) to `strategy.name.demodulize`. I started by simply doing one execution per iteration, since this happens a minimum of once per formula (unless the formula is skipped).\r\n\r\nUsing `strategy.name.demodulize` is faster until we're calling it about 50 times per `livecheck` run. At 100 executions, the caching approach is around 1.5x faster. At 1000 executions, caching is 3x faster. At 5,000 executions (around once per homebrew/core formula), caching is 3.5x faster. However, caching the demodulized strategy names is primarily about minimizing memory allocations and that's where the difference is very notable.\r\n\r\nWith caching, we allocate a small amount of memory at the start of the livecheck run and that's it. Without caching, memory is allocated each time `strategy.name.demodulize` is executed. With 5,000 iterations and one execution each, this allocates over 270x more memory than the caching approach. With two executions, it's 540x more memory. With three executions it's 810x more memory, etc.\r\n\r\nThe speed difference reaches a point where it begins to level off  (e.g., going from 3.5x to 3.6x, etc.) but the difference in memory allocations is multiplied by the number of times `strategy.name.demodulize` is executed per iteration.\r\n\r\nWhen livecheck is run with the `--debug` or `--json --verbose` flags, `@livecheck_strategy_names` is used a minimum of two times per iteration. Otherwise, `@livecheck_strategy_names` is used once per iteration.\r\n\r\nFrom a speed perspective caching is beneficial above 50 executions and from a memory perspective it's beneficial above 18 executions. I do full homebrew-core runs using `--json --verbose` pretty regularly and this involves a minimum of 10,000 executions, for what it's worth.\r\n\r\nLet me know if you need more details but hopefully this helps to clarify why it's useful."", 'comment_created': datetime.datetime(2020, 8, 14, 22, 9, 56, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 471509404, 'comment_body': 'Fine with me, thanks for explaining üëçüèª ', 'comment_created': datetime.datetime(2020, 8, 17, 14, 16, 28, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 471535720, 'comment_body': '@dawidd6 added it recently so: resolving.', 'comment_created': datetime.datetime(2020, 8, 17, 14, 55, 7, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 471536172, 'comment_body': ""I think anything like this (where before the `?` isn't a single Boolean variable) is harder to follow than an `if`/`else`."", 'comment_created': datetime.datetime(2020, 8, 17, 14, 55, 45, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 471536543, 'comment_body': '```suggestion\r\n        strategy = Strategy.from_symbol(livecheck_strategy) || strategies.first\r\n```\r\n\r\nalthough I think\r\n\r\n```suggestion\r\n        strategy = Strategy.from_symbol(livecheck_strategy)\r\n        strategy ||= strategies.first\r\n```\r\n\r\nis often easier to follow in these cases.', 'comment_created': datetime.datetime(2020, 8, 17, 14, 56, 18, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 471536659, 'comment_body': '```suggestion\r\n        if livecheck_strategy == :page_match && livecheck_regex.blank?\r\n```', 'comment_created': datetime.datetime(2020, 8, 17, 14, 56, 28, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 471536953, 'comment_body': '```suggestion\r\n          if strategies.present?\r\n```', 'comment_created': datetime.datetime(2020, 8, 17, 14, 56, 56, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 471537073, 'comment_body': '```suggestion\r\n          version_info[""meta""][""regex""] = regex.inspect if regex.present?\r\n```', 'comment_created': datetime.datetime(2020, 8, 17, 14, 57, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 471537205, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 17, 14, 57, 19, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 471900768, 'comment_body': 'I created a temporary HEAD-only formula to test this, and when not installed:\r\n```ruby\r\nirb(main):001:0> :headonly.f\r\n=> #<Formula headonly (head) /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/headonly.rb>\r\nirb(main):002:0> :headonly.f.version\r\n=> #<HeadVersion:0x00007fab40023300 @version=""HEAD"", @commit=nil>\r\n```\r\n\r\nWhen installed:\r\n```ruby\r\nirb(main):002:0> :headonly.f.version\r\n=> #<HeadVersion:0x00007facf824d1d0 @version=""HEAD"", @commit=nil>\r\nirb(main):003:0> :headonly.f.installed_version\r\n=> #<PkgVersion:0x00007facf5c8f600 @version=#<HeadVersion:0x00007facf5c8f6c8 @version=""HEAD-92a144d"", @commit=""92a144d"">, @revision=0>\r\n```\r\n\r\nUsing `formula.installed_version.version.commit` ensures we get the commit ID, which we consider to be the currently installed version.', 'comment_created': datetime.datetime(2020, 8, 18, 4, 4, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 471990641, 'comment_body': 'Cool, seems good!', 'comment_created': datetime.datetime(2020, 8, 18, 8, 0, 55, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 474038712, 'comment_body': ""I think with modern Ruby you may not need this line but I'll let you figure out either way."", 'comment_created': datetime.datetime(2020, 8, 20, 14, 45, 7, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 474038950, 'comment_body': '`if`/`else` might be an easier read here.', 'comment_created': datetime.datetime(2020, 8, 20, 14, 45, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 474039392, 'comment_body': ""A `formula.head_only?` method (if one doesn't already exist) might be useful."", 'comment_created': datetime.datetime(2020, 8, 20, 14, 46, 5, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 474039636, 'comment_body': 'Any thoughts on this?', 'comment_created': datetime.datetime(2020, 8, 20, 14, 46, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 474039752, 'comment_body': 'Would be nice to use named capture groups here.', 'comment_created': datetime.datetime(2020, 8, 20, 14, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 474050543, 'comment_body': ""The `GITHUB_SPECIAL_CASES` are simply used to skip the URL preprocessing for specific GitHub URLs (i.e., converting a GitHub URL to the `.git` URL). If a GitHub URL contains one of the strings found in that array, then the URL isn't modified.\r\n\r\nI'm not fond of the URL preprocessing as it currently stands (i.e., this should be handled in strategies instead) and I plan to add some GitHub strategies to get rid of this setup not too long after the migrations are finished. These special cases only apply to the context of livecheck and I'm not sure that it would make sense to incorporate them elsewhere, especially considering that they will be removed in the not-too-distant future."", 'comment_created': datetime.datetime(2020, 8, 20, 15, 0, 50, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 474055535, 'comment_body': 'It seems like it may still be necessary for head-only formulae. `version_info` isn\'t otherwise set for a HEAD-only formula but it\'s referenced a few lines later in:\r\n\r\n```ruby\r\nif latest.nil?\r\n  if args.json?\r\n    next version_info if version_info.is_a?(Hash) && version_info[""status""] && version_info[""messages""]\r\n\r\n    next status_hash(formula, ""error"", [NO_VERSIONS_MSG], args: args)\r\n  else\r\n    raise TypeError, NO_VERSIONS_MSG\r\n  end\r\nend\r\n```\r\n\r\nIf `version_info` isn\'t defined, `version_info.is_a?(Hash)` would seemingly give us a ```NameError (undefined local variable or method `version_info\' for main:Object)``` error.', 'comment_created': datetime.datetime(2020, 8, 20, 15, 6, 38, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 474065754, 'comment_body': ""> If `version_info` isn't defined, `version_info.is_a?(Hash)` would seemingly give us a `` NameError (undefined local variable or method `version_info' for main:Object) `` error.\r\n\r\nIf you've tested this: üëçüèª with me. It doesn't seem to always be the case in Ruby now."", 'comment_created': datetime.datetime(2020, 8, 20, 15, 21, 32, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 474066009, 'comment_body': 'Fine with me üëçüèª ', 'comment_created': datetime.datetime(2020, 8, 20, 15, 21, 55, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 474070721, 'comment_body': '> Would be nice to use named capture groups here.\r\n\r\nHow about this?\r\n\r\n```suggestion\r\n          %r{(?<github_repo_url>(?:[a-z]+://)?github.com/[^/]+/[^/#]+)} =~ url\r\n          url = github_repo_url if github_repo_url.present?\r\n\r\n          url.delete_suffix!(""/"") if url.end_with?(""/"")\r\n          url += "".git""\r\n```', 'comment_created': datetime.datetime(2020, 8, 20, 15, 28, 59, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 474083822, 'comment_body': 'Looks great!', 'comment_created': datetime.datetime(2020, 8, 20, 15, 42, 39, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 474109429, 'comment_body': ""Just to be sure, I commented out the `version_info = nil` line and tested this in `brew livecheck` with a HEAD-only formula (which I put together just to test this). In this context, `version_info` is still set to `nil` even when we don't do it manually, so it's fine to remove the `version_info = nil` line.\r\n\r\nI added some output statements in various places to confirm that this was going down the relevant code path (not doing something else) and it all checked out.\r\n\r\nI also tested this in a standalone script with some similar code and it seems Ruby handles the `nil` due to `version_info` being set in a if/else statement. If you remove the if/else code, then we get the expected `undefined local variable` error.\r\n\r\nI wasn't aware of this behavior before, so thanks for the heads up."", 'comment_created': datetime.datetime(2020, 8, 20, 16, 21, 53, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 474526221, 'comment_body': ""> In this context, `version_info` is still set to `nil` even when we don't do it manually, so it's fine to remove the `version_info = nil` line.\r\n\r\nYup, that's what I thought, thanks for checking.\r\n\r\n\r\n\r\n> I wasn't aware of this behavior before, so thanks for the heads up.\r\n\r\nIt's newish? I can't remember what Ruby version it landed in, I think one between 2.3 and 2.6?"", 'comment_created': datetime.datetime(2020, 8, 21, 8, 35, 46, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 474984699, 'comment_body': ""We seem to have a `formula.head?` method, which returns `true` if the `active_spec` is a `head` build. The return value is `false` for all homebrew-core formulae. Is this what we're looking to use here?"", 'comment_created': datetime.datetime(2020, 8, 21, 21, 49, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 475092900, 'comment_body': ""To follow up on what Nanda said, since `stable` and `devel` take precedence over `head` as the `active_spec`, `#head?` seemingly acts as a head-only indicator from what I'm seeing.\r\n\r\nTo put it in other words, `#head?` will return `true` if the formula contains `head` and doesn't contain `stable` or `devel` (i.e., a head-only formula). If `stable` and `head` are both present, then `#stable?` is `true` and `#head?` is `false`.\r\n\r\nThere currently aren't any head-only formulae in homebrew-core, so it's expected that `#head?` will be false for all of those."", 'comment_created': datetime.datetime(2020, 8, 22, 13, 47, 17, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 475411057, 'comment_body': 'Cool, sounds like we can use that üëçüèª ', 'comment_created': datetime.datetime(2020, 8, 24, 8, 1, 38, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 478506218, 'comment_body': 'This PR can be rebased and this TODO can be addressed now that #8255 has been merged.', 'comment_created': datetime.datetime(2020, 8, 27, 15, 28, 10, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478506477, 'comment_body': 'Working on it üëçüèº', 'comment_created': datetime.datetime(2020, 8, 27, 15, 28, 30, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 478629189, 'comment_body': 'Would be good to use these if possible but no big deal.', 'comment_created': datetime.datetime(2020, 8, 27, 18, 56, 3, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 478803334, 'comment_body': ""```suggestion\r\n        is_outdated = if formula.head?\r\n          # A HEAD-only formula is considered outdated if the latest upstream\r\n          # commit hash is different than the installed version's commit hash\r\n          (current != latest)\r\n```\r\n\r\nThis is minor but I think this comment makes more sense directly before the relevant line (rather than outside of the entire if/else block). I also reworded this a little while I was at it."", 'comment_created': datetime.datetime(2020, 8, 28, 2, 58, 50, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478817582, 'comment_body': 'For context, the goal of this line was to ""refactor [the existing code] to be easier to follow"". The individual conditions here are easier to understand at a glance but I don\'t think the `[].all?` setup helps to make this easier to follow.\r\n\r\nI would normally expect compound conditions using `&&` in this context. The `[].all?` setup involves more cognitive load for me, due to being an unusual/unexpected way of establishing compound conditions. At the very least, using `&&` avoids the unnecessary array allocation.\r\n\r\n```suggestion\r\n      if args.newer_only? && !has_a_newer_upstream_version && !args.debug? && !args.json?\r\n```', 'comment_created': datetime.datetime(2020, 8, 28, 3, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478825967, 'comment_body': 'I know this was a suggestion from Mike but using `messages.presence` alters the established behavior here.\r\n\r\nPreviously this was `status_hash[:messages] = messages if messages.is_a?(Array)`, so `status_hash[:messages]` was only set if a `messages` array was provided to the method.\r\n\r\nWith `messages.presence`, `status_hash[:messages` is always set and will either be an array of strings or `nil`. If the reasoning here is that `:messages` should always be present in the ""status"" hash, then it would arguably be more appropriate for the default value to be an empty array instead of the `nil` that `messages.presence` can give.', 'comment_created': datetime.datetime(2020, 8, 28, 4, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478837365, 'comment_body': '```suggestion\r\n        url ""https://github.s3.amazonaws.com/Homebrew/brew/releases/latest""\r\n```\r\n\r\nMaybe it\'s just my tired brain but is there a reason for the `url(+""..."")` format here instead of `url ""...""`?', 'comment_created': datetime.datetime(2020, 8, 28, 5, 26, 14, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478839518, 'comment_body': '```suggestion\r\n      expect(livecheck.status_hash(f, ""error"", [""Unable to get versions""], args: args))\r\n        .to eq({\r\n                 formula:  ""test"",\r\n                 status:   ""error"",\r\n                 messages: [""Unable to get versions""],\r\n```\r\n\r\nIt wouldn\'t hurt to make this more representative of what livecheck typically uses `status_hash` for, as ""blah"" isn\'t very demonstrative.', 'comment_created': datetime.datetime(2020, 8, 28, 5, 33, 47, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478865492, 'comment_body': ""Ah we need the String to be unfrozen because our preprocess method modifies it inplace. Without the unary `+`, we'd have a frozen string (because of `# frozen_string_literal: true`), which would cause `preprocess_url` and `livecheck_formulae` to error."", 'comment_created': datetime.datetime(2020, 8, 28, 6, 49, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 478883044, 'comment_body': 'Might be worth doing a `dup` instead?', 'comment_created': datetime.datetime(2020, 8, 28, 7, 27, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 478883794, 'comment_body': ""`brew style` didn't agree with that and suggested that I change it to this."", 'comment_created': datetime.datetime(2020, 8, 28, 7, 28, 15, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 478888616, 'comment_body': ""@nandahkrishna I'm suggesting it be done in `preprocess_url` and `livecheck_formulae` on the incoming parameter."", 'comment_created': datetime.datetime(2020, 8, 28, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 478890335, 'comment_body': 'Ah okay. Thought you meant here, haha üòÖ', 'comment_created': datetime.datetime(2020, 8, 28, 7, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 479342611, 'comment_body': '> Without the unary `+`, we\'d have a frozen string (because of `# frozen_string_literal: true`), which would cause `preprocess_url` and `livecheck_formulae` to error.\r\n\r\nAh, we simply need to replace the `sub!` in `preprocess_url` with `url = url.sub(...` and then this works fine with the usual `url ""...""` format. I\'ll add a suggestion for the relevant line.', 'comment_created': datetime.datetime(2020, 8, 28, 14, 29, 5, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 479344025, 'comment_body': '```suggestion\r\n      url = url.sub(""github.s3.amazonaws.com"", ""github.com"") if url.include?(""github"")\r\n```\r\n\r\nThis addresses the `can\'t modify frozen String` error when using `url ""...""` in a test\'s `livecheck` block. The error was a good thing in this instance, as it let us know that we\'re doing something that we don\'t actually want to be doing (i.e., an in place modification).', 'comment_created': datetime.datetime(2020, 8, 28, 14, 31, 18, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 479369112, 'comment_body': '> Ah, we simply need to replace the `sub!` in `preprocess_url` with `url = url.sub(...` and then this works fine with the usual `url ""...""` format. I\'ll add a suggestion for the relevant line.\r\n\r\nSounds good!', 'comment_created': datetime.datetime(2020, 8, 28, 15, 12, 24, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 479405839, 'comment_body': 'Haha I really need to improve my test strings üòÖ', 'comment_created': datetime.datetime(2020, 8, 28, 16, 19, 3, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 479410584, 'comment_body': ""Would\r\n```ruby\r\nstatus_hash[:messages] = messages.presence.to_a\r\n```\r\nbe a better option? However, I'm not sure whether the intention was to have the messages key in `status_hash` no matter what."", 'comment_created': datetime.datetime(2020, 8, 28, 16, 27, 16, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 479428281, 'comment_body': ""@MikeMcQuaid, what are your thoughts here?\r\n\r\nI still prefer the original `status_hash[:messages] = messages if messages.is_a?(Array)` code, as it only sets `status_hash[:messages]` when it's appropriate. `messages.present?` and `messages.presence` are also less strict than the original condition, since they're only checking for a non-blank value (not ensuring `messages` is an array).\r\n\r\nIf Mike's intention is to always have `status_hash[:messages]`, then I would probably prefer your initial version of this, as there's less work involved (it's ~30% faster than `messages.presence.to_a`): `status_hash[:messages] = messages.present? ? messages : []`. "", 'comment_created': datetime.datetime(2020, 8, 28, 17, 1, 46, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 479477168, 'comment_body': ""I don't mind either way. I don't think performance matters here as it's not a tight loop."", 'comment_created': datetime.datetime(2020, 8, 28, 18, 45, 54, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 479478801, 'comment_body': 'Reverting this to the original `is_a?(Array)` code.', 'comment_created': datetime.datetime(2020, 8, 28, 18, 49, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 479479927, 'comment_body': ""The reason I've not used a verified double is because I'm using the double to stand in for parsed arguments. If it has to be made verified, I'll have to define (?) a class the same way the arguments parser does, which I feel may be too much for a test. What do you think @MikeMcQuaid?"", 'comment_created': datetime.datetime(2020, 8, 28, 18, 52, 25, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 479549546, 'comment_body': '```suggestion\r\n    let(:url) { ""https://github.s3.amazonaws.com/downloads/Homebrew/brew/1.0.0.tar.gz"" }\r\n\r\n    it ""returns the preprocessed URL for livecheck to use"" do\r\n      expect(livecheck.preprocess_url(url))\r\n        .to eq(""https://github.com/Homebrew/brew.git"")\r\n```\r\n\r\nThe `github.s3.amazonaws` URLs (found in the `syck` and `wrk-trello` formulae) follow a format like `https://github.s3.amazonaws.com/downloads/Homebrew/brew/1.0.0.tar.gz`. It may be more representative to use this URL, as we\'ll probably never see one ending in `.../releases/latest`.\r\n\r\nThis also exercises a little more of the code, since `/releases/latest` URLs are a special case and don\'t get converted into the `.git` URL. I\'ll probably expand this later but this may be better for right now.', 'comment_created': datetime.datetime(2020, 8, 28, 21, 50, 38, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 479938341, 'comment_body': 'Fine with me üëçüèª ', 'comment_created': datetime.datetime(2020, 8, 31, 7, 9, 51, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}]","[{'commit_sha': 'c9f0642d45cec29760be8480c1f2a013546b911b', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e0cc48b65f110c67c4d2b19ac0f78b35aef06b6', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2550af57df88cb414aaa6fbf6879e92fd89460f2', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '062156365b9d10b1a865014bbe8efad99defba22', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cab6042d8f260fb50b37d44b3650ee7534accc7', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Nanda H Krishna,33784207,me@nandahkrishna.com,User,,68,,54,148
464925116,livecheck migration: add strategies,"- [x] Have you followed the guidelines in our [Contributing](https://github.com/Homebrew/brew/blob/HEAD/CONTRIBUTING.md) document?
- [x] Have you checked to ensure there aren't other open [Pull Requests](https://github.com/Homebrew/brew/pulls) for the same change?
- [x] Have you added an explanation of what your changes do and why you'd like us to include them?
- [x] Have you written new tests for your changes? [Here's an example](https://github.com/Homebrew/brew/blob/HEAD/Library/Homebrew/test/PATH_spec.rb).
- [x] Have you successfully run `brew style` with your changes locally?
- [x] Have you successfully run `brew tests` with your changes locally?

-----

This PR adds livecheck's strategies to Homebrew/brew. The original PR #8180 was split up to make code review easier, and the changes here will have to be merged before that PR can be merged.

Changes yet to work on:
* Tests, have some very simple tests ready, will add them here soon.
* Making the strategy regexes more understandable.",True,8255,https://api.github.com/repos/Homebrew/brew/pulls/8255,https://github.com/Homebrew/brew/pull/8255,closed,1217,0,26,1,7,60,1,0,[{'name': 'outdated'}],2020-08-08 01:48:59+00:00,2020-08-27 15:12:38+00:00,1689819.0,"19 days, 13:23:39","[{'comment_id': 468248890, 'comment_body': ""Since this defines `@strategies` the first time it's executed, we have to be careful that it's not called before the tap strategies are loaded in `Homebrew::Livecheck#livecheck_formulae`. It's easy to use this somewhere else and quietly break any checks that use a tap strategy, so this may benefit from being private but I'll defer to Mike."", 'comment_created': datetime.datetime(2020, 8, 10, 23, 55, 48, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 468980686, 'comment_body': ""`Utils.popen_read` isn't a drop-in replacement here. This method only returns one value, so `stderr_str` is always `nil` even if Git encounters an error condition.\r\n\r\nFor what it's worth, the purpose of the `Open3.capture3` setup was to capture any errors that Git outputs on `stderr`. We then surface this error in the debug output or JSON output, which is more appropriate than Git printing it.\r\n\r\nThe current code here prevents Git from printing the error (which is good with regard to the JSON output) but doesn't capture the `stderr` text like we've been doing."", 'comment_created': datetime.datetime(2020, 8, 12, 3, 16, 6, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 471538886, 'comment_body': ""> we have to be careful that it's not called before the tap strategies are loaded in `Homebrew::Livecheck#livecheck_formulae`\r\n\r\nHmm, that makes me think that this method should be what loads the strategies, in that case (or, if it can't, it errors out hard)."", 'comment_created': datetime.datetime(2020, 8, 17, 14, 59, 47, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 471539300, 'comment_body': 'Make `-5` a constant (and explain why e.g. 5 and not 10, 1, whatever).', 'comment_created': datetime.datetime(2020, 8, 17, 15, 0, 23, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 471539585, 'comment_body': ""I think it's worth making these explicit and perhaps e.g. adding a test if they aren't required."", 'comment_created': datetime.datetime(2020, 8, 17, 15, 0, 46, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 471540259, 'comment_body': 'Would be nicer to use named groups here.', 'comment_created': datetime.datetime(2020, 8, 17, 15, 1, 49, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 471540731, 'comment_body': '```suggestion\r\n          tags_data[:messages] = stderr_str.split(""\\n"") if stderr_str.present?\r\n```', 'comment_created': datetime.datetime(2020, 8, 17, 15, 2, 34, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 471540843, 'comment_body': ""If `SystemCommand` can do what you want: I'd prefer it here."", 'comment_created': datetime.datetime(2020, 8, 17, 15, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 471541105, 'comment_body': 'Prefer named capture groups.', 'comment_created': datetime.datetime(2020, 8, 17, 15, 3, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 471541745, 'comment_body': 'This may have some overlap with `brew audit` which has a similar list. Would be good to combine them.', 'comment_created': datetime.datetime(2020, 8, 17, 15, 4, 5, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 471541968, 'comment_body': ""This is a good comment. I'd like to see more comments like this in other strategies."", 'comment_created': datetime.datetime(2020, 8, 17, 15, 4, 24, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 471542234, 'comment_body': 'Always favour `<<~EOS` over `\\n` in strings.', 'comment_created': datetime.datetime(2020, 8, 17, 15, 4, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 471542580, 'comment_body': 'This would probably benefit from some example URLs in a comment (and in other strategies).', 'comment_created': datetime.datetime(2020, 8, 17, 15, 5, 16, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 472607237, 'comment_body': ""The issue is that we don't know which tap's strategies to load (if any) until the CLI args are parsed. Additionally, `Homebrew::Livecheck::Strategy` doesn't have access to `args`, as it's now a local variable that gets passed around everywhere.\r\n\r\nThese were the primary issues that I faced when I was working on supporting tap strategies. I tried some other approaches but what we have right now was the only one that worked at the time. I'm open to other approaches but there are certainly challenges."", 'comment_created': datetime.datetime(2020, 8, 19, 2, 35, 37, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 472612270, 'comment_body': ""Basically, it's a simple 1-10 scale with 1 being low, 10 being high, and 0 skips a strategy. 5 is used as the default since it's roughly in the middle (i.e., we have room above and below to make strategies higher or lower priority).\r\n\r\nI would set the constant to `5`, since the strategy `PRIORITY` constants are also positive. The negations here are simply to do reverse sorting without having to iterate over the array twice (e.g., `usable_strategies.sort_by { ... }.reverse`).\r\n\r\nI'll create a constant (and add a comment to explain it) as part of making the strategy regexes more comprehensible and adding explanatory comments."", 'comment_created': datetime.datetime(2020, 8, 19, 2, 43, 20, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 472614097, 'comment_body': ""I'm working on making these changes to the strategy regexes in Homebrew/homebrew-livecheck and the plan is that Nanda will simply incorporate the changes in this PR."", 'comment_created': datetime.datetime(2020, 8, 19, 2, 46, 6, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 472657161, 'comment_body': 'Something like this is functional but doesn\'t meet all the same goals:\r\n\r\n```ruby\r\nstdout, stderr, _status = SystemCommand.run(\r\n  ""git"",\r\n  args: [""ls-remote"", ""--tags"", repo_url],\r\n  env:  { ""GIT_TERMINAL_PROMPT"" => ""0"" },\r\n).to_ary\r\n```\r\n\r\nThe main issue is that it always prints the `stderr` output when we want to capture it instead. That is to say, the `SystemCommand` setup reintroduces the issue with the Git error appearing in JSON output, which is what we were avoiding with the `Open3.capture3` setup:\r\n\r\n```\r\nfatal: repository \'https://example.com/example.git/\' not found\r\n[{""formula"":""example"",""status"":""error"",""messages"":[""fatal: repository \'https://example.com/example.git/\' not found""]}]\r\n```\r\n\r\nThe other issue is that `SystemCommand` prints debug output that we can\'t silence (there\'s a `verbose` option we can control but no `debug` option), so it pollutes our carefully crafted debug output format:\r\n\r\n```\r\nFormula:          example\r\nLivecheckable?:   Yes\r\n\r\nURL:              https://example.com/example.git\r\nStrategy:         Git\r\nRegex:            /^v?(\\d+(?:\\.\\d+)+)$/i\r\n/usr/bin/env GIT_TERMINAL_PROMPT=0 git ls-remote --tags https://example.com/example.git\r\nfatal: repository \'https://example.com/example.git/\' not found\r\nfatal: repository \'https://example.com/example.git/\' not found\r\nError: example: Unable to get versions\r\n```\r\n\r\nThere may be ways to work around these issues but this is where I am right now with this.', 'comment_created': datetime.datetime(2020, 8, 19, 3, 55, 45, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 472658067, 'comment_body': 'I removed the `DEV_VERSION_ALLOWLIST` in a recent Homebrew/livecheck PR (in favor of simply handling the regexes in livecheckables) and this change will be incorporated into this PR with the other forthcoming changes.', 'comment_created': datetime.datetime(2020, 8, 19, 3, 57, 10, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 472658707, 'comment_body': ""I've been working on this as part of making the regexes (and strategies in general) more clear."", 'comment_created': datetime.datetime(2020, 8, 19, 3, 58, 13, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 472667754, 'comment_body': ""Just to make sure, this is what you're looking for here, correct?\r\n\r\n```ruby\r\nif match_list.length > 1\r\n  odebug <<~EOS\r\n\r\n    Multiple project names found: #{match_list}\r\n\r\n  EOS\r\nend\r\n```"", 'comment_created': datetime.datetime(2020, 8, 19, 4, 12, 59, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 472668607, 'comment_body': ""I agree and I've been incorporating this sort of information in the aforementioned work I'm doing."", 'comment_created': datetime.datetime(2020, 8, 19, 4, 14, 25, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 472933035, 'comment_body': ""This makes me think having a static list of strategies defined somewhere (which can be added to from taps, if needed) is a better fit than doing introspection here. We can add a unit test to ensure that the list doesn't fall out of date."", 'comment_created': datetime.datetime(2020, 8, 19, 10, 39, 49, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 472933253, 'comment_body': ""> I'll create a constant (and add a comment to explain it) as part of making the strategy regexes more comprehensible and adding explanatory comments.\r\n\r\nThanks!"", 'comment_created': datetime.datetime(2020, 8, 19, 10, 40, 12, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 472933442, 'comment_body': 'üëçüèª ', 'comment_created': datetime.datetime(2020, 8, 19, 10, 40, 33, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 472933828, 'comment_body': ""Ok, fine for me to use `Open3.capture3` given the above and documentation explaining why that's the case."", 'comment_created': datetime.datetime(2020, 8, 19, 10, 41, 15, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 472934149, 'comment_body': ""üëçüèª but even then I think it would be good to integrate with the `audit` list that's checking the same thing."", 'comment_created': datetime.datetime(2020, 8, 19, 10, 41, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 472934287, 'comment_body': 'Yup.', 'comment_created': datetime.datetime(2020, 8, 19, 10, 42, 2, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 472934394, 'comment_body': 'üëçüèª ', 'comment_created': datetime.datetime(2020, 8, 19, 10, 42, 14, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 473009647, 'comment_body': ""I just checked the `GNOME_DEVEL_ALLOWLIST` in `dev-cmd/audit.rb` and it references the same formulae, so I imagine we're good here.\r\n\r\nThe main differentiator is that the `Gnome` strategy's `DEV_VERSION_ALLOWLIST` used the package name (e.g., `libart_lgpl`) rather than the formula name (e.g., `libart`). `libart` is the exception and the others have an identical formula name and package name."", 'comment_created': datetime.datetime(2020, 8, 19, 12, 59, 56, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 473043698, 'comment_body': 'One thing that\'s important is we only want a tap\'s strategies (or strategy overrides) to apply to formulae in that tap. We currently load tap strategies when there are formulae present from non-core taps but these strategies/overrides apply to all formulae in the run, which we don\'t want.\r\n\r\nFor example, I have a local test tap where I\'ve implemented a `GithubLatest` strategy (which checks the ""latest"" release on GitHub). If I set the priority higher than others (e.g., 9 or 10) and run a check that includes a formula in my tap as well as homebrew-core formulae, then the strategy will be applied to all the formulae that match in a run (not just the tap formula).\r\n\r\nAnother example would be if a tap had a strategy that simply modified some aspects of a built-in strategy:\r\n\r\n```ruby\r\nmodule Homebrew\r\n  module Livecheck\r\n    module Strategy\r\n      module Git\r\n        PRIORITY = 4 # Instead of 8 in the built-in strategy\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nThis modification would apply in the same manner, affecting all the formulae in a run if a formula in the tap is included.\r\n\r\nThis is also a problem if two taps implement a strategy with the same name, where one would override the other (or we end up with a mix of the two).\r\n\r\n---\r\n\r\nThe basic idea is that we need to differentiate between built-in strategies and tap strategies and only apply tap strategies (including any modifications to existing strategies) to formulae from that tap. I\'m not yet sure how we can accomplish this from a technical standpoint but I imagine it will affect how we proceed with this.', 'comment_created': datetime.datetime(2020, 8, 19, 13, 49, 8, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 477995786, 'comment_body': '```suggestion\r\n        URL_MATCH_REGEX = %r{www\\.apache\\.org/dyn/.+path=.+}i.freeze\r\n```\r\n\r\nI recently added this in homebrew-livecheck while reviewing the strategy tests here.', 'comment_created': datetime.datetime(2020, 8, 27, 2, 59, 15, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 477996656, 'comment_body': '```suggestion\r\n          (DownloadStrategyDetector.detect(url) <= GitDownloadStrategy) == true\r\n```\r\n\r\nI recently added this in homebrew-livecheck while reviewing the strategy tests here.', 'comment_created': datetime.datetime(2020, 8, 27, 2, 59, 56, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 477997757, 'comment_body': '```suggestion\r\n            odebug <<~EOS\r\n\r\n              Multiple project names found: #{match_list}\r\n\r\n            EOS\r\n```\r\n\r\nThe blank lines here are intentional but they were somehow lost in the process of integrating the recent strategy changes into this PR.', 'comment_created': datetime.datetime(2020, 8, 27, 3, 0, 42, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 477998563, 'comment_body': ""```suggestion\r\n          regex ||=\r\n            %r{href=.*?/packages.*?/#{Regexp.escape(package_name)}[._-]v?(\\d+(?:\\.\\d+)*)#{Regexp.escape(suffix)}}i\r\n```\r\n\r\nWe want to avoid splitting default strategy regexes onto multiple lines (i.e., `%r{...}x`), since they're printed in debug output (and multiline regexes mess up the format). We can deal with the line being too long by simply moving it to the next line for now."", 'comment_created': datetime.datetime(2020, 8, 27, 3, 1, 16, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 477999229, 'comment_body': '```suggestion\r\n  let(:apache_url) { ""https://www.apache.org/dyn/closer.lua?path=abc/1.2.3/def-1.2.3.tar.gz"" }\r\n```\r\n\r\nWe should use a URL that\'s closer in format to a typical Apache URL (though there are slight variations in the `path` parameter).\r\n\r\n---\r\n\r\nI may extract the `page_url` and default `regex` generation parts of most strategies into separate methods sometime after GSoC, as that\'s an important part of a strategy\'s behavior and something we really should test. I would also add URLs in this test to check additional permutations at that time but having the existing URL here in the expected format means there would be one less thing to do.\r\n\r\nFor what it\'s worth, the reason why I\'m using `abc` in one place and `def` in another is so that I can ensure that the URL part extraction (i.e., path, prefix, suffix) is working properly if I write those tests in the future. That is to say, if the code somehow messed up and parsed the wrong part of the URL, it could potentially give a false positive if the related text was the same in more than one location in the URL.', 'comment_created': datetime.datetime(2020, 8, 27, 3, 1, 47, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 477999833, 'comment_body': '```suggestion\r\n  let(:bitbucket_url) { ""https://bitbucket.org/abc/def/get/1.2.3.tar.gz"" }\r\n```', 'comment_created': datetime.datetime(2020, 8, 27, 3, 2, 15, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478002610, 'comment_body': 'The return type of `#match?` should always be a boolean, so this behavior isn\'t intended. I updated the `Git` strategy\'s `#match?` method to address this and it will correctly return `false` instead of `nil` now.\r\n\r\n```suggestion\r\n    it ""returns false if the argument provided is not a Git repository"" do\r\n      expect(git.match?(non_git_url)).to be false\r\n```', 'comment_created': datetime.datetime(2020, 8, 27, 3, 4, 15, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478003707, 'comment_body': '```suggestion\r\n  let(:gnome_url) { ""https://download.gnome.org/sources/abc/1.2/def-1.2.3.tar.xz"" }\r\n```', 'comment_created': datetime.datetime(2020, 8, 27, 3, 5, 6, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478004789, 'comment_body': '```suggestion\r\n  let(:gnu_url) { ""https://ftp.gnu.org/gnu/abc/def-1.2.3.tar.gz"" }\r\n  let(:savannah_gnu_url) { ""https://download.savannah.gnu.org/releases/abc/def-1.2.3.tar.gz"" }\r\n```', 'comment_created': datetime.datetime(2020, 8, 27, 3, 5, 53, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478005794, 'comment_body': '```suggestion\r\n  let(:hackage_url) { ""https://hackage.haskell.org/package/abc-1.2.3/def-1.2.3.tar.gz"" }\r\n```', 'comment_created': datetime.datetime(2020, 8, 27, 3, 6, 36, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478006867, 'comment_body': '```suggestion\r\n  let(:launchpad_url) { ""https://launchpad.net/abc/1.2/1.2.3/+download/def-1.2.3.tar.gz"" }\r\n```', 'comment_created': datetime.datetime(2020, 8, 27, 3, 7, 22, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478008116, 'comment_body': '```suggestion\r\n  let(:npm_url) { ""https://registry.npmjs.org/abc/-/def-1.2.3.tgz"" }\r\n```', 'comment_created': datetime.datetime(2020, 8, 27, 3, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478020533, 'comment_body': '```suggestion\r\n  let(:pypi_url) { ""https://files.pythonhosted.org/packages/ab/cd/efg/hij-1.2.3.tar.gz"" }\r\n```', 'comment_created': datetime.datetime(2020, 8, 27, 3, 17, 13, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478021875, 'comment_body': '```suggestion\r\n  let(:sourceforge_url) { ""https://downloads.sourceforge.net/project/abc/def-1.2.3.tar.gz"" }\r\n```', 'comment_created': datetime.datetime(2020, 8, 27, 3, 18, 6, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478023122, 'comment_body': '```suggestion\r\n  let(:xorg_url) { ""https://www.x.org/archive/individual/app/abc-1.2.3.tar.bz2"" }\r\n```', 'comment_created': datetime.datetime(2020, 8, 27, 3, 19, 1, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478032188, 'comment_body': ""This is just my own personal view but if we're faced with the decision of keeping `Strategy#strategies` private or having a test for it, I would be in favor of keeping it private and dropping the test for now.\r\n\r\nThis is only a short-term concern, since I plan to work on a different approach to this after GSoC is over and I'll add an appropriate test (similar to this) at that time.\r\n\r\nThoughts on this, @MikeMcQuaid?"", 'comment_created': datetime.datetime(2020, 8, 27, 3, 25, 34, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478047610, 'comment_body': '```suggestion\r\n\r\n    it ""returns false if the argument provided is a Savannah GNU URL"" do\r\n      expect(gnu.match?(savannah_gnu_url)).to be false\r\n    end\r\n\r\n```\r\n\r\n', 'comment_created': datetime.datetime(2020, 8, 27, 3, 36, 53, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478049712, 'comment_body': '```suggestion\r\n    it ""returns true if the argument provided is an npm URL"" do\r\n```', 'comment_created': datetime.datetime(2020, 8, 27, 3, 38, 25, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478050007, 'comment_body': '```suggestion\r\n    it ""returns false if the argument provided is not an npm URL"" do\r\n```', 'comment_created': datetime.datetime(2020, 8, 27, 3, 38, 38, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478058181, 'comment_body': ""```suggestion\r\n      expect(matches[:matches].first[1]).to be_a(Version)\r\n      expect(matches[:regex]).to eq(regex)\r\n      expect(matches[:url]).to eq(url)\r\n```\r\n\r\nThe hash returned from `#find_versions` is organized with the keys in alphabetical order (`{ matches: {}, regex: regex, url: url }`), so having them in the same order in the test makes some kind of sense. It doesn't make a difference on a technical level and is merely a stylistic choice."", 'comment_created': datetime.datetime(2020, 8, 27, 3, 46, 32, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478062519, 'comment_body': '```suggestion\r\n      it ""returns an array of usable strategies which doesn\'t include PageMatch"" do\r\n```\r\n\r\nSince this URL only matches one strategy, we\'re arguably not testing for the strategies being ordered by priority in this particular instance.', 'comment_created': datetime.datetime(2020, 8, 27, 3, 51, 4, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478065222, 'comment_body': '```suggestion\r\n      it ""returns an array of usable strategies including PageMatch, sorted in descending order by priority"" do\r\n```\r\n\r\nSince there are two strategies for this URL when there\'s a regex and `PageMatch` has the lowest priority, this is the test that\'s checking that the array is in descending order by priority.', 'comment_created': datetime.datetime(2020, 8, 27, 3, 53, 52, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478110913, 'comment_body': '> This is also a problem if two taps implement a strategy with the same name\r\n\r\nMaybe the name can be scoped under the tap name in that case?\r\n\r\nAlso, it seems like strategies should really be classes instead of modules so you can subclass them.', 'comment_created': datetime.datetime(2020, 8, 27, 4, 45, 45, tzinfo=datetime.timezone.utc), 'commenter': 'reitermarkus', 'type': 'User'}, {'comment_id': 478221882, 'comment_body': '> Maybe the name can be scoped under the tap name in that case?\r\n> \r\n> Also, it seems like strategies should really be classes instead of modules so you can subclass them.\r\n\r\nAgreed üëçüèª ', 'comment_created': datetime.datetime(2020, 8, 27, 7, 44, 42, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 478353967, 'comment_body': 'Added a test for the Savannah URL as well.', 'comment_created': datetime.datetime(2020, 8, 27, 11, 43, 32, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 478355908, 'comment_body': ""I'm going ahead with keeping it private and dropping the test for now, unless in any further review we decide against it."", 'comment_created': datetime.datetime(2020, 8, 27, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 478357227, 'comment_body': 'Ah I added the test before I saw this here, haha.', 'comment_created': datetime.datetime(2020, 8, 27, 11, 49, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 478357603, 'comment_body': 'Wow I cannot believe I missed that, thanks for spotting it üòÖ', 'comment_created': datetime.datetime(2020, 8, 27, 11, 50, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 478407128, 'comment_body': ""> Maybe the name can be scoped under the tap name in that case?\r\n\r\nYes, that's what I'm thinking. There may be some challenges around implementing this but we can flesh it out in a separate issue or PR after GSoC.\r\n\r\n> Also, it seems like strategies should really be classes instead of modules so you can subclass them.\r\n\r\nI agree. I originally had them as classes when I established the structure of the strategies in the homebrew-livecheck repository, for this same reason. The strategies became modules related to [a requested change in #8180](https://github.com/Homebrew/brew/pull/8180#discussion_r464260242) (when the strategy changes were part of that PR), seemingly to take advantage of `module_function`.\r\n\r\nDo we want to work on converting the strategies back to classes before merging this PR or should we simply move this forward and handle it later (due to time constraints)?"", 'comment_created': datetime.datetime(2020, 8, 27, 13, 11, 5, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 478411086, 'comment_body': ""> should we simply move this forward and handle it later (due to time constraints)?\r\n\r\nThe latter. The only thing I see blocking is @reitermarkus's documentation request below."", 'comment_created': datetime.datetime(2020, 8, 27, 13, 17, 5, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}]","[{'commit_sha': 'f520301180a4390af32a485288bff5f24a0b14fa', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Nanda H Krishna,33784207,me@nandahkrishna.com,User,,68,,54,148

286269687,anime-downloader 3.6.3 (new formula),"This commit adds a new formula, anime-downloader (v3.6.3), to homebrew/core. The new file added is anime-downloader.rb.

- [x] Have you followed the [guidelines for contributing](https://github.com/Homebrew/homebrew-core/blob/master/CONTRIBUTING.md)?
- [x] Have you checked that there aren't other open [pull requests](https://github.com/Homebrew/homebrew-core/pulls) for the same formula update/change?
- [x] Have you built your formula locally with `brew install --build-from-source <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Is your test running fine `brew test <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Does your build pass `brew audit --strict <formula>` (after doing `brew install <formula>`)?

-----

Please do give me any suggestions to improve this. Thanks.",False,40791,https://api.github.com/repos/Homebrew/homebrew-core/pulls/40791,https://github.com/Homebrew/homebrew-core/pull/40791,closed,83,0,1,1,12,11,3,0,"[{'name': 'new formula'}, {'name': 'ready to merge'}, {'name': 'outdated'}]",2019-06-07 17:16:21+00:00,2019-06-25 14:49:39+00:00,1546398.0,"17 days, 21:33:18","[{'comment_id': 292687100, 'comment_body': ""This is inappropriate.\r\nI cannot provide a clear rule, but generally you shouldn't use `bottle :unneeded` unless you are asked by Homebrew members."", 'comment_created': datetime.datetime(2019, 6, 11, 22, 38, 3, tzinfo=datetime.timezone.utc), 'commenter': 'equal-l2', 'type': 'User'}, {'comment_id': 292765308, 'comment_body': 'We need a test that exercises the some of the functionality of the app. Version checks or usage checks (foo --version or foo --help) are not sufficient, as explained in the formula cookbook.\r\n\r\nIn most cases, a good test would involve running a simple test case: run #{bin}/foo input.txt.\r\n\r\n- Then you can check that the output is as expected (with assert_equal or assert_match on the output of shell_output)\r\n- You can also check that an output file was created, if that is expected: assert_predicate testpath/""output.txt"", :exist?\r\n\r\nSome advice for specific cases:\r\n\r\n- If the formula is a library, compile and run some simple code that links against it. It could be taken from upstream\'s documentation / source examples.\r\n- If the formula is for a GUI program, try to find some function that runs as command-line only, like a format conversion, reading or displaying a config file, etc.\r\n- If the software cannot function without credentials, a test could be to try to connect with invalid credentials (or without credentials) and confirm that it fails as expected.\r\n- Same if the software requires a virtual machine, docker instance, etc. to be running.', 'comment_created': datetime.datetime(2019, 6, 12, 6, 43, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SMillerDev', 'type': 'User'}, {'comment_id': 292766356, 'comment_body': ""Anything that just installs a file/universal binary (like most php and java based projects) and doesn't need any real install can be `bottle :unneeded`. Any other new formula should not have a bottle block because the bot generates them."", 'comment_created': datetime.datetime(2019, 6, 12, 6, 48, 1, tzinfo=datetime.timezone.utc), 'commenter': 'SMillerDev', 'type': 'User'}, {'comment_id': 292786974, 'comment_body': 'Yes, this was where I had a doubt. Any file downloaded would be of considerably large size and would take time. Is that fine for a test? Or else I will stick to something like a search query.', 'comment_created': datetime.datetime(2019, 6, 12, 7, 56, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 292798091, 'comment_body': ""taking time isn't an issue, but a search query might be just as good. It just needs to demonstrate some actual functionality"", 'comment_created': datetime.datetime(2019, 6, 12, 8, 27, 18, tzinfo=datetime.timezone.utc), 'commenter': 'SMillerDev', 'type': 'User'}, {'comment_id': 292838891, 'comment_body': 'This has been removed, thanks.', 'comment_created': datetime.datetime(2019, 6, 12, 10, 8, 10, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 293106178, 'comment_body': 'A test for functionality has been added. Thanks!', 'comment_created': datetime.datetime(2019, 6, 12, 20, 36, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 293294779, 'comment_body': '```suggestion\r\n    actual = shell_output(""echo ^C | anime dl \'Kaguya-sama\' --provider animepahe"")\r\n    assert_match ""1: Kaguya-sama wa Kokurasetai: Tensai-tachi"", actual\r\n```', 'comment_created': datetime.datetime(2019, 6, 13, 9, 48, 26, tzinfo=datetime.timezone.utc), 'commenter': 'SMillerDev', 'type': 'User'}, {'comment_id': 293294975, 'comment_body': 'This might be a lot easier', 'comment_created': datetime.datetime(2019, 6, 13, 9, 48, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SMillerDev', 'type': 'User'}, {'comment_id': 293529620, 'comment_body': ""Just realised there's a small problem with this. The command outputs a line `anime: anime-downloader 3.6.3` every time this is executed, before giving the results - so match will fail without the `head -1`. If I do pipe the output to `head -1`, I get the desired value in actual but this is displayed after the test execution:\r\n```\r\nanime: anime-downloader 3.6.3\r\nAborted!\r\n```\r\nThe `Aborted!` is displayed because I pass `Ctrl+C` to stop execution after getting the search results. I'm not sure this would be great for someone to see when they test the program. Do tell me if you would prefer that I make the change @SMillerDev, thanks."", 'comment_created': datetime.datetime(2019, 6, 13, 18, 55, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 293537855, 'comment_body': 'I could simplify it to this:\r\n```\r\nsystem ""sh"", ""-c"", ""echo ^C | anime dl \'Kaguya-sama\' --provider animepahe | head -1 > out"" \r\nassert_match "" 1: Kaguya-sama wa Kokurasetai: Tensai-tachi"", (testpath/""out"").read\r\n```', 'comment_created': datetime.datetime(2019, 6, 13, 19, 17, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}]","[{'commit_sha': 'b422de66429b00c6f9935882d5c27ff8f3057867', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Nanda H Krishna,33784207,me@nandahkrishna.com,User,,68,,54,148
331498546,anime-downloader 4.0.1,"- [x] Have you followed the [guidelines for contributing](https://github.com/Homebrew/homebrew-core/blob/master/CONTRIBUTING.md)?
- [x] Have you checked that there aren't other open [pull requests](https://github.com/Homebrew/homebrew-core/pulls) for the same formula update/change?
- [x] Have you built your formula locally with `brew install --build-from-source <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Is your test running fine `brew test <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Does your build pass `brew audit --strict <formula>` (after doing `brew install <formula>`)?
-----
This PR aims to update anime-downloader to version 4.0.1, and has some changes in addition to the version bump. Additional dependencies and resources have been added due to significant changes and tests have been rewritten.",False,45722,https://api.github.com/repos/Homebrew/homebrew-core/pulls/45722,https://github.com/Homebrew/homebrew-core/pull/45722,closed,43,11,1,1,1,3,1,0,[{'name': 'outdated'}],2019-10-23 11:49:47+00:00,2019-10-24 21:38:29+00:00,121722.0,"1 day, 9:48:42","[{'comment_id': 338162800, 'comment_body': 'Not quite sure why we need to update the `desc` but the old desc seems good.', 'comment_created': datetime.datetime(2019, 10, 23, 16, 50, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chenrui333', 'type': 'User'}, {'comment_id': 338266043, 'comment_body': 'Ah, just updated it to ensure consistency with the description on PyPI.', 'comment_created': datetime.datetime(2019, 10, 23, 20, 37, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 338803904, 'comment_body': 'Sounds cool!', 'comment_created': datetime.datetime(2019, 10, 24, 21, 38, 6, tzinfo=datetime.timezone.utc), 'commenter': 'chenrui333', 'type': 'User'}]","[{'commit_sha': 'c0b22ae3ce17422e022b738fbcb1a0c194825b73', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Nanda H Krishna,33784207,me@nandahkrishna.com,User,,68,,54,148
416030260,Add livecheck block to a52dec.rb,"- [x] Have you followed the [guidelines for contributing](https://github.com/Homebrew/homebrew-core/blob/master/CONTRIBUTING.md)?
- [x] Have you checked that there aren't other open [pull requests](https://github.com/Homebrew/homebrew-core/pulls) for the same formula update/change?
- [x] Have you built your formula locally with `brew install --build-from-source <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Is your test running fine `brew test <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Does your build pass `brew audit --strict <formula>` (after doing `brew install <formula>`)?

-----

This PR aims to add a `livecheck` block to `a52dec.rb`. This is to test the new `livecheck` DSL being added to Homebrew/brew. See Issue Homebrew/brew#7027 and PR Homebrew/brew#7179 for more details. Attn: @MikeMcQuaid @samford ",False,54565,https://api.github.com/repos/Homebrew/homebrew-core/pulls/54565,https://github.com/Homebrew/homebrew-core/pull/54565,closed,5,0,1,1,7,9,0,0,[],2020-05-11 11:00:20+00:00,2020-05-11 21:45:12+00:00,38692.0,10:44:52,"[{'comment_id': 422962874, 'comment_body': ""This is also the homepage, can't livecheck infer this?"", 'comment_created': datetime.datetime(2020, 5, 11, 11, 7, 37, tzinfo=datetime.timezone.utc), 'commenter': 'SMillerDev', 'type': 'User'}, {'comment_id': 422968118, 'comment_body': 'The homepage ends in `.io`, and while it redirects to the `.net` URL, livecheck will error on redirection.\r\n\r\nWhen I remove the URL from the livecheckable:\r\n```\r\nError: a52dec: redirection forbidden: https://liba52.sourceforge.io/files/a52dec-0.7.4.tar.gz -> http://liba52.sourceforge.net/files/a52dec-0.7.4.tar.gz\r\n```', 'comment_created': datetime.datetime(2020, 5, 11, 11, 18, 25, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 422981451, 'comment_body': '> The homepage ends in `.io`, and while it redirects to the `.net` URL, livecheck will error on redirection.\r\n\r\nWe should fix this üëç ', 'comment_created': datetime.datetime(2020, 5, 11, 11, 45, 3, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 423048714, 'comment_body': ""While I was tinkering around my local livecheck  repository, I tested out using the Formula's URLs (`url`, `homepage`) rather than specifying `http://liba52.sourceforge.net` in the block.\r\n\r\nUsing the `--debug` option (and ensuring that the block was being used), I saw that `version_heuristic` errors as it first uses the `url` from Formula before the `homepage`. I'll see if there's a fix for this."", 'comment_created': datetime.datetime(2020, 5, 11, 13, 43, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 423086530, 'comment_body': ""> We should fix this üëç\r\n\r\n@MikeMcQuaid This is the `sourceforge.io` issue that I previously detailed in Slack. As mentioned there, we can't update the homepage to `http://liba52.sourceforge.net` without the related audit failing, which is why I proposed removing/disabling that particular audit.\r\n\r\n\r\n> While I was tinkering around my local livecheck repository, I tested out using the Formula's URLs (`url`, `homepage`) rather than specifying `http://liba52.sourceforge.net` in the block.\r\n\r\nIt's possible to use `self.homepage` (or `self.head.url`, `self.stable.url`) as the URL in a livecheckable but we've avoided it up to now.\r\n\r\nBeing able to specify the particular URL to use, from the ones that livecheck already uses (head, stable, homepage), has been on my to-do list for a bit. I was tentatively thinking that we could just provide a symbol like `:head`, `:stable`, or `:homepage` and livecheck would use that argument to get the associated URL behind the scenes. This way, people wouldn't have to remember how to access these URLs using `self` (and if `.url` is needed).\r\n\r\nIt's very simple to implement, I just haven't gotten to it yet. I can throw this together probably sometime today if it's desirable, though."", 'comment_created': datetime.datetime(2020, 5, 11, 14, 36, 32, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 423095962, 'comment_body': ""I'd rather we figure out a way to do all this implicitly rather than explicitly. There's no technical reason the livecheck URL can't be parsed from the homepage and/or formula URL."", 'comment_created': datetime.datetime(2020, 5, 11, 14, 49, 36, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 423150760, 'comment_body': '> I\'d rather we figure out a way to do all this implicitly rather than explicitly. There\'s no technical reason the livecheck URL can\'t be parsed from the homepage and/or formula URL.\r\n\r\nI\'m not sure I fully understand. What does ""explicit"" or ""implicit"" look like in this context? For example, would the `url :homepage` setup be counted as explicit?\r\n\r\nThat said, I feel like we\'re maybe getting a little in the weeds on what this particular livecheckable is doing or how livecheck currently behaves. It\'s incredibly unfortunate that this particular livecheckable was selected (due to being first alphabetically), as it\'s part of the 1% of existing livecheckables that don\'t work properly (we have 1000+ livecheckables at present). All existing livecheckables worked properly as of early March (we put a lot of time/effort into making that so) but a few have naturally broken since then and need to be updated.\r\n\r\nThere are no shortage of ways that livecheck and the current livecheckables could be improved if/when a feature is added or we get the time to bring old livecheckables up to current standards (primarily related to older, looser regexes). If we want to improve livecheck and/or livecheckables before migration, it\'s probably more appropriate to discuss and make changes in Homebrew/homebrew-livecheck, through topical issues and/or PRs.', 'comment_created': datetime.datetime(2020, 5, 11, 16, 7, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 423254879, 'comment_body': '> I\'m not sure I fully understand. What does ""explicit"" or ""implicit"" look like in this context? For example, would the `url :homepage` setup be counted as explicit?\r\n\r\nSorry, I should have been more explicit. I mean ""without manually specifying a URL that looks very similar to/redirects from the `homepage` or `url`"".', 'comment_created': datetime.datetime(2020, 5, 11, 19, 3, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 423264108, 'comment_body': '> I mean ""without manually specifying a URL that looks very similar to/redirects from the `homepage` or `url`"".\r\n\r\nGotcha, this particular issue is already on my radar and will be improved through various planned feature additions, primarily `using`/`not_using` and allowing URLs from the formula to be easily specified (potentially something like `url :homepage`). I\'ll solicit more feedback when I\'m working on each.\r\n\r\nIdeally we would only use hardcoded URLs in livecheckables when it\'s really appropriate but right now it happens more often than I would like due to the current technical constraints of livecheck/livecheckables.\r\n\r\nFor example, we have some livecheckables that hardcode the formula\'s `head` URL to 1) ensure we\'re using a specific URL from the formula and 2) ensure we\'re using a specific version-finding strategy in the heuristic. The aforementioned features address those issues, so we\'ll be able to get rid of unnecessary duplication in the near future.', 'comment_created': datetime.datetime(2020, 5, 11, 19, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}]","[{'commit_sha': '647266f17704289a4a58a35a40e3ef5a96b0eefa', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Nanda H Krishna,33784207,me@nandahkrishna.com,User,,68,,54,148
416394654,aacgain: add livecheck block,"- [x] Have you followed the [guidelines for contributing](https://github.com/Homebrew/homebrew-core/blob/master/CONTRIBUTING.md)?
- [x] Have you checked that there aren't other open [pull requests](https://github.com/Homebrew/homebrew-core/pulls) for the same formula update/change?
- [x] Have you built your formula locally with `brew install --build-from-source <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Is your test running fine `brew test <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Does your build pass `brew audit --strict <formula>` (after doing `brew install <formula>`)?

-----

Attempting to add the `livecheck` block to `aacgain`. Ref #54565, Homebrew/brew#7027, Homebrew/brew#7179.",True,54595,https://api.github.com/repos/Homebrew/homebrew-core/pulls/54595,https://github.com/Homebrew/homebrew-core/pull/54595,closed,5,0,1,1,1,5,1,0,[{'name': 'livecheck'}],2020-05-11 23:08:02+00:00,2020-05-18 14:06:58+00:00,572336.0,"6 days, 14:58:56","[{'comment_id': 425332811, 'comment_body': 'Could the `alvarez` be part of the `regex` and this use the `homepage` somehow?', 'comment_created': datetime.datetime(2020, 5, 14, 18, 4, 11, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 425368942, 'comment_body': ""Livecheck uses the `page_match` strategy for this URL, so it's using the regex to match versions within the HTML of the specified page. The content of the homepage and `/alvaraez/` page are completely different, so no.\r\n\r\nAdditionally, we generally try to do the check as close to the stable archive (or upstream repo) as we can. In this case, the current stable archive is https://aacgain.altosdesign.com/alvarez/aacgain-1.8.tar.bz2 and https://aacgain.altosdesign.com/alvarez/ is an index page listing archive files.\r\n\r\nIt's easy to reliably identify versions on an index page like this, whereas the homepage text is potentially unreliable. Basically, the regex you would need to use to match versions on the homepage would be loose (potentially matching more than it should) and if the homepage text notably changes (which isn't uncommon) the check would break and need to be updated.\r\n\r\nFor what it's worth, I went through the existing livecheckables yesterday and fixed any that were broken, so the existing livecheckables are currently working properly (outside of the ones where upstream is unreliable and fails on some runs)."", 'comment_created': datetime.datetime(2020, 5, 14, 19, 8, 17, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 425765046, 'comment_body': '> Livecheck uses the `page_match` strategy for this URL\r\n\r\nStupid question: how do you know that from this DSL?\r\n\r\n\r\n\r\n> The content of the homepage and `/alvaraez/` page are completely different, so no.\r\n\r\nüëç ', 'comment_created': datetime.datetime(2020, 5, 15, 12, 24, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}, {'comment_id': 425776061, 'comment_body': '> how do you know that from this DSL?\r\n\r\nThe livecheckable doesn\'t explicitly mention the strategy at this point (the optional ""using"" feature will allow you to make it explicit, once it\'s implemented), so it\'s basically just that I know how the heuristic works and I check the output of `brew livecheck --debug aacgain`.\r\n\r\nThe output varies depending on the strategy but you\'re generally looking for something after the URL that hints at the strategy. `page_match` is pretty straightforward to identify:\r\n\r\n```\r\nTrying with url https://aacgain.altosdesign.com/alvarez/\r\nUsing page_match(""https://aacgain.altosdesign.com/alvarez/"", ""(?-mix:href=.+?aacgain-(\\d+(?:\\.\\d+)+)\\.t)"")\r\n```\r\n\r\nThe trouble is that `page_match` is used in some strategies and not all of the strategies print debug output (e.g., ""Possible SourceForge project...""), so seeing `page_match` in the output doesn\'t mean it\'s using the default strategy. To properly understand the strategy, you have to be familiar with the URL cases in `heuristic.rb` and think like the heuristic. This URL doesn\'t match any of the special cases (to select a specific strategy), so it uses the default `page_match` strategy on the URL.\r\n\r\nThis is a potential burden to people who aren\'t deeply invested in livecheck (e.g., someone adding a one-off livecheckable), so I would definitely like to improve the debug output in the future. I\'ll be doing some work on the heuristic for the `using` feature, so I\'ll either handle this at the same time or in a follow-up PR.', 'comment_created': datetime.datetime(2020, 5, 15, 12, 45, 7, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 425786383, 'comment_body': 'Thanks! I almost wonder whether the `using` being mandatory would make the behaviour more obvious to non-livecheck experts.', 'comment_created': datetime.datetime(2020, 5, 15, 13, 3, 28, tzinfo=datetime.timezone.utc), 'commenter': 'MikeMcQuaid', 'type': 'User'}]","[{'commit_sha': 'e790b15229b6c3362c7143aea32425110210dad1', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Nanda H Krishna,33784207,me@nandahkrishna.com,User,,68,,54,148
416395677,imap-uw: add livecheck block,"- [x] Have you followed the [guidelines for contributing](https://github.com/Homebrew/homebrew-core/blob/master/CONTRIBUTING.md)?
- [x] Have you checked that there aren't other open [pull requests](https://github.com/Homebrew/homebrew-core/pulls) for the same formula update/change?
- [x] Have you built your formula locally with `brew install --build-from-source <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Is your test running fine `brew test <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Does your build pass `brew audit --strict <formula>` (after doing `brew install <formula>`)?

-----

Attempting to add a `livecheck` block to `imap-uw.rb`. This formula has to be skipped by `livecheck`. Ref #54565.",True,54597,https://api.github.com/repos/Homebrew/homebrew-core/pulls/54597,https://github.com/Homebrew/homebrew-core/pull/54597,closed,5,1,1,1,8,0,1,0,[{'name': 'livecheck'}],2020-05-11 23:11:30+00:00,2020-05-18 14:07:34+00:00,572164.0,"6 days, 14:56:04",[],"[{'commit_sha': 'c76dc8bbf84ec597e075d50da82b07b31fef3c58', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Nanda H Krishna,33784207,me@nandahkrishna.com,User,,68,,54,148
423414977,detekt: update homepage,"- [x] Have you followed the [guidelines for contributing](https://github.com/Homebrew/homebrew-core/blob/master/CONTRIBUTING.md)?
- [x] Have you checked that there aren't other open [pull requests](https://github.com/Homebrew/homebrew-core/pulls) for the same formula update/change?
- [ ] Have you built your formula locally with `brew install --build-from-source <formula>`, where `<formula>` is the name of the formula you're submitting?
- [ ] Is your test running fine `brew test <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Does your build pass `brew audit --strict <formula>` (after doing `brew install <formula>`)?

-----

This PR updates the `homepage` for Formula `detekt`. The repository has been moved to a GitHub organisation named `detekt` and is now available at https://github.com/detekt/detekt while the author maintains a personal fork at the previous homepage url.",False,55321,https://api.github.com/repos/Homebrew/homebrew-core/pulls/55321,https://github.com/Homebrew/homebrew-core/pull/55321,closed,1,1,1,1,1,0,0,0,[],2020-05-26 19:29:00+00:00,2020-05-27 03:07:21+00:00,27501.0,7:38:21,[],"[{'commit_sha': 'c526add62ac990c7330d0f6b97883ad4c87b9f91', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Nanda H Krishna,33784207,me@nandahkrishna.com,User,,68,,54,148
431457896,livecheck: modify Formula urls,"- [x] Have you followed the [guidelines for contributing](https://github.com/Homebrew/homebrew-core/blob/master/CONTRIBUTING.md)?
- [x] Have you checked that there aren't other open [pull requests](https://github.com/Homebrew/homebrew-core/pulls) for the same formula update/change?
- [ ] Have you built your formula locally with `brew install --build-from-source <formula>`, where `<formula>` is the name of the formula you're submitting?
- [ ] Is your test running fine `brew test <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Does your build pass `brew audit --strict <formula>` (after doing `brew install <formula>`)?

-----

Changes required by `livecheck`'s Formula URL reference feature.

Changes:
* `ivykis`: Appending a `/` to the `homepage` url for `livecheck` to use it
* `flawfinder`: It seems like the repository is now at https://github.com/david-a-wheeler/flawfinder.git and not the previous `head` URL, which doesn't show anything (for me at least).
* `mdds`: Adding a `.git` suffix to the `homepage` URL as `livecheck` requires it
* `pass`: Adding a `.git` suffix to the `head` URL as `livecheck` requires it",False,55950,https://api.github.com/repos/Homebrew/homebrew-core/pulls/55950,https://github.com/Homebrew/homebrew-core/pull/55950,closed,4,3,4,4,2,2,0,0,[],2020-06-09 00:00:00+00:00,2020-06-09 11:06:52+00:00,40012.0,11:06:52,"[{'comment_id': 437220877, 'comment_body': ""Shouldn't this be HEAD instead of homepage?"", 'comment_created': datetime.datetime(2020, 6, 9, 8, 16, 31, tzinfo=datetime.timezone.utc), 'commenter': 'SMillerDev', 'type': 'User'}, {'comment_id': 437260844, 'comment_body': ""Oh yeah, I'll change that."", 'comment_created': datetime.datetime(2020, 6, 9, 9, 16, 14, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}]","[{'commit_sha': 'e2c27ecebbb44fdc363c4f71fee5181e7b40197e', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40ff7f079e76db688081de8e21ca06d44e3f2bb4', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c427131589ba8ccfb4c8f8e9bd61efc267bd3292', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9369b652e9202000b159e1e1171ee41787907ca0', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Nanda H Krishna,33784207,me@nandahkrishna.com,User,,68,,54,148
434230303,ossp-uuid: update homepage,"- [x] Have you followed the [guidelines for contributing](https://github.com/Homebrew/homebrew-core/blob/master/CONTRIBUTING.md)?
- [x] Have you checked that there aren't other open [pull requests](https://github.com/Homebrew/homebrew-core/pulls) for the same formula update/change?
- [ ] Have you built your formula locally with `brew install --build-from-source <formula>`, where `<formula>` is the name of the formula you're submitting?
- [ ] Is your test running fine `brew test <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Does your build pass `brew audit --strict <formula>` (after doing `brew install <formula>`)?

-----

I'm not sure if the web.archive.org URL for `homepage` was intentional, but their website seems to be up and I thought I'd change it. Came across this while adding a Livecheckable for this formula, and trying to use `:homepage`.

Edit: Just to add, Livecheck does work with the existing homepage URL, but I thought we shouldn't use the Wayback Machine URL when the original page is up. If this assumption is wrong, feel free to close the PR.",False,56290,https://api.github.com/repos/Homebrew/homebrew-core/pulls/56290,https://github.com/Homebrew/homebrew-core/pull/56290,closed,1,1,1,1,9,0,0,0,[],2020-06-15 00:47:17+00:00,2020-06-19 18:14:04+00:00,408407.0,"4 days, 17:26:47",[],"[{'commit_sha': '1f7bdd8001e693119e7246326a101478fba4f085', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Nanda H Krishna,33784207,me@nandahkrishna.com,User,,68,,54,148
445634135,aacgain: update livecheck regex,"- [x] Have you followed the [guidelines for contributing](https://github.com/Homebrew/homebrew-core/blob/HEAD/CONTRIBUTING.md)?
- [x] Have you checked that there aren't other open [pull requests](https://github.com/Homebrew/homebrew-core/pulls) for the same formula update/change?
- [ ] Have you built your formula locally with `brew install --build-from-source <formula>`, where `<formula>` is the name of the formula you're submitting?
- [ ] Is your test running fine `brew test <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Does your build pass `brew audit --strict <formula>` (after doing `brew install <formula>`)?

-----

This PR updates `aacgain`'s livecheck `regex` to conform to current standards. CC @samford ",True,57627,https://api.github.com/repos/Homebrew/homebrew-core/pulls/57627,https://github.com/Homebrew/homebrew-core/pull/57627,closed,1,1,1,1,0,0,1,0,[{'name': 'livecheck'}],2020-07-07 19:55:41+00:00,2020-07-07 20:19:45+00:00,1444.0,0:24:04,[],"[{'commit_sha': 'a1b2384deb3925cd1628640c7982bd278102f66c', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Nanda H Krishna,33784207,me@nandahkrishna.com,User,,68,,54,148
458131221,vsts-cli: deprecate,"- [x] Have you followed the [guidelines for contributing](https://github.com/Homebrew/homebrew-core/blob/HEAD/CONTRIBUTING.md)?
- [x] Have you checked that there aren't other open [pull requests](https://github.com/Homebrew/homebrew-core/pulls) for the same formula update/change?
- [ ] Have you built your formula locally with `brew install --build-from-source <formula>`, where `<formula>` is the name of the formula you're submitting?
- [ ] Is your test running fine `brew test <formula>`, where `<formula>` is the name of the formula you're submitting?
- [ ] Does your build pass `brew audit --strict <formula>` (after doing `brew install <formula>`)?

-----

According to [this comment](https://github.com/Azure/azure-devops-cli-extension/pull/219#issuecomment-456404611) and [this repo's README](https://github.com/Azure/azure-devops-cli-extension), `vsts-cli` has been deprecated for a while.

I've chosen to provide the comment's URL as it's the only one that gives us the date on which the Formula was deprecated.",True,58760,https://api.github.com/repos/Homebrew/homebrew-core/pulls/58760,https://github.com/Homebrew/homebrew-core/pull/58760,closed,3,0,1,1,0,0,1,0,[{'name': 'formula deprecated'}],2020-07-29 00:51:36+00:00,2020-07-29 06:30:23+00:00,20327.0,5:38:47,[],"[{'commit_sha': 'b809129bfd4592b6bd431b73b127da7dea16eeee', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Nanda H Krishna,33784207,me@nandahkrishna.com,User,,68,,54,148
475461197,livecheck: migrate livecheckables to livecheck blocks,"- [x] Have you followed the [guidelines for contributing](https://github.com/Homebrew/homebrew-core/blob/HEAD/CONTRIBUTING.md)?
- [x] Have you checked that there aren't other open [pull requests](https://github.com/Homebrew/homebrew-core/pulls) for the same formula update/change?
- [ ] Have you built your formula locally with `brew install --build-from-source <formula>`, where `<formula>` is the name of the formula you're submitting?
- [ ] Is your test running fine `brew test <formula>`, where `<formula>` is the name of the formula you're submitting?
- [ ] Does your build pass `brew audit --strict <formula>` (after doing `brew install <formula>`)?

-----

This PR migrates livecheckables from homebrew-livecheck to `livecheck` blocks in the respective formulae.

CC @samford",True,60324,https://api.github.com/repos/Homebrew/homebrew-core/pulls/60324,https://github.com/Homebrew/homebrew-core/pull/60324,closed,9912,0,2100,2100,0,0,1,0,[{'name': 'CI-syntax-only'}],2020-08-28 15:07:22+00:00,2020-08-28 15:36:03+00:00,1721.0,0:28:41,[],"[{'commit_sha': '52c0ae85dcb30ba5317b65882314c5a199535031', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57a5d9bc5a96257050703f2a48521c7d5453d14b', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0136e11d7d2408e5639262dfe71ea63680d7af8e', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06ff380f2322c9f539be5be34821fd00e96c5840', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2df5ebeb7e49c13559381256f6cd5c96a604e07b', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f669288fcca0735efc18fb50ac4aed53f9dea6b', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e11c9e0eb030633d0469f6710081440771f76392', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd8c6aa15047565003ffaeac7708d57d155f1e69', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4660f7ec19b4514cbbf3ca66ebafcedeab9c2c53', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f53397c214eaba63dba37718a1e614f08652790e', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7c6541dacefa31a25c8dd18e3017376af494cf8', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01252572b33557c08c74d98ef6b9955af92b5f5e', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1f0681daa7765a9bb35b620e4daf6305042383e', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd3ec6ba9c2f630e03cf8c335d13f7792f133901', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc9a8a2372e9655e5ded014b68b15d1917268106', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4869360136a2f0613358c80697f06c5a4ef026b6', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd823c1f00e60fc9153bf6ca9e082d0d0977191b', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cd2ed7dbf9b2ed0e5e9d52e079769c09a349179', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a381fce1525ca061cef629ca5be4fbe32f884043', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c940d05edbceb9a2fa7bb5f27c29b887244016ae', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93b94646aa9e42d3db627ab6016afab457fa8f87', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcd26569150173cd1e8fed5bf24a5239ce856724', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12df5611acb910e5e424fca5c73bb5261fb68ed1', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdb14a59baee74f9d4d1cf7785cb323a4a9af909', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9504033369ceb98a1793b71a7db7f99667e3e36a', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'afe2786246267a64da1476248edfc74dbed4d61b', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d60012eb28c993f014d4d2ca981f5b37e853e24', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb3f42218c84a2b2d75041be9b6aa2631bdae305', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '159f542da9ec3f1b8b965bd0b731649585e05de8', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e80372ae38fe6bbb60cd9eb7fe7c3d26635c443', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd57ecf72e011a77aefd59f58b76033b0fb496383', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0227276dadcabef5a05fd9c68162f36c5bcd32c1', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66d0aaded9b196277f60a3f93e6321a68691463a', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '735e0b7fdbe3a118aaf1d4477b0371405a43dcd1', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ba50fa744ac56a04c0fa45c2f265693167c8086', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a641acda24da19c0b3ffc39d304dec39a0608394', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '960d204bbd34824a8e98ca175d72808bce8d070f', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '335e5e00ca48a77ca2cc729d74073fa34c639baa', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b1f9b829864355901e7ed7c7f093498b80e4648', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b40de1181b1fe306ad81c9af9c1a12be501ab61b', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7a6fae88c4311ca72264ab457fd17869d75879a', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ea1010e639b097453590082c0eed77506a327c5', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18b05f40529eadc27b8913adaac929781c6467fd', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26d800e32412c51ead503357f110dce52c7278a4', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '962afb284f2afd8f5da55e26f0ecc212bf3e8b3d', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0aef522880207b93bd16c13d4e5f1c99f5d8cc60', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '890f675a64fcfa35d18782f6f1d9cb227c982bd4', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cd67425ec95f65be0c6b8d8f593f018d84928de', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4251530dccd0f7d23066ac6d063705f7ddfda993', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53fa012ff7bda7d7d4a99894c78ad16076fd4265', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56ffbeac65ab344a85c6ddd677aefe1a7638c3a1', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f297714d12133e0da5d9d70d7eed5670f0740eb', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc232c32aecb15b69fae8d64ecab399d46a59b47', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f89974cbfff98564d96ab8f5c2d348698db360ad', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e4d8b22820c63ce04f62803c75b8dc5eb2e2a0f', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18523c8a2b28e9206424d78cd2b8235be839ba6b', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35e842330e296ca8aa5eea26ff9e4e2696ad607e', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22d82e53a816051b32e8b135760707b55ddb33b7', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1f4a19dd47aea19efa075208f04bfde70e50f91', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ba1919788af153e097acc2858bbf5748ba5b06e', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1874a34056d431d6152366df13dbfbc22a9000a6', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5b984a666f10a3453a4a47d5aae322f745e24a1', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2a221b86cdcfb094ca53242af5004cbeb6b4009', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '933c6089243a0464b1a5898d4e369d34913a7f1a', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b938ab99565c9e5e4c2b3e4a11c1c6882d19eb71', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '982a25bd1bc6c7dfc50de90011da596a6e79a34f', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00289fd68fd32d55f7fd9f12489b8271592f32c6', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94c592c1001e8f5b648618706e28337019aa44cd', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06bcd270981a9cfafba4de3cdf69402dbd124567', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb11bd6a75aeb1e135dafa027ce21c4c6d784343', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3740f8db2d88bda0d27eded73860bbaf290cb9c8', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f0fcf8b86c2fcd42e01ffe1f70469600adfe143', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '891d33e43012cf2c8af65a8acc49c9f5e56cd9d7', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5fc2e50126c263113db5d17917c0b918c1d739c', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b40306950b815965bab20a6383e9a17387c6136d', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f67acdabc29274331e5080cbfc4154bbf81584d9', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '493359e07cae22c2238cacdb3731dfd165983689', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81b8b3e16d63d323be206fed34f9df9abe8547a7', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffdbdbd70a74a91d427decdf2f1f87dc9332b1ca', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d8c7dfccc70775576576469a9aa77b85f3204f2', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '899686c43a22c8f737590c5b2e3f685762be9dac', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4d37b0edf8ca1e3315c10783cdbf68cb0c28f38', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e204e72d99203d9d4007b90e2c525f0432b5b9e5', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1d60629053e14832644163034037b8b2e6cfdc8', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad8b679bb59e707255e3b79ff792195c4bfbb8e3', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97dacc92355a16038b345c6e7240819f71b41662', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33e5178b5bd81673d7c4ed100aee1ee046ac2802', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c622cf5aaf033387c30d3b7fe79dd87e7f01d07', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e5066b3597c6dab950d4bd8e943b4dee7047ca7', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f38101595fe7be5f9352d0abd33f5b71e10da95', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6355e83cc954101aefae71a870ef76795177b1ba', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7b0a9801a60ae11141c9f7d7384af617c12ca60', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b329a4808e94995792e60fa3439b84e45adf711a', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d029e6b9b94c9d681e7141bd61389a0ca61b84c', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b7fe2e08f7a13f67035d40e7c107fc15bb23deb', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49608b783980ab2109624b908efa63aad49f96b7', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fa61e7b19c0548f2efceb348c956d2d610c791e', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba6f0c5f2737756a3cd5b14f27e572ff61d5e45b', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42825a76606d429bc442f0ec5a9df6d24405d4ea', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9b536fe5b5cb83645fd1b13250e57c7b8ccd72b', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e53d6df4ce05ea7db45b54fe5405f99b314e581', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7db30f46e22a00a20fdf96743b8243d3b9aa73b', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '057ce66342fdbc952227eacc4e5423cb16628eba', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd14a9a0992630c802d51557aaad1b71c595db65', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b065c78ddf1b2b1fdcd87cb41be1b811d8a0f563', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9599ba15098d839f2c13101535850555f6d42069', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29154a2ccae6af9700e798386d6ce1485db47942', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34816190d2bf2ddc80a6823fedf194467fe55f86', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f3e2568f95db02cec63c1b9265d57ba7d5aa4d7', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12ff6c32efebb268dd3ee3e9a12875a6f35e82cf', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cb9aa0805bfde0396ab5300430f4d16c2da70cd', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af014a2fc8792b38d4490bd6953629edffd8f4c5', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '322a610c8cb817a264955105a504631164fd41ab', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e39f3b0a4a83c4cf57a5620e93b2c5582290cff0', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b71693511120c4f52f1260eeff83b59c49177b7', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dc63f6ec76dd31a9f55b10a79b7c9cd61334bfb', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f89844ad47968aecbb475ab7362311fefd08a5b', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f14af63a9952593b0d0a766f001b996db2c94da6', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e531c537ab146c1ba833d543463204d7e360168', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0adc67890b0b598bf7173a3869dc5e167b732d50', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e5e57e8ad158eaa741bef2cfae1d80ef2f51666', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9b3491694849d8775d2f9dc5bd9185fa5e29ccc', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14c6ab3eadbbcfbcd1612fc518eebd51750eb8dd', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc297a6d9bef2f11e02876ef2228b173edec5515', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3703b2850652998b124b65d6e3dba406c0b0105c', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '815816c10acfc083acf7ee68f257a616a20908c2', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8186df6b638e4dfeb880abef49466846e974a530', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af0f329d72f9be3e5ac6af27bc02c26d816c0788', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12afd59a1cf3dbba1cc587421c6ed7ac9a37c787', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f768bf5b14adc5cd8f84d2ea5b467a9fcdde98db', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc7e1ba3a3c234da090c810653b9d354d7c15426', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f90416bff3d8cc420193f39ff33615ce15fc30e3', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22772daa08fda263cdd49e14ce0cd1e2c236bc55', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3582d7ed944c8a7084f4a5726d1ecc471b9e3765', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5f215fbddbd2f249a75bccf45e5782418733ed9', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fb5aa1a084a055d5e208b45cfb49f79457e8095', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bd78b9b2a47c314ae639c8c343812a295762754', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd510af0c781bf7d98893f037b24151746493df01', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57445a4dbbfd87577045cf17f78371393ba11306', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0111356188daa866a9e25afc3cfe6df374520d86', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4c8e68fc665a0bdbc9bbf71bb8bea6088e56f68', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ed15a2f90e825aa6ad5768a49e4557983b6d07c', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81baa69880378dfdda963e9b11b17463eda1bdbb', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '826e83561279c5589d9b2edc2528972d972af322', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '969e7cedf2d504ffbf9d7a0a2397f023b620511b', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3eb605afa20e2c4de96b2972eac8f4fab54248fd', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11a4a7f4123504f89d0aac36f8359687238d2516', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cdb8641a01b7c8296f21f54afd70ae52c0df3d4', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '756621c6feb8643514d52c756e93d0436e04216f', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec1b73dd81a0db2cd1419397ed45369464ec3b16', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '118a2f516809e8c30898113706b3c93e8382d9f2', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67dcf1474cc5f4a2579d6b425762b819f3f34bc0', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d1c509de351680b5dfcae974c0ceb69a5912548', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '240ea4b6f8b26bc625891b9967b3fdc1a00d78f0', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1b349a282864608a7b25448d33257753cddc845', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '694f32b094f0a4f800a7f16feb25b90ccb7c3461', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95f9e3fa21a43b26a4601f52fcc35d00d14425df', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43b5e1dd05d20547a1e582058776d3c98bee5013', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa6d5e99d648b9489c64d767e549ffed724f9724', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09e51fde0c38b939e411e56ec9cc6a076245fd9d', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '894d4ad9927d17eb856a6f1fb4454b16714b829b', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ddd12f4acc456c983ce4ef2ff0209c432678d33', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '135d6bf258c10dcc678adbf045cdbdc431405cae', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59f5741b778769b7fc1b9a4cd87f368f7f362b04', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d985a6e5e318dfe28a7ed2a940f75b47525932b', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acdf392b57c54a2ef7d8f2800319c526a001de3b', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f134d4ac781381765ad54726d16551bf3a7eafd6', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed604a654d5fb0064462c0665825fb9a5bdf4e88', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26fee58d45713f93f6711827636a97b851ad51aa', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd552770d2ecdb76486136295052bfd0fb8c55da2', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66cc33a6ac6090f6b130f87298b4e4a038a0c211', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e85f6882b24b7de0a83dc6ade73b19cf44e3598', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5eaf609a3a3b58afbb75b05d1293607a8199a09e', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e2db24a73749499de58b91b0c09251325fb34ed', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b67d6cae7fa2ad629a96d0b97b992e27eb8e015', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac08a64f5c5ec67c553f53a4aec734a01a050f81', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '898663bff3dbe13a43d11cdd85a1988a1f37899c', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7628334fafbe8238a32ac48e47df89262261c2a8', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad2a4111ca3133033a948a5e17f19712c5eedfc8', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b510b6bd682f02e3b5b9dce37739a01235d56d33', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8191ac5f940a2877d8402309df3a88e66b265f28', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bfed978e85ec90d39ddf305cf1794adaedb92e3', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d44761e986e30f8fbab82024fddcb6a118aa71b', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52f0887e5feae3bdc49e48ad49c2c8d840fc06d1', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c04a11ea34c8d70c9edf758c078b815855b534e9', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '712a76330c3ec619c37c7b2eae1aac2e46b768d0', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96a9c25c12171d640b807fd68b002d7722290f8a', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd67330c7a0c87f9b3c7c6e07ca08f6d40b1f2bf2', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '422a99430df24c594be28ac8c046379f95105856', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34600e46aeeec8d20dbe040d89e38e8a5b6518d4', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f0fc13b9cb4871ceb0495800df4e5ab231a501f', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f1e5c68d29ae5d30703268149808bf442f13d30', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b41bc58e2770f224e67a1259c953254e0de0ec93', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7278d6c70e66dcdec79cd78440891c8b91d0eed', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76cb697db3f760a7b2929c44268e47bf9a238174', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bb0d1bc770fbe6fde5e62ea6570692445136ed1', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '765a63e7faa4f7e9288bf7bed4d8d5e9a97b8c45', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91e323d88eace841f34a92c719a2bc3477cd1bab', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19029efcebdf0b6c540513a069285c7b31e250c7', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f27231e38c16da4a46b31215b2042e43e078a821', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ba2697c88b6cf9118d6cad1d12d0ec044cb2585', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c47730e38d57a891fe42bb2fdbc666f77e580dea', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5aaa66119f9918ed3a6d0db79d850627189560e', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f2b359aedda469b8a97f09ad73122cc7047d13b', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9030d9ccc76e2b5b9c412c902d7bdd9d950bc3f1', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '196b0257f1d060e0cee77ff31961e924192fbbc8', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cfc675069ae0b4f70348b3b138530a27beb2187', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7567140348aa8a1d07f3dc5ce4189de436190825', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f807308f88d21d40646f8dc322145b6210eb8e7', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7c8804e2da7d962bd4b19e8f5042cbf35134011', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6885fc0894435ea7417214b64c339808f5df2338', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '296292da0572e93cd10103eb041dba6d0bbb97fd', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2d1314792250afbdbb5d7d3cdaaa517c5892ea9', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '439bf1e86302d2c803920a67479e1b0ae4b9566d', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ebc1f0dd3229617d379c3c9ba88356bc3435567', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9cf6552530924e9e6cc151d4b0eab44853a1e31', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '484abfa714462d31a6921856a72b7b593334345e', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f081a10390991295d6a3a6609e7f9ab7808f2e74', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f91589d2177875aeb84db2320c5bc28f6241f392', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23b9c5ffc3704942f97f0e0fd2b63950fe1840b4', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cae82738d816eecb5ef37744464292a2b4268aea', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '879d41e66a851c197b9294c9b93ee25040941916', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6496444d820bd627c74398493d568c65dcbde946', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93df809ee58b3bd17eee0564062ddf3b57126110', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98282344528b4a0a3c295373a62f28bc2141a90f', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93356ed0c4ee585f385cd1c65151b05119e5b277', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7507c788bd5f5af5ad0cc58f133809f6f55d97f', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9d79e7d73438ee295a05b7792a8ea1dcf62e00b', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2dd08dfeec97869679b6c005c683652f8a91a084', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82b98bd94bcda22f0ba3b3a1ed71ee6ad5f6601c', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a33fdf82bc57fbb659a117886a80a79e2e147d5e', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81fa60b52704106e102515fc22b16a26fc11d2bd', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a471726d24c9f726c40a68d399b5623fb7460ca8', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10961ae9fe299b2dd72ec6203e678d58cc19d0bb', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '281286c24d971cf4eeb252136e3ef636f2b2d69a', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a504220a89f755a5eaf60e7dec711b3635f2d5bd', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b5ce7950fcbd2a12d8d00de701c947216d656d1', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd30437eaeb3822510581490f93a1788d5c8c547', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee1edf63b21ecda0c81fb346bfbf4041e398f862', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bf6f18a73b693176d071a932191a5d23eb9706d', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be275a4773ca853cbde2c64d07aaae1716ce5068', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bca455539dbda4f62a5f74dd49bf24e0e76efe65', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73432fc89bf33c8fff897f6e2de427dbfa73bdef', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef64eafb34e8888afe513b9c718d655fc41e622a', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbd965d7eddcef521dbfd1dfca9946f85a532d65', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c17c2f99191492ae964c745660f6a31b84d633d', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44f8209969de34b7182f213261f698152f05def4', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76c60f41d9b7fd6ac7b061e1320ce72e23d5f36e', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adc4a21754be2d1bf2b66ef2d3ca6c10e7e33f86', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7011ea8659c46c3c56a90bdc11665ae8a1d7fd43', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Nanda H Krishna,33784207,me@nandahkrishna.com,User,,68,,54,148

































































































































































































































































































Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
53238813,brew,Homebrew/brew,Ruby,9497,40528,713,1201,41453,58,14,13,"[{'id': 1969792016, 'number': 17760, 'closed': datetime.datetime(2024, 7, 17, 19, 23, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 15, 16, 24, 7, tzinfo=datetime.timezone.utc), 'time_taken': 183550.0, 'time_delta': '2 days, 2:59:10', 'additions': 56, 'deletions': 40, 'state': 'closed'}, {'id': 1968560714, 'number': 17748, 'closed': datetime.datetime(2024, 7, 15, 19, 55, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 15, 3, 16, 12, tzinfo=datetime.timezone.utc), 'time_taken': 59955.0, 'time_delta': '16:39:15', 'additions': 22, 'deletions': 14, 'state': 'closed'}, {'id': 1968323894, 'number': 17727, 'closed': datetime.datetime(2024, 7, 15, 0, 8, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 14, 16, 10, 40, tzinfo=datetime.timezone.utc), 'time_taken': 28670.0, 'time_delta': '7:57:50', 'additions': 47, 'deletions': 2, 'state': 'closed'}, {'id': 1967999645, 'number': 17703, 'closed': datetime.datetime(2024, 8, 12, 14, 45, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 13, 19, 11, 33, tzinfo=datetime.timezone.utc), 'time_taken': 2576062.0, 'time_delta': '29 days, 19:34:22', 'additions': 14, 'deletions': 4, 'state': 'closed'}, {'id': 1297310931, 'number': 15110, 'closed': datetime.datetime(2023, 3, 31, 8, 5, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 31, 7, 46, 4, tzinfo=datetime.timezone.utc), 'time_taken': 1144.0, 'time_delta': '0:19:04', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 1281315948, 'number': 15005, 'closed': datetime.datetime(2023, 3, 18, 20, 58, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 18, 20, 41, 16, tzinfo=datetime.timezone.utc), 'time_taken': 1053.0, 'time_delta': '0:17:33', 'additions': 1, 'deletions': 5, 'state': 'closed'}, {'id': 1281108200, 'number': 15002, 'closed': datetime.datetime(2023, 3, 18, 19, 31, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 18, 14, 50, 32, tzinfo=datetime.timezone.utc), 'time_taken': 16841.0, 'time_delta': '4:40:41', 'additions': 23, 'deletions': 0, 'state': 'closed'}, {'id': 1261240275, 'number': 14870, 'closed': datetime.datetime(2023, 3, 7, 19, 26, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 2, 23, 22, 31, tzinfo=datetime.timezone.utc), 'time_taken': 417856.0, 'time_delta': '4 days, 20:04:16', 'additions': 15, 'deletions': 12, 'state': 'closed'}, {'id': 1173495527, 'number': 14278, 'closed': datetime.datetime(2022, 12, 21, 11, 0, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 21, 10, 34, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1552.0, 'time_delta': '0:25:52', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1170216126, 'number': 14262, 'closed': datetime.datetime(2022, 12, 20, 6, 2, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 19, 5, 21, 52, tzinfo=datetime.timezone.utc), 'time_taken': 88845.0, 'time_delta': '1 day, 0:40:45', 'additions': 30, 'deletions': 10, 'state': 'closed'}, {'id': 919931808, 'number': 13204, 'closed': datetime.datetime(2022, 4, 26, 22, 57, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 26, 22, 20, 45, tzinfo=datetime.timezone.utc), 'time_taken': 2234.0, 'time_delta': '0:37:14', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 835944212, 'number': 12812, 'closed': datetime.datetime(2022, 1, 31, 11, 51, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 31, 9, 52, 9, tzinfo=datetime.timezone.utc), 'time_taken': 7177.0, 'time_delta': '1:59:37', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 833911680, 'number': 12799, 'closed': datetime.datetime(2022, 1, 27, 22, 20, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 27, 21, 53, 31, tzinfo=datetime.timezone.utc), 'time_taken': 1617.0, 'time_delta': '0:26:57', 'additions': 232, 'deletions': 171, 'state': 'closed'}, {'id': 828036817, 'number': 12766, 'closed': datetime.datetime(2022, 1, 21, 18, 30, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 21, 0, 26, 16, tzinfo=datetime.timezone.utc), 'time_taken': 65027.0, 'time_delta': '18:03:47', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 823762463, 'number': 12729, 'closed': datetime.datetime(2022, 1, 15, 22, 54, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 15, 22, 31, 43, tzinfo=datetime.timezone.utc), 'time_taken': 1344.0, 'time_delta': '0:22:24', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 690114548, 'number': 11720, 'closed': datetime.datetime(2021, 8, 12, 14, 22, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 14, 18, 0, 14, tzinfo=datetime.timezone.utc), 'time_taken': 2492528.0, 'time_delta': '28 days, 20:22:08', 'additions': 21, 'deletions': 1, 'state': 'closed'}, {'id': 690064930, 'number': 11719, 'closed': datetime.datetime(2021, 7, 15, 18, 2, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 14, 16, 38, 44, tzinfo=datetime.timezone.utc), 'time_taken': 91411.0, 'time_delta': '1 day, 1:23:31', 'additions': 70, 'deletions': 5, 'state': 'closed'}, {'id': 684412990, 'number': 11661, 'closed': datetime.datetime(2021, 7, 9, 12, 20, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 14, 10, 21, tzinfo=datetime.timezone.utc), 'time_taken': 252611.0, 'time_delta': '2 days, 22:10:11', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 673301583, 'number': 11560, 'closed': datetime.datetime(2021, 6, 18, 9, 48, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 18, 9, 7, 15, tzinfo=datetime.timezone.utc), 'time_taken': 2446.0, 'time_delta': '0:40:46', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 669518693, 'number': 11532, 'closed': datetime.datetime(2021, 6, 15, 12, 27, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 14, 12, 21, tzinfo=datetime.timezone.utc), 'time_taken': 86774.0, 'time_delta': '1 day, 0:06:14', 'additions': 25, 'deletions': 4, 'state': 'closed'}, {'id': 668291251, 'number': 11528, 'closed': datetime.datetime(2021, 11, 18, 18, 59, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 15, 48, 56, tzinfo=datetime.timezone.utc), 'time_taken': 13835420.0, 'time_delta': '160 days, 3:10:20', 'additions': 3, 'deletions': 5, 'state': 'closed'}, {'id': 663400509, 'number': 11497, 'closed': datetime.datetime(2021, 6, 8, 12, 3, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 7, 9, 48, 52, tzinfo=datetime.timezone.utc), 'time_taken': 94470.0, 'time_delta': '1 day, 2:14:30', 'additions': 5, 'deletions': 30, 'state': 'closed'}, {'id': 660323544, 'number': 11483, 'closed': datetime.datetime(2021, 6, 3, 8, 16, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 2, 19, 5, 56, tzinfo=datetime.timezone.utc), 'time_taken': 47450.0, 'time_delta': '13:10:50', 'additions': 11, 'deletions': 0, 'state': 'closed'}, {'id': 658241047, 'number': 11468, 'closed': datetime.datetime(2021, 6, 11, 15, 51, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 31, 11, 30, 9, tzinfo=datetime.timezone.utc), 'time_taken': 966088.0, 'time_delta': '11 days, 4:21:28', 'additions': 8, 'deletions': 3, 'state': 'closed'}, {'id': 657751490, 'number': 11457, 'closed': datetime.datetime(2021, 6, 1, 0, 22, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 30, 16, 57, 21, tzinfo=datetime.timezone.utc), 'time_taken': 113085.0, 'time_delta': '1 day, 7:24:45', 'additions': 26, 'deletions': 14, 'state': 'closed'}, {'id': 650529177, 'number': 11424, 'closed': datetime.datetime(2021, 5, 22, 0, 59, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 22, 0, 29, 48, tzinfo=datetime.timezone.utc), 'time_taken': 1787.0, 'time_delta': '0:29:47', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 648971670, 'number': 11420, 'closed': datetime.datetime(2021, 5, 21, 14, 56, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 20, 14, 36, 35, tzinfo=datetime.timezone.utc), 'time_taken': 87597.0, 'time_delta': '1 day, 0:19:57', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 645192445, 'number': 11388, 'closed': datetime.datetime(2021, 5, 15, 18, 10, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 15, 17, 50, 23, tzinfo=datetime.timezone.utc), 'time_taken': 1201.0, 'time_delta': '0:20:01', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 636177504, 'number': 11355, 'closed': datetime.datetime(2021, 5, 10, 13, 24, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 9, 18, 42, 4, tzinfo=datetime.timezone.utc), 'time_taken': 67344.0, 'time_delta': '18:42:24', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 635814146, 'number': 11353, 'closed': datetime.datetime(2021, 5, 10, 13, 22, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 9, 12, 39, 57, tzinfo=datetime.timezone.utc), 'time_taken': 88968.0, 'time_delta': '1 day, 0:42:48', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 630017351, 'number': 11319, 'closed': datetime.datetime(2021, 5, 5, 9, 2, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 4, 18, 46, 46, tzinfo=datetime.timezone.utc), 'time_taken': 51362.0, 'time_delta': '14:16:02', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 629182004, 'number': 11308, 'closed': datetime.datetime(2021, 5, 4, 17, 32, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 3, 15, 27, 17, tzinfo=datetime.timezone.utc), 'time_taken': 93922.0, 'time_delta': '1 day, 2:05:22', 'additions': 349, 'deletions': 260, 'state': 'closed'}, {'id': 617065405, 'number': 11170, 'closed': datetime.datetime(2021, 4, 19, 13, 2, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 16, 19, 23, 6, tzinfo=datetime.timezone.utc), 'time_taken': 236384.0, 'time_delta': '2 days, 17:39:44', 'additions': 3, 'deletions': 11, 'state': 'closed'}, {'id': 613955078, 'number': 11122, 'closed': datetime.datetime(2021, 4, 13, 11, 47, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 12, 21, 15, 4, tzinfo=datetime.timezone.utc), 'time_taken': 52340.0, 'time_delta': '14:32:20', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 612693788, 'number': 11097, 'closed': datetime.datetime(2021, 4, 9, 20, 27, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 9, 19, 49, 11, tzinfo=datetime.timezone.utc), 'time_taken': 2305.0, 'time_delta': '0:38:25', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 612603259, 'number': 11095, 'closed': datetime.datetime(2021, 4, 9, 18, 1, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 9, 17, 5, 45, tzinfo=datetime.timezone.utc), 'time_taken': 3369.0, 'time_delta': '0:56:09', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 612570101, 'number': 11094, 'closed': datetime.datetime(2021, 4, 9, 16, 27, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 9, 16, 5, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1335.0, 'time_delta': '0:22:15', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 610698661, 'number': 11055, 'closed': datetime.datetime(2021, 4, 7, 14, 32, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 7, 14, 7, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1548.0, 'time_delta': '0:25:48', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 607945132, 'number': 11003, 'closed': datetime.datetime(2021, 4, 5, 12, 2, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 2, 9, 48, 37, tzinfo=datetime.timezone.utc), 'time_taken': 267258.0, 'time_delta': '3 days, 2:14:18', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 607774177, 'number': 10995, 'closed': datetime.datetime(2021, 4, 2, 11, 24, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 2, 2, 34, 24, tzinfo=datetime.timezone.utc), 'time_taken': 31824.0, 'time_delta': '8:50:24', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 607330536, 'number': 10987, 'closed': datetime.datetime(2021, 4, 1, 17, 12, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 1, 11, 32, 52, tzinfo=datetime.timezone.utc), 'time_taken': 20373.0, 'time_delta': '5:39:33', 'additions': 41, 'deletions': 2, 'state': 'closed'}, {'id': 602689228, 'number': 10962, 'closed': datetime.datetime(2021, 3, 29, 12, 12, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 29, 11, 37, 29, tzinfo=datetime.timezone.utc), 'time_taken': 2102.0, 'time_delta': '0:35:02', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 602549609, 'number': 10961, 'closed': datetime.datetime(2021, 3, 29, 9, 23, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 29, 8, 32, 8, tzinfo=datetime.timezone.utc), 'time_taken': 3086.0, 'time_delta': '0:51:26', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 600981951, 'number': 10936, 'closed': datetime.datetime(2021, 3, 26, 21, 2, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 25, 18, 51, 39, tzinfo=datetime.timezone.utc), 'time_taken': 94253.0, 'time_delta': '1 day, 2:10:53', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 600034870, 'number': 10928, 'closed': datetime.datetime(2021, 3, 26, 6, 52, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 24, 20, 5, 4, tzinfo=datetime.timezone.utc), 'time_taken': 125230.0, 'time_delta': '1 day, 10:47:10', 'additions': 25, 'deletions': 0, 'state': 'closed'}, {'id': 594228836, 'number': 10867, 'closed': datetime.datetime(2021, 3, 22, 12, 11, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 16, 20, 51, 52, tzinfo=datetime.timezone.utc), 'time_taken': 487191.0, 'time_delta': '5 days, 15:19:51', 'additions': 145, 'deletions': 0, 'state': 'closed'}, {'id': 593071046, 'number': 10856, 'closed': datetime.datetime(2021, 3, 17, 11, 24, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 15, 13, 23, 9, tzinfo=datetime.timezone.utc), 'time_taken': 165674.0, 'time_delta': '1 day, 22:01:14', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 592419430, 'number': 10845, 'closed': datetime.datetime(2021, 3, 17, 5, 25, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 13, 20, 15, 57, tzinfo=datetime.timezone.utc), 'time_taken': 292163.0, 'time_delta': '3 days, 9:09:23', 'additions': 290, 'deletions': 162, 'state': 'closed'}, {'id': 590964465, 'number': 10831, 'closed': datetime.datetime(2021, 3, 12, 14, 40, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 11, 15, 43, 18, tzinfo=datetime.timezone.utc), 'time_taken': 82640.0, 'time_delta': '22:57:20', 'additions': 55, 'deletions': 1, 'state': 'closed'}, {'id': 590712091, 'number': 10829, 'closed': datetime.datetime(2021, 3, 12, 12, 12, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 11, 9, 33, 46, tzinfo=datetime.timezone.utc), 'time_taken': 95951.0, 'time_delta': '1 day, 2:39:11', 'additions': 11, 'deletions': 5, 'state': 'closed'}, {'id': 584556182, 'number': 10777, 'closed': datetime.datetime(2021, 3, 5, 11, 45, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 4, 7, 12, 38, tzinfo=datetime.timezone.utc), 'time_taken': 102757.0, 'time_delta': '1 day, 4:32:37', 'additions': 48, 'deletions': 68, 'state': 'closed'}, {'id': 581353109, 'number': 10725, 'closed': datetime.datetime(2021, 3, 2, 0, 12, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 27, 15, 32, 51, tzinfo=datetime.timezone.utc), 'time_taken': 203968.0, 'time_delta': '2 days, 8:39:28', 'additions': 2, 'deletions': 3, 'state': 'closed'}, {'id': 580202734, 'number': 10707, 'closed': datetime.datetime(2021, 2, 26, 18, 6, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 25, 15, 50, 49, tzinfo=datetime.timezone.utc), 'time_taken': 94531.0, 'time_delta': '1 day, 2:15:31', 'additions': 10, 'deletions': 14, 'state': 'closed'}, {'id': 577910794, 'number': 10673, 'closed': datetime.datetime(2021, 2, 26, 12, 30, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 22, 20, 15, 25, tzinfo=datetime.timezone.utc), 'time_taken': 317701.0, 'time_delta': '3 days, 16:15:01', 'additions': 9, 'deletions': 4, 'state': 'closed'}, {'id': 575563606, 'number': 10651, 'closed': datetime.datetime(2021, 3, 15, 11, 37, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 18, 10, 19, 6, tzinfo=datetime.timezone.utc), 'time_taken': 2164708.0, 'time_delta': '25 days, 1:18:28', 'additions': 126, 'deletions': 61, 'state': 'closed'}, {'id': 575455822, 'number': 10650, 'closed': datetime.datetime(2021, 2, 20, 15, 16, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 18, 7, 13, 24, tzinfo=datetime.timezone.utc), 'time_taken': 201764.0, 'time_delta': '2 days, 8:02:44', 'additions': 75, 'deletions': 0, 'state': 'closed'}, {'id': 574435762, 'number': 10636, 'closed': datetime.datetime(2021, 2, 17, 21, 5, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 16, 19, 50, 54, tzinfo=datetime.timezone.utc), 'time_taken': 90878.0, 'time_delta': '1 day, 1:14:38', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 574408441, 'number': 10635, 'closed': datetime.datetime(2021, 2, 17, 21, 5, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 16, 18, 57, 31, tzinfo=datetime.timezone.utc), 'time_taken': 94084.0, 'time_delta': '1 day, 2:08:04', 'additions': 149, 'deletions': 55, 'state': 'closed'}, {'id': 573698889, 'number': 10626, 'closed': datetime.datetime(2021, 2, 17, 19, 50, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 15, 17, 15, 1, tzinfo=datetime.timezone.utc), 'time_taken': 182101.0, 'time_delta': '2 days, 2:35:01', 'additions': 391, 'deletions': 368, 'state': 'closed'}, {'id': 572505129, 'number': 10608, 'closed': datetime.datetime(2021, 2, 15, 13, 13, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 12, 13, 5, 57, tzinfo=datetime.timezone.utc), 'time_taken': 259677.0, 'time_delta': '3 days, 0:07:57', 'additions': 91, 'deletions': 95, 'state': 'closed'}, {'id': 572198815, 'number': 10601, 'closed': datetime.datetime(2021, 2, 15, 3, 6, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 12, 0, 17, 27, tzinfo=datetime.timezone.utc), 'time_taken': 269326.0, 'time_delta': '3 days, 2:48:46', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 569933181, 'number': 10575, 'closed': datetime.datetime(2021, 2, 12, 10, 55, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 9, 1, 23, 57, tzinfo=datetime.timezone.utc), 'time_taken': 293501.0, 'time_delta': '3 days, 9:31:41', 'additions': 281, 'deletions': 199, 'state': 'closed'}, {'id': 567594645, 'number': 10518, 'closed': datetime.datetime(2021, 2, 8, 18, 31, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 4, 12, 38, 14, tzinfo=datetime.timezone.utc), 'time_taken': 366785.0, 'time_delta': '4 days, 5:53:05', 'additions': 170, 'deletions': 5, 'state': 'closed'}, {'id': 566619871, 'number': 10497, 'closed': datetime.datetime(2021, 2, 3, 8, 53, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 3, 7, 50, 41, tzinfo=datetime.timezone.utc), 'time_taken': 3797.0, 'time_delta': '1:03:17', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 566244058, 'number': 10490, 'closed': datetime.datetime(2021, 2, 3, 8, 58, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 2, 19, 56, 55, tzinfo=datetime.timezone.utc), 'time_taken': 46899.0, 'time_delta': '13:01:39', 'additions': 4, 'deletions': 6, 'state': 'closed'}, {'id': 561022900, 'number': 10417, 'closed': datetime.datetime(2021, 1, 26, 13, 28, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 25, 11, 49, 27, tzinfo=datetime.timezone.utc), 'time_taken': 92357.0, 'time_delta': '1 day, 1:39:17', 'additions': 27, 'deletions': 21, 'state': 'closed'}, {'id': 552460057, 'number': 10285, 'closed': datetime.datetime(2021, 1, 25, 9, 59, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 11, 3, 25, 41, tzinfo=datetime.timezone.utc), 'time_taken': 1233248.0, 'time_delta': '14 days, 6:34:08', 'additions': 126, 'deletions': 204, 'state': 'closed'}, {'id': 531000011, 'number': 9381, 'closed': datetime.datetime(2020, 12, 7, 12, 14, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 2, 12, 59, 20, tzinfo=datetime.timezone.utc), 'time_taken': 429330.0, 'time_delta': '4 days, 23:15:30', 'additions': 134, 'deletions': 9, 'state': 'closed'}, {'id': 483530778, 'number': 8680, 'closed': datetime.datetime(2020, 10, 5, 8, 56, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 10, 8, 25, 25, tzinfo=datetime.timezone.utc), 'time_taken': 2161847.0, 'time_delta': '25 days, 0:30:47', 'additions': 25, 'deletions': 10, 'state': 'closed'}, {'id': 481705105, 'number': 8643, 'closed': datetime.datetime(2020, 9, 17, 14, 39, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 8, 0, 50, 20, tzinfo=datetime.timezone.utc), 'time_taken': 827330.0, 'time_delta': '9 days, 13:48:50', 'additions': 523, 'deletions': 0, 'state': 'closed'}, {'id': 480553048, 'number': 8624, 'closed': datetime.datetime(2020, 9, 17, 14, 18, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 5, 17, 19, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1025982.0, 'time_delta': '11 days, 20:59:42', 'additions': 30, 'deletions': 14, 'state': 'closed'}, {'id': 478117814, 'number': 8577, 'closed': datetime.datetime(2020, 9, 18, 2, 1, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 2, 19, 30, 40, tzinfo=datetime.timezone.utc), 'time_taken': 1319464.0, 'time_delta': '15 days, 6:31:04', 'additions': 1304, 'deletions': 37, 'state': 'closed'}, {'id': 476226250, 'number': 8544, 'closed': datetime.datetime(2020, 8, 31, 11, 33, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 31, 11, 9, 59, tzinfo=datetime.timezone.utc), 'time_taken': 1412.0, 'time_delta': '0:23:32', 'additions': 0, 'deletions': 12, 'state': 'closed'}, {'id': 464925116, 'number': 8255, 'closed': datetime.datetime(2020, 8, 27, 15, 12, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 8, 1, 48, 59, tzinfo=datetime.timezone.utc), 'time_taken': 1689819.0, 'time_delta': '19 days, 13:23:39', 'additions': 1217, 'deletions': 0, 'state': 'closed'}, {'id': 464924174, 'number': 8254, 'closed': datetime.datetime(2020, 8, 31, 7, 9, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 8, 1, 44, 7, tzinfo=datetime.timezone.utc), 'time_taken': 2006752.0, 'time_delta': '23 days, 5:25:52', 'additions': 593, 'deletions': 0, 'state': 'closed'}, {'id': 461384347, 'number': 8180, 'closed': datetime.datetime(2020, 8, 31, 12, 5, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 1, 20, 10, 1, tzinfo=datetime.timezone.utc), 'time_taken': 2562950.0, 'time_delta': '29 days, 15:55:50', 'additions': 211, 'deletions': 0, 'state': 'closed'}, {'id': 434960802, 'number': 7748, 'closed': datetime.datetime(2020, 6, 17, 4, 31, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 16, 4, 8, 58, tzinfo=datetime.timezone.utc), 'time_taken': 87744.0, 'time_delta': '1 day, 0:22:24', 'additions': 29, 'deletions': 0, 'state': 'closed'}, {'id': 425778470, 'number': 7671, 'closed': datetime.datetime(2020, 6, 1, 8, 39, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 1, 6, 17, 38, tzinfo=datetime.timezone.utc), 'time_taken': 8537.0, 'time_delta': '2:22:17', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 425515112, 'number': 7668, 'closed': datetime.datetime(2020, 5, 31, 12, 2, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 30, 20, 6, 6, tzinfo=datetime.timezone.utc), 'time_taken': 57361.0, 'time_delta': '15:56:01', 'additions': 32, 'deletions': 4, 'state': 'closed'}, {'id': 421839964, 'number': 7625, 'closed': datetime.datetime(2020, 5, 25, 7, 12, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 22, 10, 22, 39, tzinfo=datetime.timezone.utc), 'time_taken': 247773.0, 'time_delta': '2 days, 20:49:33', 'additions': 11, 'deletions': 2, 'state': 'closed'}, {'id': 418580463, 'number': 7578, 'closed': datetime.datetime(2020, 5, 15, 18, 22, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 15, 13, 3, 35, tzinfo=datetime.timezone.utc), 'time_taken': 19138.0, 'time_delta': '5:18:58', 'additions': 34, 'deletions': 16, 'state': 'closed'}, {'id': 388817890, 'number': 7179, 'closed': datetime.datetime(2020, 5, 11, 7, 46, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 15, 20, 16, 2, tzinfo=datetime.timezone.utc), 'time_taken': 4879826.0, 'time_delta': '56 days, 11:30:26', 'additions': 193, 'deletions': 0, 'state': 'closed'}]"

52855516,homebrew-core,Homebrew/homebrew-core,Ruby,12263,13510,301,14227,509910,114,63,99,"[{'id': 1825775963, 'number': 169198, 'closed': datetime.datetime(2024, 4, 16, 17, 10, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 16, 16, 15, 34, tzinfo=datetime.timezone.utc), 'time_taken': 3273.0, 'time_delta': '0:54:33', 'additions': 8, 'deletions': 9, 'state': 'closed'}, {'id': 1665136362, 'number': 159003, 'closed': datetime.datetime(2024, 1, 4, 19, 11, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 4, 18, 36, 43, tzinfo=datetime.timezone.utc), 'time_taken': 2069.0, 'time_delta': '0:34:29', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 1476727887, 'number': 139653, 'closed': datetime.datetime(2023, 8, 16, 3, 51, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 16, 2, 3, 51, tzinfo=datetime.timezone.utc), 'time_taken': 6457.0, 'time_delta': '1:47:37', 'additions': 15, 'deletions': 7, 'state': 'closed'}, {'id': 1440476543, 'number': 136993, 'closed': datetime.datetime(2023, 7, 19, 8, 32, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 19, 7, 22, 58, tzinfo=datetime.timezone.utc), 'time_taken': 4160.0, 'time_delta': '1:09:20', 'additions': 9, 'deletions': 10, 'state': 'closed'}, {'id': 1440472655, 'number': 136992, 'closed': datetime.datetime(2023, 7, 19, 8, 32, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 19, 7, 19, 52, tzinfo=datetime.timezone.utc), 'time_taken': 4384.0, 'time_delta': '1:13:04', 'additions': 11, 'deletions': 9, 'state': 'closed'}, {'id': 1440471179, 'number': 136991, 'closed': datetime.datetime(2023, 7, 19, 8, 32, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 19, 7, 18, 43, tzinfo=datetime.timezone.utc), 'time_taken': 4415.0, 'time_delta': '1:13:35', 'additions': 11, 'deletions': 11, 'state': 'closed'}, {'id': 1440463234, 'number': 136989, 'closed': datetime.datetime(2023, 7, 19, 8, 32, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 19, 7, 13, 5, tzinfo=datetime.timezone.utc), 'time_taken': 4753.0, 'time_delta': '1:19:13', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1440441288, 'number': 136987, 'closed': datetime.datetime(2023, 7, 19, 8, 32, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 19, 6, 58, tzinfo=datetime.timezone.utc), 'time_taken': 5658.0, 'time_delta': '1:34:18', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1440288062, 'number': 136981, 'closed': datetime.datetime(2023, 7, 19, 5, 26, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 19, 4, 24, tzinfo=datetime.timezone.utc), 'time_taken': 3756.0, 'time_delta': '1:02:36', 'additions': 17, 'deletions': 18, 'state': 'closed'}, {'id': 1440279178, 'number': 136980, 'closed': datetime.datetime(2023, 7, 19, 5, 0, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 19, 4, 9, 43, tzinfo=datetime.timezone.utc), 'time_taken': 3074.0, 'time_delta': '0:51:14', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1440278420, 'number': 136979, 'closed': datetime.datetime(2023, 7, 19, 5, 24, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 19, 4, 8, 29, tzinfo=datetime.timezone.utc), 'time_taken': 4536.0, 'time_delta': '1:15:36', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1440262557, 'number': 136976, 'closed': datetime.datetime(2023, 7, 19, 4, 6, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 19, 3, 43, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1387.0, 'time_delta': '0:23:07', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1423440071, 'number': 135986, 'closed': datetime.datetime(2023, 7, 6, 21, 51, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 20, 16, 22, tzinfo=datetime.timezone.utc), 'time_taken': 5711.0, 'time_delta': '1:35:11', 'additions': 3, 'deletions': 4, 'state': 'closed'}, {'id': 1423426305, 'number': 135985, 'closed': datetime.datetime(2023, 7, 6, 21, 50, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 20, 5, 4, tzinfo=datetime.timezone.utc), 'time_taken': 6313.0, 'time_delta': '1:45:13', 'additions': 15, 'deletions': 15, 'state': 'closed'}, {'id': 1423420247, 'number': 135984, 'closed': datetime.datetime(2023, 7, 6, 21, 51, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 20, 0, 42, tzinfo=datetime.timezone.utc), 'time_taken': 6651.0, 'time_delta': '1:50:51', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1423415106, 'number': 135983, 'closed': datetime.datetime(2023, 7, 6, 21, 51, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 19, 57, 11, tzinfo=datetime.timezone.utc), 'time_taken': 6862.0, 'time_delta': '1:54:22', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1423414374, 'number': 135982, 'closed': datetime.datetime(2023, 7, 6, 21, 50, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 19, 56, 37, tzinfo=datetime.timezone.utc), 'time_taken': 6819.0, 'time_delta': '1:53:39', 'additions': 10, 'deletions': 10, 'state': 'closed'}, {'id': 1423411808, 'number': 135981, 'closed': datetime.datetime(2023, 7, 6, 22, 4, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 19, 54, 36, tzinfo=datetime.timezone.utc), 'time_taken': 7801.0, 'time_delta': '2:10:01', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1423410923, 'number': 135980, 'closed': datetime.datetime(2023, 7, 11, 0, 2, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 19, 53, 52, tzinfo=datetime.timezone.utc), 'time_taken': 360532.0, 'time_delta': '4 days, 4:08:52', 'additions': 13, 'deletions': 3, 'state': 'closed'}, {'id': 1423404152, 'number': 135979, 'closed': datetime.datetime(2023, 7, 6, 22, 2, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 19, 48, 15, tzinfo=datetime.timezone.utc), 'time_taken': 8049.0, 'time_delta': '2:14:09', 'additions': 15, 'deletions': 16, 'state': 'closed'}, {'id': 1423401140, 'number': 135978, 'closed': datetime.datetime(2023, 7, 6, 22, 0, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 19, 45, 20, tzinfo=datetime.timezone.utc), 'time_taken': 8134.0, 'time_delta': '2:15:34', 'additions': 17, 'deletions': 19, 'state': 'closed'}, {'id': 1423394036, 'number': 135976, 'closed': datetime.datetime(2023, 7, 6, 22, 2, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 19, 40, 2, tzinfo=datetime.timezone.utc), 'time_taken': 8542.0, 'time_delta': '2:22:22', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1423375347, 'number': 135975, 'closed': datetime.datetime(2023, 7, 6, 19, 56, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 19, 22, 23, tzinfo=datetime.timezone.utc), 'time_taken': 2021.0, 'time_delta': '0:33:41', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1423371006, 'number': 135974, 'closed': datetime.datetime(2023, 7, 8, 7, 15, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 19, 17, 57, tzinfo=datetime.timezone.utc), 'time_taken': 129462.0, 'time_delta': '1 day, 11:57:42', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1423370641, 'number': 135973, 'closed': datetime.datetime(2023, 7, 6, 19, 53, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 19, 17, 35, tzinfo=datetime.timezone.utc), 'time_taken': 2127.0, 'time_delta': '0:35:27', 'additions': 9, 'deletions': 11, 'state': 'closed'}, {'id': 1423334734, 'number': 135971, 'closed': datetime.datetime(2023, 7, 6, 19, 43, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 18, 44, 44, tzinfo=datetime.timezone.utc), 'time_taken': 3553.0, 'time_delta': '0:59:13', 'additions': 18, 'deletions': 18, 'state': 'closed'}, {'id': 1423312839, 'number': 135970, 'closed': datetime.datetime(2023, 7, 6, 19, 44, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 18, 25, 7, tzinfo=datetime.timezone.utc), 'time_taken': 4782.0, 'time_delta': '1:19:42', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1423304038, 'number': 135968, 'closed': datetime.datetime(2023, 7, 6, 19, 44, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 18, 16, 51, tzinfo=datetime.timezone.utc), 'time_taken': 5278.0, 'time_delta': '1:27:58', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1423302632, 'number': 135967, 'closed': datetime.datetime(2023, 7, 6, 19, 49, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 18, 15, 36, tzinfo=datetime.timezone.utc), 'time_taken': 5663.0, 'time_delta': '1:34:23', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1421261933, 'number': 135848, 'closed': datetime.datetime(2023, 7, 5, 17, 48, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 14, 51, 36, tzinfo=datetime.timezone.utc), 'time_taken': 10621.0, 'time_delta': '2:57:01', 'additions': 21, 'deletions': 22, 'state': 'closed'}, {'id': 1420516360, 'number': 135817, 'closed': datetime.datetime(2023, 7, 5, 7, 58, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 6, 55, 24, tzinfo=datetime.timezone.utc), 'time_taken': 3792.0, 'time_delta': '1:03:12', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 1420491979, 'number': 135816, 'closed': datetime.datetime(2023, 7, 5, 12, 39, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 6, 35, 7, tzinfo=datetime.timezone.utc), 'time_taken': 21856.0, 'time_delta': '6:04:16', 'additions': 10, 'deletions': 10, 'state': 'closed'}, {'id': 1420481751, 'number': 135815, 'closed': datetime.datetime(2023, 7, 5, 16, 56, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 6, 25, 47, tzinfo=datetime.timezone.utc), 'time_taken': 37823.0, 'time_delta': '10:30:23', 'additions': 12, 'deletions': 51, 'state': 'closed'}, {'id': 1420474351, 'number': 135814, 'closed': datetime.datetime(2023, 7, 5, 7, 12, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 6, 18, 46, tzinfo=datetime.timezone.utc), 'time_taken': 3219.0, 'time_delta': '0:53:39', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1420473721, 'number': 135813, 'closed': datetime.datetime(2023, 7, 5, 7, 14, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 6, 18, 7, tzinfo=datetime.timezone.utc), 'time_taken': 3412.0, 'time_delta': '0:56:52', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1420469196, 'number': 135812, 'closed': datetime.datetime(2023, 7, 5, 7, 12, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 6, 14, 36, tzinfo=datetime.timezone.utc), 'time_taken': 3468.0, 'time_delta': '0:57:48', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1420466379, 'number': 135810, 'closed': datetime.datetime(2023, 7, 5, 7, 13, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 6, 11, 41, tzinfo=datetime.timezone.utc), 'time_taken': 3694.0, 'time_delta': '1:01:34', 'additions': 9, 'deletions': 10, 'state': 'closed'}, {'id': 1420437695, 'number': 135809, 'closed': datetime.datetime(2023, 7, 5, 6, 25, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 5, 44, 17, tzinfo=datetime.timezone.utc), 'time_taken': 2453.0, 'time_delta': '0:40:53', 'additions': 2, 'deletions': 3, 'state': 'closed'}, {'id': 1420433037, 'number': 135808, 'closed': datetime.datetime(2023, 7, 5, 7, 29, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 5, 39, 4, tzinfo=datetime.timezone.utc), 'time_taken': 6606.0, 'time_delta': '1:50:06', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1407512111, 'number': 134981, 'closed': datetime.datetime(2023, 6, 26, 10, 54, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 26, 9, 4, 15, tzinfo=datetime.timezone.utc), 'time_taken': 6623.0, 'time_delta': '1:50:23', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1407511512, 'number': 134980, 'closed': datetime.datetime(2023, 6, 26, 10, 54, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 26, 9, 3, 57, tzinfo=datetime.timezone.utc), 'time_taken': 6640.0, 'time_delta': '1:50:40', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1407436199, 'number': 134979, 'closed': datetime.datetime(2023, 6, 26, 10, 55, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 26, 8, 15, 2, tzinfo=datetime.timezone.utc), 'time_taken': 9599.0, 'time_delta': '2:39:59', 'additions': 15, 'deletions': 15, 'state': 'closed'}, {'id': 1407369167, 'number': 134978, 'closed': datetime.datetime(2023, 6, 26, 8, 57, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 26, 7, 32, 7, tzinfo=datetime.timezone.utc), 'time_taken': 5139.0, 'time_delta': '1:25:39', 'additions': 10, 'deletions': 10, 'state': 'closed'}, {'id': 1407329914, 'number': 134976, 'closed': datetime.datetime(2023, 6, 26, 7, 38, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 26, 7, 8, 23, tzinfo=datetime.timezone.utc), 'time_taken': 1816.0, 'time_delta': '0:30:16', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1406461580, 'number': 134923, 'closed': datetime.datetime(2023, 6, 25, 6, 52, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 25, 3, 55, 34, tzinfo=datetime.timezone.utc), 'time_taken': 10643.0, 'time_delta': '2:57:23', 'additions': 8, 'deletions': 7, 'state': 'closed'}, {'id': 1406232049, 'number': 134897, 'closed': datetime.datetime(2023, 6, 24, 15, 38, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 24, 15, 7, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1831.0, 'time_delta': '0:30:31', 'additions': 9, 'deletions': 8, 'state': 'closed'}, {'id': 1405897366, 'number': 134809, 'closed': datetime.datetime(2023, 6, 24, 3, 8, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 24, 2, 6, 18, tzinfo=datetime.timezone.utc), 'time_taken': 3758.0, 'time_delta': '1:02:38', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 1405893209, 'number': 134800, 'closed': datetime.datetime(2023, 6, 24, 5, 18, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 24, 1, 51, 48, tzinfo=datetime.timezone.utc), 'time_taken': 12386.0, 'time_delta': '3:26:26', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 1405891040, 'number': 134791, 'closed': datetime.datetime(2023, 6, 24, 2, 50, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 24, 1, 45, 10, tzinfo=datetime.timezone.utc), 'time_taken': 3928.0, 'time_delta': '1:05:28', 'additions': 8, 'deletions': 7, 'state': 'closed'}, {'id': 1405887180, 'number': 134789, 'closed': datetime.datetime(2023, 6, 24, 3, 33, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 24, 1, 33, 53, tzinfo=datetime.timezone.utc), 'time_taken': 7149.0, 'time_delta': '1:59:09', 'additions': 8, 'deletions': 7, 'state': 'closed'}, {'id': 1396279971, 'number': 133977, 'closed': datetime.datetime(2023, 6, 17, 1, 52, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 16, 20, 7, 48, tzinfo=datetime.timezone.utc), 'time_taken': 20702.0, 'time_delta': '5:45:02', 'additions': 9, 'deletions': 2, 'state': 'closed'}, {'id': 1396249843, 'number': 133974, 'closed': datetime.datetime(2023, 6, 17, 1, 13, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 16, 19, 47, 27, tzinfo=datetime.timezone.utc), 'time_taken': 19582.0, 'time_delta': '5:26:22', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1396232542, 'number': 133972, 'closed': datetime.datetime(2023, 6, 17, 1, 52, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 16, 19, 33, 7, tzinfo=datetime.timezone.utc), 'time_taken': 22783.0, 'time_delta': '6:19:43', 'additions': 9, 'deletions': 2, 'state': 'closed'}, {'id': 1393532510, 'number': 133791, 'closed': datetime.datetime(2023, 6, 15, 7, 54, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 15, 6, 49, 32, tzinfo=datetime.timezone.utc), 'time_taken': 3918.0, 'time_delta': '1:05:18', 'additions': 8, 'deletions': 7, 'state': 'closed'}, {'id': 1391683204, 'number': 133608, 'closed': datetime.datetime(2023, 6, 14, 5, 49, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 14, 5, 19, 8, tzinfo=datetime.timezone.utc), 'time_taken': 1822.0, 'time_delta': '0:30:22', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1391625854, 'number': 133602, 'closed': datetime.datetime(2023, 6, 15, 0, 42, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 14, 4, 1, 48, tzinfo=datetime.timezone.utc), 'time_taken': 74450.0, 'time_delta': '20:40:50', 'additions': 10, 'deletions': 10, 'state': 'closed'}, {'id': 1331308475, 'number': 129603, 'closed': datetime.datetime(2023, 4, 28, 11, 9, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 28, 5, 3, 32, tzinfo=datetime.timezone.utc), 'time_taken': 21940.0, 'time_delta': '6:05:40', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1331292559, 'number': 129600, 'closed': datetime.datetime(2023, 5, 29, 7, 29, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 28, 4, 38, 14, tzinfo=datetime.timezone.utc), 'time_taken': 2688684.0, 'time_delta': '31 days, 2:51:24', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1326418719, 'number': 129258, 'closed': datetime.datetime(2023, 4, 26, 8, 39, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 25, 3, 6, 5, tzinfo=datetime.timezone.utc), 'time_taken': 106377.0, 'time_delta': '1 day, 5:32:57', 'additions': 27, 'deletions': 10, 'state': 'closed'}, {'id': 1326153699, 'number': 129235, 'closed': datetime.datetime(2023, 4, 25, 1, 48, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 24, 21, 12, 10, tzinfo=datetime.timezone.utc), 'time_taken': 16558.0, 'time_delta': '4:35:58', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 1315965616, 'number': 128536, 'closed': datetime.datetime(2023, 4, 19, 22, 58, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 17, 5, 9, 46, tzinfo=datetime.timezone.utc), 'time_taken': 236946.0, 'time_delta': '2 days, 17:49:06', 'additions': 10, 'deletions': 10, 'state': 'closed'}, {'id': 1297377543, 'number': 127170, 'closed': datetime.datetime(2023, 3, 31, 11, 11, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 31, 8, 26, 23, tzinfo=datetime.timezone.utc), 'time_taken': 9903.0, 'time_delta': '2:45:03', 'additions': 11, 'deletions': 11, 'state': 'closed'}, {'id': 1285162614, 'number': 126312, 'closed': datetime.datetime(2023, 3, 22, 3, 37, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 22, 2, 58, 16, tzinfo=datetime.timezone.utc), 'time_taken': 2377.0, 'time_delta': '0:39:37', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1285159769, 'number': 126311, 'closed': datetime.datetime(2023, 3, 22, 5, 2, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 22, 2, 53, 37, tzinfo=datetime.timezone.utc), 'time_taken': 7724.0, 'time_delta': '2:08:44', 'additions': 10, 'deletions': 10, 'state': 'closed'}, {'id': 1285158167, 'number': 126310, 'closed': datetime.datetime(2023, 3, 27, 20, 3, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 22, 2, 50, 39, tzinfo=datetime.timezone.utc), 'time_taken': 493987.0, 'time_delta': '5 days, 17:13:07', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 1285157612, 'number': 126309, 'closed': datetime.datetime(2023, 3, 22, 3, 26, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 22, 2, 49, 36, tzinfo=datetime.timezone.utc), 'time_taken': 2218.0, 'time_delta': '0:36:58', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1285157295, 'number': 126308, 'closed': datetime.datetime(2023, 3, 22, 3, 37, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 22, 2, 49, 1, tzinfo=datetime.timezone.utc), 'time_taken': 2913.0, 'time_delta': '0:48:33', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1285155873, 'number': 126307, 'closed': datetime.datetime(2023, 3, 22, 7, 42, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 22, 2, 46, 29, tzinfo=datetime.timezone.utc), 'time_taken': 17769.0, 'time_delta': '4:56:09', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1260829669, 'number': 124668, 'closed': datetime.datetime(2023, 3, 2, 18, 9, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 2, 17, 39, 51, tzinfo=datetime.timezone.utc), 'time_taken': 1796.0, 'time_delta': '0:29:56', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1259334775, 'number': 124547, 'closed': datetime.datetime(2023, 3, 1, 21, 14, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 1, 19, 33, 39, tzinfo=datetime.timezone.utc), 'time_taken': 6026.0, 'time_delta': '1:40:26', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1259325398, 'number': 124545, 'closed': datetime.datetime(2023, 3, 1, 20, 14, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 1, 19, 24, 5, tzinfo=datetime.timezone.utc), 'time_taken': 3016.0, 'time_delta': '0:50:16', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1257920529, 'number': 124478, 'closed': datetime.datetime(2023, 2, 28, 23, 22, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 28, 23, 7, 44, tzinfo=datetime.timezone.utc), 'time_taken': 873.0, 'time_delta': '0:14:33', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 1257729322, 'number': 124453, 'closed': datetime.datetime(2023, 2, 28, 22, 12, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 28, 20, 10, 45, tzinfo=datetime.timezone.utc), 'time_taken': 7330.0, 'time_delta': '2:02:10', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1254970757, 'number': 124297, 'closed': datetime.datetime(2023, 2, 27, 7, 57, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 27, 7, 13, 31, tzinfo=datetime.timezone.utc), 'time_taken': 2658.0, 'time_delta': '0:44:18', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 1254929098, 'number': 124295, 'closed': datetime.datetime(2023, 2, 27, 8, 14, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 27, 6, 32, 34, tzinfo=datetime.timezone.utc), 'time_taken': 6144.0, 'time_delta': '1:42:24', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1242414212, 'number': 123326, 'closed': datetime.datetime(2023, 2, 15, 17, 45, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 15, 17, 7, 7, tzinfo=datetime.timezone.utc), 'time_taken': 2282.0, 'time_delta': '0:38:02', 'additions': 9, 'deletions': 1, 'state': 'closed'}, {'id': 1236225387, 'number': 122897, 'closed': datetime.datetime(2023, 2, 10, 8, 40, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 10, 7, 36, 12, tzinfo=datetime.timezone.utc), 'time_taken': 3845.0, 'time_delta': '1:04:05', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1236215384, 'number': 122896, 'closed': datetime.datetime(2023, 2, 10, 8, 39, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 10, 7, 29, 8, tzinfo=datetime.timezone.utc), 'time_taken': 4246.0, 'time_delta': '1:10:46', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1231269912, 'number': 122497, 'closed': datetime.datetime(2023, 2, 7, 12, 6, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 7, 1, 1, 39, tzinfo=datetime.timezone.utc), 'time_taken': 39866.0, 'time_delta': '11:04:26', 'additions': 17, 'deletions': 2, 'state': 'closed'}, {'id': 1230968194, 'number': 122460, 'closed': datetime.datetime(2023, 2, 6, 20, 4, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 6, 19, 50, 53, tzinfo=datetime.timezone.utc), 'time_taken': 844.0, 'time_delta': '0:14:04', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1229357456, 'number': 122328, 'closed': datetime.datetime(2023, 2, 5, 8, 22, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 5, 6, 14, 40, tzinfo=datetime.timezone.utc), 'time_taken': 7689.0, 'time_delta': '2:08:09', 'additions': 7, 'deletions': 0, 'state': 'closed'}, {'id': 1229322911, 'number': 122316, 'closed': datetime.datetime(2023, 2, 5, 4, 55, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 5, 2, 13, 6, tzinfo=datetime.timezone.utc), 'time_taken': 9735.0, 'time_delta': '2:42:15', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 921054565, 'number': 100262, 'closed': datetime.datetime(2022, 6, 18, 23, 41, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 27, 20, 0, 27, tzinfo=datetime.timezone.utc), 'time_taken': 4506081.0, 'time_delta': '52 days, 3:41:21', 'additions': 48, 'deletions': 16, 'state': 'closed'}, {'id': 876791295, 'number': 96659, 'closed': datetime.datetime(2022, 3, 13, 15, 8, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 10, 20, 3, 57, tzinfo=datetime.timezone.utc), 'time_taken': 241459.0, 'time_delta': '2 days, 19:04:19', 'additions': 7, 'deletions': 8, 'state': 'closed'}, {'id': 874979636, 'number': 96559, 'closed': datetime.datetime(2022, 3, 9, 8, 9, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 9, 7, 2, 39, tzinfo=datetime.timezone.utc), 'time_taken': 4015.0, 'time_delta': '1:06:55', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 863719360, 'number': 95863, 'closed': datetime.datetime(2022, 3, 28, 0, 17, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 25, 19, 4, 40, tzinfo=datetime.timezone.utc), 'time_taken': 2610767.0, 'time_delta': '30 days, 5:12:47', 'additions': 601, 'deletions': 4, 'state': 'closed'}, {'id': 861438024, 'number': 95725, 'closed': datetime.datetime(2022, 2, 23, 15, 10, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 23, 13, 52, 28, tzinfo=datetime.timezone.utc), 'time_taken': 4701.0, 'time_delta': '1:18:21', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 857335836, 'number': 95391, 'closed': datetime.datetime(2022, 2, 18, 17, 28, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 18, 16, 46, 53, tzinfo=datetime.timezone.utc), 'time_taken': 2526.0, 'time_delta': '0:42:06', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 845788700, 'number': 94884, 'closed': datetime.datetime(2022, 2, 11, 10, 6, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 10, 18, 33, 25, tzinfo=datetime.timezone.utc), 'time_taken': 55979.0, 'time_delta': '15:32:59', 'additions': 7, 'deletions': 5, 'state': 'closed'}, {'id': 838979466, 'number': 94398, 'closed': datetime.datetime(2022, 2, 4, 1, 25, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 3, 6, 45, 8, tzinfo=datetime.timezone.utc), 'time_taken': 67212.0, 'time_delta': '18:40:12', 'additions': 13, 'deletions': 1, 'state': 'closed'}, {'id': 838952171, 'number': 94397, 'closed': datetime.datetime(2022, 2, 3, 15, 10, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 3, 5, 53, 13, tzinfo=datetime.timezone.utc), 'time_taken': 33431.0, 'time_delta': '9:17:11', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 836818606, 'number': 94211, 'closed': datetime.datetime(2022, 2, 2, 5, 39, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 1, 4, 9, 11, tzinfo=datetime.timezone.utc), 'time_taken': 91844.0, 'time_delta': '1 day, 1:30:44', 'additions': 19, 'deletions': 6, 'state': 'closed'}, {'id': 835969276, 'number': 94172, 'closed': datetime.datetime(2022, 2, 1, 4, 35, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 31, 10, 19, 12, tzinfo=datetime.timezone.utc), 'time_taken': 65749.0, 'time_delta': '18:15:49', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 834246511, 'number': 93961, 'closed': datetime.datetime(2022, 1, 28, 10, 1, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 28, 9, 17, 7, tzinfo=datetime.timezone.utc), 'time_taken': 2643.0, 'time_delta': '0:44:03', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 833991929, 'number': 93941, 'closed': datetime.datetime(2022, 1, 28, 5, 8, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 28, 0, 22, 57, tzinfo=datetime.timezone.utc), 'time_taken': 17115.0, 'time_delta': '4:45:15', 'additions': 6, 'deletions': 8, 'state': 'closed'}, {'id': 833066386, 'number': 93892, 'closed': datetime.datetime(2022, 1, 27, 8, 7, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 27, 5, 52, 47, tzinfo=datetime.timezone.utc), 'time_taken': 8108.0, 'time_delta': '2:15:08', 'additions': 8, 'deletions': 8, 'state': 'closed'}, {'id': 833065327, 'number': 93891, 'closed': datetime.datetime(2022, 1, 28, 0, 4, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 27, 5, 50, 14, tzinfo=datetime.timezone.utc), 'time_taken': 65676.0, 'time_delta': '18:14:36', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 829621791, 'number': 93630, 'closed': datetime.datetime(2022, 1, 24, 9, 7, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 22, 22, 30, 44, tzinfo=datetime.timezone.utc), 'time_taken': 124623.0, 'time_delta': '1 day, 10:37:03', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 829621476, 'number': 93629, 'closed': datetime.datetime(2022, 1, 22, 23, 5, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 22, 22, 28, 46, tzinfo=datetime.timezone.utc), 'time_taken': 2209.0, 'time_delta': '0:36:49', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 829621355, 'number': 93628, 'closed': datetime.datetime(2022, 1, 23, 3, 6, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 22, 22, 28, 1, tzinfo=datetime.timezone.utc), 'time_taken': 16701.0, 'time_delta': '4:38:21', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 829201039, 'number': 93589, 'closed': datetime.datetime(2022, 1, 22, 11, 21, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 22, 4, 8, 52, tzinfo=datetime.timezone.utc), 'time_taken': 25983.0, 'time_delta': '7:13:03', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 827414042, 'number': 93456, 'closed': datetime.datetime(2022, 1, 21, 4, 5, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 20, 11, 7, 30, tzinfo=datetime.timezone.utc), 'time_taken': 61103.0, 'time_delta': '16:58:23', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 826863159, 'number': 93425, 'closed': datetime.datetime(2022, 1, 19, 21, 31, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 19, 20, 15, 16, tzinfo=datetime.timezone.utc), 'time_taken': 4563.0, 'time_delta': '1:16:03', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 823825772, 'number': 93216, 'closed': datetime.datetime(2022, 1, 16, 23, 5, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 16, 4, 2, 57, tzinfo=datetime.timezone.utc), 'time_taken': 68540.0, 'time_delta': '19:02:20', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 814284173, 'number': 92536, 'closed': datetime.datetime(2022, 1, 5, 20, 32, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 5, 0, 2, 22, tzinfo=datetime.timezone.utc), 'time_taken': 73801.0, 'time_delta': '20:30:01', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 813997765, 'number': 92504, 'closed': datetime.datetime(2022, 1, 4, 17, 41, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 4, 16, 26, 53, tzinfo=datetime.timezone.utc), 'time_taken': 4462.0, 'time_delta': '1:14:22', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 813586885, 'number': 92487, 'closed': datetime.datetime(2022, 1, 4, 8, 6, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 4, 5, 51, 12, tzinfo=datetime.timezone.utc), 'time_taken': 8117.0, 'time_delta': '2:15:17', 'additions': 10, 'deletions': 2, 'state': 'closed'}, {'id': 812702513, 'number': 92398, 'closed': datetime.datetime(2022, 1, 6, 0, 13, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 2, 9, 4, 17, tzinfo=datetime.timezone.utc), 'time_taken': 313734.0, 'time_delta': '3 days, 15:08:54', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 812663708, 'number': 92376, 'closed': datetime.datetime(2022, 1, 2, 5, 7, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 2, 1, 8, 24, tzinfo=datetime.timezone.utc), 'time_taken': 14335.0, 'time_delta': '3:58:55', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 740845520, 'number': 85744, 'closed': datetime.datetime(2021, 9, 23, 0, 47, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 22, 20, 31, 19, tzinfo=datetime.timezone.utc), 'time_taken': 15347.0, 'time_delta': '4:15:47', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 740844898, 'number': 85743, 'closed': datetime.datetime(2021, 9, 23, 0, 46, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 22, 20, 30, 17, tzinfo=datetime.timezone.utc), 'time_taken': 15351.0, 'time_delta': '4:15:51', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 740844708, 'number': 85742, 'closed': datetime.datetime(2021, 9, 23, 0, 46, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 22, 20, 29, 59, tzinfo=datetime.timezone.utc), 'time_taken': 15409.0, 'time_delta': '4:16:49', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 740844544, 'number': 85741, 'closed': datetime.datetime(2021, 9, 23, 0, 48, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 22, 20, 29, 42, tzinfo=datetime.timezone.utc), 'time_taken': 15513.0, 'time_delta': '4:18:33', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 737876432, 'number': 85614, 'closed': datetime.datetime(2021, 9, 20, 23, 6, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 20, 19, 43, 29, tzinfo=datetime.timezone.utc), 'time_taken': 12189.0, 'time_delta': '3:23:09', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 737875485, 'number': 85613, 'closed': datetime.datetime(2021, 11, 25, 13, 8, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 20, 19, 42, 2, tzinfo=datetime.timezone.utc), 'time_taken': 5678775.0, 'time_delta': '65 days, 17:26:15', 'additions': 166, 'deletions': 46, 'state': 'closed'}, {'id': 737872926, 'number': 85612, 'closed': datetime.datetime(2021, 9, 21, 1, 30, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 20, 19, 37, 45, tzinfo=datetime.timezone.utc), 'time_taken': 21152.0, 'time_delta': '5:52:32', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 731983652, 'number': 85069, 'closed': datetime.datetime(2021, 9, 11, 22, 4, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 11, 18, 56, 32, tzinfo=datetime.timezone.utc), 'time_taken': 11250.0, 'time_delta': '3:07:30', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 730893376, 'number': 84931, 'closed': datetime.datetime(2021, 9, 12, 14, 48, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 9, 20, 1, 8, tzinfo=datetime.timezone.utc), 'time_taken': 240424.0, 'time_delta': '2 days, 18:47:04', 'additions': 5, 'deletions': 4, 'state': 'closed'}, {'id': 727518475, 'number': 84743, 'closed': datetime.datetime(2021, 9, 6, 2, 46, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 6, 1, 23, 37, tzinfo=datetime.timezone.utc), 'time_taken': 4959.0, 'time_delta': '1:22:39', 'additions': 0, 'deletions': 8, 'state': 'closed'}, {'id': 727166528, 'number': 84637, 'closed': datetime.datetime(2021, 9, 5, 21, 7, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 4, 2, 55, 52, tzinfo=datetime.timezone.utc), 'time_taken': 151894.0, 'time_delta': '1 day, 18:11:34', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 716392557, 'number': 83614, 'closed': datetime.datetime(2021, 8, 20, 10, 16, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 20, 2, 41, 24, tzinfo=datetime.timezone.utc), 'time_taken': 27286.0, 'time_delta': '7:34:46', 'additions': 142, 'deletions': 142, 'state': 'closed'}, {'id': 716301802, 'number': 83603, 'closed': datetime.datetime(2021, 8, 20, 0, 17, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 19, 22, 23, 47, tzinfo=datetime.timezone.utc), 'time_taken': 6803.0, 'time_delta': '1:53:23', 'additions': 72, 'deletions': 72, 'state': 'closed'}, {'id': 715203244, 'number': 83489, 'closed': datetime.datetime(2021, 8, 18, 18, 14, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 15, 32, 3, tzinfo=datetime.timezone.utc), 'time_taken': 9769.0, 'time_delta': '2:42:49', 'additions': 77, 'deletions': 77, 'state': 'closed'}, {'id': 713392137, 'number': 83386, 'closed': datetime.datetime(2021, 8, 16, 15, 9, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 16, 12, 25, 13, tzinfo=datetime.timezone.utc), 'time_taken': 9860.0, 'time_delta': '2:44:20', 'additions': 2, 'deletions': 12, 'state': 'closed'}, {'id': 713391073, 'number': 83385, 'closed': datetime.datetime(2021, 8, 16, 15, 9, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 16, 12, 23, 31, tzinfo=datetime.timezone.utc), 'time_taken': 9946.0, 'time_delta': '2:45:46', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 701651426, 'number': 82443, 'closed': datetime.datetime(2021, 8, 2, 18, 12, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 17, 25, 42, tzinfo=datetime.timezone.utc), 'time_taken': 2834.0, 'time_delta': '0:47:14', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 700754217, 'number': 82336, 'closed': datetime.datetime(2021, 8, 1, 10, 7, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 31, 19, 1, 13, tzinfo=datetime.timezone.utc), 'time_taken': 54366.0, 'time_delta': '15:06:06', 'additions': 4, 'deletions': 9, 'state': 'closed'}, {'id': 700687902, 'number': 82312, 'closed': datetime.datetime(2021, 7, 31, 12, 8, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 31, 10, 11, 31, tzinfo=datetime.timezone.utc), 'time_taken': 7032.0, 'time_delta': '1:57:12', 'additions': 8, 'deletions': 2, 'state': 'closed'}, {'id': 695948219, 'number': 81776, 'closed': datetime.datetime(2021, 7, 24, 10, 38, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 23, 13, 35, 57, tzinfo=datetime.timezone.utc), 'time_taken': 75777.0, 'time_delta': '21:02:57', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 693902564, 'number': 81577, 'closed': datetime.datetime(2021, 7, 22, 1, 30, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 20, 22, 19, 49, tzinfo=datetime.timezone.utc), 'time_taken': 97859.0, 'time_delta': '1 day, 3:10:59', 'additions': 6, 'deletions': 5, 'state': 'closed'}, {'id': 692767663, 'number': 81515, 'closed': datetime.datetime(2021, 7, 19, 18, 17, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 16, 51, 9, tzinfo=datetime.timezone.utc), 'time_taken': 5179.0, 'time_delta': '1:26:19', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 692727175, 'number': 81512, 'closed': datetime.datetime(2021, 7, 19, 17, 17, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 15, 51, 47, tzinfo=datetime.timezone.utc), 'time_taken': 5125.0, 'time_delta': '1:25:25', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 692046216, 'number': 81455, 'closed': datetime.datetime(2021, 7, 18, 10, 7, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 18, 7, 47, 1, tzinfo=datetime.timezone.utc), 'time_taken': 8433.0, 'time_delta': '2:20:33', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 690592455, 'number': 81300, 'closed': datetime.datetime(2021, 7, 15, 13, 12, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 15, 10, 27, 1, tzinfo=datetime.timezone.utc), 'time_taken': 9901.0, 'time_delta': '2:45:01', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 690268597, 'number': 81277, 'closed': datetime.datetime(2021, 7, 15, 3, 10, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 14, 22, 38, 53, tzinfo=datetime.timezone.utc), 'time_taken': 16296.0, 'time_delta': '4:31:36', 'additions': 14, 'deletions': 14, 'state': 'closed'}, {'id': 688779951, 'number': 81149, 'closed': datetime.datetime(2021, 7, 13, 11, 13, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 13, 10, 15, 22, tzinfo=datetime.timezone.utc), 'time_taken': 3459.0, 'time_delta': '0:57:39', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 688772778, 'number': 81148, 'closed': datetime.datetime(2021, 7, 13, 11, 12, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 13, 10, 7, 8, tzinfo=datetime.timezone.utc), 'time_taken': 3933.0, 'time_delta': '1:05:33', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 688203194, 'number': 81110, 'closed': datetime.datetime(2021, 7, 12, 21, 51, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 12, 21, 49, 55, tzinfo=datetime.timezone.utc), 'time_taken': 122.0, 'time_delta': '0:02:02', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 688171875, 'number': 81105, 'closed': datetime.datetime(2021, 7, 13, 0, 12, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 12, 21, 0, 31, tzinfo=datetime.timezone.utc), 'time_taken': 11539.0, 'time_delta': '3:12:19', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 686568580, 'number': 80875, 'closed': datetime.datetime(2021, 7, 9, 11, 7, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 7, 42, 47, tzinfo=datetime.timezone.utc), 'time_taken': 12295.0, 'time_delta': '3:24:55', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 683648276, 'number': 80577, 'closed': datetime.datetime(2021, 7, 5, 14, 11, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 12, 9, 46, tzinfo=datetime.timezone.utc), 'time_taken': 7318.0, 'time_delta': '2:01:58', 'additions': 2, 'deletions': 3, 'state': 'closed'}, {'id': 683200550, 'number': 80556, 'closed': datetime.datetime(2021, 7, 4, 23, 6, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 4, 16, 20, 13, tzinfo=datetime.timezone.utc), 'time_taken': 24370.0, 'time_delta': '6:46:10', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 682988347, 'number': 80489, 'closed': datetime.datetime(2021, 7, 3, 16, 7, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 3, 8, 12, 17, tzinfo=datetime.timezone.utc), 'time_taken': 28494.0, 'time_delta': '7:54:54', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 682911155, 'number': 80482, 'closed': datetime.datetime(2021, 7, 26, 21, 32, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 22, 44, 2, tzinfo=datetime.timezone.utc), 'time_taken': 2069305.0, 'time_delta': '23 days, 22:48:25', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 682596023, 'number': 80444, 'closed': datetime.datetime(2021, 7, 2, 12, 49, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 12, 38, 47, tzinfo=datetime.timezone.utc), 'time_taken': 659.0, 'time_delta': '0:10:59', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 680967412, 'number': 80302, 'closed': datetime.datetime(2021, 7, 6, 13, 41, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 15, 12, 4, tzinfo=datetime.timezone.utc), 'time_taken': 512940.0, 'time_delta': '5 days, 22:29:00', 'additions': 147, 'deletions': 112, 'state': 'closed'}, {'id': 678395454, 'number': 80104, 'closed': datetime.datetime(2021, 6, 26, 20, 7, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 26, 18, 34, 56, tzinfo=datetime.timezone.utc), 'time_taken': 5554.0, 'time_delta': '1:32:34', 'additions': 15, 'deletions': 1, 'state': 'closed'}, {'id': 677281929, 'number': 79928, 'closed': datetime.datetime(2021, 6, 24, 18, 12, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 16, 55, 8, tzinfo=datetime.timezone.utc), 'time_taken': 4658.0, 'time_delta': '1:17:38', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 674526597, 'number': 79710, 'closed': datetime.datetime(2021, 6, 21, 16, 14, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 12, 54, 10, tzinfo=datetime.timezone.utc), 'time_taken': 12027.0, 'time_delta': '3:20:27', 'additions': 0, 'deletions': 2, 'state': 'closed'}, {'id': 674523962, 'number': 79709, 'closed': datetime.datetime(2021, 6, 24, 18, 15, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 12, 50, 24, tzinfo=datetime.timezone.utc), 'time_taken': 278678.0, 'time_delta': '3 days, 5:24:38', 'additions': 0, 'deletions': 2, 'state': 'closed'}, {'id': 674495053, 'number': 79708, 'closed': datetime.datetime(2021, 6, 21, 15, 17, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 12, 7, 37, tzinfo=datetime.timezone.utc), 'time_taken': 11393.0, 'time_delta': '3:09:53', 'additions': 0, 'deletions': 2, 'state': 'closed'}, {'id': 674494683, 'number': 79707, 'closed': datetime.datetime(2021, 6, 21, 16, 22, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 12, 7, 5, tzinfo=datetime.timezone.utc), 'time_taken': 15313.0, 'time_delta': '4:15:13', 'additions': 0, 'deletions': 2, 'state': 'closed'}, {'id': 674494313, 'number': 79706, 'closed': datetime.datetime(2021, 6, 21, 18, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 12, 6, 32, tzinfo=datetime.timezone.utc), 'time_taken': 22408.0, 'time_delta': '6:13:28', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 674493976, 'number': 79705, 'closed': datetime.datetime(2021, 6, 21, 16, 25, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 12, 6, 2, tzinfo=datetime.timezone.utc), 'time_taken': 15561.0, 'time_delta': '4:19:21', 'additions': 0, 'deletions': 2, 'state': 'closed'}, {'id': 670799963, 'number': 79400, 'closed': datetime.datetime(2021, 6, 15, 23, 7, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 22, 36, 59, tzinfo=datetime.timezone.utc), 'time_taken': 1804.0, 'time_delta': '0:30:04', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 670708534, 'number': 79395, 'closed': datetime.datetime(2021, 6, 15, 21, 51, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 20, 3, 46, tzinfo=datetime.timezone.utc), 'time_taken': 6493.0, 'time_delta': '1:48:13', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 670586345, 'number': 79387, 'closed': datetime.datetime(2021, 6, 15, 16, 59, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 16, 55, 46, tzinfo=datetime.timezone.utc), 'time_taken': 227.0, 'time_delta': '0:03:47', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 669966289, 'number': 79350, 'closed': datetime.datetime(2021, 6, 15, 2, 27, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 0, 43, 14, tzinfo=datetime.timezone.utc), 'time_taken': 6228.0, 'time_delta': '1:43:48', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 669966150, 'number': 79349, 'closed': datetime.datetime(2021, 6, 15, 6, 9, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 0, 42, 52, tzinfo=datetime.timezone.utc), 'time_taken': 19613.0, 'time_delta': '5:26:53', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 669965860, 'number': 79348, 'closed': datetime.datetime(2021, 6, 15, 6, 9, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 0, 42, 10, tzinfo=datetime.timezone.utc), 'time_taken': 19629.0, 'time_delta': '5:27:09', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 669965473, 'number': 79347, 'closed': datetime.datetime(2021, 6, 15, 6, 8, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 0, 41, 4, tzinfo=datetime.timezone.utc), 'time_taken': 19640.0, 'time_delta': '5:27:20', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 669961264, 'number': 79346, 'closed': datetime.datetime(2021, 6, 15, 5, 9, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 0, 29, 57, tzinfo=datetime.timezone.utc), 'time_taken': 16783.0, 'time_delta': '4:39:43', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 669955276, 'number': 79341, 'closed': datetime.datetime(2021, 6, 15, 6, 8, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 0, 13, 35, tzinfo=datetime.timezone.utc), 'time_taken': 21298.0, 'time_delta': '5:54:58', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 669920460, 'number': 79336, 'closed': datetime.datetime(2021, 6, 15, 0, 22, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 14, 22, 42, 48, tzinfo=datetime.timezone.utc), 'time_taken': 6003.0, 'time_delta': '1:40:03', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 669909284, 'number': 79335, 'closed': datetime.datetime(2021, 6, 15, 0, 28, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 14, 22, 12, 56, tzinfo=datetime.timezone.utc), 'time_taken': 8123.0, 'time_delta': '2:15:23', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 669083169, 'number': 79265, 'closed': datetime.datetime(2021, 6, 13, 18, 8, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 13, 16, 51, 10, tzinfo=datetime.timezone.utc), 'time_taken': 4612.0, 'time_delta': '1:16:52', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 668681293, 'number': 79172, 'closed': datetime.datetime(2021, 6, 12, 19, 8, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 12, 1, 3, 29, tzinfo=datetime.timezone.utc), 'time_taken': 65083.0, 'time_delta': '18:04:43', 'additions': 6, 'deletions': 5, 'state': 'closed'}, {'id': 668627134, 'number': 79169, 'closed': datetime.datetime(2021, 6, 12, 0, 11, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 23, 0, 4, tzinfo=datetime.timezone.utc), 'time_taken': 4274.0, 'time_delta': '1:11:14', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 668577680, 'number': 79164, 'closed': datetime.datetime(2021, 6, 12, 0, 10, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 21, 31, 53, tzinfo=datetime.timezone.utc), 'time_taken': 9509.0, 'time_delta': '2:38:29', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 667443324, 'number': 79094, 'closed': datetime.datetime(2021, 6, 11, 22, 7, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 10, 21, 39, 21, tzinfo=datetime.timezone.utc), 'time_taken': 88060.0, 'time_delta': '1 day, 0:27:40', 'additions': 10, 'deletions': 16, 'state': 'closed'}, {'id': 666898023, 'number': 79074, 'closed': datetime.datetime(2021, 6, 10, 17, 41, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 10, 13, 33, 47, tzinfo=datetime.timezone.utc), 'time_taken': 14855.0, 'time_delta': '4:07:35', 'additions': 0, 'deletions': 5, 'state': 'closed'}, {'id': 666841700, 'number': 79070, 'closed': datetime.datetime(2021, 6, 10, 12, 55, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 10, 12, 27, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1664.0, 'time_delta': '0:27:44', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 666366231, 'number': 79043, 'closed': datetime.datetime(2021, 6, 10, 0, 12, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 9, 23, 2, 32, tzinfo=datetime.timezone.utc), 'time_taken': 4193.0, 'time_delta': '1:09:53', 'additions': 5, 'deletions': 9, 'state': 'closed'}, {'id': 666364929, 'number': 79042, 'closed': datetime.datetime(2021, 6, 10, 3, 17, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 9, 22, 59, 3, tzinfo=datetime.timezone.utc), 'time_taken': 15527.0, 'time_delta': '4:18:47', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 665015517, 'number': 78941, 'closed': datetime.datetime(2021, 6, 8, 16, 14, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 15, 18, 50, tzinfo=datetime.timezone.utc), 'time_taken': 3354.0, 'time_delta': '0:55:54', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 665014691, 'number': 78940, 'closed': datetime.datetime(2021, 6, 8, 16, 15, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 15, 17, 50, tzinfo=datetime.timezone.utc), 'time_taken': 3454.0, 'time_delta': '0:57:34', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 663961692, 'number': 78897, 'closed': datetime.datetime(2021, 6, 8, 0, 22, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 7, 22, 38, 32, tzinfo=datetime.timezone.utc), 'time_taken': 6219.0, 'time_delta': '1:43:39', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 663957316, 'number': 78896, 'closed': datetime.datetime(2021, 6, 8, 0, 21, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 7, 22, 30, 38, tzinfo=datetime.timezone.utc), 'time_taken': 6646.0, 'time_delta': '1:50:46', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 663351023, 'number': 78862, 'closed': datetime.datetime(2021, 6, 7, 8, 56, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 7, 8, 45, 39, tzinfo=datetime.timezone.utc), 'time_taken': 622.0, 'time_delta': '0:10:22', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 663076718, 'number': 78852, 'closed': datetime.datetime(2021, 6, 7, 7, 36, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 7, 0, 0, 44, tzinfo=datetime.timezone.utc), 'time_taken': 27334.0, 'time_delta': '7:35:34', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 663076510, 'number': 78851, 'closed': datetime.datetime(2021, 6, 7, 2, 50, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 6, 23, 59, 14, tzinfo=datetime.timezone.utc), 'time_taken': 10258.0, 'time_delta': '2:50:58', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 663063651, 'number': 78850, 'closed': datetime.datetime(2021, 6, 7, 8, 7, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 6, 22, 32, 1, tzinfo=datetime.timezone.utc), 'time_taken': 34542.0, 'time_delta': '9:35:42', 'additions': 62, 'deletions': 0, 'state': 'closed'}, {'id': 663041076, 'number': 78848, 'closed': datetime.datetime(2021, 6, 7, 8, 36, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 6, 20, 12, 5, tzinfo=datetime.timezone.utc), 'time_taken': 44670.0, 'time_delta': '12:24:30', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 662649925, 'number': 78815, 'closed': datetime.datetime(2021, 6, 6, 4, 29, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 5, 23, 15, 52, tzinfo=datetime.timezone.utc), 'time_taken': 18840.0, 'time_delta': '5:14:00', 'additions': 7, 'deletions': 6, 'state': 'closed'}, {'id': 661635529, 'number': 78711, 'closed': datetime.datetime(2021, 6, 6, 16, 48, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 4, 10, 5, 40, tzinfo=datetime.timezone.utc), 'time_taken': 196965.0, 'time_delta': '2 days, 6:42:45', 'additions': 3, 'deletions': 11, 'state': 'closed'}, {'id': 661624664, 'number': 78710, 'closed': datetime.datetime(2021, 6, 4, 10, 38, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 4, 9, 57, 19, tzinfo=datetime.timezone.utc), 'time_taken': 2462.0, 'time_delta': '0:41:02', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 661090143, 'number': 78648, 'closed': datetime.datetime(2021, 6, 3, 19, 39, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 3, 17, 26, 38, tzinfo=datetime.timezone.utc), 'time_taken': 7974.0, 'time_delta': '2:12:54', 'additions': 0, 'deletions': 2, 'state': 'closed'}, {'id': 660463230, 'number': 78584, 'closed': datetime.datetime(2021, 6, 3, 8, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 2, 23, 49, 10, tzinfo=datetime.timezone.utc), 'time_taken': 32030.0, 'time_delta': '8:53:50', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 660387309, 'number': 78581, 'closed': datetime.datetime(2021, 6, 2, 21, 35, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 2, 20, 59, 20, tzinfo=datetime.timezone.utc), 'time_taken': 2189.0, 'time_delta': '0:36:29', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 660133743, 'number': 78547, 'closed': datetime.datetime(2021, 6, 2, 19, 1, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 2, 14, 43, 27, tzinfo=datetime.timezone.utc), 'time_taken': 15482.0, 'time_delta': '4:18:02', 'additions': 27, 'deletions': 28, 'state': 'closed'}, {'id': 660100225, 'number': 78545, 'closed': datetime.datetime(2021, 6, 2, 14, 10, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 2, 14, 5, 1, tzinfo=datetime.timezone.utc), 'time_taken': 358.0, 'time_delta': '0:05:58', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 659457792, 'number': 78494, 'closed': datetime.datetime(2021, 6, 2, 1, 37, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 1, 23, 15, 11, tzinfo=datetime.timezone.utc), 'time_taken': 8567.0, 'time_delta': '2:22:47', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 659454137, 'number': 78493, 'closed': datetime.datetime(2021, 6, 3, 1, 35, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 1, 23, 10, 45, tzinfo=datetime.timezone.utc), 'time_taken': 95111.0, 'time_delta': '1 day, 2:25:11', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 659323808, 'number': 78488, 'closed': datetime.datetime(2021, 6, 1, 21, 17, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 1, 20, 33, 20, tzinfo=datetime.timezone.utc), 'time_taken': 2655.0, 'time_delta': '0:44:15', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 658556385, 'number': 78444, 'closed': datetime.datetime(2021, 6, 1, 0, 30, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 31, 23, 53, 33, tzinfo=datetime.timezone.utc), 'time_taken': 2237.0, 'time_delta': '0:37:17', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 658544158, 'number': 78441, 'closed': datetime.datetime(2021, 6, 1, 14, 45, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 31, 22, 56, 54, tzinfo=datetime.timezone.utc), 'time_taken': 56899.0, 'time_delta': '15:48:19', 'additions': 10, 'deletions': 9, 'state': 'closed'}, {'id': 658342882, 'number': 78420, 'closed': datetime.datetime(2021, 5, 31, 15, 14, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 31, 14, 8, 27, tzinfo=datetime.timezone.utc), 'time_taken': 3970.0, 'time_delta': '1:06:10', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 658326957, 'number': 78419, 'closed': datetime.datetime(2021, 5, 31, 15, 15, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 31, 13, 45, 38, tzinfo=datetime.timezone.utc), 'time_taken': 5397.0, 'time_delta': '1:29:57', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 658296187, 'number': 78418, 'closed': datetime.datetime(2021, 5, 31, 13, 26, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 31, 13, 0, 40, tzinfo=datetime.timezone.utc), 'time_taken': 1575.0, 'time_delta': '0:26:15', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 658290716, 'number': 78417, 'closed': datetime.datetime(2021, 5, 31, 13, 35, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 31, 12, 52, 11, tzinfo=datetime.timezone.utc), 'time_taken': 2588.0, 'time_delta': '0:43:08', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 657840528, 'number': 78402, 'closed': datetime.datetime(2021, 5, 31, 6, 5, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 31, 0, 5, 51, tzinfo=datetime.timezone.utc), 'time_taken': 21560.0, 'time_delta': '5:59:20', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 657830374, 'number': 78401, 'closed': datetime.datetime(2021, 5, 31, 6, 22, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 30, 23, 16, 13, tzinfo=datetime.timezone.utc), 'time_taken': 25592.0, 'time_delta': '7:06:32', 'additions': 40, 'deletions': 0, 'state': 'closed'}, {'id': 657419202, 'number': 78330, 'closed': datetime.datetime(2021, 5, 29, 23, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 29, 7, 26, 16, tzinfo=datetime.timezone.utc), 'time_taken': 58664.0, 'time_delta': '16:17:44', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 657145384, 'number': 78278, 'closed': datetime.datetime(2021, 5, 28, 22, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 28, 21, 50, 10, tzinfo=datetime.timezone.utc), 'time_taken': 2330.0, 'time_delta': '0:38:50', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 656377313, 'number': 78238, 'closed': datetime.datetime(2021, 5, 28, 14, 36, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 28, 12, 11, 14, tzinfo=datetime.timezone.utc), 'time_taken': 8696.0, 'time_delta': '2:24:56', 'additions': 6, 'deletions': 9, 'state': 'closed'}, {'id': 654806582, 'number': 78174, 'closed': datetime.datetime(2021, 5, 27, 11, 34, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 27, 11, 8, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1597.0, 'time_delta': '0:26:37', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 654325337, 'number': 78123, 'closed': datetime.datetime(2021, 5, 27, 1, 11, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 26, 23, 27, 54, tzinfo=datetime.timezone.utc), 'time_taken': 6199.0, 'time_delta': '1:43:19', 'additions': 9, 'deletions': 0, 'state': 'closed'}, {'id': 654203929, 'number': 78104, 'closed': datetime.datetime(2021, 5, 26, 21, 10, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 26, 20, 27, 36, tzinfo=datetime.timezone.utc), 'time_taken': 2592.0, 'time_delta': '0:43:12', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 653961843, 'number': 78092, 'closed': datetime.datetime(2021, 5, 31, 12, 21, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 26, 16, 3, 58, tzinfo=datetime.timezone.utc), 'time_taken': 418681.0, 'time_delta': '4 days, 20:18:01', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 651450010, 'number': 77935, 'closed': datetime.datetime(2021, 5, 24, 18, 21, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 24, 16, 3, 29, tzinfo=datetime.timezone.utc), 'time_taken': 8276.0, 'time_delta': '2:17:56', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 650761858, 'number': 77872, 'closed': datetime.datetime(2021, 5, 23, 11, 56, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 23, 10, 11, 13, tzinfo=datetime.timezone.utc), 'time_taken': 6341.0, 'time_delta': '1:45:41', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 650698253, 'number': 77865, 'closed': datetime.datetime(2021, 5, 22, 23, 19, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 22, 23, 14, 15, tzinfo=datetime.timezone.utc), 'time_taken': 334.0, 'time_delta': '0:05:34', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 650687648, 'number': 77859, 'closed': datetime.datetime(2021, 5, 22, 23, 7, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 22, 21, 19, 50, tzinfo=datetime.timezone.utc), 'time_taken': 6463.0, 'time_delta': '1:47:43', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 650633481, 'number': 77807, 'closed': datetime.datetime(2021, 5, 22, 15, 6, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 22, 14, 8, 15, tzinfo=datetime.timezone.utc), 'time_taken': 3505.0, 'time_delta': '0:58:25', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 650461976, 'number': 77774, 'closed': datetime.datetime(2021, 5, 21, 22, 17, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 21, 22, 11, 53, tzinfo=datetime.timezone.utc), 'time_taken': 363.0, 'time_delta': '0:06:03', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 650409632, 'number': 77771, 'closed': datetime.datetime(2021, 5, 21, 23, 8, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 21, 21, 25, 22, tzinfo=datetime.timezone.utc), 'time_taken': 6159.0, 'time_delta': '1:42:39', 'additions': 24, 'deletions': 2, 'state': 'closed'}, {'id': 649484821, 'number': 77702, 'closed': datetime.datetime(2021, 5, 20, 23, 14, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 20, 21, 29, 53, tzinfo=datetime.timezone.utc), 'time_taken': 6296.0, 'time_delta': '1:44:56', 'additions': 40, 'deletions': 0, 'state': 'closed'}, {'id': 649326734, 'number': 77698, 'closed': datetime.datetime(2021, 5, 20, 20, 40, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 20, 19, 7, 18, tzinfo=datetime.timezone.utc), 'time_taken': 5576.0, 'time_delta': '1:32:56', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 649072874, 'number': 77686, 'closed': datetime.datetime(2021, 5, 20, 19, 18, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 20, 15, 58, 48, tzinfo=datetime.timezone.utc), 'time_taken': 11982.0, 'time_delta': '3:19:42', 'additions': 8, 'deletions': 10, 'state': 'closed'}, {'id': 648182146, 'number': 77633, 'closed': datetime.datetime(2021, 5, 20, 20, 8, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 19, 23, 15, 18, tzinfo=datetime.timezone.utc), 'time_taken': 75199.0, 'time_delta': '20:53:19', 'additions': 29, 'deletions': 8, 'state': 'closed'}, {'id': 645702845, 'number': 77451, 'closed': datetime.datetime(2021, 5, 17, 10, 26, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 17, 9, 31, 37, tzinfo=datetime.timezone.utc), 'time_taken': 3291.0, 'time_delta': '0:54:51', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 645698926, 'number': 77450, 'closed': datetime.datetime(2021, 5, 17, 10, 26, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 17, 9, 26, 12, tzinfo=datetime.timezone.utc), 'time_taken': 3640.0, 'time_delta': '1:00:40', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 645181785, 'number': 77363, 'closed': datetime.datetime(2021, 5, 15, 22, 22, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 15, 16, 38, 4, tzinfo=datetime.timezone.utc), 'time_taken': 20652.0, 'time_delta': '5:44:12', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 643470833, 'number': 77137, 'closed': datetime.datetime(2021, 5, 13, 6, 41, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 12, 20, 17, 26, tzinfo=datetime.timezone.utc), 'time_taken': 37465.0, 'time_delta': '10:24:25', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 643272174, 'number': 77117, 'closed': datetime.datetime(2021, 5, 12, 19, 40, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 12, 15, 33, 24, tzinfo=datetime.timezone.utc), 'time_taken': 14800.0, 'time_delta': '4:06:40', 'additions': 20, 'deletions': 9, 'state': 'closed'}, {'id': 636953304, 'number': 76945, 'closed': datetime.datetime(2021, 5, 10, 6, 46, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 10, 6, 14, 42, tzinfo=datetime.timezone.utc), 'time_taken': 1903.0, 'time_delta': '0:31:43', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 631098945, 'number': 76749, 'closed': datetime.datetime(2021, 5, 6, 5, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 6, 5, 4, 42, tzinfo=datetime.timezone.utc), 'time_taken': 678.0, 'time_delta': '0:11:18', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 628529528, 'number': 76430, 'closed': datetime.datetime(2021, 5, 2, 2, 46, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 2, 2, 30, 5, tzinfo=datetime.timezone.utc), 'time_taken': 999.0, 'time_delta': '0:16:39', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 625724449, 'number': 76233, 'closed': datetime.datetime(2021, 4, 29, 3, 20, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 29, 1, 58, 29, tzinfo=datetime.timezone.utc), 'time_taken': 4934.0, 'time_delta': '1:22:14', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 624798191, 'number': 76087, 'closed': datetime.datetime(2021, 4, 28, 10, 7, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 28, 2, 40, 21, tzinfo=datetime.timezone.utc), 'time_taken': 26842.0, 'time_delta': '7:27:22', 'additions': 0, 'deletions': 2, 'state': 'closed'}, {'id': 624797823, 'number': 76086, 'closed': datetime.datetime(2021, 4, 28, 10, 8, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 28, 2, 39, 14, tzinfo=datetime.timezone.utc), 'time_taken': 26939.0, 'time_delta': '7:28:59', 'additions': 0, 'deletions': 2, 'state': 'closed'}, {'id': 624466197, 'number': 76044, 'closed': datetime.datetime(2021, 6, 10, 9, 25, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 27, 16, 40, 2, tzinfo=datetime.timezone.utc), 'time_taken': 3775513.0, 'time_delta': '43 days, 16:45:13', 'additions': 0, 'deletions': 2, 'state': 'closed'}, {'id': 623434007, 'number': 75944, 'closed': datetime.datetime(2021, 4, 27, 22, 7, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 26, 15, 25, 44, tzinfo=datetime.timezone.utc), 'time_taken': 110491.0, 'time_delta': '1 day, 6:41:31', 'additions': 0, 'deletions': 2, 'state': 'closed'}, {'id': 622225497, 'number': 75826, 'closed': datetime.datetime(2021, 4, 23, 19, 14, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 23, 17, 33, 29, tzinfo=datetime.timezone.utc), 'time_taken': 6046.0, 'time_delta': '1:40:46', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 621535203, 'number': 75775, 'closed': datetime.datetime(2021, 4, 23, 1, 17, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 22, 21, 0, 14, tzinfo=datetime.timezone.utc), 'time_taken': 15418.0, 'time_delta': '4:16:58', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 619710914, 'number': 75617, 'closed': datetime.datetime(2021, 4, 21, 0, 22, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 20, 21, 48, 29, tzinfo=datetime.timezone.utc), 'time_taken': 9256.0, 'time_delta': '2:34:16', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 619500324, 'number': 75591, 'closed': datetime.datetime(2021, 4, 20, 18, 39, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 20, 17, 3, 22, tzinfo=datetime.timezone.utc), 'time_taken': 5779.0, 'time_delta': '1:36:19', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 618978003, 'number': 75538, 'closed': datetime.datetime(2021, 4, 20, 13, 52, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 20, 4, 27, 36, tzinfo=datetime.timezone.utc), 'time_taken': 33915.0, 'time_delta': '9:25:15', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 617564538, 'number': 75448, 'closed': datetime.datetime(2021, 4, 18, 22, 16, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 18, 22, 11, 23, tzinfo=datetime.timezone.utc), 'time_taken': 332.0, 'time_delta': '0:05:32', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 616750018, 'number': 75297, 'closed': datetime.datetime(2021, 4, 16, 16, 9, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 16, 11, 13, 1, tzinfo=datetime.timezone.utc), 'time_taken': 17788.0, 'time_delta': '4:56:28', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 616220544, 'number': 75252, 'closed': datetime.datetime(2021, 4, 15, 17, 36, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 15, 17, 9, 27, tzinfo=datetime.timezone.utc), 'time_taken': 1633.0, 'time_delta': '0:27:13', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 614895432, 'number': 75150, 'closed': datetime.datetime(2021, 4, 14, 8, 8, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 14, 3, 21, 9, tzinfo=datetime.timezone.utc), 'time_taken': 17261.0, 'time_delta': '4:47:41', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 614504244, 'number': 75105, 'closed': datetime.datetime(2021, 4, 13, 14, 42, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 13, 14, 23, 21, tzinfo=datetime.timezone.utc), 'time_taken': 1170.0, 'time_delta': '0:19:30', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 614036099, 'number': 75072, 'closed': datetime.datetime(2021, 4, 13, 8, 9, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 13, 0, 33, 54, tzinfo=datetime.timezone.utc), 'time_taken': 27325.0, 'time_delta': '7:35:25', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 614006032, 'number': 75055, 'closed': datetime.datetime(2021, 4, 13, 9, 9, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 12, 23, 12, 26, tzinfo=datetime.timezone.utc), 'time_taken': 35827.0, 'time_delta': '9:57:07', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 612623153, 'number': 74884, 'closed': datetime.datetime(2021, 4, 9, 23, 12, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 9, 17, 32, 46, tzinfo=datetime.timezone.utc), 'time_taken': 20381.0, 'time_delta': '5:39:41', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 612277288, 'number': 74865, 'closed': datetime.datetime(2021, 4, 9, 11, 49, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 9, 8, 44, 41, tzinfo=datetime.timezone.utc), 'time_taken': 11079.0, 'time_delta': '3:04:39', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 610820733, 'number': 74757, 'closed': datetime.datetime(2021, 4, 7, 16, 55, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 7, 16, 46, 58, tzinfo=datetime.timezone.utc), 'time_taken': 490.0, 'time_delta': '0:08:10', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 608340993, 'number': 74468, 'closed': datetime.datetime(2021, 4, 3, 13, 30, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 3, 6, 41, 27, tzinfo=datetime.timezone.utc), 'time_taken': 24557.0, 'time_delta': '6:49:17', 'additions': 16, 'deletions': 0, 'state': 'closed'}, {'id': 607559628, 'number': 74368, 'closed': datetime.datetime(2021, 4, 1, 21, 36, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 1, 17, 31, 54, tzinfo=datetime.timezone.utc), 'time_taken': 14660.0, 'time_delta': '4:04:20', 'additions': 39, 'deletions': 4, 'state': 'closed'}, {'id': 603568946, 'number': 74175, 'closed': datetime.datetime(2021, 3, 30, 11, 40, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 30, 9, 54, 11, tzinfo=datetime.timezone.utc), 'time_taken': 6402.0, 'time_delta': '1:46:42', 'additions': 31, 'deletions': 0, 'state': 'closed'}, {'id': 562082963, 'number': 69823, 'closed': datetime.datetime(2021, 1, 26, 23, 15, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 26, 22, 1, 21, tzinfo=datetime.timezone.utc), 'time_taken': 4448.0, 'time_delta': '1:14:08', 'additions': 5, 'deletions': 4, 'state': 'closed'}, {'id': 517918207, 'number': 64437, 'closed': datetime.datetime(2020, 11, 9, 18, 12, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 9, 17, 22, 4, tzinfo=datetime.timezone.utc), 'time_taken': 3042.0, 'time_delta': '0:50:42', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 517909655, 'number': 64436, 'closed': datetime.datetime(2020, 11, 9, 17, 38, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 9, 17, 7, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1865.0, 'time_delta': '0:31:05', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 482509667, 'number': 60828, 'closed': datetime.datetime(2020, 9, 9, 6, 27, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 9, 5, 9, 24, tzinfo=datetime.timezone.utc), 'time_taken': 4657.0, 'time_delta': '1:17:37', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 481723554, 'number': 60775, 'closed': datetime.datetime(2020, 9, 8, 17, 24, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 8, 1, 59, 5, tzinfo=datetime.timezone.utc), 'time_taken': 55498.0, 'time_delta': '15:24:58', 'additions': 6, 'deletions': 8, 'state': 'closed'}, {'id': 475461197, 'number': 60324, 'closed': datetime.datetime(2020, 8, 28, 15, 36, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 28, 15, 7, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1721.0, 'time_delta': '0:28:41', 'additions': 9912, 'deletions': 0, 'state': 'closed'}, {'id': 458131221, 'number': 58760, 'closed': datetime.datetime(2020, 7, 29, 6, 30, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 29, 0, 51, 36, tzinfo=datetime.timezone.utc), 'time_taken': 20327.0, 'time_delta': '5:38:47', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 445634135, 'number': 57627, 'closed': datetime.datetime(2020, 7, 7, 20, 19, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 7, 19, 55, 41, tzinfo=datetime.timezone.utc), 'time_taken': 1444.0, 'time_delta': '0:24:04', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 434230303, 'number': 56290, 'closed': datetime.datetime(2020, 6, 19, 18, 14, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 15, 0, 47, 17, tzinfo=datetime.timezone.utc), 'time_taken': 408407.0, 'time_delta': '4 days, 17:26:47', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 431457896, 'number': 55950, 'closed': datetime.datetime(2020, 6, 9, 11, 6, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 9, 0, 0, tzinfo=datetime.timezone.utc), 'time_taken': 40012.0, 'time_delta': '11:06:52', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 423414977, 'number': 55321, 'closed': datetime.datetime(2020, 5, 27, 3, 7, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 26, 19, 29, tzinfo=datetime.timezone.utc), 'time_taken': 27501.0, 'time_delta': '7:38:21', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 416395677, 'number': 54597, 'closed': datetime.datetime(2020, 5, 18, 14, 7, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 11, 23, 11, 30, tzinfo=datetime.timezone.utc), 'time_taken': 572164.0, 'time_delta': '6 days, 14:56:04', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 416394654, 'number': 54595, 'closed': datetime.datetime(2020, 5, 18, 14, 6, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 11, 23, 8, 2, tzinfo=datetime.timezone.utc), 'time_taken': 572336.0, 'time_delta': '6 days, 14:58:56', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 416030260, 'number': 54565, 'closed': datetime.datetime(2020, 5, 11, 21, 45, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 11, 11, 0, 20, tzinfo=datetime.timezone.utc), 'time_taken': 38692.0, 'time_delta': '10:44:52', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 331498546, 'number': 45722, 'closed': datetime.datetime(2019, 10, 24, 21, 38, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 23, 11, 49, 47, tzinfo=datetime.timezone.utc), 'time_taken': 121722.0, 'time_delta': '1 day, 9:48:42', 'additions': 43, 'deletions': 11, 'state': 'closed'}, {'id': 286269687, 'number': 40791, 'closed': datetime.datetime(2019, 6, 25, 14, 49, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 7, 17, 16, 21, tzinfo=datetime.timezone.utc), 'time_taken': 1546398.0, 'time_delta': '17 days, 21:33:18', 'additions': 83, 'deletions': 0, 'state': 'closed'}]"

