pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
979158403,[ARM plugin] GSoC 2022: Android demo application for ARM CPUs,"This is the Android demo application using [arm_plugin](https://github.com/openvinotoolkit/openvino_contrib/tree/master/modules/arm_plugin) to reach inference engine.

Using object detection model and recognition model to locate and recognize attributes of detected vehicles.",True,382,https://api.github.com/repos/openvinotoolkit/openvino_contrib/pulls/382,https://github.com/openvinotoolkit/openvino_contrib/pull/382,closed,667,0,13,20,31,23,0,0,[],2022-06-25 22:58:25+00:00,2022-09-28 19:15:12+00:00,8194607.0,"94 days, 20:16:47","[{'comment_id': 964697103, 'comment_body': 'There is no difference between FP16 and FP32 for CPU - the plugin will convert it automatically to FP32. So no need for two columns.', 'comment_created': datetime.datetime(2022, 9, 7, 10, 57, 41, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 964697685, 'comment_body': ""I recommend download only FP16 model because it's just smaller but gives same accuracy and performance."", 'comment_created': datetime.datetime(2022, 9, 7, 10, 58, 21, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 964698533, 'comment_body': 'Model downloading step is required before.', 'comment_created': datetime.datetime(2022, 9, 7, 10, 59, 19, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 964700353, 'comment_body': 'Any performance benchmark is a quite sensitive point. It requires an info about hardware/software setup at least. So we recommend not to provide the numbers.', 'comment_created': datetime.datetime(2022, 9, 7, 11, 0, 30, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 966168298, 'comment_body': 'Thanks, I will modify it.', 'comment_created': datetime.datetime(2022, 9, 8, 16, 21, 5, tzinfo=datetime.timezone.utc), 'commenter': 'IRONICBo', 'type': 'User'}, {'comment_id': 966168755, 'comment_body': 'Thanks, I have replace FP16 to FP32.', 'comment_created': datetime.datetime(2022, 9, 8, 16, 21, 33, tzinfo=datetime.timezone.utc), 'commenter': 'IRONICBo', 'type': 'User'}, {'comment_id': 966170452, 'comment_body': 'Thanks, I will adjust order.', 'comment_created': datetime.datetime(2022, 9, 8, 16, 23, 18, tzinfo=datetime.timezone.utc), 'commenter': 'IRONICBo', 'type': 'User'}, {'comment_id': 966171168, 'comment_body': 'Thanks, I will remove it.', 'comment_created': datetime.datetime(2022, 9, 8, 16, 24, 3, tzinfo=datetime.timezone.utc), 'commenter': 'IRONICBo', 'type': 'User'}, {'comment_id': 968058917, 'comment_body': 'Do we really need Proguard in this demo?', 'comment_created': datetime.datetime(2022, 9, 12, 7, 16, 15, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 968062980, 'comment_body': 'SSD MobileNet already applies NMS internally on the last layer. Does this method change results in your experiments?', 'comment_created': datetime.datetime(2022, 9, 12, 7, 21, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 968133003, 'comment_body': 'Refer to this notebook: https://github.com/openvinotoolkit/openvino_notebooks/blob/main/notebooks/401-object-detection-webcam/401-object-detection.ipynb.\r\n\r\nI tried some other models, like yolo, which does not contains NMS function, so I added this function for adapting other models, but it has no major impact on SSD MobileNet.\r\n\r\n<img width=""731"" alt=""image"" src=""https://user-images.githubusercontent.com/47499836/189607822-3a6d6b4b-44cb-4933-8725-c18a2dfd1966.png"">\r\n', 'comment_created': datetime.datetime(2022, 9, 12, 8, 32, 43, tzinfo=datetime.timezone.utc), 'commenter': 'IRONICBo', 'type': 'User'}, {'comment_id': 968167836, 'comment_body': 'In this demo I did not make rules for compression, I have removed Proguard in the new commit.', 'comment_created': datetime.datetime(2022, 9, 12, 9, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'IRONICBo', 'type': 'User'}, {'comment_id': 968178964, 'comment_body': ""That's right, only YOLO with multiple outputs require extra NMS (like YOLOv3 and newer). Ok, let's keep NMS in the sample at least for a demonstration of how to use it. Anyway OpenCV is used."", 'comment_created': datetime.datetime(2022, 9, 12, 9, 18, 14, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 968188626, 'comment_body': 'Println probably ignored by logcat. Take a look at `Logger`:\r\n\r\n```java\r\nprivate static final Logger logger = Logger.getLogger(MainActivity.class.getName());\r\n//...\r\nlogger.info(""load ok..."");\r\n```', 'comment_created': datetime.datetime(2022, 9, 12, 9, 27, 38, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 968271742, 'comment_body': 'Please just use `Core.loadNativeLibs()`', 'comment_created': datetime.datetime(2022, 9, 12, 10, 58, 5, tzinfo=datetime.timezone.utc), 'commenter': 'likholat', 'type': 'User'}, {'comment_id': 968278625, 'comment_body': 'In case of an error, you need to know which exactly library could not be loaded, so maybe:\r\n```java\r\nLog.e(""UnsatisfiedLinkError"",\r\n                    ""Failed to load native OpenCV library\\n"" + e.toString());\r\n```\r\nand `Core.loadNativeLibs()` to load OpenVINO', 'comment_created': datetime.datetime(2022, 9, 12, 11, 4, 27, tzinfo=datetime.timezone.utc), 'commenter': 'likholat', 'type': 'User'}, {'comment_id': 968316418, 'comment_body': 'Thanks, I used the `Log` class uniformly. :)', 'comment_created': datetime.datetime(2022, 9, 12, 11, 50, 34, tzinfo=datetime.timezone.utc), 'commenter': 'IRONICBo', 'type': 'User'}, {'comment_id': 968316616, 'comment_body': 'Thanks, I have updated it.', 'comment_created': datetime.datetime(2022, 9, 12, 11, 50, 48, tzinfo=datetime.timezone.utc), 'commenter': 'IRONICBo', 'type': 'User'}, {'comment_id': 968316891, 'comment_body': 'Thanks! :)', 'comment_created': datetime.datetime(2022, 9, 12, 11, 51, 8, tzinfo=datetime.timezone.utc), 'commenter': 'IRONICBo', 'type': 'User'}, {'comment_id': 968324705, 'comment_body': ""You don't need `try-catch` for this method. Please see\r\n\r\nhttps://github.com/openvinotoolkit/openvino_contrib/blob/fd2ac364435757d23a9b3e91d67235b5e6555bf9/modules/java_api/samples/face_detection_java_sample/Main.java#L28"", 'comment_created': datetime.datetime(2022, 9, 12, 11, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'likholat', 'type': 'User'}, {'comment_id': 968354950, 'comment_body': ""Not sure that it works in Android. I'm also trying some Android demo locally and only `System.loadLibrary` works."", 'comment_created': datetime.datetime(2022, 9, 12, 12, 28, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 968527777, 'comment_body': 'I tried it again and delete the `System.loadLibrary` function, the message shows that `No implementation found for long org.intel.openvino.Core.GetCore1`, the error message seems like https://github.com/openvinotoolkit/openvino_contrib/issues/420#issuecomment-1239403278. I think the reason caused by the `ClassLoader`.', 'comment_created': datetime.datetime(2022, 9, 12, 14, 57, 22, tzinfo=datetime.timezone.utc), 'commenter': 'IRONICBo', 'type': 'User'}, {'comment_id': 968694028, 'comment_body': 'Ok, lets keep ```System.loadLibrary(Core.NATIVE_LIBRARY_NAME);```\r\nSorry for bad advise', 'comment_created': datetime.datetime(2022, 9, 12, 17, 19, 48, tzinfo=datetime.timezone.utc), 'commenter': 'likholat', 'type': 'User'}]","[{'commit_sha': '5f2727485e3fdec48adc5d763af81eab95e4f131', 'committer_username': 'IRONICBo', 'committer_name': 'Asklv', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 10, 14, 15, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92a43b5f483166208e33db77303bda3c141ab7ac', 'committer_username': 'IRONICBo', 'committer_name': 'Asklv', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 10, 14, 15, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3849d8868ca3963d888862b7d01706e9cf8ac9d', 'committer_username': 'IRONICBo', 'committer_name': 'Asklv', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 10, 14, 15, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93ea90bf8f9cbe73cf15e86bffee849b7410896d', 'committer_username': 'IRONICBo', 'committer_name': 'Asklv', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 10, 14, 15, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f075d4b53badb37501387a748bcce2f2fdbcae9', 'committer_username': 'IRONICBo', 'committer_name': 'Asklv', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 10, 14, 15, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '110daec7f6796d323bef18606905dab18409741f', 'committer_username': 'IRONICBo', 'committer_name': 'Asklv', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 10, 14, 15, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30d3de5a56996130e145bf3847b91ae4d4067b7f', 'committer_username': 'IRONICBo', 'committer_name': 'Asklv', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 10, 14, 15, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8575acd22d9fac4131474b85b6619a6ad5fe0e5', 'committer_username': 'IRONICBo', 'committer_name': 'Asklv', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 10, 14, 15, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bae434d037419d6b81c8da9505aa633799a53ebd', 'committer_username': 'IRONICBo', 'committer_name': 'Asklv', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 10, 14, 15, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffd01feef385c3077d8df69d1a2523e8d736bb84', 'committer_username': 'IRONICBo', 'committer_name': 'Asklv', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 10, 14, 15, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44708b1565b161b6c6abd72a9b4fadc6195fc1f8', 'committer_username': 'IRONICBo', 'committer_name': 'Asklv', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 10, 14, 15, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a94e577328013bee021d5ce7fe81952289449fc6', 'committer_username': 'IRONICBo', 'committer_name': 'Asklv', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 10, 14, 15, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '107f70ef95efc63283f7c1ba4fd962a11e141711', 'committer_username': 'IRONICBo', 'committer_name': 'Asklv', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 10, 14, 15, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a51ce0a80a388dd03e0e67bec47f2202fbefddf2', 'committer_username': 'IRONICBo', 'committer_name': 'Asklv', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 10, 14, 15, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce53a515d28fe1f661b66a09ba6c9d90ff532a2b', 'committer_username': 'IRONICBo', 'committer_name': 'Asklv', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 10, 14, 15, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba1a6e1492f87f01459197ce218d5a71a192b594', 'committer_username': 'IRONICBo', 'committer_name': 'Asklv', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 10, 14, 15, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd52b9e3e5a5b80fd93b33a34205053723bf91f9e', 'committer_username': 'IRONICBo', 'committer_name': 'Asklv', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 10, 14, 15, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f82bbaec392eb58a91ae7355eecd12efa646f32', 'committer_username': 'IRONICBo', 'committer_name': 'Asklv', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 10, 14, 15, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1aad354c7dd82579a659db18fdef8c7ed5982207', 'committer_username': 'IRONICBo', 'committer_name': 'Asklv', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 10, 14, 15, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '782ffac3fa5c6a2e930d828224066ff6cca74d9d', 'committer_username': 'IRONICBo', 'committer_name': 'Asklv', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 10, 14, 15, 8, tzinfo=datetime.timezone.utc)}]",Asklv,47499836,,User,,495,,49,18

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
309381188,openvino_contrib,openvinotoolkit/openvino_contrib,C++,143,103,31,89,889,14,17,4,"[{'id': 979158403, 'number': 382, 'closed': datetime.datetime(2022, 9, 28, 19, 15, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 25, 22, 58, 25, tzinfo=datetime.timezone.utc), 'time_taken': 8194607.0, 'time_delta': '94 days, 20:16:47', 'additions': 667, 'deletions': 0, 'state': 'closed'}]"
