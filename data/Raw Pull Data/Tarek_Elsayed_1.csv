pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1006540834,Airbnb price prediction using regression methods,,True,200,https://api.github.com/repos/mlpack/examples/pulls/200,https://github.com/mlpack/examples/pull/200,closed,2490,0,2,9,7,14,2,0,"[{'name': 'c: examples'}, {'name': 'notebook'}]",2022-07-24 13:01:49+00:00,2022-07-28 17:09:36+00:00,360467.0,"4 days, 4:07:47","[{'comment_id': 928479593, 'comment_body': ""<p>Can you add a stop at the end of each sentence, see https://github.com/mlpack/mlpack/wiki/DesignGuidelines#comments for more details.</p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/mlpack/examples/pull/200/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='RESOLVED' data-cellIndex='8'/>"", 'comment_created': datetime.datetime(2022, 7, 25, 5, 23, 8, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 928479594, 'comment_body': ""<p>Can you add a comment that explains why this columns are unnecessary.</p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/mlpack/examples/pull/200/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='RESOLVED' data-cellIndex='23'/>"", 'comment_created': datetime.datetime(2022, 7, 25, 5, 23, 8, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 928479595, 'comment_body': ""<p>Let's remove <code>bullet points</code> from the sentence.</p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/mlpack/examples/pull/200/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='RESOLVED' data-cellIndex='36'/>"", 'comment_created': datetime.datetime(2022, 7, 25, 5, 23, 8, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 928479597, 'comment_body': ""<p>Missing stop at the end.</p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/mlpack/examples/pull/200/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='RESOLVED' data-cellIndex='42'/>"", 'comment_created': datetime.datetime(2022, 7, 25, 5, 23, 9, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 928479598, 'comment_body': ""<p>Missing stop at the end.</p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/mlpack/examples/pull/200/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='RESOLVED' data-cellIndex='49'/>"", 'comment_created': datetime.datetime(2022, 7, 25, 5, 23, 9, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 928479599, 'comment_body': ""<p><code>basic</code> -&gt; <code>basically</code>?</p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/mlpack/examples/pull/200/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='RESOLVED' data-cellIndex='54'/>"", 'comment_created': datetime.datetime(2022, 7, 25, 5, 23, 9, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 928479600, 'comment_body': ""<p>Missing stop at the end.</p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/mlpack/examples/pull/200/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='RESOLVED' data-cellIndex='58'/>"", 'comment_created': datetime.datetime(2022, 7, 25, 5, 23, 9, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 928479605, 'comment_body': ""<p>Since we have the lon,lat do you think we could put a map here and plot the values on it?</p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/mlpack/examples/pull/200/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='RESOLVED' data-cellIndex='63'/>"", 'comment_created': datetime.datetime(2022, 7, 25, 5, 23, 9, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 928479606, 'comment_body': ""<p>Can you plot the different model results, would be interesting to see them side by side.</p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/mlpack/examples/pull/200/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='OPEN' data-cellIndex='98'/>"", 'comment_created': datetime.datetime(2022, 7, 25, 5, 23, 9, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 928692713, 'comment_body': '<p>plot values of which column?</p><p> </p><p>I wanted to show on map that Manhattan and Brooklyn have higher prices on average (using hue).  </p><p>I could only think of plotting 2 different maps, first one to show different neighborhood groups clustered and the second one to show the prices of listings on map.</p>', 'comment_created': datetime.datetime(2022, 7, 25, 10, 4, 5, tzinfo=datetime.timezone.utc), 'commenter': 'tareknaser', 'type': 'User'}, {'comment_id': 928798393, 'comment_body': 'RIght, I was thinking you could plot the values on an actual map, something like https://www.nycgo.com/images/uploads/maps-guides_interactive-map.jpg.', 'comment_created': datetime.datetime(2022, 7, 25, 11, 55, 8, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 928866842, 'comment_body': '<p>Yes, will do</p><p> </p>', 'comment_created': datetime.datetime(2022, 7, 25, 13, 10, 55, tzinfo=datetime.timezone.utc), 'commenter': 'tareknaser', 'type': 'User'}, {'comment_id': 928868244, 'comment_body': '<p>Can I predict log price instead of price</p><p>It gives better results because its distribution is normal </p><p> </p>', 'comment_created': datetime.datetime(2022, 7, 25, 13, 12, 15, tzinfo=datetime.timezone.utc), 'commenter': 'tareknaser', 'type': 'User'}, {'comment_id': 930227124, 'comment_body': 'Yes, I like the idea.', 'comment_created': datetime.datetime(2022, 7, 26, 17, 15, 43, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}]","[{'commit_sha': 'c8059d93220c4d50d13822e1674eeea5eb105b06', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb3300b5daee8288b7d0218fa7e11911e1a445e5', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10306d357f96e1ae20b513ede7073f25bb6fd2ad', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e07e4cf94a2cb1e2f7a9443d8799fd91dd62c2f0', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c83e12a7b058b29543833673bfc100d083aa8557', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c62c07cf7988cf88d9d16168308c2997411bb09f', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfb0931bb6ad10e3e3aa9b53fe5e93ed715169bd', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c83a94b0fd2a37427b34517947775feca5ff3a63', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4397d71eca10a9c5a4e22614d5057f29e4a788b1', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}]",Tarek Elsayed,60650661,,User,,31,,3,8
1019524820,Rain in Australia classification ,,True,202,https://api.github.com/repos/mlpack/examples/pulls/202,https://github.com/mlpack/examples/pull/202,closed,3129,0,1,11,4,11,1,0,[{'name': 'notebook'}],2022-08-07 11:14:05+00:00,2022-08-16 14:38:12+00:00,789847.0,"9 days, 3:24:07","[{'comment_id': 940707781, 'comment_body': '<pre class=""ql-syntax"" spellcheck=""false"">Line #2.        data[col + \'_sin\'] = np.sin(2 * np.pi * data[col]/max_val)\n</pre><p> </p><p>Can you use a space between each operator.</p>\n<br/>\n\n _Reply via <a href=\'https://app.reviewnb.com/mlpack/examples/pull/202/discussion/\'>ReviewNB</a>_ <div id=\'ReviewNBCommentContext-DoNotDelete\' style=\'display:none\' data-state=\'RESOLVED\' data-cellIndex=\'27\'/>', 'comment_created': datetime.datetime(2022, 8, 8, 22, 12, 26, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 940707785, 'comment_body': ""<p>You might want to look into https://github.com/mlpack/mlpack/blob/91ab39da422293742f7fc89056224f6152018bc7/src/mlpack/methods/preprocess/preprocess_imputer_main.cpp? Would be great if we could use mlpack's <code>preprocess_imputer </code>for this.</p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/mlpack/examples/pull/202/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='RESOLVED' data-cellIndex='42'/>"", 'comment_created': datetime.datetime(2022, 8, 8, 22, 12, 27, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 940707786, 'comment_body': ""<p>It would be interesting to create a balanced dataset and see how the model forms in this case, e.g. by under-sampling the class 0. Like looking at the results above, didn't really learn class 1.</p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/mlpack/examples/pull/202/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='RESOLVED' data-cellIndex='147'/>"", 'comment_created': datetime.datetime(2022, 8, 8, 22, 12, 27, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 942798622, 'comment_body': '<p>I can\'t seem to find the documentation for this function. </p><p>Also, when I try to use it, I get this error:</p><pre class=""ql-syntax"" spellcheck=""false"">module \'mlpack\' has no attribute \'preprocess_imputer\'\n</pre><p> </p>', 'comment_created': datetime.datetime(2022, 8, 10, 18, 57, 37, tzinfo=datetime.timezone.utc), 'commenter': 'tareknaser', 'type': 'User'}, {'comment_id': 942849804, 'comment_body': ""Ahh, I see we don't have the python bindings for this one -- https://github.com/mlpack/mlpack/blob/master/src/mlpack/methods/preprocess/CMakeLists.txt#L48. In this case I don't see an easy way to use it."", 'comment_created': datetime.datetime(2022, 8, 10, 19, 52, 33, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 942869504, 'comment_body': ""I did that and it actually helped a lot in the results.\r\nThis is a new concept to me. I read about it yesterday. didn't know that kind of problem existed to be honest."", 'comment_created': datetime.datetime(2022, 8, 10, 20, 18, 1, tzinfo=datetime.timezone.utc), 'commenter': 'tareknaser', 'type': 'User'}, {'comment_id': 945053561, 'comment_body': '<pre class=""ql-syntax"" spellcheck=""false"">Line #1.    pd.set_option(\'display.max_columns\', None)          #to display all columns\n</pre><p>nit:</p><pre class=""ql-syntax"" spellcheck=""false""> pd.set_option(\'display.max_columns\', None) # To display all columns.\n</pre><p> </p>\n<br/>\n\n _Reply via <a href=\'https://app.reviewnb.com/mlpack/examples/pull/202/discussion/\'>ReviewNB</a>_ <div id=\'ReviewNBCommentContext-DoNotDelete\' style=\'display:none\' data-state=\'RESOLVED\' data-cellIndex=\'14\'/>', 'comment_created': datetime.datetime(2022, 8, 13, 3, 43, 40, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 945053567, 'comment_body': '<pre class=""ql-syntax"" spellcheck=""false"">Line #1.    for i in num_cols:\n</pre><p> </p><p>nit : You can remove the empty lines</p><p>for i in num_cols:</p><p>&nbsp;&nbsp;fig, axs = plt.subplots(1, 2, figsize=(15, 3))</p><p>&nbsp;&nbsp;sns.histplot(data = df, x = i, bins = 20, kde = True, ax=axs[0]);</p><p>&nbsp;&nbsp;sns.boxplot(data = df, x = i, ax = axs[1], color = base_color, fliersize=1);</p>\n<br/>\n\n _Reply via <a href=\'https://app.reviewnb.com/mlpack/examples/pull/202/discussion/\'>ReviewNB</a>_ <div id=\'ReviewNBCommentContext-DoNotDelete\' style=\'display:none\' data-state=\'RESOLVED\' data-cellIndex=\'59\'/>', 'comment_created': datetime.datetime(2022, 8, 13, 3, 43, 41, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 945053568, 'comment_body': ""<p>nit: Can we create a function that takes in parameters like df, hue, x and y that will plot the graph. And we call twice with different params to get these graphs</p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/mlpack/examples/pull/202/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='RESOLVED' data-cellIndex='84'/>"", 'comment_created': datetime.datetime(2022, 8, 13, 3, 43, 41, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 945053571, 'comment_body': '<pre class=""ql-syntax"" spellcheck=""false"">Line #2.    \n</pre><p>nit: You can remove this empty line</p>\n<br/>\n\n _Reply via <a href=\'https://app.reviewnb.com/mlpack/examples/pull/202/discussion/\'>ReviewNB</a>_ <div id=\'ReviewNBCommentContext-DoNotDelete\' style=\'display:none\' data-state=\'RESOLVED\' data-cellIndex=\'101\'/>', 'comment_created': datetime.datetime(2022, 8, 13, 3, 43, 41, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 945119163, 'comment_body': 'Thanks for the review. I fixed the issues.', 'comment_created': datetime.datetime(2022, 8, 13, 9, 37, 38, tzinfo=datetime.timezone.utc), 'commenter': 'tareknaser', 'type': 'User'}]","[{'commit_sha': 'ea7e833bf67f0ffe967ad179a16628de2f3a1a38', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e265ccfc943ee3bb891522ced071fb59449b1450', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6a1280eec745071e3b7ed8df9eaa7c29b0a5e5e', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '497ed932890d3c3a5b83129a54b3f7b4a8092408', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f546a632f007d6bec567c04e6680168df5f5bfcf', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05a74a93e874b7090cbea444ed4d8a050281ab3e', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd7de1e5f142d45ba108b32b835bfafc366e13d8', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9945371c1f6f0318ece354bffafe875e847be4d5', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52132531c6c691c38e4cfb5715402e7dee14e48d', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8520c49d2381fc557ab8e642a06374ae99994fcd', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28112361e002cc2dd17f4911fa846f6692a2e1ab', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}]",Tarek Elsayed,60650661,,User,,31,,3,8
1028023008, Customer personality clustering,,True,205,https://api.github.com/repos/mlpack/examples/pulls/205,https://github.com/mlpack/examples/pull/205,closed,3788,0,1,3,3,0,1,0,[{'name': 'notebook'}],2022-08-16 20:01:51+00:00,2022-08-22 11:29:34+00:00,487663.0,"5 days, 15:27:43",[],"[{'commit_sha': '1b44d08c6e71d4a1f3d95fbab10447faf41bbb3a', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '924c779b50a4b8071a140a9614d4f1357cad1e94', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5678e7c3e86f3e56b35048ae553ed17e7e0c77d3', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}]",Tarek Elsayed,60650661,,User,,31,,3,8
1033608681,Modifying the imputer function to be usable in python,"- Changing the function to take the matrix as input instead of the filename
- Updated the tests to be compatible with python",False,3260,https://api.github.com/repos/mlpack/mlpack/pulls/3260,https://github.com/mlpack/mlpack/pull/3260,closed,50,35,4,26,5,5,4,0,"[{'name': 's: stale'}, {'name': 's: needs review'}, {'name': 'c: automatic bindings'}, {'name': 't: added feature'}]",2022-08-23 03:56:38+00:00,2022-12-16 11:53:31+00:00,9964613.0,"115 days, 7:56:53","[{'comment_id': 953137234, 'comment_body': 'Just to port the comment from #3258, I think that this is incorrect---the imputer is actually working on the matrix `input`, and `output` is never set or used.  So I suspect this should be `std::move(input)`.', 'comment_created': datetime.datetime(2022, 8, 23, 21, 48, 28, tzinfo=datetime.timezone.utc), 'commenter': 'rcurtin', 'type': 'User'}, {'comment_id': 953137648, 'comment_body': 'Once you called `std::move(inputData)` earlier, `inputData` will now be empty.  So if you are going to use `inputData` multiple times in one test, just call `SetInputParam(""input"", inputData)` instead, so that `inputData` is copied instead of moved. :+1:', 'comment_created': datetime.datetime(2022, 8, 23, 21, 49, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rcurtin', 'type': 'User'}, {'comment_id': 956768514, 'comment_body': '```suggestion\r\n  REQUIRE(params.Get<arma::mat>(""output"").n_cols == inputData.n_cols);\r\n```\r\n\r\nOutput is of type `arma::mat` and not `arma::Row<size_t>`.', 'comment_created': datetime.datetime(2022, 8, 28, 19, 0, 6, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 956845909, 'comment_body': 'Thanks', 'comment_created': datetime.datetime(2022, 8, 29, 2, 29, 39, tzinfo=datetime.timezone.utc), 'commenter': 'tareknaser', 'type': 'User'}, {'comment_id': 963179950, 'comment_body': '```suggestion\r\n  arma::mat input = std::move(params.Get<arma::mat>(""input""));\r\n```\r\n\r\nif we take a look at the output:\r\n\r\n```\r\n[WARN ] --dimension is not specified; the imputation will be applied to all dimensions.\r\n[WARN ] The file does not contain any user-defined missing variables. The program did not perform and\r\n```\r\n\r\nwe can see `output` is never set since we can\'t find any of the `nans`.\r\n', 'comment_created': datetime.datetime(2022, 9, 6, 1, 29, 8, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}]","[{'commit_sha': '0f247951b55dde751d1b249776d62ae99f8e910a', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee3a35f636417c4d116395e635d7dc5a6e2707e2', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'feb3aa357b7f43dd750e9e8d78beae9498e268f8', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca7af6491ba2008a3f13f1eb01ef9abdd541b1ee', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b2c566f3a44e2fa738d1aa3bc8c6c60e1d8d907', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f5fea3b3e545ad719bba19e65f7aae69fc1ee41', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c62a14d2b65d328ec99317c74d13c0e7216d5fa', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f0363424abe2abcf0813208350570b1bc97f58f', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c82a480dbb634eac736921d7d870f1c63fb90e92', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a81231f5b89218d85450ecb9bca67ce35a33dc0', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07329c02282614553d2e31530975ecae4500c73d', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '337a09f75934887c0a96777386960e38cf4b2018', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65911932f3857b5bea46194e6d700727e5a66f3d', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a149cfed335a68e37dbef27a69087b2a6596756d', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03046eae3dfcbc2599aa293fbfb564a61e60e08a', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7056464c425ea5c5641ae76b1cba4a046abc8d0', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57c3fb0d0182cbe65d45c85be50bc56923da1448', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f60e72519386dfa1c48e4697fdf872fa48091be2', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e64f07e2653d356773765de92396a93d886a8eb6', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edfad6c79c6802d6a63b8bd65eaf22254d017a87', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c93616e99e8f8919a16442016e31a9b4a299eab5', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d375d2a3dc50417d94748980594636a407afe09', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbcbf62e03fd14815f848d3432a30e6ace159603', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25e7b6f2a1c35d1f2e94bc6b05679dd0ff6435bc', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15eaf593ad25ea95641c7a4dc69dfdf26d3de81b', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52cfb9434276c4373e769be617e13d0058d11127', 'committer_username': 'tareknaser', 'committer_name': 'Tarek Elsayed', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 4, 10, 45, 56, tzinfo=datetime.timezone.utc)}]",Tarek Elsayed,60650661,,User,,31,,3,8

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
92665356,examples,mlpack/examples,Jupyter Notebook,89,116,24,37,1035,5,1,2,"[{'id': 1557120831, 'number': 216, 'closed': datetime.datetime(2023, 11, 25, 13, 18, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 14, 19, 54, 2, tzinfo=datetime.timezone.utc), 'time_taken': 3605091.0, 'time_delta': '41 days, 17:24:51', 'additions': 230, 'deletions': 0, 'state': 'closed'}, {'id': 1475016739, 'number': 214, 'closed': datetime.datetime(2023, 9, 4, 3, 45, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 14, 19, 56, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1756112.0, 'time_delta': '20 days, 7:48:32', 'additions': 462, 'deletions': 0, 'state': 'closed'}, {'id': 1028023008, 'number': 205, 'closed': datetime.datetime(2022, 8, 22, 11, 29, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 16, 20, 1, 51, tzinfo=datetime.timezone.utc), 'time_taken': 487663.0, 'time_delta': '5 days, 15:27:43', 'additions': 3788, 'deletions': 0, 'state': 'closed'}, {'id': 1019524820, 'number': 202, 'closed': datetime.datetime(2022, 8, 16, 14, 38, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 7, 11, 14, 5, tzinfo=datetime.timezone.utc), 'time_taken': 789847.0, 'time_delta': '9 days, 3:24:07', 'additions': 3129, 'deletions': 0, 'state': 'closed'}, {'id': 1008934080, 'number': 201, 'closed': datetime.datetime(2022, 7, 28, 13, 2, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 26, 20, 26, 33, tzinfo=datetime.timezone.utc), 'time_taken': 146165.0, 'time_delta': '1 day, 16:36:05', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1006540834, 'number': 200, 'closed': datetime.datetime(2022, 7, 28, 17, 9, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 24, 13, 1, 49, tzinfo=datetime.timezone.utc), 'time_taken': 360467.0, 'time_delta': '4 days, 4:07:47', 'additions': 2490, 'deletions': 0, 'state': 'closed'}, {'id': 887383974, 'number': 196, 'closed': datetime.datetime(2022, 4, 2, 19, 57, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 23, 15, 48, 13, tzinfo=datetime.timezone.utc), 'time_taken': 878941.0, 'time_delta': '10 days, 4:09:01', 'additions': 1462, 'deletions': 0, 'state': 'closed'}, {'id': 885279392, 'number': 195, 'closed': datetime.datetime(2022, 3, 23, 15, 42, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 21, 20, 22, 24, tzinfo=datetime.timezone.utc), 'time_taken': 156013.0, 'time_delta': '1 day, 19:20:13', 'additions': 1525, 'deletions': 0, 'state': 'closed'}]"
28149409,mlpack,mlpack/mlpack,C++,1592,4984,183,321,30199,27,11,16,"[{'id': 1464419703, 'number': 3520, 'closed': datetime.datetime(2023, 9, 1, 14, 27, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 7, 1, 32, 46, tzinfo=datetime.timezone.utc), 'time_taken': 2206473.0, 'time_delta': '25 days, 12:54:33', 'additions': 790, 'deletions': 277, 'state': 'closed'}, {'id': 1448829426, 'number': 3515, 'closed': datetime.datetime(2023, 8, 1, 20, 38, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 25, 17, 14, 43, tzinfo=datetime.timezone.utc), 'time_taken': 617020.0, 'time_delta': '7 days, 3:23:40', 'additions': 546, 'deletions': 349, 'state': 'closed'}, {'id': 1424906027, 'number': 3512, 'closed': datetime.datetime(2023, 7, 21, 14, 31, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 7, 16, 10, 58, tzinfo=datetime.timezone.utc), 'time_taken': 1203632.0, 'time_delta': '13 days, 22:20:32', 'additions': 647, 'deletions': 1, 'state': 'closed'}, {'id': 1400087346, 'number': 3499, 'closed': datetime.datetime(2023, 7, 1, 15, 55, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 20, 15, 28, 16, tzinfo=datetime.timezone.utc), 'time_taken': 952011.0, 'time_delta': '11 days, 0:26:51', 'additions': 171, 'deletions': 7, 'state': 'closed'}, {'id': 1386308542, 'number': 3494, 'closed': datetime.datetime(2023, 6, 20, 12, 4, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 9, 14, 36, 42, tzinfo=datetime.timezone.utc), 'time_taken': 941249.0, 'time_delta': '10 days, 21:27:29', 'additions': 622, 'deletions': 1, 'state': 'closed'}, {'id': 1116694782, 'number': 3307, 'closed': datetime.datetime(2023, 3, 16, 0, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 9, 21, 31, 59, tzinfo=datetime.timezone.utc), 'time_taken': 10898641.0, 'time_delta': '126 days, 3:24:01', 'additions': 972, 'deletions': 789, 'state': 'closed'}, {'id': 1033608681, 'number': 3260, 'closed': datetime.datetime(2022, 12, 16, 11, 53, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 23, 3, 56, 38, tzinfo=datetime.timezone.utc), 'time_taken': 9964613.0, 'time_delta': '115 days, 7:56:53', 'additions': 50, 'deletions': 35, 'state': 'closed'}, {'id': 1033279932, 'number': 3259, 'closed': datetime.datetime(2022, 8, 23, 3, 56, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 22, 19, 58, 18, tzinfo=datetime.timezone.utc), 'time_taken': 28716.0, 'time_delta': '7:58:36', 'additions': 13, 'deletions': 18, 'state': 'closed'}, {'id': 1031383847, 'number': 3258, 'closed': datetime.datetime(2022, 8, 23, 3, 57, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 19, 16, 59, 22, tzinfo=datetime.timezone.utc), 'time_taken': 298662.0, 'time_delta': '3 days, 10:57:42', 'additions': 8, 'deletions': 13, 'state': 'closed'}]"
