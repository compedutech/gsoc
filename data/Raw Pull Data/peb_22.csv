pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1421698930,feat âœ¨: make the scan loop asynchronous,"## Description

This issue proposes to make the main scan loop asynchronous. This will allow the scanner to continue scanning other resources while it is waiting for the results of a long-running operation. This will improve the performance of the scanner and make it more responsive to user input.

![image](https://github.com/google/gcp_scanner/assets/77539004/c27324eb-2989-4005-8c72-8704bbf6fe59)

The scan loop would call the crawlers asynchronously.

![image](https://github.com/google/gcp_scanner/assets/77539004/cb09067f-33f2-47b3-b25b-bfc1241d436b)


## Changes 

- The main scan loop has been converted to an asynchronous function.
- The asyncio library has been used to manage the asynchronous execution of the scan loop.
- The await keyword has been used to wait for the results of long-running operations in all Crawlers, i.e., `request.execute()`

## Checklist

- [x] I have read and followed the contributing guidelines.
- [ ] I have tested my changes thoroughly and they work as expected.
- [ ] I have added necessary tests for the changes made.
- [ ] I have updated the documentation to reflect the changes made.
- [ ] My code follows the project's coding style and standards.
- [ ] I have added appropriate commit messages and comments for my changes.

## Additional Notes

I believe that the changes made to the main scan loop will improve the performance of the scanner. 

After #228, we can use the `asyncio.gather()` to achieve the similar task.",False,237,https://api.github.com/repos/google/gcp_scanner/pulls/237,https://github.com/google/gcp_scanner/pull/237,closed,145,91,28,4,10,1,0,0,[],2023-07-05 20:05:41+00:00,2023-07-07 22:54:47+00:00,182946.0,"2 days, 2:49:06","[{'comment_id': 1253710021, 'comment_body': ""@mshudrak This is the exact line of code where we need to await and make it asynchronous.\r\n\r\nThe problem that you got is similar to that of mine, i.e., the object (can be a list or dictionaries, since that is what we primarily return) can't await."", 'comment_created': datetime.datetime(2023, 7, 5, 22, 18, 16, tzinfo=datetime.timezone.utc), 'commenter': 'peb-peb', 'type': 'User'}]","[{'commit_sha': '54f58d51bfd44cdf716cdcfd1faa588db7637102', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97641309cb1845a62922ac955169f51fdad1508d', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '041d4521870fd4479cb31908945834396c26b325', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4afa5548af5653a2665c336a7e4308adf972e0fb', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}]",Harsh,77539004,,User,,36,,22,27
1460218970,feat: compute GCP projects parallelly,"## Description

- Parallelized GCP projects computation using the `multiprocessing.Pool()`.
- Improves tool runtime from ~120s to ~40s [66 % faster]. (for 3 projects running simultaneously each with a VM running on them)

## Changes Made

- `scanner.py` - shifted the main loop from `src/gcp_scanner/scanner.py` to here.
- `src/gcp_scanner/scanner.py` - make resource computation functions.
- `src/gcp_scanner/models.py` - make a `ProjectInfo` model to pass through each project iteration with required information for resource scanning.
- `src/gcp_scanner/arguments.py` - added the `worker_count` param to the CLI option.

## Checklist

- [x] implement `impersonation` over discovered service accounts.
- [ ] documentation for the above changes.
- [x] update relevant tests.


## Related Issues

#242 #245 

## Additional Notes

To run the above changes - `python3 scanner.py -o ../output -k ../output/sakeys -l INFO -wc 8`

**Screenshot for above implementation**-
![image](https://github.com/google/gcp_scanner/assets/77539004/954b6a1b-084b-4ea5-bc57-794e5e0aa741)
",True,265,https://api.github.com/repos/google/gcp_scanner/pulls/265,https://github.com/google/gcp_scanner/pull/265,closed,274,173,4,19,4,9,0,0,[],2023-08-02 18:03:44+00:00,2023-08-19 03:38:53+00:00,1416909.0,"16 days, 9:35:09","[{'comment_id': 1286344096, 'comment_body': 'Please follow our function definition guideline. We usually have parameter types and function description', 'comment_created': datetime.datetime(2023, 8, 7, 20, 12, 33, tzinfo=datetime.timezone.utc), 'commenter': 'mshudrak', 'type': 'User'}, {'comment_id': 1286344513, 'comment_body': 'no need for extra line', 'comment_created': datetime.datetime(2023, 8, 7, 20, 13, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mshudrak', 'type': 'User'}, {'comment_id': 1286345458, 'comment_body': ""I'd rephrase it to be just `Set limit for workers run in parallel`"", 'comment_created': datetime.datetime(2023, 8, 7, 20, 14, 27, tzinfo=datetime.timezone.utc), 'commenter': 'mshudrak', 'type': 'User'}, {'comment_id': 1286346502, 'comment_body': ""I'd rephrase to `A simple class to store project scan configuration`"", 'comment_created': datetime.datetime(2023, 8, 7, 20, 15, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mshudrak', 'type': 'User'}, {'comment_id': 1286353888, 'comment_body': ""I'd prefer that functionality to be implemented in this commit instead of just commenting it out. What we can basically do is to create a separate function that does impersonation and then call it from the loop starting at line 393. This way your build a list of available SAs and associated projects and scan them."", 'comment_created': datetime.datetime(2023, 8, 7, 20, 25, 56, tzinfo=datetime.timezone.utc), 'commenter': 'mshudrak', 'type': 'User'}, {'comment_id': 1286355253, 'comment_body': 'A short description is needed too.', 'comment_created': datetime.datetime(2023, 8, 7, 20, 27, 54, tzinfo=datetime.timezone.utc), 'commenter': 'mshudrak', 'type': 'User'}, {'comment_id': 1292524823, 'comment_body': 'So, we basically run two loops, first for the SA impersonation and the other for crawling.', 'comment_created': datetime.datetime(2023, 8, 12, 22, 26, 55, tzinfo=datetime.timezone.utc), 'commenter': 'peb-peb', 'type': 'User'}, {'comment_id': 1294193886, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 15, 5, 32, 51, tzinfo=datetime.timezone.utc), 'commenter': 'peb-peb', 'type': 'User'}, {'comment_id': 1298996193, 'comment_body': 'How do you know the context is not copied here? Are we working with the same context above? We need to make sure that it is actually updated.', 'comment_created': datetime.datetime(2023, 8, 19, 1, 56, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mshudrak', 'type': 'User'}]","[{'commit_sha': '5180b02c06df529161843ceb243fe9e90acb61cd', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf224e0f2d08db10155b4d51f08204eed131900c', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b91422c5ca4a9a3f1d0a76b6873754fa02b79a7', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88d92f88faca3ee31b1c0ef74815b336d251a5d0', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '826217c97c1933a9f662caec2949332a4d8e6efd', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e93262acc488c615759049ec07df02d884f0991', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8980ed037432e8cb5b39a24213bc803a2836e341', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d0c924ed8b15dcb64997586bdaac554c6249c6c', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ba0ab9195a66a181ef1e9591af9ececcd52c4e4', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '247dea8fabe634a2742ae38f262c0f3d51a87a8e', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4b2f81470a6f7e8ba830bd913fad206fe6689b2', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3c3f9fd0cb296dd9835293ff611a46982fe070c', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f9267f3e51b033e12d8e4db61b28d047cdac7b9', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d26d00d0896e51d63efb87c9a61d252947c3e90', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b627cd499912a71d475bb4a8221c3e267986c50', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46bec8d33df04ce0b13c445f88a33b276aadcea6', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28e3091b700d3d55849277b673f486b15e0f45fb', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2efeb0022c38c5fa197c1dd7be44279314bf8a12', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e12c3f1010b9ecc5e5ca510cec456ec5ec55ea34', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}]",Harsh,77539004,,User,,36,,22,27
1484753950,featâœ¨: add resource parallelization,"# Description

- Parallelized GCP resource computation using the `ThreadPoolExecutor()`.
- Improves tool runtime from ~37s to ~12s.

@mshudrak @ZetaTwo",True,269,https://api.github.com/repos/google/gcp_scanner/pulls/269,https://github.com/google/gcp_scanner/pull/269,closed,35,19,2,4,10,3,0,0,[],2023-08-22 13:18:44+00:00,2023-08-29 19:44:26+00:00,627942.0,"7 days, 6:25:42","[{'comment_id': 1308036954, 'comment_body': ""don't forget to add an option for user to choose number of threads."", 'comment_created': datetime.datetime(2023, 8, 28, 23, 1, 24, tzinfo=datetime.timezone.utc), 'commenter': 'mshudrak', 'type': 'User'}, {'comment_id': 1309050837, 'comment_body': ""Thanks for implementing that, why +4? Let's make it transparent for the user and give them full control of how many threads/processes they want to execute."", 'comment_created': datetime.datetime(2023, 8, 29, 15, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'mshudrak', 'type': 'User'}, {'comment_id': 1309098621, 'comment_body': ""![image](https://github.com/google/gcp_scanner/assets/77539004/c17f0f32-7618-45df-b5d5-2c1fb0c6a0b9)\r\n\r\nIt was because of this :point_up: . This was mentioned in the docs.\r\n\r\nhttps://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor\r\n\r\nI'll change it up to just `worker_count`."", 'comment_created': datetime.datetime(2023, 8, 29, 16, 42, 22, tzinfo=datetime.timezone.utc), 'commenter': 'peb-peb', 'type': 'User'}]","[{'commit_sha': '317ebeaccef1fb39e2695af605c14d695258329b', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d594da204ce92ab238383ba88d971994a86f2cb', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'caa031bf0cd8bd6a71b23a030039f4782e7e1629', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfc068618518f0ae1a65d5013db0a2c9a745da75', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}]",Harsh,77539004,,User,,36,,22,27
1389149248,refactor ðŸŽ¨: crawler/app services,"## Notes
closes #192 
ref to #153

1. fix absolute imports from `gcp_scanner. ...` to `src.gcp_scanner. ...`
2. refactored the `if` statements to `service_crawler_map`.

@mxmssh @0xDeva ",True,194,https://api.github.com/repos/google/gcp_scanner/pulls/194,https://github.com/google/gcp_scanner/pull/194,closed,90,21,4,5,1,8,0,0,[],2023-06-12 17:50:04+00:00,2023-06-16 00:20:59+00:00,282655.0,"3 days, 6:30:55","[{'comment_id': 1228009948, 'comment_body': ""```suggestion\r\nservice_crawler_map = {\r\n```\r\n\r\nI intentionally did not use this dict syntax because I think this method pre-instantiate all the Crawler objects even though I need only one at a time. \r\nBut by using the `if syntax` I think we don't pre-instantiate all the crawlers. We only instantiate the one which we need.\r\n\r\nI am not sure if python3 does any kind of optimization while instantiating objects inside a dict. If these objects are `lazy instantiated` then I don't have any problem with this method. I am not sure if I am able to explain my point. \r\nLooking forward to your opinion @mshudrak @peb-peb @0xDeva\r\n\r\n"", 'comment_created': datetime.datetime(2023, 6, 13, 12, 0, 34, tzinfo=datetime.timezone.utc), 'commenter': 'sudiptob2', 'type': 'User'}, {'comment_id': 1228487367, 'comment_body': 'hmm @sudiptob2 anyway we can measure impact of that? If it is a minor memory uptick then I am fine with that given we have better readability. ', 'comment_created': datetime.datetime(2023, 6, 13, 17, 43, 21, tzinfo=datetime.timezone.utc), 'commenter': 'mshudrak', 'type': 'User'}, {'comment_id': 1228494247, 'comment_body': 'I dont think it has significant impact in time & memory usage. We can move forward if we want to prioritise readability ', 'comment_created': datetime.datetime(2023, 6, 13, 17, 47, 57, tzinfo=datetime.timezone.utc), 'commenter': 'sudiptob2', 'type': 'User'}, {'comment_id': 1228498156, 'comment_body': ""I'd prefer readability here if it is not significant."", 'comment_created': datetime.datetime(2023, 6, 13, 17, 51, 23, tzinfo=datetime.timezone.utc), 'commenter': 'mshudrak', 'type': 'User'}, {'comment_id': 1231568133, 'comment_body': '>  If these objects are lazy instantiated then I don\'t have any problem with this method.\r\n\r\nNope, by default python does not `lazy evaluate` functions. We have to define them explicitly.\r\n\r\nAnother approach that I found while researching was to reference these functions instead of creating an instance, i.e., \r\n\r\n```python\r\nservice_crawler_map = {\r\n  ""app_services"": AppServicesCrawler,\r\n}\r\n```\r\n**v/s**\r\n```python\r\nservice_crawler_map = {\r\n  ""app_services"": AppServicesCrawler(),\r\n}\r\n```\r\nand later call them as necessary. Example: `service_crawler_map[name]()`\r\n\r\nThis reference also has a memory impact. But, compared to `func()`(instance), `func`(reference) its memory impact is negligible.\r\n\r\n_**PS:**_ (after running a few local tests [test data was for 10^6])\r\n**Time Impact:** reference-based approach is almost 2.5x times slower than instance-based approach.\r\n**Memory Impact:** reference-based approach takes almost 0.5x times the memory than the instance-based approach.\r\n\r\nBut, for our use case, this wouldn\'t have a large impact on the runtime when compared to I/O optimization. ', 'comment_created': datetime.datetime(2023, 6, 15, 21, 51, 4, tzinfo=datetime.timezone.utc), 'commenter': 'peb-peb', 'type': 'User'}, {'comment_id': 1231590784, 'comment_body': 'Looking for your opinions @mshudrak @sudiptob2 @ZetaTwo ', 'comment_created': datetime.datetime(2023, 6, 15, 22, 18, 2, tzinfo=datetime.timezone.utc), 'commenter': 'peb-peb', 'type': 'User'}, {'comment_id': 1231648210, 'comment_body': '@peb-peb both of this is fine given impact is small as you mentioned. Thanks for the extra research.', 'comment_created': datetime.datetime(2023, 6, 16, 0, 13, 21, tzinfo=datetime.timezone.utc), 'commenter': 'mshudrak', 'type': 'User'}]","[{'commit_sha': '42fda4717173d18ed6923dfa93656805ed910a46', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22a7c3d04fd8dec8580e815ef2abb79e633fea50', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1844cd2a63f2554fc2532bc08c90d49039a42c53', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd88f7472e774fb0a957619e9b5a2a238679f8064', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50493c99ec3cffb2d9a7284bfce0bd7c989e37b7', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}]",Harsh,77539004,,User,,36,,22,27
1396442508,refactor: Crawler/bigtable instances,"## Notes

closes #199 
ref to #153 

@mxmssh @ZetaTwo ",True,200,https://api.github.com/repos/google/gcp_scanner/pulls/200,https://github.com/google/gcp_scanner/pull/200,closed,73,74,5,8,0,2,0,0,[],2023-06-16 22:45:14+00:00,2023-06-20 10:55:33+00:00,303019.0,"3 days, 12:10:19","[{'comment_id': 1234063575, 'comment_body': 'Where did this code go?', 'comment_created': datetime.datetime(2023, 6, 19, 13, 24, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ZetaTwo', 'type': 'User'}, {'comment_id': 1234787520, 'comment_body': '#194 I refactored it here. But, forgot to remove the code from `crawl.py`.', 'comment_created': datetime.datetime(2023, 6, 20, 6, 20, 12, tzinfo=datetime.timezone.utc), 'commenter': 'peb-peb', 'type': 'User'}]","[{'commit_sha': '0ba883d91fb24b7a115e939f687405de41e72443', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0adb3095730618fd28fde9cd701c0f117ecf2263', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74f2202f2bf5bc51041f6836d3d6c70e1cd2fb39', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d74b4f727833e49fb4b9fd868789be7e37fed86', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a89a6ff165c41adb8166d059c67ea706fb35a119', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75595500e804bf0f18a8286216e17a562fe4cf31', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddcce4bede22c2b137c7eb82f54e7d0bed378e7e', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '556ec353472b65bdf31d4b90ff9255b91cc6b009', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}]",Harsh,77539004,,User,,36,,22,27
1396554303,refactor: Crawler/filestore instances,"## Notes

closes #201 
ref to #153

@mxmssh @ZetaTwo",True,202,https://api.github.com/repos/google/gcp_scanner/pulls/202,https://github.com/google/gcp_scanner/pull/202,closed,65,31,5,7,4,0,0,0,[],2023-06-17 01:10:57+00:00,2023-06-20 11:04:27+00:00,294810.0,"3 days, 9:53:30",[],"[{'commit_sha': 'dd9706fff5feea26b0bcb48567aff5291022d987', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1c0fd1cc68db169885a107d1934228ebe63e494', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cece391a721fc0102c5a079d529dfd35db133d3', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6429d5e568a14848092bd6516fe01a20442e24a', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b28d1a09860f3c56aea25436684650c2bdf7e3c1', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd12d04e45280e4f29af7da576c65412bbaee861a', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91f9cbc49fe1c922168d0b40a96433cc1f365baf', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}]",Harsh,77539004,,User,,36,,22,27
1397265568,refactor: Crawler/spanner instances,"closes #209 
ref to #153 

@mxmssh @ZetaTwo",True,215,https://api.github.com/repos/google/gcp_scanner/pulls/215,https://github.com/google/gcp_scanner/pull/215,closed,67,31,5,7,3,0,0,0,[],2023-06-18 20:21:44+00:00,2023-06-20 11:23:42+00:00,140518.0,"1 day, 15:01:58",[],"[{'commit_sha': 'e582000545f831248774b65c62d9130e2d59c29a', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '353afe00a1860e05491f3d02d3ed45e65d95fe04', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3abc57e7539478258a4add8ba6e8cb781e7d8fb5', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e4e436cf4c92e4bad2c389175070612b3d69244', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60656dd199f41fc93ba7f446dfb0c522e121f7af', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45a40376a12452aeaf186e1f0a1a93ee44aac957', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '904421d9aea0066d3b633bdf5c43c0e4ebd23296', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}]",Harsh,77539004,,User,,36,,22,27
1397270337,refactor: Crawler/pubsub subs,"closes #207 
ref to #153 

@mxmssh @ZetaTwo",True,216,https://api.github.com/repos/google/gcp_scanner/pulls/216,https://github.com/google/gcp_scanner/pull/216,closed,66,33,5,9,0,1,0,0,[],2023-06-18 20:43:20+00:00,2023-06-20 10:52:45+00:00,137365.0,"1 day, 14:09:25","[{'comment_id': 1234058215, 'comment_body': 'Add newline at the end.', 'comment_created': datetime.datetime(2023, 6, 19, 13, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ZetaTwo', 'type': 'User'}]","[{'commit_sha': '6c0246d40ac2806d273db1d2bb327c34e7601f04', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ecc7f9c7fa3969c88399e0fa2f5442b5c2827063', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa603a43426b285c8428cdc54dabe579adf6c8b8', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a255e52ba4cb085fa6464a693c71442013dff476', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb1313a0abf0b961938bec388fed4d1c20f08374', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45072122bb81feabbd5523888a8df55417a27628', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee812f081de16eb0c01aa5f86e95dfc9d4045616', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '641f208c620b80b133daee3327aaee3507e0fea6', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ad4312766cfdbf2e915da638878da0cf323e819', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}]",Harsh,77539004,,User,,36,,22,27
1397283328,refactor: Crawler/cloud functions,"closes #208 
ref to #153 

@mxmssh @ZetaTwo",True,217,https://api.github.com/repos/google/gcp_scanner/pulls/217,https://github.com/google/gcp_scanner/pull/217,closed,66,31,5,7,2,2,0,0,[],2023-06-18 21:23:49+00:00,2023-06-20 11:04:00+00:00,135611.0,"1 day, 13:40:11","[{'comment_id': 1234058969, 'comment_body': 'Add newline', 'comment_created': datetime.datetime(2023, 6, 19, 13, 21, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ZetaTwo', 'type': 'User'}, {'comment_id': 1234793355, 'comment_body': 'Done :+1: ', 'comment_created': datetime.datetime(2023, 6, 20, 6, 27, 25, tzinfo=datetime.timezone.utc), 'commenter': 'peb-peb', 'type': 'User'}]","[{'commit_sha': 'ba443eab267f42cea94e4ef95668a19e2cbfd4ac', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8218e1d3258ac177fb6fc8ac44d64896016fa4b', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1857e1d0f4aeb8d5d64ca799fbd6d5010512931', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2c950f6e6937e8c718db6855b5ba9984dfa8ca1', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '389ee677e17f0b4764a37dfa8488fff96fb577b2', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee5ef3ebd0de1942ed49cd0668220ce23489fe5b', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8141b67ebd70aa9352e2d50d63f458c83657df9', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}]",Harsh,77539004,,User,,36,,22,27
1397285788,refactor: Crawler/sql instances,"## Notes

closes #205 
ref #153 

@mxmssh @ZetaTwo",True,218,https://api.github.com/repos/google/gcp_scanner/pulls/218,https://github.com/google/gcp_scanner/pull/218,closed,65,29,5,8,4,0,0,0,[],2023-06-18 21:36:43+00:00,2023-06-20 11:48:21+00:00,137498.0,"1 day, 14:11:38",[],"[{'commit_sha': '88679b2702d94a681051a1776d237169b03d2bab', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6567c818dd02665661699d71a723d2092318de4f', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3035b6f874efa4ca2ab4ae2299bd4d3c987d126', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b705a2dc8ffae710af0c1ac0ade1175ed02c6186', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '883e381bfac3297475d4741c2ed3caa6fc2b9423', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35081cbb0ced505d98a79e93d7056c40a858afba', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1659dd45b934a1136e8d26421231c8bac0e717fb', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88653d1033c582df0a3a67cc86a87a5f05a06e7b', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}]",Harsh,77539004,,User,,36,,22,27
1402403954,refactor: Crawler/kms keys,"## NOTE

**closes**
closes #210 
ref to #153 

@mshudrak @ZetaTwo 
",True,221,https://api.github.com/repos/google/gcp_scanner/pulls/221,https://github.com/google/gcp_scanner/pull/221,closed,87,52,5,7,1,2,0,0,[],2023-06-21 20:32:16+00:00,2023-06-21 22:41:55+00:00,7779.0,2:09:39,"[{'comment_id': 1237749204, 'comment_body': 'minor nit: we try to maintain this list in alphabetical order', 'comment_created': datetime.datetime(2023, 6, 21, 21, 47, 47, tzinfo=datetime.timezone.utc), 'commenter': 'mshudrak', 'type': 'User'}, {'comment_id': 1237781118, 'comment_body': 'done :+1: ', 'comment_created': datetime.datetime(2023, 6, 21, 22, 25, 10, tzinfo=datetime.timezone.utc), 'commenter': 'peb-peb', 'type': 'User'}]","[{'commit_sha': '7921bee2e305ac8e4e75a40e3542cbe2265ade7b', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '911f904b07796abe2f58332c7487c3159bbc1ba3', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb26aa4f9cc6d8df22493d3359c1880b36cf8c05', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61da28773449e3d72536bdc4b9137dc0e178923b', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4563a7aa1654bc409ed7a1ecc7761c05d624287b', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '389c60610deee9e2e3614c7801f221b07557d55d', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16ebb2d9e9b86001157d8621d6655f6eb3429208', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}]",Harsh,77539004,,User,,36,,22,27
1402475645,refactor: Crawler/bq,"## NOTE

closes #206 
ref to #153 

@mshudrak @ZetaTwo ",True,222,https://api.github.com/repos/google/gcp_scanner/pulls/222,https://github.com/google/gcp_scanner/pull/222,closed,104,68,5,6,0,2,0,0,[],2023-06-21 21:21:26+00:00,2023-06-21 22:35:50+00:00,4464.0,1:14:24,"[{'comment_id': 1237751928, 'comment_body': 'please make sure they are in alphabetical order.', 'comment_created': datetime.datetime(2023, 6, 21, 21, 51, 49, tzinfo=datetime.timezone.utc), 'commenter': 'mshudrak', 'type': 'User'}, {'comment_id': 1237782345, 'comment_body': 'done :+1: ', 'comment_created': datetime.datetime(2023, 6, 21, 22, 26, 34, tzinfo=datetime.timezone.utc), 'commenter': 'peb-peb', 'type': 'User'}]","[{'commit_sha': '8fb15ecf8ce8db9bef37b4f989c70d2831ea4e79', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1f699e4e929eca98bbf9d7226111ed88b422ffb', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8103cf66cb4fcf2dafae49eef27a50b5d8f3e192', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8de8fb9e062eea0a4e6b3dbde72eab345f626857', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '109541b7431b7efc34b95a6bd7431c41dd97513a', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f12e6b20865a473433530df560c6a423f7bd1bad', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}]",Harsh,77539004,,User,,36,,22,27
1402541045,refactor: crawler/cloud resource manager,"## NOTE

closes #213 
ref to #153 

@mshudrak @ZetaTwo ",True,223,https://api.github.com/repos/google/gcp_scanner/pulls/223,https://github.com/google/gcp_scanner/pull/223,closed,194,90,7,11,1,3,0,0,[],2023-06-21 22:09:21+00:00,2023-06-22 22:14:49+00:00,86728.0,"1 day, 0:05:28","[{'comment_id': 1237809610, 'comment_body': ""Is there any specific reason to have CloudResourceManager in the name? I'd just omit it and have ProjectInfoCrawler here and everywhere else"", 'comment_created': datetime.datetime(2023, 6, 21, 23, 9, 27, tzinfo=datetime.timezone.utc), 'commenter': 'mshudrak', 'type': 'User'}, {'comment_id': 1238382133, 'comment_body': 'I was going with the pattern found in #153, like:\r\n\r\n![image](https://github.com/google/gcp_scanner/assets/77539004/6817aa51-8cfa-4202-9ae3-c8756660edbc)\r\n![image](https://github.com/google/gcp_scanner/assets/77539004/fa5ed90c-3299-4e11-ab92-7591ce6a98d5)\r\n\r\nBoth of these have `compute` or `dns` in the prefix of their Class names. Maybe we can also go with `CRM` or put all these in a separate sub-folder to group them without explicitly mentioning it.', 'comment_created': datetime.datetime(2023, 6, 22, 11, 14, 46, tzinfo=datetime.timezone.utc), 'commenter': 'peb-peb', 'type': 'User'}, {'comment_id': 1239079105, 'comment_body': ""I see. It is ok, let's keep it. CRM will be confusing"", 'comment_created': datetime.datetime(2023, 6, 22, 22, 13, 16, tzinfo=datetime.timezone.utc), 'commenter': 'mshudrak', 'type': 'User'}]","[{'commit_sha': '887dc6a87bac942d15cc3537947283dab1ce7f7e', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f89e2077abdf5db422d155de6c65648a092588d', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a373b14a0334715cb35260cda6cd509d4fda15a2', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '276bb90c849f72eeea13b5c71fdba9f2d99e08c4', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9848aa04fcc5d5858b9666a2e2522a85a835bfb', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15360e739c14c67c57cc427b2980b64a48b65061', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0297696260188d6842f1281df05d4a49fcaa3408', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc6d8a4c621ea5aa8ad62da81f47e1006e8502a4', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c40fffc324c88f48608e0c9747959911ee4e6048', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '535ac2f27730414df6ac5d66e7efbfdd64e1e20c', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a382f360bdcd3d8e5a9ab558cee45e8cd055382', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}]",Harsh,77539004,,User,,36,,22,27
1451077901,remove: `compute_client_for_credentials` func from scanner,"The function is not being used anywhere in the code-base and is redundant.

It was removed in the PR #159 and is implemented in the `src/gcp_scanner/client/compute_client.py`",True,257,https://api.github.com/repos/google/gcp_scanner/pulls/257,https://github.com/google/gcp_scanner/pull/257,closed,0,7,1,2,0,0,0,0,[],2023-07-26 23:04:29+00:00,2023-07-26 23:17:08+00:00,759.0,0:12:39,[],"[{'commit_sha': 'e13ec14b9427e00d71c947ab78c2c3cefe70670a', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f60a8b9d7caa5031adb04e4162f2d5f72f115d53', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}]",Harsh,77539004,,User,,36,,22,27
1489730074,fix: hanging bug if output folder doesn't exist,"## Description
Fixes the bug #271 where GCP Scanner freezes when there is an error in project scanning crawler.

We have solved this issue/bug by exiting the program if the output folder path is invalid. We verify the argument when it is passed by the user.

## Changes Made
- [x] arguments.py

## Checklist
- [x] I have read and followed the contributing guidelines.
- [x] I have tested my changes thoroughly and they work as expected.
- [x] I have added necessary tests for the changes made.
- [x] I have updated the documentation to reflect the changes made.
- [x] My code follows the project's coding style and standards.
- [x] I have added appropriate commit messages and comments for my changes.


## Related Issues
#271

## Additional Notes
:point_down: if the output folder path is invalid
![image](https://github.com/google/gcp_scanner/assets/77539004/22559368-f818-4208-83ab-f706345c07b1)
:point_down: if the output folder path is valid
![image](https://github.com/google/gcp_scanner/assets/77539004/603dec45-925c-4059-b435-9b6ba096145d)
",True,272,https://api.github.com/repos/google/gcp_scanner/pulls/272,https://github.com/google/gcp_scanner/pull/272,closed,35,0,2,5,0,5,0,0,[],2023-08-25 13:16:21+00:00,2023-08-29 19:43:48+00:00,368847.0,"4 days, 6:27:27","[{'comment_id': 1306561957, 'comment_body': 'You should check that it is a directory', 'comment_created': datetime.datetime(2023, 8, 26, 20, 23, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ZetaTwo', 'type': 'User'}, {'comment_id': 1306562023, 'comment_body': 'Exit with a failure error code', 'comment_created': datetime.datetime(2023, 8, 26, 20, 24, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ZetaTwo', 'type': 'User'}, {'comment_id': 1306562049, 'comment_body': 'Add quotes and fix grammar: `""\\""%s\\"" doesn\'t exist. Please enter a valid directory path.""`', 'comment_created': datetime.datetime(2023, 8, 26, 20, 24, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ZetaTwo', 'type': 'User'}, {'comment_id': 1309054007, 'comment_body': 'Oh, actually small nit here. Please fix `exists`, It should be `exist`', 'comment_created': datetime.datetime(2023, 8, 29, 16, 2, 31, tzinfo=datetime.timezone.utc), 'commenter': 'mshudrak', 'type': 'User'}, {'comment_id': 1309128154, 'comment_body': 'Done :+1: ', 'comment_created': datetime.datetime(2023, 8, 29, 17, 9, 45, tzinfo=datetime.timezone.utc), 'commenter': 'peb-peb', 'type': 'User'}]","[{'commit_sha': 'b89e60135bbdda70b013cfe9050438e44fc45f19', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81a86be90683342a6901177998e44507fa9a5f28', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd66b2f7d25ca9dadd493646c76e95e99e168a2a1', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4eaaa5fa2206b7faab834450949426d39b48fd42', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ba80db5cfdae8df5c13206e791c5e2b7a88c1ee', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}]",Harsh,77539004,,User,,36,,22,27

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
455697380,gcp_scanner,google/gcp_scanner,Python,95,303,11,30,544,23,2,1,"[{'id': 1489730074, 'number': 272, 'closed': datetime.datetime(2023, 8, 29, 19, 43, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 25, 13, 16, 21, tzinfo=datetime.timezone.utc), 'time_taken': 368847.0, 'time_delta': '4 days, 6:27:27', 'additions': 35, 'deletions': 0, 'state': 'closed'}, {'id': 1484753950, 'number': 269, 'closed': datetime.datetime(2023, 8, 29, 19, 44, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 22, 13, 18, 44, tzinfo=datetime.timezone.utc), 'time_taken': 627942.0, 'time_delta': '7 days, 6:25:42', 'additions': 35, 'deletions': 19, 'state': 'closed'}, {'id': 1460218970, 'number': 265, 'closed': datetime.datetime(2023, 8, 19, 3, 38, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 2, 18, 3, 44, tzinfo=datetime.timezone.utc), 'time_taken': 1416909.0, 'time_delta': '16 days, 9:35:09', 'additions': 274, 'deletions': 173, 'state': 'closed'}, {'id': 1451077901, 'number': 257, 'closed': datetime.datetime(2023, 7, 26, 23, 17, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 26, 23, 4, 29, tzinfo=datetime.timezone.utc), 'time_taken': 759.0, 'time_delta': '0:12:39', 'additions': 0, 'deletions': 7, 'state': 'closed'}, {'id': 1435556404, 'number': 245, 'closed': datetime.datetime(2023, 8, 2, 18, 4, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 14, 23, 39, 26, tzinfo=datetime.timezone.utc), 'time_taken': 1621485.0, 'time_delta': '18 days, 18:24:45', 'additions': 132, 'deletions': 73, 'state': 'closed'}, {'id': 1421698930, 'number': 237, 'closed': datetime.datetime(2023, 7, 7, 22, 54, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 20, 5, 41, tzinfo=datetime.timezone.utc), 'time_taken': 182946.0, 'time_delta': '2 days, 2:49:06', 'additions': 145, 'deletions': 91, 'state': 'closed'}, {'id': 1402541045, 'number': 223, 'closed': datetime.datetime(2023, 6, 22, 22, 14, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 21, 22, 9, 21, tzinfo=datetime.timezone.utc), 'time_taken': 86728.0, 'time_delta': '1 day, 0:05:28', 'additions': 194, 'deletions': 90, 'state': 'closed'}, {'id': 1402475645, 'number': 222, 'closed': datetime.datetime(2023, 6, 21, 22, 35, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 21, 21, 21, 26, tzinfo=datetime.timezone.utc), 'time_taken': 4464.0, 'time_delta': '1:14:24', 'additions': 104, 'deletions': 68, 'state': 'closed'}, {'id': 1402403954, 'number': 221, 'closed': datetime.datetime(2023, 6, 21, 22, 41, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 21, 20, 32, 16, tzinfo=datetime.timezone.utc), 'time_taken': 7779.0, 'time_delta': '2:09:39', 'additions': 87, 'deletions': 52, 'state': 'closed'}, {'id': 1397285788, 'number': 218, 'closed': datetime.datetime(2023, 6, 20, 11, 48, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 18, 21, 36, 43, tzinfo=datetime.timezone.utc), 'time_taken': 137498.0, 'time_delta': '1 day, 14:11:38', 'additions': 65, 'deletions': 29, 'state': 'closed'}, {'id': 1397283328, 'number': 217, 'closed': datetime.datetime(2023, 6, 20, 11, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 18, 21, 23, 49, tzinfo=datetime.timezone.utc), 'time_taken': 135611.0, 'time_delta': '1 day, 13:40:11', 'additions': 66, 'deletions': 31, 'state': 'closed'}, {'id': 1397270337, 'number': 216, 'closed': datetime.datetime(2023, 6, 20, 10, 52, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 18, 20, 43, 20, tzinfo=datetime.timezone.utc), 'time_taken': 137365.0, 'time_delta': '1 day, 14:09:25', 'additions': 66, 'deletions': 33, 'state': 'closed'}, {'id': 1397265568, 'number': 215, 'closed': datetime.datetime(2023, 6, 20, 11, 23, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 18, 20, 21, 44, tzinfo=datetime.timezone.utc), 'time_taken': 140518.0, 'time_delta': '1 day, 15:01:58', 'additions': 67, 'deletions': 31, 'state': 'closed'}, {'id': 1396554303, 'number': 202, 'closed': datetime.datetime(2023, 6, 20, 11, 4, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 17, 1, 10, 57, tzinfo=datetime.timezone.utc), 'time_taken': 294810.0, 'time_delta': '3 days, 9:53:30', 'additions': 65, 'deletions': 31, 'state': 'closed'}, {'id': 1396442508, 'number': 200, 'closed': datetime.datetime(2023, 6, 20, 10, 55, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 16, 22, 45, 14, tzinfo=datetime.timezone.utc), 'time_taken': 303019.0, 'time_delta': '3 days, 12:10:19', 'additions': 73, 'deletions': 74, 'state': 'closed'}, {'id': 1389149248, 'number': 194, 'closed': datetime.datetime(2023, 6, 16, 0, 20, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 12, 17, 50, 4, tzinfo=datetime.timezone.utc), 'time_taken': 282655.0, 'time_delta': '3 days, 6:30:55', 'additions': 90, 'deletions': 21, 'state': 'closed'}, {'id': 1388235923, 'number': 193, 'closed': datetime.datetime(2023, 6, 12, 17, 43, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 12, 8, 44, 30, tzinfo=datetime.timezone.utc), 'time_taken': 32363.0, 'time_delta': '8:59:23', 'additions': 729, 'deletions': 276, 'state': 'closed'}, {'id': 1381631572, 'number': 185, 'closed': datetime.datetime(2023, 6, 12, 21, 23, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 6, 22, 43, 54, tzinfo=datetime.timezone.utc), 'time_taken': 513556.0, 'time_delta': '5 days, 22:39:16', 'additions': 43, 'deletions': 0, 'state': 'closed'}, {'id': 1296536765, 'number': 123, 'closed': datetime.datetime(2023, 3, 31, 14, 25, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 30, 16, 36, 28, tzinfo=datetime.timezone.utc), 'time_taken': 78538.0, 'time_delta': '21:48:58', 'additions': 111, 'deletions': 0, 'state': 'closed'}, {'id': 1282904713, 'number': 111, 'closed': datetime.datetime(2023, 3, 28, 16, 22, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 20, 16, 0, 59, tzinfo=datetime.timezone.utc), 'time_taken': 692474.0, 'time_delta': '8 days, 0:21:14', 'additions': 260, 'deletions': 0, 'state': 'closed'}, {'id': 1276288352, 'number': 104, 'closed': datetime.datetime(2023, 3, 15, 13, 50, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 15, 7, 9, 13, tzinfo=datetime.timezone.utc), 'time_taken': 24084.0, 'time_delta': '6:41:24', 'additions': 3, 'deletions': 3, 'state': 'closed'}]"
