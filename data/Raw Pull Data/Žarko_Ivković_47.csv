pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1375477657,Nwchem,"First working version of the code, input files for all essential calculations can be made with this code.
Next steps:
Customs basis sets, constrains and scans",True,10,https://api.github.com/repos/cyllab/ccinput/pulls/10,https://github.com/cyllab/ccinput/pull/10,closed,638,83,3,10,0,8,0,0,[],2023-06-02 09:56:47+00:00,2023-06-03 11:49:14+00:00,93147.0,"1 day, 1:52:27","[{'comment_id': 1214376930, 'comment_body': 'With no specification, this line raises an `IndexError` (`spec.split()[0]` is not defined if `spec` has length 0). A couple verifications should be done to handle trivial cases.', 'comment_created': datetime.datetime(2023, 6, 2, 13, 29, 27, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}, {'comment_id': 1214380927, 'comment_body': ""At the moment, I don't grasp how this is different from the specifications. Could both arguments be combined?"", 'comment_created': datetime.datetime(2023, 6, 2, 13, 32, 30, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}, {'comment_id': 1214390751, 'comment_body': ""Extra spaces don't seem problematic in NWchem. In that case, it would be nice to have empty lines to visually separate blocks."", 'comment_created': datetime.datetime(2023, 6, 2, 13, 37, 16, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}, {'comment_id': 1214669126, 'comment_body': 'This additional section is designated to commands and any text in general that should not go inside blocks. The commands for this block are not checked at all and they are placed in the file after all the other blocks, but before tasks. If I implement gaussian-like specifications that we discussed in the email, this could be merged into specifications. I will probably do that.', 'comment_created': datetime.datetime(2023, 6, 2, 18, 7, 28, tzinfo=datetime.timezone.utc), 'commenter': 'zarkoivkovicc', 'type': 'User'}, {'comment_id': 1214669394, 'comment_body': 'A simple check if specifications is not an empty string should do the work.', 'comment_created': datetime.datetime(2023, 6, 2, 18, 7, 50, tzinfo=datetime.timezone.utc), 'commenter': 'zarkoivkovicc', 'type': 'User'}, {'comment_id': 1214669517, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2023, 6, 2, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'zarkoivkovicc', 'type': 'User'}, {'comment_id': 1214869442, 'comment_body': 'Can you push the changes? The pull request will automatically be updated.', 'comment_created': datetime.datetime(2023, 6, 2, 21, 43, 18, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}, {'comment_id': 1215454012, 'comment_body': 'Oops, some debug prints', 'comment_created': datetime.datetime(2023, 6, 3, 11, 38, 24, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}]","[{'commit_sha': '343417e7c840bf7d566f3ece8d79b6b5777aa3f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '059d7b6933f5c948b39ea9df9723691390c05330', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd1b0141d24dcfc2bff411d27d673034b3ba1543a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ee2371fa052797cb1e9ed90ecdadd8394210d2ce', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3e1b5c2aade03e7a43eea0da3401e4e611028d00', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5ea0f3d8e61585c3a45416520452147f694bc985', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '31cee206868683cdce92cbe3d92397b9dc83ae2d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b743e9775b96167b6a664c25f61a04f7983f8c1d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f43c724b09622f6dfa99aab85a1300befc8254c5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4eb2d3969de4648b204cbc9d33a202d095d4c383', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Zarko Ivkovic,117210785,,User,,9,,0,2
1388634315,nwchem tests 1.0 + minor fixes,,True,11,https://api.github.com/repos/cyllab/ccinput/pulls/11,https://github.com/cyllab/ccinput/pull/11,closed,1503,75,5,4,1,9,0,0,[],2023-06-12 12:37:37+00:00,2023-06-12 15:40:07+00:00,10950.0,3:02:30,"[{'comment_id': 1226648006, 'comment_body': 'A quick comment about the regex query could be useful', 'comment_created': datetime.datetime(2023, 6, 12, 13, 12, 44, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}, {'comment_id': 1226650018, 'comment_body': 'Why not use `text.lower()` directly instead of this method? Also, there is a `return` missing in the method.', 'comment_created': datetime.datetime(2023, 6, 12, 13, 14, 22, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}, {'comment_id': 1226655343, 'comment_body': 'This is minor, but the whitespace at the very begining and end of the reference input is stripped before comparison. I tend to remove this whitespace to make the tests a little bit cleaner. Either way is fine.', 'comment_created': datetime.datetime(2023, 6, 12, 13, 18, 42, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}, {'comment_id': 1226657987, 'comment_body': 'I like this! Would `dft(grid coarse)` also work? An additional test for this would be great', 'comment_created': datetime.datetime(2023, 6, 12, 13, 20, 41, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}, {'comment_id': 1226664103, 'comment_body': 'This doesn\'t seem to be a valid NWChem constraint. It expects two additional parameters for the spring constant and equilibrium distance. The spring constant could be a ""high"" value by default (whatever that is), and the equilibrium distance is already calculated from the input structure in the `Constraint` class.', 'comment_created': datetime.datetime(2023, 6, 12, 13, 25, 1, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}, {'comment_id': 1226665434, 'comment_body': 'Instead of `Exception` here, `InvalidParameter` would be better. It is more specific and would make the test fail if there is some other exception in the code. This also applies to the other expected failures below.', 'comment_created': datetime.datetime(2023, 6, 12, 13, 25, 59, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}, {'comment_id': 1226683920, 'comment_body': ""I don't know how that got there, I never actually use that function in the code :D"", 'comment_created': datetime.datetime(2023, 6, 12, 13, 39, 33, tzinfo=datetime.timezone.utc), 'commenter': 'zarkoivkovicc', 'type': 'User'}, {'comment_id': 1226686620, 'comment_body': 'I will implement that in the changes of this commit.', 'comment_created': datetime.datetime(2023, 6, 12, 13, 41, 11, tzinfo=datetime.timezone.utc), 'commenter': 'zarkoivkovicc', 'type': 'User'}, {'comment_id': 1226860783, 'comment_body': 'Type in ""conversion""', 'comment_created': datetime.datetime(2023, 6, 12, 15, 35, 7, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}]","[{'commit_sha': '8dd25e071c1ce287c927925e055510b5639a9936', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '82755f9b5acc5e35291fe016b333d39943dee667', 'committer_username': 'zarkoivkovicc', 'committer_name': 'Zarko Ivkovic', 'committer_email': None, 'commit_date': datetime.datetime(2022, 11, 1, 18, 5, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fc85f2c2be11404fbda53865a3555a26257083c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '075d4c47de3369b063d13d611f25097a08f2a103', 'committer_username': 'zarkoivkovicc', 'committer_name': 'Zarko Ivkovic', 'committer_email': None, 'commit_date': datetime.datetime(2022, 11, 1, 18, 5, 31, tzinfo=datetime.timezone.utc)}]",Zarko Ivkovic,117210785,,User,,9,,0,2
1410000542,Nwchem changed implementation of constraints and blocked scan attempts,I found a better way to implement constraints. I also added errors when someone tries to make input files for scans.,True,14,https://api.github.com/repos/cyllab/ccinput/pulls/14,https://github.com/cyllab/ccinput/pull/14,closed,77,34,3,3,1,0,0,0,[],2023-06-27 14:13:17+00:00,2023-06-27 16:00:20+00:00,6423.0,1:47:03,[],"[{'commit_sha': 'a34a9c3209d477b3b6dd98e02bb1257bdd9bac7a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f11d2589e7baeb698ed57a6d936ce26978ac9341', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '89c4308663f0246023efcf16161c54f816a844c3', 'committer_username': 'zarkoivkovicc', 'committer_name': 'Zarko Ivkovic', 'committer_email': None, 'commit_date': datetime.datetime(2022, 11, 1, 18, 5, 31, tzinfo=datetime.timezone.utc)}]",Zarko Ivkovic,117210785,,User,,9,,0,2
1283918389,Added support for Counterpoise calculation in Gaussian with appropriaâ€¦,"The input files with the counterpoise correction keyword and fragments can now be created.
The syntax is the following:
`... --specifications ""counterpoise = N fragments = list_of_numbers"" ...`
The _N_ is the number of fragments in the structure, and the _list of numbers_ assigns a fragment to each atom, in the same order as they are in the XYZ file.
The code will not allow unreasonable combinations of those two parameters (at least some of them).
The 5 appropriate tests are also added.
I could not run `python setup.py test` because this version of the file is not compatible with python 3.10+ (the collectible module is moved to another module or something like that). Nevertheless, I run every group test manually and they all passed.
I hope this addition is useful.
PS This is my first time contributing to any project, so please check it carefully if you can because I might have messed up something that I am not aware of.",True,5,https://api.github.com/repos/cyllab/ccinput/pulls/5,https://github.com/cyllab/ccinput/pull/5,closed,174,3,5,2,2,11,0,0,[],2023-03-21 09:59:50+00:00,2023-03-21 17:57:22+00:00,28652.0,7:57:32,"[{'comment_id': 1143481570, 'comment_body': 'It seems like Gaussian also accepts `Counterpoise(2)` instead of `Counterpoise=2` (it runs as expected with Gaussian 16 at least). For simplicity, it would be better to use the first notation then.', 'comment_created': datetime.datetime(2023, 3, 21, 14, 30, 11, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}, {'comment_id': 1143495213, 'comment_body': ""The fragments aren't saved in the Calculation object, so this parameter isn't used at the moment.\r\n\r\nParsing the fragments in the Calculation object and then using them in the input generation would be more general. That way, the fragments would already be parsed for all the packages that can make use of this kind of input. I think it would be even better if you moved the fragment parsing here; in `gaussian.py`, there would then be a verification that fragments have been specified if the counterpoise correction is required.\r\n\r\nIf you want to, the fragments could be parsed as a separate parameter instead of as specification. Passing the fragment specifications as a string is perfect."", 'comment_created': datetime.datetime(2023, 3, 21, 14, 39, 13, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}, {'comment_id': 1143504147, 'comment_body': ""This variable won't be used. You could just show the expected error message as comment.\r\n\r\nAlso, just so you know, there is a way to catch the exception that is raised and test the exception message (https://stackoverflow.com/questions/61061723/python-unittest-unit-test-the-message-passed-in-raised-exception). It looks like I don't do that at all in this project, so you really don't have to."", 'comment_created': datetime.datetime(2023, 3, 21, 14, 44, 43, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}, {'comment_id': 1143507099, 'comment_body': 'Actually, Counterpoise calculations are not compatible with implicit solvation in Gaussian, so this test should raise an exception.', 'comment_created': datetime.datetime(2023, 3, 21, 14, 46, 34, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}, {'comment_id': 1143508220, 'comment_body': 'Also remove implicit solvation here', 'comment_created': datetime.datetime(2023, 3, 21, 14, 47, 15, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}, {'comment_id': 1143513178, 'comment_body': 'The trailing whitespace will be ignored in the tests, so you can just leave one new line to make the code slightly cleaner.', 'comment_created': datetime.datetime(2023, 3, 21, 14, 50, 29, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}, {'comment_id': 1143515439, 'comment_body': '`unique_fragemnts` should be `unique_fragments` (although you did use the same variable name everywhere, so the code works just fine!)', 'comment_created': datetime.datetime(2023, 3, 21, 14, 51, 53, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}, {'comment_id': 1143520151, 'comment_body': 'It would be better to try to cast to integers instead of using `eval`, to avoid getting strange results with invalid input. ', 'comment_created': datetime.datetime(2023, 3, 21, 14, 54, 40, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}, {'comment_id': 1143531846, 'comment_body': 'Instead of `_catch_Err1`, you should put a couple words related to the error itself. Here, it would probably be `_extra_frag_spec` or something like that.', 'comment_created': datetime.datetime(2023, 3, 21, 15, 1, 48, tzinfo=datetime.timezone.utc), 'commenter': 'RaphaelRobidas', 'type': 'User'}, {'comment_id': 1143673329, 'comment_body': ""Yeah, I wanted to put what is the expected output, pretty much the way you suggested. As it's not done for other tests in this project I will not do it, the names of the tests are changed to be more suggestive."", 'comment_created': datetime.datetime(2023, 3, 21, 16, 23, 49, tzinfo=datetime.timezone.utc), 'commenter': 'zarkoivkovicc', 'type': 'User'}, {'comment_id': 1143674917, 'comment_body': 'Fixed, now fragments are parsed in the calculations and require separate `--fragments` option from the command line', 'comment_created': datetime.datetime(2023, 3, 21, 16, 24, 53, tzinfo=datetime.timezone.utc), 'commenter': 'zarkoivkovicc', 'type': 'User'}]","[{'commit_sha': '008d5c4bfbe39e046c040a88785c6a1f6283625f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '055762068079ea35bc5ad44db042ecbe20eae5fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Zarko Ivkovic,117210785,,User,,9,,0,2

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
447042085,ccinput,cyllab/ccinput,Python,7,40,2,8,197,5,1,0,"[{'id': 1433426190, 'number': 16, 'closed': datetime.datetime(2023, 7, 15, 13, 2, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 13, 16, 25, 1, tzinfo=datetime.timezone.utc), 'time_taken': 160626.0, 'time_delta': '1 day, 20:37:06', 'additions': 3448, 'deletions': 383, 'state': 'closed'}, {'id': 1410000542, 'number': 14, 'closed': datetime.datetime(2023, 6, 27, 16, 0, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 27, 14, 13, 17, tzinfo=datetime.timezone.utc), 'time_taken': 6423.0, 'time_delta': '1:47:03', 'additions': 77, 'deletions': 34, 'state': 'closed'}, {'id': 1388634315, 'number': 11, 'closed': datetime.datetime(2023, 6, 12, 15, 40, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 12, 12, 37, 37, tzinfo=datetime.timezone.utc), 'time_taken': 10950.0, 'time_delta': '3:02:30', 'additions': 1503, 'deletions': 75, 'state': 'closed'}, {'id': 1375477657, 'number': 10, 'closed': datetime.datetime(2023, 6, 3, 11, 49, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 2, 9, 56, 47, tzinfo=datetime.timezone.utc), 'time_taken': 93147.0, 'time_delta': '1 day, 1:52:27', 'additions': 638, 'deletions': 83, 'state': 'closed'}, {'id': 1283918389, 'number': 5, 'closed': datetime.datetime(2023, 3, 21, 17, 57, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 21, 9, 59, 50, tzinfo=datetime.timezone.utc), 'time_taken': 28652.0, 'time_delta': '7:57:32', 'additions': 174, 'deletions': 3, 'state': 'closed'}]"
