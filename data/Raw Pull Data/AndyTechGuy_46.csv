pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
428205918,feat: Reduce buffer outflow rate to increase performance,"Reduces the number of blocks placed from the block buffer each cycle, from 1000 to 200. This reduction strikes a great balance between in-game performance, and placing enough blocks to keep up with city expansion. It doesn't remove the lag during block placement cycles completely, but certainly improves it.",True,62,https://api.github.com/repos/Terasology/DynamicCities/pulls/62,https://github.com/Terasology/DynamicCities/pull/62,closed,1,1,1,1,0,0,1,0,[{'name': 'Type: Improvement'}],2020-06-05 03:55:36+00:00,2020-06-07 19:52:38+00:00,230222.0,"2 days, 15:57:02",[],"[{'commit_sha': 'fcf3d0271e6002a98dab8cf4a3f2c28997855b5e', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
429409944,"feat: Reduce city growth rate, and tune building ratios","**Requires [Terasology/DynamicCities#63](https://github.com/Terasology/DynamicCities/pull/63) to work!**

Greatly reduces the growth rate of MR cities, by almost 60x. This is done by modifying the culture growth rate. This number sets the growth rate of a cities ""population"", which is in turn used to determine when buildings should be placed. A value of 8 changes city growth to be much slower, but still noticable.

As well, the ratios of each building type have been modified to be more friendly for gameplay & the game world. Building need is calculated according to the area of placed buildings, where a larger building has more influence on the generation system than a smaller building. Therefore, smaller buildings such as wells must be tuned down to compensate for this. In general, all building need values have been greatly reduced in order to reduce the growth rate further.",True,67,https://api.github.com/repos/Terasology/MetalRenegades/pulls/67,https://github.com/Terasology/MetalRenegades/pull/67,closed,2,2,1,1,0,0,0,0,[],2020-06-06 20:02:42+00:00,2020-06-06 21:33:11+00:00,5429.0,1:30:29,[],"[{'commit_sha': 'fcb7cf8edb2ea3aa8e41416ccca97d71dedf8b98', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
429409958,feat: Allow decimals in a culture's building need values,"Allows the usage of decimal building needs values inside of a culture component. This change allows for the ratios of buildings within a city to be tweaked with much greater accuracy.

Required for [Terasology/MetalRenegades#67](https://github.com/Terasology/MetalRenegades/pull/67) to work.",True,63,https://api.github.com/repos/Terasology/DynamicCities/pulls/63,https://github.com/Terasology/DynamicCities/pull/63,closed,5,5,2,1,0,1,0,0,[],2020-06-06 20:02:44+00:00,2020-06-06 21:11:10+00:00,4106.0,1:08:26,"[{'comment_id': 436300807, 'comment_body': 'My functional sense are tingling when looking at this :nerd_face: \r\n\r\n```java\r\n\tfloat total = buildingNeedPerZone.values().stream().reduce(0f, Float::sum);\r\n```\r\n\r\n', 'comment_created': datetime.datetime(2020, 6, 6, 21, 9, 14, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}]","[{'commit_sha': '48f5d963f9839065ed8e106f484dfdbeb2848a08', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
430321766,"Add an optional spawn gap setting, preventing cities from generating in the world spawn","Adds a setting to DynamicCities which prevents cities from spawning within a specified distance of spawn. This setting can be modified in the Advanced Game Create menu. ""World spawn"" is assumed to be at (0, 0, 0), this will not change if the player's spawn changes.",True,64,https://api.github.com/repos/Terasology/DynamicCities/pulls/64,https://github.com/Terasology/DynamicCities/pull/64,closed,9,10,1,4,0,4,0,0,[],2020-06-07 19:36:57+00:00,2020-06-29 17:25:56+00:00,1892939.0,"21 days, 21:48:59","[{'comment_id': 436396412, 'comment_body': 'The configuration properties currently cannot differ from the default value (any change is lost when actually generating or re-loading a world). Just to let you know...', 'comment_created': datetime.datetime(2020, 6, 7, 19, 56, 46, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 436396575, 'comment_body': 'Please add a comment here that you assume the spawn to be at (0, 0, 0).', 'comment_created': datetime.datetime(2020, 6, 7, 19, 59, 12, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 441636011, 'comment_body': ""That explains some weird behavior I was experiencing while testing (the setting didn't seem to change anything), I just thought it was my game acting weird. Thanks for telling me!"", 'comment_created': datetime.datetime(2020, 6, 17, 15, 29, 41, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 441636615, 'comment_body': 'Comment has been added in this spot, along with another comment above the configuration setting itself. üëç ', 'comment_created': datetime.datetime(2020, 6, 17, 15, 30, 33, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}]","[{'commit_sha': '48f5d963f9839065ed8e106f484dfdbeb2848a08', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '695d78546eacc6c0fac12149d2f86460f7acc3fa', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '122fa0f74350200301d1f5ff80d1b74c8bff92d4', 'committer_username': 'skaldarnar', 'committer_name': 'Tobias Nett', 'committer_email': None, 'commit_date': datetime.datetime(2012, 2, 18, 10, 28, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40215207e43a40818331b5bc81e5855416aa73e3', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
432012878,Nerf block break speed of pistol bullets,"Pistol bullets were previously capable of destroying almost any block at a rapid pace. This update brings down the block break speed significantly, back to a normal level.",True,68,https://api.github.com/repos/Terasology/MetalRenegades/pulls/68,https://github.com/Terasology/MetalRenegades/pull/68,closed,3,3,2,2,0,3,0,0,[],2020-06-09 19:16:16+00:00,2020-06-17 15:41:14+00:00,678298.0,"7 days, 20:24:58","[{'comment_id': 440294990, 'comment_body': 'EDIT: Sorry I just saw https://github.com/Terasology/CoreAssets/pull/6 üòÖ \r\n\r\nIncreasing the cooldown is definitely required. Maybe look into changing the damage too?', 'comment_created': datetime.datetime(2020, 6, 15, 16, 21, 9, tzinfo=datetime.timezone.utc), 'commenter': 'mayant15', 'type': 'User'}, {'comment_id': 440296024, 'comment_body': 'These are changes from your previous PR. An extra commit snuck into this one.', 'comment_created': datetime.datetime(2020, 6, 15, 16, 22, 49, tzinfo=datetime.timezone.utc), 'commenter': 'mayant15', 'type': 'User'}, {'comment_id': 441643287, 'comment_body': ""Whoops! I gotta pay more attention to my commits next time. Hopefully this commit didn't slip into any other PRs as well üòÑ "", 'comment_created': datetime.datetime(2020, 6, 17, 15, 40, 48, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}]","[{'commit_sha': 'fcb7cf8edb2ea3aa8e41416ccca97d71dedf8b98', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a318f3a344cf93dc6f0c6a50bebf8f62f09333bb', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
433935946,feat: Add block category and properties for Chest,"Increases the ""health"" of a chest block from three to eight health points. As well, adds a speed benefit when being mined with an axe.",True,1,https://api.github.com/repos/Terasology/CoreAdvancedAssets/pulls/1,https://github.com/Terasology/CoreAdvancedAssets/pull/1,closed,4,1,1,1,0,0,1,0,[{'name': 'Type: Improvement'}],2020-06-13 00:50:37+00:00,2020-06-22 18:03:58+00:00,839601.0,"9 days, 17:13:21",[],"[{'commit_sha': 'd7cb09ebae89cffa044f36827980c82668b44a6f', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
433939087,Various block break adjustments,"Adjusts various block & tool levels to better balance block breaking times.

<h3>All Changes</h3>

- Increased block break time and mass of all mineral blocks.
- Increased block break time of cactus, and add axe damage boost.
- Slightly increased block break time of all stone materials.
- Slightly decreased block break time of all wood materials.
- Slightly buffed all tier 1 tools.",True,6,https://api.github.com/repos/Terasology/CoreAssets/pulls/6,https://github.com/Terasology/CoreAssets/pull/6,closed,16,14,10,1,0,0,0,0,[],2020-06-13 01:16:31+00:00,2020-06-22 18:04:54+00:00,838103.0,"9 days, 16:48:23",[],"[{'commit_sha': '0dfb8fc17b93745c8d51c83c20c762818e939a72', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
433939512,feat: Add block category and properties,"Increases the amount of time it takes to break a fence block, and adds an axe tool speed boost.",True,11,https://api.github.com/repos/Terasology/Fences/pulls/11,https://github.com/Terasology/Fences/pull/11,closed,4,1,1,1,0,0,1,0,[{'name': 'Type: Improvement'}],2020-06-13 01:19:59+00:00,2020-06-22 17:43:41+00:00,836622.0,"9 days, 16:23:42",[],"[{'commit_sha': 'aa9c53e863fda585ea60570b60be2c31f9e614a0', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
434040459,feat: Add mass and hardness properties for Barrel,"Increases the ""health"" of a barrel block from three to ten health points. As well, adds a speed benefit when being broken with an axe.",True,9,https://api.github.com/repos/Terasology/StructuralResources/pulls/9,https://github.com/Terasology/StructuralResources/pull/9,closed,4,1,1,1,0,0,0,0,[],2020-06-13 18:31:31+00:00,2020-06-14 16:07:22+00:00,77751.0,21:35:51,[],"[{'commit_sha': '83e25a47ccc867862d057505fd01d58ad9716162', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
434258827,Water/Thirst system improvements and modifications,"This pull request includes some major changes to the way that the thirst need is restored by players. These should make it so the thirst need is a greater challenge for players to fulfill.

<h3>All Changes</h3>

- [x] Wells can now be drunk from directly. This replenishes all of a player's thirst.
- [x] Instead of being given a water cup when interacting with a well, empty water cups can be bought from the market, and filled with a well.
- [x] Wells have a capacity of drinks, and the player will need to wait for a bit to drink again from this well when this limit is reached.
- [x] Tooltips have been included to indicate the status of wells.

![image](https://user-images.githubusercontent.com/44126397/86502347-c4964c00-bd7c-11ea-9b5c-186e8aa27086.png)
_A full well, and an empty well._

<h3>Testing</h3>

- Travel out in the world until a city spawns. Find a well (3 by 3 structure with water in the middle)
- Look at the water and press 'e' with nothing in your hand. Your thirst (the blue bar above your hotbar) should replenish instantly.
- Wait a little longer until a marketplace spawns, and press 'e' on the white gooey character walking around. Buy the empty cup from the shop.
- Return to the well and press 'e' while looking at the water. The cup should fill with water. Drink it by right clicking, and it should become empty again.
- Interact with the well by pressing 'e' until the tooltip reads ""Drinks: 0/5"". After this point, no thirst should be refilled by interacting with it again.
- Wait for a while when a well isn't at full capacity. After a bit of time, the well should replenish, one drink at a time.

",True,69,https://api.github.com/repos/Terasology/MetalRenegades/pulls/69,https://github.com/Terasology/MetalRenegades/pull/69,closed,415,41,19,14,1,38,1,0,[{'name': 'Type: Improvement'}],2020-06-15 03:06:04+00:00,2020-07-23 05:06:10+00:00,3290406.0,"38 days, 2:00:06","[{'comment_id': 449791508, 'comment_body': 'When reading both names in a prefab file above I was wondering what they are used for - good to see Javadoc here üëç \r\n\r\nCould we find a better name here? I looked up the direct translation of the German word I had in mind and it suggested ""level"" or ""filling level"". A more direct naming would be ""refills left"".', 'comment_created': datetime.datetime(2020, 7, 4, 17, 39, 29, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 449791615, 'comment_body': ""If we'd rename `waterRefills` to `fillingLevel` this could become `capacity`."", 'comment_created': datetime.datetime(2020, 7, 4, 17, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 449791764, 'comment_body': 'Should this item be named `filledCup` to be dual to `emtpyCup`? ', 'comment_created': datetime.datetime(2020, 7, 4, 17, 42, 38, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 449791903, 'comment_body': ""I don't like that we copy-paste the cup icon around - we should find a way to share this between JS (ManualLabor?) and MetalRenegades. Please have a look at the discussion in https://github.com/Terasology/ManualLabor/issues/31"", 'comment_created': datetime.datetime(2020, 7, 4, 17, 44, 56, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 449792020, 'comment_body': 'We are using a shorter license header format now (should be automatically used with 2020.x IntelliJ when using the pure Gradle setup). \r\n\r\n```suggestion\r\n// Copyright 2020 The Terasology Foundation\r\n// SPDX-License-Identifier: Apache-2.0\r\n```', 'comment_created': datetime.datetime(2020, 7, 4, 17, 46, 7, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 449792044, 'comment_body': '```suggestion\r\n// Copyright 2020 The Terasology Foundation\r\n// SPDX-License-Identifier: Apache-2.0\r\n```', 'comment_created': datetime.datetime(2020, 7, 4, 17, 46, 38, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 449792110, 'comment_body': 'can be `final`', 'comment_created': datetime.datetime(2020, 7, 4, 17, 47, 32, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 449792111, 'comment_body': 'can be `final`', 'comment_created': datetime.datetime(2020, 7, 4, 17, 47, 39, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 449792171, 'comment_body': 'can be `final`', 'comment_created': datetime.datetime(2020, 7, 4, 17, 48, 28, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 449792419, 'comment_body': 'This is an interesting use case for one of the proposed solutions in https://github.com/MovingBlocks/Terasology/issues/4067\r\n\r\n```java\r\n    @ReceiveEvent(events = {CupFilledEvent.class, WellDrinkEvent.class, WellRefilledEvent.class})\r\n    public void onWellRefill(EntityRef wellEntity) {\r\n        updateNameTag(wellEntity);\r\n    }\r\n```', 'comment_created': datetime.datetime(2020, 7, 4, 17, 51, 42, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 449793070, 'comment_body': '```suggestion\r\n    @ReceiveEvent(components = {WellSourceComponent.class, NameTagComponent.class})\r\n```', 'comment_created': datetime.datetime(2020, 7, 4, 18, 1, 33, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 449793098, 'comment_body': ""As you don't do any null-checks here the components should be added to the event handlers above."", 'comment_created': datetime.datetime(2020, 7, 4, 18, 1, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 449793100, 'comment_body': ""Would be nice if we could show some nice icons instead of numbers. Maybe a couple of water drops, then only two, one, then a red cross or the like to show it's dry? Maybe a well symbol with the filling level indicated in some way...\r\n\r\n@StefaniaMak any thought's on this? üßë\u200düé® "", 'comment_created': datetime.datetime(2020, 7, 4, 18, 1, 51, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 449793328, 'comment_body': 'I\'d move the logic to its own method and only keep the ""framework"" in the event handler. That way it\'s easy to grasp what is actually happening on each world time cycle without the need to understand the details of it.\r\n\r\n```suggestion\r\n        if (worldTimeCycles >= CYCLES_UNTIL_REFILL) {\r\n            refillWells();\r\n            worldTimeCycles = 0;\r\n        }\r\n        worldTimeCycles++;\r\n    }\r\n```', 'comment_created': datetime.datetime(2020, 7, 4, 18, 5, 30, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 449793443, 'comment_body': 'this looks like you are sending the refilled event even though the well was already at maximum value üßê \r\n\r\n```suggestion\r\n                if (wellSourceComp.waterRefills < wellSourceComp.maxRefills) {\r\n                    wellSourceComp.waterRefills++;\r\n                    waterSource.send(new WellRefilledEvent());\r\n                }\r\n```', 'comment_created': datetime.datetime(2020, 7, 4, 18, 7, 5, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 449793517, 'comment_body': 'Do this check before you access `gatheringCharacter.getComponent(...)`?', 'comment_created': datetime.datetime(2020, 7, 4, 18, 8, 16, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 449793655, 'comment_body': ""I don't like that there are so many `return` statements in this method. However, the nesting is not very deep, so it's still well comprehensible..."", 'comment_created': datetime.datetime(2020, 7, 4, 18, 10, 14, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 449793806, 'comment_body': 'This looks wrong - I would think it would be better to use `EntityRef.NULL` here.', 'comment_created': datetime.datetime(2020, 7, 4, 18, 12, 14, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 449794494, 'comment_body': ""With a more functional approach to using Stream API this could be written as\r\n\r\n```suggestion\r\n        \r\n        return StreamSupport.stream(entityManager.getEntitiesWith(WellSourceComponent.class).spliterator(), false)\r\n                .filter(waterSource -> containsLocation(waterSource, blockLocation))\r\n                .findFirst()\r\n                .orElse(EntityRef.NULL);\r\n```\r\n\r\nThe method `containsLocation` probably needs a better name, but I don't fully get what is happening there to be honest üôà \r\n\r\n```java\r\n    private boolean containsLocation(EntityRef waterSource, Vector3i location) {\r\n        DynParcelRefComponent dynParcelRefComponent = waterSource.getComponent(DynParcelRefComponent.class);\r\n        Rect2i parcelRect = dynParcelRefComponent.dynParcel.getShape();\r\n        return parcelRect.contains(location.x, location.z);\r\n    }\r\n```\r\n"", 'comment_created': datetime.datetime(2020, 7, 4, 18, 21, 27, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 449794720, 'comment_body': '... or with using a `Predicate<EntityRef>`:\r\n\r\n```suggestion\r\n\r\n        return StreamSupport.stream(entityManager.getEntitiesWith(WellSourceComponent.class).spliterator(), false)\r\n                .filter(atLocation(blockLocation))\r\n                .findFirst()\r\n                .orElse(EntityRef.NULL);\r\n```\r\n\r\nand\r\n\r\n```java\r\n    private Predicate<EntityRef> atLocation(Vector3i location) {\r\n        return (waterSource) -> {\r\n            DynParcelRefComponent dynParcelRefComponent = waterSource.getComponent(DynParcelRefComponent.class);\r\n            Rect2i parcelRect = dynParcelRefComponent.dynParcel.getShape();\r\n            return parcelRect.contains(location.x, location.z);\r\n        };\r\n    }\r\n```', 'comment_created': datetime.datetime(2020, 7, 4, 18, 24, 28, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 449944359, 'comment_body': 'refillsLeft is definitely better for this variable, it has been replaced üëç ', 'comment_created': datetime.datetime(2020, 7, 6, 1, 26, 32, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 449944549, 'comment_body': 'This name change is also much better, it is now replaced üëç ', 'comment_created': datetime.datetime(2020, 7, 6, 1, 27, 44, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 449944763, 'comment_body': 'Yeah `filledCup` is definitely better, also helps to contrast it from the `WaterCupComponent`, which can be applied to both empty and full cups.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 28, 39, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 449945728, 'comment_body': ""Yeah it would be very nice to be able to take some of the more useful parts of ManualLabor without needing to use the more complicated portions of that module. If the fluid containers portion of ML could be separated into it's own module that would be fantastic.\r\n\r\nIf I remember right I think that a lot of the texture assets in ManualLabor come from a Spritesheet (I had to crop it out of the sheet myself). I don't know how easy that would be to separate into different modules."", 'comment_created': datetime.datetime(2020, 7, 6, 1, 34, 50, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 449946004, 'comment_body': ""I applied the headings change to this PRs files. I can't seem to get the new header to automatically apply to new files though, and I don't know where I would look to find this option.... I'm using IntelliJ 2020.1.2 Ultimate."", 'comment_created': datetime.datetime(2020, 7, 6, 1, 36, 14, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 449946551, 'comment_body': 'Yeah it would be very nice to be able to combine all of these events into one! Another case I can think of is world time based updates, where something needs to be updated on the dusk event, dawn event, midnight event, etc.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 39, 17, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 449946853, 'comment_body': 'This has been added to the event handler, thanks for pointing this out!', 'comment_created': datetime.datetime(2020, 7, 6, 1, 40, 45, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 449947183, 'comment_body': 'Yeah some sort of less intrusive way to indicate the water level would be great. Another idea is to have the physical water level inside the well drop as the water is used, but the dynamic water graphics effect would make this difficult to see.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 42, 35, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 449947464, 'comment_body': 'The logic here has been moved to a different method üëç It looked way cleaner this way, so I also gave the `onActivate()` event handler similar treatment, with some processes changed to separate methods.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 44, 14, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 449947580, 'comment_body': 'Yep that is exactly what is happening here, nice catch!', 'comment_created': datetime.datetime(2020, 7, 6, 1, 44, 56, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 449948104, 'comment_body': 'Yep, that check should definitely come first. I rearranged the order of this event handler a little bit to make it look cleaner, so the `gatheringCharacter.exists()` check comes first now. üëç ', 'comment_created': datetime.datetime(2020, 7, 6, 1, 47, 42, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 449948947, 'comment_body': ""I did some rearranging of this method to make it look a bit cleaner, and removed a few of the return statements. There's still two of them though... Too many return statements is definitely something I'll be looking out for in the future."", 'comment_created': datetime.datetime(2020, 7, 6, 1, 52, 27, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 449949010, 'comment_body': 'Agreed, this has been changed to the EntityRef version üëç ', 'comment_created': datetime.datetime(2020, 7, 6, 1, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 449949653, 'comment_body': ""Woah, the stream implementation looks really nice! I'm still not very well versed in using streams over ordinary loops, I'll need to do some research on that. üëç "", 'comment_created': datetime.datetime(2020, 7, 6, 1, 56, 35, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 451013573, 'comment_body': ""Ideally components should be free of any logic. I'd say the `WellWaterSystem` would be a good place to put this.\r\nNote that you can often turn class methods into static method on some helper or utility class (common in Terasology would the corresponding system, overall in the Java world you might find something like `Wells` or `WellUtility`). "", 'comment_created': datetime.datetime(2020, 7, 7, 17, 3, 8, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 451092640, 'comment_body': 'Maybe you can tweak the method flow in a way that the first part is to retrieve the amount of water that can be taken from the well (`gatherWater`) and the second part doing something with this amount (`consumeWater`). \r\nIn particular, the second method should be able to deal with a zero-amount, thus getting rid of the addition `return` in here altogether.\r\n\r\n```suggestion\r\n\t\t// take out water if possible and save the updated component\r\n        int fillingAmount = gatherWater(wellEntity);\r\n\t\tconsumeWater(fillingAmount, gatheringCharacter);\r\n```', 'comment_created': datetime.datetime(2020, 7, 7, 19, 27, 3, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 456858715, 'comment_body': 'The logic here has been removed from the component and added back to the well system üëç \r\n', 'comment_created': datetime.datetime(2020, 7, 19, 4, 42, 11, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 456859420, 'comment_body': ""I didn't use exactly what the code suggestion says, but something similar that still removes the additional return statement üëç "", 'comment_created': datetime.datetime(2020, 7, 19, 4, 52, 7, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}]","[{'commit_sha': '8c4d6ec804844fd642fbcf45b475cc79d573224e', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f423c5e5314140788d75d77f9b545d3635f57e9b', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cc9f5b5b2f2c7d481e603ced789a9cbc849ed6c', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4b4b922f9969cf9ca5b241b94761ba068fed6c8', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f60fa246ae206ad77ec6be345fd3e4076b4d711', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9b94f6c74921cb24a03f7cce9f2be5026425db8', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b39e727918c584f24390fd116eb8f9b166a9c31c', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfdf7f637478991a76e8b086539ec7459f7fb7bf', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ab6172cfc162af801b766b23efb9febdc11aa15', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85a8fde584bbd08fe696bc83a83fc5465513f90d', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd52da7b2bc68b3785f100cce36a288cd254143db', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '601f352070b3e1db3963c5793b913236772e1d4d', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4eaaae3e1751d94204d409262a4e986b197f45de', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00da1ae4e4abf9c68f777291f9b8da6563036613', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
437691666,Add food & drink properties to all fruits,"Some fruits in this module could not be consumed by the player for hunger/thirst benefit. This PR adds these properties to all fruit, so that they are all consumable. Slight variations in benefit exist between all the fruits based on fruit size and water content.",True,12,https://api.github.com/repos/Terasology/AdditionalFruits/pulls/12,https://github.com/Terasology/AdditionalFruits/pull/12,closed,89,12,12,2,0,2,0,0,[],2020-06-22 05:30:05+00:00,2020-06-25 19:24:49+00:00,309284.0,"3 days, 13:54:44","[{'comment_id': 443800376, 'comment_body': 'While you are editing these files - could you please align all these `stackId`s to be aligned with `""AdditionalFruits:BlueberryBush""`, please? ', 'comment_created': datetime.datetime(2020, 6, 22, 20, 15, 50, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 445175557, 'comment_body': 'All of the stackIDs have been adjusted to the same form üëç ', 'comment_created': datetime.datetime(2020, 6, 24, 21, 14, 12, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}]","[{'commit_sha': '326b9dbe525d8e372150fcc371e37ae51bc5d50c', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e152302988ff7eb7f3f8f96128c36911e9fd5ee1', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
437692827,Add food & drink properties to vegetables,"Some vegetables that should be consumable weren't consumable at all by the player. This PR adds consumable food & drink properties to all vegetables, except for the pumpkin. Slight variations exist between all vegetables based on water content and size.",True,5,https://api.github.com/repos/Terasology/AdditionalVegetables/pulls/5,https://github.com/Terasology/AdditionalVegetables/pull/5,closed,13,1,3,1,0,1,1,0,[{'name': 'Type: Improvement'}],2020-06-22 05:33:30+00:00,2020-06-22 18:55:32+00:00,48122.0,13:22:02,"[{'comment_id': 443761620, 'comment_body': ""I just noticed that these components are available as transitive dependencies via EdibleFlora. I'm wondering whether we should make Hunger and Thirst explicit (optional) dependencies to reflect this better :thinking:\r\n\r\n... and I'm pretty sure this is not the only place where we are using components of transitive dependencies."", 'comment_created': datetime.datetime(2020, 6, 22, 18, 54, 43, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}]","[{'commit_sha': 'a0b86490ab5da472742403a9ecfd30366bb1318e', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
437702362,Addition of farms & new crops to cities,"Hunger used to be a very simple and boring player need to take care of. The only way to deal with hunger was to occasionally kill deer outside of cities, and use the meat to replenish hunger. This pull request adds farms to cities, that grow a particular crop for the player to eat.:

![image](https://user-images.githubusercontent.com/44126397/85252494-77d67b00-b436-11ea-856d-6dca55b1d4e6.png)
_A farm inside a city where blueberries grow._

Each city has a native crop, and all farms will contains bushes/vines that grow this particular crop. As well, these food items can be bought and sold in marketplaces.

<h3>Testing</h3>

- Travel through the world until a settlement is located.
- Find a farm inside the city, and you will see bushes or vines of a particular crop. This may take a moment to appear.
- Harvest a fruiting bush/bud by pressing 'e', and eat the fruit by right clicking.
- Plant a harvested fruit again by right clicking on the ground.
- Visit the market, and buy an offered fruit item.",True,71,https://api.github.com/repos/Terasology/MetalRenegades/pulls/71,https://github.com/Terasology/MetalRenegades/pull/71,closed,327,9,11,7,0,2,0,0,[],2020-06-22 05:59:01+00:00,2020-06-30 19:51:50+00:00,741169.0,"8 days, 13:52:49","[{'comment_id': 444869067, 'comment_body': 'The indentation here is inconsistent.', 'comment_created': datetime.datetime(2020, 6, 24, 12, 50, 22, tzinfo=datetime.timezone.utc), 'commenter': 'mayant15', 'type': 'User'}, {'comment_id': 447935706, 'comment_body': 'Indentation has been fixed, thanks for pointing this out!', 'comment_created': datetime.datetime(2020, 6, 30, 19, 43, 8, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}]","[{'commit_sha': '60dc2811013915a9d62ad89ecc1f73790b09dc4a', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '777625791c652198d8d6eb38e6a2f426083d7248', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27c7c99155dae7a1d8b92aa7cba4db21a05f0158', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c93c6dc14ec3fb4f900d76e9fb0392bf39ba57f', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53c514268942c14a6b9ec18cea418f531d3f1b8f', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15ed0c138f339b35a503fd64d65946994ba7c034', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a50c8b464b9eac526d2195c7de395d668a3542f', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
437712194,feat: Increase hunger reduction rate,"In-game, the player hunger requirement is very low in comparison to thirst, reducing its effectiveness as a gameplay element. This pull request increases the hunger reduction rate by 5x.",True,72,https://api.github.com/repos/Terasology/MetalRenegades/pulls/72,https://github.com/Terasology/MetalRenegades/pull/72,closed,4,0,1,1,0,0,0,0,[],2020-06-22 06:21:02+00:00,2020-06-22 09:10:05+00:00,10143.0,2:49:03,[],"[{'commit_sha': '52fe9f44918aecf68e801a16638e5a4cd3f433a6', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
437717114,Refactor old test characters into separate directory,"Some older unused test characters from last year's GSOC project still remain in the /characters prefab folder. These prefabs clutter up the files in this folder that are actually used, so I refactored them into a separate ""testCharacters"" folder.",True,73,https://api.github.com/repos/Terasology/MetalRenegades/pulls/73,https://github.com/Terasology/MetalRenegades/pull/73,closed,1,865,23,3,2,0,0,0,[],2020-06-22 06:32:21+00:00,2020-07-13 13:30:59+00:00,1839518.0,"21 days, 6:58:38",[],"[{'commit_sha': '38738917005c0d03a50d90c9b65034aefcbf7241', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f7894a1b5c3a3833c2c157a8ddf9938fa240b45', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30b189e2b0460e9a933031b7be2b3576c34ec0e0', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
440999674,Randomized physical NPC traits,"This pull request introduces some individual NPC characteristic randomization. When a character spawns, they are now given a name that displays over their head. As well, the characters now vary in size from small to large:

![image](https://user-images.githubusercontent.com/44126397/85937243-57963880-b8dc-11ea-86de-670143cbde0a.png)
_Two smaller-sized characters with names in the same house_

The character names are generated using an old west preset of [Terasology/NameGenerator](https://github.com/Terasology/NameGenerator/).

",True,74,https://api.github.com/repos/Terasology/MetalRenegades/pulls/74,https://github.com/Terasology/MetalRenegades/pull/74,closed,72,0,2,5,0,11,1,0,[{'name': 'Type: Improvement'}],2020-06-28 04:29:12+00:00,2020-07-25 06:05:33+00:00,2338581.0,"27 days, 1:36:21","[{'comment_id': 450369635, 'comment_body': ""I'm wondering why you chose `0x921233`. Maybe add a comment here?"", 'comment_created': datetime.datetime(2020, 7, 6, 17, 20, 1, tzinfo=datetime.timezone.utc), 'commenter': 'mayant15', 'type': 'User'}, {'comment_id': 450373511, 'comment_body': ""If the scale was different in different directions, this would unset it and make it uniform. Doesn't matter that much for Gooeys, but it's better to keep things generic and not have unintended side effects."", 'comment_created': datetime.datetime(2020, 7, 6, 17, 27, 29, tzinfo=datetime.timezone.utc), 'commenter': 'mayant15', 'type': 'User'}, {'comment_id': 453475181, 'comment_body': 'Please use the shorter license header üòâ ', 'comment_created': datetime.datetime(2020, 7, 13, 8, 19, 17, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 453475536, 'comment_body': 'Is a deviation of 0.1 noticable in-game? Nice idea to actually differ them in size, though üëç ', 'comment_created': datetime.datetime(2020, 7, 13, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 453479055, 'comment_body': ""We could just multiply the scale vector, can't we?\r\n\r\n```java\r\nVector3f scaleVariation = new Vector3f(skeletalMeshComponent.scale).mul(scaleDiff);\r\nskeletalMeshComponent.scale = scaleVariation;\r\n```\r\n\r\nAs vector operations modify data in place probably this works, too:\r\n\r\n```java\r\nskeletalMeshComponent.scale.mul(scaleDiff);\r\n```"", 'comment_created': datetime.datetime(2020, 7, 13, 8, 27, 4, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 459811160, 'comment_body': 'This has changed now since character scale changes are done by multiplying model scale, but this offset range allows for scale differences from 0.15f-0.35f, pretty significant on the small scale of the gooey model', 'comment_created': datetime.datetime(2020, 7, 24, 1, 22, 7, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 459812095, 'comment_body': ""This value came from the DynamicCities method of generating city names (specifically this: https://github.com/AndyTechGuy/DynamicCities/blob/0a800431d1716f581f999a5125592c81ce686727/src/main/java/org/terasology/dynamicCities/settlements/SettlementEntityManager.java#L127). I think it's just an arbitrary value for seed generation but I wasn't 100% sure, so I just copied it."", 'comment_created': datetime.datetime(2020, 7, 24, 1, 26, 38, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 459812177, 'comment_body': 'Yep multiplying the scale like this is probably better, this has been changed üëç ', 'comment_created': datetime.datetime(2020, 7, 24, 1, 26, 59, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 459812346, 'comment_body': 'The license header has been changed üëç The old license header still shows up for me when creating new files in IntelliJ, I have no idea why', 'comment_created': datetime.datetime(2020, 7, 24, 1, 27, 52, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 460283869, 'comment_body': 'Whould it be better to setup the `nameProvider` once when initializing the system and then only use that generator for new names? `generateName()` will generate a new name each time based on the seed of the name provider.', 'comment_created': datetime.datetime(2020, 7, 24, 20, 55, 9, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 460370436, 'comment_body': 'I agree that this is definitely better, the name provider is now initialized in the postBegin() stage. üëç ', 'comment_created': datetime.datetime(2020, 7, 25, 6, 2, 38, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}]","[{'commit_sha': '86a05128122eaadd07af9211509e97cc77eb42b2', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15f067effe706bc0a231ee7d8ab8df5e6ec29e56', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b714051b020496d4d003a55a9c14478c75f88eb8', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8c519db95a096d11c760bcb1823fb22376766f6', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0062449075f566aae90ac9db22a0ae7fede42b2', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
441182080,Optimize FindNearbyPlayersSystem by slowing down check rate,Optimizes the performance of FindNearbyPlayersSystem by slowing down the rate of player checks. The nearby player check rate is slowed down from every game update cycle to once every second.,True,34,https://api.github.com/repos/Terasology/Behaviors/pulls/34,https://github.com/Terasology/Behaviors/pull/34,closed,14,6,1,2,0,0,0,0,[],2020-06-29 04:03:05+00:00,2020-07-24 20:59:38+00:00,2220993.0,"25 days, 16:56:33",[],"[{'commit_sha': '899dbe084a85e02b7960dbaa6407b03bc745323c', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e654e94b078c0e3fb3dbe85deb82c8b4e073392', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
441182825,Lower character/deer spawns by half,"Improves in-game performance by lowering the number of in-game characters and deer by half. Residential houses now only hold one citizen each, and deer spawn chance is lowered from 2% to 1%. Improves in-game performance by lowering the demand on `SkeletonRenderer`.",True,75,https://api.github.com/repos/Terasology/MetalRenegades/pulls/75,https://github.com/Terasology/MetalRenegades/pull/75,closed,2,2,2,1,1,0,1,0,[{'name': 'Type: Improvement'}],2020-06-29 04:07:01+00:00,2020-06-29 20:37:42+00:00,59441.0,16:30:41,[],"[{'commit_sha': 'a73df952c9d6e0c6f4aeb57d9bdd6b236cb08a69', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
444351903,Two test characters from Metal Renegades,"A refactor of two characters from Metal Renegades, originally used to test key behavior features about a year ago. These characters are:

- **strayGooey**: A simple character with a yellow gooey model, to test the Terasology/Behaviors stray behavior.
- **nocturnalGooey**: A character that _sleeps_ (doesn't move) during the day, and strays at night.

**Nocturnal Gooey requires [Terasology/Behaviors#36](https://github.com/Terasology/Behaviors/pull/36) to work.**",True,7,https://api.github.com/repos/Terasology/TutorialBehaviors/pulls/7,https://github.com/Terasology/TutorialBehaviors/pull/7,closed,246,2,9,3,0,0,0,0,[],2020-07-05 03:10:14+00:00,2020-07-13 13:30:50+00:00,728436.0,"8 days, 10:20:36",[],"[{'commit_sha': '6920b87a7a7cbd6500bfd27ee3121ddba8efd4e8', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16267cbc6cf53e9a622097fe906f653a967c771e', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddb93cd2e4fad6dd4754b3bcecf7c7f3f6c9dc3f', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
444352054,Add night tracker system from Metal Renegades,"Introduces a system + action for tracking the current nighttime status, allowing for time-based actions. **Also pushes module version to 1.1.0.**

To use, add the `check_nighttime` node to a behavior tree. It will succeed if it is nighttime, and will fail if it's daytime.

This system is used in Terasology/MetalRenegades, and in a test character in Terasology/TutorialBehaviors.",True,36,https://api.github.com/repos/Terasology/Behaviors/pulls/36,https://github.com/Terasology/Behaviors/pull/36,closed,106,1,3,2,0,0,0,0,[],2020-07-05 03:12:51+00:00,2020-07-13 13:30:36+00:00,728265.0,"8 days, 10:17:45",[],"[{'commit_sha': '5e6a6ff214e419a0a2f2f4da9bf1808c29bce387', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '011111a20ddf6aa95798712d7f4e34114c6e2c26', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
447963861,"Replicate NameTagComponent fields to clients, to fix name tag display issues in multiplayer","Adds an `@Replicate` annotation to all fields of `NameTagComponent`. This replicates the name tag information from server to clients, so the all clients see newly generated name tags.

### How to test

- Join a host game/join game world with two clients, using a module that dynamically generates name tags. ([Terasology/MetalRenegades](https://github.com/Terasology/MetalRenegades) generates city names this way)
- When the name is generated, it should appear the same on both clients.
",True,4080,https://api.github.com/repos/MovingBlocks/Terasology/pulls/4080,https://github.com/MovingBlocks/Terasology/pull/4080,closed,5,0,1,1,1,0,2,0,"[{'name': 'Topic: UI/UX'}, {'name': 'Multiplayer'}]",2020-07-12 22:35:30+00:00,2020-07-13 19:52:48+00:00,76638.0,21:17:18,[],"[{'commit_sha': '91d0b39fcba8c13140d0cbd99a3435ee39145ade', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
447724004,Fix market operations for multiplayer mode,An accompanying pull request for [Terasology/MetalRenegades#78](https://github.com/Terasology/MetalRenegades/pull/78). These changes do not impact any other module using Economy features.,True,14,https://api.github.com/repos/Terasology/Economy/pulls/14,https://github.com/Terasology/Economy/pull/14,closed,269,132,13,2,0,1,0,0,[],2020-07-11 05:46:16+00:00,2020-07-21 14:58:55+00:00,897159.0,"10 days, 9:12:39","[{'comment_id': 458311526, 'comment_body': 'Does it make sense to have the empty constructor? Is it required somehow?', 'comment_created': datetime.datetime(2020, 7, 21, 18, 42, 17, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}]","[{'commit_sha': 'fbe6cb9085a456503d26b82c44abfd9286e21515', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a98e1431380a27f4fbc245b4c9a21de352b89cc', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
447724006,Fix market operations for multiplayer mode,An accompanying pull request for [Terasology/MetalRenegades#78](https://github.com/Terasology/MetalRenegades/pull/78). These changes do not impact any other module using DynamicCities features.,True,65,https://api.github.com/repos/Terasology/DynamicCities/pulls/65,https://github.com/Terasology/DynamicCities/pull/65,closed,14,0,3,2,0,0,0,0,[],2020-07-11 05:46:18+00:00,2020-07-21 14:58:42+00:00,897144.0,"10 days, 9:12:24",[],"[{'commit_sha': 'e2e7ef3fdce3b92d3b3cc128ae1b2401d22e1e2b', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15c266bad41847732e4387a6a112aaf57c5b198e', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
447724009,Fix market operations to work on multiplayer mode,"Fixes various operations of the city marketplaces, so the player can access items in multiplayer mode the same as in singleplayer mode. Tested with the client ""host game"" option and with a headless server.
Also fixes some aspects of the market UI, to fix some responsiveness issues.

<h3>Known Issues</h3>

- The market system works on entity IDs, which are not consistant between server-client. This was addressed by saving the entity ID in a component, but this may change on reloading a game. This cannot be tested, since all characters (including the market character) disappear when a game is reloaded, and cannot be interacted with.

**Requires [Terasology/Economy#14](https://github.com/Terasology/Economy/pull/14) and [Terasology/DynamicCities#65](https://github.com/Terasology/DynamicCities/pull/65) to work.**

Closes #32 ",True,78,https://api.github.com/repos/Terasology/MetalRenegades/pulls/78,https://github.com/Terasology/MetalRenegades/pull/78,closed,187,122,9,5,0,0,0,0,[],2020-07-11 05:46:19+00:00,2020-07-21 14:59:06+00:00,897167.0,"10 days, 9:12:47",[],"[{'commit_sha': '75a234158b8d5fbc1be92f6312d0d8e067a88746', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24a74162d20de9e5da292b833b631994f3f2387e', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '247e03b8b8b7e2fa43d244f66df324d1e32e91a4', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fce3be6cd529fbbf50794bf10bb84ef72f77b7b1', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b12326dd55e51abc504da5f264566183308a6aba', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
447991506,Add replicate fields to DialogComponent,"Adds replication fields, so Dialogs can operate properly in multiplayer game modes.

An accompanying pull request for Terasology/MetalRenegades#78",True,14,https://api.github.com/repos/Terasology/Dialogs/pulls/14,https://github.com/Terasology/Dialogs/pull/14,closed,5,0,1,1,1,0,0,0,[],2020-07-13 01:49:20+00:00,2020-07-13 19:57:35+00:00,65295.0,18:08:15,[],"[{'commit_sha': '99c1069c525d2cf35a9907adfd4d6e77c004dd8d', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
447964357,Greatly reduce items in default inventory,"The default inventory used to hold all the items required to play Metal Renegades. These items have been removed, and migrated to the shop as part of #78. Since these items may be useful for testing, the console command `testingKitMR` has been added, which gives the player the old default inventory upon activation.

<h3>Testing Instructions</h3>

- Create a new Metal Renegades world, the inventory should contain only a pickaxe and 10 torches.
- Use the command `testingKitMR` in the console (`). This should almost fill up the inventory bar with items.",True,79,https://api.github.com/repos/Terasology/MetalRenegades/pulls/79,https://github.com/Terasology/MetalRenegades/pull/79,closed,30,7,2,2,0,0,0,0,[],2020-07-12 22:40:35+00:00,2020-07-13 14:58:52+00:00,58697.0,16:18:17,[],"[{'commit_sha': '188b3c6e101f517fca6fb70b19b4476d330f9bcf', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '906a9f3a3212327d5c0e829217caa10df1b0f45c', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
447969933,Fix needs system to play on multiplayer and serialize properly,"The needs system used to use a needs component attached to all character with a field of type `Map<CitizenNeed.Type, CitizenNeed>`. This field could not be serialized, so therefore the needs system wouldn't work in multiplayer, and any time that the character is unloaded (by walking away) the needs system would fail. This pull request fixes the need component to use serializable data types.

<h3>Testing Instructions</h3>

- Create a headless server with Metal Renegades enabled.
- Join the game on a client, and search until you find a city.
- Look at a character. The tooltip should tell you if the NeedsComponent has replicated properly:

![image](https://user-images.githubusercontent.com/44126397/87258580-3ce8c580-c47f-11ea-8e83-f4eaf58c77c4.png)
_If all the details are shown like above, then the replication worked._

![image](https://user-images.githubusercontent.com/44126397/87259048-fc8b4680-c482-11ea-999e-a918aaedb59f.png)
_If the details are hidden like above, then the replication did not work._

- If the replication worked, test further by moving far away from the city. Then, move up close again. If the serialization failed, then the IDEA console (on the host) should be filled with `CheckNeedAction` failures.


",True,80,https://api.github.com/repos/Terasology/MetalRenegades/pulls/80,https://github.com/Terasology/MetalRenegades/pull/80,closed,71,11,6,1,0,2,0,0,[],2020-07-12 23:32:46+00:00,2020-07-20 15:49:12+00:00,663386.0,"7 days, 16:16:26","[{'comment_id': 453732145, 'comment_body': ""The only downside that I can see with this approach is that it is not extensible. There are now multiple files that need to be modified if someone wants to add a new need in the future. \r\n\r\nAs most need calculations will be done on the server, and it's just the tooltip that's on the client, you could keep the map and also store an array of strings, replicate just that array and print it out as it is in the tooltip.\r\n- Pros:\r\n  - Easier to add/change needs\r\n- Cons:\r\n  - That entire array has to be modified whenever a need is changed\r\n  - This array only exists to display tooltips and cannot be used anywhere else\r\n\r\nCan discuss this further, let me know what you think"", 'comment_created': datetime.datetime(2020, 7, 13, 15, 25, 13, tzinfo=datetime.timezone.utc), 'commenter': 'mayant15', 'type': 'User'}, {'comment_id': 456862997, 'comment_body': ""Keeping the citizen need map approach would probably be fine if the only problem was multiplayer replication, but those replication issues stem from the component not serializing properly. An unserializable field causes three different issues:\r\n\r\n- Needs status doesn't replicate over the server properly (the main topic of this PR)\r\n- Needs behaviors also break whenever the character is unloaded (if a player walks away from a character then walks back, the needs are completely broken, and the console is filled with NPEs)\r\n- Needs status won't save when the game is closed, leading to the same broken behavior and NPEs as above when the game is loaded again\r\n\r\nIf we can find a collection form to store needs in that can still be serialized then that would probably be the best way to do this üòÑ "", 'comment_created': datetime.datetime(2020, 7, 19, 5, 35, 56, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}]","[{'commit_sha': 'f4c60d660cd467b6732540f1956a9642d701bfe7', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
447976936,Add new minerals to world generation,"Adds four more minerals to world generation in addition to the already existing coal ore:

- Copper Ore
- Iron Ore
- Goal Ore
- Diamond Ore

As well, the ore generation stats have been changed to generally boost generation. All ores are now much easier to find.",True,81,https://api.github.com/repos/Terasology/MetalRenegades/pulls/81,https://github.com/Terasology/MetalRenegades/pull/81,closed,52,1,5,1,0,0,0,0,[],2020-07-13 00:25:09+00:00,2020-07-13 15:30:09+00:00,54300.0,15:05:00,[],"[{'commit_sha': 'd48bdf0de604292f0cfe1533e6f6b154f5609d16', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
448053041,Adjust trading system to work in multiplayer,"Fixes various operations of citizen trading, so that it works the same way in multiplayer that it does in singleplayer. This is done by splitting the trading system into two cooperative systems, one on the client and another on the server. Then, the functions that deal with trading were swapped out for a request/response pair of events.

<h3>Known Issues</h3>

- Prices are seemingly chosen at random, in no particular pattern or connection to the market system.
- Only one item can be chosen to be traded at a time.
- If two players are trading with the same citizen, one player's UI will not change with updates from the other player's UI. Any trade attempted with an item that was already traded away by the other player will fail.",True,82,https://api.github.com/repos/Terasology/MetalRenegades/pulls/82,https://github.com/Terasology/MetalRenegades/pull/82,closed,302,135,5,6,0,2,0,0,[],2020-07-13 05:59:29+00:00,2020-07-27 11:36:45+00:00,1229836.0,"14 days, 5:37:16","[{'comment_id': 458128705, 'comment_body': 'Just add a little javadoc here explaining what these items are, and then we can merge :slightly_smiling_face: ', 'comment_created': datetime.datetime(2020, 7, 21, 14, 12, 46, tzinfo=datetime.timezone.utc), 'commenter': 'mayant15', 'type': 'User'}, {'comment_id': 459840967, 'comment_body': 'Javadoc has been added here along with other places where it was missing in this PR üëç ', 'comment_created': datetime.datetime(2020, 7, 24, 3, 57, 1, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}]","[{'commit_sha': '59ef4b29a2335ec71deaba60409664750ff13f47', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fe5f4960db25a2a844223c965bd534eb8987a8d', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '620418693cc5b591d7ebaa607db2a65937d4beb0', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b527894633464c238f96d31eab9ccf08543e4c9', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7dab4de66bec4090b46fa246e15caacbcae016d4', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e330c0aecafdb80dab49d568f1987abcd6b48951', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
451504679,Limit market citizen straying to marketplace area,"Changes the stray behavior on marketplace characters to the new `restrictedStray` behavior. This prevents the marketplace citizens moving far away from the market/city, making them unable to handle transactions.

**Requires [Terasology/Behaviors#41](https://github.com/Terasology/Behaviors/pull/41/) to work. **
",True,83,https://api.github.com/repos/Terasology/MetalRenegades/pulls/83,https://github.com/Terasology/MetalRenegades/pull/83,closed,5,1,2,8,0,12,0,0,[],2020-07-17 22:19:48+00:00,2020-08-05 16:14:04+00:00,1619656.0,"18 days, 17:54:16","[{'comment_id': 456818373, 'comment_body': ""It's not 2017 anymore üòã "", 'comment_created': datetime.datetime(2020, 7, 18, 19, 3, 37, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 457285463, 'comment_body': ""May I ask why you approached it this way? Sure, it's definitely more robust considering the navgraphSystem hiccups we might come across but it sort of seems more complicated than it could be. Did you try just finding a random block within the lot of the market? and doing a getBlock() on that?\r\n`WalkableBlock nextBlock = pathfinderSystem.getBlock(randomPos)`"", 'comment_created': datetime.datetime(2020, 7, 20, 11, 8, 35, tzinfo=datetime.timezone.utc), 'commenter': 'agent-q1', 'type': 'User'}, {'comment_id': 458144259, 'comment_body': 'Use the shorter license header here please', 'comment_created': datetime.datetime(2020, 7, 21, 14, 32, 45, tzinfo=datetime.timezone.utc), 'commenter': 'mayant15', 'type': 'User'}, {'comment_id': 459842609, 'comment_body': 'This node is made to be very similar to the way that the original stray behavior worked, the node here is basically this: https://github.com/Terasology/Behaviors/blob/0928e657b30b8ef2b1fadf6e718c697c8f9f22cc/src/main/java/org/terasology/minion/move/SetTargetToNearbyBlockNode.java with market size limitations considered.\r\n\r\nChoosing random blocks in the marketplace would probably be much simpler, is this the way that I should go?', 'comment_created': datetime.datetime(2020, 7, 24, 4, 6, 40, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 459843548, 'comment_body': 'This header has been replaced with the shorter header üëç ', 'comment_created': datetime.datetime(2020, 7, 24, 4, 11, 49, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 460302044, 'comment_body': 'What\'s the difference between the `shopkeeperStray` behavior and Behavior\'s `stray` behavior? Is the shopkeeper ""bound"" to a specific location?\r\nIn that case, can this be implemented in generic fashion (`Behaviors:restrictedStray` ) so that it is reusable in other cases? I\'d imagine a similar restriction would make sense for the Oreons in MOO.', 'comment_created': datetime.datetime(2020, 7, 24, 21, 46, 31, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 460304078, 'comment_body': 'Is that probability in percent? Maybe a doc comment would help here üßê ', 'comment_created': datetime.datetime(2020, 7, 24, 21, 53, 9, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 460305244, 'comment_body': 'Do you really need `String.format`? I think that the logging method can also do some string interpolation:\r\n\r\n```suggestion\r\n        logger.debug(""Looking for a block: my block is {}, found destination {}"", startBlock.getBlockPosition(), currentBlock.getBlockPosition()));\r\n```', 'comment_created': datetime.datetime(2020, 7, 24, 21, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 461043046, 'comment_body': 'Yep I completely agree to this. Wonder what the fields would be in the restrictedStray behavior though. The building entity in which Actor should reside in? ', 'comment_created': datetime.datetime(2020, 7, 27, 17, 13, 22, tzinfo=datetime.timezone.utc), 'commenter': 'agent-q1', 'type': 'User'}, {'comment_id': 462737808, 'comment_body': ""I agree that this behavior would be more useful in a generic form. I made a new generic `restrictedStray` behavior in Behaviors, and used that behavior here. Instead of referencing a building entity, the Behaviors version uses a bounding `Rect2i` from a `StrayRestrictionComponent`.\r\n\r\nHere's the pull request: https://github.com/Terasology/Behaviors/pull/41/"", 'comment_created': datetime.datetime(2020, 7, 30, 5, 6, 4, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 462738073, 'comment_body': 'Yep, that probability is done in percent. Doc comments have been added in the Behaviors version of this action.\r\n', 'comment_created': datetime.datetime(2020, 7, 30, 5, 6, 57, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 462738283, 'comment_body': ""I didn't know that the logger could do string interpolation this way! Thanks for telling me this, this is very useful!"", 'comment_created': datetime.datetime(2020, 7, 30, 5, 7, 41, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}]","[{'commit_sha': '93cc552f7831f90163f7f0364c85e84dd717b730', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '457c416297140336520577c42db48f1149be11c0', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3286d1c37030044fc3c27039a13bb5c6506aa765', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fea421b6fe388b8fad8e844dda9249e0b77735e', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b5b6dcb66cac8e2586f0012c3619257ecad82bb', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '946dca94786621912432fbed4026107d7abfa6e5', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f29b57cf574003efbcf9198b5748db694dcb00aa', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45f3c1b6ded11e78ebbe0eab3fed817b6ab1320e', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
457288832,feat: Generate hidden chests in the world,"Adds randomly generated chests that spawn randomly on the surface. These chests are randomly filled with helpful items for the player. These chests can be further modified in code to give other items as well. 

<h3>Testing Instructions</h3>

- Create a new Metal Renegades world
- Explore until a chest block is found
- Open it, and it should contain around 1-6 of the following items:
  - Berries
  - Tools
  - Pistol/Bullets",True,84,https://api.github.com/repos/Terasology/MetalRenegades/pulls/84,https://github.com/Terasology/MetalRenegades/pull/84,closed,363,0,9,4,2,0,0,0,[],2020-07-27 17:03:51+00:00,2020-08-02 09:47:28+00:00,492217.0,"5 days, 16:43:37",[],"[{'commit_sha': '0f1adf50edd2a1e56555557324c47ee2c4d558eb', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae166a29670eeca5bd1fabeae5196793a79d8d57', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bd1ca13759666fff72965c38f8d4996cc8ada91', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fad6b1ef1bc82e7a9cfbbb1909eb7ffd2087596c', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
458874273,Fix variable distance inside move_to behavior,"With `distanceSquared` defined separately upon initialization as `distance*distance`, any changes to the distance value inside the behavior tree is ignored . This `distanceSquared` field is swapped out in favour of just using `distance*distance` directly in the distance comparison.",False,40,https://api.github.com/repos/Terasology/Behaviors/pulls/40,https://github.com/Terasology/Behaviors/pull/40,closed,1,4,1,1,1,0,0,0,[],2020-07-30 04:56:32+00:00,2020-08-04 19:42:11+00:00,485139.0,"5 days, 14:45:39",[],"[{'commit_sha': '8955535e67b290793766ff1c7616aa7df10d9d52', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
458871734,Fix move_to minimum distance in citizen behaviors,This PR changes the minimum distance that a citizen character must be within a target to complete the travel action. The minimum distance was changed from `0.2` -> `2`. This should cut down significantly on the amount of characters rotating in circles above a target location.,True,85,https://api.github.com/repos/Terasology/MetalRenegades/pulls/85,https://github.com/Terasology/MetalRenegades/pull/85,closed,3,1,1,2,0,0,0,0,[],2020-07-30 04:49:39+00:00,2020-08-05 16:11:29+00:00,559310.0,"6 days, 11:21:50",[],"[{'commit_sha': 'b2adfd1085d2e75d2b18c815dde9617f8c6b1a63', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1238bafaa03cd261c4c533f64f5c5f38eb79d1b0', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
459823884,feat: Allow market prices to be defined in external config files,"Changes market price configuration to operate in external .prefab files, rather than inside the market system classes themselves. These configurations are marked with a `MarketPriceConfigurationComponent`, with each item defined as an array of four strings in the form `[itemURI, displayName, description, cost]`. These configurations are then used in all in-game transactions.

Items that have proper market configurations should appear in the market like this:
![image](https://user-images.githubusercontent.com/44126397/89006352-221caa80-d2e1-11ea-809a-bfc0e5d1e9ad.png)
_The item will have a properly capitalized display name in the list, with a custom description and constant price._


And items without proper market configurations should appear in the market like this:
![image](https://user-images.githubusercontent.com/44126397/89006444-598b5700-d2e1-11ea-94ca-ab69f59a7c13.png)
_The item will have a item URI as a display name, and a generic description. As well, the price is randomized._


As part of this PR, definitions for many of the common items within Metal Renegades have been included in three different config files: `foodItems.prefab`, `oresAndBlocks.prefab`, and `playerTools.prefab`.",True,86,https://api.github.com/repos/Terasology/MetalRenegades/pulls/86,https://github.com/Terasology/MetalRenegades/pull/86,closed,212,160,11,9,0,0,0,0,[],2020-07-31 06:25:24+00:00,2020-08-01 09:13:40+00:00,96496.0,"1 day, 2:48:16",[],"[{'commit_sha': '700cea1b3c3890357a734d847d2463f057e2b14c', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ed20dd1abb38792ddb33d5e1d69cee98372b05f', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f091fb9ec19c07f4ac78962cc9b4d9767420202', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48fd5da1cb67818292a737351495fc13961b0738', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79f584a7de18a383d3553b5b236ce9d9f4136fb5', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '921c0180468ac121a796aba8a67b210592150a14', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d6f3fb010bfcbe9939e6b6798a7ae66c01cc9fc', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3acd9b9cad87401a631f2cf0ef623bda3cf7755d', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aab7b0141283fc7e5231976c694930ca6c8523c0', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
461528811,fix: Quick fixes for trading system,"This pull request contains four small bug fixes relating to the trade system:

- Avoids a NPE when opening up the trade menu caused by initializing a value in `TradeUISystem` too early.
- Displays an item's display name rather than URI in the trade screen.
- Switches out a citizen's default `CoreAdvancedAssets:gun` (an overpowered item in this game with no market information) for 'CoreAdvanced:dynamite`.
- Lowers the price of dynamite to 75, the same as a pistol. At the old price of 100, the price was way too high to allow any valid trades.",True,87,https://api.github.com/repos/Terasology/MetalRenegades/pulls/87,https://github.com/Terasology/MetalRenegades/pull/87,closed,5,5,3,2,0,0,0,0,[],2020-08-01 23:52:55+00:00,2020-08-02 10:18:55+00:00,37560.0,10:26:00,[],"[{'commit_sha': '7188bfebc76fbe7248f609cbca12bbdcc6bf989e', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9cef89db8ed42fc23dbc59985a2418b6f25a287', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
463146353,Add valuable gems to hidden chests,"Adds three different gemstones to MR:

- Rubies
- Emeralds
- Sapphires

These gemstones have a value of 100 coins, and can be found in discoverable chests. This encourages players to search for hidden chests, and sell gemstones for their high value.

The icon assets for each gemstone comes from: https://laredgames.itch.io/gems-coins-free",True,91,https://api.github.com/repos/Terasology/MetalRenegades/pulls/91,https://github.com/Terasology/MetalRenegades/pull/91,closed,64,1,7,4,0,0,0,0,[],2020-08-05 05:02:25+00:00,2020-08-05 15:26:28+00:00,37443.0,10:24:03,[],"[{'commit_sha': '3904ea95b866c1b3837f244e295bb4b0e41020aa', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61a78464f51ad34f4e06a5cbca70701db1f8be82', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6823cdb337f76cb9eaac4f29ceb7e230241b64e0', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e07d9191211ce7a8b80d0c727d35cb64e73802e8', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
464948265,feat: Allow hidden chest fill items to be defined in external config files,"Allows hidden chest item definition to happen in external config files, rather than lists inside `ChestFillingSystem`. These configurations are marked inside `.prefab` files with a `DiscoverableItemConfigurationComponent`, with each item defined as an array of four strings in the form [itemURI, itemQuantity]. These configurations are combined and used together to determine the items that will appear in each chest.

These definitions have been included in the three general item prefabs created as part of #86, alongside the price definitions for similar items.",False,92,https://api.github.com/repos/Terasology/MetalRenegades/pulls/92,https://github.com/Terasology/MetalRenegades/pull/92,closed,91,46,6,3,2,8,0,0,[],2020-08-08 04:05:24+00:00,2020-08-27 07:08:43+00:00,1652599.0,"19 days, 3:03:19","[{'comment_id': 469167641, 'comment_body': 'Unused import', 'comment_created': datetime.datetime(2020, 8, 12, 10, 40, 16, tzinfo=datetime.timezone.utc), 'commenter': 'mayant15', 'type': 'User'}, {'comment_id': 469170403, 'comment_body': '`initialise` is guaranteed to run before this happens. Print out the error without attempting again?', 'comment_created': datetime.datetime(2020, 8, 12, 10, 46, 9, tzinfo=datetime.timezone.utc), 'commenter': 'mayant15', 'type': 'User'}, {'comment_id': 469171041, 'comment_body': 'Unused import', 'comment_created': datetime.datetime(2020, 8, 12, 10, 47, 30, tzinfo=datetime.timezone.utc), 'commenter': 'mayant15', 'type': 'User'}, {'comment_id': 469171599, 'comment_body': '`Region3i` is deprecated. Use `BlockRegion` instead.', 'comment_created': datetime.datetime(2020, 8, 12, 10, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'mayant15', 'type': 'User'}, {'comment_id': 469173736, 'comment_body': '`Region3i` is deprecated. Use `BlockRegion` instead', 'comment_created': datetime.datetime(2020, 8, 12, 10, 53, tzinfo=datetime.timezone.utc), 'commenter': 'mayant15', 'type': 'User'}, {'comment_id': 471163249, 'comment_body': 'This part was accidentally included as part of the structure template updates, sorry about that!', 'comment_created': datetime.datetime(2020, 8, 16, 21, 53, 27, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 471163612, 'comment_body': ""I swapped out the `Region3i` statement for this instead:\r\n`Rect2i worldRegion = surfaceHeightFacet.getWorldRegion();`\r\n\r\nThis alternative was taken directly from other similar world providers as a way to get the current world region. However, this causes world generation to crash with errors similar to the following:\r\n`[Chunk-Generator-7] ERROR o.t.u.concurrency.TaskProcessor - Error in thread Chunk-Generator-7\r\njava.lang.IllegalArgumentException: Out of bounds: (-37, 11, 45) for region (Min: (-33, 0, 31), Size: (34, 65, 34))\r\n\tat org.terasology.world.generation.facets.base.SparseFacet3D.checkWorldCoords(SparseFacet3D.java:56)\r\n\tat org.terasology.world.generation.facets.base.SparseObjectFacet3D.setWorld(SparseObjectFacet3D.java:91)\r\n\tat org.terasology.metalrenegades.world.dynamic.discoverables.DiscoverablesProvider.process(DiscoverablesProvider.java:50)\r\n\tat org.terasology.world.generation.RegionImpl.lambda$getFacet$1(RegionImpl.java:49)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1654)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)\r\n\tat org.terasology.world.generation.RegionImpl.getFacet(RegionImpl.java:48)\r\n\tat org.terasology.metalrenegades.world.dynamic.discoverables.DiscoverablesRasterizer.generateChunk(DiscoverablesRasterizer.java:41)\r\n\tat org.terasology.world.generation.WorldImpl.rasterizeChunk(WorldImpl.java:64)\r\n\tat org.terasology.world.generation.BaseFacetedWorldGenerator.createChunk(BaseFacetedWorldGenerator.java:75)\r\n\tat org.terasology.world.chunks.localChunkProvider.LocalChunkProvider$1.run(LocalChunkProvider.java:649)\r\n\tat org.terasology.utilities.concurrency.TaskProcessor.run(TaskProcessor.java:50)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)`\r\n\r\nI don't know why these errors appear, since switching out `Region3i` for `Rect2i` should result in the same region, but the provider is somehow generating positions that are out of bounds."", 'comment_created': datetime.datetime(2020, 8, 16, 21, 56, 52, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 475432888, 'comment_body': 'I found a way to fix this issue, it should all be good now üëç ', 'comment_created': datetime.datetime(2020, 8, 24, 8, 42, 27, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}]","[{'commit_sha': '4a17b141a9ea25b044bf8bfc8cdd0f4ad31b1058', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91cf1fcdb8ce3e752aae1bf191af0bcf32ab2242', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e167784010db1cce55cada2f9222f45205aaf74', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
466466710,Spawn enemies around players travelling outside cities at night,"Adds an enemy spawning system to MR. This system spawns enemies around players that are outside the area of a city at night (enemies from Terasology/MawGooey), which will attack and eventually kill the player if they don't defend themselves. These characters can be destroyed by getting killed, by the player moving back into a city, or by the sun rising in the morning.

<h3>Testing</h3>

- Wait until nighttime falls (can be sped up by putting `setWorldTime 0.75` in the console. (setting the time explicitly to nighttime will not work here, since the world time system must fire the dusk event specifically)
- Walk outside a city, and watch as large gooey-like enemies spawn around you. These should be seen on the minimap.
- Let a mawgooey chase you inside a city, and it should disappear.
- Stay inside the city while the night is still ongoing, no more enemies should spawn around you.",True,93,https://api.github.com/repos/Terasology/MetalRenegades/pulls/93,https://github.com/Terasology/MetalRenegades/pull/93,closed,284,6,6,4,0,12,0,0,[],2020-08-12 02:28:43+00:00,2020-08-18 17:58:46+00:00,574203.0,"6 days, 15:30:03","[{'comment_id': 469182340, 'comment_body': ""This really isn't required unless you're planning to set it externally? (like WildAnimals does)"", 'comment_created': datetime.datetime(2020, 8, 12, 11, 11, 31, tzinfo=datetime.timezone.utc), 'commenter': 'mayant15', 'type': 'User'}, {'comment_id': 469184042, 'comment_body': '`findSpawnPositions` should return a single position imo, because if you have a list of candidates and you pick one here based on a condition (or the first), then that\'s still a part of ""finding a spawn position"" and fits better in that function.', 'comment_created': datetime.datetime(2020, 8, 12, 11, 15, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mayant15', 'type': 'User'}, {'comment_id': 469212171, 'comment_body': 'The ""check outside settlements"" can be done at just the corners of the rectangle. Then for the actual spawn position pick a random point inside this rectangle, [raytrace](https://github.com/MovingBlocks/Terasology/blob/25b81f4a68b9ec5bd694cebc92c562c4e55a0fbf/engine/src/main/java/org/terasology/physics/Physics.java#L38) straight down to find the ground and spawn the enemy there. To further improve this, you could first pick 4 blocks (NSEW of the player) to see if they\'re near a water body or something that won\'t allow spawning. Then instead of picking a completely random point, have something like a weighted random that avoids invalid directions.', 'comment_created': datetime.datetime(2020, 8, 12, 12, 14, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mayant15', 'type': 'User'}, {'comment_id': 469349319, 'comment_body': 'This section confuses me. You are decreasing `enemyGracePeriodComponent.cyclesLeft`, but the condition to remove it is if `enemyGracePeriodComponent.cyclesLeft >=0 `.\r\nShould it maybe be `enemyGracePeriodComponent.cyclesLeft <=0 ` ?', 'comment_created': datetime.datetime(2020, 8, 12, 15, 33, 56, tzinfo=datetime.timezone.utc), 'commenter': 'agent-q1', 'type': 'User'}, {'comment_id': 469361193, 'comment_body': 'Maybe change the condition to `if(blockBelow.isPenetrable())` ?. Because I have seen some cases when mineral ores have formed at the top layer. Also makes it generic, if we decide to add different biome features such as oasis or chasms, that might use blocks that are not sand.', 'comment_created': datetime.datetime(2020, 8, 12, 15, 47, 28, tzinfo=datetime.timezone.utc), 'commenter': 'agent-q1', 'type': 'User'}, {'comment_id': 469362761, 'comment_body': ""again... `if(!blockAbove.isPenetrable())`. If we sometime later in the future decide that enemies would spawn from within mist or such. I don't see any reason as to why you haven't gone for the generic approach but if you feel there is a solid reason, you might as well let it stay."", 'comment_created': datetime.datetime(2020, 8, 12, 15, 49, 46, tzinfo=datetime.timezone.utc), 'commenter': 'agent-q1', 'type': 'User'}, {'comment_id': 469364438, 'comment_body': 'Yep I agree. Could very well be simplified with finding a random point. You could just keep finding random positions inside this rectangle until you found a spawnable block. Raytracing is elegant, but it does introduce some form of complexity. You could just keep coming down block by block (from some reasonable height) until you find a non-penetrable block.', 'comment_created': datetime.datetime(2020, 8, 12, 15, 52, 15, tzinfo=datetime.timezone.utc), 'commenter': 'agent-q1', 'type': 'User'}, {'comment_id': 471850800, 'comment_body': ""Yep this definitely isn't required, actually after checking it I found it was completely unused. Deleted üëç "", 'comment_created': datetime.datetime(2020, 8, 18, 0, 47, 21, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 471851115, 'comment_body': 'Yep, this function has been retooled to return only one position. That function comes from when the system used to spawn multiple enemies at once based on potential positions.', 'comment_created': datetime.datetime(2020, 8, 18, 0, 48, 35, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 471854228, 'comment_body': ""The method of choosing spawn positions has been completely changed, using ideas from both responses. A list of valid chunks is collected, kept up to date with chunk respawn and despawn events. Then to choose a random spawn point, a random chunk is selected from this list, and a random (x, z) point is chosen in that chunk. The surface block in that column is found (by going down block by block, not with raytracing), and that's where the spawning occurs.\r\n\r\nThere are some cases where a column inside a chunk, or the entire chunk (for example, a chunk of all air) won't have any acceptable spawn points. In these cases, the spawn cycle will just be skipped. This can be swapped for trying again with a different chunk/column, but I want to avoid performance drops where spawn searching is attempted many times."", 'comment_created': datetime.datetime(2020, 8, 18, 1, 0, 30, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 471854530, 'comment_body': 'Yep, this comparison is done the wrong way, thanks for pointing it out! Because of the new spawning system this component has been removed though, so I guess the problem is fixed anyways üòÑ ', 'comment_created': datetime.datetime(2020, 8, 18, 1, 1, 44, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}, {'comment_id': 471855257, 'comment_body': ""These conditions were taken from the deer spawning system, where the deer shouldn't spawn on cactus or inside buildings. However, for enemies it probably doesn't matter as much, so it's been swapped out üëç "", 'comment_created': datetime.datetime(2020, 8, 18, 1, 4, 16, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}]","[{'commit_sha': '41700cfb22f6712f9b9ad4be78f3c2ed100159b8', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e68febb9e07a43b241ecc289113c3dee699f896', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d0e2a7579118ccafee63c274ad7b63e7a85db70', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9db8c73b4ebf7bf673a278332efac7fb726ad1c', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
466469309,Adjust needs system with varying values and external configuration,"Adds a few improvements to the AI character needs system:

- Removes the switch statements used in the old character needs system to a needs list, which allows for easy addition of new kinds of needs.
- Need variances are now created between different characters. This way all characters will get thirsty/hungry at a different rate than every other character, increasing character diversity.
- Allows for external configuration of the needs system. A default config prefab is provided, but can be replaced by a configuration in a different module that has a higher priority.",True,94,https://api.github.com/repos/Terasology/MetalRenegades/pulls/94,https://github.com/Terasology/MetalRenegades/pull/94,closed,123,76,9,2,0,4,0,0,[],2020-08-12 02:38:04+00:00,2020-08-18 17:10:44+00:00,570760.0,"6 days, 14:32:40","[{'comment_id': 469215298, 'comment_body': 'Unused imports', 'comment_created': datetime.datetime(2020, 8, 12, 12, 19, 55, tzinfo=datetime.timezone.utc), 'commenter': 'mayant15', 'type': 'User'}, {'comment_id': 469215710, 'comment_body': ""If this constructor does nothing then it's probably cleaner to remove it and use Java's default"", 'comment_created': datetime.datetime(2020, 8, 12, 12, 20, 43, tzinfo=datetime.timezone.utc), 'commenter': 'mayant15', 'type': 'User'}, {'comment_id': 469219107, 'comment_body': ""[Lists](https://docs.oracle.com/javase/8/docs/api/java/util/List.html) (iterables) don't need a stream and can directly [`forEach`](https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html#forEach-java.util.function.Consumer-)"", 'comment_created': datetime.datetime(2020, 8, 12, 12, 25, 45, tzinfo=datetime.timezone.utc), 'commenter': 'mayant15', 'type': 'User'}, {'comment_id': 471164028, 'comment_body': 'Agreed, the extra constructor has been removed üëç ', 'comment_created': datetime.datetime(2020, 8, 16, 22, 1, 8, tzinfo=datetime.timezone.utc), 'commenter': 'AndyTechGuy', 'type': 'User'}]","[{'commit_sha': '702a181388080cd9ec6cfb005dee2c61c8b8b8a5', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a83e4be9f2f25ffc983e0c075271c58ed460f53', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
465859653,Change deer spawning values for better performance,"Deer spawning values in WildAnimals have been causing issues in Josharias Survival, with deer spawning way too frequently and filling up the world with entities. This PR changes these spawn config values to the ones used in Metal Renegades, which are more stable.",True,58,https://api.github.com/repos/Terasology/WildAnimals/pulls/58,https://github.com/Terasology/WildAnimals/pull/58,closed,4,4,1,2,0,0,0,0,[],2020-08-11 04:40:26+00:00,2020-08-11 07:08:37+00:00,8891.0,2:28:11,[],"[{'commit_sha': '87b83206239ca5f18cfbc88a277a37d92379fbcc', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e72534990e8ce18a1ef62ff335331f93dc53cd6b', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1
475991101,Change discoverables generator to allow structure templates,"Modifies the discoverable chest generator system to allow the use of structure templates. Now, instead of only chests generating in the wild, full structures with chests inside can generate. Two buildings have been added to accompany this change:

The abandoned house:
![image](https://user-images.githubusercontent.com/44126397/91673585-5fa66a80-eb0f-11ea-84ae-4e68df2ec410.png)

The dried well:
![image](https://user-images.githubusercontent.com/44126397/91673608-7ea4fc80-eb0f-11ea-8b46-e78ee6880da9.png)
",True,97,https://api.github.com/repos/Terasology/MetalRenegades/pulls/97,https://github.com/Terasology/MetalRenegades/pull/97,closed,175,19,8,9,0,0,0,0,[],2020-08-31 00:54:00+00:00,2020-09-05 09:34:16+00:00,463216.0,"5 days, 8:40:16",[],"[{'commit_sha': '4a17b141a9ea25b044bf8bfc8cdd0f4ad31b1058', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e601c7eab01125117ae7d9c842fea8c69530990c', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91cf1fcdb8ce3e752aae1bf191af0bcf32ab2242', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e167784010db1cce55cada2f9222f45205aaf74', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f550ab10c5694b036e26167b9249d96fbb51fcd', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b546e42165857e857d39fc397068f1f761bb20b', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5579fd3041b6718d3645523d45ce2abde77db0b0', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b18abfeb48d99d749a1f6dc36f61ec9afd97ece4', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9d41632e1e56d5355f47cc7aa75bb08ecbcfb08', 'committer_username': 'AndyTechGuy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 13, 23, 40, 53, tzinfo=datetime.timezone.utc)}]",,44126397,,User,,25,,0,1

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
59501378,DynamicCities,Terasology/DynamicCities,Java,13,17,24,21,253,15,7,1,"[{'id': 447724006, 'number': 65, 'closed': datetime.datetime(2020, 7, 21, 14, 58, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 11, 5, 46, 18, tzinfo=datetime.timezone.utc), 'time_taken': 897144.0, 'time_delta': '10 days, 9:12:24', 'additions': 14, 'deletions': 0, 'state': 'closed'}, {'id': 430321766, 'number': 64, 'closed': datetime.datetime(2020, 6, 29, 17, 25, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 7, 19, 36, 57, tzinfo=datetime.timezone.utc), 'time_taken': 1892939.0, 'time_delta': '21 days, 21:48:59', 'additions': 9, 'deletions': 10, 'state': 'closed'}, {'id': 429409958, 'number': 63, 'closed': datetime.datetime(2020, 6, 6, 21, 11, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 6, 20, 2, 44, tzinfo=datetime.timezone.utc), 'time_taken': 4106.0, 'time_delta': '1:08:26', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 428205918, 'number': 62, 'closed': datetime.datetime(2020, 6, 7, 19, 52, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 5, 3, 55, 36, tzinfo=datetime.timezone.utc), 'time_taken': 230222.0, 'time_delta': '2 days, 15:57:02', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 304540560, 'number': 51, 'closed': datetime.datetime(2019, 10, 13, 2, 15, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 6, 4, 14, 38, tzinfo=datetime.timezone.utc), 'time_taken': 5868048.0, 'time_delta': '67 days, 22:00:48', 'additions': 9, 'deletions': 10, 'state': 'closed'}, {'id': 302727401, 'number': 49, 'closed': datetime.datetime(2019, 8, 2, 18, 47, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 30, 23, 1, tzinfo=datetime.timezone.utc), 'time_taken': 243970.0, 'time_delta': '2 days, 19:46:10', 'additions': 15, 'deletions': 10, 'state': 'closed'}, {'id': 287619211, 'number': 43, 'closed': datetime.datetime(2019, 6, 20, 2, 48, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 12, 18, 10, 31, tzinfo=datetime.timezone.utc), 'time_taken': 635907.0, 'time_delta': '7 days, 8:38:27', 'additions': 4, 'deletions': 0, 'state': 'closed'}]"
187640743,MetalRenegades,Terasology/MetalRenegades,Java,16,6,22,18,392,22,4,2,"[{'id': 475991101, 'number': 97, 'closed': datetime.datetime(2020, 9, 5, 9, 34, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 31, 0, 54, tzinfo=datetime.timezone.utc), 'time_taken': 463216.0, 'time_delta': '5 days, 8:40:16', 'additions': 175, 'deletions': 19, 'state': 'closed'}, {'id': 472244569, 'number': 96, 'closed': datetime.datetime(2020, 8, 27, 7, 14, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 24, 4, 7, 44, tzinfo=datetime.timezone.utc), 'time_taken': 270430.0, 'time_delta': '3 days, 3:07:10', 'additions': 179, 'deletions': 3, 'state': 'closed'}, {'id': 466469309, 'number': 94, 'closed': datetime.datetime(2020, 8, 18, 17, 10, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 12, 2, 38, 4, tzinfo=datetime.timezone.utc), 'time_taken': 570760.0, 'time_delta': '6 days, 14:32:40', 'additions': 123, 'deletions': 76, 'state': 'closed'}, {'id': 466466710, 'number': 93, 'closed': datetime.datetime(2020, 8, 18, 17, 58, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 12, 2, 28, 43, tzinfo=datetime.timezone.utc), 'time_taken': 574203.0, 'time_delta': '6 days, 15:30:03', 'additions': 284, 'deletions': 6, 'state': 'closed'}, {'id': 464948265, 'number': 92, 'closed': datetime.datetime(2020, 8, 27, 7, 8, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 8, 4, 5, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1652599.0, 'time_delta': '19 days, 3:03:19', 'additions': 91, 'deletions': 46, 'state': 'closed'}, {'id': 463146353, 'number': 91, 'closed': datetime.datetime(2020, 8, 5, 15, 26, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 5, 5, 2, 25, tzinfo=datetime.timezone.utc), 'time_taken': 37443.0, 'time_delta': '10:24:03', 'additions': 64, 'deletions': 1, 'state': 'closed'}, {'id': 461837001, 'number': 88, 'closed': datetime.datetime(2020, 8, 4, 22, 33, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 2, 17, 36, 36, tzinfo=datetime.timezone.utc), 'time_taken': 190624.0, 'time_delta': '2 days, 4:57:04', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 461528811, 'number': 87, 'closed': datetime.datetime(2020, 8, 2, 10, 18, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 1, 23, 52, 55, tzinfo=datetime.timezone.utc), 'time_taken': 37560.0, 'time_delta': '10:26:00', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 459823884, 'number': 86, 'closed': datetime.datetime(2020, 8, 1, 9, 13, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 31, 6, 25, 24, tzinfo=datetime.timezone.utc), 'time_taken': 96496.0, 'time_delta': '1 day, 2:48:16', 'additions': 212, 'deletions': 160, 'state': 'closed'}, {'id': 458871734, 'number': 85, 'closed': datetime.datetime(2020, 8, 5, 16, 11, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 30, 4, 49, 39, tzinfo=datetime.timezone.utc), 'time_taken': 559310.0, 'time_delta': '6 days, 11:21:50', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 457288832, 'number': 84, 'closed': datetime.datetime(2020, 8, 2, 9, 47, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 27, 17, 3, 51, tzinfo=datetime.timezone.utc), 'time_taken': 492217.0, 'time_delta': '5 days, 16:43:37', 'additions': 363, 'deletions': 0, 'state': 'closed'}, {'id': 451504679, 'number': 83, 'closed': datetime.datetime(2020, 8, 5, 16, 14, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 17, 22, 19, 48, tzinfo=datetime.timezone.utc), 'time_taken': 1619656.0, 'time_delta': '18 days, 17:54:16', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 448053041, 'number': 82, 'closed': datetime.datetime(2020, 7, 27, 11, 36, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 5, 59, 29, tzinfo=datetime.timezone.utc), 'time_taken': 1229836.0, 'time_delta': '14 days, 5:37:16', 'additions': 302, 'deletions': 135, 'state': 'closed'}, {'id': 447976936, 'number': 81, 'closed': datetime.datetime(2020, 7, 13, 15, 30, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 0, 25, 9, tzinfo=datetime.timezone.utc), 'time_taken': 54300.0, 'time_delta': '15:05:00', 'additions': 52, 'deletions': 1, 'state': 'closed'}, {'id': 447969933, 'number': 80, 'closed': datetime.datetime(2020, 7, 20, 15, 49, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 12, 23, 32, 46, tzinfo=datetime.timezone.utc), 'time_taken': 663386.0, 'time_delta': '7 days, 16:16:26', 'additions': 71, 'deletions': 11, 'state': 'closed'}, {'id': 447964357, 'number': 79, 'closed': datetime.datetime(2020, 7, 13, 14, 58, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 12, 22, 40, 35, tzinfo=datetime.timezone.utc), 'time_taken': 58697.0, 'time_delta': '16:18:17', 'additions': 30, 'deletions': 7, 'state': 'closed'}, {'id': 447724009, 'number': 78, 'closed': datetime.datetime(2020, 7, 21, 14, 59, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 11, 5, 46, 19, tzinfo=datetime.timezone.utc), 'time_taken': 897167.0, 'time_delta': '10 days, 9:12:47', 'additions': 187, 'deletions': 122, 'state': 'closed'}, {'id': 441182825, 'number': 75, 'closed': datetime.datetime(2020, 6, 29, 20, 37, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 29, 4, 7, 1, tzinfo=datetime.timezone.utc), 'time_taken': 59441.0, 'time_delta': '16:30:41', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 440999674, 'number': 74, 'closed': datetime.datetime(2020, 7, 25, 6, 5, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 28, 4, 29, 12, tzinfo=datetime.timezone.utc), 'time_taken': 2338581.0, 'time_delta': '27 days, 1:36:21', 'additions': 72, 'deletions': 0, 'state': 'closed'}, {'id': 437717114, 'number': 73, 'closed': datetime.datetime(2020, 7, 13, 13, 30, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 6, 32, 21, tzinfo=datetime.timezone.utc), 'time_taken': 1839518.0, 'time_delta': '21 days, 6:58:38', 'additions': 1, 'deletions': 865, 'state': 'closed'}, {'id': 437712194, 'number': 72, 'closed': datetime.datetime(2020, 6, 22, 9, 10, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 6, 21, 2, tzinfo=datetime.timezone.utc), 'time_taken': 10143.0, 'time_delta': '2:49:03', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 437702362, 'number': 71, 'closed': datetime.datetime(2020, 6, 30, 19, 51, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 5, 59, 1, tzinfo=datetime.timezone.utc), 'time_taken': 741169.0, 'time_delta': '8 days, 13:52:49', 'additions': 327, 'deletions': 9, 'state': 'closed'}, {'id': 434258827, 'number': 69, 'closed': datetime.datetime(2020, 7, 23, 5, 6, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 15, 3, 6, 4, tzinfo=datetime.timezone.utc), 'time_taken': 3290406.0, 'time_delta': '38 days, 2:00:06', 'additions': 415, 'deletions': 41, 'state': 'closed'}, {'id': 432012878, 'number': 68, 'closed': datetime.datetime(2020, 6, 17, 15, 41, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 9, 19, 16, 16, tzinfo=datetime.timezone.utc), 'time_taken': 678298.0, 'time_delta': '7 days, 20:24:58', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 429409944, 'number': 67, 'closed': datetime.datetime(2020, 6, 6, 21, 33, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 6, 20, 2, 42, tzinfo=datetime.timezone.utc), 'time_taken': 5429.0, 'time_delta': '1:30:29', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 308868260, 'number': 37, 'closed': datetime.datetime(2019, 9, 11, 0, 27, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 20, 4, 19, 3, tzinfo=datetime.timezone.utc), 'time_taken': 1886885.0, 'time_delta': '21 days, 20:08:05', 'additions': 124, 'deletions': 4, 'state': 'closed'}, {'id': 308867802, 'number': 36, 'closed': datetime.datetime(2020, 5, 9, 22, 4, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 20, 4, 16, 39, tzinfo=datetime.timezone.utc), 'time_taken': 22787265.0, 'time_delta': '263 days, 17:47:45', 'additions': 394, 'deletions': 33, 'state': 'closed'}, {'id': 304954089, 'number': 29, 'closed': datetime.datetime(2021, 6, 10, 19, 56, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 7, 2, 26, 46, tzinfo=datetime.timezone.utc), 'time_taken': 58210171.0, 'time_delta': '673 days, 17:29:31', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 304136356, 'number': 26, 'closed': datetime.datetime(2019, 8, 21, 17, 11, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 5, 4, 28, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1428189.0, 'time_delta': '16 days, 12:43:09', 'additions': 72, 'deletions': 3, 'state': 'closed'}, {'id': 302727416, 'number': 22, 'closed': datetime.datetime(2019, 8, 2, 18, 46, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 30, 23, 1, 5, tzinfo=datetime.timezone.utc), 'time_taken': 243911.0, 'time_delta': '2 days, 19:45:11', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 300476244, 'number': 21, 'closed': datetime.datetime(2019, 7, 27, 16, 30, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 23, 21, 21, 1, tzinfo=datetime.timezone.utc), 'time_taken': 328140.0, 'time_delta': '3 days, 19:09:00', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 300463493, 'number': 20, 'closed': datetime.datetime(2019, 7, 27, 16, 28, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 23, 20, 41, 23, tzinfo=datetime.timezone.utc), 'time_taken': 330454.0, 'time_delta': '3 days, 19:47:34', 'additions': 28, 'deletions': 0, 'state': 'closed'}, {'id': 300094343, 'number': 19, 'closed': datetime.datetime(2019, 7, 23, 20, 35, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 23, 1, 23, 30, tzinfo=datetime.timezone.utc), 'time_taken': 69106.0, 'time_delta': '19:11:46', 'additions': 20, 'deletions': 0, 'state': 'closed'}, {'id': 298604323, 'number': 17, 'closed': datetime.datetime(2019, 7, 27, 16, 29, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 17, 17, 50, 18, tzinfo=datetime.timezone.utc), 'time_taken': 859160.0, 'time_delta': '9 days, 22:39:20', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 297796947, 'number': 16, 'closed': datetime.datetime(2019, 7, 24, 17, 51, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 15, 21, 37, 3, tzinfo=datetime.timezone.utc), 'time_taken': 764059.0, 'time_delta': '8 days, 20:14:19', 'additions': 394, 'deletions': 38, 'state': 'closed'}, {'id': 295160297, 'number': 15, 'closed': datetime.datetime(2019, 7, 14, 1, 52, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 8, 3, 14, 28, tzinfo=datetime.timezone.utc), 'time_taken': 513500.0, 'time_delta': '5 days, 22:38:20', 'additions': 1, 'deletions': 22, 'state': 'closed'}, {'id': 294002249, 'number': 11, 'closed': datetime.datetime(2019, 8, 2, 19, 49, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 3, 4, 57, 47, tzinfo=datetime.timezone.utc), 'time_taken': 2645474.0, 'time_delta': '30 days, 14:51:14', 'additions': 1146, 'deletions': 47, 'state': 'closed'}, {'id': 293574621, 'number': 10, 'closed': datetime.datetime(2019, 7, 5, 17, 15, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 2, 4, 10, 46, tzinfo=datetime.timezone.utc), 'time_taken': 306311.0, 'time_delta': '3 days, 13:05:11', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 290950580, 'number': 8, 'closed': datetime.datetime(2019, 6, 28, 16, 38, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 24, 2, 45, 31, tzinfo=datetime.timezone.utc), 'time_taken': 395602.0, 'time_delta': '4 days, 13:53:22', 'additions': 1, 'deletions': 13, 'state': 'closed'}, {'id': 289812591, 'number': 7, 'closed': datetime.datetime(2019, 7, 5, 19, 17, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 19, 17, 56, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1387235.0, 'time_delta': '16 days, 1:20:35', 'additions': 458, 'deletions': 4, 'state': 'closed'}, {'id': 288649014, 'number': 6, 'closed': datetime.datetime(2019, 6, 21, 17, 8, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 16, 20, 16, 55, tzinfo=datetime.timezone.utc), 'time_taken': 420707.0, 'time_delta': '4 days, 20:51:47', 'additions': 243, 'deletions': 7, 'state': 'closed'}, {'id': 288522201, 'number': 5, 'closed': datetime.datetime(2019, 6, 19, 17, 57, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 15, 1, 29, 12, tzinfo=datetime.timezone.utc), 'time_taken': 404900.0, 'time_delta': '4 days, 16:28:20', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 286808190, 'number': 4, 'closed': datetime.datetime(2019, 6, 28, 18, 59, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 10, 19, 38, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1552887.0, 'time_delta': '17 days, 23:21:27', 'additions': 11, 'deletions': 0, 'state': 'closed'}, {'id': 284393106, 'number': 3, 'closed': datetime.datetime(2019, 6, 10, 22, 54, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 3, 2, 13, 28, tzinfo=datetime.timezone.utc), 'time_taken': 679253.0, 'time_delta': '7 days, 20:40:53', 'additions': 4113, 'deletions': 1, 'state': 'closed'}]"
262567860,CoreAdvancedAssets,Terasology/CoreAdvancedAssets,,3,0,23,4,13,0,2,0,"[{'id': 433935946, 'number': 1, 'closed': datetime.datetime(2020, 6, 22, 18, 3, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 13, 0, 50, 37, tzinfo=datetime.timezone.utc), 'time_taken': 839601.0, 'time_delta': '9 days, 17:13:21', 'additions': 4, 'deletions': 1, 'state': 'closed'}]"
197992781,CoreAssets,Terasology/CoreAssets,,5,1,18,5,32,0,2,0,"[{'id': 433939087, 'number': 6, 'closed': datetime.datetime(2020, 6, 22, 18, 4, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 13, 1, 16, 31, tzinfo=datetime.timezone.utc), 'time_taken': 838103.0, 'time_delta': '9 days, 16:48:23', 'additions': 16, 'deletions': 14, 'state': 'closed'}]"
13607561,Fences,Terasology/Fences,Java,8,1,18,15,44,2,3,0,"[{'id': 433939512, 'number': 11, 'closed': datetime.datetime(2020, 6, 22, 17, 43, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 13, 1, 19, 59, tzinfo=datetime.timezone.utc), 'time_taken': 836622.0, 'time_delta': '9 days, 16:23:42', 'additions': 4, 'deletions': 1, 'state': 'closed'}]"
18447140,StructuralResources,Terasology/StructuralResources,Java,9,1,18,12,44,1,4,0,"[{'id': 434040459, 'number': 9, 'closed': datetime.datetime(2020, 6, 14, 16, 7, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 13, 18, 31, 31, tzinfo=datetime.timezone.utc), 'time_taken': 77751.0, 'time_delta': '21:35:51', 'additions': 4, 'deletions': 1, 'state': 'closed'}]"
111985425,AdditionalFruits,Terasology/AdditionalFruits,,7,0,19,11,37,0,3,0,"[{'id': 437691666, 'number': 12, 'closed': datetime.datetime(2020, 6, 25, 19, 24, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 5, 30, 5, tzinfo=datetime.timezone.utc), 'time_taken': 309284.0, 'time_delta': '3 days, 13:54:44', 'additions': 89, 'deletions': 12, 'state': 'closed'}]"
111985398,AdditionalVegetables,Terasology/AdditionalVegetables,,4,0,20,7,23,0,3,0,"[{'id': 437692827, 'number': 5, 'closed': datetime.datetime(2020, 6, 22, 18, 55, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 5, 33, 30, tzinfo=datetime.timezone.utc), 'time_taken': 48122.0, 'time_delta': '13:22:02', 'additions': 13, 'deletions': 1, 'state': 'closed'}]"
29405820,Behaviors,Terasology/Behaviors,Java,18,6,19,29,191,12,16,5,"[{'id': 472231016, 'number': 45, 'closed': datetime.datetime(2020, 9, 5, 16, 32, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 24, 3, 6, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1085167.0, 'time_delta': '12 days, 13:26:07', 'additions': 6, 'deletions': 14, 'state': 'closed'}, {'id': 458875286, 'number': 41, 'closed': datetime.datetime(2020, 8, 4, 19, 59, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 30, 4, 59, 25, tzinfo=datetime.timezone.utc), 'time_taken': 485977.0, 'time_delta': '5 days, 14:59:37', 'additions': 158, 'deletions': 0, 'state': 'closed'}, {'id': 458874273, 'number': 40, 'closed': datetime.datetime(2020, 8, 4, 19, 42, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 30, 4, 56, 32, tzinfo=datetime.timezone.utc), 'time_taken': 485139.0, 'time_delta': '5 days, 14:45:39', 'additions': 1, 'deletions': 4, 'state': 'closed'}, {'id': 444352054, 'number': 36, 'closed': datetime.datetime(2020, 7, 13, 13, 30, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 5, 3, 12, 51, tzinfo=datetime.timezone.utc), 'time_taken': 728265.0, 'time_delta': '8 days, 10:17:45', 'additions': 106, 'deletions': 1, 'state': 'closed'}, {'id': 441182080, 'number': 34, 'closed': datetime.datetime(2020, 7, 24, 20, 59, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 29, 4, 3, 5, tzinfo=datetime.timezone.utc), 'time_taken': 2220993.0, 'time_delta': '25 days, 16:56:33', 'additions': 14, 'deletions': 6, 'state': 'closed'}, {'id': 306178532, 'number': 22, 'closed': datetime.datetime(2019, 8, 24, 20, 54, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 10, 2, 29, 4, tzinfo=datetime.timezone.utc), 'time_taken': 1275924.0, 'time_delta': '14 days, 18:25:24', 'additions': 216, 'deletions': 1, 'state': 'closed'}, {'id': 304884919, 'number': 21, 'closed': datetime.datetime(2019, 8, 11, 15, 44, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 6, 20, 50, 40, tzinfo=datetime.timezone.utc), 'time_taken': 413659.0, 'time_delta': '4 days, 18:54:19', 'additions': 8, 'deletions': 2, 'state': 'closed'}, {'id': 296854670, 'number': 18, 'closed': datetime.datetime(2019, 8, 10, 1, 38, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 11, 22, 50, 15, tzinfo=datetime.timezone.utc), 'time_taken': 2515675.0, 'time_delta': '29 days, 2:47:55', 'additions': 25, 'deletions': 10, 'state': 'closed'}]"
98983549,TutorialBehaviors,Terasology/TutorialBehaviors,Java,2,0,21,7,29,0,1,0,"[{'id': 444351903, 'number': 7, 'closed': datetime.datetime(2020, 7, 13, 13, 30, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 5, 3, 10, 14, tzinfo=datetime.timezone.utc), 'time_taken': 728436.0, 'time_delta': '8 days, 10:20:36', 'additions': 246, 'deletions': 2, 'state': 'closed'}, {'id': 304532241, 'number': 5, 'closed': datetime.datetime(2019, 8, 24, 20, 53, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 6, 3, 20, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1618399.0, 'time_delta': '18 days, 17:33:19', 'additions': 119, 'deletions': 0, 'state': 'closed'}, {'id': 268069292, 'number': 3, 'closed': datetime.datetime(2020, 4, 7, 21, 1, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 4, 6, 23, 16, 59, tzinfo=datetime.timezone.utc), 'time_taken': 31700692.0, 'time_delta': '366 days, 21:44:52', 'additions': 3993, 'deletions': 0, 'state': 'closed'}]"
1438007,Terasology,MovingBlocks/Terasology,Java,1334,3659,188,339,12023,469,57,35,"[{'id': 447963861, 'number': 4080, 'closed': datetime.datetime(2020, 7, 13, 19, 52, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 12, 22, 35, 30, tzinfo=datetime.timezone.utc), 'time_taken': 76638.0, 'time_delta': '21:17:18', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 255713798, 'number': 3619, 'closed': datetime.datetime(2019, 3, 3, 18, 4, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 2, 24, 21, 20, 41, tzinfo=datetime.timezone.utc), 'time_taken': 593029.0, 'time_delta': '6 days, 20:43:49', 'additions': 27, 'deletions': 6, 'state': 'closed'}, {'id': 251790053, 'number': 3615, 'closed': datetime.datetime(2019, 2, 17, 19, 0, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 2, 11, 2, 52, 5, tzinfo=datetime.timezone.utc), 'time_taken': 576509.0, 'time_delta': '6 days, 16:08:29', 'additions': 84, 'deletions': 2, 'state': 'closed'}, {'id': 240341204, 'number': 3580, 'closed': datetime.datetime(2018, 12, 21, 1, 7, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 12, 21, 0, 33, 53, tzinfo=datetime.timezone.utc), 'time_taken': 2013.0, 'time_delta': '0:33:33', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 235230667, 'number': 3563, 'closed': datetime.datetime(2018, 12, 23, 22, 58, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 12, 2, 1, 25, 54, tzinfo=datetime.timezone.utc), 'time_taken': 1891950.0, 'time_delta': '21 days, 21:32:30', 'additions': 613, 'deletions': 314, 'state': 'closed'}, {'id': 231656300, 'number': 3548, 'closed': datetime.datetime(2018, 11, 18, 16, 54, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 11, 16, 21, 10, 30, tzinfo=datetime.timezone.utc), 'time_taken': 157440.0, 'time_delta': '1 day, 19:44:00', 'additions': 318, 'deletions': 37, 'state': 'closed'}, {'id': 225913061, 'number': 3528, 'closed': datetime.datetime(2018, 11, 3, 3, 21, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 10, 25, 21, 41, 4, tzinfo=datetime.timezone.utc), 'time_taken': 711606.0, 'time_delta': '8 days, 5:40:06', 'additions': 178, 'deletions': 5, 'state': 'closed'}]"
63985513,Economy,Terasology/Economy,Java,8,1,22,13,64,5,4,1,"[{'id': 447724004, 'number': 14, 'closed': datetime.datetime(2020, 7, 21, 14, 58, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 11, 5, 46, 16, tzinfo=datetime.timezone.utc), 'time_taken': 897159.0, 'time_delta': '10 days, 9:12:39', 'additions': 269, 'deletions': 132, 'state': 'closed'}]"
43733387,Dialogs,Terasology/Dialogs,Java,9,2,18,14,49,1,4,0,"[{'id': 447991506, 'number': 14, 'closed': datetime.datetime(2020, 7, 13, 19, 57, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 1, 49, 20, tzinfo=datetime.timezone.utc), 'time_taken': 65295.0, 'time_delta': '18:08:15', 'additions': 5, 'deletions': 0, 'state': 'closed'}]"
27751758,WildAnimals,Terasology/WildAnimals,Java,23,4,22,26,184,6,10,3,"[{'id': 465859653, 'number': 58, 'closed': datetime.datetime(2020, 8, 11, 7, 8, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 11, 4, 40, 26, tzinfo=datetime.timezone.utc), 'time_taken': 8891.0, 'time_delta': '2:28:11', 'additions': 4, 'deletions': 4, 'state': 'closed'}]"
