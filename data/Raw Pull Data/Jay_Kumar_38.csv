pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1382161080,Implementing Ahocorasick Search.,"This PR Implements the pure python variant of pyahocorasick, and heavily reuses code from ahocorapy with minor additions.
Also added methods for pickling and unpickling.

- [x] add_word  `used in SCTK`
- [x] get `used in SCTK`
- [x] clear
- [ ] dump
- [x] exists
- [x] find_all
- [ ] get_stats
- [x] items
- [x] make_automaton `used in SCTK`
- [x] iter `used in SCTK`
- [ ] iter_long
- [x] keys
- [ ] longest_prefix
- [ ] match
- [ ] pop
- [ ] remove_word
- [ ] save
- [x] values `used in SCTK`
",True,1,https://api.github.com/repos/nexB/ahocode/pulls/1,https://github.com/nexB/ahocode/pull/1,closed,639,95,8,12,4,12,1,1,[{'name': 'GSoC'}],2023-06-07 08:13:39+00:00,2023-06-22 15:34:58+00:00,1322479.0,"15 days, 7:21:19","[{'comment_id': 1227034870, 'comment_body': 'Add this at the top of the file:\r\n```\r\n#\r\n# Copyright (c) nexB Inc. and others. All rights reserved.\r\n# ahocode is a trademark of nexB Inc.\r\n# SPDX-License-Identifier: Apache-2.0\r\n# See http://www.apache.org/licenses/LICENSE-2.0 for the license text.\r\n# See https://github.com/nexB/ahocode for support or download.\r\n# See https://aboutcode.org for more information about nexB OSS projects.\r\n#\r\n```', 'comment_created': datetime.datetime(2023, 6, 12, 17, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1227038633, 'comment_body': ""I don't think you need to have your list comprehension in a list if you're passing it directly into `.join()`.\r\n```suggestion\r\n            '{0} -> {1}'.format(key, value.identifier) for key, value in self.transitions.items())\r\n\r\n```"", 'comment_created': datetime.datetime(2023, 6, 12, 17, 50, 36, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1227046785, 'comment_body': 'I notice that you use the `is` keyword when doing value comparison. You should double check where you use this because `is` and `==` do different things when comparing variables: https://stackoverflow.com/a/133024', 'comment_created': datetime.datetime(2023, 6, 12, 17, 55, 33, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1227051138, 'comment_body': 'I feel like you could get away with not wrapping `self.items()` in a list.\r\n```suggestion\r\n        for key, value in self.items():\r\n\r\n```', 'comment_created': datetime.datetime(2023, 6, 12, 17, 59, 47, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1227061186, 'comment_body': 'I think a more descriptive variable can be used, instead of `todo_list`', 'comment_created': datetime.datetime(2023, 6, 12, 18, 10, 52, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1231598004, 'comment_body': '```suggestion\r\nurl = https://github.com/nexB/ahocode\r\n```', 'comment_created': datetime.datetime(2023, 6, 15, 22, 32, 39, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1231599252, 'comment_body': 'Rename this file `test_ahocode.py`', 'comment_created': datetime.datetime(2023, 6, 15, 22, 35, 12, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1231601977, 'comment_body': 'I think it is better to use `==` and `!=` operators for value comparisons instead of `is`. From this answer https://stackoverflow.com/questions/132988/is-there-a-difference-between-and-is:\r\n\r\n> `==` is for value equality. Use it when you would like to know if two objects have the same value.\r\n> `is` is for reference equality. Use it when you would like to know if two references refer to the same object.\r\n\r\nPlease review and revise all use of `is` in your code, unless you really are checking to see if two variables are the same object in memory.', 'comment_created': datetime.datetime(2023, 6, 15, 22, 40, 49, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1231603948, 'comment_body': '```suggestion\r\n# See https://github.com/nexB/ahocode for support or download.\r\n\r\n```', 'comment_created': datetime.datetime(2023, 6, 15, 22, 45, 12, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1231605206, 'comment_body': 'I see these tests are from https://github.com/WojciechMula/pyahocorasick/blob/master/tests/test_basic.py. \r\n\r\nPlease make a comment saying that the tests are from there with a link to the code.', 'comment_created': datetime.datetime(2023, 6, 15, 22, 47, 54, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1232137464, 'comment_body': 'Thanks for this, i also added the proper link and repo name in ahocode.py.', 'comment_created': datetime.datetime(2023, 6, 16, 11, 41, 39, tzinfo=datetime.timezone.utc), 'commenter': '35C4n0r', 'type': 'User'}, {'comment_id': 1238014449, 'comment_body': '```suggestion\r\nThis repo is a pure python implementation for `pyahocorasick <https://github.com/WojciechMula/pyahocorasick>`_, inspired by `abusix/ahocorapy <https://github.com/abusix/ahocorapy>`_.\r\n```', 'comment_created': datetime.datetime(2023, 6, 22, 5, 32, 49, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}]","[{'commit_sha': 'c4d2799771a1a1d3294c1e13ef0bcff2700a129c', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9e4c0391d8dde106b361b06ebfb73dc6c4589f0', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74543a091103fd02f3054cdc9f72e7b63641a26b', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19b47912951193d18450d8b2abe6668de93bb994', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c503372f4ead519795a16ffcbd7d4458fbe54030', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb4ddd6554ff0a1bcf92805a86ac3ae76f53351b', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '213da6abdd5c190a7996695150d80d431d6ec172', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '809f0f885bf32012fcf8cd9c0f2126a18b7f607e', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8082729147c6359772f191f909870d7badbe312', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55a3871c8bd42f9517fd470bc53a560a1ebfcb3f', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '227786b357fc1676819921a9ef676251d6177ee5', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42b5a9f463bcea5b071cd204a206a6832bff9a02', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}]",Jay Kumar,70096901,,User,,109,,3,16
1382161080,Implementing Ahocorasick Search.,"This PR Implements the pure python variant of pyahocorasick, and heavily reuses code from ahocorapy with minor additions.
Also added methods for pickling and unpickling.

- [x] add_word  `used in SCTK`
- [x] get `used in SCTK`
- [x] clear
- [ ] dump
- [x] exists
- [x] find_all
- [ ] get_stats
- [x] items
- [x] make_automaton `used in SCTK`
- [x] iter `used in SCTK`
- [ ] iter_long
- [x] keys
- [ ] longest_prefix
- [ ] match
- [ ] pop
- [ ] remove_word
- [ ] save
- [x] values `used in SCTK`
",True,1,https://api.github.com/repos/nexB/ahocode/pulls/1,https://github.com/nexB/ahocode/pull/1,closed,639,95,8,12,4,12,1,1,[{'name': 'GSoC'}],2023-06-07 08:13:39+00:00,2023-06-22 15:34:58+00:00,1322479.0,"15 days, 7:21:19","[{'comment_id': 1227034870, 'comment_body': 'Add this at the top of the file:\r\n```\r\n#\r\n# Copyright (c) nexB Inc. and others. All rights reserved.\r\n# ahocode is a trademark of nexB Inc.\r\n# SPDX-License-Identifier: Apache-2.0\r\n# See http://www.apache.org/licenses/LICENSE-2.0 for the license text.\r\n# See https://github.com/nexB/ahocode for support or download.\r\n# See https://aboutcode.org for more information about nexB OSS projects.\r\n#\r\n```', 'comment_created': datetime.datetime(2023, 6, 12, 17, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1227038633, 'comment_body': ""I don't think you need to have your list comprehension in a list if you're passing it directly into `.join()`.\r\n```suggestion\r\n            '{0} -> {1}'.format(key, value.identifier) for key, value in self.transitions.items())\r\n\r\n```"", 'comment_created': datetime.datetime(2023, 6, 12, 17, 50, 36, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1227046785, 'comment_body': 'I notice that you use the `is` keyword when doing value comparison. You should double check where you use this because `is` and `==` do different things when comparing variables: https://stackoverflow.com/a/133024', 'comment_created': datetime.datetime(2023, 6, 12, 17, 55, 33, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1227051138, 'comment_body': 'I feel like you could get away with not wrapping `self.items()` in a list.\r\n```suggestion\r\n        for key, value in self.items():\r\n\r\n```', 'comment_created': datetime.datetime(2023, 6, 12, 17, 59, 47, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1227061186, 'comment_body': 'I think a more descriptive variable can be used, instead of `todo_list`', 'comment_created': datetime.datetime(2023, 6, 12, 18, 10, 52, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1231598004, 'comment_body': '```suggestion\r\nurl = https://github.com/nexB/ahocode\r\n```', 'comment_created': datetime.datetime(2023, 6, 15, 22, 32, 39, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1231599252, 'comment_body': 'Rename this file `test_ahocode.py`', 'comment_created': datetime.datetime(2023, 6, 15, 22, 35, 12, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1231601977, 'comment_body': 'I think it is better to use `==` and `!=` operators for value comparisons instead of `is`. From this answer https://stackoverflow.com/questions/132988/is-there-a-difference-between-and-is:\r\n\r\n> `==` is for value equality. Use it when you would like to know if two objects have the same value.\r\n> `is` is for reference equality. Use it when you would like to know if two references refer to the same object.\r\n\r\nPlease review and revise all use of `is` in your code, unless you really are checking to see if two variables are the same object in memory.', 'comment_created': datetime.datetime(2023, 6, 15, 22, 40, 49, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1231603948, 'comment_body': '```suggestion\r\n# See https://github.com/nexB/ahocode for support or download.\r\n\r\n```', 'comment_created': datetime.datetime(2023, 6, 15, 22, 45, 12, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1231605206, 'comment_body': 'I see these tests are from https://github.com/WojciechMula/pyahocorasick/blob/master/tests/test_basic.py. \r\n\r\nPlease make a comment saying that the tests are from there with a link to the code.', 'comment_created': datetime.datetime(2023, 6, 15, 22, 47, 54, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1232137464, 'comment_body': 'Thanks for this, i also added the proper link and repo name in ahocode.py.', 'comment_created': datetime.datetime(2023, 6, 16, 11, 41, 39, tzinfo=datetime.timezone.utc), 'commenter': '35C4n0r', 'type': 'User'}, {'comment_id': 1238014449, 'comment_body': '```suggestion\r\nThis repo is a pure python implementation for `pyahocorasick <https://github.com/WojciechMula/pyahocorasick>`_, inspired by `abusix/ahocorapy <https://github.com/abusix/ahocorapy>`_.\r\n```', 'comment_created': datetime.datetime(2023, 6, 22, 5, 32, 49, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}]","[{'commit_sha': 'c4d2799771a1a1d3294c1e13ef0bcff2700a129c', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9e4c0391d8dde106b361b06ebfb73dc6c4589f0', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74543a091103fd02f3054cdc9f72e7b63641a26b', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19b47912951193d18450d8b2abe6668de93bb994', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c503372f4ead519795a16ffcbd7d4458fbe54030', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb4ddd6554ff0a1bcf92805a86ac3ae76f53351b', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '213da6abdd5c190a7996695150d80d431d6ec172', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '809f0f885bf32012fcf8cd9c0f2126a18b7f607e', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8082729147c6359772f191f909870d7badbe312', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55a3871c8bd42f9517fd470bc53a560a1ebfcb3f', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '227786b357fc1676819921a9ef676251d6177ee5', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42b5a9f463bcea5b071cd204a206a6832bff9a02', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}]",Jay Kumar,70096901,,User,,109,,3,16
1506774739,add: new logic for bitcode,New logic for bitcode which uses sets.,False,4,https://api.github.com/repos/nexB/bitcode/pulls/4,https://github.com/nexB/bitcode/pull/4,open,614,84,3,7,2,6,0,0,[],2023-09-07 19:00:35+00:00,,0.0,,"[{'comment_id': 1320583761, 'comment_body': 'What about this:\r\n ```suggestion\r\n\r\n    def strbits(self):\r\n        """"""\r\n        Return a string of 0s and 1s representing the content in memory\r\n                of the intbitset.\r\n        """"""\r\n        bits = \'0\' * len(self.bitset)\r\n        for i in self.bitset:\r\n            bits[i] = \'1\'\r\n        return bits\r\n```', 'comment_created': datetime.datetime(2023, 9, 9, 14, 51, 55, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 1320584012, 'comment_body': 'are intbitset hashable?', 'comment_created': datetime.datetime(2023, 9, 9, 14, 53, 10, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 1320584451, 'comment_body': 'You should use bitcode there', 'comment_created': datetime.datetime(2023, 9, 9, 14, 55, 9, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 1320584474, 'comment_body': 'You may consider accumulating in a list and `"", "".join` the list at the end', 'comment_created': datetime.datetime(2023, 9, 9, 14, 55, 22, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 1320585732, 'comment_body': '```suggestion\r\nif item not in self.bitset:\r\n    raise KeyError(... some message)\r\nreturn item    \r\n```', 'comment_created': datetime.datetime(2023, 9, 9, 14, 58, 45, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 1320585913, 'comment_body': 'You should add new tests, but do not change existing intbitset tests', 'comment_created': datetime.datetime(2023, 9, 9, 14, 59, 58, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}]","[{'commit_sha': '62f07f987d4d18ed866e0e558ed17a2bda1cc3fb', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17d94b11cdc3aa2bee009f06fa8ac0fee64cc324', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '752952661338bd33ab5378ffe5615c70b66c6382', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18a4d01fcd92e8d4c164cafe4aa68ed8b89e07f6', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6290e4c84dec3fd8ce1150a8a2a6438863eccbbc', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73e4a4cadd3bd9395f9a33e8368b60a4a9c6119d', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb82b413bca8c5ac7dff0917e880dc3d3a813c56', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}]",Jay Kumar,70096901,,User,,109,,3,16
1456819213,add: added code for sanexml.,,True,1,https://api.github.com/repos/nexB/sanexml/pulls/1,https://github.com/nexB/sanexml/pull/1,closed,484,94,9,8,3,14,0,0,[],2023-07-31 18:42:32+00:00,2023-09-01 22:16:49+00:00,2777657.0,"32 days, 3:34:17","[{'comment_id': 1310655091, 'comment_body': 'Add a readme like in ahocode and bitcode', 'comment_created': datetime.datetime(2023, 8, 30, 18, 17, 17, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1310666972, 'comment_body': 'Do we need this commented function?', 'comment_created': datetime.datetime(2023, 8, 30, 18, 28, 43, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1310667536, 'comment_body': 'Do we need this commented function?', 'comment_created': datetime.datetime(2023, 8, 30, 18, 29, 10, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1310669791, 'comment_body': '```suggestion\r\n#\r\n# Copyright (c) nexB Inc. and others. All rights reserved.\r\n# sanexml is a trademark of nexB Inc.\r\n# SPDX-License-Identifier: Apache-2.0\r\n# See http://www.apache.org/licenses/LICENSE-2.0 for the license text.\r\n# See https://github.com/nexB/sanexml for support or download.\r\n# See https://aboutcode.org for more information about nexB OSS projects.\r\n#\r\n\r\nimport re\r\n\r\n```', 'comment_created': datetime.datetime(2023, 8, 30, 18, 31, 28, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1310670391, 'comment_body': ""Remove the commented code if it isn't needed."", 'comment_created': datetime.datetime(2023, 8, 30, 18, 32, 4, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1310674924, 'comment_body': 'Should this be uncommented?', 'comment_created': datetime.datetime(2023, 8, 30, 18, 36, 17, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1310675376, 'comment_body': '```suggestion\r\n#\r\n# Copyright (c) nexB Inc. and others. All rights reserved.\r\n# sanexml is a trademark of nexB Inc.\r\n# SPDX-License-Identifier: Apache-2.0\r\n# See http://www.apache.org/licenses/LICENSE-2.0 for the license text.\r\n# See https://github.com/nexB/sanexml for support or download.\r\n# See https://aboutcode.org for more information about nexB OSS projects.\r\n#\r\n\r\nimport unittest\r\n\r\n```', 'comment_created': datetime.datetime(2023, 8, 30, 18, 36, 46, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1310682441, 'comment_body': '```suggestion\r\n            for key, value in nsmap.items():\r\n                ET.register_namespace(key, value)\r\n```', 'comment_created': datetime.datetime(2023, 8, 30, 18, 43, 39, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1310683519, 'comment_body': 'Remove this print statement', 'comment_created': datetime.datetime(2023, 8, 30, 18, 44, 44, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1310684885, 'comment_body': 'Just to avoid calling `tag.name.upper()` twice:\r\n```suggestion\r\n        tag_name_upper = tag.name.upper()\r\n        if tag_name_upper in reverse_mapping:\r\n            tag.name = reverse_mapping[tag_name_upper]\r\n```', 'comment_created': datetime.datetime(2023, 8, 30, 18, 46, 1, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1310685989, 'comment_body': 'Remove this comment line', 'comment_created': datetime.datetime(2023, 8, 30, 18, 47, 7, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1310686084, 'comment_body': 'Remove this comment line', 'comment_created': datetime.datetime(2023, 8, 30, 18, 47, 12, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1310686236, 'comment_body': 'Remove this comment line', 'comment_created': datetime.datetime(2023, 8, 30, 18, 47, 19, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 1310692358, 'comment_body': 'Remove this commented line', 'comment_created': datetime.datetime(2023, 8, 30, 18, 53, 27, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}]","[{'commit_sha': '6e10d251f310ff8a6f05c9b0c639d77fe04c76ee', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89489f44573e154282ed42d65750a771340d836c', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '092e96be9033ba8ed08a0c9bd462450335ff7df3', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc4db2225f1f8ed3a71ae0248fc1256472b98fe5', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4be379f526aded1e43759b52f81e8cb2ff53368', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c44b805053065fbe8b9062cec6e3bba66089ef92', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '503a5ab7277207d57d80f70f56844c9278c1e22f', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58f30e73fa32f3eb0580db6275ef47c012c978c7', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}]",Jay Kumar,70096901,,User,,109,,3,16
1456607908,Integrating the Fallback Libraries to SCTK.,"This PR integrates 

- [ ] [ahocode](https://github.com/nexB/ahocode)
- [ ] [bitcode](https://github.com/nexB/bitcode)
- [x] [sanexml](https://github.com/nexB/sanexml)

to SCTK.
To do this, we will simply use a try-catch block with ImportError.

Fixes #3210 


Signed-off-by: 35C4n0r <jaykumar20march@gmail.com>
",False,3476,https://api.github.com/repos/aboutcode-org/scancode-toolkit/pulls/3476,https://github.com/aboutcode-org/scancode-toolkit/pull/3476,open,28,8,7,7,0,0,1,1,[{'name': 'GSoC'}],2023-07-31 16:06:35+00:00,,0.0,,[],"[{'commit_sha': '13f3d439cb60e35e3600f0443db7199c70c944b8', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03a8a5a5c8852d0498b3f75e8036067ca1c8d10c', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '994a7fa943c5100cd1c0327131895ed3ca98b3e2', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61973d32bd1ea36e2f7f53c0212ff2b524273c62', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d7dc8a5e501f6b1b048ffbe6e2e26b4e51b53b9', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5cc16906d22d6ec4e6b0b0c2def8a91d43ce633', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92c8243daee6b80c3f0a1bad093cd5f1045e0edd', 'committer_username': '35C4n0r', 'committer_name': 'Jay Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 23, 11, 45, 45, tzinfo=datetime.timezone.utc)}]",Jay Kumar,70096901,,User,,109,,3,16

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
649789321,ahocode,nexB/ahocode,Python,2,0,5,14,223,0,1,0,"[{'id': 1382161080, 'number': 1, 'closed': datetime.datetime(2023, 6, 22, 15, 34, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 7, 8, 13, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1322479.0, 'time_delta': '15 days, 7:21:19', 'additions': 639, 'deletions': 95, 'state': 'closed'}]"
656801738,bitcode,nexB/bitcode,Python,2,0,5,14,221,1,1,1,"[{'id': 1506774739, 'number': 4, 'closed': None, 'created': datetime.datetime(2023, 9, 7, 19, 0, 35, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 614, 'deletions': 84, 'state': 'open'}, {'id': 1454732604, 'number': 3, 'closed': datetime.datetime(2023, 8, 3, 1, 42, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 29, 11, 9, 26, tzinfo=datetime.timezone.utc), 'time_taken': 397988.0, 'time_delta': '4 days, 14:33:08', 'additions': 43, 'deletions': 6, 'state': 'closed'}, {'id': 1411000997, 'number': 1, 'closed': datetime.datetime(2023, 7, 14, 21, 33, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 28, 5, 4, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1441753.0, 'time_delta': '16 days, 16:29:13', 'additions': 397, 'deletions': 97, 'state': 'closed'}]"
664758471,sanexml,nexB/sanexml,Python,2,1,5,2,10,0,1,0,"[{'id': 1456819213, 'number': 1, 'closed': datetime.datetime(2023, 9, 1, 22, 16, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 31, 18, 42, 32, tzinfo=datetime.timezone.utc), 'time_taken': 2777657.0, 'time_delta': '32 days, 3:34:17', 'additions': 484, 'deletions': 94, 'state': 'closed'}]"
38373338,scancode-toolkit,aboutcode-org/scancode-toolkit,Python,538,2045,74,375,11177,1052,36,29,"[{'id': 1500235742, 'number': 3506, 'closed': None, 'created': datetime.datetime(2023, 9, 3, 10, 53, 52, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 2604, 'deletions': 1124, 'state': 'open'}, {'id': 1456607908, 'number': 3476, 'closed': None, 'created': datetime.datetime(2023, 7, 31, 16, 6, 35, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 28, 'deletions': 8, 'state': 'open'}]"
