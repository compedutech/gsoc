pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
969324682,Creating Functional Operators in the Blocks Editor (GSoC 2022),"# Functional Operators in the Blocks Editor

## Student Info

- Name: Siyao Li
- Email: siyaoli@g.harvard.edu
- GitHub Profile: https://github.com/siyaoL1

## General Info

This PR is for my project **Functional Operators in the Blocks Editor** for Google Summer of Code 2022 under the mentorship of @SusanRatiLane, @mark-friedman, and @fturbak. You can check out the work with this [demo .aia file.](https://drive.google.com/file/d/1ZnvxMqBBaz50j-rjEbe7-FkiMfMJjrRp/view?usp=sharing) 

## Milestones and action items:

-   Extend Soojin Kim's work of pseudo-higher-order list operators(PHOLOs).

      -  Add the functional blocks for list data type: 
            - [x] Map
            - [x] Reduce
            - [x] Filter
            - [x] Sort
            - [x] Sort with comparator
            - [x] Sort with key
            - [x] Minimum
            - [x] Maximum
            - [x] All but first
            - [x] All but last
            - [x] List slices
      - ~~Merge the functionality of switching between non-destructive and destructive version of the blocks~~ (In a future [PR](https://github.com/mit-cml/appinventor-sources/pull/2711))
      - ~~Create PHOLO blocks with procedure dropdown selection.~~(Discontinued, you can check out the previous code [here](https://github.com/siyaoL1/appinventor-sources/tree/Siyao_GSoC2022_Functional_Blocks_with_Procedure_Selector))
       -  Documentation and tutorials:
            - [x] Create block documentation in App Inventor References
            - [x] Create tutorials for using PHOLO blocks
",True,2699,https://api.github.com/repos/mit-cml/appinventor-sources/pulls/2699,https://github.com/mit-cml/appinventor-sources/pull/2699,closed,1514,45,40,21,13,32,3,1,"[{'name': 'pull request: needs review'}, {'name': 'feature request'}, {'name': 'affects: ucr'}]",2022-06-16 13:23:30+00:00,2022-09-22 16:49:21+00:00,8479551.0,"98 days, 3:25:51","[{'comment_id': 900021376, 'comment_body': ""I think the reason you're seeing duplicate values is because you create procNameArray outside of the closure, so it will remember everything added on each call to procNamesFxn. Move this variable declaration inside of the procNamesFxn so that it will be freshly created on each call."", 'comment_created': datetime.datetime(2022, 6, 17, 11, 14, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ewpatton', 'type': 'User'}, {'comment_id': 900036294, 'comment_body': 'I see. Putting procNameArray inside procNamesFxn did fix the issue. Thank you very much for your help!', 'comment_created': datetime.datetime(2022, 6, 17, 11, 37, 45, tzinfo=datetime.timezone.utc), 'commenter': 'siyaoL1', 'type': 'User'}, {'comment_id': 900044884, 'comment_body': '`var procNameArray = [Blockly.FieldProcedure.defaultValue];` is outside from the closure and inside the function `this.procNamesFxn` you are not clearing the options that are already inside the `procNameArray`.\r\n\r\nMy suggestion is that you can either clear the array at line 994 as `procNameArray = []` or `procNameArray = [Blockly.FieldProcedure.defaultValue];`.\r\n\r\n', 'comment_created': datetime.datetime(2022, 6, 17, 11, 51, 8, tzinfo=datetime.timezone.utc), 'commenter': 'preetvadaliya', 'type': 'User'}, {'comment_id': 900581335, 'comment_body': 'Addressing the closure issue indeed solved the problem, thanks!', 'comment_created': datetime.datetime(2022, 6, 17, 23, 58, 24, tzinfo=datetime.timezone.utc), 'commenter': 'siyaoL1', 'type': 'User'}, {'comment_id': 923906769, 'comment_body': ""Why is this added and then commented out?  Was this part of Soojin's code that you're not using?"", 'comment_created': datetime.datetime(2022, 7, 18, 22, 20, 37, tzinfo=datetime.timezone.utc), 'commenter': 'mark-friedman', 'type': 'User'}, {'comment_id': 925998621, 'comment_body': 'Please restore the empty line.', 'comment_created': datetime.datetime(2022, 7, 20, 19, 51, 23, tzinfo=datetime.timezone.utc), 'commenter': 'mark-friedman', 'type': 'User'}, {'comment_id': 926002737, 'comment_body': ""I believe that this block is only used by code that is currently commented out, so I would suggest commenting out this block's code as well.\r\n\r\nI would also put a comment here and before the other bits of commented out coding specifying what the commented code is trying to do and why it is currently commented out.  Also, please create a GitHub issue to try and get the destructive PHOLO blocks working."", 'comment_created': datetime.datetime(2022, 7, 20, 19, 56, 58, tzinfo=datetime.timezone.utc), 'commenter': 'mark-friedman', 'type': 'User'}, {'comment_id': 926006643, 'comment_body': ""Our convention is to indent these chained method calls by 2 spaces.\r\n\r\nThere's a bunch of these below in this file, please re-indent them all."", 'comment_created': datetime.datetime(2022, 7, 20, 20, 1, 57, tzinfo=datetime.timezone.utc), 'commenter': 'mark-friedman', 'type': 'User'}, {'comment_id': 926013252, 'comment_body': ""For now we want to keep the original 'lists_reverse' blocks (see line 352, above), so please comment out this block's entire definition."", 'comment_created': datetime.datetime(2022, 7, 20, 20, 11, 17, tzinfo=datetime.timezone.utc), 'commenter': 'mark-friedman', 'type': 'User'}, {'comment_id': 926025765, 'comment_body': ""This block doesn't seem to quite work yet, so I would suggest commenting it out and making it work in a separate PR.  I also think that it should probably be in with the 'lists' category and in the lists.js file."", 'comment_created': datetime.datetime(2022, 7, 20, 20, 26, 31, tzinfo=datetime.timezone.utc), 'commenter': 'mark-friedman', 'type': 'User'}, {'comment_id': 926028544, 'comment_body': 'The indentation here and in all the `else if` clauses below should be 2 spaces.', 'comment_created': datetime.datetime(2022, 7, 20, 20, 30, 19, tzinfo=datetime.timezone.utc), 'commenter': 'mark-friedman', 'type': 'User'}, {'comment_id': 926032427, 'comment_body': 'Since this appears to only be used by the currently unused list blocks mutator, I would suggest commenting out the code in this file for now.', 'comment_created': datetime.datetime(2022, 7, 20, 20, 35, 47, tzinfo=datetime.timezone.utc), 'commenter': 'mark-friedman', 'type': 'User'}, {'comment_id': 926032735, 'comment_body': 'Since this appears to only be used by the currently unused list blocks mutator, I would suggest commenting out the code in this file for now.', 'comment_created': datetime.datetime(2022, 7, 20, 20, 36, 16, tzinfo=datetime.timezone.utc), 'commenter': 'mark-friedman', 'type': 'User'}, {'comment_id': 926035028, 'comment_body': 'Please restore the empty line.', 'comment_created': datetime.datetime(2022, 7, 20, 20, 39, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mark-friedman', 'type': 'User'}, {'comment_id': 926036971, 'comment_body': 'Comment out for now and move to lists.js.', 'comment_created': datetime.datetime(2022, 7, 20, 20, 42, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mark-friedman', 'type': 'User'}, {'comment_id': 926039494, 'comment_body': ""It looks like this is identical to the above code and it is commented out.  I'm guessing that it is intended to be the commented out definition of `map_dest`."", 'comment_created': datetime.datetime(2022, 7, 20, 20, 45, 54, tzinfo=datetime.timezone.utc), 'commenter': 'mark-friedman', 'type': 'User'}, {'comment_id': 926042788, 'comment_body': ""Was there a `yail-list-filter!` in Soojin's original branch?  If so, it would be nice to include it in the code below but comment it out.  Similarly for `yail-list-map!` which I'm guessing was used in the definition of `map_dest` (see my earlier comment about that)."", 'comment_created': datetime.datetime(2022, 7, 20, 20, 50, 4, tzinfo=datetime.timezone.utc), 'commenter': 'mark-friedman', 'type': 'User'}, {'comment_id': 926045198, 'comment_body': ""Were there definitions for `sortcomparator_dest` and `sortkey_dest` in Soojin's branch?  If so, could they, and any other procedures that they use, be put in this file and commented out, similar to `map_dest` and `filter_dest`, above?"", 'comment_created': datetime.datetime(2022, 7, 20, 20, 53, 31, tzinfo=datetime.timezone.utc), 'commenter': 'mark-friedman', 'type': 'User'}, {'comment_id': 929437835, 'comment_body': ""Yes, both field_radio_button.js and radio_button_group.js are used in Soojin's code for mutator."", 'comment_created': datetime.datetime(2022, 7, 26, 1, 8, 34, tzinfo=datetime.timezone.utc), 'commenter': 'siyaoL1', 'type': 'User'}, {'comment_id': 929452493, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2022, 7, 26, 1, 46, 52, tzinfo=datetime.timezone.utc), 'commenter': 'siyaoL1', 'type': 'User'}, {'comment_id': 929452547, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2022, 7, 26, 1, 47, tzinfo=datetime.timezone.utc), 'commenter': 'siyaoL1', 'type': 'User'}, {'comment_id': 929453780, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2022, 7, 26, 1, 49, 53, tzinfo=datetime.timezone.utc), 'commenter': 'siyaoL1', 'type': 'User'}, {'comment_id': 929454127, 'comment_body': 'Sounds good, I removed it for now, and I will make a separate PR in the future.', 'comment_created': datetime.datetime(2022, 7, 26, 1, 50, 47, tzinfo=datetime.timezone.utc), 'commenter': 'siyaoL1', 'type': 'User'}, {'comment_id': 929455315, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2022, 7, 26, 1, 53, 49, tzinfo=datetime.timezone.utc), 'commenter': 'siyaoL1', 'type': 'User'}, {'comment_id': 929455703, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2022, 7, 26, 1, 54, 44, tzinfo=datetime.timezone.utc), 'commenter': 'siyaoL1', 'type': 'User'}, {'comment_id': 929455777, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2022, 7, 26, 1, 54, 54, tzinfo=datetime.timezone.utc), 'commenter': 'siyaoL1', 'type': 'User'}, {'comment_id': 929456219, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2022, 7, 26, 1, 55, 55, tzinfo=datetime.timezone.utc), 'commenter': 'siyaoL1', 'type': 'User'}, {'comment_id': 929456324, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2022, 7, 26, 1, 56, 13, tzinfo=datetime.timezone.utc), 'commenter': 'siyaoL1', 'type': 'User'}, {'comment_id': 929459046, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2022, 7, 26, 2, 3, 9, tzinfo=datetime.timezone.utc), 'commenter': 'siyaoL1', 'type': 'User'}, {'comment_id': 929465419, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2022, 7, 26, 2, 19, 46, tzinfo=datetime.timezone.utc), 'commenter': 'siyaoL1', 'type': 'User'}, {'comment_id': 929465453, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2022, 7, 26, 2, 19, 52, tzinfo=datetime.timezone.utc), 'commenter': 'siyaoL1', 'type': 'User'}, {'comment_id': 929479503, 'comment_body': 'That makes sense. I added comments about the commented-out code. I also created an issue about destructive PHOLO blocks [here](https://github.com/mit-cml/appinventor-sources/issues/2706)', 'comment_created': datetime.datetime(2022, 7, 26, 2, 56, 7, tzinfo=datetime.timezone.utc), 'commenter': 'siyaoL1', 'type': 'User'}]","[{'commit_sha': '47cceb0757ed6a900c3a0d435aa38d15d75bf2f9', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94bdf2549fb0a45a338ecbc92b941bea4350d30f', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa1a04cbac55bdc74b0fbcfef7313b763992a0de', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c15fc772b6715403bc7958498ea692a22b94c68', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '842192bc5124775c3016bd4a633eb980de2dd3cf', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '049803658364e8ee1dbc88c3c78363d78a32a58d', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '040056c22367f2d8028a6cf2d91ed5e576c69fd0', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57cd4d2eae1ee4bbe0386cc0f60451b03b1374a2', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4dd405991bbfaa6156d919aec9253fdc050dde5', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68bbac01aa08355449d648b1f191f8363fba55ed', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21886fca824815b23c0ecf84917e6c4b4c99d185', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58c7206c84b77c57d99232c57d77953129b1b969', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00a9b4b2f6a5982abce56e5f4b25fd20a70ad36b', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5268a0897900946981c5a124a82407646a50a87', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca2d3fbf1ef8ad63fcb7dc76bf71cde5b0fa2786', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d2c57200ec44b94e202abab6bc465b5e7029aed', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8636f49ac92039776939750af033509ea08f2c39', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f9d90a80fa83c3fdd1ec19a7dc0070e430c0a3c', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '518816b6b8b7fb6ea9023249f1883df563b9acbd', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd00de42a63aa5247939263172ebbace3ebf7d4e9', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f9c583b9de177446a753a085c6f41a14329546c', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}]",Siyao Li,66965952,,User,,12,,1,3
1027176479,Creating Destructive PHOLO blocks in the Blocks Editor,Debug the functionality of switching between non-destructive and destructive version of the PHOLO blocks regarding [issue#2706](https://github.com/mit-cml/appinventor-sources/issues/2706),False,2711,https://api.github.com/repos/mit-cml/appinventor-sources/pulls/2711,https://github.com/mit-cml/appinventor-sources/pull/2711,open,1632,8,8,17,3,0,3,1,"[{'name': 'enhancement'}, {'name': 'pull request: needs review'}, {'name': 'affects: ucr'}]",2022-08-16 05:45:08+00:00,,0.0,,[],"[{'commit_sha': '47cceb0757ed6a900c3a0d435aa38d15d75bf2f9', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94bdf2549fb0a45a338ecbc92b941bea4350d30f', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa1a04cbac55bdc74b0fbcfef7313b763992a0de', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c15fc772b6715403bc7958498ea692a22b94c68', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '842192bc5124775c3016bd4a633eb980de2dd3cf', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '049803658364e8ee1dbc88c3c78363d78a32a58d', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '040056c22367f2d8028a6cf2d91ed5e576c69fd0', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57cd4d2eae1ee4bbe0386cc0f60451b03b1374a2', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4dd405991bbfaa6156d919aec9253fdc050dde5', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68bbac01aa08355449d648b1f191f8363fba55ed', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21886fca824815b23c0ecf84917e6c4b4c99d185', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58c7206c84b77c57d99232c57d77953129b1b969', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00a9b4b2f6a5982abce56e5f4b25fd20a70ad36b', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5268a0897900946981c5a124a82407646a50a87', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6aa66a36a3ac50d91d6ab3864d444144c4bf993', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99ad2aa0622e0f006caf3fe598c19e4bc6e94616', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3d379afb1375a102876cc7916c2fb2b0866d82f', 'committer_username': 'siyaoL1', 'committer_name': 'Siyao Li', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 15, 17, 7, 44, tzinfo=datetime.timezone.utc)}]",Siyao Li,66965952,,User,,12,,1,3

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
4787136,appinventor-sources,mit-cml/appinventor-sources,Java,2044,1461,142,239,3423,594,12,162,"[{'id': 1027176479, 'number': 2711, 'closed': None, 'created': datetime.datetime(2022, 8, 16, 5, 45, 8, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1632, 'deletions': 8, 'state': 'open'}, {'id': 969324682, 'number': 2699, 'closed': datetime.datetime(2022, 9, 22, 16, 49, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 16, 13, 23, 30, tzinfo=datetime.timezone.utc), 'time_taken': 8479551.0, 'time_delta': '98 days, 3:25:51', 'additions': 1514, 'deletions': 45, 'state': 'closed'}]"
