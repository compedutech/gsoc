pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
425948018,Initial Commit for PlaformChannel Sample App,"## Description
- Adds a MethodChannel Demo with tests.

### GIF

<img src = ""https://user-images.githubusercontent.com/34301187/83408892-01df8500-a431-11ea-89ab-3335fae01bc1.gif"" width=250>


@RedBrogdon @domesticmouse  I have few doubts regarding the current commit. I'll state them below
 
- Currently, for testing the functionality of the counter, I need to write an integration test. Should I write an integration test or just unit test which Mocks the increment and decrement methods using `setMockMethodCallHandler`? I can also use the `provider` package since my logic is already separated out and in the test, I can create a Mock.

- Currently, I have separated the logic for the MethodChannel and method calls in the class named `Counter`. Is that how we are looking to implement the demos? If yes, then is there any project structure I should follow? ",True,453,https://api.github.com/repos/flutter/samples/pulls/453,https://github.com/flutter/samples/pull/453,closed,1805,0,67,13,2,40,0,0,[],2020-06-01 12:26:35+00:00,2020-06-04 21:54:53+00:00,293298.0,"3 days, 9:28:18","[{'comment_id': 433560788, 'comment_body': 'This file needs to get bigger and more detailed. Take a look at the README in jsonexample for a model:\r\n\r\nhttps://github.com/flutter/samples/blob/master/jsonexample/README.md', 'comment_created': datetime.datetime(2020, 6, 2, 0, 41, 26, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 433560855, 'comment_body': 'nit: Throw a newline on this.', 'comment_created': datetime.datetime(2020, 6, 2, 0, 41, 40, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 433561596, 'comment_body': 'We generally use ""dev.flutter"" or ""dev.flutter.example"" as the org. You should be able to run:\r\n\r\n   flutter create --org=""dev.flutter"" .\r\n\r\nin the project directory to change it.', 'comment_created': datetime.datetime(2020, 6, 2, 0, 44, 51, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 433563283, 'comment_body': ""Typically we'd make a simple data class for this rather than using maps, so you'd have `List<DemoData>` rather than `List<Map<String, String>>`."", 'comment_created': datetime.datetime(2020, 6, 2, 0, 51, 47, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 433563455, 'comment_body': ""Did you consider using a ListView here? While it's unlikely to matter in this case, ListView is significantly more performant than a scrolling Column."", 'comment_created': datetime.datetime(2020, 6, 2, 0, 52, 38, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 433563537, 'comment_body': 'nit ""responsible for displaying""', 'comment_created': datetime.datetime(2020, 6, 2, 0, 52, 53, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 433564075, 'comment_body': ""If the constructor accepts a key, it should pass it along to the super class constructor. For example:\r\n\r\nhttps://github.com/RedBrogdon/rebloc/blob/master/lib/src/widgets.dart#L24\r\n\r\nAlso, it looks like this widget needs the demoTitle and demoRoute parameters to be set, so consider making them positional, rather than named optional parameters. You could also add asserts to make sure they're not null."", 'comment_created': datetime.datetime(2020, 6, 2, 0, 54, 53, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 433569317, 'comment_body': 'I believe the code in this method could be tightened up a bit and made more readable. Consider trying the following:\r\n\r\n* Rather than declaring `count` without initializing it, fill it with `call.argument<Int>(""count"")` right away.\r\n* Check to see if the value is null, and if it is, call `result.error` right away.\r\n  - For readability, it\'s good to put argument error conditions as high in the function as possible, rather than separating them from the condition and putting them at the bottom.\r\n  - With the check done, count will be promoted to non-nullable automatically, so you won\'t have to worry about using `!!`.\r\n* Try removing any unnecessary braces in the `when` statement.\r\n  - You could also call `result.success` from inside the `when`, which saves you from needing to do it later (and I think makes it possible for `count` to be a `val` rather than a `var`.', 'comment_created': datetime.datetime(2020, 6, 2, 1, 16, 12, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 433627960, 'comment_body': 'Do these two methods need to be static?', 'comment_created': datetime.datetime(2020, 6, 2, 5, 27, 48, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 433628596, 'comment_body': ""I'm not sure you need this comment block. There's a weird subtly to adding comments to sample code. One the one hand, it can help people figure out what's going on, but on the other it adds length to the overall file and doesn't help those who aren't very accustomed to speaking English.\r\n\r\nTypically we tend to add comments that explain functionality specific to the particular app (in other words, nothing that you could just as easily find in the SDK docs). For that reason, I'd recommend cutting this part, since it's mostly just explaining what `invokeMethod` does."", 'comment_created': datetime.datetime(2020, 6, 2, 5, 30, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 433629143, 'comment_body': ""nit: this is a style concern, and several of the other contributors to the repo disagree with me, but I generally avoid using underscores for unused parameter names. While they're perfectly fine in normal code, a reader here might like to know what data that parameter normally holds. Using a real name (even something like `ex` here) can give them a hint as they read."", 'comment_created': datetime.datetime(2020, 6, 2, 5, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 433629436, 'comment_body': 'Why is the code trapping these exceptions? Would it not be better just to let them escape so that the UI can present the error message?', 'comment_created': datetime.datetime(2020, 6, 2, 5, 32, 51, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 433629745, 'comment_body': 'You can get around the need for this key by wrapping the body of your scaffold in a builder widget, which will provide a new BuildContext below the Scaffold.', 'comment_created': datetime.datetime(2020, 6, 2, 5, 33, 58, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 433629844, 'comment_body': 'You can also just initialize count to 0 right in its declaration and get ride of this override.', 'comment_created': datetime.datetime(2020, 6, 2, 5, 34, 20, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 433630139, 'comment_body': 'Start is the default, so you can actually leave this out.', 'comment_created': datetime.datetime(2020, 6, 2, 5, 35, 14, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 433630664, 'comment_body': ""I believe that if one is going to have two FABs, they should be a in a Column. At least that's the example they show on the Material site:\r\n\r\nhttps://material.io/components/buttons-floating-action-button"", 'comment_created': datetime.datetime(2020, 6, 2, 5, 37, 13, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 433630861, 'comment_body': 'This method can be made async, which will allow you to use await and try/catches.', 'comment_created': datetime.datetime(2020, 6, 2, 5, 37, 53, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 433631042, 'comment_body': 'Would a Center widget work here rather than a Container?', 'comment_created': datetime.datetime(2020, 6, 2, 5, 38, 30, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 433829392, 'comment_body': ""I did consider using a `ListView`, but I think we won't have many DemoTile's on the screen. I'm using `SingleChildScrollView` just to be on safer side in case if user is testing in small device."", 'comment_created': datetime.datetime(2020, 6, 2, 12, 14, 35, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 433830501, 'comment_body': 'Thank you for the suggestions. Yes, we can make count be val instead of var and send the value like `result.success(count + 1).', 'comment_created': datetime.datetime(2020, 6, 2, 12, 16, 45, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 433832195, 'comment_body': 'I was avoiding to create an object of `Counter` and then use the object to access the methods. ', 'comment_created': datetime.datetime(2020, 6, 2, 12, 19, 58, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 433832521, 'comment_body': ""Yes, I was also unsure about that. Thanks for pointing out. I'll remember this for next iterations."", 'comment_created': datetime.datetime(2020, 6, 2, 12, 20, 34, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 433832997, 'comment_body': 'Makes sense, using `catchError` now to show the specific error message.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 21, 24, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 433835471, 'comment_body': ""I did the same thing. First, I was using `Builder` to have a different context, thinking that GlobalKey is a little more expensive, but I switch to GlobalKey so that I have to pass less arguments. \r\n\r\nI'll again use the `Builder` instead of `GlobalKey`."", 'comment_created': datetime.datetime(2020, 6, 2, 12, 25, 59, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 433896163, 'comment_body': 'I was thinking to add a detailed README after the project. As of now, I have improved it taking the base from other samples in the repo.', 'comment_created': datetime.datetime(2020, 6, 2, 13, 58, 5, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 434298845, 'comment_body': 'The new stuff looks great. The only additional suggestion I have is to add a line just before ""Goals"" that says ""This sample is currently being built. Not all platforms and functionality are in place.""', 'comment_created': datetime.datetime(2020, 6, 3, 4, 19, 23, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 434298989, 'comment_body': 'nit: ""to listen to continuous value changes from the platform.""', 'comment_created': datetime.datetime(2020, 6, 3, 4, 19, 58, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 434299320, 'comment_body': 'This looks great. Much tighter code.', 'comment_created': datetime.datetime(2020, 6, 3, 4, 21, 19, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 434299445, 'comment_body': 'Discussed offline, and we decided to go with a ListView.', 'comment_created': datetime.datetime(2020, 6, 3, 4, 21, 57, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 434299597, 'comment_body': ""SGTM. It's more a style choice rather than anything."", 'comment_created': datetime.datetime(2020, 6, 3, 4, 22, 37, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 434299984, 'comment_body': 'nit: ""...to display its value.""', 'comment_created': datetime.datetime(2020, 6, 3, 4, 24, 24, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 434300062, 'comment_body': 'Nice refactor. Builder has saved me a lot of keys. :)', 'comment_created': datetime.datetime(2020, 6, 3, 4, 24, 44, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 434300172, 'comment_body': 'nit: ""...users press the...""', 'comment_created': datetime.datetime(2020, 6, 3, 4, 25, 9, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 434300420, 'comment_body': ""This shouldn't be necessary. Try taking it out and see if everything still works. :)"", 'comment_created': datetime.datetime(2020, 6, 3, 4, 26, 7, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 434302524, 'comment_body': ""I believe I had a comment in this section earlier, but just in case: typically I would expect to see an async method here. Generally we recommend using async/await over the Futures API whenever possible. \r\n\r\nThe logic can all stay the same; it's just a syntactical change:\r\n\r\n```dart\r\nonPressed: () async {\r\n  try {\r\n    final value = await Counter.increment(counterValue: count);\r\n    setState(() => count = value);\r\n  } catch (error) {\r\n    showErrorMessage(\r\n      context,\r\n      error.message as String,\r\n    );\r\n  }\r\n},\r\n```"", 'comment_created': datetime.datetime(2020, 6, 3, 4, 35, 45, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 434448398, 'comment_body': 'I missed it in the previous commit after doing the changes.', 'comment_created': datetime.datetime(2020, 6, 3, 9, 53, 25, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 434935961, 'comment_body': ""There are a number of places you can put this sort of setup code. Inside at the top of main is fine, and there's also a `setUpAll` method that you can use to put code that needs to be called once before all the tests. The only thing I'd really recommend is to keep the declaration of `methodChannel` and this assignment in the same spot in the code, since they're directly related to one another."", 'comment_created': datetime.datetime(2020, 6, 4, 1, 4, 18, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 434951706, 'comment_body': ""@RedBrogdon I moved the code to register `MethodCallHandler` inside the `testWidgets` because I wanted to make sure I was accessing the `ServicesBinding.defaultBinaryMessenger` after the binding was initialized in `testWidgets`. If I register the mock in main, I had to use `TestWidgetsFlutterBinding.ensureInitialized`.\r\n\r\nBut, that's a good suggestion, I can use `setUpAll`."", 'comment_created': datetime.datetime(2020, 6, 4, 2, 7, 9, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 434953457, 'comment_body': ""I'll do the required changes; I'll use the `setUpAll` inside the `group` to register the mock for `MethodCallHandler`."", 'comment_created': datetime.datetime(2020, 6, 4, 2, 13, 54, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 435574361, 'comment_body': ""Got it. You're right, that makes total sense. `setUpAll` should prevent you from any similar problems in the future (at least in this file)."", 'comment_created': datetime.datetime(2020, 6, 4, 21, 54, 26, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}]","[{'commit_sha': '19dbb41900eb7973b90232dc3bd73091bd117dfd', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3fb69842b8a0876b36369697282c6ff1967723f', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b61dbed39431c2343ff45f05584b9acdb0c49b1', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6354becafff2008e9285efef5895987caf4d13b', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c6256ea7920df61fe276ace9d6bcfc1348e9e5a', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '572e802dc6b08fd3d4442bed2aebc372242d7d2a', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f28d8e53d11f1573890ec2ad7f81005ac091308f', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40f5142058a3921530d63ec68424a5a9f9c0e1d9', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22ab4f3703753ea231f04c207efcf506f9952827', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89d734c753e5dd22e057baa63aacdd6c773cf8ee', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee98dee3209757f07f19bfaee8b13ab1d399a021', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c58378175f1ca02411f79e3444b3bbdae884cd2', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b4495e4fa2ae970d57d4776cbe5a18ae3ab7bc2', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}]",Ayush Bherwani,34301187,ayush.bherwani1998@gmail.com,User,,198,,10,371
429330128,[platform_channels] adds EventChannel Demo,"## Description
Adds an `EventChannel` Demo where it streams the value of Accelerometer sensor.

#### GIF
<img src = ""https://user-images.githubusercontent.com/34301187/83950448-80309280-a848-11ea-9d6e-f453b6346fa7.gif"" width=250>
",True,462,https://api.github.com/repos/flutter/samples/pulls/462,https://github.com/flutter/samples/pull/462,closed,225,1,6,12,2,18,0,0,[],2020-06-06 17:23:58+00:00,2020-06-12 23:58:44+00:00,542086.0,"6 days, 6:34:46","[{'comment_id': 436285891, 'comment_body': ""I'm not sure how can I mock the `EventChannel.recieveBroadcastStream`. Suggestions and ideas for testing are much appreciated."", 'comment_created': datetime.datetime(2020, 6, 6, 17, 27, 21, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 436286051, 'comment_body': ""Any suggestions for improving UI are welcome. We can also have three `Contianer`s which change properties when a value changes. But since the sample is for learning purpose I kept it simple enough. I'm happy to iterate over sample to improve the UI."", 'comment_created': datetime.datetime(2020, 6, 6, 17, 29, 26, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 436348027, 'comment_body': 'The `EventChannel` test in the framework helped me. \r\n\r\n[Here](https://github.com/flutter/flutter/blob/7519c383f9bcbe54a235ce4b036bdefb99a3ed2d/packages/flutter/test/services/platform_channel_test.dart#L275)', 'comment_created': datetime.datetime(2020, 6, 7, 10, 25, 44, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 437855946, 'comment_body': ""I'm not sure that `events` could ever be null here without something having gone very, very wrong. If you're going to have a null check, I would probably put the `registerListener` call in there as well. No point in having the listener if you can't send events back."", 'comment_created': datetime.datetime(2020, 6, 10, 4, 40, 11, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 437857611, 'comment_body': 'Consider aligning the names of the two channels a little more. The previous one is ""methodChannelDemo,"" and this one is ""accelerometer"" rather than ""eventChannelDemo"" or something similar. You could always rename the method channel one to ""counter.""', 'comment_created': datetime.datetime(2020, 6, 10, 4, 47, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 437857935, 'comment_body': ""I would recommend cutting the comments on line 40 and 42-44. Your code is easy to read and very direct. I don't think people need the comments to understand what you're doing."", 'comment_created': datetime.datetime(2020, 6, 10, 4, 48, 19, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 437858220, 'comment_body': 'nit: ""listen to value"" and ""from the accelerometer.""', 'comment_created': datetime.datetime(2020, 6, 10, 4, 49, 29, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 437858277, 'comment_body': 'nit: ""responsible for providing"" and ""to listen to"" ', 'comment_created': datetime.datetime(2020, 6, 10, 4, 49, 46, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 437859231, 'comment_body': ""It's more idiomatic to Dart to have methods like this just be getters. It's a simple change:\r\n\r\n```dart\r\nstatic StreamAccelerometerReadings> get readings {\r\n  return ...\r\n}\r\n```"", 'comment_created': datetime.datetime(2020, 6, 10, 4, 53, 37, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 437859349, 'comment_body': 'Optional suggestion, but you could make this a const constructor.', 'comment_created': datetime.datetime(2020, 6, 10, 4, 54, 7, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 437859702, 'comment_body': 'We\'re getting way into the Dart style guide here, but it\'s recommended to start class comments like these with a verb:\r\n\r\nhttps://dart.dev/guides/language/effective-dart/documentation#prefer-starting-function-or-method-comments-with-third-person-verbs\r\n\r\nIn this case, you\'d just drop ""the widget"" from the beginning.', 'comment_created': datetime.datetime(2020, 6, 10, 4, 55, 35, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 437859849, 'comment_body': 'Here, ""the widget"" is fine. It\'s just for the initial sentence that the noun is typically dropped.', 'comment_created': datetime.datetime(2020, 6, 10, 4, 56, 9, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 437859974, 'comment_body': 'As we discussed offline, I think you could do something simple with Animated Container, which always manages to make UI look cool.', 'comment_created': datetime.datetime(2020, 6, 10, 4, 56, 40, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 437860443, 'comment_body': ""Consider checking for errors and displaying them as well. It's a good practice, and one some devices it's possible a user could get one."", 'comment_created': datetime.datetime(2020, 6, 10, 4, 58, 38, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 438083868, 'comment_body': '@RedBrogdon Instead of using `AnimatedContainer` I tried `Transform` to rotate the containers whenever the value changes. There are three containers which resemble 3 Axis. Each `Container` rotates on a single axis.\r\n\r\n#### GIF\r\n<img src = ""https://user-images.githubusercontent.com/34301187/84264085-37295880-ab3e-11ea-933d-1ba48cbf66dd.gif"" width=250>\r\n\r\nThe above example works fine on the Emulator, but when testing on the real device, the value changes too fast and hence the `Container`s keep rotating even while you are holding the phone.\r\n\r\nI also tried with the `AnimatedContainer`, based on the values of x and y-axis from the Stream I was changing the height and width of the `AnimatedContainer` respectively, and on the value of z-axis, I\'m changing the `borderRadius`, which works fine on the real device too.\r\n\r\n#### GIF\r\n<img src = ""https://user-images.githubusercontent.com/34301187/84267736-2bd92b80-ab44-11ea-91bc-348524cf9525.gif"" width=250>\r\n\r\n\r\n', 'comment_created': datetime.datetime(2020, 6, 10, 12, 30, 33, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 438204164, 'comment_body': 'The recent commit uses `AnimatedContainer` example.', 'comment_created': datetime.datetime(2020, 6, 10, 15, 17, 26, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 439213342, 'comment_body': ""The changes you've made everywhere else are solid, so I think the only remaining question is what to do about displaying the data. While the AnimatedContainer code you have here is clean, valid, Flutter, I don't think it's obvious to someone looking at the app how the container visually relates to the numbers coming out of the accelerometer (I don't have the eyes to see small changes in border radius, for example).\r\n\r\nFor now, I would consider just going back to Text widgets, so you can put your time into finishing out the rest of the app (and the plugin app). Once those are done, you'll likely have time to come back to this section of the code, and (probably) you'll have had an idea for a great way to present the data.\r\n\r\nThat's just a suggestion, though. If you want to iterate on a few designs and try to find a great one, that's cool. You might try an animated bar chart, similar to what audio equalizers do, for example."", 'comment_created': datetime.datetime(2020, 6, 12, 5, 26, 4, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 439215708, 'comment_body': ""> \r\n> \r\n> The changes you've made everywhere else are solid, so I think the only remaining question is what to do about displaying the data. While the AnimatedContainer code you have here is clean, valid, Flutter, I don't think it's obvious to someone looking at the app how the container visually relates to the numbers coming out of the accelerometer (I don't have the eyes to see small changes in border radius, for example).\r\n\r\nCompletely makes sense to me.\r\n\r\n> For now, I would consider just going back to Text widgets, so you can put your time into finishing out the rest of the app (and the plugin app). Once those are done, you'll likely have time to come back to this section of the code, and (probably) you'll have had an idea for a great way to present the data.\r\n\r\nSGTM, as we finish the project we can iterate over the design. Also, if I come across any idea for displaying data, I will submit a separate PR for that, so we don't have our progress on hold."", 'comment_created': datetime.datetime(2020, 6, 12, 5, 35, 7, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}]","[{'commit_sha': '476f5ca8ce9e2eaecb733b05bba4ead5ca1ce222', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab48b299724aadb9b7bfe119d723a1d80c474605', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b0b15544db0154959d19680dc24ebcf8e31c35a', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae8714a1e7c444a9628931bb2d5c214038bd9f7e', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '426a3e3db3ef2eb9b3374f62e6dc41d872d18602', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89badf1f7b9e8b8e20cd73e01579ef646a3b7eb0', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d59bd363abb8fb1256dfc7301b20f6327513705', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42ec132782e823a4743935e11648f0390c35cf59', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '659831a75f1ef2554daac359c64e47d386396c60', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0d0c540c582421137d247c1e84b3ce82eda533e', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2066e22a558113a6fabad5165a310f23bff5acd', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f231ce97bbb3142afa35332af4d376e81e058376', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}]",Ayush Bherwani,34301187,ayush.bherwani1998@gmail.com,User,,198,,10,371
433963328,[platform_channels] adds Platform Image demo,"## Description

Demonstrates how to use `BasicMessageChannel` to send the message from the dart side and receive a reply from the platform. The demo also demonstrates how to receive
 an image from the platform.

#### Screenshots

<img src = ""https://user-images.githubusercontent.com/34301187/84561082-11cb6300-ad67-11ea-8863-dbf4b59425fb.png"" width=250>

<img src = ""https://user-images.githubusercontent.com/34301187/84561085-12fc9000-ad67-11ea-8712-87f0a15704cc.png"" width=250>",True,475,https://api.github.com/repos/flutter/samples/pulls/475,https://github.com/flutter/samples/pull/475,closed,163,0,8,4,2,10,0,0,[],2020-06-13 05:46:25+00:00,2020-06-19 22:58:00+00:00,580295.0,"6 days, 17:11:35","[{'comment_id': 440527592, 'comment_body': 'nit:\r\n\r\n        // Registers a MessageHandler for BasicMessageChannel to receive\r\n        // a message from Dart and send image data in reply.', 'comment_created': datetime.datetime(2020, 6, 16, 1, 1, 31, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 440527827, 'comment_body': 'nit: Copyright header needed.', 'comment_created': datetime.datetime(2020, 6, 16, 1, 2, 24, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 440528016, 'comment_body': 'I believe there should be a whitespace line between these two imports, since one comes from the Dart SDK and one is from a package.', 'comment_created': datetime.datetime(2020, 6, 16, 1, 3, 6, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 440528851, 'comment_body': 'nit: /// This class manages a [BasicMessageChannel] that can return an image loaded\r\n/// from a native asset. The [BasicMessageChannel] uses [StandardMessageCodec]\r\n/// since it supports [Uint8List], which is used to transport the image data.', 'comment_created': datetime.datetime(2020, 6, 16, 1, 6, 26, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 440529027, 'comment_body': 'nit: copyright header and line of whitespace after the `dart:` imports.', 'comment_created': datetime.datetime(2020, 6, 16, 1, 7, 1, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 440530097, 'comment_body': 'Have you seen FractionallySizedBox? I believe you can use it to get the look you want without the need for a MediaQuery.\r\n\r\nhttps://github.com/flutter/flutter/blob/f7f019aa9410f484055aee7207cc51a61ad95ba7/packages/flutter/lib/src/widgets/basic.dart#L2300', 'comment_created': datetime.datetime(2020, 6, 16, 1, 11, 3, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 440530948, 'comment_body': ""While I'm sure this code works, there's a slightly different pattern more commonly used on our team:\r\n\r\n1) Change `imageData` to be `Future<Uint8List>` and initialize it to null.\r\n2) In the build method, if `imageData` is null, build the PlaceHolder as you are now.\r\n3) If it's not null, use a FutureBuilder to display the state of the future (uncompleted, completed, error).\r\n\r\nThis onPressed method would then just need to be `setState(() => imageData = PlatformImage.getImage());`, and the SDK would do the work of waiting on it to complete for you."", 'comment_created': datetime.datetime(2020, 6, 16, 1, 14, 34, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 440531148, 'comment_body': 'Consider renaming this class to something slightly more descriptive (""PlatformImageFetcher"" for example).', 'comment_created': datetime.datetime(2020, 6, 16, 1, 15, 14, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 440531422, 'comment_body': 'nit: copyright header needed.', 'comment_created': datetime.datetime(2020, 6, 16, 1, 16, 14, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 442638093, 'comment_body': ""nit: Now that you're not using a snackbar, you don't need this builder any more."", 'comment_created': datetime.datetime(2020, 6, 19, 5, 28, 56, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}]","[{'commit_sha': '05b0db5946f42033159d8ab82dbfe96660ada0b9', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab9a9408da9e1118b66b252ce665899a1c4d49a3', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a78b33511c47a2d13ff5c0d1dc6737e4b8705094', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb0ee041ecfad06ba76a3bad10afa59edfa1b785', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}]",Ayush Bherwani,34301187,ayush.bherwani1998@gmail.com,User,,198,,10,371
437745385,[platform_channels] adds BasicMessageChannel Demo,"## Description
Adds `BasicMessageChannel` demo to send a message to the platform and receive a reply using different `MessageCodec`. 

##### GIF
<img src = ""https://user-images.githubusercontent.com/34301187/85260915-0ffd5000-b489-11ea-82e9-15731edd88dd.gif"" width = 250>

",True,484,https://api.github.com/repos/flutter/samples/pulls/484,https://github.com/flutter/samples/pull/484,closed,426,5,8,12,0,24,0,0,[],2020-06-22 07:37:04+00:00,2020-07-11 00:11:52+00:00,1614888.0,"18 days, 16:34:48","[{'comment_id': 443370202, 'comment_body': ""@RedBrogdon Right now, I'm not checking whether the String is empty or not, and sending it anyways to the platform. Let me know if I should add a validation for empty String or not."", 'comment_created': datetime.datetime(2020, 6, 22, 7, 38, 49, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 443783188, 'comment_body': 'nit: ""to send a message""', 'comment_created': datetime.datetime(2020, 6, 22, 19, 39, 18, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 443794256, 'comment_body': 'Could you use a collection-for to do this? It would be a good time to show off that feature, if so. \r\n\r\nSee this blog post for some examples halfway down:\r\nhttps://medium.com/dartlang/announcing-dart-2-3-optimized-for-building-user-interfaces-e84919ca1dff', 'comment_created': datetime.datetime(2020, 6, 22, 20, 2, 56, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 443796284, 'comment_body': 'nit: ""send messages to the platform and receive replies.""', 'comment_created': datetime.datetime(2020, 6, 22, 20, 7, 16, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 443797893, 'comment_body': 'Why is this channel the only one with an explicitly dynamic type? Are the others inferred as different types, or are they implicitly dynamic?', 'comment_created': datetime.datetime(2020, 6, 22, 20, 10, 53, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 443798149, 'comment_body': 'nit: ""for sending messages to the platform and receiving replies...""', 'comment_created': datetime.datetime(2020, 6, 22, 20, 11, 24, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 443800718, 'comment_body': 'nit: ""Finds the TextField and send button, then used them to send `message`.""', 'comment_created': datetime.datetime(2020, 6, 22, 20, 16, 33, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 443803911, 'comment_body': ""While I love that you've kept things simple throughout this sample, I wonder if there's a missed opportunity here to show JSON codec sending more structured data. Would it be possible to show a message containing more than one value being sent back and forth here?"", 'comment_created': datetime.datetime(2020, 6, 22, 20, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 443975700, 'comment_body': ""Sure, I'll use collection-for to create `DropDownMenuItem`s"", 'comment_created': datetime.datetime(2020, 6, 23, 5, 46, 47, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 443977791, 'comment_body': 'The others have different types, for the channel using `BinaryCodec` it will return `ByteData` and for `StringCodec` it will return `String`. The `JSONMessageCodec` is implicitly dynamic but implicit-dynamic is set to false in the analyzer, due to which I have to provide explicit type.', 'comment_created': datetime.datetime(2020, 6, 23, 5, 52, 58, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 443978672, 'comment_body': ""Sure, I'll look to modify example a bit or come with something new where we can use `Map` to send the data across the platform. "", 'comment_created': datetime.datetime(2020, 6, 23, 5, 55, 43, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 444353250, 'comment_body': ""Hey @RedBrogdon, I was thinking to do a build a simple Dogs and Cats list sample, where you can add the type of Animal whether it's cat or dog and their breed, and delete any item from the list. The list will be stored on the native side.\r\nEvery time user adds a new item to the list, we can send a `Map` to the native side and add it to the list. Once, the item is added to the list, we can simply send the list using the channel for which we will have a `MessageHandler` at the dart side. For deleting the item, we can have another `BasicMessageChannel` with `BinaryCodec` where we can convert the index of `List` -> `String` -> `ByteData` to delete any item from the list. We can remove the usage of `StringCodec` since it's pretty straight forward. WDYT?"", 'comment_created': datetime.datetime(2020, 6, 23, 16, 27, 42, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 447209018, 'comment_body': ""I think that's a great plan. It would also allow you to show calls that *originate* on the native side, which you did with an EventChannel but (I believe) haven't yet done with a MethodChannel."", 'comment_created': datetime.datetime(2020, 6, 29, 19, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 447209782, 'comment_body': ""Also, thanks again for understanding that last week was a busy week for us. Thursday and Friday will be holidays for Googlers in the United States, but I'm back at normal speed. 😄 "", 'comment_created': datetime.datetime(2020, 6, 29, 19, 42, 45, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 447253029, 'comment_body': ""Awesome, I'll do all the required changes in the next commit."", 'comment_created': datetime.datetime(2020, 6, 29, 21, 4, 24, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 448742321, 'comment_body': ""Hey, @RedBrogdon I'm not sure how can I test this part with the UI. \r\n\r\nI have an idea to break these tests into two parts. One unit test with a Mock to check that JSON is converted to `PetModel` and one widget test to check that `ListView` is properly rendered when a `PetMode.petList` is given.  "", 'comment_created': datetime.datetime(2020, 7, 2, 4, 30, 36, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 448742592, 'comment_body': 'For the idea proposed above, I would require to break this into a different class that accepts a `List<PetDetails>`.', 'comment_created': datetime.datetime(2020, 7, 2, 4, 31, 47, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 451901656, 'comment_body': ""Since you've already created a PetDetails class, consider using that class as the parameter for this function rather than a map. The map makes sense given that JSON is used to transport the data through the message channel. That's more an internal implementation detail of the PetListMessageChannel class, though, rather than something the app as a whole needs to worry about.\r\n\r\nYou could address this by:\r\n\r\n1) Changing the signature of addPetDetail to take a single PetDetails.\r\n2) Add a new method to PetDetails called toJson that converts a PetDetails to a Map<String, String>.\r\n3) Add code inside addPetDetail to call that method to convert the PetDetails prior to sending data through the message channel.\r\n\r\n"", 'comment_created': datetime.datetime(2020, 7, 9, 0, 46, 46, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 451902576, 'comment_body': 'nit: I\'d recommend changing this class\'s name to something like ""PetListModel"" to reflect that it\'s more than a model of a single pet.', 'comment_created': datetime.datetime(2020, 7, 9, 0, 50, 18, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 451905195, 'comment_body': 'Separating business logic (in this case, the fetching/updating of pet data) from the presentation details (how the widgets are constructed given a list of pets) is definitely a great idea.', 'comment_created': datetime.datetime(2020, 7, 9, 1, 1, 13, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 451905519, 'comment_body': 'See my response below. I think splitting things up is definitely a good idea.', 'comment_created': datetime.datetime(2020, 7, 9, 1, 2, 34, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 451906475, 'comment_body': ""I don't think it's possible given the UI you've built, but what happens if an invalid index is sent to this method? Does the error propagate correctly back to Dart?"", 'comment_created': datetime.datetime(2020, 7, 9, 1, 6, 28, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 452354464, 'comment_body': ""Yes, in the current UI it's not possible and there is no way that the error message is propagated correctly back to the Dart. I'll check whether the index exists or not and send a reply back to `BasicMessageChannel`. If reply is null that means the index doesn't exist and we can show the apt error message."", 'comment_created': datetime.datetime(2020, 7, 9, 16, 48, 22, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 452355923, 'comment_body': ""That makes sense. I'll do the required changes."", 'comment_created': datetime.datetime(2020, 7, 9, 16, 50, 50, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}]","[{'commit_sha': 'bcac8d765df608e81583846745787049a407153c', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb53504b8d6dd5e3a2842bee5de7cbb5f808f519', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfeedbe453b4bdb7e0287b6cd65b133faa97700f', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93f3f763400ff128d9eb4df21baf0910b4b3c9b0', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eac70a961dea48b7fb12382ce53ff2338163fa6c', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c41ed0779133fd95db597780408b91c4b9d5856', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abcb66871816d4667e05a9fa6642798a6330ff97', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4541bedab05c47fa04d10ea405f46f7e1ce78d7', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08dd219a96d46db1017caff214555bc1604a3290', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd67ed5c60a6752feff373bdaa6d4d7365050432', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '699a994c4122b75d1208f337f799ebe54139237b', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05193d1a7964b4cb308e2372da22bd7572391628', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}]",Ayush Bherwani,34301187,ayush.bherwani1998@gmail.com,User,,198,,10,371
448982082,[platform_channels] updates README,"## Description

Updates README for the platform_channels sample.",True,496,https://api.github.com/repos/flutter/samples/pulls/496,https://github.com/flutter/samples/pull/496,closed,22,0,1,3,0,2,0,0,[],2020-07-14 16:20:02+00:00,2020-07-16 04:23:32+00:00,129810.0,"1 day, 12:03:30","[{'comment_id': 455445711, 'comment_body': ""While it's great that you've got the descriptions in here, I think there might be a bit too much overall length. This section is meant to be a quick table of contents that gives readers an idea of where to start looking through the code. It doesn't need to list every file.\r\n\r\nConsider shortening it up by cutting things:\r\n\r\n```\r\n## The important bits\r\n\r\n### [Method Channel demo](./lib/src/method_channel_demo.dart)\r\n\r\nDemonstrates how to implement a `MethodChannel` to increment and decrement a\r\ncounter.\r\n\r\n### [Event Channel demo](./lib/src/event_channel_demo.dart)\r\n\r\nDemonstrates how to implement an `EventChannel` to listen to value changes from\r\nthe Accelerometer sensor from native side\r\n\r\n### [Platform Image demo](./lib/src/platform_image_demo.dart)\r\n\r\nDemonstrates how to implement a `BasicMessageChannel` using\r\n`StandardMessageCodec` to load an image from native asset.\r\n\r\n### Basic Message Channel demo(./lib/src/pet_list_screen.dart)\r\n\r\nDemonstrates how to implement `BasicMessageChannel` using `JSONMessageCodec` and\r\n`BinaryCodec` to send and receive data about pets.\r\n```"", 'comment_created': datetime.datetime(2020, 7, 16, 0, 48, 1, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 455477848, 'comment_body': ""Sure, I'll shorten the description."", 'comment_created': datetime.datetime(2020, 7, 16, 2, 49, 41, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}]","[{'commit_sha': '446b56940966cf7a302aa22be284cad152513b47', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0068c245296595bd157f8c04fec0aa2a93e4e55', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50ca19de49ab418f0ecc7e830340aa05f93e362e', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}]",Ayush Bherwani,34301187,ayush.bherwani1998@gmail.com,User,,198,,10,371
449865280,[federated_plugin_sample] Initial commit,"## Description

Initial commit for `federated_plugin_sample`
- Adds and updates project level README 
- Removes the generated license.
- Adds `analysis_options.yaml` in `federated_pluign/federated_plugin` and `federated_pluign/federated_plugin/example`",True,497,https://api.github.com/repos/flutter/samples/pulls/497,https://github.com/flutter/samples/pull/497,closed,2043,0,85,4,0,13,0,0,[],2020-07-16 03:15:52+00:00,2020-07-21 00:55:56+00:00,423604.0,"4 days, 21:40:04","[{'comment_id': 456150259, 'comment_body': 'nit: ""implement a federated plugin to fetch the device location on different platforms.""', 'comment_created': datetime.datetime(2020, 7, 17, 0, 24, 47, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 456150329, 'comment_body': 'nit: ""Show""', 'comment_created': datetime.datetime(2020, 7, 17, 0, 25, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 456150686, 'comment_body': 'nit: ""web"" and ""desktop"" don\'t need to be capitalized, since they\'re not proper nouns.', 'comment_created': datetime.datetime(2020, 7, 17, 0, 26, 1, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 456151633, 'comment_body': 'Could use a brief description here. Or just remove it entirely, since you have the main README in the root directory.', 'comment_created': datetime.datetime(2020, 7, 17, 0, 29, 15, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 456152147, 'comment_body': ""If you're going to keep this file, I'd recommend cutting everything after line 3."", 'comment_created': datetime.datetime(2020, 7, 17, 0, 30, 59, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 456152898, 'comment_body': 'nit: Put a newline on this. If the file was autogenerated without one, we should file a bug.', 'comment_created': datetime.datetime(2020, 7, 17, 0, 33, 57, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 456153409, 'comment_body': ""There's a line in the example app's pubspec.yaml for `publish_to: none`. That should be added here as well -- it'll keep anyone from accidentally publishing the package to pub.dev."", 'comment_created': datetime.datetime(2020, 7, 17, 0, 35, 53, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 456153498, 'comment_body': 'Copyright header needed.', 'comment_created': datetime.datetime(2020, 7, 17, 0, 36, 11, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 456153534, 'comment_body': 'Copyright header needed.', 'comment_created': datetime.datetime(2020, 7, 17, 0, 36, 21, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 456153737, 'comment_body': ""Copyright header needed if you're going to keep this file around."", 'comment_created': datetime.datetime(2020, 7, 17, 0, 37, 11, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 456153748, 'comment_body': 'Copyright header needed.', 'comment_created': datetime.datetime(2020, 7, 17, 0, 37, 17, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 456219666, 'comment_body': 'I have kept this file and removed the federated_plugin/federated_plugin/README ', 'comment_created': datetime.datetime(2020, 7, 17, 5, 2, 47, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 456219939, 'comment_body': 'The error was from my side while removing the comments.', 'comment_created': datetime.datetime(2020, 7, 17, 5, 3, 57, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}]","[{'commit_sha': '9d79a12d42cfe8bdf62136b4649fdd7659af715c', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8f634df30543651914d4867f2eeb2e06a79219c', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faeb6a9181eec6614e4c6fa82581395f1217c07e', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f5e1713f932ef42a2c50cbde84b10d7934bfbc7', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}]",Ayush Bherwani,34301187,ayush.bherwani1998@gmail.com,User,,198,,10,371
455254076,[federated_plugin] adds platform interface implementation and plugin implementation for Android,"## Description

- Adds platform interface for federated_plugin
- Adds `MethodChannel` implementation for Android
- Updates example to use the updated federated plugin API

#### SS
<img src = ""https://user-images.githubusercontent.com/34301187/88207838-fad53600-cc6d-11ea-9330-015683a58efa.png"" width = 200>

WIP: Write tests  & code documentation.
",True,503,https://api.github.com/repos/flutter/samples/pulls/503,https://github.com/flutter/samples/pull/503,closed,621,100,19,10,1,7,0,0,[],2020-07-22 17:25:04+00:00,2020-07-29 03:47:36+00:00,555752.0,"6 days, 10:22:32","[{'comment_id': 459166909, 'comment_body': 'You could cut the number of branches here by rearranging the conditions a bit:\r\n\r\n```dart\r\nif (android.os.Build.VERSION.SDK_INT > android.os.Build.VERSION_CODES.LOLLIPOP\r\n  && !checkPermissions()) {\r\n  requestPermissions(...);\r\n} else {\r\n  fetchLocation();\r\n}\r\n```', 'comment_created': datetime.datetime(2020, 7, 23, 1, 10, 51, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 459167399, 'comment_body': 'nit: ""permission is.""\r\n\r\n(Or ""permissions are."" Your call!)', 'comment_created': datetime.datetime(2020, 7, 23, 1, 12, 37, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 459168892, 'comment_body': ""Given that this is a one-liner, I'd just inline it wherever it's used."", 'comment_created': datetime.datetime(2020, 7, 23, 1, 18, 56, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 459169118, 'comment_body': ""If the code doesn't need to do anything here, just remove the TODO and add a comment to that effect (or remove the override, if that's possible)."", 'comment_created': datetime.datetime(2020, 7, 23, 1, 19, 47, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 459169429, 'comment_body': 'This method is doing more than its name implies. Consider refactoring the sending of the result out of this method and back into `onMethodCall`.', 'comment_created': datetime.datetime(2020, 7, 23, 1, 21, 23, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 459171093, 'comment_body': 'nit: ""use the""', 'comment_created': datetime.datetime(2020, 7, 23, 1, 28, 19, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}, {'comment_id': 459226738, 'comment_body': ""I guess `onMethodCall` won't be apt. since it means the function is also handling other incoming method calls. Also, `onMethodCall` is already used. I'll try to change it to `provideLocation`. Let me know in the next review if I should change it. Happy to iterate."", 'comment_created': datetime.datetime(2020, 7, 23, 5, 50, 27, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}]","[{'commit_sha': '4b7bb20051272320eb510bdbb437738ff6884231', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a99d2f6538e1a2d413251647caf537b9e2bf4a99', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47ca7dae8dcccab41a6d21db35f9758278c81cfb', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '034fa84bdbbd65ea0db2fb45721d1535520a56d2', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dcbe472c6462ed90a0511ab036b018c818ee7a2', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7c3563e3808c8e009a6881b2ca7060cd7da7721', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4eff47737df318e3e88dd6708c9ba80e9ad326a5', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '495813467db07b0c3067a8fa11aff8e77dc18737', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b64a79586faccd38f9b325e554efb0d5cd04063', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a84abfb7bba1c43c3815666dc694de35aa12461', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}]",Ayush Bherwani,34301187,ayush.bherwani1998@gmail.com,User,,198,,10,371
458442679,[federated_plugin] adds web implementation of federated_plugin,"## Description
- adds web implementation of `federated_plugin` to provide location data.
- adds support for the web in `federated_plugin/example`

WIP: Looking at how can I test the implemenation for web.",True,507,https://api.github.com/repos/flutter/samples/pulls/507,https://github.com/flutter/samples/pull/507,closed,678,52,20,9,0,6,0,0,[],2020-07-29 13:32:54+00:00,2020-08-05 05:38:21+00:00,576327.0,"6 days, 16:05:27","[{'comment_id': 463595760, 'comment_body': '@RedBrogdon Instead of mocking `FederatedPlugin` I decided to mock all the other classes to provide concrete test since it also test the conversation of `html.Coordinates` to `Location` for `getLocation`.   ', 'comment_created': datetime.datetime(2020, 7, 31, 12, 59, 38, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 463716194, 'comment_body': 'I have improved the implementation of plugin and test to reduce lines of code.', 'comment_created': datetime.datetime(2020, 7, 31, 16, 42, 5, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 464158129, 'comment_body': ""I'm curious if which Flutter branch this is being developed on, and what the upside of doing this on a branch other than `beta`?"", 'comment_created': datetime.datetime(2020, 8, 3, 1, 59, 47, tzinfo=datetime.timezone.utc), 'commenter': 'domesticmouse', 'type': 'User'}, {'comment_id': 464187760, 'comment_body': ""Hey @domesticmouse, the sample is currently targetting the master branch of flutter since we are also looking forward to adding support for the windows. \r\n\r\nEdit:\r\nAlso, I'll downgrade the dependency for the web implementation since it's a different package. Thanks for putting this to the notice. "", 'comment_created': datetime.datetime(2020, 8, 3, 4, 25, 54, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 464197049, 'comment_body': ""Hey @domesticmouse, I have downgraded dependencies to the beta channel for every package. I'll update for specific package as I'm adding the support for platforms which requires dev or master."", 'comment_created': datetime.datetime(2020, 8, 3, 5, 10, 14, tzinfo=datetime.timezone.utc), 'commenter': 'AyushBherwani1998', 'type': 'User'}, {'comment_id': 465437890, 'comment_body': ""One of the organizational decisions we made a while back was that everything in `/experimental` would target master for simplicity's sake:\r\n\r\nhttps://github.com/flutter/samples/tree/master/experimental\r\n\r\nIf that needs to change, we can certainly change it, but we should talk it over first."", 'comment_created': datetime.datetime(2020, 8, 5, 2, 39, 20, tzinfo=datetime.timezone.utc), 'commenter': 'RedBrogdon', 'type': 'User'}]","[{'commit_sha': '7314e7b6cbbb5cce246be92e1c9995948d04bace', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50f4a058d7d436f23fad49253967c3a993ca637d', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46cab8070e1ff58f7059f8df4e137ff47b024134', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24f5fa9dbc3d5018b812b9362378c561629b4943', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f7c9ab81c7db3cb0d26bc9dd6c15a417b43b856', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a3cfbf4df8346385bcae3df030910135479a3a8', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3035dedad57ef0ed7610749826feed46b2927c46', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34b55097bfadd4ce038dc5bdff4d64eaa6fad14a', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cd5d06ddf6c5e8a5118ad339393236e668c5c99', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}]",Ayush Bherwani,34301187,ayush.bherwani1998@gmail.com,User,,198,,10,371
468182609,[federated_plugin_sample] modify the sample to expose battery API instead of geolocation API,"## Description
Modifies the appropriate files of the sample to use battery API instead of geolocation API.

#### Screenshot

<img src = ""https://user-images.githubusercontent.com/34301187/90292234-2af3ab80-de9f-11ea-8a5d-f34e636c7620.png"" width=200>

Chromium Edge Browser
<img src = ""https://user-images.githubusercontent.com/34301187/90292495-9b9ac800-de9f-11ea-941f-e8f90e2d13fe.png"" width=600>

Firefox Browser ( Error propogates properly )
<img src = ""https://user-images.githubusercontent.com/34301187/90292491-989fd780-de9f-11ea-9ab0-a769b4f8522a.png"" width=600>
",True,526,https://api.github.com/repos/flutter/samples/pulls/526,https://github.com/flutter/samples/pull/526,closed,218,285,21,4,0,0,0,0,[],2020-08-14 21:05:01+00:00,2020-08-25 06:22:43+00:00,897462.0,"10 days, 9:17:42",[],"[{'commit_sha': '433e13d7a6133e5788786cdf8ab0317e04c112b8', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '132c7b722d7613a6722d60e92b33277782977a51', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dfccfbd1a6919ce673a81958c982918cf00f5ce', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7e5e26505e559bf09f31a899dd0838e631d0a12', 'committer_username': 'AyushBherwani1998', 'committer_name': 'Ayush Bherwani', 'committer_email': 'ayush.bherwani1998@gmail.com', 'commit_date': datetime.datetime(2017, 12, 6, 8, 59, 25, tzinfo=datetime.timezone.utc)}]",Ayush Bherwani,34301187,ayush.bherwani1998@gmail.com,User,,198,,10,371

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
136667574,samples,flutter/samples,Dart,7475,16989,453,142,1657,45,18,2,"[{'id': 1496546643, 'number': 1999, 'closed': datetime.datetime(2023, 8, 31, 6, 45, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 31, 5, 43, 3, tzinfo=datetime.timezone.utc), 'time_taken': 3718.0, 'time_delta': '1:01:58', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 1465247588, 'number': 1982, 'closed': datetime.datetime(2023, 8, 7, 23, 0, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 7, 13, 25, 51, tzinfo=datetime.timezone.utc), 'time_taken': 34489.0, 'time_delta': '9:34:49', 'additions': 16, 'deletions': 16, 'state': 'closed'}, {'id': 657417715, 'number': 803, 'closed': datetime.datetime(2021, 6, 7, 22, 30, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 29, 7, 14, 35, tzinfo=datetime.timezone.utc), 'time_taken': 832537.0, 'time_delta': '9 days, 15:15:37', 'additions': 51, 'deletions': 47, 'state': 'closed'}, {'id': 597277475, 'number': 781, 'closed': datetime.datetime(2021, 4, 6, 8, 59, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 20, 13, 4, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1454109.0, 'time_delta': '16 days, 19:55:09', 'additions': 198, 'deletions': 217, 'state': 'closed'}, {'id': 581295041, 'number': 744, 'closed': datetime.datetime(2021, 2, 28, 20, 53, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 27, 9, 21, 53, tzinfo=datetime.timezone.utc), 'time_taken': 127891.0, 'time_delta': '1 day, 11:31:31', 'additions': 47, 'deletions': 60, 'state': 'closed'}, {'id': 568916442, 'number': 702, 'closed': datetime.datetime(2021, 2, 8, 17, 58, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 7, 6, 18, 8, tzinfo=datetime.timezone.utc), 'time_taken': 128397.0, 'time_delta': '1 day, 11:39:57', 'additions': 105, 'deletions': 101, 'state': 'closed'}, {'id': 533148683, 'number': 610, 'closed': datetime.datetime(2020, 12, 15, 6, 15, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 6, 6, 26, 8, tzinfo=datetime.timezone.utc), 'time_taken': 776968.0, 'time_delta': '8 days, 23:49:28', 'additions': 56, 'deletions': 6, 'state': 'closed'}, {'id': 521377965, 'number': 595, 'closed': datetime.datetime(2020, 12, 2, 6, 28, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 16, 5, 56, 19, tzinfo=datetime.timezone.utc), 'time_taken': 1384352.0, 'time_delta': '16 days, 0:32:32', 'additions': 66, 'deletions': 7, 'state': 'closed'}, {'id': 517284594, 'number': 589, 'closed': datetime.datetime(2020, 11, 16, 6, 47, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 8, 10, 33, 25, tzinfo=datetime.timezone.utc), 'time_taken': 677625.0, 'time_delta': '7 days, 20:13:45', 'additions': 1741, 'deletions': 20, 'state': 'closed'}, {'id': 513571799, 'number': 579, 'closed': datetime.datetime(2020, 11, 2, 22, 15, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 1, 7, 5, tzinfo=datetime.timezone.utc), 'time_taken': 141001.0, 'time_delta': '1 day, 15:10:01', 'additions': 193, 'deletions': 40, 'state': 'closed'}, {'id': 509019445, 'number': 575, 'closed': datetime.datetime(2020, 10, 30, 18, 31, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 23, 14, 52, 45, tzinfo=datetime.timezone.utc), 'time_taken': 617921.0, 'time_delta': '7 days, 3:38:41', 'additions': 40, 'deletions': 0, 'state': 'closed'}, {'id': 500988661, 'number': 563, 'closed': datetime.datetime(2020, 10, 12, 21, 54, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 10, 14, 53, 21, tzinfo=datetime.timezone.utc), 'time_taken': 198055.0, 'time_delta': '2 days, 7:00:55', 'additions': 27, 'deletions': 10, 'state': 'closed'}, {'id': 491579680, 'number': 551, 'closed': datetime.datetime(2021, 9, 22, 0, 57, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 23, 7, 37, 13, tzinfo=datetime.timezone.utc), 'time_taken': 31425622.0, 'time_delta': '363 days, 17:20:22', 'additions': 1016, 'deletions': 1, 'state': 'closed'}, {'id': 473362232, 'number': 533, 'closed': datetime.datetime(2020, 9, 17, 23, 18, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 25, 17, 47, 20, tzinfo=datetime.timezone.utc), 'time_taken': 2007061.0, 'time_delta': '23 days, 5:31:01', 'additions': 1364, 'deletions': 2, 'state': 'closed'}, {'id': 468182609, 'number': 526, 'closed': datetime.datetime(2020, 8, 25, 6, 22, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 14, 21, 5, 1, tzinfo=datetime.timezone.utc), 'time_taken': 897462.0, 'time_delta': '10 days, 9:17:42', 'additions': 218, 'deletions': 285, 'state': 'closed'}, {'id': 458442679, 'number': 507, 'closed': datetime.datetime(2020, 8, 5, 5, 38, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 29, 13, 32, 54, tzinfo=datetime.timezone.utc), 'time_taken': 576327.0, 'time_delta': '6 days, 16:05:27', 'additions': 678, 'deletions': 52, 'state': 'closed'}, {'id': 455254076, 'number': 503, 'closed': datetime.datetime(2020, 7, 29, 3, 47, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 17, 25, 4, tzinfo=datetime.timezone.utc), 'time_taken': 555752.0, 'time_delta': '6 days, 10:22:32', 'additions': 621, 'deletions': 100, 'state': 'closed'}, {'id': 449865280, 'number': 497, 'closed': datetime.datetime(2020, 7, 21, 0, 55, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 3, 15, 52, tzinfo=datetime.timezone.utc), 'time_taken': 423604.0, 'time_delta': '4 days, 21:40:04', 'additions': 2043, 'deletions': 0, 'state': 'closed'}, {'id': 448982082, 'number': 496, 'closed': datetime.datetime(2020, 7, 16, 4, 23, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 14, 16, 20, 2, tzinfo=datetime.timezone.utc), 'time_taken': 129810.0, 'time_delta': '1 day, 12:03:30', 'additions': 22, 'deletions': 0, 'state': 'closed'}, {'id': 437745385, 'number': 484, 'closed': datetime.datetime(2020, 7, 11, 0, 11, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 7, 37, 4, tzinfo=datetime.timezone.utc), 'time_taken': 1614888.0, 'time_delta': '18 days, 16:34:48', 'additions': 426, 'deletions': 5, 'state': 'closed'}, {'id': 433963328, 'number': 475, 'closed': datetime.datetime(2020, 6, 19, 22, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 13, 5, 46, 25, tzinfo=datetime.timezone.utc), 'time_taken': 580295.0, 'time_delta': '6 days, 17:11:35', 'additions': 163, 'deletions': 0, 'state': 'closed'}, {'id': 429330128, 'number': 462, 'closed': datetime.datetime(2020, 6, 12, 23, 58, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 6, 17, 23, 58, tzinfo=datetime.timezone.utc), 'time_taken': 542086.0, 'time_delta': '6 days, 6:34:46', 'additions': 225, 'deletions': 1, 'state': 'closed'}, {'id': 427823699, 'number': 459, 'closed': datetime.datetime(2020, 6, 4, 21, 55, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 4, 13, 10, 1, tzinfo=datetime.timezone.utc), 'time_taken': 31545.0, 'time_delta': '8:45:45', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 425948018, 'number': 453, 'closed': datetime.datetime(2020, 6, 4, 21, 54, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 1, 12, 26, 35, tzinfo=datetime.timezone.utc), 'time_taken': 293298.0, 'time_delta': '3 days, 9:28:18', 'additions': 1805, 'deletions': 0, 'state': 'closed'}, {'id': 425931235, 'number': 452, 'closed': datetime.datetime(2020, 6, 1, 12, 37, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 1, 11, 51, 54, tzinfo=datetime.timezone.utc), 'time_taken': 2753.0, 'time_delta': '0:45:53', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 419889253, 'number': 443, 'closed': datetime.datetime(2020, 6, 6, 1, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 19, 5, 37, 14, tzinfo=datetime.timezone.utc), 'time_taken': 1539526.0, 'time_delta': '17 days, 19:38:46', 'additions': 31, 'deletions': 0, 'state': 'closed'}, {'id': 400135570, 'number': 410, 'closed': datetime.datetime(2020, 4, 28, 0, 31, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 7, 9, 2, 3, tzinfo=datetime.timezone.utc), 'time_taken': 1783742.0, 'time_delta': '20 days, 15:29:02', 'additions': 49, 'deletions': 0, 'state': 'closed'}, {'id': 380747347, 'number': 343, 'closed': datetime.datetime(2020, 3, 3, 16, 12, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 27, 10, 6, 43, tzinfo=datetime.timezone.utc), 'time_taken': 453942.0, 'time_delta': '5 days, 6:05:42', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 380738699, 'number': 342, 'closed': datetime.datetime(2020, 2, 27, 10, 3, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 27, 9, 48, 50, tzinfo=datetime.timezone.utc), 'time_taken': 854.0, 'time_delta': '0:14:14', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 380676539, 'number': 341, 'closed': datetime.datetime(2020, 3, 18, 23, 49, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 27, 7, 14, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1787666.0, 'time_delta': '20 days, 16:34:26', 'additions': 165, 'deletions': 6, 'state': 'closed'}]"
