pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1044186806,GSoC 2022: Multiweight integration,"**Context:**
[GSoc 2022 - Multiweight integration](https://hepsoftwarefoundation.org/gsoc/2022/proposal_MadAnalysis-mcweights.html)

**Description of the Change:**

This update extends the Cutflow and Histogram classes to hold data for n-weights and outputs the multidimensional histogram and cutflow data to SQLite3 format. 

This draft is currently fully functional for Both Cutflows and histograms, currently still working on building an interface for SQlite3 output format.

**Benefits:**

This implementation will output Cutflow and Histogram data for all weights in a single SQLite3 file which is long term stable(updates in software version will not change accessibility) and easily transferable. SQlite3 supports the core query commands of the SQL standard and users will be able to process the result data however they wish, the database file can be accessed independently of MADAnalysis5 and plotted in Excel or whichever plotting package or the user's choosing.

**Possible Drawbacks:**

Currently still working on an interface to detect if SQLite3 is available on the system and if not, give user the option to install it. MacOS includes SQLite3 by default, this issue will only apply to Linux users.

Existing analysis files need to update the SampleAnalyzer.cpp file:

in the Execute function: user needs to pass in the weigh map as shown in the example below. the WeightCollection object supports *, /, +, - operators. 

Example: user wants to multiply all weights by a double, say 1.2345, the user can do so by the following.

EvMultiweight*=1.2345;

```
MAdouble64 EvWeight;
WeightCollection EvMultiweight;  // create a WeightCollection object to hold multi weights
if(Configuration().IsNoEventWeight()) {
	  EvWeight=1.;
	  EvMultiweight=1.;
} else if(event.mc()->weight()!=0.) {
	  EvWeight=event.mc()->weight();
	  EvMultiweight=event.mc()->multiweights();
} else { return false;}
 
Manager()->InitializeForNewEvent(EvWeight, EvMultiweight.GetWeights()); //pass in weight map object in addition to single weight. 

````

The current implementation will run both the single and multi weight simultaneously and output independently (Existing SAF format is preserved and untouched, multi weight will output Outflow and Histogram SQLite3 files in their respective directories). The plan is to deprecate the single weight implementation once numerical validation is complete, the current implementation is a little cumbersome but is fully functional and easier to debug should their be discrepancies between the existing and new implementation.

**Related GitHub Issues:**
",False,125,https://api.github.com/repos/MadAnalysis/madanalysis5/pulls/125,https://github.com/MadAnalysis/madanalysis5/pull/125,open,1778,83,42,57,0,18,1,0,[{'name': ':gear:enhancement'}],2022-09-01 20:14:39+00:00,,0.0,,"[{'comment_id': 984554856, 'comment_body': ""Could you eliminate the use of compiler flags, please? You can create a base class, and the interface can be inherited from this base class. By doing that, you can call the base class from anywhere and if SQLite does not exist, that wouldn't matter since the base class won't be using SQLite, but the interface would and then if SQLite exists, you can load the interface. For an example, please see [this module](https://github.com/MadAnalysis/madanalysis5/blob/main/tools/SampleAnalyzer/Commons/Base/ClusterAlgoBase.h). This is the base class for fastjet where fastjet is nowhere to be found so compiling this will not break the program. Then if you check [here](https://github.com/MadAnalysis/madanalysis5/tree/main/tools/SampleAnalyzer/Interfaces/fastjet) you will see that everything regarding fastjet is dealt with in these files. Please check the main repository for these examples since we had to change this in the substructure branch to include different toolsets. Any addition to the compilation process will make the program interpretability harder for the user, so everything should be dealt with in the background."", 'comment_created': datetime.datetime(2022, 9, 30, 12, 45, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jackaraz', 'type': 'User'}, {'comment_id': 984556848, 'comment_body': 'Please extend the documentation in this file. A new developer should be able to take over your work and continue implementing new tools.', 'comment_created': datetime.datetime(2022, 9, 30, 12, 48, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jackaraz', 'type': 'User'}, {'comment_id': 984564819, 'comment_body': '```suggestion\r\n```\r\nThis is not necessary; setting it in `ArchitectureInfo` is sufficient. ', 'comment_created': datetime.datetime(2022, 9, 30, 12, 57, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jackaraz', 'type': 'User'}, {'comment_id': 984565336, 'comment_body': '```suggestion\r\n```\r\nThis is not necessary; setting it in `ArchitectureInfo` is sufficient. ', 'comment_created': datetime.datetime(2022, 9, 30, 12, 57, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jackaraz', 'type': 'User'}, {'comment_id': 984568109, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2022, 9, 30, 13, 1, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jackaraz', 'type': 'User'}, {'comment_id': 984572054, 'comment_body': ""```suggestion\r\n            file.write('LIBFLAGS += -lsqlite_for_ma5\\n')\r\n```\r\nlets keep `has_sqlite` option for analysis and `has_sqlite_lib` for compiling the interface. Analysis should not be directly compiled with sqlite."", 'comment_created': datetime.datetime(2022, 9, 30, 13, 5, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jackaraz', 'type': 'User'}, {'comment_id': 984577810, 'comment_body': ""You don't have a `test_sqlite` instance; why there is such a condition?"", 'comment_created': datetime.datetime(2022, 9, 30, 13, 12, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jackaraz', 'type': 'User'}, {'comment_id': 984580094, 'comment_body': '```suggestion\r\n```\r\nSee the comments above.', 'comment_created': datetime.datetime(2022, 9, 30, 13, 14, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jackaraz', 'type': 'User'}, {'comment_id': 984581152, 'comment_body': ""```suggestion\r\n```\r\nYou don't have `test_sqlite`."", 'comment_created': datetime.datetime(2022, 9, 30, 13, 16, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jackaraz', 'type': 'User'}, {'comment_id': 984589607, 'comment_body': '```suggestion\r\n```\r\nThis will create a problem please create a base for SQLite and call that base here. (see other comments for details)', 'comment_created': datetime.datetime(2022, 9, 30, 13, 24, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jackaraz', 'type': 'User'}, {'comment_id': 984590410, 'comment_body': '```suggestion\r\n        options.has_sqlite_lib     = self.archi_info.has_sqlite3\r\n```', 'comment_created': datetime.datetime(2022, 9, 30, 13, 25, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jackaraz', 'type': 'User'}, {'comment_id': 984592145, 'comment_body': '```suggestion\r\n\r\n        # Flag for SQlite3\r\n        self.has_sqlite3        = False\r\n       \r\n```', 'comment_created': datetime.datetime(2022, 9, 30, 13, 27, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jackaraz', 'type': 'User'}, {'comment_id': 984593592, 'comment_body': 'Also, please change the name of the folder to `sqlite` in the `Makefile` you are writing the folder its looking as follows\r\n```\r\n# Files\r\nSRCS  = $(wildcard sqlite/*.cpp)\r\nHDRS  = $(wildcard sqlite/*.h)\r\nOBJS  = $(SRCS:.cpp=.o)\r\n```', 'comment_created': datetime.datetime(2022, 9, 30, 13, 28, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jackaraz', 'type': 'User'}, {'comment_id': 984597268, 'comment_body': 'The beginning of the `madanalysis5/tools/SampleAnalyzer/Interfaces/Makefile_sqlite` should look like this:\r\n\r\n```\r\n# Compilers\r\nCXX = g++\r\n\r\n# C++ Compilation options\r\nCXXFLAGS  = -Wall -std=c++11 -O3 -fPIC -I$(MA5_BASE)/tools/\r\n\r\n# Linking options\r\nLIBFLAGS += -l sqlite3\r\n\r\n# Files\r\nSRCS  = $(wildcard sqlite/*.cpp)\r\nHDRS  = $(wildcard sqlite/*.h)\r\nOBJS  = $(SRCS:.cpp=.o)\r\n\r\n# Name of the library\r\nLIBRARY = libsqlite_for_ma5.so\r\n```\r\nThis is, ofc, assuming that the SQLite is installed globally; one needs to take care of the library path in case of non-global installations.', 'comment_created': datetime.datetime(2022, 9, 30, 13, 32, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jackaraz', 'type': 'User'}, {'comment_id': 1143177129, 'comment_body': 'This file should not be here!', 'comment_created': datetime.datetime(2023, 3, 21, 10, 34, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jackaraz', 'type': 'User'}, {'comment_id': 1143181250, 'comment_body': 'Database Manager is not a good naming here indicates extreme general structure. Please create two dedicated classes for cutflow and histogramming. Current structure does not look expandable i.e. we might want to use sqlite for completely different thing than just writing histograms and curflows so dedicated code structures would be ideal. Additionally this piece of code needs bit of documentation so please add a README.md file here explaining how to read curflow and histo file generated by this file through python.', 'comment_created': datetime.datetime(2023, 3, 21, 10, 38, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jackaraz', 'type': 'User'}, {'comment_id': 1143187518, 'comment_body': 'please also add\r\n```if importlib.util.find_spec(""sqlite3"") is None: ...```\r\nsince one might have weird specification with cpp headers defined but python files missing etc.', 'comment_created': datetime.datetime(2023, 3, 21, 10, 43, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jackaraz', 'type': 'User'}, {'comment_id': 1143276742, 'comment_body': ""This is not backwards compatible; it breaks all the codes developed in the past! Please split this into two as follows;\r\n\r\n```cpp\r\n/// Initializing the new event with a single weight\r\nvoid InitializeForNewEvent(const MAfloat64 &weight);\r\n\r\n/// Initializing the new event with multi-weight\r\nvoid InitializeForNewEvent(const std::map<MAuint32, MAfloat64> &multiweight);\r\n```\r\n\r\nThis way, we won't need to modify old implementations individually. You can test old implementations by using the `install PADForSFS` command, which will download a set of implementation codes in `tools/PADForSFS/Build/SampleAnalyzer/User/Analyzer`, and you can see which functions can not be changed. All those codes have to work."", 'comment_created': datetime.datetime(2023, 3, 21, 12, 7, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jackaraz', 'type': 'User'}]","[{'commit_sha': 'b4bdd79c9520724a663440c1bf6ab90bb120e401', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd62b55e22e98551902b56ae11f214cdadd4822b8', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20a2e6c3c9e5426765c9c749e1e6113136bfffce', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b68fbe738856c0d0836cc6b614893b1bd144e21', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fecbffcf5d88fbddeb4f971e249394b61987ea3e', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8451685eaa9dea1e9d3c529009fc4024c154b82d', 'committer_username': 'jackaraz', 'committer_name': 'Jack Y. Araz', 'committer_email': 'jackaraz@jlab.org', 'commit_date': datetime.datetime(2016, 4, 15, 16, 48, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea1789b0dd862108808bc4ba2fd5ed67c701e965', 'committer_username': 'jackaraz', 'committer_name': 'Jack Y. Araz', 'committer_email': 'jackaraz@jlab.org', 'commit_date': datetime.datetime(2016, 4, 15, 16, 48, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'beb3b7aee59dd8c01ba0becb668fb0fc303c6806', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f52721e95edb5062aa7ccc375814319ab2b302e', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '855248088e7c3eb5a8cf72db864d3e462eae88a5', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1797b340550bdb14164c06ae789c0765b0658e3', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01cb86af9757f0d85a8d5dac51638cdb9f5907f5', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac6d7977aa2670301c1c812a148a371c6bcb1c20', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fad5125796fde05c83342abedcd4f26035ba52fb', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f39ceb6762d2b5bc6149a207a44ea2b1407b8ae5', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48eac29081cef2b4933b11d54ed76ae1db5b1458', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b65998610ce2327790e30050b98fc5baa24d8098', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e3a36c0c80ca819b090ec8f89a4bf8935ee02de', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '922ece85508aede8d947a630a14b2b8dc89b9ccc', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e39fd2c52a400880e3f808bf13af8c62bebb92b', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a3b4d7d5251c3de3610dcee75c41722f67dbbb2', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2882fc5fcda5336025019e5546909e102e700096', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b879e0f8c600b2c95d726a122a925528d0fdaaf', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c37c293bebb8f536cf774c5555afc9f6aeef329d', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd48cae3fc3a97103dec35f9e8ffb04bbadbf25da', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b7b8a7e3776fe5f008b6440ed58973ef74d9b47', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '698ea225230192609132a16926832fad7dd00ca9', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc1d3bd1bab5fa122f74a8f611fc96d8cdc49513', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e5abe030a10b4fb038eba145cc526944f4d9d56', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3777adb350af68b5aa88eab28fa5011c6616936b', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b393229ed89ca84ffc41c5d74ac63e8b698431a9', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c505e01cf80a9db67730cc5206421f83c2a7b741', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c22841df3123fdb382db90dfd85b7a3c5985428', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '430bf6311223101c46349db12d4b3fedc8f211f3', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d94e2daf2a53c062f76425a82f0d04b8f978cf6', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af5fb18af3621c846d7be9d239680e1c9840bdf1', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '274e0d94328cdac880c0ee4fd4ae43b6017ef850', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ce8e891daed11261b338dd78e3a4fd2d537ea67', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '777deadfac1dc47cc01d48ef3726f719de21ccc4', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d4762d3be73dc361fd6352cca5a80010f0adbf6', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7198756331f1c857de292a7541c6a93f82a02e2', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4aebe613f7a0d3e5777ed5856dc3109c64d2cd46', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63b9f373e894ba90b3459da978efced088a1e073', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc20d21985744579b5fe71609aad8247eb575cec', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d326ee97864720f41f8e1b2791e47b99cc72b11', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd71e17b6446f8515bc236e374cc4d7e3dff3974b', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '624a974ff7877aac5da268da423ba5320c73c6e3', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d0d1b7fc04e70b5c989a56cf27f987597e778ec', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be33465bdf9c734989b6e56197278bd6d4281847', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a22ffc0bb8538f90188271ab285323c1a8ce094e', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93318488b42d79393d3e1c611d271db2782b1e08', 'committer_username': 'jackaraz', 'committer_name': 'Jack Y. Araz', 'committer_email': 'jackaraz@jlab.org', 'commit_date': datetime.datetime(2016, 4, 15, 16, 48, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '594af5de1a8a485559b0d85be13f0bae7c7ef4fa', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7211feac90e99997a2511c5cde7db0299b5616e5', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faee6ffcd4e4530d41026d0a0e7b1a7ad1e059ea', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '984ec51285cedd43b1f89b182e323edd645c5f48', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4619ce96a5bf38bd385cabdd2b5356fac7d3d22', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46c7292388f5496916771ff8790792f3c48fb8be', 'committer_username': 'kfan326', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 3, 49, 18, tzinfo=datetime.timezone.utc)}]",,25071468,,User,,10,,1,0

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
445622664,madanalysis5,MadAnalysis/madanalysis5,Python,17,21,4,13,1307,25,7,8,"[{'id': 1044186806, 'number': 125, 'closed': None, 'created': datetime.datetime(2022, 9, 1, 20, 14, 39, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1778, 'deletions': 83, 'state': 'open'}, {'id': 1006572505, 'number': 114, 'closed': datetime.datetime(2022, 7, 24, 16, 7, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 24, 15, 52, 31, tzinfo=datetime.timezone.utc), 'time_taken': 897.0, 'time_delta': '0:14:57', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 1006384407, 'number': 113, 'closed': datetime.datetime(2022, 7, 25, 8, 48, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 23, 16, 43, 35, tzinfo=datetime.timezone.utc), 'time_taken': 144289.0, 'time_delta': '1 day, 16:04:49', 'additions': 13, 'deletions': 2, 'state': 'closed'}, {'id': 949951810, 'number': 83, 'closed': datetime.datetime(2022, 5, 28, 7, 3, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 28, 7, 2, 19, tzinfo=datetime.timezone.utc), 'time_taken': 42.0, 'time_delta': '0:00:42', 'additions': 6979, 'deletions': 2187, 'state': 'closed'}]"
