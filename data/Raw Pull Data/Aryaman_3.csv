pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1276954760,[fix] Fixed docker-openwisp installation,"This PR fixes:

#### Containers

- `openwisp-freeradius`
- `openwisp-postifix`
- `openwisp-nginx`
- `openwisp-dashboard` (mainly autocomplete filter errors)

#### Others

- Docker tests and QA checks


![Screenshot from 2023-03-15 18-30-50](https://user-images.githubusercontent.com/56113566/225316451-ad627c75-ea4c-4847-9eb2-7d7c6cd0bbb3.png)

![Screenshot from 2023-03-15 17-01-04](https://user-images.githubusercontent.com/56113566/225315644-98208f3a-9224-4033-8f4e-5a98255fb1db.png)",True,271,https://api.github.com/repos/openwisp/docker-openwisp/pulls/271,https://github.com/openwisp/docker-openwisp/pull/271,closed,66,42,9,9,0,4,0,1,[],2023-03-15 14:28:32+00:00,2023-03-16 12:06:44+00:00,77892.0,21:38:12,"[{'comment_id': 1137837309, 'comment_body': 'why was the pinning removed here?', 'comment_created': datetime.datetime(2023, 3, 15, 22, 28, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1137838337, 'comment_body': ""because apline is publishing new tzdata packages and the old ones are not available anymore (I suggested that)\r\n\r\n(and timezone updates normally don't break the system)"", 'comment_created': datetime.datetime(2023, 3, 15, 22, 30, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Bixilon', 'type': 'User'}, {'comment_id': 1138308506, 'comment_body': ""You're right, @Bixilon. The package is no longer available in `Alpine 3.0.26` (https://github.com/dotnet/dotnet-docker/issues/1366). If we really want to use a specific package, we can choose one from the available[ Alpine Linux packages](https://pkgs.alpinelinux.org/packages?name=tzdata&branch=v3.17&repo=&arch=&maintainer=).\r\n\r\n@nemesisdesign By the way, we don't actually need to specify a package when using the Alpine Linux base image, since it determines the package versions based on the version of Alpine Linux. (Please see: https://superuser.com/a/1755883).\r\n"", 'comment_created': datetime.datetime(2023, 3, 16, 8, 48, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1138344512, 'comment_body': ""That was not what I meant. I mena, that (with the same version of alpine). I am not using alpine often, but as far as I have seen (here), the tzdata package version got incremented (e.g. from `d` to `e`) withing the same version alpine. That broke the build after a while. \r\n\r\nI think we should pin dependencies (it is always good for reproducible builds and nothing should break), but some packages (like `tzdata`) will never break the system within the same version of alpine (and probably not even when updating alpine). We don't explicitly depend on that package (I mean we don't use their apis in a way, where it could break), it is more like a general thing to have. imho we don't need to pin such dependencies, we only might miss fixes for security holes, because of manual updating. "", 'comment_created': datetime.datetime(2023, 3, 16, 9, 16, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Bixilon', 'type': 'User'}]","[{'commit_sha': '71e1d22031b5ac2917bfbffbb2d06a052aef68b6', 'committer_username': 'Bixilon', 'committer_name': 'Moritz Zwerger', 'committer_email': 'bixilon@bixilon.de', 'commit_date': datetime.datetime(2017, 3, 7, 18, 51, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9d3c458ba77fe3a684e4f33c21991fd9ae3f245', 'committer_username': 'Bixilon', 'committer_name': 'Moritz Zwerger', 'committer_email': 'bixilon@bixilon.de', 'commit_date': datetime.datetime(2017, 3, 7, 18, 51, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f56298524d870c9e1e7587fa2a77236356ce8bf0', 'committer_username': 'Bixilon', 'committer_name': 'Moritz Zwerger', 'committer_email': 'bixilon@bixilon.de', 'commit_date': datetime.datetime(2017, 3, 7, 18, 51, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd136870a12b4125b010f3e43c20a1420b1085c9d', 'committer_username': 'Bixilon', 'committer_name': 'Moritz Zwerger', 'committer_email': 'bixilon@bixilon.de', 'commit_date': datetime.datetime(2017, 3, 7, 18, 51, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56ece7029a5f853b87fcf4d563ac8da1534f5b0c', 'committer_username': 'Bixilon', 'committer_name': 'Moritz Zwerger', 'committer_email': 'bixilon@bixilon.de', 'commit_date': datetime.datetime(2017, 3, 7, 18, 51, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39a0a0b64b017ecc153e8d64283d448b7c25deb4', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16a786db0b3b0415769979a6fdaae3e322342585', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13f3bb5ccb0947f1afa2ac09f48b91a20a4d9202', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cd93612e95b9ca14e9417f08f71523e2fe426aa', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}]",Aryaman,56113566,,User,,92,,40,330
1370531346,[feature] Added ZeroTier backend #208,"#### Prerequisites:

1. Install [Zerotier](https://www.zerotier.com/download/)

2. Install [Ztncui - Web Interface](https://key-networks.com/ztncui/)

3. Get your Zerotier Service API token `sudo cat /var/lib/zerotier-one/authtoken.secret`

#### Tested with openwisp-controller

- **Prototype Branch**:  https://github.com/openwisp/openwisp-controller/tree/zerotier-prototype

https://github.com/openwisp/netjsonconfig/assets/56113566/5787c6a8-1cd0-4d00-8d7c-a118252bed60

**Todos**

- [x] Improve and extend the existing ZeroTier backend schema using the OpenAPI specification for Self-hosted ZeroTier controllers (https://docs.zerotier.com/service/v1/).

Closes #208",True,272,https://api.github.com/repos/openwisp/netjsonconfig/pulls/272,https://github.com/openwisp/netjsonconfig/pull/272,closed,1549,1,17,11,1,30,1,1,[{'name': 'enhancement'}],2023-05-30 13:59:27+00:00,2023-06-16 15:42:33+00:00,1474986.0,"17 days, 1:43:06","[{'comment_id': 1218626183, 'comment_body': 'never use a mutable structure as default argument, read more about this here: https://florimond.dev/en/posts/2018/08/python-mutable-defaults-are-the-source-of-all-evil/', 'comment_created': datetime.datetime(2023, 6, 5, 21, 43, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1218626790, 'comment_body': 'what is this example thing?', 'comment_created': datetime.datetime(2023, 6, 5, 21, 44, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1218627993, 'comment_body': 'why do we need to deepcopy the base schema and modify some properties below here? Is the base schema used anywhere else on its own without these modifications?', 'comment_created': datetime.datetime(2023, 6, 5, 21, 46, 9, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1218628602, 'comment_body': 'why is the indentation off here?', 'comment_created': datetime.datetime(2023, 6, 5, 21, 47, 1, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1219306632, 'comment_body': 'noted!', 'comment_created': datetime.datetime(2023, 6, 6, 9, 47, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1219310233, 'comment_body': ""I think this property was copied from the OpenAPI schema. I'll remove it. :+1:"", 'comment_created': datetime.datetime(2023, 6, 6, 9, 49, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1219318249, 'comment_body': 'Although it is currently not in use, we will require modifications to the base schema for adding support for https://github.com/openwisp/netjsonconfig/issues/207. It may also be used in [this section](https://github.com/openwisp/netjsonconfig/blob/2e7d5485f64ac2ecfe06d7c2a297bffa15ff5d95/netjsonconfig/backends/openwrt/schema.py#L935-L956), similar to the `OpenVPN` implementation.\r\n', 'comment_created': datetime.datetime(2023, 6, 6, 9, 54, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1219321560, 'comment_body': 'I have updated it to use the `indent=4` value :+1:', 'comment_created': datetime.datetime(2023, 6, 6, 9, 56, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1222988887, 'comment_body': ""```suggestion\r\n        remove = remove or [False, 0, '']\r\n```\r\n\r\nThis is how it is done everywhere in the OpenWISP code. "", 'comment_created': datetime.datetime(2023, 6, 8, 12, 45, 47, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1222999656, 'comment_body': ""Good that you caught this issue in the existing code, but let's not mix work here (OpenVPN with ZeroTier). I have created a PR to fix this issue separately. \r\n\r\nhttps://github.com/openwisp/netjsonconfig/pull/275"", 'comment_created': datetime.datetime(2023, 6, 8, 12, 54, 17, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1223003022, 'comment_body': '  **TODO**: We need to implement these parsers like we did in OpenVPN. ', 'comment_created': datetime.datetime(2023, 6, 8, 12, 56, 45, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1223035023, 'comment_body': ""Why not `'.json`? "", 'comment_created': datetime.datetime(2023, 6, 8, 13, 20, 39, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1223039684, 'comment_body': '```suggestion\r\n    def auto_client(cls, server=None, **kwargs):\r\n        server = server or {}\r\n```', 'comment_created': datetime.datetime(2023, 6, 8, 13, 23, 59, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1223050116, 'comment_body': ""Let's only keep one configuration here. In a read world scenario, we won't be generating configuration for two networks simultaneously. \r\n\r\nIf you did this because other VPN backends also have similar test, then please point them out."", 'comment_created': datetime.datetime(2023, 6, 8, 13, 32, 32, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1223051454, 'comment_body': 'We will need to update these tests after implementing the parser. ', 'comment_created': datetime.datetime(2023, 6, 8, 13, 33, 43, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1226313860, 'comment_body': 'thanks :)', 'comment_created': datetime.datetime(2023, 6, 12, 8, 52, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1226317986, 'comment_body': 'done :+1: ', 'comment_created': datetime.datetime(2023, 6, 12, 8, 55, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1227935087, 'comment_body': 'Can you please explain why this change was needed? ', 'comment_created': datetime.datetime(2023, 6, 13, 10, 56, 31, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1227939368, 'comment_body': 'Can we use `json.loads` directly here? What are the drawbacks of doing that?', 'comment_created': datetime.datetime(2023, 6, 13, 11, 0, 30, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1228332287, 'comment_body': 'I have used [`json.loads` method](https://github.com/openwisp/netjsonconfig/pull/272/files#diff-4e782cb854b8f20ae055ed735e67603137d6014ed8a1f73f8ba00b7ca107a1baR39) after extracting a valid JSON string (i.e., after removing `vpn_pattern` and separating multiple zerotier text configurations). Otherwise, if we directly use `json.loads` without filtering, it will throw an error `json.decoder.JSONDecodeError: Extra data:` and parsing will fail.\r\n', 'comment_created': datetime.datetime(2023, 6, 13, 15, 30, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1228356119, 'comment_body': ""I have made this change because while rendering the [zerotier configuration, I included `(.json)` in the comment](https://github.com/openwisp/netjsonconfig/pull/272/files#diff-1ad7f38c2f702da652381ecfb5a3ddae744d893f0f84cf61ca6a7ba2e7c71bc8R2). This resulted in generating a zerotier configuration `tarfile` with the `.json.json` extension, as shown below:\r\n\r\n```bash\r\n(env) ➜  zerotier git:(issue-208/add-zerotier-backend) ✗ py -m unittest test_backend.TestBackend\r\n..[<TarInfo '9536600adf654321.json.json' at 0x7fa2dcb3ff40>, <TarInfo '9536600adf654322.json.json' at 0x7fa2dcb3fe80>]\r\n```\r\n\r\ntherefore to avoid this I have spilt `lines[0]` with `config_suffix`."", 'comment_created': datetime.datetime(2023, 6, 13, 15, 47, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1228658012, 'comment_body': 'I am a bit perplexed here, the point of the parse methods is to be able to read the native configuration format of the tool we are integrating. Can zerotier allow to download its configuration in JSON format?', 'comment_created': datetime.datetime(2023, 6, 13, 20, 24, 13, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1229402502, 'comment_body': 'It is possible to retrieve network configuration in JSON format using REST API endpoints. But, that would not include the comment there.', 'comment_created': datetime.datetime(2023, 6, 14, 10, 49, 16, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1229436028, 'comment_body': '@nemesisdesign, we can obtain a [dump of ZeroTier settings](https://pastebin.com/mA42045S) using the `zerotier-cli dump` command. However, unfortunately, this dump does not include the JSON network configuration from the **network controller**. Therefore, our only option is to retrieve the configuration either through the REST API or by directly accessing the copy stored in the `/var/lib/zerotier-one/controller.d/network` directory.', 'comment_created': datetime.datetime(2023, 6, 14, 11, 21, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1229730199, 'comment_body': ""ok, then we can go for getting the JSON from the REST API of zerotier, but the code must take into account that the comment won't be present, I think the parser should ignore any comment."", 'comment_created': datetime.datetime(2023, 6, 14, 14, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1231088206, 'comment_body': 'Yes, the parser would [ignore any comment in the configuration](https://github.com/openwisp/netjsonconfig/pull/272/files#diff-4e782cb854b8f20ae055ed735e67603137d6014ed8a1f73f8ba00b7ca107a1baR33-R38).', 'comment_created': datetime.datetime(2023, 6, 15, 14, 16, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1231113115, 'comment_body': 'Are you suggesting that I should [remove the comment](https://github.com/openwisp/netjsonconfig/pull/272/files#diff-1ad7f38c2f702da652381ecfb5a3ddae744d893f0f84cf61ca6a7ba2e7c71bc8R2) from the ZeroTier template? @pandafy @nemesisdesign ', 'comment_created': datetime.datetime(2023, 6, 15, 14, 33, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1231130904, 'comment_body': 'Yes. The test should emulate real world scenarios. You can remove the comment similar tests. ', 'comment_created': datetime.datetime(2023, 6, 15, 14, 46, 41, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1231562402, 'comment_body': ""@Aryamanz29 can you make sure the parser can parse both the version with comments (ignore any comment) and the version without comments?\r\n\r\nSomething like this: https://stackoverflow.com/a/69022887 (I haven't tested it)."", 'comment_created': datetime.datetime(2023, 6, 15, 21, 41, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1232112801, 'comment_body': '@nemesisdesign Added in [`23f338f` (#272)](https://github.com/openwisp/netjsonconfig/pull/272/commits/23f338fac3330d33bb52ac485fca3c3bb89c2ad7)', 'comment_created': datetime.datetime(2023, 6, 16, 11, 13, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}]","[{'commit_sha': '3238df8837e0b9d457c02914810d0cbfba0fda81', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ec95168523e7e67e441db93b0a90783236f8217', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bf46e19a74981b4c1242185fd7e0bca7bc8484f', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8678a0f18e2b88593059b503b14d5eee20c2f672', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0cec60a589503cd0ac7e31d873f45f6886b9a42', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '231a857bb489293bf4c6c05d53e79c2086fd6650', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cce6f7e5fd7c3f5366558a7196e8523800ed4e1b', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00213e64e60a412832fc0b9b28f4887c70fb7c7f', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd313be248b22ad760b1bacdb17f66a437c742914', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23f338fac3330d33bb52ac485fca3c3bb89c2ad7', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ef65a8160d6add4ab2b0289dd392d1faafbe7c5', 'committer_username': 'nemesifier', 'committer_name': 'Federico Capoano', 'committer_email': 'f.capoano@openwisp.io', 'commit_date': datetime.datetime(2011, 6, 9, 22, 30, 31, tzinfo=datetime.timezone.utc)}]",Aryaman,56113566,,User,,92,,40,330
1398125077,[change] Added the required default values to the ZeroTier schema,"There are certain properties in the ZeroTier schema that require default values. For example, if we don't provide a default value for the `multicastLimit` property, it will be set to `0` during an API call, which disables IPv4 communication for the network.

_**Note:** This update will resolve the **SSH/ping** issues we encountered during the last weekly meeting in the demo_",True,278,https://api.github.com/repos/openwisp/netjsonconfig/pulls/278,https://github.com/openwisp/netjsonconfig/pull/278,closed,30,0,1,2,0,2,1,1,[{'name': 'enhancement'}],2023-06-19 12:14:48+00:00,2023-06-20 14:03:01+00:00,92893.0,"1 day, 1:48:13","[{'comment_id': 1234391731, 'comment_body': ""What is this `etherType`?\r\nGiven how confusing it looks, I'd be in favor of adding documentation link in the code itself as well! Wdyt?"", 'comment_created': datetime.datetime(2023, 6, 19, 19, 23, 14, tzinfo=datetime.timezone.utc), 'commenter': 'atb00ker', 'type': 'User'}, {'comment_id': 1234978913, 'comment_body': 'Thanks for pointing it out @atb00ker!\r\nI will include the [link to the flow rules engine](https://docs.zerotier.com/zerotier/rules/) in the following section of the code and update the commit description as well.\r\n', 'comment_created': datetime.datetime(2023, 6, 20, 9, 12, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}]","[{'commit_sha': '865a71c3964f9bcfed5c85f15903efde00f4e5ac', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38a460cf49682b4a9e6392004b614ec38aa55792', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}]",Aryaman,56113566,,User,,92,,40,330
1384342983,[feature] Added support for ZeroTier to the OpenWRT backend #207,"**Depends on**:

- [x] https://github.com/openwisp/netjsonconfig/pull/272
- [x] https://github.com/openwisp/netjsonconfig/pull/278

#### Prerequisites:

1. Install [Zerotier](https://www.zerotier.com/download/)

2. Install [Ztncui - Web Interface](https://key-networks.com/ztncui/)

3. Get your Zerotier Service API token `sudo cat /var/lib/zerotier-one/authtoken.secret`

#### Tested with openwisp-controller

- **Prototype Branch**:  https://github.com/openwisp/openwisp-controller/tree/zerotier-prototype

https://github.com/openwisp/netjsonconfig/assets/56113566/886f0a65-8263-499e-ba33-7185f29b63fd

Closes #207",True,274,https://api.github.com/repos/openwisp/netjsonconfig/pulls/274,https://github.com/openwisp/netjsonconfig/pull/274,closed,570,232,12,27,1,13,1,1,[{'name': 'enhancement'}],2023-06-08 12:10:47+00:00,2023-07-27 18:08:44+00:00,4255077.0,"49 days, 5:57:57","[{'comment_id': 1228405204, 'comment_body': 'Please move the OpenWrt related configurations to `openwrt/schema.py`', 'comment_created': datetime.datetime(2023, 6, 13, 16, 26, 44, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1234398023, 'comment_body': 'Should this have a default?', 'comment_created': datetime.datetime(2023, 6, 19, 19, 27, 13, tzinfo=datetime.timezone.utc), 'commenter': 'atb00ker', 'type': 'User'}, {'comment_id': 1234964386, 'comment_body': '@atb00ker  According to the [sample configuration](https://github.com/mwarning/zerotier-openwrt/blob/master/zerotier/files/etc/config/zerotier) provided by the [OpenWrt ZeroTier package](https://github.com/mwarning/zerotier-openwrt), this property falls under advanced configuration and does not have a default value. Therefore, no default value is provided here. Please refer to the following resources for more information:\r\n\r\n- [Sample Configuration File](https://github.com/mwarning/zerotier-openwrt/blob/master/zerotier/files/etc/config/zerotier): This file contains the necessary configurations for ZeroTier, including the `enabled` setting, a list of networks to join, and the `secret` (which can be automatically generated using [`zerotier-idtool` ](https://github.com/zerotier/ZeroTierOne/blob/dev/doc/zerotier-idtool.1.md) and is not required).\r\n- [ZeroTier OpenWrt Wiki Page](https://github.com/mwarning/zerotier-openwrt/wiki#configure-zerotier-on-your-openwrt-router-using-uci): This wiki page provides guidance on configuring ZeroTier on your OpenWrt router using UCI.\r\n- [init.d Script](https://github.com/mwarning/zerotier-openwrt/blob/master/zerotier/files/etc/init.d/zerotier): This script is responsible for managing the initialization of ZeroTier.\r\n\r\n', 'comment_created': datetime.datetime(2023, 6, 20, 9, 0, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1235326892, 'comment_body': 'Can you point out where the ""join"" property is defined in the schema? I need to verify wether the schema enforces having at least 1 list member otherwise this code can break.', 'comment_created': datetime.datetime(2023, 6, 20, 14, 7, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1235328064, 'comment_body': ""What about a slightly more pythonic form?\r\n```suggestion\r\n        vpn['disabled'] = not vpn.pop('enabled', '0')\r\n```"", 'comment_created': datetime.datetime(2023, 6, 20, 14, 8, 19, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1246531383, 'comment_body': ""I attempted this change, but the test fails because '0' is a string in this context."", 'comment_created': datetime.datetime(2023, 6, 29, 12, 7, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1246541982, 'comment_body': ""Sure, I'm utilizing the [`id` array property](https://github.com/openwisp/netjsonconfig/pull/274/files#diff-cbba1cabcdaea2e99f955c45dfdde7328a4b83821a1d5780f8d0a22b66eb6bd1R951-R963) of Zerotier with a `minItem` value of 1.\r\n"", 'comment_created': datetime.datetime(2023, 6, 29, 12, 18, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1269309044, 'comment_body': '```suggestion \r\n                            ""description"": ""RFC4193 assigns each device a single IPv6 /128 address computed from the network ID and device address, and uses NDP emulation to make these addresses instantly resolvable without multicast."",  \r\n```\r\n\r\n', 'comment_created': datetime.datetime(2023, 7, 20, 11, 11, 25, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1269310174, 'comment_body': '```suggestion\r\n                            ""description"": ""6PLANE assigns each device a single IPv6 address within a fully routable /80 block and uses NDP emulation to “magically” route the entire /80 to its owner, allowing each device to assign up to 2^48 IPs without additional configuration. This is designed for use with Docker or on VM hosts."",\r\n```', 'comment_created': datetime.datetime(2023, 7, 20, 11, 12, 40, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1269316717, 'comment_body': '\r\nI would group ""Enable broadcast"" and ""Multicast Recipient Limit"" together as it is done in ZeroTier Central UI.\r\n\r\n![Screenshot from 2023-07-20 16-46-29](https://github.com/openwisp/netjsonconfig/assets/32094433/89d5d5ab-ad38-4d29-9a4c-1e2e9a6fdf94)\r\n\r\n', 'comment_created': datetime.datetime(2023, 7, 20, 11, 19, 45, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1269327611, 'comment_body': 'Why have you used `#noqa` here? We can split the description on multiple lines.\r\n\r\n```suggestion\r\n                            ""description"": (\r\n                                ""Whether RFC4193 addressing should be used for IPv6 ""\r\n                                "" assignment""\r\n\r\n                            ), \r\n```', 'comment_created': datetime.datetime(2023, 7, 20, 11, 29, 21, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1276331143, 'comment_body': 'I think you meant disabled here?', 'comment_created': datetime.datetime(2023, 7, 27, 14, 3, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1276585802, 'comment_body': ""You're right, I may have overlooked this, as I copied this section of code from the [OpenVPN implementation.](https://github.com/openwisp/netjsonconfig/blob/68681a12d77e7efd0a777b4bf9fe8aa3dbb4cce1/netjsonconfig/backends/openwrt/converters/openvpn.py#L8-L25) I have now updated the comment in both places. Thanks!"", 'comment_created': datetime.datetime(2023, 7, 27, 17, 8, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}]","[{'commit_sha': '116c0536fc4fca2ad677288ae1bd1d4983f97aa6', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62703341883fca8c18d5b4f57908b113c4e8c032', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c78e68b1526f6fb2fab6348245595467f012ce36', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b912d2e74c8f186b00145c6d0b4d4400d55584da', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eefe53d4f280088ead50cd7811e2f16fe63a64d8', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5673bc42c3ae7f67daab84ba8c3475322084c427', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5961be2e1b7f93cefa41e321850849b1501dc08c', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '125b897332d8b20eeb55baaf9f73eb373db8ed4e', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95668c7e10b1cbcc216e2c8997074b2959ab2718', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d13b5446e3ee382d4ad496a23375547deac4889', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51d97995d476b4bb7684eb51f56537f51846d2d9', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f98e26f83e1ceb5504bb15f7942c7d65277afae3', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0a83a16c27799057a2063f1aba827a077fe63ad', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21ea65e2d0488e8968c95dc56911f6a16816509c', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14de6645a4f286b1b87f86a9254b6bd1ce28c482', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abf625f3a91b74137a9e6dda144e2d5f03651047', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c4a3c330fbd68c7544bcf95de6610ab53412cd1', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86b84fb6b893c2777adf727e81287430944e1b93', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '580e387057f186cbc6ce9433df3ee1a14d675a50', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '474d92831422c7cfe544326ce8d6b9d33af78420', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c723c0a142b1b593f1033998742008819cccd00', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10eba36ee250a0355785aa1a74a2ac091962b53e', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0709ad935995b3db47b04288e4cd5bef1b15245', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70273e634fe4ebab8b4f99ed6f8b6c9eef6dd22f', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd965e8e879b3437d7da9be69bb8a6f0a28354733', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1c39a678c2c6df21a6ee23cda5da43811206424', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db1a2161ce5844418065febe47d2f63751fdd196', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}]",Aryaman,56113566,,User,,92,,40,330
1456172403,[fix] Fixed zerotier openwrt configuration for multiple servers,,True,283,https://api.github.com/repos/openwisp/netjsonconfig/pulls/283,https://github.com/openwisp/netjsonconfig/pull/283,closed,146,17,6,4,0,0,0,1,[],2023-07-31 12:38:20+00:00,2023-08-09 08:45:48+00:00,763648.0,"8 days, 20:07:28",[],"[{'commit_sha': 'd4090f0569407d20d896591778c5ff8749104d7f', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '254de1a32a7890e4a49024f139dcfed5495a626e', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '266e22b2df056dd9d79a9378e6d653a71b7eac4b', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '726f2eb183d8c9bd35de10c9754af46ec3e8f5e7', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}]",Aryaman,56113566,,User,,92,,40,330
1473341534,[feature] Added support for custom zt ifname #284 ,Closes #284,True,285,https://api.github.com/repos/openwisp/netjsonconfig/pulls/285,https://github.com/openwisp/netjsonconfig/pull/285,closed,210,95,7,11,3,23,1,1,[{'name': 'enhancement'}],2023-08-13 11:22:46+00:00,2023-09-22 15:37:58+00:00,3471312.0,"40 days, 4:15:12","[{'comment_id': 1296151723, 'comment_body': 'Use `ifname` instead of `zt_ifname`', 'comment_created': datetime.datetime(2023, 8, 16, 16, 18, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1296153575, 'comment_body': ""Don't let user to define this options"", 'comment_created': datetime.datetime(2023, 8, 16, 16, 20, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1296153979, 'comment_body': 'change this to `/etc/ow_zerotier_extra`', 'comment_created': datetime.datetime(2023, 8, 16, 16, 20, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1296160813, 'comment_body': 'If `ifname` is present then use default values for these options otherwise overwrite those params', 'comment_created': datetime.datetime(2023, 8, 16, 16, 26, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1298614163, 'comment_body': 'Why are you using the wording ""zt"" here?\r\nI wonder how is the user supposed to know what we are meaning here?\r\nI think we can find better naming. I also wonder if it\'s worth it to show two examples, I believe in most cases the user will want to set a predictable name. What do you think?\r\n\r\n', 'comment_created': datetime.datetime(2023, 8, 18, 15, 57, 20, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1298620384, 'comment_body': 'BTW, why don\'t we add a schema property for this?\r\nIf the property is present we can automatically generate the other config options as you\'re doing here, with the difference that these values will be hidden to the user in the template, they will just see ""ifname"". Wouldn\'t this be better?\r\nLet me know if my request is clear.', 'comment_created': datetime.datetime(2023, 8, 18, 16, 4, 9, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1299955746, 'comment_body': ""Certainly, we can enhance the user experience by introducing an `ifname` property to the schema while simplifying the removal of other advanced configuration options.\r\n\r\nHere's my proposed approach:\r\n\r\n1. To accommodate the custom ZeroTier interface names associated with each ZeroTier network a device belongs to, we can modify **schema.py**. Specifically, we can add the `nwid_ifname` property, which will be an array of objects containing `nwid` and `ifname` for each ZeroTier network. Additionally, we can ensure that the `maxLength` property is set to `16` for `nwid` and `10` for `ifname`, making both properties required for this object.\r\n\r\n2. In accordance with your above review suggestion, we can display only the main configuration options in the templates while concealing the advanced ones.\r\n\r\n**Visible options:**\r\n- `name`\r\n- `nwid_ifname`\r\n- `identity_secret`\r\n- `config_path` (This can be customized by users in VPN client template)\r\n\r\n**Hidden options:**\r\n- `config_path`\r\n- `copy_config_path`\r\n- ZeroTier interface file object located at **/etc/ow_zerotier_extra/devicemap**\r\n\r\n3. To implement the above changes, it will be necessary to update the code in `openwrt/converters/zerotier.py`.\r\n\r\n### RESULTS:\r\n\r\n#### With single `nwid_ifname` object\r\n\r\n![Screenshot from 2023-08-21 16-18-12](https://github.com/openwisp/netjsonconfig/assets/56113566/01e24f89-9832-417a-be7a-d39753c3a647)\r\n\r\n![Screenshot from 2023-08-21 16-18-27](https://github.com/openwisp/netjsonconfig/assets/56113566/0f080d53-ea68-460b-893d-2111612fab47)\r\n\r\n#### With multiple `nwid_ifname` objects\r\n\r\n![Screenshot from 2023-08-21 16-24-55](https://github.com/openwisp/netjsonconfig/assets/56113566/26cbf14d-af75-4c50-a39d-01df0943b3e6)\r\n\r\n![Screenshot from 2023-08-21 16-19-12](https://github.com/openwisp/netjsonconfig/assets/56113566/7d1d4ef1-0cae-45ac-845f-006ff7ec8423)\r\n\r\n\r\n\r\n"", 'comment_created': datetime.datetime(2023, 8, 21, 10, 59, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1299956765, 'comment_body': ""Alright, I'll modify it to use `zerotier` for better clarity.\r\nAs for the second example (i.e: the one without a custom ZeroTier interface), we can safely remove it. As in our ZeroTier integration, we enable OpenWISP to automatically determine the ZeroTier interface name for each network :+1: \r\n"", 'comment_created': datetime.datetime(2023, 8, 21, 11, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1307629163, 'comment_body': 'why is this `/etc/ow_zerotier/devicemap` and above is `/etc/openwisp/zerotier`?', 'comment_created': datetime.datetime(2023, 8, 28, 16, 10, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1307633513, 'comment_body': ""I am not a fan of this name, can we find a more descriptive name?\r\nWhy don't we simply call this `networks`?"", 'comment_created': datetime.datetime(2023, 8, 28, 16, 13, 51, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1307638937, 'comment_body': 'why is `zerotier interface name` highlighted as code here?', 'comment_created': datetime.datetime(2023, 8, 28, 16, 17, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1307640563, 'comment_body': 'why is this being removed?', 'comment_created': datetime.datetime(2023, 8, 28, 16, 18, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1307669498, 'comment_body': 'Why are port and local_conf options removed? 🤔 ', 'comment_created': datetime.datetime(2023, 8, 28, 16, 44, 6, tzinfo=datetime.timezone.utc), 'commenter': 'atb00ker', 'type': 'User'}, {'comment_id': 1308478521, 'comment_body': 'I was testing [these changes](https://github.com/openwisp/netjsonconfig/pull/285#discussion_r1299955746) and the [JSON schema hidden property](https://github.com/openwisp/netjsonconfig/blob/issue-284/add-support-for-zt-ifname/netjsonconfig/backends/openwrt/schema.py#L1069-L1090). Accidentally, I pushed my local changes. Thank you for pointing it out. I have now reverted these changes. Thanks!', 'comment_created': datetime.datetime(2023, 8, 29, 9, 23, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1308479085, 'comment_body': 'I was testing [these changes](https://github.com/openwisp/netjsonconfig/pull/285#discussion_r1299955746) and the [JSON schema hidden property](https://github.com/openwisp/netjsonconfig/blob/issue-284/add-support-for-zt-ifname/netjsonconfig/backends/openwrt/schema.py#L1069-L1090). Accidentally, I pushed my local changes. Thank you for pointing it out. I have now reverted these changes. Thanks!', 'comment_created': datetime.datetime(2023, 8, 29, 9, 23, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1308479636, 'comment_body': 'Fixed, thanks!', 'comment_created': datetime.datetime(2023, 8, 29, 9, 24, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1308481035, 'comment_body': 'Sure, that looks clean and is more descriptive.', 'comment_created': datetime.datetime(2023, 8, 29, 9, 25, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1308481386, 'comment_body': 'Fixed, thanks!', 'comment_created': datetime.datetime(2023, 8, 29, 9, 25, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1308786160, 'comment_body': ""This type of configuration must not go here, in /etc/config only UCI format should be stored.\r\nLet's use `/etc/openwisp/zerotier/`."", 'comment_created': datetime.datetime(2023, 8, 29, 13, 2, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1312517407, 'comment_body': 'Configuration variables are not a part of netjsonconfig, but openwisp-controller. I would set empty string here and point out the default zerotier behaviour, i.e. it would generate automatically. \r\n\r\nIt is okay to use it in the code, but in documentation we shall give examples such that netjsonconfig can be used independently from openwisp-controller. ', 'comment_created': datetime.datetime(2023, 9, 1, 4, 12, 8, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1312527674, 'comment_body': '@Aryamanz29 can you please point me to the test case that verifies the fallback `ifname` is used when the user does not provide the `ifname`?', 'comment_created': datetime.datetime(2023, 9, 1, 4, 30, 50, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1312934289, 'comment_body': 'It is not present currently, but I have added it in my most recent commit. Thanks!', 'comment_created': datetime.datetime(2023, 9, 1, 11, 55, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1312934723, 'comment_body': ""Sure, I'll change that, Thanks!"", 'comment_created': datetime.datetime(2023, 9, 1, 11, 55, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}]","[{'commit_sha': '6522826be0dfdcf5eac3d5d60083ae723e784878', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b152657557f395813ab0da7fe9a77943caabaf7', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8feb9f354abc648447ee23417da32358df8bb6b', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b226a66c8d3ba795e55fdb0a07bb6f81fd206f4b', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a07e093448824c115560701651a075fb4d1e72e8', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8071a50e8340b88861fe311dc82b87d0072712c5', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8a0e1e8c48673e8f8466d7c8dc1f2e6252febff', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75817ab44af4daa83f328d2d98ac14fdb54991ba', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa6200d820c9660bc80a0991c7d14b7ccce25c41', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00acef5afe4c5840e22c53e6306c6cc676ff2b43', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87f0018f6605b6f2445ebcf5ddb4704ce7ef7fb6', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}]",Aryaman,56113566,,User,,92,,40,330
1399445058,[feature] Added support for ZeroTier VPN backend,"**Depends on**:

- [x] https://github.com/openwisp/netjsonconfig/pull/274

Additionally, basic support has been added for managing ZeroTier networks through OpenWISP using the ZeroTier Service API

Closes #604",True,778,https://api.github.com/repos/openwisp/openwisp-controller/pulls/778,https://github.com/openwisp/openwisp-controller/pull/778,closed,1840,34,15,22,7,63,1,1,[{'name': 'enhancement'}],2023-06-20 08:35:37+00:00,2023-08-17 12:01:12+00:00,5023535.0,"58 days, 3:25:35","[{'comment_id': 1235100730, 'comment_body': 'This validation should be performed before `save()`. ', 'comment_created': datetime.datetime(2023, 6, 20, 11, 1, 49, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1235103355, 'comment_body': 'We want to allow OpenWISP to control IP assignment. Thus, it will be fine to show subnet and IP fields. ', 'comment_created': datetime.datetime(2023, 6, 20, 11, 4, 7, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1235106166, 'comment_body': 'We need to have error handling everywhere we make a request to the ZeroTier Controller API. We need to think about what happens when a request fails. ', 'comment_created': datetime.datetime(2023, 6, 20, 11, 6, 49, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1235156382, 'comment_body': ""We don't need to create a new migration file if we are only updating the help text for the field. You can edit the existing migration for this change. "", 'comment_created': datetime.datetime(2023, 6, 20, 11, 55, 1, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1235290374, 'comment_body': 'The API requests should be done in the background using a celery task, except for the ""create"" operation which requires synchronous operation for UX. ', 'comment_created': datetime.datetime(2023, 6, 20, 13, 43, 2, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1245259097, 'comment_body': 'What if the request times out? Will the code handle that? \r\n\r\nTest scenario: instead of `zerotier.openwisp.org` I typed `zerotier.openwisp.o` (typo). Will the code break in this scenario? We should consider that the request can fail for any reason. \r\n\r\nI think we should show a meaningful error message to the user, so they can make changes if necessary. \r\n\r\nE.g., if the request times out, we can report ""Unable to connect to the ZeroTier controller. Ensure, you are using correct hostname"". ', 'comment_created': datetime.datetime(2023, 6, 28, 13, 59, 29, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1245264931, 'comment_body': 'This is great. \r\n\r\nJust to improve UX, I would also set the ""required"" HTML attribute on the input field when zerotier is used. We are already using JS to hide/show certain field. We can also add this operation there. ', 'comment_created': datetime.datetime(2023, 6, 28, 14, 1, 51, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1245268887, 'comment_body': 'Can we move this logic to `update_vpn_server_configuration`? ', 'comment_created': datetime.datetime(2023, 6, 28, 14, 4, 50, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1245272519, 'comment_body': 'Is there a possibility that VPN server object is saved without `host` and `auth_token`?', 'comment_created': datetime.datetime(2023, 6, 28, 14, 6, 56, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1245274249, 'comment_body': 'Such things should be logged as an error. ', 'comment_created': datetime.datetime(2023, 6, 28, 14, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1245277545, 'comment_body': 'I think we should perform these operations with Retry. What do you think @nemesifier? ', 'comment_created': datetime.datetime(2023, 6, 28, 14, 9, 39, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1249753219, 'comment_body': '@pandafy I tried changing `vpn.js` but couldn\'t achieve the expected results because the `auth_token` field of the VPN is set to `blank=True`, allowing it to be empty or blank.\r\n\r\n```js\r\n// For Zerotier VPN backend\r\nif (backendValue.includes(\'zerotier\')) {\r\n    $(\'label[for=""id_auth_token""]\').parent().parent().show();\r\n    // Enhance the user experience by adding the required HTML attribute \r\n    // to the auth_token field when the zerotier backend is enabled.\r\n    $(\'label[for=""id_auth_token""]\').addClass(\'required\')\r\n    $(\'#id_auth_token\').prop(\'required\', true);\r\n} else {\r\n    $(\'#id_auth_token\').prop(\'required\', false);\r\n    $(\'label[for=""id_auth_token""]\').removeClass(\'required\')\r\n}\r\n```\r\n\r\nTherefore, I overrode the `clean()` method in the `VpnForm` to achieve the desired outcome.\r\n\r\n```python\r\ndef clean(self):\r\n    cleaned_data = super().clean()\r\n    backend = cleaned_data.get(\'backend\')\r\n    auth_token = cleaned_data.get(\'auth_token\')\r\n    if backend == app_settings.VPN_BACKENDS[3][0] and not auth_token:\r\n        self.add_error(\r\n            \'auth_token\', \'This field is required for the ZeroTier backend.\'\r\n        )\r\n\r\n    return cleaned_data\r\n\r\n```', 'comment_created': datetime.datetime(2023, 7, 2, 20, 27, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1249756951, 'comment_body': ""Not possible, I'll remove that. Thanks for pointing it out! :+1:"", 'comment_created': datetime.datetime(2023, 7, 2, 20, 34, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1249760185, 'comment_body': ""I tried to handle this scenario with the following code:\r\n\r\n```python\r\ndef _validate_host(self):\r\n    if self._is_backend_type('zerotier'):\r\n        try:\r\n            response = ZerotierService(self.host, self.auth_token).get_node_status()\r\n        except ConnectionError as err:\r\n            err_msg = f'Failed to connect to the ZeroTier controller, error: {err}'\r\n            raise ValidationError({'host': _(err_msg)})\r\n        if response.status_code != 200:\r\n            err_msg = (\r\n                f'Failed to connect to the ZeroTier controller, '\r\n                'please ensure you are using the correct username.\\n'\r\n                f'(error: {response.reason}, status code: {response.status_code})'\r\n            )\r\n            raise ValidationError({'host': _(err_msg)})\r\n        else:\r\n            self.node_id = response.json()['address']\r\n```"", 'comment_created': datetime.datetime(2023, 7, 2, 20, 40, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1249786608, 'comment_body': 'Yes, we can do that. However, I believe we can only move the `self._update_zerotier_server(config)` logic because when a new ZeroTier VPN server is created, we must perform the `save()` operation and set fields such as `network_id`. These fields are later used by `_update_zerotier_server()` to update VPN configurations.\r\n', 'comment_created': datetime.datetime(2023, 7, 2, 21, 19, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1267021407, 'comment_body': ""Let's  move these generic notification types to openwisp-notifications. "", 'comment_created': datetime.datetime(2023, 7, 18, 16, 23, 30, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1267033283, 'comment_body': 'Disable email notifications by default. ', 'comment_created': datetime.datetime(2023, 7, 18, 16, 33, 57, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1269351406, 'comment_body': 'The ""Return Early"" approach is generally considered a good practice. It also helps to avoid unnecessary indentations.\r\n\r\n```suggestion\r\n        if not (self._is_backend_type(\'zerotier\') and self.auth_token and self.host):\r\n            return\r\n```\r\n', 'comment_created': datetime.datetime(2023, 7, 20, 11, 50, 17, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1269365073, 'comment_body': 'This is a strange behaviour that it does not respect the `required` attribute. ', 'comment_created': datetime.datetime(2023, 7, 20, 12, 4, 18, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1269369916, 'comment_body': 'This validation should exist in the model itself. The previous implementation in my last review was correct. \r\n\r\nI only asked to add the `required` attribute in the HTML. Since, you mentioned that it has no affect in the submission of the form. \r\n\r\nCan you please move the validation back to the model?', 'comment_created': datetime.datetime(2023, 7, 20, 12, 9, 11, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1269383284, 'comment_body': 'We can simplify this by only allowing string values for `subnet` and `ip` argument. ', 'comment_created': datetime.datetime(2023, 7, 20, 12, 22, 14, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1269390545, 'comment_body': ""From [Django's translation docs](https://docs.djangoproject.com/en/4.2/topics/i18n/translation/#formatting-strings-format-lazy:~:text=(The%20caveat%20with%20using%20variables%20or%20computed%20values%2C%20as%20in%20the%20previous%20two%20examples%2C%20is%20that%20Django%E2%80%99s%20translation%2Dstring%2Ddetecting%20utility%2C%20django%2Dadmin%20makemessages%2C%20won%E2%80%99t%20be%20able%20to%20find%20these%20strings.%20More%20on%20makemessages%20later.)) \r\n\r\n> (The caveat with using variables or computed values, as in the previous two examples, is that Django’s translation-string-detecting utility, [django-admin makemessages](https://docs.djangoproject.com/en/4.2/ref/django-admin/#django-admin-makemessages), won’t be able to find these strings. More on [makemessages](https://docs.djangoproject.com/en/4.2/ref/django-admin/#django-admin-makemessages) later.)\r\n\r\nWe need to update the error messages. "", 'comment_created': datetime.datetime(2023, 7, 20, 12, 28, 48, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1269393218, 'comment_body': '```suggestion\r\n                    f\'Authozation failed for ZeroTier controller,\'\r\n                    \' ensure you are using the correct authorization token \'\r\n                    f\'(error: {response.reason})\'\r\n```\r\n\r\nThere is not much benefit to show status_code here. And, if the `response.reason` only says ""authorization failed"", the we should omit it as well for brevity. ', 'comment_created': datetime.datetime(2023, 7, 20, 12, 31, 12, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1269397142, 'comment_body': 'Can we move this to `self.update_vpn_server_configuration`?', 'comment_created': datetime.datetime(2023, 7, 20, 12, 34, 50, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1270868245, 'comment_body': ""Let's wrap this in try-except block. If the database transaction fails for any reason, we should delete the zerotier network. "", 'comment_created': datetime.datetime(2023, 7, 21, 16, 28, 34, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1270873234, 'comment_body': '```suggestion\r\n            self.host, self.auth_token, self.subnet.subnet, self.ip.ip_address\r\n```', 'comment_created': datetime.datetime(2023, 7, 21, 16, 33, 56, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1270885808, 'comment_body': 'Please add docstring and comments here. ', 'comment_created': datetime.datetime(2023, 7, 21, 16, 49, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1270890513, 'comment_body': ""We can use the same key for both success and error operations. E.g.: \r\n\r\n`openwisp_controller.config.tasks.update_template_related_config_status_<vpn>_last_operation`: 'success/error'"", 'comment_created': datetime.datetime(2023, 7, 21, 16, 54, 47, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1271557260, 'comment_body': 'Done :+1: ', 'comment_created': datetime.datetime(2023, 7, 23, 20, 59, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1271557281, 'comment_body': 'Sure!', 'comment_created': datetime.datetime(2023, 7, 23, 21, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1271557437, 'comment_body': ""Okay, I'll move that back to `vpn.py` :+1: "", 'comment_created': datetime.datetime(2023, 7, 23, 21, 1, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1271557460, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 23, 21, 1, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1271557736, 'comment_body': 'Yes, it says `""Unauthorized""` as the error reason. I have removed that from the validation message. Thanks!""\r\n![Screenshot from 2023-07-23 22-21-33](https://github.com/openwisp/openwisp-controller/assets/56113566/235124d8-3d84-4746-91bf-9918450f8822)\r\n', 'comment_created': datetime.datetime(2023, 7, 23, 21, 3, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1271557804, 'comment_body': 'Replied here: https://github.com/openwisp/openwisp-controller/pull/778#discussion_r1249786608', 'comment_created': datetime.datetime(2023, 7, 23, 21, 4, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1271557951, 'comment_body': 'Yes, we should use try-except here and make an API call for the deletion of the recently created ZeroTier network.', 'comment_created': datetime.datetime(2023, 7, 23, 21, 6, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1271557972, 'comment_body': 'Sure!', 'comment_created': datetime.datetime(2023, 7, 23, 21, 6, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1271557991, 'comment_body': 'thanks!', 'comment_created': datetime.datetime(2023, 7, 23, 21, 7, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1276354838, 'comment_body': 'is this for testing or does it have to stay?', 'comment_created': datetime.datetime(2023, 7, 27, 14, 20, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1276638807, 'comment_body': 'Currently, to display the notification toast correctly, we need to use a time delay workaround (although we can reduce this delay or find a better solution). I have opened an [issue in the ow-notification repository](https://github.com/openwisp/openwisp-notifications/issues/264) to address this bug.', 'comment_created': datetime.datetime(2023, 7, 27, 18, 2, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1276641106, 'comment_body': 'Ok, then why the import here and not at the top of the file?', 'comment_created': datetime.datetime(2023, 7, 27, 18, 4, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1276647684, 'comment_body': ""I'll move that at the beginning of the file :+1: "", 'comment_created': datetime.datetime(2023, 7, 27, 18, 7, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1279167424, 'comment_body': ""I don't feel good about endorsing `ztncui` to users. I want OpenWISP to be the one-stop solution. "", 'comment_created': datetime.datetime(2023, 7, 31, 11, 32, 41, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1279168219, 'comment_body': '```suggestion\r\n   ``my-zerotier-server.mydomain.com:9993`` (update this to point to your ZeroTier VPN server).\r\n```', 'comment_created': datetime.datetime(2023, 7, 31, 11, 33, 37, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1279170448, 'comment_body': '```suggestion\r\n5. Set the **Webhook AuthToken**., this will be ZeroTier authorization token which you can obtain by running the following command on the ZeroTier controller:\r\n\r\n      .. code-block:: shell\r\n\r\n        sudo cat /var/lib/zerotier-one/authtoken.secret\r\n```', 'comment_created': datetime.datetime(2023, 7, 31, 11, 35, 53, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1279171474, 'comment_body': '```suggestion\r\n   The **network_id**  of this network can be viewed in the **System Defined Variables** section,\r\n```', 'comment_created': datetime.datetime(2023, 7, 31, 11, 37, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1279182240, 'comment_body': 'I think we can simplify this as follows: \r\n\r\n```suggestion\r\n        ip_end = str(self.subnet.broadcast_address)\r\n        ip_start = str(next(self.subnet.hosts()))\r\n```', 'comment_created': datetime.datetime(2023, 7, 31, 11, 49, 21, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1279183482, 'comment_body': 'We discussed to set the timeout as a global constant\r\n\r\n```suggestion\r\n        response = requests.post(url, json={}, headers=self.headers, timeout=REQUEST_TIMEOUT)\r\n```', 'comment_created': datetime.datetime(2023, 7, 31, 11, 50, 43, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1279185543, 'comment_body': 'Right now, this method only adds the controller to the network. I think we can re-use this to also add other devices (members) to the network. \r\n\r\nI would change the signature as follows: \r\n\r\n```python\r\ndef update_network_member(self, node_id, network_id, member_ip):\r\n```\r\n', 'comment_created': datetime.datetime(2023, 7, 31, 11, 52, 58, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1279392845, 'comment_body': 'I think this error handling should be in the ZerotierService.get_node_status. ', 'comment_created': datetime.datetime(2023, 7, 31, 14, 34, 55, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1279397269, 'comment_body': 'Please add a comment here explaining why this is called here. ', 'comment_created': datetime.datetime(2023, 7, 31, 14, 36, 3, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1279415037, 'comment_body': 'Instead of mocking `LocMemCache.keys`, get the cache backend from `settings.CACHE_BACKEND` and mock that. ', 'comment_created': datetime.datetime(2023, 7, 31, 14, 46, 1, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1279423386, 'comment_body': 'If this is intended to **reset** the test environment, then this should be outside the `subTest`.', 'comment_created': datetime.datetime(2023, 7, 31, 14, 50, 27, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1280527531, 'comment_body': 'Sorry, I missed it.', 'comment_created': datetime.datetime(2023, 8, 1, 12, 4, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1280527870, 'comment_body': 'Updated :+1: ', 'comment_created': datetime.datetime(2023, 8, 1, 12, 5, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1280528043, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 8, 1, 12, 5, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1280528498, 'comment_body': 'Right, I have move it to `get_node_status` method.', 'comment_created': datetime.datetime(2023, 8, 1, 12, 5, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1280528776, 'comment_body': 'Done :+1: ', 'comment_created': datetime.datetime(2023, 8, 1, 12, 5, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1280529126, 'comment_body': 'Thanks!', 'comment_created': datetime.datetime(2023, 8, 1, 12, 6, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1280529777, 'comment_body': 'My bad, just updated :+1: ', 'comment_created': datetime.datetime(2023, 8, 1, 12, 6, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1288199175, 'comment_body': 'Small request for change for reasons of consistency with the rest of the codebase: \r\n```suggestion\r\n        except Exception as e:\r\n```', 'comment_created': datetime.datetime(2023, 8, 9, 9, 19, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1288201902, 'comment_body': 'same here, please revise the whole PR for the same occurrence of this.', 'comment_created': datetime.datetime(2023, 8, 9, 9, 21, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1288202863, 'comment_body': ""I think it's time to start separating tasks like these, what about creating a file called tasks_zerotier.py and importing the tasks here? @pandafy @Aryamanz29 "", 'comment_created': datetime.datetime(2023, 8, 9, 9, 22, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1291241581, 'comment_body': 'I believe that would be better :+1: ', 'comment_created': datetime.datetime(2023, 8, 11, 11, 42, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}]","[{'commit_sha': 'a2d0d660582f1c4870e29db44cddb2b79f36d23b', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '676f4384522fcf1d27a0cabe6655bfcc62000f4d', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0412570a916e0f41b4aa5a8de0fc6fd517387fe2', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20822f7d60dacc4431df4bc90ee67b89678bf367', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e08ff134256cbea6c7d93220449149444fe24660', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f39c1b6961916e9d3c27d8bbf838a7d3dffba1b', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19e9105e54ae87cf8e321ae57bef7e34d4cdd195', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9f8f1d5d164394a4953fb8f1a68a2ab47946bf4', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '758767f6ca457a2ac643f96db21d7f1fe640e16e', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27bc331fb65982be37091c2aecb85a3b09dfb2de', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09131b6e462ec05ce757e6aea74fe2b34da2019b', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3dd2d7fd05384eb89a03a000c6554a681655d5aa', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7f3144162a4245bbf4a5f2164ddb22c443988da', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e9a1633432610ee1718b034b1fcede4aaa8a45e', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66a1afe1b5f00fd36b0a3728528b6a5a44f53db4', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e93fe01c7b78180ef2bb29360a006356aa7d69d8', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da63f7b21eab45f62546362d47fc8e7f81519c6f', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc232e8ae8e96e16726675c9794a9385e863b177', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ddc642de2b34d0f0a7420ee5734c62080a6f649', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f43c3458fbf48ff7a3ce66dc5709fa5d09c5cc8', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c92b73eedde38b39bbbf9f0398918b5e654f65f2', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b9e0f755c33aedb61e6831a49794156f5e0cd7b', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}]",Aryaman,56113566,,User,,92,,40,330
1453946470,[feature] Added auth and ip assignment for ZeroTier member,"**Depends on**

- [x] https://github.com/openwisp/openwisp-controller/pull/778
- [x] https://github.com/openwisp/netjsonconfig/pull/283

Closes #606 



",True,799,https://api.github.com/repos/openwisp/openwisp-controller/pulls/799,https://github.com/openwisp/openwisp-controller/pull/799,closed,740,61,11,108,2,30,1,1,[{'name': 'enhancement'}],2023-07-28 14:47:12+00:00,2023-09-26 10:35:28+00:00,5168896.0,"59 days, 19:48:16","[{'comment_id': 1283032458, 'comment_body': 'I think `remove` would be more appropriate than `leave` here. ', 'comment_created': datetime.datetime(2023, 8, 3, 10, 58, 30, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1283033761, 'comment_body': 'I think, this logic should be in the VpnClient model. Why did you add this here?', 'comment_created': datetime.datetime(2023, 8, 3, 10, 59, 48, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1283036785, 'comment_body': ""There are some inadvertent changes here. \r\n\r\n```suggestion\r\n            if 'vni' in vpn_context_keys and (\r\n                vpnclient.vni or vpnclient.vpn._vxlan_vni\r\n            ):\r\n                context[\r\n                    vpn_context_keys['vni']\r\n                ] = f'{vpnclient.vni or vpnclient.vpn._vxlan_vni}'\r\n```"", 'comment_created': datetime.datetime(2023, 8, 3, 11, 2, 50, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1283039530, 'comment_body': ""I don't know how this slipped in the previous reviews, but why not \r\n\r\n```python\r\ncontext_keys.update({\r\n    'node_id': 'node_id_{}'.format(pk),\r\n    'network_id': 'network_id_{}'.format(pk),\r\n    'network_name': 'network_name_{}'.format(pk),\r\n    'member_id': 'member_id',\r\n    'zt_identity_secret': 'zt_identity_secret'\r\n})\r\n```"", 'comment_created': datetime.datetime(2023, 8, 3, 11, 5, 41, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1283041343, 'comment_body': ""```suggestion \r\n                    name='zt',\r\n```"", 'comment_created': datetime.datetime(2023, 8, 3, 11, 6, 50, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1283044151, 'comment_body': 'Please move this method with other `auto_*` methods. ', 'comment_created': datetime.datetime(2023, 8, 3, 11, 9, 40, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1283047361, 'comment_body': ""I would re-write this as following for better readability and consistency \r\n\r\n```suggestion\r\n        if not self.vpn._is_backend_type('zerotier') or self.zt_identity_secret:\r\n            return \r\n        # If there's an existing ZeroTier VpnClient for this device, the re-use the zt_identity_secret\r\n        existing_zt_client = self.__class__.objects.only('zt_identity_secret').exclude(id=self.id).filter(config_id=self.config_id, zt_identity_secret__isnull=False).first()\r\n        if existing_ztn_client: \r\n            self.zt_identity_secret = existing_ztn_client.zt_identity_secret\r\n        else:\r\n            self.zt_identity_secret = self._generate_zt_identity()\r\n```"", 'comment_created': datetime.datetime(2023, 8, 3, 11, 12, 43, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1283049686, 'comment_body': 'Do we really need to save `member_id` in the database? I think this duplicates the data in the database unnecessarily. \r\n\r\nWe can create a cached property/cached_property for member_id \r\n\r\n```python\r\n@cached_property\r\ndef member_id(self):\r\n    return self.zt_identity_secret[:10]\r\n```', 'comment_created': datetime.datetime(2023, 8, 3, 11, 14, 54, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1283059002, 'comment_body': 'Please move this method with other ZeroTier helper methods. We should group similar methods together for better readability. ', 'comment_created': datetime.datetime(2023, 8, 3, 11, 24, 5, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1283059213, 'comment_body': 'This method name looks inconsistent. ', 'comment_created': datetime.datetime(2023, 8, 3, 11, 24, 18, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1283060364, 'comment_body': 'We need to update the documentation to instruct users to install this package. ', 'comment_created': datetime.datetime(2023, 8, 3, 11, 25, 30, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1283097357, 'comment_body': 'In my previous review, I got confused and thought that this method is part of the Vpn model. \r\n\r\nI think, this method should be a member of the Vpn model (Vpn._add_network_member). And here, we can perform `self.vpn._add_network_member(self.member_id)`. ', 'comment_created': datetime.datetime(2023, 8, 3, 11, 56, 1, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1297146999, 'comment_body': ""I'd shorten this, eg:\r\n\r\nPrevents the overflow of large text in system\r\ndefined variables such as `zt_identity_secret`"", 'comment_created': datetime.datetime(2023, 8, 17, 12, 26, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1298596972, 'comment_body': ""I don't understand this very well, are we storing always the same secret or what? What secret is this? Does each network member have its own secret?\r\n\r\nWhy does it need to be a `TextField`?  Can it be a `CharField`? Can we give it a more generic name in case we can reuse this in other implementations?"", 'comment_created': datetime.datetime(2023, 8, 18, 15, 39, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1298601999, 'comment_body': ""I don't see `self.assertEqual(IpAddress.objects.count(), 2)` being checked before this"", 'comment_created': datetime.datetime(2023, 8, 18, 15, 44, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1298602780, 'comment_body': 'same here, did we have 2 ip addresses before? If yes, please assert that.', 'comment_created': datetime.datetime(2023, 8, 18, 15, 45, 34, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1298605614, 'comment_body': 'It is not super clear to me what this test is checking due to the naming of this method, is it checking the generation of the secret or what?', 'comment_created': datetime.datetime(2023, 8, 18, 15, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1300109206, 'comment_body': ""Each network member has its unique ZeroTier identity secret. The primary purpose of this secret is to extract the `member_id`, which consists of the first **10 hexadecimal characters** of the ZeroTier identity secret. We use this `member_id` for IP assignment and authorization of network members.\r\n\r\n[Our logic is straightforward: ](https://github.com/openwisp/openwisp-controller/blob/issue-606/zerotier-member-auth-ip-assign/openwisp_controller/config/base/vpn.py#L1003-L1017) If no ZeroTier VPN template is applied to a device, we generate a new identity secret and extract the `member_id` **(cached property)**. However, if a ZeroTier VPN template is already applied to a device, we don't generate a new identity secret; instead, we use the existing one. This is how ZeroTier reuses the same identity secret when a device is a member of two different ZeroTier networks, and we have implemented it similarly.\r\n\r\nCurrently, we are storing the identity secret as a `TextField` because we are unsure of its character length. To address this uncertainty, I have posted a [question in the ZeroTier discussion forum](https://discuss.zerotier.com/t/question-character-length-of-zerotier-identity-secret/15336). Once we receive a response from the ZeroTier team, we can update the field to use `CharField` with an appropriate `max_length`.\r\n\r\nRegarding the field name, I propose using either `identity_secret` or simply `secret`. What are your thoughts on this?\r\n"", 'comment_created': datetime.datetime(2023, 8, 21, 13, 25, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1300125976, 'comment_body': ""As I've [explained in my previous comment](https://github.com/openwisp/openwisp-controller/pull/799#discussion_r1300109206), this test covers various scenarios involving the ZeroTier VPN template when it's applied to a device. During this testing process, we also assess identity secret generation. For instance, we check if a different VPN backend template is applied first and then the ZeroTier template is applied to the device, does it generate a ZeroTier identity? Similarly, if a ZeroTier template is already applied and an identity has been generated, and then another ZeroTier network template is applied, does it reuse the previously created identity? These are the aspects we're investigating in this testing.\r\n\r\n"", 'comment_created': datetime.datetime(2023, 8, 21, 13, 38, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1301316143, 'comment_body': ""Thanks for the explanation!\r\nSecret is fine, let's leave it as text field so it can be reused by different implementations later on."", 'comment_created': datetime.datetime(2023, 8, 22, 9, 12, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1301838240, 'comment_body': 'We also need to enable the bridge parameter in this call. ', 'comment_created': datetime.datetime(2023, 8, 22, 15, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1302722068, 'comment_body': 'Sure!', 'comment_created': datetime.datetime(2023, 8, 23, 9, 9, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1308547892, 'comment_body': ""I recommend renaming this to `zerotier_member_id` because it's highly unlikely we will be able to reuse it in other contexts. "", 'comment_created': datetime.datetime(2023, 8, 29, 10, 19, 28, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1312529990, 'comment_body': 'Great work with the docstrings! 👏🏼 ', 'comment_created': datetime.datetime(2023, 9, 1, 4, 36, 16, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1312532051, 'comment_body': 'I saw this (`ifname`) also implemented in netjsonconfig. I think it will be better if we implement it only here. ', 'comment_created': datetime.datetime(2023, 9, 1, 4, 40, 49, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1312534793, 'comment_body': ""This query is not optimized: \r\n\r\n1. You are using `only('vpn__backend`)` in the query, but later in the code you are accessing the `secret` attribute. Accessing the `secret` attribute will create additional query. \r\n2. Filtering by `vpn__backend__endswith='ZeroTier'` is more expensive than direct lookup `vpn__backend=self.vpn.backend`\r\n\r\n```suggestion\r\n        existing_zt_client = (\r\n            self.__class__.objects.only('secret')\r\n            .exclude(id=self.id)\r\n            .filter(config_id=self.config_id, vpn__backend=self.vpn.backend)\r\n            .first()\r\n        )\r\n```"", 'comment_created': datetime.datetime(2023, 9, 1, 4, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1314808178, 'comment_body': ""Do you mean to remove `ifname` from the `networks` dictionary and only use the `id` field in `netjsonconfig`? Or are you referring to the default value (`f'owzt{self.network_id[-6:]}`) that I've used for `ifname` in `netjsonconfig`? Could you please specify the part of the `netjsonconfig` code you're referring to?\r\n"", 'comment_created': datetime.datetime(2023, 9, 4, 11, 11, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1314808806, 'comment_body': 'Thanks!', 'comment_created': datetime.datetime(2023, 9, 4, 11, 12, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}, {'comment_id': 1315551339, 'comment_body': ""> are you referring to the default value (`f'owzt{self.network_id[-6:]}`) that I've used for `ifname` in `netjsonconfig`?\r\n\r\nYes. \r\n\r\nCode in [netjsonconfig](https://github.com/openwisp/netjsonconfig/pull/285#discussion_r1312527674)"", 'comment_created': datetime.datetime(2023, 9, 5, 8, 23, 3, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 1320765735, 'comment_body': 'Done, thanks!', 'comment_created': datetime.datetime(2023, 9, 10, 12, 57, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Aryamanz29', 'type': 'User'}]","[{'commit_sha': 'a16f81072d1ad362c29b8b1e6c72686e8ca679c8', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f7d64143071fe833d23b346aacbd7b0923fc7ea', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51f4715044a23958c9d936452afa34bf7efb0284', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82059b9e85e78d4fbbca98e2952bfcdd5f280cd3', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8c88ec5c32655c78ddbd77095ab43691539a211', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ecf341990497a21800104ab7fc35c0fe20da0d4', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '868deb2bc08c5eb121ac2bb2dc65fe86e9e7c6d2', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e6066ab7add0eee153745e36a081aad754106d6', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1dcc1a9816939abfd80f3b19e3369d09ad146bfb', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02d298e58960cbe08781add63c05abc706b0cf58', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '272fe1a6cd6d984538cdaecfd53964beaa126e5d', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c88c545ca6f6539c641e150dd8b6f4d26f9f1dab', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74c5f4337bfe53d5e145c2850953e299954d0d10', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f99038b9a4585109fce89baf203423189268e48', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd93b51a8d0b0bf01425724eed6f6d1d69f1a696', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '555ac551fc82e302beeb0133d627d4d6627dee21', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '737e05ec47faedd5381144edacb3494e96e98ec8', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '016248f1d43f086d4a5a3b32a060387167272cdb', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2efd1303848a0989dd1282ea7cad450578c726a6', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9776c3fadc46ab0acdcd165d9c453f0a3fb66a3a', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aaa8ee54974796e798b9342975f4f5b5ff996932', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30942ea4899f8a52bf2b60a575d97ec5f55c4615', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3257d41e63d5e157464fddbdb5ae71886e2f15c0', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6ac216783707d67b746960ba004873ea99789fb', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38e8efa094ddcf54ad5e9abf9fd2e3b31986ec09', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '283a029512e2b26c901f32d47225b2c088f27379', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b9437120058911b5dab505f3bc3bc1891c430e5', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23a8304b67ba20e4e5c702a9d60b600060067d0b', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '497541f3acb474c56ac566e8b1cf42681fbcf28b', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26f0cdbea9d2afaedfada58a6583d74aa1630128', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3787f10d5c9f0fe685cfd4c74c8297288e901493', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8273c7e6bb4a09770e9efeca744a04810746214', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec34c365ec17218aa82726932f5db89afc3c17ab', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3353ad90d9a6ee23be6c2052aac599f1c7cf23b', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '002b7aae2a9d8520ae10604ceba3d6e42b183f7d', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38bd1f230b7fdd54b06af4e7257a7c31d67b1fc6', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18b249e14879d062225e882c16f5fcf0ac0331b8', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '867fa272a73ad36ad6fdd6af7a2367162182a879', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95835cc6d0c30d5975afacd49a07baacd645190b', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd2df9377bf8cc61a5af0a8c98f8d7cb0e73ba78', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b04c1324ea54e8a79c1042bd943b3938046f34d', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b88c742b0abb676b7765f0bd58b6dedadc11bbef', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb74bb1973df3798072d05ae67ae6e013b599a48', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1935b7d42c64f7ac32d74ecedae6047322e394f1', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1acd2fba1fb1ab9cc176a68b8f567c77d2734720', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d9dc038091694ff2bc93d619df094830bf81f1e', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '283dba86566a97f700bb2b1533b98fbed8709fd2', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f119e8b5bced4c218c23bc1ad9561394a830b579', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '906225365e6cd0b8e293a4d0d808d02e8638d1be', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2d3aba147143be85bb7bd92e037317766ed2ac4', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7aaa908c8d1a328bc56ec07ae4aa6170faae106f', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d7c653a28de44ac94c296ef2b7d98eba16c8ba3', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30a824013e762f3636dcfaca4b392bbda6095e0c', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0339fc439da7e4c9c88f5dadcd155e2d20bbfe49', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8a18e3d67fa897d266f272f9cb7fd714a97ef04', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c72d31eecd52c37d6278913c461766446499d2b', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9c44df8eb2ceed15035caafbbe56848a536bbf6', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31e363ec977d6a3bbf52cb0567ee3d5476009556', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c9add414a1cb13662988aaf7353686bbd31effe', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42415f0fb4e795b2599676903ad40be976e1852e', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86f52731eb9c6f734f4a41190c284dd1508ff20f', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f39c996ffef17e9adc533cbe3fd8a5d31edec600', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13a79653fcf7df8ca4819a981bc34a71740b61be', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2d0d660582f1c4870e29db44cddb2b79f36d23b', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '676f4384522fcf1d27a0cabe6655bfcc62000f4d', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0412570a916e0f41b4aa5a8de0fc6fd517387fe2', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20822f7d60dacc4431df4bc90ee67b89678bf367', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e08ff134256cbea6c7d93220449149444fe24660', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f39c1b6961916e9d3c27d8bbf838a7d3dffba1b', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19e9105e54ae87cf8e321ae57bef7e34d4cdd195', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9f8f1d5d164394a4953fb8f1a68a2ab47946bf4', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '758767f6ca457a2ac643f96db21d7f1fe640e16e', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27bc331fb65982be37091c2aecb85a3b09dfb2de', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09131b6e462ec05ce757e6aea74fe2b34da2019b', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3dd2d7fd05384eb89a03a000c6554a681655d5aa', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7f3144162a4245bbf4a5f2164ddb22c443988da', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e9a1633432610ee1718b034b1fcede4aaa8a45e', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66a1afe1b5f00fd36b0a3728528b6a5a44f53db4', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e93fe01c7b78180ef2bb29360a006356aa7d69d8', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da63f7b21eab45f62546362d47fc8e7f81519c6f', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc232e8ae8e96e16726675c9794a9385e863b177', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ddc642de2b34d0f0a7420ee5734c62080a6f649', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f43c3458fbf48ff7a3ce66dc5709fa5d09c5cc8', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c92b73eedde38b39bbbf9f0398918b5e654f65f2', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07b48f74f1d31a53a55a0045907aebb6b6620f5b', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81278e5e8e20e23be45544e0375de667880ac9ec', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffd4eb125b791ba56507a7c0c00d3bc416fbd91b', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06bdb4261c6abfca31805b278b25d827f6e2a808', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b9e0f755c33aedb61e6831a49794156f5e0cd7b', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f3079bfca88807df7b5dbb2b5ec385f8be59150', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8dd834e202ee3b9fc131e34f4be7d256f678bb1f', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9655309221df5960658cb43fa08d25b9ce64c97a', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be465205b937f0c85a9d88f814de058ec2540db1', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58cc7a0f176e88176d92f27ebc844f7d608709b8', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e003289df855ed606114164df48a43feb28bda0c', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1426cdcfe907cea93d11434b4d9f1574c1b52a8', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0500e7b6de7085077da011e9385ac62e1f6cc577', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dca27433098ef89abedcea12b77d4b4f59af0b6', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e9b69ed9eb90d9421ead55d607e425d048906de', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd997bea2d41821cd21c06d6c137d093d034d7d0e', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd0bfd3779c76ef2d962e26b082785d0b6d75478', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5291846df0bcb7dc6f38bbb2cc69bd9d88f959ad', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0bd6397f0aded3654b69dfff9ccbe8b1ddef53f', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc0fa4dcd64ad4da9f72497293f364614bf281e0', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '348dd589cb858536ac0b79a7c2d801173303a143', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f77a4e9ef23241cbc3e99d4c764010d3107b199', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9219c7da4278abdcf9ae8be4bb9c401ed5f1e438', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5b41edb550c915f49c9175dc32b550296d047c0', 'committer_username': 'nemesifier', 'committer_name': 'Federico Capoano', 'committer_email': 'f.capoano@openwisp.io', 'commit_date': datetime.datetime(2011, 6, 9, 22, 30, 31, tzinfo=datetime.timezone.utc)}]",Aryaman,56113566,,User,,92,,40,330
1473351769,[feature] Added support for custom ZeroTier interface name,"**Depends on**

- [ ] https://github.com/openwisp/netjsonconfig/pull/285
- [ ] https://github.com/openwisp/openwisp-controller/pull/799

Closes #801",True,802,https://api.github.com/repos/openwisp/openwisp-controller/pulls/802,https://github.com/openwisp/openwisp-controller/pull/802,closed,20,9,4,4,0,0,1,1,[{'name': 'enhancement'}],2023-08-13 11:51:17+00:00,2023-08-22 16:18:21+00:00,793624.0,"9 days, 4:27:04",[],"[{'commit_sha': 'bbc55d196b4426b010b967ec3861079935a4e699', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fc18ad09eb4a9d22f23cd3b82a01e6b858dd13f', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7a94a59d95b3f60ba985760e32ceecbbc8f86e5', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66b3f8b66b8044cf5d765ade807fa47440b7d3aa', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}]",Aryaman,56113566,,User,,92,,40,330
1470416334,[feature] Added ZeroTier Parser #106,Closes #106,True,107,https://api.github.com/repos/openwisp/netdiff/pulls/107,https://github.com/openwisp/netdiff/pull/107,closed,566,0,6,4,0,0,1,1,[{'name': 'enhancement'}],2023-08-10 14:05:21+00:00,2023-09-22 13:55:55+00:00,3714634.0,"42 days, 23:50:34",[],"[{'commit_sha': 'e07d13d42efffe191e1104570083226a64c43ed0', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '316aff2d46c51713577c51e3ef9498af7640c7ec', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b563c5062e22d743a397159a4cd2cf55112d89d9', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fae1ffff84d9cdf0a1e0329149aa0a9679e25436', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}]",Aryaman,56113566,,User,,92,,40,330
1469263633,[feature] Added support for ZeroTier parser #135,"**Depends on**

- [x] https://github.com/openwisp/openwisp-network-topology/pull/205

Closes #135",True,204,https://api.github.com/repos/openwisp/openwisp-network-topology/pulls/204,https://github.com/openwisp/openwisp-network-topology/pull/204,closed,223,3,9,10,1,2,1,1,[{'name': 'enhancement'}],2023-08-09 20:33:29+00:00,2023-09-22 13:59:37+00:00,3777968.0,"43 days, 17:26:08","[{'comment_id': 1298571264, 'comment_body': ""I wouldn't mention these details here, I propose we make a section dedicated to zerotier."", 'comment_created': datetime.datetime(2023, 8, 18, 15, 15, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 1298571490, 'comment_body': 'same here', 'comment_created': datetime.datetime(2023, 8, 18, 15, 15, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}]","[{'commit_sha': 'ad4860f8714bf29e19e62b23dbbd35f081436fc8', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d760a30e5663ae059cb29de0af08786727c6e07', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08706fccdf8b7fe8b9dcb4d4536850ff21bb0c93', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fce3b9ad27c74aa94e34df30242ca9e922c01b9a', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '114e425fd3685563ba32ffb945ba616953d374c4', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4291110adcf87e909e8eca0236f2b03b83ae50c2', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae89099a6955857f3d06e6331936174dde46a704', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f2326d3943880ddac59fe6a8c7d5b57824a3ca7', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e307fb1b41f4075f3b277ac878f1ad5f8b413fb', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c62b8465129e827b106fe1814f0e64c9f03d670', 'committer_username': 'Aryamanz29', 'committer_name': 'Aryaman', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 3, 9, 46, 24, tzinfo=datetime.timezone.utc)}]",Aryaman,56113566,,User,,92,,40,330

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
186424366,docker-openwisp,openwisp/docker-openwisp,Python,75,149,14,20,235,20,13,8,"[{'id': 1285663007, 'number': 282, 'closed': datetime.datetime(2023, 3, 22, 16, 3, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 22, 11, 4, 40, tzinfo=datetime.timezone.utc), 'time_taken': 17959.0, 'time_delta': '4:59:19', 'additions': 9, 'deletions': 0, 'state': 'closed'}, {'id': 1284035069, 'number': 280, 'closed': datetime.datetime(2023, 3, 21, 20, 28, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 21, 11, 19, 20, tzinfo=datetime.timezone.utc), 'time_taken': 32971.0, 'time_delta': '9:09:31', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 1282219852, 'number': 276, 'closed': datetime.datetime(2023, 3, 20, 15, 22, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 20, 8, 41, 47, tzinfo=datetime.timezone.utc), 'time_taken': 24042.0, 'time_delta': '6:40:42', 'additions': 13, 'deletions': 2, 'state': 'closed'}, {'id': 1280042739, 'number': 275, 'closed': datetime.datetime(2023, 3, 18, 18, 19, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 17, 11, 5, 53, tzinfo=datetime.timezone.utc), 'time_taken': 112429.0, 'time_delta': '1 day, 7:13:49', 'additions': 18, 'deletions': 2, 'state': 'closed'}, {'id': 1276954760, 'number': 271, 'closed': datetime.datetime(2023, 3, 16, 12, 6, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 15, 14, 28, 32, tzinfo=datetime.timezone.utc), 'time_taken': 77892.0, 'time_delta': '21:38:12', 'additions': 66, 'deletions': 42, 'state': 'closed'}, {'id': 934018540, 'number': 219, 'closed': datetime.datetime(2022, 5, 13, 13, 56, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 11, 18, 31, 43, tzinfo=datetime.timezone.utc), 'time_taken': 156312.0, 'time_delta': '1 day, 19:25:12', 'additions': 111, 'deletions': 101, 'state': 'closed'}, {'id': 932080791, 'number': 217, 'closed': datetime.datetime(2022, 5, 12, 19, 29, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 10, 7, 54, 32, tzinfo=datetime.timezone.utc), 'time_taken': 214503.0, 'time_delta': '2 days, 11:35:03', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 872221084, 'number': 190, 'closed': datetime.datetime(2022, 3, 14, 15, 41, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 5, 9, 37, 53, tzinfo=datetime.timezone.utc), 'time_taken': 799435.0, 'time_delta': '9 days, 6:03:55', 'additions': 14, 'deletions': 3, 'state': 'closed'}]"
39960073,netjsonconfig,openwisp/netjsonconfig,Python,71,359,18,33,730,30,21,10,"[{'id': 1473341534, 'number': 285, 'closed': datetime.datetime(2023, 9, 22, 15, 37, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 13, 11, 22, 46, tzinfo=datetime.timezone.utc), 'time_taken': 3471312.0, 'time_delta': '40 days, 4:15:12', 'additions': 210, 'deletions': 95, 'state': 'closed'}, {'id': 1456172403, 'number': 283, 'closed': datetime.datetime(2023, 8, 9, 8, 45, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 31, 12, 38, 20, tzinfo=datetime.timezone.utc), 'time_taken': 763648.0, 'time_delta': '8 days, 20:07:28', 'additions': 146, 'deletions': 17, 'state': 'closed'}, {'id': 1398125077, 'number': 278, 'closed': datetime.datetime(2023, 6, 20, 14, 3, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 19, 12, 14, 48, tzinfo=datetime.timezone.utc), 'time_taken': 92893.0, 'time_delta': '1 day, 1:48:13', 'additions': 30, 'deletions': 0, 'state': 'closed'}, {'id': 1390984408, 'number': 277, 'closed': datetime.datetime(2023, 6, 13, 16, 47, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 13, 16, 42, 16, tzinfo=datetime.timezone.utc), 'time_taken': 341.0, 'time_delta': '0:05:41', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1384342983, 'number': 274, 'closed': datetime.datetime(2023, 7, 27, 18, 8, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 8, 12, 10, 47, tzinfo=datetime.timezone.utc), 'time_taken': 4255077.0, 'time_delta': '49 days, 5:57:57', 'additions': 570, 'deletions': 232, 'state': 'closed'}, {'id': 1370531346, 'number': 272, 'closed': datetime.datetime(2023, 6, 16, 15, 42, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 30, 13, 59, 27, tzinfo=datetime.timezone.utc), 'time_taken': 1474986.0, 'time_delta': '17 days, 1:43:06', 'additions': 1549, 'deletions': 1, 'state': 'closed'}, {'id': 1319478065, 'number': 262, 'closed': datetime.datetime(2023, 5, 2, 16, 54, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 19, 8, 21, 49, tzinfo=datetime.timezone.utc), 'time_taken': 1153967.0, 'time_delta': '13 days, 8:32:47', 'additions': 51, 'deletions': 0, 'state': 'closed'}, {'id': 1260821214, 'number': 258, 'closed': datetime.datetime(2023, 3, 6, 14, 26, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 2, 17, 32, 37, tzinfo=datetime.timezone.utc), 'time_taken': 334431.0, 'time_delta': '3 days, 20:53:51', 'additions': 5, 'deletions': 2, 'state': 'closed'}, {'id': 1257061181, 'number': 256, 'closed': datetime.datetime(2023, 2, 28, 18, 23, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 28, 12, 34, 40, tzinfo=datetime.timezone.utc), 'time_taken': 20907.0, 'time_delta': '5:48:27', 'additions': 96, 'deletions': 2, 'state': 'closed'}, {'id': 1256789858, 'number': 255, 'closed': datetime.datetime(2023, 5, 4, 16, 34, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 28, 9, 42, 54, tzinfo=datetime.timezone.utc), 'time_taken': 5640690.0, 'time_delta': '65 days, 6:51:30', 'additions': 72, 'deletions': 0, 'state': 'closed'}, {'id': 837034437, 'number': 204, 'closed': datetime.datetime(2022, 2, 4, 18, 42, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 1, 10, 7, 31, tzinfo=datetime.timezone.utc), 'time_taken': 290122.0, 'time_delta': '3 days, 8:35:22', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
77444607,openwisp-controller,openwisp/openwisp-controller,Python,170,548,22,48,985,73,23,8,"[{'id': 1473351769, 'number': 802, 'closed': datetime.datetime(2023, 8, 22, 16, 18, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 13, 11, 51, 17, tzinfo=datetime.timezone.utc), 'time_taken': 793624.0, 'time_delta': '9 days, 4:27:04', 'additions': 20, 'deletions': 9, 'state': 'closed'}, {'id': 1453946470, 'number': 799, 'closed': datetime.datetime(2023, 9, 26, 10, 35, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 28, 14, 47, 12, tzinfo=datetime.timezone.utc), 'time_taken': 5168896.0, 'time_delta': '59 days, 19:48:16', 'additions': 740, 'deletions': 61, 'state': 'closed'}, {'id': 1399445058, 'number': 778, 'closed': datetime.datetime(2023, 8, 17, 12, 1, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 20, 8, 35, 37, tzinfo=datetime.timezone.utc), 'time_taken': 5023535.0, 'time_delta': '58 days, 3:25:35', 'additions': 1840, 'deletions': 34, 'state': 'closed'}, {'id': 1330886406, 'number': 757, 'closed': datetime.datetime(2023, 5, 25, 19, 53, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 27, 19, 13, 30, tzinfo=datetime.timezone.utc), 'time_taken': 2421582.0, 'time_delta': '28 days, 0:39:42', 'additions': 23, 'deletions': 3, 'state': 'closed'}, {'id': 1281593677, 'number': 750, 'closed': datetime.datetime(2023, 3, 19, 21, 9, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 19, 12, 7, 8, tzinfo=datetime.timezone.utc), 'time_taken': 32561.0, 'time_delta': '9:02:41', 'additions': 60, 'deletions': 41, 'state': 'closed'}, {'id': 1274951285, 'number': 748, 'closed': datetime.datetime(2023, 4, 27, 1, 56, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 14, 12, 25, 2, tzinfo=datetime.timezone.utc), 'time_taken': 3763891.0, 'time_delta': '43 days, 13:31:31', 'additions': 706, 'deletions': 32, 'state': 'closed'}, {'id': 1273115131, 'number': 746, 'closed': datetime.datetime(2023, 3, 14, 14, 28, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 13, 11, 22, 8, tzinfo=datetime.timezone.utc), 'time_taken': 97586.0, 'time_delta': '1 day, 3:06:26', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 1186272068, 'number': 736, 'closed': datetime.datetime(2023, 1, 17, 15, 3, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 5, 10, 26, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1053402.0, 'time_delta': '12 days, 4:36:42', 'additions': 72, 'deletions': 2, 'state': 'closed'}, {'id': 1183159679, 'number': 735, 'closed': datetime.datetime(2023, 1, 11, 20, 39, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 3, 7, 37, 42, tzinfo=datetime.timezone.utc), 'time_taken': 738108.0, 'time_delta': '8 days, 13:01:48', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 1178781992, 'number': 732, 'closed': datetime.datetime(2023, 1, 11, 23, 4, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 27, 18, 40, 34, tzinfo=datetime.timezone.utc), 'time_taken': 1311857.0, 'time_delta': '15 days, 4:24:17', 'additions': 43, 'deletions': 1, 'state': 'closed'}, {'id': 1161592977, 'number': 730, 'closed': datetime.datetime(2023, 1, 18, 14, 37, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 12, 20, 25, 27, tzinfo=datetime.timezone.utc), 'time_taken': 3175924.0, 'time_delta': '36 days, 18:12:04', 'additions': 3, 'deletions': 11, 'state': 'closed'}, {'id': 1151229441, 'number': 727, 'closed': datetime.datetime(2022, 12, 20, 21, 13, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 7, 10, 20, 34, tzinfo=datetime.timezone.utc), 'time_taken': 1162392.0, 'time_delta': '13 days, 10:53:12', 'additions': 36, 'deletions': 6, 'state': 'closed'}, {'id': 930333604, 'number': 646, 'closed': datetime.datetime(2022, 5, 9, 13, 53, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 7, 18, 47, 2, tzinfo=datetime.timezone.utc), 'time_taken': 155170.0, 'time_delta': '1 day, 19:06:10', 'additions': 18, 'deletions': 3, 'state': 'closed'}, {'id': 925372490, 'number': 637, 'closed': datetime.datetime(2022, 5, 3, 7, 2, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 2, 9, 26, 54, tzinfo=datetime.timezone.utc), 'time_taken': 77757.0, 'time_delta': '21:35:57', 'additions': 233, 'deletions': 10, 'state': 'closed'}, {'id': 833787073, 'number': 596, 'closed': datetime.datetime(2022, 3, 12, 15, 18, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 27, 18, 52, 50, tzinfo=datetime.timezone.utc), 'time_taken': 3788734.0, 'time_delta': '43 days, 20:25:34', 'additions': 0, 'deletions': 3, 'state': 'closed'}, {'id': 830766229, 'number': 595, 'closed': datetime.datetime(2022, 2, 17, 18, 38, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 24, 19, 47, 1, tzinfo=datetime.timezone.utc), 'time_taken': 2069465.0, 'time_delta': '23 days, 22:51:05', 'additions': 3, 'deletions': 0, 'state': 'closed'}]"
26405669,netdiff,openwisp/netdiff,Python,37,78,23,25,336,3,5,0,"[{'id': 1470416334, 'number': 107, 'closed': datetime.datetime(2023, 9, 22, 13, 55, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 10, 14, 5, 21, tzinfo=datetime.timezone.utc), 'time_taken': 3714634.0, 'time_delta': '42 days, 23:50:34', 'additions': 566, 'deletions': 0, 'state': 'closed'}]"
92812410,openwisp-network-topology,openwisp/openwisp-network-topology,Python,64,162,16,27,275,6,6,1,"[{'id': 1471727534, 'number': 205, 'closed': datetime.datetime(2023, 8, 16, 10, 45, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 11, 12, 25, 3, tzinfo=datetime.timezone.utc), 'time_taken': 426006.0, 'time_delta': '4 days, 22:20:06', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1469263633, 'number': 204, 'closed': datetime.datetime(2023, 9, 22, 13, 59, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 9, 20, 33, 29, tzinfo=datetime.timezone.utc), 'time_taken': 3777968.0, 'time_delta': '43 days, 17:26:08', 'additions': 223, 'deletions': 3, 'state': 'closed'}, {'id': 1367943756, 'number': 197, 'closed': datetime.datetime(2023, 6, 7, 18, 19, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 28, 12, 4, 32, tzinfo=datetime.timezone.utc), 'time_taken': 886513.0, 'time_delta': '10 days, 6:15:13', 'additions': 4, 'deletions': 26, 'state': 'closed'}, {'id': 1366283874, 'number': 196, 'closed': datetime.datetime(2023, 6, 7, 14, 53, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 26, 12, 38, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1044922.0, 'time_delta': '12 days, 2:15:22', 'additions': 34, 'deletions': 2, 'state': 'closed'}, {'id': 1366267300, 'number': 195, 'closed': datetime.datetime(2023, 6, 6, 22, 32, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 26, 12, 26, 48, tzinfo=datetime.timezone.utc), 'time_taken': 986742.0, 'time_delta': '11 days, 10:05:42', 'additions': 26, 'deletions': 4, 'state': 'closed'}, {'id': 1343515499, 'number': 187, 'closed': datetime.datetime(2023, 5, 13, 23, 3, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 9, 10, 0, 1, tzinfo=datetime.timezone.utc), 'time_taken': 392610.0, 'time_delta': '4 days, 13:03:30', 'additions': 8, 'deletions': 15, 'state': 'closed'}, {'id': 1322991312, 'number': 181, 'closed': datetime.datetime(2023, 4, 21, 19, 10, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 21, 12, 3, 45, tzinfo=datetime.timezone.utc), 'time_taken': 25598.0, 'time_delta': '7:06:38', 'additions': 47, 'deletions': 3, 'state': 'closed'}, {'id': 1310753813, 'number': 178, 'closed': datetime.datetime(2023, 5, 8, 21, 20, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 12, 12, 0, 19, tzinfo=datetime.timezone.utc), 'time_taken': 2280040.0, 'time_delta': '26 days, 9:20:40', 'additions': 102, 'deletions': 18, 'state': 'closed'}, {'id': 1306775652, 'number': 175, 'closed': datetime.datetime(2023, 4, 13, 19, 40, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 9, 15, 17, 59, tzinfo=datetime.timezone.utc), 'time_taken': 361356.0, 'time_delta': '4 days, 4:22:36', 'additions': 159, 'deletions': 0, 'state': 'closed'}, {'id': 1306717243, 'number': 174, 'closed': datetime.datetime(2023, 4, 13, 19, 48, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 9, 10, 50, 46, tzinfo=datetime.timezone.utc), 'time_taken': 377884.0, 'time_delta': '4 days, 8:58:04', 'additions': 22, 'deletions': 27, 'state': 'closed'}, {'id': 1304752801, 'number': 172, 'closed': datetime.datetime(2023, 4, 21, 16, 14, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 6, 13, 23, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1306287.0, 'time_delta': '15 days, 2:51:27', 'additions': 88, 'deletions': 14, 'state': 'closed'}, {'id': 1304355744, 'number': 171, 'closed': datetime.datetime(2023, 4, 6, 17, 6, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 6, 8, 56, 45, tzinfo=datetime.timezone.utc), 'time_taken': 29387.0, 'time_delta': '8:09:47', 'additions': 28, 'deletions': 5, 'state': 'closed'}, {'id': 1166683983, 'number': 160, 'closed': datetime.datetime(2023, 1, 19, 13, 13, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 15, 12, 9, 54, tzinfo=datetime.timezone.utc), 'time_taken': 3027807.0, 'time_delta': '35 days, 1:03:27', 'additions': 49, 'deletions': 23, 'state': 'closed'}, {'id': 1162825635, 'number': 159, 'closed': datetime.datetime(2023, 1, 23, 20, 5, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 13, 11, 32, 40, tzinfo=datetime.timezone.utc), 'time_taken': 3573146.0, 'time_delta': '41 days, 8:32:26', 'additions': 17, 'deletions': 13, 'state': 'closed'}, {'id': 926339184, 'number': 143, 'closed': datetime.datetime(2022, 5, 3, 10, 57, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 3, 8, 45, 27, tzinfo=datetime.timezone.utc), 'time_taken': 7951.0, 'time_delta': '2:12:31', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 926337098, 'number': 142, 'closed': datetime.datetime(2022, 5, 3, 13, 52, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 3, 8, 42, 23, tzinfo=datetime.timezone.utc), 'time_taken': 18625.0, 'time_delta': '5:10:25', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 864983796, 'number': 137, 'closed': datetime.datetime(2022, 3, 8, 14, 48, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 26, 18, 46, 12, tzinfo=datetime.timezone.utc), 'time_taken': 849748.0, 'time_delta': '9 days, 20:02:28', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 845617462, 'number': 134, 'closed': datetime.datetime(2022, 2, 12, 14, 41, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 10, 16, 47, 3, tzinfo=datetime.timezone.utc), 'time_taken': 165239.0, 'time_delta': '1 day, 21:53:59', 'additions': 32, 'deletions': 3, 'state': 'closed'}, {'id': 839595897, 'number': 133, 'closed': datetime.datetime(2022, 2, 16, 18, 50, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 3, 18, 37, 23, tzinfo=datetime.timezone.utc), 'time_taken': 1124011.0, 'time_delta': '13 days, 0:13:31', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 838031055, 'number': 130, 'closed': datetime.datetime(2022, 2, 2, 13, 38, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 2, 7, 47, 31, tzinfo=datetime.timezone.utc), 'time_taken': 21030.0, 'time_delta': '5:50:30', 'additions': 19, 'deletions': 11, 'state': 'closed'}]"
