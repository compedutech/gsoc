pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
712781699,GRC: View-Only Mode,"This PR adds the view-only mode to the GRC, including the core-features from https://github.com/gnuradio/gnuradio/pull/4838 as well as the GUI parts of the mode.

This feature saves expression's evaluated values along with the expressions themselves in the grc-file. If the view-only mode is enabled (toggled in `File>Enable View-Only Mode`) untrusted flow graphs are opened using the saved expressions, and with evaluation disabled, to prevent arbitrary code execution attacks. 

When the user performs some non-view only action (defined in [`gui/Application.py`](https://github.com/gnuradio/gnuradio/commit/55ea8837694cae15e5682f8a3a62c64a6f2c6ba9#diff-a720b612a9bb32b2def305f3e5ffa79d7030b8b9474eab3dd71d23d2b4832dbeR124)) or if opening a flow-graph missing the saved evaluated values the trust prompt is displayed to the user. In the trust prompt the user may choose to trust the flow graph (once or indefinitely), or cancel the prompt.

In addition to the prompt there is also a trust manager dialog where the user can add or remove indefinitely trusted flow graphs, this acts as an interface to the user's config where the paths of the flow graphs are stored. This also supports trusting directories, meaning that any flow graphs inside that directory are also trusted.

In the prompt there is an expression overview which gathers the expressions that would be evaluated, including the expressions originating from the flow graph (parameters) and from the block definitions. The overview should ideally filter out any expression that is obviously benign. Though, currently it only filters out literals using `ast.literal_eval`.

I'd love to get some feedback on:
- Language: are the prompt messages clear?
- UX: are there parts of the feature that are confusing, annoying? Would be great to get some opinions from people less involved with the feature as well, to find issues I wouldn't spot.
- Code
- anything else

For further information on the View-Only mode itself and my GSoC work I refer to [my mail on the discuss mailing list.](https://lists.gnu.org/archive/html/discuss-gnuradio/2021-05/msg00122.html)",False,5004,https://api.github.com/repos/gnuradio/gnuradio/pulls/5004,https://github.com/gnuradio/gnuradio/pull/5004,closed,1045,83,26,4,9,19,2,0,"[{'name': 'New Feature'}, {'name': 'GRC'}]",2021-08-14 13:57:50+00:00,2021-11-19 20:06:07+00:00,8402897.0,"97 days, 6:08:17","[{'comment_id': 690604385, 'comment_body': ""I suspect this fails for flowgraphs with dependent hier_block in them. These can get loaded and generated as well, but they won't be trusted by default. I would change this to simply trust all flowgraphs. "", 'comment_created': datetime.datetime(2021, 8, 17, 18, 4, 30, tzinfo=datetime.timezone.utc), 'commenter': 'skoslowski', 'type': 'User'}, {'comment_id': 690605871, 'comment_body': 'Early exit?\r\n```suggestion\r\n        if self.view_only:\r\n            return\r\n```', 'comment_created': datetime.datetime(2021, 8, 17, 18, 6, 48, tzinfo=datetime.timezone.utc), 'commenter': 'skoslowski', 'type': 'User'}, {'comment_id': 690606808, 'comment_body': 'Is this a left-over from the ""best-effort"" loading experiments?', 'comment_created': datetime.datetime(2021, 8, 17, 18, 8, 3, tzinfo=datetime.timezone.utc), 'commenter': 'skoslowski', 'type': 'User'}, {'comment_id': 690607378, 'comment_body': 'Switch to early return?', 'comment_created': datetime.datetime(2021, 8, 17, 18, 8, 57, tzinfo=datetime.timezone.utc), 'commenter': 'skoslowski', 'type': 'User'}, {'comment_id': 690608566, 'comment_body': ""This attributes of `Param` should not have a leading `_` if they're accessed from outside the class"", 'comment_created': datetime.datetime(2021, 8, 17, 18, 10, 39, tzinfo=datetime.timezone.utc), 'commenter': 'skoslowski', 'type': 'User'}, {'comment_id': 690610192, 'comment_body': 'That `data` argument is not needed if I recall our last talk correctly', 'comment_created': datetime.datetime(2021, 8, 17, 18, 13, 10, tzinfo=datetime.timezone.utc), 'commenter': 'skoslowski', 'type': 'User'}, {'comment_id': 690611261, 'comment_body': 'The `viewl_only` attribute seems to be set twice. Here and in `self.make_flow_graph()`. I suspect this one can be removed', 'comment_created': datetime.datetime(2021, 8, 17, 18, 14, 41, tzinfo=datetime.timezone.utc), 'commenter': 'skoslowski', 'type': 'User'}, {'comment_id': 690612764, 'comment_body': '```suggestion\r\nThis flow graph file is missing the values needed to open it in view only-mode. \\\r\n```', 'comment_created': datetime.datetime(2021, 8, 17, 18, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'skoslowski', 'type': 'User'}, {'comment_id': 690613307, 'comment_body': 'This can be a free function outside of the class', 'comment_created': datetime.datetime(2021, 8, 17, 18, 17, 40, tzinfo=datetime.timezone.utc), 'commenter': 'skoslowski', 'type': 'User'}, {'comment_id': 690614635, 'comment_body': '```suggestion\r\n                    if expr and not (expr.isidentifier() or self.is_literal(expr)):\r\n```', 'comment_created': datetime.datetime(2021, 8, 17, 18, 19, 54, tzinfo=datetime.timezone.utc), 'commenter': 'skoslowski', 'type': 'User'}, {'comment_id': 690614853, 'comment_body': '```suggestion\r\n            for param in block.params.values():\r\n```', 'comment_created': datetime.datetime(2021, 8, 17, 18, 20, 13, tzinfo=datetime.timezone.utc), 'commenter': 'skoslowski', 'type': 'User'}, {'comment_id': 690615743, 'comment_body': '```suggestion\r\n                if value and not (value.isidentifier() or self.is_literal(value)):\r\n```', 'comment_created': datetime.datetime(2021, 8, 17, 18, 21, 39, tzinfo=datetime.timezone.utc), 'commenter': 'skoslowski', 'type': 'User'}, {'comment_id': 690616900, 'comment_body': ""Shouldn't this be already handled in `make_flow_graph()`?"", 'comment_created': datetime.datetime(2021, 8, 17, 18, 23, 13, tzinfo=datetime.timezone.utc), 'commenter': 'skoslowski', 'type': 'User'}, {'comment_id': 690619358, 'comment_body': 'Maybe remove this, now that is in the tests?', 'comment_created': datetime.datetime(2021, 8, 17, 18, 26, 52, tzinfo=datetime.timezone.utc), 'commenter': 'skoslowski', 'type': 'User'}, {'comment_id': 690737434, 'comment_body': 'Yeah, good find!', 'comment_created': datetime.datetime(2021, 8, 17, 21, 30, 41, tzinfo=datetime.timezone.utc), 'commenter': 'oscekh', 'type': 'User'}, {'comment_id': 690745428, 'comment_body': ""MainWindow doesn't pass a file path to `make_flow_graph` which means `is_trusted` will fail in `make_flow_graph` but succeed in MainWindow (if trusted). So `make_flow_graph` has the check for the times a path is provided directly, but in the case of MainWindow it is checked outside (as you wouldn't want to pass the path since it would parse+import as well).\r\n\r\n```python\r\ndef make_flow_graph(self, from_filename=None):\r\n    fg = self.FlowGraph(parent=self)\r\n    if not self.view_only_mode or self.is_trusted(from_filename):\r\n        fg.view_only = False\r\n    if from_filename:\r\n        data = self.parse_flow_graph(from_filename)\r\n        fg.grc_file_path = from_filename\r\n        fg.import_data(data)\r\n    return fg\r\n```\r\nThough, there may be a more elegant solution. I'll try to think of one!"", 'comment_created': datetime.datetime(2021, 8, 17, 21, 45, 42, tzinfo=datetime.timezone.utc), 'commenter': 'oscekh', 'type': 'User'}, {'comment_id': 690746127, 'comment_body': 'yeah, somehow missed that it was still there', 'comment_created': datetime.datetime(2021, 8, 17, 21, 47, 10, tzinfo=datetime.timezone.utc), 'commenter': 'oscekh', 'type': 'User'}, {'comment_id': 693341264, 'comment_body': 'I\'m getting this warning:\r\n```\r\n/usr/local/lib/python3.9/site-packages/gnuradio/grc/gui/Dialogs.py:512: PyGTKDeprecationWarning: Using positional arguments with the GObject constructor has been deprecated. Please specify keyword(s) for ""label"" or use a class specific constructor. See: https://wiki.gnome.org/PyGObject/InitializerDeprecations\r\n  message_label = Gtk.Label(message)\r\n```', 'comment_created': datetime.datetime(2021, 8, 21, 11, 10, 55, tzinfo=datetime.timezone.utc), 'commenter': 'haakov', 'type': 'User'}, {'comment_id': 693506342, 'comment_body': ""Hmm, did not see that, thanks for pointing it out! I've made it a keyword arg so it should be fixed now."", 'comment_created': datetime.datetime(2021, 8, 22, 13, 56, 59, tzinfo=datetime.timezone.utc), 'commenter': 'oscekh', 'type': 'User'}]","[{'commit_sha': '1183476354d1b27a1c9ff90ff2880b3fd3429bd1', 'committer_username': 'oscekh', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 28, 20, 31, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efd3b813c9706b62775fd46a406e9ff85629a868', 'committer_username': 'oscekh', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 28, 20, 31, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dda957f0e6a14db0448ac866a3a3ab4139c79cab', 'committer_username': 'oscekh', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 28, 20, 31, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5851fb14c32de96b632fedd19e6a099754fecab4', 'committer_username': 'oscekh', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 28, 20, 31, 15, tzinfo=datetime.timezone.utc)}]",,17533340,,User,,8,,3,4

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
3030065,gnuradio,gnuradio/gnuradio,C++,1882,4975,234,479,15658,463,14,39,"[{'id': 712781699, 'number': 5004, 'closed': datetime.datetime(2021, 11, 19, 20, 6, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 14, 13, 57, 50, tzinfo=datetime.timezone.utc), 'time_taken': 8402897.0, 'time_delta': '97 days, 6:08:17', 'additions': 1045, 'deletions': 83, 'state': 'closed'}, {'id': 683763013, 'number': 4838, 'closed': datetime.datetime(2021, 11, 3, 14, 49, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 14, 47, 4, tzinfo=datetime.timezone.utc), 'time_taken': 10454527.0, 'time_delta': '121 days, 0:02:07', 'additions': 732, 'deletions': 85, 'state': 'closed'}]"
