pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
952595788,NormalizingFlow class and Affine transformation created using Pytorch,"## Creation of NormalizingFlow class using Pytorch.

Fix one model of #2863 

The main classes of this PR are `NormalizingFlow` (model) and `Affine` (transformation) using Pytorch. Documentation and tests need to be done, nevertheless, I wanted to show some progress. Also, work needs to be done with the `NormalizingFlowModel` class. This class makes it possible to work following DeepChem API by using a `TorchModel`.


## Type of change

Please check the option that is related to your PR.

- [ ] Bug fix (non-breaking change which fixes an issue)
- [x] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
  - In this case, we recommend discussing your modification on GitHub issues before creating the PR
- [ ] Documentations (modification for documents)

## Checklist

- [x] My code follows [the style guidelines of this project](https://deepchem.readthedocs.io/en/latest/development_guide/coding.html)
  - [x] Run `yapf -i <modified file>` and check no errors (**yapf version must be  0.22.0**)
  - [x] Run `mypy -p deepchem` and check no errors
  - [x] Run `flake8 <modified file> --count` and check no errors
  - [x] Run `python -m doctest <modified file>` and check no errors
- [x] I have performed a self-review of my own code
- [x] I have commented my code, particularly in hard-to-understand areas
- [x] I have made corresponding changes to the documentation
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] New unit tests pass locally with my changes
- [x] I have checked my code and corrected any misspellings
",True,2918,https://api.github.com/repos/deepchem/deepchem/pulls/2918,https://github.com/deepchem/deepchem/pull/2918,closed,136,1,4,15,4,13,0,0,[],2022-06-01 01:14:43+00:00,2022-06-13 22:27:50+00:00,1113187.0,"12 days, 21:13:07","[{'comment_id': 888668286, 'comment_body': 'typo : determinat \r\ncorrected : determinant', 'comment_created': datetime.datetime(2022, 6, 3, 6, 59, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ARY2260', 'type': 'User'}, {'comment_id': 888669275, 'comment_body': 'typo : dimenssion\r\ncorrected : dimension', 'comment_created': datetime.datetime(2022, 6, 3, 7, 0, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ARY2260', 'type': 'User'}, {'comment_id': 888670080, 'comment_body': 'add a new empty line below this. It helps in passing the tests.', 'comment_created': datetime.datetime(2022, 6, 3, 7, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ARY2260', 'type': 'User'}, {'comment_id': 888672157, 'comment_body': 'I think type annotation and docstring missing for forward() and inverse().', 'comment_created': datetime.datetime(2022, 6, 3, 7, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ARY2260', 'type': 'User'}, {'comment_id': 888675503, 'comment_body': 'Flake8 tests show errors for unused imports. I am not sure if it is tested in checks performed on PRs. Though if it does happen, your PR might get stuck in checks.', 'comment_created': datetime.datetime(2022, 6, 3, 7, 10, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ARY2260', 'type': 'User'}, {'comment_id': 890328980, 'comment_body': 'Can you add a usage example?', 'comment_created': datetime.datetime(2022, 6, 6, 16, 33, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 890330722, 'comment_body': 'Can you add to docs at https://github.com/deepchem/deepchem/blob/master/docs/source/api_reference/layers.rst?', 'comment_created': datetime.datetime(2022, 6, 6, 16, 35, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 890332485, 'comment_body': 'Can you add a docstring?', 'comment_created': datetime.datetime(2022, 6, 6, 16, 37, 58, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 890333314, 'comment_body': 'What are shapes in, what are shape out? Can you add to docstring', 'comment_created': datetime.datetime(2022, 6, 6, 16, 39, 2, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 893701394, 'comment_body': 'All these should be `>>>` since otherwise test will not run. (Some examples leave `>>>` out because the example is known to not run on doctest)', 'comment_created': datetime.datetime(2022, 6, 9, 16, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 893702795, 'comment_body': ""See https://numpydoc.readthedocs.io/en/latest/format.html. This docstring isn't formatted correctly. Should be\r\n\r\n```\r\ndim: int\r\n  Value of the Nth dimension...\r\n```"", 'comment_created': datetime.datetime(2022, 6, 9, 16, 8, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 893703076, 'comment_body': ""This isn't in numpydoc style. Check style guide at https://numpydoc.readthedocs.io/en/latest/format.html"", 'comment_created': datetime.datetime(2022, 6, 9, 16, 8, 26, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 893704176, 'comment_body': 'Needs to follow numpydoc style', 'comment_created': datetime.datetime(2022, 6, 9, 16, 9, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}]","[{'commit_sha': '5d58797e3163bfa1ead6c678244d03c9bae19ad0', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6c4420fb712e1f80d4353470457dd26d0df30a8', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d0841844a155b63d49eb5c96884a2408b50229b', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d17a9bfcd14361fedc1a21588d884e5bc7c7113', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60bba72b1bae62c2aad3d58f2066ee5895affb34', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1554b720d70fc13333106d48cb65a8eb54afd433', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '174ccff453a1958aa8fb408d8cc8d8be11d15820', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8a14a3c2ea3f8a2550e653ad9b2657ca386a367', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6eefae50b203cc95b5b197dfb74befad289ec3a', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9eabd9613c336d3b413132041106893fcff8d19d', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a36a7a0eb6560156c5be6f0cc5523c17e79591e4', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9e6477d5e32fffd10ef189b4522e64ae0352ce3', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ca01555b57e35864806214a8e644e3d63ba506c', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '796600590f0a662b8fc81bff90e40afc3231b595', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bb5afc0ea09da81875da49310162cd183ea40da', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}]",José Antonio Sigüenza,80292371,,User,,13,,3,7
968340218,Normalizing Flow Torch Model,"# Pull Request

## Description

Fix #2863 

The creation of this model would solve one of the listed models to be ported at #2863. Also, to complete this model, a class that considers Deepchem's API must be added.


## Type of change

Please check the option that is related to your PR.

- [ ] Bug fix (non-breaking change which fixes an issue)
- [x] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
  - In this case, we recommend to discuss your modification on GitHub issues before creating the PR
- [x] Documentations (modification for documents)

## Checklist

- [x] My code follows [the style guidelines of this project](https://deepchem.readthedocs.io/en/latest/development_guide/coding.html)
  - [x] Run `yapf -i <modified file>` and check no errors (**yapf version must be  0.22.0**)
  - [x] Run `mypy -p deepchem` and check no errors
  - [x] Run `flake8 <modified file> --count` and check no errors
  - [ ] Run `python -m doctest <modified file>` and check no errors
- [x] I have performed a self-review of my own code
- [x] I have commented my code, particularly in hard-to-understand areas
- [x] I have made corresponding changes to the documentation
- [ ] I have added tests that prove my fix is effective or that my feature works
- [ ] New unit tests pass locally with my changes
- [x] I have checked my code and corrected any misspellings
",True,2944,https://api.github.com/repos/deepchem/deepchem/pulls/2944,https://github.com/deepchem/deepchem/pull/2944,closed,161,3,3,13,6,12,0,0,[],2022-06-15 15:39:13+00:00,2022-07-01 02:53:11+00:00,1336438.0,"15 days, 11:13:58","[{'comment_id': 900420661, 'comment_body': 'Can you add a usage example here?', 'comment_created': datetime.datetime(2022, 6, 17, 18, 36, 7, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 900421107, 'comment_body': 'Can you add some additional unit tests?', 'comment_created': datetime.datetime(2022, 6, 17, 18, 36, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 903959461, 'comment_body': 'Should `test_normalizing_flow_pytorch`', 'comment_created': datetime.datetime(2022, 6, 22, 16, 5, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 903962139, 'comment_body': 'Needs to be formatted in numpydoc style https://numpydoc.readthedocs.io/en/latest/format.html', 'comment_created': datetime.datetime(2022, 6, 22, 16, 7, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 903965098, 'comment_body': '`MultivariateNormal` is not imported at the top', 'comment_created': datetime.datetime(2022, 6, 22, 16, 8, 52, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 904025643, 'comment_body': 'I would add some of the canonical Normalizing Flow references here (you can find them in the FastFlows paper) and mention the key advantages like exact log-likelihood computation.', 'comment_created': datetime.datetime(2022, 6, 22, 16, 55, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ncfrey', 'type': 'User'}, {'comment_id': 904026508, 'comment_body': 'Might want to call this `output` or something rather than `tensor`', 'comment_created': datetime.datetime(2022, 6, 22, 16, 56, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ncfrey', 'type': 'User'}, {'comment_id': 904027482, 'comment_body': 'Is there a class for `base_distribution` that you can type hint here?', 'comment_created': datetime.datetime(2022, 6, 22, 16, 57, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ncfrey', 'type': 'User'}, {'comment_id': 904960728, 'comment_body': 'Suree!! Definitely considering FastFlows paper 🙌🏼', 'comment_created': datetime.datetime(2022, 6, 23, 12, 32, 2, tzinfo=datetime.timezone.utc), 'commenter': 'JoseAntonioSiguenza', 'type': 'User'}, {'comment_id': 904965913, 'comment_body': 'Yes, so I have some time on deciding which type hint class to write here. I looked that some CI fails raised If used `torch.Tensor`. This is mainly because `base_distribution` is a `torch.distributions` object. I will write `torch.distributions`, does this make sense 🤔? ', 'comment_created': datetime.datetime(2022, 6, 23, 12, 37, 42, tzinfo=datetime.timezone.utc), 'commenter': 'JoseAntonioSiguenza', 'type': 'User'}, {'comment_id': 905051237, 'comment_body': 'Is `base_distribution` always a subclass of `torch.distributions.distribution.Distribution`? If so, you can use that for the type hint!', 'comment_created': datetime.datetime(2022, 6, 23, 13, 52, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ncfrey', 'type': 'User'}, {'comment_id': 909594171, 'comment_body': 'Awesome!! I will Include this type hint as well as the `Transforms` class and FastFlow reference on my next PR 🙌🏼', 'comment_created': datetime.datetime(2022, 6, 29, 12, 53, 46, tzinfo=datetime.timezone.utc), 'commenter': 'JoseAntonioSiguenza', 'type': 'User'}]","[{'commit_sha': '44f2ba47fdf2d76f1d7c53a71b371cca39d6c6a3', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fce2424e58eb8d226014657c7b30f3d1cf526413', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e168e2a459663f1d3bf5cb777ee0c942d5b340d3', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '757c4793d182ae611c8b9fc5f7efefabd0193ddc', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f2d3c8e0c5f9fde45e4c13a999b34a3c89c9ba7', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfedbea9bbbcfd5b676fc7ff03c75ae8728bf934', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cc29fab1db72afba536a65ea45eee92943dd302', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d864333d73c677b82bb0d52112be7f6b24eb9c4', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51175b3d8ce22ddb4a34fb523d95fdef2b8e220d', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a637746e2c229f13c0cd3caa4a528a14fe68415', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ef218c0691aad0982d70d228e0d69f756a005c4', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48895d01fbc750625cbcd0e5bbf203c241161969', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c3aacd0c72a34dfca9990344cf89a15df3324f6', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}]",José Antonio Sigüenza,80292371,,User,,13,,3,7
997850597,Real NVP Transformation Layer for Normalizing Flows,"## Description

Following implementing a Normalizing Flow model using Pytorch, this PR includes a new layer/node known as [Real NVP.](http://www0.cs.ucl.ac.uk/staff/A.Sztrajman/webpage/blog/rnvp/rnvp.html) The main advantage of this transformation layer is the ease of computing the inverse pass. It is important to mention that the scope of this PR is to include the layer with its model, which is slightly different from the existing `NormalizingFlow` model.


## Type of change

Please check the option that is related to your PR.

- [ ] Bug fix (non-breaking change which fixes an issue)
- [x] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
  - In this case, we recommend to discuss your modification on GitHub issues before creating the PR
- [ ] Documentations (modification for documents)

## Checklist

- [x] My code follows [the style guidelines of this project](https://deepchem.readthedocs.io/en/latest/development_guide/coding.html)
  - [x] Run `yapf -i <modified file>` and check no errors (**yapf version must be  0.32.0**)
  - [ ] Run `mypy -p deepchem` and check no errors
  - [x ] Run `flake8 <modified file> --count` and check no errors
  - [x] Run `python -m doctest <modified file>` and check no errors
- [x] I have performed a self-review of my own code
- [x] I have commented my code, particularly in hard-to-understand areas
- [x] I have made corresponding changes to the documentation
- [ ] I have added tests that prove my fix is effective or that my feature works
- [ ] New unit tests pass locally with my changes
- [x] I have checked my code and corrected any misspellings
",True,2996,https://api.github.com/repos/deepchem/deepchem/pulls/2996,https://github.com/deepchem/deepchem/pull/2996,closed,209,6,6,25,1,9,0,0,[],2022-07-15 15:01:53+00:00,2022-08-23 16:07:09+00:00,3373516.0,"39 days, 1:05:16","[{'comment_id': 931255130, 'comment_body': 'This should match the numpydoc style. Take a look at\r\n\r\n```\r\nReturns\r\n--------\r\noutput shape of ...\r\n```', 'comment_created': datetime.datetime(2022, 7, 27, 16, 13, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 931255285, 'comment_body': 'Same comment here', 'comment_created': datetime.datetime(2022, 7, 27, 16, 13, 54, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 933278407, 'comment_body': 'The changes have been added ✅', 'comment_created': datetime.datetime(2022, 7, 29, 13, 38, 37, tzinfo=datetime.timezone.utc), 'commenter': 'JoseAntonioSiguenza', 'type': 'User'}, {'comment_id': 949344835, 'comment_body': 'Looks like a duplicated line?', 'comment_created': datetime.datetime(2022, 8, 18, 16, 11, 43, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 949345855, 'comment_body': 'Formatting here is a bit off:\r\n\r\n```\r\nx: Sequence\r\n Should have input shape (samples, dim)\r\n```', 'comment_created': datetime.datetime(2022, 8, 18, 16, 12, 51, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 949346007, 'comment_body': 'Same here', 'comment_created': datetime.datetime(2022, 8, 18, 16, 13, 1, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 949346417, 'comment_body': 'Can you add an example of calling the layer?', 'comment_created': datetime.datetime(2022, 8, 18, 16, 13, 28, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 949346984, 'comment_body': 'Can you add the new layer to the docs as well?', 'comment_created': datetime.datetime(2022, 8, 18, 16, 14, 3, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 950321686, 'comment_body': 'I think this new layer is already added at `docs/source/api_reference/layers.rst`', 'comment_created': datetime.datetime(2022, 8, 19, 15, 34, 56, tzinfo=datetime.timezone.utc), 'commenter': 'JoseAntonioSiguenza', 'type': 'User'}]","[{'commit_sha': '2506e755756c427c40053bd3d7774ba44445f81b', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aaf85dcba8acc73ebceeea8a8246bf731706b32f', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00071feea0f09609de669a6db56768b0a9daa6a8', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6543dc6e81a87eba2b420b57430c496b7a0708be', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbffd27449d8cfb15c0e53b7f601cf621d3568e4', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '809abd9f3b1d476a449e76fc855ec90acd61647c', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f099444898611c78173bafa4e46cd7bb8a3f0bf2', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fed55707519815fe242ed8f1fce9c48c986b3406', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de26192fc3deb5c34cd196e5303a47502c174a35', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adac652438070e94dbb5c195d10fdd3e30ca0afb', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa30b1eab8a1b74f85ff9bdb67c54ff9fec62093', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d1c28630bdbaf9ace1c9426ac1958542537bad0', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05f6b796686af7f78946f0bc4a3f9308934432c4', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51fe28dcddc86e4540dee1bd2e9d88ddbcf52bb9', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00dd1382ba30fa29dcc4516028da78ccb370abe0', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a708ebf4fe539ad738aa74e3a7e902c92a10df3a', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4135d70f18d77f1c0e2ba427934cf433d5e8be9c', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd194fd6b3d421a919f8a27f0ab5dae7a4b7fd20f', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '881dacaec831d6feb8abf6feb36cfa548567edf7', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34aba3d514abac0d869181149080fe060be06d80', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57f2ef7ffa8b25812a004eb62fd41ceea13f964b', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f5c3dcd89551d86081c6bfddb95c5b807b9241e', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b64687f64e7ca04b97a0aab8d7f21edcd05f422', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5395c5157df5f9bac820d1a070c904625b6e979', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '576cfa1e7dc7c8e7699e87f85f16f560fdb24db1', 'committer_username': 'JoseAntonioSiguenza', 'committer_name': 'José Antonio Sigüenza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 8, 22, 33, 45, tzinfo=datetime.timezone.utc)}]",José Antonio Sigüenza,80292371,,User,,13,,3,7

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
43098215,deepchem,deepchem/deepchem,Python,1650,5354,144,247,10525,623,15,164,"[{'id': 1755092196, 'number': 3881, 'closed': datetime.datetime(2024, 3, 7, 4, 24, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 4, 16, 26, 54, tzinfo=datetime.timezone.utc), 'time_taken': 215848.0, 'time_delta': '2 days, 11:57:28', 'additions': 2905, 'deletions': 34, 'state': 'closed'}, {'id': 1637340317, 'number': 3702, 'closed': datetime.datetime(2023, 12, 11, 17, 29, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 9, 18, 11, 25, tzinfo=datetime.timezone.utc), 'time_taken': 170309.0, 'time_delta': '1 day, 23:18:29', 'additions': 8, 'deletions': 6, 'state': 'closed'}, {'id': 1636526843, 'number': 3698, 'closed': datetime.datetime(2023, 12, 8, 23, 1, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 8, 17, 19, 13, tzinfo=datetime.timezone.utc), 'time_taken': 20555.0, 'time_delta': '5:42:35', 'additions': 446, 'deletions': 8, 'state': 'closed'}, {'id': 1575332243, 'number': 3638, 'closed': datetime.datetime(2023, 10, 27, 16, 27, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 26, 18, 13, 1, tzinfo=datetime.timezone.utc), 'time_taken': 80077.0, 'time_delta': '22:14:37', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1560572867, 'number': 3617, 'closed': datetime.datetime(2023, 10, 17, 19, 27, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 17, 13, 22, 13, tzinfo=datetime.timezone.utc), 'time_taken': 21901.0, 'time_delta': '6:05:01', 'additions': 275, 'deletions': 1, 'state': 'closed'}, {'id': 1554093565, 'number': 3606, 'closed': None, 'created': datetime.datetime(2023, 10, 12, 12, 53, 30, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 274, 'deletions': 0, 'state': 'open'}, {'id': 1534594303, 'number': 3582, 'closed': None, 'created': datetime.datetime(2023, 9, 28, 17, 27, 43, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 245, 'deletions': 2, 'state': 'open'}, {'id': 1531027155, 'number': 3579, 'closed': None, 'created': datetime.datetime(2023, 9, 26, 17, 28, 44, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 454, 'deletions': 0, 'state': 'open'}, {'id': 1344272181, 'number': 3387, 'closed': datetime.datetime(2023, 5, 18, 15, 30, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 9, 19, 9, 37, tzinfo=datetime.timezone.utc), 'time_taken': 764449.0, 'time_delta': '8 days, 20:20:49', 'additions': 1847, 'deletions': 1, 'state': 'closed'}, {'id': 1325477407, 'number': 3368, 'closed': datetime.datetime(2023, 5, 1, 16, 7, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 24, 13, 35, 44, tzinfo=datetime.timezone.utc), 'time_taken': 613883.0, 'time_delta': '7 days, 2:31:23', 'additions': 63, 'deletions': 1, 'state': 'closed'}, {'id': 997850597, 'number': 2996, 'closed': datetime.datetime(2022, 8, 23, 16, 7, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 15, 15, 1, 53, tzinfo=datetime.timezone.utc), 'time_taken': 3373516.0, 'time_delta': '39 days, 1:05:16', 'additions': 209, 'deletions': 6, 'state': 'closed'}, {'id': 968340218, 'number': 2944, 'closed': datetime.datetime(2022, 7, 1, 2, 53, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 15, 15, 39, 13, tzinfo=datetime.timezone.utc), 'time_taken': 1336438.0, 'time_delta': '15 days, 11:13:58', 'additions': 161, 'deletions': 3, 'state': 'closed'}, {'id': 952595788, 'number': 2918, 'closed': datetime.datetime(2022, 6, 13, 22, 27, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 1, 1, 14, 43, tzinfo=datetime.timezone.utc), 'time_taken': 1113187.0, 'time_delta': '12 days, 21:13:07', 'additions': 136, 'deletions': 1, 'state': 'closed'}, {'id': 874296914, 'number': 2885, 'closed': datetime.datetime(2022, 4, 8, 2, 13, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 8, 15, 16, 56, tzinfo=datetime.timezone.utc), 'time_taken': 2631402.0, 'time_delta': '30 days, 10:56:42', 'additions': 1245, 'deletions': 1695, 'state': 'closed'}, {'id': 806194499, 'number': 2795, 'closed': datetime.datetime(2022, 4, 8, 2, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 20, 1, 39, 19, tzinfo=datetime.timezone.utc), 'time_taken': 9419801.0, 'time_delta': '109 days, 0:36:41', 'additions': 1520, 'deletions': 991, 'state': 'closed'}]"
