pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
706723592,[GSoC] Swift PR,"<!-- What's in this pull request? -->
Replace this paragraph with a description of your changes and rationale. Provide links to external references/discussions if appropriate.

<!-- If this pull request resolves any bugs in the Swift bug tracker, provide a link: -->
Resolves SR-NNNN.

<!--
Before merging this pull request, you must run the Swift continuous integration tests.
For information about triggering CI builds via @swift-ci, see:
https://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci

Thank you for your contribution to Swift!
-->
",False,1,https://api.github.com/repos/stevapple/swift/pulls/1,https://github.com/stevapple/swift/pull/1,open,423,9,34,9,0,5,0,0,[],2021-08-09 17:58:49+00:00,,0.0,,"[{'comment_id': 688100403, 'comment_body': 'Since this has a body, it should be moved into the `.cpp` file.', 'comment_created': datetime.datetime(2021, 8, 12, 21, 34, 15, tzinfo=datetime.timezone.utc), 'commenter': 'drexin', 'type': 'User'}, {'comment_id': 688101066, 'comment_body': 'This should probably provide a little more detail about why it is not allowed.', 'comment_created': datetime.datetime(2021, 8, 12, 21, 35, 30, tzinfo=datetime.timezone.utc), 'commenter': 'drexin', 'type': 'User'}, {'comment_id': 688103004, 'comment_body': 'I think a little more information about when either of these flags should be set would be helpful. Also this should be plural (i.e. `Declaration*s*`).', 'comment_created': datetime.datetime(2021, 8, 12, 21, 39, 1, tzinfo=datetime.timezone.utc), 'commenter': 'drexin', 'type': 'User'}, {'comment_id': 688245036, 'comment_body': 'ðŸ¤”Since this is an experimental feature, we need some flag to allow such syntax, and this error will be thrown if these flags are not specified. I just didnâ€™t come up with a better name?', 'comment_created': datetime.datetime(2021, 8, 13, 5, 4, 54, tzinfo=datetime.timezone.utc), 'commenter': 'stevapple', 'type': 'User'}, {'comment_id': 688245402, 'comment_body': 'AFAIK simple functions and the main initializer stay in `Attr.h`?', 'comment_created': datetime.datetime(2021, 8, 13, 5, 6, 11, tzinfo=datetime.timezone.utc), 'commenter': 'stevapple', 'type': 'User'}]","[{'commit_sha': '5dabb90390aa97c5f7a0681eff3464671340772d', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e37464491c2527468e167387672c822b5b212ff8', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44e4f8727f579cb5b8d81f933cb953ae22da89bf', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd233a44cef7148454ce6d0411135c8be29e575f1', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ecc254b041d491697815d64cef3854a482e17ed0', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '574b1cbc7d7e430adf8c253a3c7ce61d30d5f4d2', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cc970ed7bfe39360c29dbe363f3becfb5e8fb32', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ade2bf600978782a346e0312d93b715047a91ec', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0db861eed21f586ca1eb8df192beee0783683f06', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}]",YR Chen,26525394,stevapple@icloud.com,User,,69,,28,51
706718502,[GSoC] SwiftDriver PR,,False,1,https://api.github.com/repos/stevapple/swift-driver/pulls/1,https://github.com/stevapple/swift-driver/pull/1,open,171,26,6,5,0,4,0,0,[],2021-08-09 17:50:15+00:00,,0.0,,"[{'comment_id': 688106642, 'comment_body': 'Why did this change?', 'comment_created': datetime.datetime(2021, 8, 12, 21, 46, 16, tzinfo=datetime.timezone.utc), 'commenter': 'drexin', 'type': 'User'}, {'comment_id': 688106920, 'comment_body': '```suggestion\r\n      return ""Scripting mode expects exactly 1 input file""\r\n```', 'comment_created': datetime.datetime(2021, 8, 12, 21, 46, 50, tzinfo=datetime.timezone.utc), 'commenter': 'drexin', 'type': 'User'}, {'comment_id': 688107328, 'comment_body': 'Should this be `==`? ', 'comment_created': datetime.datetime(2021, 8, 12, 21, 47, 35, tzinfo=datetime.timezone.utc), 'commenter': 'drexin', 'type': 'User'}, {'comment_id': 688248547, 'comment_body': 'This is what I checked out with SwiftPM 5.5ðŸ¤” Should I revert it?', 'comment_created': datetime.datetime(2021, 8, 13, 5, 16, tzinfo=datetime.timezone.utc), 'commenter': 'stevapple', 'type': 'User'}]","[{'commit_sha': 'd6facec080bdb3e926d73ed5a5122616a2acde6d', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b3ee22fdb49c7f8b61a01ec0af79cf77756d553', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e5d49594f87ab627322dd9c22bfee8968baa418', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b89740ab0a844a0c4b2877d9ff35b58cd907a1f0', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5bcf88e22cb36e03fc64d83997cfb948f1b2508', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}]",YR Chen,26525394,stevapple@icloud.com,User,,69,,28,51
701625880,[GSoC] SwiftPM PR,"_[One line description of your change]_

### Motivation:

_[Explain here the context, and why you're making that change. What is the problem you're trying to solve.]_

### Modifications:

_[Describe the modifications you've done.]_

### Result:

_[After your change, what will change.]_
",False,1,https://api.github.com/repos/stevapple/swift-package-manager/pulls/1,https://github.com/stevapple/swift-package-manager/pull/1,open,906,12,25,23,0,40,0,0,[],2021-08-02 16:58:21+00:00,,0.0,,"[{'comment_id': 687371379, 'comment_body': ""In principle this is correct, but SwiftSyntax is particularly tricky, because of its dependency on the corresponding linker library.  In fact I wasn't able to get the `main` branch to work with Xcode 13 Betas at all.  But as it happens we have two other intended uses of SwiftSyntax, and so I will be working with someone who knows it better than I do to add it as a dependency in a separate PR.  So you can keep this as it is right now, and within not too long we should be able to have this dependency already added through a separate PR."", 'comment_created': datetime.datetime(2021, 8, 12, 4, 4, 5, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687371900, 'comment_body': 'Could this instead just call `getOrCreateSwiftPMCacheDirectory()` and then append the `scripts` subdirectory to it?  Otherwise this function seems to duplicate some of the existing code.', 'comment_created': datetime.datetime(2021, 8, 12, 4, 6, 4, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687372619, 'comment_body': ""Should this perhaps be a different error, indicating that no file was provided (as opposed to that the provided file couldn't be found)?"", 'comment_created': datetime.datetime(2021, 8, 12, 4, 8, 25, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687373497, 'comment_body': 'Is this to separate out any output from the build from the output emitted by the script, once it runs?', 'comment_created': datetime.datetime(2021, 8, 12, 4, 11, 17, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687374343, 'comment_body': ""If `quiet` is set, this will have already been redirected to a buffer that won't be displayed â€” am I understanding that correctly?  In other words, it won't be shown when quiet?\r\n\r\nI think that quiet should perhaps be the default, or to turn it around, that there should be a `verbose` flag that can provide extra information (such as whether cache is used)."", 'comment_created': datetime.datetime(2021, 8, 12, 4, 14, 14, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687374614, 'comment_body': ""Also: is it the case that this only says whether a cache _could_ be used?  It doesn't seem to indicate whether a cache result was actually found, or am I reading that incorrectly?"", 'comment_created': datetime.datetime(2021, 8, 12, 4, 14, 58, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687375287, 'comment_body': 'Should this really end the enumeration, or should the entry be either skipped or listed as a stale entry?', 'comment_created': datetime.datetime(2021, 8, 12, 4, 17, 23, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687375582, 'comment_body': '```suggestion\r\n    _ executablePath: AbsolutePath,\r\n```', 'comment_created': datetime.datetime(2021, 8, 12, 4, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687375640, 'comment_body': '```suggestion\r\n    let pathRelativeToWorkingDirectory = executablePath.relative(to: originalWorkingDirectory)\r\n```', 'comment_created': datetime.datetime(2021, 8, 12, 4, 18, 45, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687375726, 'comment_body': '```suggestion\r\n    try exec(path: executablePath.pathString, args: [pathRelativeToWorkingDirectory.pathString] + arguments)\r\n```', 'comment_created': datetime.datetime(2021, 8, 12, 4, 18, 59, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687376562, 'comment_body': ""It's great in general that you added CMake support here â€” I wonder if it is needed for this particular feature, though, because the CMake support is only used during bootstrapping, i.e. building enough of SwiftPM so that it can build itself.  We could probably simplify but not including this feature during the bootstrapping?  That would safe SwiftSyntax from having to be made to bootstrap."", 'comment_created': datetime.datetime(2021, 8, 12, 4, 21, 53, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687376876, 'comment_body': 'What is the semantic meaning of the `raw` property here?', 'comment_created': datetime.datetime(2021, 8, 12, 4, 22, 53, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687377639, 'comment_body': 'Are these first two tokens that are dropped are known to always be `package` and `import`?', 'comment_created': datetime.datetime(2021, 8, 12, 4, 25, 9, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687378032, 'comment_body': 'Is this temporary for debugging, or should the JSON always be printed?  (i.e. is this what passes it back to the caller?)', 'comment_created': datetime.datetime(2021, 8, 12, 4, 26, 33, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687381467, 'comment_body': 'Also, you should be able to use `String(decoding: data, as: UTF8.self)` do avoid force-unwrap.  If there are invalid sequences in the byte string, it will replace them with placeholders rather than give you nothing back.', 'comment_created': datetime.datetime(2021, 8, 12, 4, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687381858, 'comment_body': 'It would be great to replace the force-unwraps here with something more robust.', 'comment_created': datetime.datetime(2021, 8, 12, 4, 38, 59, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687382317, 'comment_body': 'It would be great to avoid this in the code, but rather throw an error if possible.  I wonder if this `name` property should be computed in this way or if there should be a more explicit function that is clear that it is doing a bunch of checking and that can maybe throw an error.', 'comment_created': datetime.datetime(2021, 8, 12, 4, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687382485, 'comment_body': 'Are the first six digits going to be unique enough?', 'comment_created': datetime.datetime(2021, 8, 12, 4, 41, 2, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687382615, 'comment_body': 'Should these two maybe store `AbsolutePath`s?', 'comment_created': datetime.datetime(2021, 8, 12, 4, 41, 29, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687382997, 'comment_body': ""I think there's a convenience initializer in `AbsolutePath` to do this."", 'comment_created': datetime.datetime(2021, 8, 12, 4, 42, 29, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687383464, 'comment_body': 'All these strings should probably be escaped in case they contain a quote character (unlikely, but good practice in general).', 'comment_created': datetime.datetime(2021, 8, 12, 4, 43, 53, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687384075, 'comment_body': 'This hardcoded 7 seems a little shady â€” what is the suffix that is being dropped here?  Is it ""Sources""?  There is probably a clearer / safer way to do this.  I think there\'s a helper function to drop a suffix if it exists on the path.', 'comment_created': datetime.datetime(2021, 8, 12, 4, 46, 3, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 687441236, 'comment_body': 'Ummm... In fact the `scripts` dir is supposed to be beside `cache`, which I\'m afraid may ""escape"" if we simply append `../scripts` to the cache dir (also, we need to create it if there\'s none, which needs a function to wrap up).\r\nI thought it may be better to hardcode the path with `~/.swiftpm/scripts` to make it more accessible.', 'comment_created': datetime.datetime(2021, 8, 12, 7, 1, 9, tzinfo=datetime.timezone.utc), 'commenter': 'stevapple', 'type': 'User'}, {'comment_id': 687442346, 'comment_body': ""That's weird because I'm building it with Xcode 13 Beta 4/5, on Big Sur.\r\nI think the dependency could be dropped here some day for parsing, but it would help doing things like generating a package."", 'comment_created': datetime.datetime(2021, 8, 12, 7, 3, 4, tzinfo=datetime.timezone.utc), 'commenter': 'stevapple', 'type': 'User'}, {'comment_id': 687442727, 'comment_body': 'Yes. This piece of code is copied from `swift-run`.', 'comment_created': datetime.datetime(2021, 8, 12, 7, 3, 46, tzinfo=datetime.timezone.utc), 'commenter': 'stevapple', 'type': 'User'}, {'comment_id': 687445524, 'comment_body': ""> If quiet is set, this will have already been redirected to a buffer that won't be displayed\r\n\r\nYes. Except that the build fails.\r\n\r\n> Also: is it the case that this only says whether a cache could be used? It doesn't seem to indicate whether a cache result was actually found, or am I reading that incorrectly?\r\n\r\nThe cache name displayed here acts as a shortcut to the file.eg., you can call `swift script run test-67a8a2` instead of `swift script run /Users/yr.chen/Developer/GSoC/test.swift` once the cache is set up.\r\n\r\nCurrently it cannot detect whether there was an up-to-date prebuild. We can add this feature and emit building step (and its outputs) when a cache is exactly hit, making `clean` as a default if the script was prebuilt."", 'comment_created': datetime.datetime(2021, 8, 12, 7, 8, 30, tzinfo=datetime.timezone.utc), 'commenter': 'stevapple', 'type': 'User'}, {'comment_id': 687446059, 'comment_body': ""ðŸ¤”You're right, better skipping instead of failing here."", 'comment_created': datetime.datetime(2021, 8, 12, 7, 9, 27, tzinfo=datetime.timezone.utc), 'commenter': 'stevapple', 'type': 'User'}, {'comment_id': 687446607, 'comment_body': 'This directory is currently excluded from bootstrapping.', 'comment_created': datetime.datetime(2021, 8, 12, 7, 10, 20, tzinfo=datetime.timezone.utc), 'commenter': 'stevapple', 'type': 'User'}, {'comment_id': 687448195, 'comment_body': 'It\'s `@` and `package` here, which we ensured by `if tokens.starts(with: [.atSign, .identifier(""package"")])`.', 'comment_created': datetime.datetime(2021, 8, 12, 7, 12, 59, tzinfo=datetime.timezone.utc), 'commenter': 'stevapple', 'type': 'User'}, {'comment_id': 687450673, 'comment_body': '> Is this temporary for debugging, or should the JSON always be printed? (i.e. is this what passes it back to the caller?)\r\n\r\nThis is always printed. The former design (which is still kept) is `swift-frontend -print-package-declarations <script>`, which prints the declarations in JSON and pass it to SwiftPM.', 'comment_created': datetime.datetime(2021, 8, 12, 7, 16, 47, tzinfo=datetime.timezone.utc), 'commenter': 'stevapple', 'type': 'User'}, {'comment_id': 687451470, 'comment_body': 'These digits will be used as a prefix to the file name, I think the combination is fairly unique. ðŸ¤”', 'comment_created': datetime.datetime(2021, 8, 12, 7, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'stevapple', 'type': 'User'}, {'comment_id': 687452771, 'comment_body': 'These may receive user inputs that is even not a valid path. `String` is better as they had no meanings but for display use.', 'comment_created': datetime.datetime(2021, 8, 12, 7, 20, 29, tzinfo=datetime.timezone.utc), 'commenter': 'stevapple', 'type': 'User'}, {'comment_id': 687456098, 'comment_body': ""This is the current implementation:\r\n```swift\r\npublic init(_ absPath: AbsolutePath, _ relStr: String) {\r\n    self.init(absPath, RelativePath(relStr))\r\n}\r\n```\r\n\r\nThe second parameter is used to init a `RelativePath`, which cannot meet our need.\r\nI'm working on a more robust implementation at apple/swift-tools-support-core#219, but there's more to be done before it can get merged."", 'comment_created': datetime.datetime(2021, 8, 12, 7, 25, 21, tzinfo=datetime.timezone.utc), 'commenter': 'stevapple', 'type': 'User'}, {'comment_id': 687457178, 'comment_body': '```swift\r\nlet productName = scriptPath.basename.spm_dropSuffix("".swift"").spm_mangledToBundleIdentifier()\r\n```\r\n\r\n`productName` is already escaped by `spm_mangledToBundleIdentifier()`.', 'comment_created': datetime.datetime(2021, 8, 12, 7, 27, 4, tzinfo=datetime.timezone.utc), 'commenter': 'stevapple', 'type': 'User'}, {'comment_id': 687459247, 'comment_body': ""It's not a hardcoded one. These should be hyphen and the six hash digits.\r\n\r\nBetter to split the name with `-` and emit the last part? I was not doing it because this shortcut is only supposed to work with a standardized cache name."", 'comment_created': datetime.datetime(2021, 8, 12, 7, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'stevapple', 'type': 'User'}, {'comment_id': 696134734, 'comment_body': ""That makes sense â€” I'm not 100% familiar with how the layout is supposed to look here, it just seemed as if there was some code overlap here."", 'comment_created': datetime.datetime(2021, 8, 25, 21, 43, 41, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 696135273, 'comment_body': 'Great, thanks for clarifying.', 'comment_created': datetime.datetime(2021, 8, 25, 21, 44, 35, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 696136295, 'comment_body': ""Does this logic depend on the order of the file system entries?  `FileSystem.getDirectoryEntries()` doesn't make any guarantees about the order."", 'comment_created': datetime.datetime(2021, 8, 25, 21, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 696137569, 'comment_body': 'Yes, in general using a separator and split on it is ore robust than assuming  a certain number of characters.', 'comment_created': datetime.datetime(2021, 8, 25, 21, 49, 2, tzinfo=datetime.timezone.utc), 'commenter': 'abertelrud', 'type': 'User'}, {'comment_id': 696272802, 'comment_body': 'If it is a valid package layout, there should be exactly one directory under `Sources`, because the package should have only one target.', 'comment_created': datetime.datetime(2021, 8, 26, 4, 5, 49, tzinfo=datetime.timezone.utc), 'commenter': 'stevapple', 'type': 'User'}]","[{'commit_sha': '06f36e33e3b35d7a31e2b9ffdfea423f3521e1de', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36180cc9fe6f2b7af75e73a5ed5f7c214f35ae5b', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e50e43428277d59eddf1b8f06f4ef38a85ae224', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2f747eb8d9fefe9a15621edd28b4c729cf77357', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '027bdc5b0cdfe2414f37d7c7c526878abf5151a5', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e117920041fedfebbe894c0362c34aabe8b493b5', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '195db6ccadd27790bdc83e258173877941308340', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a937c7d35a62a118fda68f59a951794e331883b', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '811f8870a4aef901c22283df3557d1e884ee0e8d', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29e7e41611ea7c4e6b306527e2d359c5c40a8dad', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5824784bb02de827e9e1e7c27e0fe49f75b3703', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22e5601f37e98f0df4a2ea1b02aac6d40465c460', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd82b0c7452a0269f8bb5ec06021d53f2bfb68e59', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6eab23f9865f5c57506b727a858a95100dfacf8', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6192bf6bfd6f639eddabf67f09f60a17fa8dcfd', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '847b584fb692bb3489549f7ae5789c573efeb698', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67e494c374bea48ccedb49c16f9aa8574e03ab50', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a7490bdcc4ebe6ccf229fb39d4e033fbda11a3c', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9baf3769242b1d1577e1f4a31459469f2d2861d9', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '934eea491e070504c688cfe498d17f29fb34e56b', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edd3056a3e53339a56dca2b36ee073c06728dbc4', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee778d99b2519e0388071f27bf8083b5ceb71495', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13ac15181c28cf50b76d44946df722f2c530b8f1', 'committer_username': 'stevapple', 'committer_name': 'YR Chen', 'committer_email': 'stevapple@icloud.com', 'commit_date': datetime.datetime(2017, 3, 19, 16, 19, 51, tzinfo=datetime.timezone.utc)}]",YR Chen,26525394,stevapple@icloud.com,User,,69,,28,51

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
292984200,swift,stevapple/swift,C++,0,0,1,1323,160874,1,342,1,"[{'id': 706723592, 'number': 1, 'closed': None, 'created': datetime.datetime(2021, 8, 9, 17, 58, 49, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 423, 'deletions': 9, 'state': 'open'}]"
295112215,swift-driver,stevapple/swift-driver,Swift,0,0,1,44,1586,1,12,1,"[{'id': 706718502, 'number': 1, 'closed': None, 'created': datetime.datetime(2021, 8, 9, 17, 50, 15, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 171, 'deletions': 26, 'state': 'open'}]"
294642732,swift-package-manager,stevapple/swift-package-manager,Swift,0,0,1,360,6469,1,34,1,"[{'id': 701625880, 'number': 1, 'closed': None, 'created': datetime.datetime(2021, 8, 2, 16, 58, 21, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 906, 'deletions': 12, 'state': 'open'}]"
