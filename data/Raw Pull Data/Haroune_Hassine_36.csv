pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1370458165,Seqcol,"fixes #107 
Here I tried to make retrieve the fna/fasta files that corresponds to a specific accession.
I still didn't make an endpoint for it yet, so it can be tested manually.
The file is downloaded and extracted only, and hasn't been parsed yet.
(Added the pom.xml, which I didn't in the last PR. It contains the dependency for Lombok)",False,110,https://api.github.com/repos/EBIvariation/contig-alias/pulls/110,https://github.com/EBIvariation/contig-alias/pull/110,open,885,0,25,7,0,0,0,0,[],2023-05-30 13:15:24+00:00,,0.0,,[],"[{'commit_sha': '840687a8b8414612b993f319c5b64dcc7bc87159', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '724b91a9dc4e72ab6ed67470f3b218afea5bf42f', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acfad8a3a3b82ca004a37151c81baad50063df02', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a8c1e34da43877504c556b0482fd669264a0a43', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc012d91ea3bcdd4d14f0cfa0235c6faf940b813', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61e166bf121940d2227543067f2e913ca5c17483', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64a1ea2ae6458a99ec2c1a12d74f706ddcce2063', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1383412128,With contig alias,"@tcezard 
This is PR contains the code for the function of the retrieval of the fasta file, parsing it and save the related sequences in the database.
It also contains the service for combining both the retrieval of the assembly report and the corresponding fasta file and constructing the **seqCol Level 2** using the information extracted from these files.
Tests will be made for each functionality to assure their efficiency.  ",False,112,https://api.github.com/repos/EBIvariation/contig-alias/pulls/112,https://github.com/EBIvariation/contig-alias/pull/112,open,947,10,28,6,0,0,0,0,[],2023-06-07 21:33:18+00:00,,0.0,,[],"[{'commit_sha': '840687a8b8414612b993f319c5b64dcc7bc87159', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '724b91a9dc4e72ab6ed67470f3b218afea5bf42f', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acfad8a3a3b82ca004a37151c81baad50063df02', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ce600ef877926d03a8b17fd225c6daa08de3f2c', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16a63f696dcaa87218a5670b2234d9775d30ef4f', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43f50f43ecd65dd8d51255f71ca948c2bf963dae', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1387709106,Recursive approach," ### Implemented the recursive data model
    
    - Created the different levels of sequence collections and store them correctly
    - Created the naming convention table and map it with the seqColL1 object (table)
    - Executed the neccessary tests for each functionality
    - Added the required dependencies and plugins in pom.xml in order to manipulate nosql data",False,113,https://api.github.com/repos/EBIvariation/contig-alias/pulls/113,https://github.com/EBIvariation/contig-alias/pull/113,open,452,0,16,2,0,0,0,0,[],2023-06-11 22:39:31+00:00,,0.0,,[],"[{'commit_sha': '5dd2204c9b49f89cfccadeac563bfe0bf889d8ab', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb1f55b007f655fa98dfaf0a4de261012f93da41', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1389139047,Recursive approach v2,"### Version 2 (enhanced version) of the recursive approach
    
    -  Removed the naming_conventions table
    -  Added the attribute naming convention to the seqColL1 entity
    -  Run tests that inserts different seqCol objects in this model
Sample output of the tables that store the seqCol objects in different levles:
![Screenshot from 2023-06-12 17-12-57](https://github.com/EBIvariation/contig-alias/assets/82417779/0015f8cf-c4ca-4cda-808b-44aa98237d85)
",False,114,https://api.github.com/repos/EBIvariation/contig-alias/pulls/114,https://github.com/EBIvariation/contig-alias/pull/114,open,489,9,15,5,0,0,0,0,[],2023-06-12 17:41:47+00:00,,0.0,,[],"[{'commit_sha': '5dd2204c9b49f89cfccadeac563bfe0bf889d8ab', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb1f55b007f655fa98dfaf0a4de261012f93da41', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3d47e52b11fe47700e73a1c69391b806d378325', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3019ab7c4fe22c14d0486d4987852a24ae3c6db', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6baec6891386ff99b778b21dcc4a5357e60bf49', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1390575738,Recursive approach v3,"Implementaion of the recursive approach v3
    
    - Created only one entity for the seqCol and a JSON as a type for its object
    - Executed tests to store multiple seqCol objects in this data model
  
Here's an example of how three different seqCol objects are stored in this data model:
![Screenshot from 2023-06-13 13-55-28](https://github.com/EBIvariation/contig-alias/assets/82417779/13bdbb87-0141-4a95-8d70-95d268669513)
",False,115,https://api.github.com/repos/EBIvariation/contig-alias/pulls/115,https://github.com/EBIvariation/contig-alias/pull/115,open,259,9,6,6,0,0,0,0,[],2023-06-13 13:02:50+00:00,,0.0,,[],"[{'commit_sha': '5dd2204c9b49f89cfccadeac563bfe0bf889d8ab', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb1f55b007f655fa98dfaf0a4de261012f93da41', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3d47e52b11fe47700e73a1c69391b806d378325', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3019ab7c4fe22c14d0486d4987852a24ae3c6db', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ee08459158bd430f2bc409d7a5d3fa7d36d1813', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d9bf16802b056a05e5bef115f9ec0315aa9704f', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1391344022,Relational data model,"### Implemented a version of the relational data-model
    
    - Created the neccessary entities
    - Executed tests to insert different seqCol objects using this model
Here's an example of the tables where three seqCol objects are stored :
**Note**: the objects contain the **same sequences** but different **naming conventions**

 
![Screenshot from 2023-06-13 22-45-56](https://github.com/EBIvariation/contig-alias/assets/82417779/254bbc29-a3ef-4661-9356-590b4f64c09f)
",False,116,https://api.github.com/repos/EBIvariation/contig-alias/pulls/116,https://github.com/EBIvariation/contig-alias/pull/116,open,306,9,10,3,0,0,0,0,[],2023-06-13 21:55:55+00:00,,0.0,,[],"[{'commit_sha': '1332d9ed0dee2763a6137a332dc240c940682fd8', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7af1701cc61148f1966e23378d2387cabafbc4e', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cd64746f841ae950ac890aabe5cd42a0e107412', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1392875447,Simple intuitive approach," ### Completed the simple intuitive version (noSql)
    
    - Created the necessary entities and classes
    - Exected tests to insert three different seqCol objects in this model

Here's an example of how three seqCol objects are stored in this model:
![Screenshot from 2023-06-14 19-07-16](https://github.com/EBIvariation/contig-alias/assets/82417779/b96ef83e-c139-44bf-b305-2ad954036df1)
",False,117,https://api.github.com/repos/EBIvariation/contig-alias/pulls/117,https://github.com/EBIvariation/contig-alias/pull/117,open,272,9,7,6,0,0,0,0,[],2023-06-14 18:15:50+00:00,,0.0,,[],"[{'commit_sha': 'ab8cc5934ff74cc33209e1043303b003559d7399', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a3c56016631169f257163e0410e1ac910a06dad', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac0b57304e2a1c64d42fc5f6ec327992d8dfaa99', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3051a4b0456ee31200ea511258f9c2c7a5136063', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93f80b65a3f6b40cc53d63ca5a718b901a996cb4', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80c49d499e4747a4922bd122f37da485651fd51a', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1408006200,Created the spring boot project with the necessary dependencies,"Created the spring boot project with the necessary dependencies

-  Added the necessary dependencies
-  Added a maven profile 'seqcol' that has credentials needed in src/main/resources/application.properties
    that will be provided at compilation time. (the maven profile is added in pom.xml)
",True,1,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/1,https://github.com/EBIvariation/eva-seqcol/pull/1,closed,9356,0,37,13,3,1,0,1,[],2023-06-26 13:53:25+00:00,2023-07-04 11:12:47+00:00,681562.0,"7 days, 21:19:22","[{'comment_id': 1246188386, 'comment_body': 'You can take out the .idea directory with [gitignore](https://github.com/EBIvariation/eva-accession/blob/fcb07c98cbcd9c1871a33cbfbb1d0aff9438e780/.gitignore#L12).', 'comment_created': datetime.datetime(2023, 6, 29, 6, 51, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}]","[{'commit_sha': '8d63c5747ab956f4be68cceb28b675579929c8df', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09179a8c385a6f5ab1410479ee84e3a64c4c48bd', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e363a92c870a67ad1dec25e3f66b50a3c4e2e24', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a04efbbc590ff0927b65ef95d99e0a8497a1c405', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '972853b8e67379ab40277e5c22a825301f17f508', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cac3cfeeb9782ef9ebb1e647432ace0040ae1edf', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a2564e2e78a1b6c03b951bca703160c9726788a', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a40b56c3ae13aaf9e79742614ec232aa419cd55', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2a4822b2701c96e3fc09572682f4bdf029128f6', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad835dbcffcc0ae87bed56c136a940b043b9efe5', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9eccae32c7bda559a1af279ca4040c10369d234b', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '031b8502b0542fbd2135ee262a98055c2b701d62', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f028ba6940d6feae743846686b934204220bc098', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1411392508, Implemented the process of downloading the assembly sequences fasta file," Implemented the process of downloading the assembly sequences fasta file

Created and tested the classes for the following:

    1. Downloand the assembly sequences' fasta file from NCBI database
    2. Unzip the _fna.gz file
    3. Parse the fasta file, retrieve the sequences and hash them with md5 algorithm
    4. Save the sequences into the AssemblySequencesEntity class",True,2,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/2,https://github.com/EBIvariation/eva-seqcol/pull/2,closed,603,0,14,6,0,13,0,0,[],2023-06-28 10:19:56+00:00,2023-07-05 12:06:17+00:00,611181.0,"7 days, 1:46:21","[{'comment_id': 1246264893, 'comment_body': '**Optional:** Suggest renaming NCBIAssemblySequencesDataSource to NCBIAssemblySequenceDataSource. Suggest similar renaming for other classes also.', 'comment_created': datetime.datetime(2023, 6, 29, 7, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1246267879, 'comment_body': '**Optional:** May be we could also print the actual FASTA file name instead of _fna.gz?', 'comment_created': datetime.datetime(2023, 6, 29, 8, 1, 8, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1246269652, 'comment_body': '`logger.info(""NCBI assembly FASTA downloaded successfully ("" + ftpFile.getName() + "")"");`', 'comment_created': datetime.datetime(2023, 6, 29, 8, 2, 38, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1246270015, 'comment_body': '`logger.error(""NCBI assembly FASTA could not be downloaded successfully("" + ftpFile.getName() + "")"");`', 'comment_created': datetime.datetime(2023, 6, 29, 8, 2, 57, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1246280713, 'comment_body': '**Optional:** This reader object seems to be closed manually in the inheritees.Check if it is possible to provide a top-level method here that will call parseFile in the inheritees (a method prone to exceptions) and close the reader after parseFile exits.', 'comment_created': datetime.datetime(2023, 6, 29, 8, 11, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1246281384, 'comment_body': '**Optional:** See comment [here](https://github.com/EBIvariation/eva-seqcol/pull/2/commits/2db1dd676dfaee92f5701034eaf37f5604277734#r1246280713)', 'comment_created': datetime.datetime(2023, 6, 29, 8, 12, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1246283636, 'comment_body': '`Stream<FTPFile> assemblyReportFilteredStream = ftpFileStream.filter(f -> f.getName().toLowerCase().contains(""genomic.fna.gz"") && !f.getName().toLowerCase().contains(""from""));`', 'comment_created': datetime.datetime(2023, 6, 29, 8, 14, 25, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1246284153, 'comment_body': 'btw, I am wondering why the ""from"" filter is needed?', 'comment_created': datetime.datetime(2023, 6, 29, 8, 14, 51, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1246284893, 'comment_body': '`return assemblyReport.orElseThrow(() -> new AssemblyNotFoundException(""Assembly FASTA file not present in given directory: "" + directoryPath));`', 'comment_created': datetime.datetime(2023, 6, 29, 8, 15, 25, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1246482285, 'comment_body': ""Okay I'll do it."", 'comment_created': datetime.datetime(2023, 6, 29, 11, 15, 40, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1246551741, 'comment_body': ""@sundarvenkata-EBI @tcezard \r\nSome assemblies have **multiple** Fasta files in their home path that ends with _genomic_fna.gz.\r\nEg [here](https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/001/405/GCF_000001405.40_GRCh38.p14/)\r\n\r\n![ambiguous-fasta](https://github.com/EBIvariation/eva-seqcol/assets/82417779/34d46328-367c-4471-9b0b-f1091bc16adc)\r\n\r\nSo I assumed that the one we're concerned about is the one that ends only with _**genomic_fna.gz (no _from_..)**, which also has the largest file size, based on my observation of other assemblies that has only one Fasta file and its name ends with **_genomic_fna.gz**, like this [one](https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/001/405/GCF_000001405.29_GRCh38.p3/).\r\n\r\nIt was a self observation, but I think I should have raised an issue about it just to make sure."", 'comment_created': datetime.datetime(2023, 6, 29, 12, 28, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1246561898, 'comment_body': ""I think we'll see that in GCF assembly much more than in GCA but it makes sense to keep the filter for now.\r\nCan you just add a comment with a link to the example assembly for the next person wondering."", 'comment_created': datetime.datetime(2023, 6, 29, 12, 37, 21, tzinfo=datetime.timezone.utc), 'commenter': 'tcezard', 'type': 'User'}, {'comment_id': 1246567327, 'comment_body': ""@tcezard \r\nOkay I will.\r\nIn the method's doc comment right ?"", 'comment_created': datetime.datetime(2023, 6, 29, 12, 41, 39, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}]","[{'commit_sha': 'cd66d10a0b88879f1aa9e097c0f49c11f9916313', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f38411e55cd3d5ddadddd426da246a4c3ebd588', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6666176820bf78ccba73a506f1fe0366ba457a2c', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccb8554dcf0025bfb974e93adad60499240cf44d', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9532578dccf2987c5e557fc08e8c07b9113f8df', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a862f645a90561bd4ec01106883f32276af3c6f', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1413358797,Changed the checksum calculation design and renamed some classes plus slight changes,"Changed the checksum calculation design and renamed some classes plus slight changes
    
    - Created new classes for the checksum calculation using md5 and sha-512
    and executed necessary tests
    - Renamed some classes
    - Corrected logger and exception messages

The new checksum calculation design:
![Screenshot from 2023-06-28 22-08-06](https://github.com/EBIvariation/eva-seqcol/assets/82417779/d5480822-f7f5-4b91-b2ab-3393b808cbe6)

",True,3,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/3,https://github.com/EBIvariation/eva-seqcol/pull/3,closed,151574,94,31,8,0,7,0,0,[],2023-06-29 13:38:31+00:00,2023-07-06 22:55:03+00:00,638192.0,"7 days, 9:16:32","[{'comment_id': 1250345142, 'comment_body': ""I would suggest to stick to bytes array for the return rather than convert back to text. That's most likely the source of the discrepancy you're describing in #4 ."", 'comment_created': datetime.datetime(2023, 7, 3, 6, 51, 22, tzinfo=datetime.timezone.utc), 'commenter': 'tcezard', 'type': 'User'}, {'comment_id': 1251131205, 'comment_body': '@tcezard \r\nI don\'t get it.\r\nThe final sequence isn\'t supposed to be a string ?\r\nLike this : `""SQ.lZyxiD_ByprhOUzrR1o1bq0ezO_1gkrn""`', 'comment_created': datetime.datetime(2023, 7, 3, 17, 11, 21, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1251140817, 'comment_body': ""Another remark regarding the **python implementation** of the `trunc512_digest()` ([here](https://github.com/waterflow80/seqcol/blob/master/seqcol/hash_functions.py)).\r\nWhen trying to calculate the digest of a sequence (`BK006935.2`), I got this output :\r\n`u'93cd477947888f57045a78a086c00c56065fa98e36974ff9` \r\nwhich I didn't quite understand it actually. Because I thought I was supposed to return:\r\n`SQ.lZyxiD_ByprhOUzrR1o1bq0ezO_1gkrn`"", 'comment_created': datetime.datetime(2023, 7, 3, 17, 26, 28, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1251174741, 'comment_body': ""Sorry I should have made it clearer: \r\nIn `SHA512Hash`  you're converting the byte array to Hex using `printHexBinary`.\r\nYou don't need to do that because you are subsequently converting back to byte array in `byte[] sequenceBytes = sequence2.getBytes();`\r\nAlso the conversion to Hex string is the reason you don't get the correct checksum at the end\r\n\r\nthe correct conversion should be:\r\ntext -> byte array -> digest -> truncate to 24 bytes -> base64 url safe encoding -> text\r\nYou are doing \r\ntext -> byte array -> digest -> Hexstring -> text -> byte array -> truncate to 24 bytes -> base64 url safe encoding -> text\r\nI hope this makes more sense"", 'comment_created': datetime.datetime(2023, 7, 3, 18, 19, 31, tzinfo=datetime.timezone.utc), 'commenter': 'tcezard', 'type': 'User'}, {'comment_id': 1251175358, 'comment_body': 'Here is a version that works in my test:\r\n```java\r\n    public String calculateChecksum(String sequence) {\r\n        String sequence1 = sequence.replaceAll(""[\\\\W]|_"", """"); // Remove non-alphanumeric characters\r\n        byte[] digest =  SHA512Hash(sequence1.toUpperCase());\r\n\r\n        // Encode the first 24 bytes with Base64\r\n        byte[] truncatedSequence = Arrays.copyOfRange(digest, 0, 24);\r\n        String encodedBase64Sequence = Base64.getUrlEncoder().encodeToString(truncatedSequence);\r\n        return ""SQ."" + encodedBase64Sequence;\r\n    }\r\n\r\n    public byte[] SHA512Hash(String text) {\r\n        MessageDigest md;\r\n        try {\r\n            md = MessageDigest.getInstance(""SHA-512"");\r\n        } catch (NoSuchAlgorithmException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        md.update(text.getBytes());\r\n        return md.digest();\r\n    }\r\n```', 'comment_created': datetime.datetime(2023, 7, 3, 18, 20, 37, tzinfo=datetime.timezone.utc), 'commenter': 'tcezard', 'type': 'User'}, {'comment_id': 1251230457, 'comment_body': '@tcezard \r\nPerfectly clear.\r\nThanks Tim.\r\nIt works fine now.', 'comment_created': datetime.datetime(2023, 7, 3, 19, 49, 24, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1251234249, 'comment_body': 'I fixed it [here](https://github.com/EBIvariation/eva-seqcol/pull/3/commits/66b8d3cb62966019feb890347214c23bea5f1536).', 'comment_created': datetime.datetime(2023, 7, 3, 19, 55, 23, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}]","[{'commit_sha': '7690cc97ae94cc21cf1e3de3bf4b024ae7327833', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e180447e1f65333bf9df49be89d381576448bcb7', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e666e946f00c656be6bd014eca0a37836174d6c', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0fd27c2ffbe3db32762b6119663b4e9f95c5598', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce6e5862f72f1ce30b2db5ec9817371f4b601e54', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4cf34cd9bed2a41ab56255d7bec5f4ff17bb04c', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00c5fff7990cd02a9d186eae758891c4f66ba246', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2a2de75c961f04dd84d88916534980b4cc52bca', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1419579504,Composite primary key,"Made a composite primary key composed of both the **digest** and **naming_convention**.
In this way, we can add multiple seqcol objects that hold the same information, thus the **same digest L0**, but having different naming conventions.
",True,6,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/6,https://github.com/EBIvariation/eva-seqcol/pull/6,closed,22,4,4,6,2,1,0,0,[],2023-07-04 12:32:35+00:00,2023-07-08 10:32:47+00:00,338412.0,"3 days, 22:00:12","[{'comment_id': 1255530449, 'comment_body': 'Why are you reverting back to returning the Hex string ?', 'comment_created': datetime.datetime(2023, 7, 7, 9, 24, 4, tzinfo=datetime.timezone.utc), 'commenter': 'tcezard', 'type': 'User'}]","[{'commit_sha': '2df5f2460459658c3967f017c3d90678e8e4b255', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbc66c24f92182c1b081c0818ada6ccf2fe69b79', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5c6338be2512871128699423662a7e17242b9f1', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'afb17cfbdb16ae3464dc36ed4a89d7e9de14cbe2', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cafc2b814b886d04ed52066a19f9d84626fd5da', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a835387ee780d38c596e184c698fb96524de570', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1421552514,Ingest seqcol process," First step of constructing and ingesting Seqcol level 2 objects

- Read the assembly report and the sequences' FASTA file of a given accession
- Cosntruct the level 2 seqCol object out of these files by defining the chosen naming convention
- Save the object in the database

**Note:** The level 0 digest is not calculated in this PR. A random digest has been assigned for each object.",False,7,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/7,https://github.com/EBIvariation/eva-seqcol/pull/7,closed,5508,4,11,8,1,0,0,0,[],2023-07-05 18:21:50+00:00,2023-07-11 18:00:33+00:00,517123.0,"5 days, 23:38:43",[],"[{'commit_sha': '1ac485277c70fb25a668a7e2c0378021cfe87e2a', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86167421548cdd47cd7cc6803802e59d71540a2b', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91f664b4a464dde5f1ca91eaae41bc8f3b03bf5e', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acd2a318198c9823668a555b400a40494d0fdcc1', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2d66200e5478851698a654633cfe9607990645b', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f19883be1fd0c1086b207f60026a37216dea2727', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dae52d4b7beb1a29a9bfea28ebd0163f8d369845', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fa9845b9e7644bcfda07dde63585ba5d66344fd', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1426116782,Create maven.yml - Github action,Create a GitHub action to automate the build and the test of the project on GitHub at every push and at every Pull request to the main branch.,True,8,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/8,https://github.com/EBIvariation/eva-seqcol/pull/8,closed,25,0,1,1,1,0,0,0,[],2023-07-08 23:02:01+00:00,2023-07-12 10:44:34+00:00,301353.0,"3 days, 11:42:33",[],"[{'commit_sha': 'b4e03d4b100720a9e6f17c564147b993c99e9f5b', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1426391186,Data model refactor,"**Data-model refactor**
    
   -  Changed the previous SeqColLevel2Entity into SeqColExtendedDataEntity
   -  Created a new entity: SeqColLevel2Entity which will not persist in the database
   -  did the necessary refactoring

The new design is as follows:
![Screenshot from 2023-07-09 19-03-00](https://github.com/EBIvariation/eva-seqcol/assets/82417779/9ed60bd7-55bc-4838-9835-44789b440def)

The difference between **SeqColL1** and **SeqColL2** is that **only SeqColL1 is persisted in the database.**

",True,9,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/9,https://github.com/EBIvariation/eva-seqcol/pull/9,closed,5636,133,22,22,3,13,0,0,[],2023-07-09 18:07:00+00:00,2023-07-18 11:30:36+00:00,753816.0,"8 days, 17:23:36","[{'comment_id': 1261133392, 'comment_body': ""I don't think that's the correct comment for this code. This function is a generic digest calculator and could be applied to many level."", 'comment_created': datetime.datetime(2023, 7, 12, 12, 50, 57, tzinfo=datetime.timezone.utc), 'commenter': 'tcezard', 'type': 'User'}, {'comment_id': 1261139798, 'comment_body': '`JsonCanonicalizer` is part of the normalisation and should not be included in the digest calculation', 'comment_created': datetime.datetime(2023, 7, 12, 12, 55, 32, tzinfo=datetime.timezone.utc), 'commenter': 'tcezard', 'type': 'User'}, {'comment_id': 1261141060, 'comment_body': ""Happy to be convinced otherwise, but I don't think `refget` is the right location for this file."", 'comment_created': datetime.datetime(2023, 7, 12, 12, 56, 32, tzinfo=datetime.timezone.utc), 'commenter': 'tcezard', 'type': 'User'}, {'comment_id': 1261145393, 'comment_body': ""The order of the collection is very important and we should not be reordering it after it's been read. \r\nWhat's the reason for reordering the collection? "", 'comment_created': datetime.datetime(2023, 7, 12, 12, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'tcezard', 'type': 'User'}, {'comment_id': 1261354682, 'comment_body': 'Could we avoid attribute names like `object` and prefer a more descriptive attribute name like `seqColLevel1Object` ?', 'comment_created': datetime.datetime(2023, 7, 12, 15, 28, 25, tzinfo=datetime.timezone.utc), 'commenter': 'tcezard', 'type': 'User'}, {'comment_id': 1261357566, 'comment_body': ""Same. We should avoid `object`. Not sure what to call it since it is an object containing an array but I'm sure there is a more descriptive name."", 'comment_created': datetime.datetime(2023, 7, 12, 15, 30, 37, tzinfo=datetime.timezone.utc), 'commenter': 'tcezard', 'type': 'User'}, {'comment_id': 1261676012, 'comment_body': ""Okay, I'll change it.\r\nThe reason I set it like that initially is because I though that the level 0 digest that will eventually identify a given seqCol is the result of calculating the digest of its level 1 seqCol object."", 'comment_created': datetime.datetime(2023, 7, 12, 20, 10, 19, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1261678584, 'comment_body': 'Yeah that make sense, \r\ndo you suggest making a separate class for the normalization, or should the method invoking the digest calculation do the normalization b4 calling it.', 'comment_created': datetime.datetime(2023, 7, 12, 20, 13, 20, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1261682883, 'comment_body': 'I agree with that, because `refget` specs only focus on sequence level digests and not seqcol ones.\r\nMaybe a package named `digests` can make more sense.', 'comment_created': datetime.datetime(2023, 7, 12, 20, 18, 19, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1261723462, 'comment_body': ""Actually I wasn't aware that the original ordering of the sequences that comes in the assembly report and in the FASTA file should be kept identical when creating seqCol objects.\r\n\r\nAnd the reason why I attempted to sort the sequences before processing them, is to prevent any problem when the sequences in the assembly report and the ones in the FASTA file did not come in the same order, which will cause collision.\r\n\r\nCurrently, all the files that I've processed so far contained sequences ordered in the same order, however I did the sort because I couldn't make sure that all the files that will be processed in the future will respect that "", 'comment_created': datetime.datetime(2023, 7, 12, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1261735133, 'comment_body': ""Yes, `seqColLevel1Object` will be a better attribute/column name.\r\nI'll rename as such."", 'comment_created': datetime.datetime(2023, 7, 12, 21, 18, 48, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1261736943, 'comment_body': 'True, I suggest calling it `extendedSeqColData`.', 'comment_created': datetime.datetime(2023, 7, 12, 21, 21, 12, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1264929615, 'comment_body': 'Can we use a more descriptive function name here ? like `getSha512Digest`', 'comment_created': datetime.datetime(2023, 7, 17, 6, 35, 4, tzinfo=datetime.timezone.utc), 'commenter': 'tcezard', 'type': 'User'}]","[{'commit_sha': '665b9211341c307c72d976bd601d4cd8f9ffa621', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f37af83c43262fcd2d594ce55eebb5ddaebb3c69', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1373a6b6887e5f6d4c16527a788e797d931bd04b', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fb19e09696df0eb6767e3687820bd992ac61af3', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0da04ec6d067b519fc5baec8c84ed43ca4f265fb', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10de32e7b9b3b92daf7437f06c4713f2a84eb218', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e17baa78e0bf0125228f750ec2713c183ea594c', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd11cb060002dffd5e244bc087f89bd0da06452df', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1755a1c62f6431a9b8c1a172056388dddd9fa87', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3447214dd2c35277e85c22f51cf43ee407cfdfe9', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4252cdb6404655f58774b49f28ebc77da427b1d', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a79f9474881ca95beb05de564dd3d27effa5864e', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b43efed754756c963e02981183df791841a38340', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28ea15cb0bd59fc78bbfe2671e3dd25f9cf1698d', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57831fc1813a731a892907888723c9239dd1b003', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5510ca030971e2108f43542ad2890ed868b6bc60', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '416ed818eea9648b2308841632354adba9efb18d', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e140d0fcd21ea794dc90ec43019e241e25f62c2e', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6cb1b30d71ec4098844515182ee6750f1048149', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f355fd4b208b3d3cda3998ab14eef871f794301', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d824003fd9b02a8611f9e02b7424f4a386a8d97', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed661d7b5b2e2c19df9b0afe54e6d4309ee01160', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1429474263,Full ingest of seqcol," Full ingest of seqCol level1 and level2 objects

- Insert level1 seqCol in the db
- Insert extended seqCol attributes data in the db
- Retrieve level1 seqCol (with 1 db lookup)
- Retrieve level2 seqCol (with 2 db lookups)

**Note:** some of the tests are activated with the profile 'seqcol', so it requries local run (local db).",True,10,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/10,https://github.com/EBIvariation/eva-seqcol/pull/10,closed,1116,334,31,12,1,16,1,0,[{'name': 'ready-for-review'}],2023-07-11 13:28:56+00:00,2023-07-24 16:39:05+00:00,1134609.0,"13 days, 3:10:09","[{'comment_id': 1266234598, 'comment_body': 'Suggest adding explicit access level (public/private/protected) to the methods....', 'comment_created': datetime.datetime(2023, 7, 18, 5, 17, 43, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1266237374, 'comment_body': '**Optional**: Use standard loggers throughout the code base... This is relatively easy with the spring framework. See any Java class in the eva-accession repo for example...', 'comment_created': datetime.datetime(2023, 7, 18, 5, 22, 35, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1266240437, 'comment_body': 'Sorry I am not seeing the recursive call?', 'comment_created': datetime.datetime(2023, 7, 18, 5, 28, 13, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1266246277, 'comment_body': 'I am confused as to why we are re-writing the function already defined in SeqColExtendedDataService?', 'comment_created': datetime.datetime(2023, 7, 18, 5, 38, 46, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1266639154, 'comment_body': 'Sure, sorry for that.', 'comment_created': datetime.datetime(2023, 7, 18, 11, 31, 25, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1266642043, 'comment_body': ""True..I'll do that."", 'comment_created': datetime.datetime(2023, 7, 18, 11, 34, 28, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1266645286, 'comment_body': ""Good point, technically there's no recursive calls in our model. I just referred to the seqcol-specs' description of how to sequences collections are retrieved in different levels, in the one-table model.\r\nBut it should be removed."", 'comment_created': datetime.datetime(2023, 7, 18, 11, 37, 49, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1266744698, 'comment_body': ""Yeah sorry, initially I created them in the test class and then copied them to the SeqColExtendedDataService.\r\nJust forgot to replace them.\r\nI'll do it."", 'comment_created': datetime.datetime(2023, 7, 18, 13, 4, 22, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1269094248, 'comment_body': 'This is retrieving refget digested list of sequences and that should be reflected in the variable and class names.', 'comment_created': datetime.datetime(2023, 7, 20, 8, 3, 46, tzinfo=datetime.timezone.utc), 'commenter': 'tcezard', 'type': 'User'}, {'comment_id': 1269095848, 'comment_body': '`accession` is an assembly accession\r\n```suggestion\r\n            String assemblyAccession, SeqColEntity.NamingConvention namingConvention) throws IOException {\r\n```', 'comment_created': datetime.datetime(2023, 7, 20, 8, 4, 43, tzinfo=datetime.timezone.utc), 'commenter': 'tcezard', 'type': 'User'}, {'comment_id': 1269119834, 'comment_body': 'The selection of the naming convention is done outside of this class. I think `NCBISeqColDataSource` knows the naming conventions available from the assembly report and the fasta file. \r\nIt could iterate over the different naming conventions and provide multiple `List<SeqColExtendedDataEntity>`', 'comment_created': datetime.datetime(2023, 7, 20, 8, 24, 37, tzinfo=datetime.timezone.utc), 'commenter': 'tcezard', 'type': 'User'}, {'comment_id': 1269203859, 'comment_body': ""True, I'll change it\r\n"", 'comment_created': datetime.datetime(2023, 7, 20, 9, 32, 44, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1269214951, 'comment_body': ""That's a very good point. We can store all possible seqCol objects with different naming convention at once.\r\nI'll be working on it."", 'comment_created': datetime.datetime(2023, 7, 20, 9, 42, 36, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1270267075, 'comment_body': ""I don't understand why this should be disabled on Github."", 'comment_created': datetime.datetime(2023, 7, 21, 6, 19, 27, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1270267658, 'comment_body': 'This should not be a test but instead a regular function...', 'comment_created': datetime.datetime(2023, 7, 21, 6, 20, 23, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1270288242, 'comment_body': 'This also seems like duplicated functionality from elsewhere... Could you take a few minutes to review other instances like this?', 'comment_created': datetime.datetime(2023, 7, 21, 6, 49, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}]","[{'commit_sha': '2f7eb1db683fa9cb299ea629388c6f39bb5d46e2', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37c32d451f5be8154d5fe461bb9efca94cd60ab7', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4861a44e91b8e4070ca16d1a07702249f3b87351', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f4104a4427cb3e92d81f9f0cdb22873816d44a2', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '414430cd1e54e5b32fe3ff67e5f87dcd81e05189', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4cf060ae50e504dff1b6359df4bcc2cd77a90ad', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32b7465247830a81e54533d079d19e8b0a345f34', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2034913af7c58b82660b5214411fcc1e15fd6d8b', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ab18d82fdfd19f91995105e5e55388afc90ebdf', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd94134e45fbc54cb93a865ce99c00acabdb1c58', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aad0d766e6afbf3c5299a4d2f41b1bf839861864', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d3bf18f1914a40781e7a79305099be1836a22ed', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1443091004,Seqcol initial controller,"Added initial basic controller for seqCol
",True,11,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/11,https://github.com/EBIvariation/eva-seqcol/pull/11,closed,1474,82,29,9,0,0,0,0,[],2023-07-20 15:10:20+00:00,2023-07-24 16:39:08+00:00,350928.0,"4 days, 1:28:48",[],"[{'commit_sha': '2f7eb1db683fa9cb299ea629388c6f39bb5d46e2', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37c32d451f5be8154d5fe461bb9efca94cd60ab7', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4861a44e91b8e4070ca16d1a07702249f3b87351', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f4104a4427cb3e92d81f9f0cdb22873816d44a2', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '414430cd1e54e5b32fe3ff67e5f87dcd81e05189', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4cf060ae50e504dff1b6359df4bcc2cd77a90ad', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32b7465247830a81e54533d079d19e8b0a345f34', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2034913af7c58b82660b5214411fcc1e15fd6d8b', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ab18d82fdfd19f91995105e5e55388afc90ebdf', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1443681135,Add new attribute to model,Added the `md5Sequences` attribute to the data-model and did the necessary changes and tests.,True,14,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/14,https://github.com/EBIvariation/eva-seqcol/pull/14,closed,101,112,15,4,0,3,0,0,[],2023-07-20 22:31:28+00:00,2023-07-27 12:47:45+00:00,569777.0,"6 days, 14:16:17","[{'comment_id': 1270300459, 'comment_body': 'This looks the same as the method [here](https://github.com/EBIvariation/eva-seqcol/pull/14/commits/840b5ff5f64bb5461dfbb17b31c38fe990ad6c3b#diff-dde7b4465dd96ff593d95f4e97ce4c7eb60141d71e4092f213273a2b9e1c45daR199). May be this better fits as a static ""maker"" method in SeqColExtendedDataEntity?', 'comment_created': datetime.datetime(2023, 7, 21, 7, 5, 59, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1273535221, 'comment_body': '**Optional:** May be rename to md5Digests? or md5DigestsOfSequences?', 'comment_created': datetime.datetime(2023, 7, 25, 13, 20, 16, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1273537689, 'comment_body': '**Optional:** May be rename to md5Digests? or md5DigestsOfSequences?', 'comment_created': datetime.datetime(2023, 7, 25, 13, 21, 59, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}]","[{'commit_sha': '9d377959a16e84ef5a2d9f8b81ecb873dbc0af21', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9569124b133e46a551c8f0052ae5b4ee6ec0b378', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '820a1834c199049d3aa059c8e09bf81ad8c0e414', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70961e3ddaa159b43c9ec0ef312a3c3637701591', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1448881715,Seqcol comparison api,"Completed the seqCol comparison API

**Still** need to understand the [unbalanced duplicates present](https://github.com/ga4gh/seqcol-spec/blob/master/docs/decision_record.md#same-order-specification). ",True,16,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/16,https://github.com/EBIvariation/eva-seqcol/pull/16,closed,359,33,8,5,2,8,0,0,[],2023-07-25 17:47:51+00:00,2023-07-31 15:43:59+00:00,510968.0,"5 days, 21:56:08","[{'comment_id': 1277293988, 'comment_body': '**Optional**: Add links to the corresponding parts of the sequence-collection specification in a comment', 'comment_created': datetime.datetime(2023, 7, 28, 8, 56, 34, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1277302562, 'comment_body': 'I am wondering if this should be a SortedMap instead so that the results are always returned in a predictable order? Not sure if this is part of the specification but worth a deeper look...', 'comment_created': datetime.datetime(2023, 7, 28, 9, 5, 5, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1277312048, 'comment_body': '**Optional**: getter and setter methods should also be renamed to use the term ""md5 digests of sequences""...', 'comment_created': datetime.datetime(2023, 7, 28, 9, 14, 53, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1277325567, 'comment_body': ""Why shouldn't the logic below refactored into a separate function as well similar to the above 2 functions?"", 'comment_created': datetime.datetime(2023, 7, 28, 9, 27, 52, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1277335166, 'comment_body': ""I am a bit confused... shouldn't this `A minus (A intersect B)`?"", 'comment_created': datetime.datetime(2023, 7, 28, 9, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1277339124, 'comment_body': ""True, this is not correct.\r\nI'll fix it."", 'comment_created': datetime.datetime(2023, 7, 28, 9, 41, 28, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1277340393, 'comment_body': 'I am not sold on using language level reflection to do attribute comparisons across sequence collection entities.. We should discuss possible alternatives like making the Sequence collection entity flexible enough to accept a dynamic set of attributes if possible...', 'comment_created': datetime.datetime(2023, 7, 28, 9, 42, 47, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1277342033, 'comment_body': ""In the code below we assume that we already know the fields that are present in each seqCol objects.\r\nWhich might not be the case all the time, as some seqCol might contain additional attributes in the future. That's why I wanted to make it generic."", 'comment_created': datetime.datetime(2023, 7, 28, 9, 44, 36, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}]","[{'commit_sha': '2973fab4efc87ca5a98432a2863e5e8617149086', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a5a81c567a4ba7a882df257fd628b46920919a6', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c12d6fb28216463035213036144ea963035774f', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5b3a92779668b63346e10d07c612cd7193a3f8a', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa8d0f00ece1d4166e19fd83c1de8905e4e76a53', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1455111292,fixed the digest calculation algorithm,"Updated the digest calculation algorithm as follows:

- Use of Refget ga4gh-sha512 algorithm to calculate each sequence's digest (adds the 'SQ.' at the beginning of the digest)
- Use of ga4gh-512 algorithm to calculate the arrays' (attributes level 2) digest.",True,19,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/19,https://github.com/EBIvariation/eva-seqcol/pull/19,closed,55,57,12,3,0,2,0,0,[],2023-07-30 11:19:18+00:00,2023-08-04 10:32:09+00:00,429171.0,"4 days, 23:12:51","[{'comment_id': 1280692545, 'comment_body': 'Can this actually just `return ""SQ."" + calculateChecksum(sequence)`? Or is there a difference I\'m not seeing?', 'comment_created': datetime.datetime(2023, 8, 1, 14, 0, 6, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1280750786, 'comment_body': 'Absolutely, it can be that way. Thanks. ', 'comment_created': datetime.datetime(2023, 8, 1, 14, 42, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}]","[{'commit_sha': 'a1476777f23215033fe323579518c5b3f0a292c1', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75061f2bbc9ea97dac5a25456d25d953a8ebbe5a', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '339d4c19943ab3c128a334df0b5645d661714a8a', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1456547600,Seqcol comparison api generic version - using low level reflection libraries ,"In this PR, we'll try to make the comparison API more generic and flexible regarding the sequence collections inputs.
Not all seqCol objects will have the same set of attributes, however some attributes are required.",False,20,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/20,https://github.com/EBIvariation/eva-seqcol/pull/20,closed,480,34,8,6,1,0,0,0,[],2023-07-31 15:43:18+00:00,2023-08-17 22:26:44+00:00,1493006.0,"17 days, 6:43:26",[],"[{'commit_sha': '2973fab4efc87ca5a98432a2863e5e8617149086', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a5a81c567a4ba7a882df257fd628b46920919a6', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c12d6fb28216463035213036144ea963035774f', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5b3a92779668b63346e10d07c612cd7193a3f8a', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2750423f6afc7e1efb5975e9c9d5c3a58470d2d5', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '024237ee1e57b52912e95dcbc7a9cb174e1b87a6', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1458195946,added the unbalanced-duplicate condition to the comparison api,,True,21,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/21,https://github.com/EBIvariation/eva-seqcol/pull/21,closed,83,28,3,2,0,10,0,0,[],2023-08-01 14:12:21+00:00,2023-08-11 09:34:30+00:00,847329.0,"9 days, 19:22:09","[{'comment_id': 1283228754, 'comment_body': 'You should call the methods in `SeqColService` rather than duplicating the code in the test.', 'comment_created': datetime.datetime(2023, 8, 3, 13, 44, 27, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1283231299, 'comment_body': 'Might also want to test a case where there are balanced duplicates - e.g. `A2 = [1, 2, 2]` and `B2 = [2, 1, 2]`', 'comment_created': datetime.datetime(2023, 8, 3, 13, 46, 12, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1283243194, 'comment_body': 'I like the examples in the docstring, but A/B and A\'/B\' are the same here...\r\n\r\nAlso I\'d change the examples to not say ""same order"" etc explicitly - according the spec the presence of unbalanced duplicates doesn\'t mean they\'re not in the same order, but that the same-order attribute is `undefined` for those arrays.', 'comment_created': datetime.datetime(2023, 8, 3, 13, 54, 43, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1283297709, 'comment_body': ""I actually think this is checking order where it shouldn't, at least if you want this method to just be checking for unbalanced duplicates - for instance, in the example I wrote for your test, I think the method should return `false` as there are no unbalanced duplicates (even though the lists clearly aren't in the same order)."", 'comment_created': datetime.datetime(2023, 8, 3, 14, 33, 3, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1283510518, 'comment_body': ""Yeah sorry, the examples should have been:\r\n A = [1, 2, 2, 3, 4]; B = [1, 2 ,3, 4, 5, 6] \r\n A' = [1, 2, 2, 3, 4]; B' = [1, 2, 3, 4]\r\n\r\nOkay I'll do the changes for the comment."", 'comment_created': datetime.datetime(2023, 8, 3, 17, 28, 27, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1283512060, 'comment_body': ""I just added this test case, and it failed. So I think I'm not implementing the right algorithm."", 'comment_created': datetime.datetime(2023, 8, 3, 17, 30, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1283512679, 'comment_body': 'True...sorry for that.', 'comment_created': datetime.datetime(2023, 8, 3, 17, 30, 37, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1283522095, 'comment_body': ""Yeah I think I should review the definition to have a better understanding of the unbalanced-duplicates with more test cases. Because it's clearly not the right algorithm."", 'comment_created': datetime.datetime(2023, 8, 3, 17, 39, 27, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1291105096, 'comment_body': ""I think counting common elements actually shouldn't deduplicate... For example, let's say the arrays `[1,2,1]` and `[1,1,2]` are the lengths arrays for A and B; then `commonLengthsCount` should be 3.  On the other hand if A's array is `[1,2,1]` and B's is `[1,2]`, the common count should be 2, so I think it's slightly more complicated than using `A.retainAll(B)`..."", 'comment_created': datetime.datetime(2023, 8, 11, 9, 20, 40, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1291111655, 'comment_body': ""True, I'll try to fix that."", 'comment_created': datetime.datetime(2023, 8, 11, 9, 27, 15, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}]","[{'commit_sha': '3b2644ecf0a31b56c56adce7137b5368939276b0', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd27709cade57948f3e6c24ba409046c3b30b083c', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1460239786,fetch and insert all possible seqCol objects from one assembly read,"Now we can fetch and insert all possible seqCol objects from one assembly read.
**Note:** ""all possible"" means with all the naming conventions that are provided in the assembly report.",True,22,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/22,https://github.com/EBIvariation/eva-seqcol/pull/22,closed,131,122,9,4,0,1,0,0,[],2023-08-02 18:18:04+00:00,2023-08-07 14:53:47+00:00,419743.0,"4 days, 20:35:43","[{'comment_id': 1285691173, 'comment_body': '```suggestion\r\n    public ResponseEntity<?> fetchAndInsertSeqColByAssemblyAccession(\r\n```', 'comment_created': datetime.datetime(2023, 8, 7, 10, 35, 16, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}]","[{'commit_sha': '01fedaa9497a0da15b25ca6ab139dcb8ba588e56', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3abdb308770ad7d15b0d473c2aacbc66430000e1', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfb43247856171978172729451c83eaa0573f4fd', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4d47c148549af3d92533b728e75479d1cd06a92', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1465972302,Test suite enhancements - SeqColWriter & AssemblyDataGenerator,"added a seqColWriter to automate database handling; populate,read,write,clear for tests",True,24,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/24,https://github.com/EBIvariation/eva-seqcol/pull/24,closed,370,192,11,5,0,0,0,0,[],2023-08-07 22:07:53+00:00,2023-08-12 23:03:08+00:00,435315.0,"5 days, 0:55:15",[],"[{'commit_sha': '6d0dae72552e61e02bb5b28e7e382ee5159326a5', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '868c67e022941e32730599385a8c97a5754b5490', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed026eab7305960c5597559bf7da58e21f718945', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a40c8dde79573398293430073506420daaa7e42e', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83588ee68dc70df641f64545e0fd1af8afc02b31', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1473362046,fix common elements count algorithm - Comparison API,closes #27 ,True,28,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/28,https://github.com/EBIvariation/eva-seqcol/pull/28,closed,51,7,3,2,0,2,0,0,[],2023-08-13 12:24:29+00:00,2023-08-15 17:32:07+00:00,191258.0,"2 days, 5:07:38","[{'comment_id': 1294460577, 'comment_body': 'This looks correct to me, just need to call it in the compare method!', 'comment_created': datetime.datetime(2023, 8, 15, 11, 10, 38, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1294908665, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 15, 17, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}]","[{'commit_sha': '12db41a474648b5be945151b4a40cae570195a78', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ca97e6e0e5df945a9d4733a4c61aad4068f7c18', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1473373772,Change json attribute name - md5-sequences,Added the `@JsonProperty` annotation to distinguish between the java attribute naming and the seqcol-spec JSON attribute naming.,True,29,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/29,https://github.com/EBIvariation/eva-seqcol/pull/29,closed,9,5,5,1,0,0,0,0,[],2023-08-13 13:05:54+00:00,2023-08-16 13:01:47+00:00,258953.0,"2 days, 23:55:53",[],"[{'commit_sha': 'b6c4f4f96ea9ddc9f7ee38bb8114193e50e94ee9', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1473525885,added the sorted-name-length-pair attribute to the model,"Added the `sorted-name-length-pairs` attribute to the model.
You can test the endpoints at `PUT: SERVER_IP/eva/webservices/seqcol/collection/admin/seqcols/GCA_000146045.2`, or at 
`GET: /eva/webservices/seqcol/collection/eJ8GCVLEVtdnCN4OSqfkf6KoEOK9OUlr?level=2` .",True,30,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/30,https://github.com/EBIvariation/eva-seqcol/pull/30,closed,142,10,8,5,0,12,0,0,[],2023-08-13 22:58:49+00:00,2023-08-17 10:15:07+00:00,299778.0,"3 days, 11:16:18","[{'comment_id': 1294292980, 'comment_body': 'Is the modified string the one being hashed [above](https://github.com/EBIvariation/eva-seqcol/pull/30/files#diff-050649bcbe300e924f3143fad46fd2f088c0e992a52caba6ae306847be12e519R194)? In that case, I am not sure if we should be doing fancy newline/tabspace additions... ', 'comment_created': datetime.datetime(2023, 8, 15, 7, 50, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1294482143, 'comment_body': ""Just reviewed the seqCol-spec and you're correct. \r\nI did some tests and it reproduced the same digest with and without the newline/tabspace additions.\r\nThat should be removed."", 'comment_created': datetime.datetime(2023, 8, 15, 11, 40, 54, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1295681181, 'comment_body': 'Do we still need the leading tabspace before the attributes?', 'comment_created': datetime.datetime(2023, 8, 16, 10, 13, 8, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1295767162, 'comment_body': 'Should this use the `DigestCalculator` so that the string is JSON canonicalized? Then you can keep the `toString` method human-readable. It also seems to be what the [python implementation](https://github.com/refgenie/seqcol/blob/46675b669ae07db9da4fc3d113fefa2c1667b1fb/seqcol/seqcol.py#L300-L310) does.', 'comment_created': datetime.datetime(2023, 8, 16, 11, 40, 20, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1295781851, 'comment_body': 'Is there a reason why this is in `model` rather than `entities`?', 'comment_created': datetime.datetime(2023, 8, 16, 11, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1295828595, 'comment_body': ""I just wanted to separate intermediate classes from the seqCol's and assembly's entities, which are mostly persistent.\r\nHowever, it might not be the best approach.\r\nIt maybe better to put it in `entities`."", 'comment_created': datetime.datetime(2023, 8, 16, 12, 34, 41, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1295830207, 'comment_body': ""Absolutely, that's a good point.\r\nI recently figured that out and created a **to-do** issue #32 to fix it."", 'comment_created': datetime.datetime(2023, 8, 16, 12, 36, 17, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1296142403, 'comment_body': ""I don't think it's referring to a `tabspace`, but rather to an escape character `\\` to keep the double quotes that surrounds each attribute's name, which is required by the [specification](https://github.com/ga4gh/seqcol-spec/blob/master/docs/decision_record.md#3-creation-of-an-object-composed-of-the-array-names-and-the-digested-arrays) as far as I know."", 'comment_created': datetime.datetime(2023, 8, 16, 16, 11, 37, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1296808580, 'comment_body': 'I meant the whitespace between the double quotes and the first backslash... ', 'comment_created': datetime.datetime(2023, 8, 17, 7, 41, 35, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1296829364, 'comment_body': ""Ah sorry, didn't see the issue - thanks!"", 'comment_created': datetime.datetime(2023, 8, 17, 8, 0, 27, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1296830639, 'comment_body': ""I'm fine with the separation, just wanted to understand the reason - it's true that there's a lot of things in `entities` now!"", 'comment_created': datetime.datetime(2023, 8, 17, 8, 1, 34, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1296842528, 'comment_body': ""Ohh okay, sorry. \nI don't think we need that, although it's gonna be removed in the canonicalisation process. But it makes sense to remove it to reduce the effort for that function. "", 'comment_created': datetime.datetime(2023, 8, 17, 8, 12, 19, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}]","[{'commit_sha': '3c0cca1e039110da887eddcf312bf175dd4a04a3', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d7eace352264678cb1dede16294bd37604605cc', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dba398423787b8de48e8c40b0f5840306300c71', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03f323caa24c8e7549425b7706203818b345fad6', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1438fb2bcf4cb4b589e7d1a3786ee83a78859d69', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1474622897,Some code clean up and enhancements ,"Did some code clean up, loggers, exceptions, info messages, etc",True,31,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/31,https://github.com/EBIvariation/eva-seqcol/pull/31,closed,47,27,4,3,0,6,0,0,[],2023-08-14 15:19:40+00:00,2023-08-17 18:20:52+00:00,270072.0,"3 days, 3:01:12","[{'comment_id': 1295795478, 'comment_body': 'Still need to check that `level` is non-null here...', 'comment_created': datetime.datetime(2023, 8, 16, 12, 4, 43, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1295799824, 'comment_body': 'Or actually, can you make this the `default` case in your switch statement? Then it happens after the null check anyway.', 'comment_created': datetime.datetime(2023, 8, 16, 12, 8, 52, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1297124403, 'comment_body': 'True, \r\nActually the order of the conditions was not correct.\r\nJust fixed it.', 'comment_created': datetime.datetime(2023, 8, 17, 12, 5, 51, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1297127694, 'comment_body': '> Or actually, can you make this the `default` case in your switch statement? Then it happens after the null check anyway.\r\n\r\n`case ""1""` and `case null` have actually the same code, but we can\'t put `case null` in Java (at least for our version), so I think adding the `default` case will lead to code duplicate..', 'comment_created': datetime.datetime(2023, 8, 17, 12, 9, 3, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1297200705, 'comment_body': 'I actually meant something like:\r\n```\r\nif (level == null) level = ""none"";\r\nswitch (level) {\r\n    case ""1"":\r\n    case ""none"":\r\n        ...\r\n    case ""2"":\r\n        ...\r\n    default:\r\n        return <BAD_REQUEST>\r\n}\r\n```\r\nBut the current ordering is good too (and probably makes more sense) :+1:', 'comment_created': datetime.datetime(2023, 8, 17, 13, 10, 31, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1297572927, 'comment_body': ""Ah okay got you,\r\nI think your approach looks more beautiful , so I'll go for it"", 'comment_created': datetime.datetime(2023, 8, 17, 18, 9, 5, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}]","[{'commit_sha': '4cd8c7fa0f2494fb6a45b6e9a75563569280c2a3', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26ea8b57ac19bcd498300a733f674bc3afdfe386', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cd712e08cf1d89ecc506dffe9151707c7816e2a', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1476408527,Generic comparison function for both GET and POST requests,"closes #26 
closes #23 
Made the comparison API **completely generic** when dealing with the seqCol attributes, for both 
- **GET request:** where we compare two local (saved) seqCol objects.
- **POST request:** where we compare one local seqCol object with another provided seqCol object.

Some code displacements and reordering can be made in the future in order to make it look more beautiful.",True,33,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/33,https://github.com/EBIvariation/eva-seqcol/pull/33,closed,313,120,10,10,1,12,0,0,[],2023-08-15 19:52:56+00:00,2023-08-17 22:25:46+00:00,181970.0,"2 days, 2:32:50","[{'comment_id': 1296839855, 'comment_body': 'I think the L2 **_attribute values_** (not the **_attributes_** themselves) are converted to string right? ', 'comment_created': datetime.datetime(2023, 8, 17, 8, 10, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1296851946, 'comment_body': ""Can't you test the presence of all the expected attribute rather than check that at least one is present ? "", 'comment_created': datetime.datetime(2023, 8, 17, 8, 20, 40, tzinfo=datetime.timezone.utc), 'commenter': 'tcezard', 'type': 'User'}, {'comment_id': 1296986714, 'comment_body': 'You mean we should include the attribute\'s name, for eg `""sequences""` in the string representation to be digested ?\r\nIn that case I don\'t think that the attribute\'s name should be included when calculating the array\'s digest (level 2 ==> level 1) according to the [seqcol-spec](https://github.com/ga4gh/seqcol-spec/blob/master/docs/decision_record.md#1-apply-rfc-8785-for-converting-from-level-2-to-level-1)', 'comment_created': datetime.datetime(2023, 8, 17, 9, 53, 25, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1296999909, 'comment_body': 'No, I meant that the function name should be more like convertSeqColLevelTwoAttributeValueToString but you can leave it as it is for now...', 'comment_created': datetime.datetime(2023, 8, 17, 10, 5, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1297009059, 'comment_body': ""Ah okay sorry, \r\nAbsolutely, that's a good point, I'll change it.\r\nThanks."", 'comment_created': datetime.datetime(2023, 8, 17, 10, 11, 53, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1297320628, 'comment_body': 'I think I would prefer sticking to the using either `sequences`, `name` or `length`. It is in theory possible that other attributes have different lengths. ', 'comment_created': datetime.datetime(2023, 8, 17, 14, 38, 18, tzinfo=datetime.timezone.utc), 'commenter': 'tcezard', 'type': 'User'}, {'comment_id': 1297405727, 'comment_body': ""Absolutely, I'll do that."", 'comment_created': datetime.datetime(2023, 8, 17, 15, 40, 37, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1297420234, 'comment_body': 'I realise this is the same as we had before, but I\'m actually not sure this is correct, I think the same-order check should only look at common elements. Example:\r\n```\r\nA = { \r\n  names: [""chr1"", ""chr2"", ""chr3"", ""M""],\r\n  lengths: [1, 2, 2, 3],\r\n  sequences: [...]\r\n}\r\nB = {\r\n  names: [""chr1"", ""chr2"", ""chr3""],\r\n  lengths: [1, 2, 2],\r\n  sequences: [...]\r\n}\r\n```\r\nThen `A.lengths != B.lengths` but their common elements are in the same order. Similarly for names (and presumably sequences if I bothered to write digests there).\r\n\r\nYou can make a separate issue for this and do it later, it should be straightforward by re-using the logic of `getCommonElementsCount`.', 'comment_created': datetime.datetime(2023, 8, 17, 15, 51, 24, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1297421112, 'comment_body': 'Yeah that makes sense.\r\nI think we can also add some other tests in the future regarding the seqCol attributes provided in the POST request, because the end user might not always provide correct seqCol data...but it needs some sort of rules (eg: in the specification) on **required** and **non required** attributes..', 'comment_created': datetime.datetime(2023, 8, 17, 15, 51, 54, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1297521444, 'comment_body': ""I'll try to fix, Thank you April."", 'comment_created': datetime.datetime(2023, 8, 17, 17, 20, 29, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1297529410, 'comment_body': ""@tcezard \r\nHowever, the reason why I did choose a random attribute is because I assumed that we don't know the attributes that the seqCol actually contains, and we will handle them generically (regardless of the seqCol attributes).\r\nBut I assume that `sequences`, `names` or `lengths` are required attributes of every seqCol object, so they must be always present, so it make sense to call them explicitly in this case. I don't know if I'm correct."", 'comment_created': datetime.datetime(2023, 8, 17, 17, 28, 15, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1298190853, 'comment_body': ""That's a fair point. \r\nThere is no guarantee that a sequence collection provided in POST would be containing mandatory fields since we do not validate their presence so you should be checking for `lengths` (which should always be present in a valid SeqCol) and if absent you should raise an exception that sends back a 400 error. Maybe 411 although that might not be right."", 'comment_created': datetime.datetime(2023, 8, 18, 8, 50, 45, tzinfo=datetime.timezone.utc), 'commenter': 'tcezard', 'type': 'User'}]","[{'commit_sha': '64a7afbfd3d72ab0e6f1934677506faa219c07e2', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db65ea0563e16140d80e3babb46dc814dcbbdaaa', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22bb4fc15cd6da7236c1215471f2d0b4ce98bfa7', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf92b16df72502bc5f0e779d2094c42fa1049952', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24c32e127d55a71a8443e43a2245045bc6ab18dc', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a0be719d1b9713e98780bedca3ed23faf4050b1', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a86d22bda584c2266cac0d7bcc03deae7105443a', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '120f82a38f21704acb02917fcd9207c654cf1593', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ee57ce214996027e7c6ad1161c15b9510ab09d7', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10ad6ffd4d5048f77966198db1e0ffc1373b0700', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1479786219,Digest algorithm correction - level 2 to level 1 digest calculation,closes #32 ,True,36,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/36,https://github.com/EBIvariation/eva-seqcol/pull/36,closed,46,37,9,5,0,2,0,0,[],2023-08-17 23:19:50+00:00,2023-08-20 09:48:33+00:00,210523.0,"2 days, 10:28:43","[{'comment_id': 1298192957, 'comment_body': ""Think you missed the one in `constructSortedNameLengthPairs` (lines 192+), it's still `SHA512ChecksumCalculator` rather than `DigestCalculator`"", 'comment_created': datetime.datetime(2023, 8, 18, 8, 52, 51, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1298250423, 'comment_body': ""True, I'll fix it"", 'comment_created': datetime.datetime(2023, 8, 18, 9, 44, 57, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}]","[{'commit_sha': 'f906d38683c1d6b604c99a01a95dc72a1fab7dba', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6c4e1f33380b9d9f5b8a13a48b52292733ba7d6', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96493aa778b4e588dc1ed2bad1780516e4887135', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6338c4478eddd67f5b90d1a69a25ade41b544e20', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fecc5b3587eb1ddbdef08a65c993c05f1596999', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1481765307,fixed the a-and-b-same-order algorithm,closes #34 ,True,40,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/40,https://github.com/EBIvariation/eva-seqcol/pull/40,closed,57,7,2,7,0,9,0,0,[],2023-08-20 11:38:46+00:00,2023-08-22 16:29:03+00:00,190217.0,"2 days, 4:50:17","[{'comment_id': 1299744844, 'comment_body': 'Suggest including [this link](https://github.com/ga4gh/seqcol-spec/blob/master/docs/decision_record.md#same-order-specification) in the comment', 'comment_created': datetime.datetime(2023, 8, 21, 7, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1299772653, 'comment_body': 'Any reason we are not following the ""return null when fewer than 2"" overlapping elements condition according to the spec?', 'comment_created': datetime.datetime(2023, 8, 21, 8, 13, 43, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1300002022, 'comment_body': 'I think we check for the `lessThanTwoOverlappingElements` and for the `unbalancedDuplicatesPresent` before jumping to the `check_A_And_B_Same_Order`, [here](https://github.com/EBIvariation/eva-seqcol/blob/168ecd148a5386fb21a8f8c45e887d90cb36572b/src/main/java/uk/ac/ebi/eva/evaseqcol/service/SeqColService.java#L276).', 'comment_created': datetime.datetime(2023, 8, 21, 11, 47, 9, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1300002515, 'comment_body': 'Absolutely', 'comment_created': datetime.datetime(2023, 8, 21, 11, 47, 37, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1300179157, 'comment_body': ""The values can be Integer or Boolean, so should probably check before casting... Also, I don't see where we actually use this method."", 'comment_created': datetime.datetime(2023, 8, 21, 14, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1300202901, 'comment_body': ""I think once you've done `retainAll` (assuming the order is preserved), you should just be able to rely on list equality for the rest - i.e. just `return elementsALocal.equals(elementsBLocal);`"", 'comment_created': datetime.datetime(2023, 8, 21, 14, 35, 43, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1300205336, 'comment_body': 'Might want to add a negative example, e.g. `A = [1,2,2]` and `B = [2,1,2]` should be false.', 'comment_created': datetime.datetime(2023, 8, 21, 14, 37, 33, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1300482427, 'comment_body': 'Sorry, It was for testing purposes only, I should have removed it.', 'comment_created': datetime.datetime(2023, 8, 21, 18, 15, 50, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}, {'comment_id': 1300482790, 'comment_body': ""True, I'll do that."", 'comment_created': datetime.datetime(2023, 8, 21, 18, 16, 16, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}]","[{'commit_sha': '169b984595a130113d26c63120f59421bad9fd22', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '394a7b03a41590e0856d01fda55b132664c43b5f', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa423ca53b39e185b4fa4c7657e4ea886687c0f3', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b9c7f45ea560905d50eeabe02e770338a11a03f', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0aea66f6ec712fdbbaab39d54166f8be877c59f3', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a720186e4f0a9d830e75917c455c20a2d9edfcd', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ecafeebea3c4d3311b2d13aa86043687e1e6425', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1481875777,added a basic authentication for admin endpoints,"Added a basic authentication for admin endpoints
The endpoint for the ingestion will be:
**PUT** - `{SERVER_IP}:{PORT}/eva/webservices/seqcol/admin/seqcols/{asm_accession}`",True,41,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/41,https://github.com/EBIvariation/eva-seqcol/pull/41,closed,75,13,6,6,2,0,0,0,[],2023-08-20 18:52:40+00:00,2023-08-21 18:30:21+00:00,85061.0,23:37:41,[],"[{'commit_sha': '9332783eec0af72da2648cc4aee19701d507c2ff', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c917d4f5c674fe3772901a1850e5af7ca36fe496', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '424b964a326b09592d385deb88ba65951f1818dd', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c68616b96ca6a421ff4b57582e5594a1f74abaa4', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fa079f29ed607fcecf34c7c657ccd0ddb7d9230', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f861b89d72128da58c48cf3ad7fc6a04b497bb6', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1488501989,Swagger documentation,"closes #38 
Documented the API with swagger v3: **Implementation:** `springdoc-openapi-ui`, and added request redirects for the swagger page. So each of the following endpoints will redirect to the swagger home page:
- `http://localhost:8081/eva/webservices/seqcol/`
- `http://localhost:8081/eva/webservices/seqcol/collection`
- `http://localhost:8081/eva/webservices/seqcol/comparison`
- `http://localhost:8081/eva/webservices/seqcol/seqcol-documentation`
- `http://localhost:8081/eva/webservices/seqcol/swagger-ui/index.html`

The reason why we chose **swagger v3 over v2**, is that version 2 had a lot of conflicts and problems with **spring boot 2.7.x** (our version) and it seemed like it is not supported. Here are some discussions about the issues I've been struggling with:
- [stackOverFlow#72465369](https://stackoverflow.com/questions/72465369/upgraded-spring-boot-to-2-7-0-failed-to-start-bean-documentationpluginsbootstr)
- [springcloud.io](https://www.springcloud.io/post/2022-05/springboot-swagger/#gsc.tab=0)
- [segmentfault.com](segmentfault.com)

Some enhancements have been done in swagger v3 (OpenAPI 3) so I don't think there's gonna be an issue in using it to document our API.

A screenshot of the swagger page:
![Screenshot from 2023-08-24 19-01-28](https://github.com/EBIvariation/eva-seqcol/assets/82417779/8da2de4b-7578-43ea-a7c2-e3d983716fb2)

",True,42,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/42,https://github.com/EBIvariation/eva-seqcol/pull/42,closed,175,28,9,4,0,2,0,0,[],2023-08-24 18:25:22+00:00,2023-08-26 16:34:59+00:00,166177.0,"1 day, 22:09:37","[{'comment_id': 1305808412, 'comment_body': 'I would do it this way, as I think the UI uses the example values to auto-fill sample requests.\r\n```suggestion\r\n            description = ""The desired output\'s level (1 or 2)"",\r\n            example = ""1"",\r\n```', 'comment_created': datetime.datetime(2023, 8, 25, 15, 27, 33, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1305811316, 'comment_body': '```suggestion\r\n                              .license(new License().name(""Apache-2.0"").url(""https://raw.githubusercontent.com/EBIvariation/eva-seqcol/main/LICENSE""))\r\n```', 'comment_created': datetime.datetime(2023, 8, 25, 15, 30, 24, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}]","[{'commit_sha': '2ab467bca20fcbc6117260ebebafae2ca5fd21ab', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33132141d0250207bdca96f7964aa7abdb91b439', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2473da1fb8c4710b5819556efab82abe9cf7a6f6', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae9a01a486bd606c8236ce257e4d72fea43223c5', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1488642491,Implemented the service-info endpoint,"closes #37 
Implemented the **service-info** endpoint.
I actually used the same file provided [here](https://github.com/EBIvariation/eva-seqcol/issues/37) by @tcezard.

I did one change in the `lengths` attribute's type that I changed it into `string`, which is how it is defined in our API, and we'll consider updating it into `integer` after we do the refactor in our API.

I would like to know whether we should use `sorted_names_length_pairs`, as provided in the service-info file, or `sorted_name_length_pairs` as we defined it in our java model.",True,43,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/43,https://github.com/EBIvariation/eva-seqcol/pull/43,closed,147,2,8,4,2,5,0,0,[],2023-08-24 20:19:30+00:00,2023-08-26 00:06:16+00:00,100006.0,"1 day, 3:46:46","[{'comment_id': 1304852155, 'comment_body': 'I made a typo in the issue and we settled on using hyphen instead of underscore. \r\nOf course we should make sure the names match between the service info and the API but the correct one is the one bellow.\r\n```suggestion\r\n        ""sorted-name-length-pairs"":{\r\n```', 'comment_created': datetime.datetime(2023, 8, 24, 20, 50, 31, tzinfo=datetime.timezone.utc), 'commenter': 'tcezard', 'type': 'User'}, {'comment_id': 1305340040, 'comment_body': ""As a future improvement maybe `version` and `updatedAt` should be filled dynamically, even if the rest isn't.\r\n\r\nAlso @tcezard, what's the difference between this `version` and `type.version`?  This one is the code version and the other is the spec version?"", 'comment_created': datetime.datetime(2023, 8, 25, 8, 11, 43, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1305343283, 'comment_body': '```suggestion\r\n          ""description"": ""Objects composed of length and name of a sequence digested and ordered lexicographically."",\r\n```', 'comment_created': datetime.datetime(2023, 8, 25, 8, 15, 1, tzinfo=datetime.timezone.utc), 'commenter': 'apriltuesday', 'type': 'User'}, {'comment_id': 1305353756, 'comment_body': 'For the versions: \r\n - [version](https://github.com/ga4gh-discovery/ga4gh-service-info/blob/develop/service-info.yaml#L101) is the version of the service\r\n - [type.version](https://github.com/ga4gh-discovery/ga4gh-service-info/blob/c8481aa5f5aa499cd2a6af41a3f29564000bf672/service-info.yaml#L119) is the version of the API', 'comment_created': datetime.datetime(2023, 8, 25, 8, 24, 55, tzinfo=datetime.timezone.utc), 'commenter': 'tcezard', 'type': 'User'}, {'comment_id': 1317326903, 'comment_body': 'actually we decided on underscores, right?', 'comment_created': datetime.datetime(2023, 9, 6, 13, 54, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nsheff', 'type': 'User'}]","[{'commit_sha': 'becb03a6298b7ac739b7f6014ed04ec5873f11fa', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f78329d5a1190d0b75c156b5135c6ef8035a21b', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '069bc6e0f6641b857c07fedaa4b9e736fc4ef803', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a79961e99aec74f7c7baa8970ef7b8cb6a195f9a', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1488851721,basic integration tests for the API's endpoints,"Did some integration tests for all 5 endpoints:
- GET - /eva/webservices/seqcol/collection/{digest}
- PUT - /eva/webservices/seqcol/admin/seqcols/{asm_accession}
- GET - /eva/webservices/seqcol/comparison/{digest1}/{digest2}
- POST - /eva/webservices/seqcol/comparison/{digest1} + body = {....}
- GET - /eva/webservices/seqcol/service-info (Still waiting for service-info branch rebase)",True,44,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/44,https://github.com/EBIvariation/eva-seqcol/pull/44,closed,401,26,11,4,0,2,0,0,[],2023-08-25 00:32:44+00:00,2023-08-31 17:46:16+00:00,580412.0,"6 days, 17:13:32","[{'comment_id': 1305473613, 'comment_body': 'Suggest changing this to 14.0 which is the EBI supported version at this time...', 'comment_created': datetime.datetime(2023, 8, 25, 10, 13, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sundarvenkata-EBI', 'type': 'User'}, {'comment_id': 1305621822, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 25, 12, 53, 37, tzinfo=datetime.timezone.utc), 'commenter': 'waterflow80', 'type': 'User'}]","[{'commit_sha': 'adc466ef3262cc881951d72d40468eccbb7d9de2', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cbdf93c2a5cf9ebfa86174c3689b50e63e62e28', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97246fa6412a0de0e4f9ccce06624d2ed02d927d', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78e8d8b4e5dc6e6a87b8e2b169ae87933f04f2fb', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1490413335,Fixed the digits verification for seqCol arrays to be digested - ingestion endpoint,"closes #45 
I was able to insert seqCol objects related to asm_accession: GCA_002263795.4 locally.",True,46,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/46,https://github.com/EBIvariation/eva-seqcol/pull/46,closed,23,2,7,1,1,0,0,0,[],2023-08-26 00:16:03+00:00,2023-08-31 18:25:14+00:00,497351.0,"5 days, 18:09:11",[],"[{'commit_sha': '04d9605daa25203f6e4877280645e814a9493ec8', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6
1490711037,fixed the seqCol retrieval's default level ,Default level should be `2` instead of `1` when retrieving the seqCol object.,True,47,https://api.github.com/repos/EBIvariation/eva-seqcol/pulls/47,https://github.com/EBIvariation/eva-seqcol/pull/47,closed,3,4,1,1,1,0,0,0,[],2023-08-26 16:36:40+00:00,2023-08-26 16:45:28+00:00,528.0,0:08:48,[],"[{'commit_sha': '01a78ed74e0babad00bc3f864d8d318822f78f86', 'committer_username': 'waterflow80', 'committer_name': 'Haroune Hassine', 'committer_email': 'thessalonikaathena@outlook.com', 'commit_date': datetime.datetime(2021, 4, 12, 21, 40, 53, tzinfo=datetime.timezone.utc)}]",Haroune Hassine,82417779,thessalonikaathena@outlook.com,User,,24,,16,6

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
261804761,contig-alias,EBIvariation/contig-alias,Java,12,4,5,6,547,20,4,10,"[{'id': 1394275737, 'number': 118, 'closed': None, 'created': datetime.datetime(2023, 6, 15, 14, 43, 13, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1160, 'deletions': 11, 'state': 'open'}, {'id': 1392875447, 'number': 117, 'closed': None, 'created': datetime.datetime(2023, 6, 14, 18, 15, 50, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 272, 'deletions': 9, 'state': 'open'}, {'id': 1391344022, 'number': 116, 'closed': None, 'created': datetime.datetime(2023, 6, 13, 21, 55, 55, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 306, 'deletions': 9, 'state': 'open'}, {'id': 1390575738, 'number': 115, 'closed': None, 'created': datetime.datetime(2023, 6, 13, 13, 2, 50, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 259, 'deletions': 9, 'state': 'open'}, {'id': 1389139047, 'number': 114, 'closed': None, 'created': datetime.datetime(2023, 6, 12, 17, 41, 47, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 489, 'deletions': 9, 'state': 'open'}, {'id': 1387709106, 'number': 113, 'closed': None, 'created': datetime.datetime(2023, 6, 11, 22, 39, 31, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 452, 'deletions': 0, 'state': 'open'}, {'id': 1383412128, 'number': 112, 'closed': None, 'created': datetime.datetime(2023, 6, 7, 21, 33, 18, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 947, 'deletions': 10, 'state': 'open'}, {'id': 1370458165, 'number': 110, 'closed': None, 'created': datetime.datetime(2023, 5, 30, 13, 15, 24, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 885, 'deletions': 0, 'state': 'open'}, {'id': 1370441265, 'number': 109, 'closed': datetime.datetime(2023, 5, 30, 13, 12, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 30, 13, 7, 33, tzinfo=datetime.timezone.utc), 'time_taken': 321.0, 'time_delta': '0:05:21', 'additions': 405, 'deletions': 0, 'state': 'closed'}]"
657608311,eva-seqcol,EBIvariation/eva-seqcol,Java,5,1,3,3,257,13,3,3,"[{'id': 1833029761, 'number': 83, 'closed': datetime.datetime(2024, 5, 22, 14, 23, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 20, 21, 47, 22, tzinfo=datetime.timezone.utc), 'time_taken': 2738177.0, 'time_delta': '31 days, 16:36:17', 'additions': 151, 'deletions': 51, 'state': 'closed'}, {'id': 1820998171, 'number': 82, 'closed': None, 'created': datetime.datetime(2024, 4, 12, 22, 8, 31, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 289, 'deletions': 53, 'state': 'open'}, {'id': 1787022106, 'number': 81, 'closed': None, 'created': datetime.datetime(2024, 3, 22, 17, 35, 57, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 195, 'deletions': 26, 'state': 'open'}, {'id': 1714191373, 'number': 79, 'closed': datetime.datetime(2024, 2, 7, 10, 37, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 6, 17, 34, 32, tzinfo=datetime.timezone.utc), 'time_taken': 61366.0, 'time_delta': '17:02:46', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1712107901, 'number': 78, 'closed': None, 'created': datetime.datetime(2024, 2, 5, 17, 1, 33, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 34, 'deletions': 18, 'state': 'open'}, {'id': 1690063740, 'number': 77, 'closed': datetime.datetime(2024, 1, 29, 16, 32, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 22, 15, 32, 8, tzinfo=datetime.timezone.utc), 'time_taken': 608414.0, 'time_delta': '7 days, 1:00:14', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 1663104912, 'number': 75, 'closed': datetime.datetime(2024, 1, 20, 15, 52, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 3, 11, 38, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1484010.0, 'time_delta': '17 days, 4:13:30', 'additions': 156, 'deletions': 35, 'state': 'closed'}, {'id': 1662919238, 'number': 74, 'closed': datetime.datetime(2024, 1, 8, 18, 40, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 3, 9, 54, 48, tzinfo=datetime.timezone.utc), 'time_taken': 463520.0, 'time_delta': '5 days, 8:45:20', 'additions': 57, 'deletions': 33, 'state': 'closed'}, {'id': 1655159828, 'number': 73, 'closed': datetime.datetime(2024, 1, 8, 18, 38, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 22, 14, 17, 57, tzinfo=datetime.timezone.utc), 'time_taken': 1484455.0, 'time_delta': '17 days, 4:20:55', 'additions': 36, 'deletions': 29, 'state': 'closed'}, {'id': 1620921228, 'number': 69, 'closed': datetime.datetime(2023, 12, 1, 13, 26, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 29, 0, 18, 9, tzinfo=datetime.timezone.utc), 'time_taken': 220110.0, 'time_delta': '2 days, 13:08:30', 'additions': 14, 'deletions': 21, 'state': 'closed'}, {'id': 1620896663, 'number': 68, 'closed': datetime.datetime(2023, 12, 1, 13, 26, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 28, 23, 55, 31, tzinfo=datetime.timezone.utc), 'time_taken': 221455.0, 'time_delta': '2 days, 13:30:55', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1616213637, 'number': 67, 'closed': datetime.datetime(2023, 12, 2, 21, 49, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 24, 20, 28, 37, tzinfo=datetime.timezone.utc), 'time_taken': 696064.0, 'time_delta': '8 days, 1:21:04', 'additions': 58, 'deletions': 69, 'state': 'closed'}, {'id': 1606808095, 'number': 66, 'closed': datetime.datetime(2023, 11, 21, 15, 15, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 17, 16, 51, 34, tzinfo=datetime.timezone.utc), 'time_taken': 339840.0, 'time_delta': '3 days, 22:24:00', 'additions': 494, 'deletions': 269, 'state': 'closed'}, {'id': 1604241602, 'number': 65, 'closed': datetime.datetime(2023, 11, 16, 11, 54, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 16, 11, 48, 45, tzinfo=datetime.timezone.utc), 'time_taken': 318.0, 'time_delta': '0:05:18', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1604227712, 'number': 64, 'closed': datetime.datetime(2023, 11, 16, 11, 40, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 16, 11, 39, 2, tzinfo=datetime.timezone.utc), 'time_taken': 77.0, 'time_delta': '0:01:17', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1604210718, 'number': 63, 'closed': datetime.datetime(2023, 11, 16, 11, 33, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 16, 11, 28, 46, tzinfo=datetime.timezone.utc), 'time_taken': 276.0, 'time_delta': '0:04:36', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1602396151, 'number': 62, 'closed': datetime.datetime(2023, 11, 17, 16, 48, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 15, 11, 40, 18, tzinfo=datetime.timezone.utc), 'time_taken': 191274.0, 'time_delta': '2 days, 5:07:54', 'additions': 112, 'deletions': 75, 'state': 'closed'}, {'id': 1577669687, 'number': 58, 'closed': datetime.datetime(2023, 11, 13, 21, 19, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 28, 21, 44, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1380895.0, 'time_delta': '15 days, 23:34:55', 'additions': 250, 'deletions': 114, 'state': 'closed'}, {'id': 1567725968, 'number': 56, 'closed': datetime.datetime(2023, 10, 21, 11, 50, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 21, 11, 48, 33, tzinfo=datetime.timezone.utc), 'time_taken': 117.0, 'time_delta': '0:01:57', 'additions': 223, 'deletions': 171, 'state': 'closed'}, {'id': 1561374651, 'number': 55, 'closed': datetime.datetime(2023, 11, 21, 11, 31, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 17, 21, 32, 44, tzinfo=datetime.timezone.utc), 'time_taken': 2987931.0, 'time_delta': '34 days, 13:58:51', 'additions': 223, 'deletions': 171, 'state': 'closed'}, {'id': 1546528471, 'number': 54, 'closed': datetime.datetime(2023, 10, 20, 21, 26, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 7, 23, 25, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1116048.0, 'time_delta': '12 days, 22:00:48', 'additions': 239, 'deletions': 133, 'state': 'closed'}, {'id': 1525283513, 'number': 52, 'closed': datetime.datetime(2023, 9, 25, 20, 29, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 21, 17, 25, 7, tzinfo=datetime.timezone.utc), 'time_taken': 356659.0, 'time_delta': '4 days, 3:04:19', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 1523683288, 'number': 51, 'closed': datetime.datetime(2023, 9, 25, 20, 30, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 20, 20, 2, 5, tzinfo=datetime.timezone.utc), 'time_taken': 433683.0, 'time_delta': '5 days, 0:28:03', 'additions': 20, 'deletions': 20, 'state': 'closed'}, {'id': 1490711037, 'number': 47, 'closed': datetime.datetime(2023, 8, 26, 16, 45, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 26, 16, 36, 40, tzinfo=datetime.timezone.utc), 'time_taken': 528.0, 'time_delta': '0:08:48', 'additions': 3, 'deletions': 4, 'state': 'closed'}, {'id': 1490413335, 'number': 46, 'closed': datetime.datetime(2023, 8, 31, 18, 25, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 26, 0, 16, 3, tzinfo=datetime.timezone.utc), 'time_taken': 497351.0, 'time_delta': '5 days, 18:09:11', 'additions': 23, 'deletions': 2, 'state': 'closed'}, {'id': 1488851721, 'number': 44, 'closed': datetime.datetime(2023, 8, 31, 17, 46, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 25, 0, 32, 44, tzinfo=datetime.timezone.utc), 'time_taken': 580412.0, 'time_delta': '6 days, 17:13:32', 'additions': 401, 'deletions': 26, 'state': 'closed'}, {'id': 1488642491, 'number': 43, 'closed': datetime.datetime(2023, 8, 26, 0, 6, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 24, 20, 19, 30, tzinfo=datetime.timezone.utc), 'time_taken': 100006.0, 'time_delta': '1 day, 3:46:46', 'additions': 147, 'deletions': 2, 'state': 'closed'}, {'id': 1488501989, 'number': 42, 'closed': datetime.datetime(2023, 8, 26, 16, 34, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 24, 18, 25, 22, tzinfo=datetime.timezone.utc), 'time_taken': 166177.0, 'time_delta': '1 day, 22:09:37', 'additions': 175, 'deletions': 28, 'state': 'closed'}, {'id': 1481875777, 'number': 41, 'closed': datetime.datetime(2023, 8, 21, 18, 30, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 20, 18, 52, 40, tzinfo=datetime.timezone.utc), 'time_taken': 85061.0, 'time_delta': '23:37:41', 'additions': 75, 'deletions': 13, 'state': 'closed'}, {'id': 1481765307, 'number': 40, 'closed': datetime.datetime(2023, 8, 22, 16, 29, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 20, 11, 38, 46, tzinfo=datetime.timezone.utc), 'time_taken': 190217.0, 'time_delta': '2 days, 4:50:17', 'additions': 57, 'deletions': 7, 'state': 'closed'}, {'id': 1479786219, 'number': 36, 'closed': datetime.datetime(2023, 8, 20, 9, 48, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 17, 23, 19, 50, tzinfo=datetime.timezone.utc), 'time_taken': 210523.0, 'time_delta': '2 days, 10:28:43', 'additions': 46, 'deletions': 37, 'state': 'closed'}, {'id': 1476408527, 'number': 33, 'closed': datetime.datetime(2023, 8, 17, 22, 25, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 15, 19, 52, 56, tzinfo=datetime.timezone.utc), 'time_taken': 181970.0, 'time_delta': '2 days, 2:32:50', 'additions': 313, 'deletions': 120, 'state': 'closed'}, {'id': 1474622897, 'number': 31, 'closed': datetime.datetime(2023, 8, 17, 18, 20, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 14, 15, 19, 40, tzinfo=datetime.timezone.utc), 'time_taken': 270072.0, 'time_delta': '3 days, 3:01:12', 'additions': 47, 'deletions': 27, 'state': 'closed'}, {'id': 1473525885, 'number': 30, 'closed': datetime.datetime(2023, 8, 17, 10, 15, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 13, 22, 58, 49, tzinfo=datetime.timezone.utc), 'time_taken': 299778.0, 'time_delta': '3 days, 11:16:18', 'additions': 142, 'deletions': 10, 'state': 'closed'}, {'id': 1473373772, 'number': 29, 'closed': datetime.datetime(2023, 8, 16, 13, 1, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 13, 13, 5, 54, tzinfo=datetime.timezone.utc), 'time_taken': 258953.0, 'time_delta': '2 days, 23:55:53', 'additions': 9, 'deletions': 5, 'state': 'closed'}, {'id': 1473362046, 'number': 28, 'closed': datetime.datetime(2023, 8, 15, 17, 32, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 13, 12, 24, 29, tzinfo=datetime.timezone.utc), 'time_taken': 191258.0, 'time_delta': '2 days, 5:07:38', 'additions': 51, 'deletions': 7, 'state': 'closed'}, {'id': 1465972302, 'number': 24, 'closed': datetime.datetime(2023, 8, 12, 23, 3, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 7, 22, 7, 53, tzinfo=datetime.timezone.utc), 'time_taken': 435315.0, 'time_delta': '5 days, 0:55:15', 'additions': 370, 'deletions': 192, 'state': 'closed'}, {'id': 1460239786, 'number': 22, 'closed': datetime.datetime(2023, 8, 7, 14, 53, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 2, 18, 18, 4, tzinfo=datetime.timezone.utc), 'time_taken': 419743.0, 'time_delta': '4 days, 20:35:43', 'additions': 131, 'deletions': 122, 'state': 'closed'}, {'id': 1458195946, 'number': 21, 'closed': datetime.datetime(2023, 8, 11, 9, 34, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 14, 12, 21, tzinfo=datetime.timezone.utc), 'time_taken': 847329.0, 'time_delta': '9 days, 19:22:09', 'additions': 83, 'deletions': 28, 'state': 'closed'}, {'id': 1456547600, 'number': 20, 'closed': datetime.datetime(2023, 8, 17, 22, 26, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 31, 15, 43, 18, tzinfo=datetime.timezone.utc), 'time_taken': 1493006.0, 'time_delta': '17 days, 6:43:26', 'additions': 480, 'deletions': 34, 'state': 'closed'}, {'id': 1455111292, 'number': 19, 'closed': datetime.datetime(2023, 8, 4, 10, 32, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 30, 11, 19, 18, tzinfo=datetime.timezone.utc), 'time_taken': 429171.0, 'time_delta': '4 days, 23:12:51', 'additions': 55, 'deletions': 57, 'state': 'closed'}, {'id': 1448881715, 'number': 16, 'closed': datetime.datetime(2023, 7, 31, 15, 43, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 25, 17, 47, 51, tzinfo=datetime.timezone.utc), 'time_taken': 510968.0, 'time_delta': '5 days, 21:56:08', 'additions': 359, 'deletions': 33, 'state': 'closed'}, {'id': 1443681135, 'number': 14, 'closed': datetime.datetime(2023, 7, 27, 12, 47, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 20, 22, 31, 28, tzinfo=datetime.timezone.utc), 'time_taken': 569777.0, 'time_delta': '6 days, 14:16:17', 'additions': 101, 'deletions': 112, 'state': 'closed'}, {'id': 1443091004, 'number': 11, 'closed': datetime.datetime(2023, 7, 24, 16, 39, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 20, 15, 10, 20, tzinfo=datetime.timezone.utc), 'time_taken': 350928.0, 'time_delta': '4 days, 1:28:48', 'additions': 1474, 'deletions': 82, 'state': 'closed'}, {'id': 1429474263, 'number': 10, 'closed': datetime.datetime(2023, 7, 24, 16, 39, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 11, 13, 28, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1134609.0, 'time_delta': '13 days, 3:10:09', 'additions': 1116, 'deletions': 334, 'state': 'closed'}, {'id': 1426391186, 'number': 9, 'closed': datetime.datetime(2023, 7, 18, 11, 30, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 9, 18, 7, tzinfo=datetime.timezone.utc), 'time_taken': 753816.0, 'time_delta': '8 days, 17:23:36', 'additions': 5636, 'deletions': 133, 'state': 'closed'}, {'id': 1426116782, 'number': 8, 'closed': datetime.datetime(2023, 7, 12, 10, 44, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 8, 23, 2, 1, tzinfo=datetime.timezone.utc), 'time_taken': 301353.0, 'time_delta': '3 days, 11:42:33', 'additions': 25, 'deletions': 0, 'state': 'closed'}, {'id': 1421552514, 'number': 7, 'closed': datetime.datetime(2023, 7, 11, 18, 0, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 18, 21, 50, tzinfo=datetime.timezone.utc), 'time_taken': 517123.0, 'time_delta': '5 days, 23:38:43', 'additions': 5508, 'deletions': 4, 'state': 'closed'}, {'id': 1419579504, 'number': 6, 'closed': datetime.datetime(2023, 7, 8, 10, 32, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 4, 12, 32, 35, tzinfo=datetime.timezone.utc), 'time_taken': 338412.0, 'time_delta': '3 days, 22:00:12', 'additions': 22, 'deletions': 4, 'state': 'closed'}, {'id': 1413358797, 'number': 3, 'closed': datetime.datetime(2023, 7, 6, 22, 55, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 29, 13, 38, 31, tzinfo=datetime.timezone.utc), 'time_taken': 638192.0, 'time_delta': '7 days, 9:16:32', 'additions': 151574, 'deletions': 94, 'state': 'closed'}, {'id': 1411392508, 'number': 2, 'closed': datetime.datetime(2023, 7, 5, 12, 6, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 28, 10, 19, 56, tzinfo=datetime.timezone.utc), 'time_taken': 611181.0, 'time_delta': '7 days, 1:46:21', 'additions': 603, 'deletions': 0, 'state': 'closed'}, {'id': 1408006200, 'number': 1, 'closed': datetime.datetime(2023, 7, 4, 11, 12, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 26, 13, 53, 25, tzinfo=datetime.timezone.utc), 'time_taken': 681562.0, 'time_delta': '7 days, 21:19:22', 'additions': 9356, 'deletions': 0, 'state': 'closed'}]"
