pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
391830983,Add feature to set application language.,"**What's this PR do?**
Fixes: #855 
Adds feature that lets user to change Zulip desktop client language without requiring to change the system language as was the case earlier

**Any background context you want to provide?**
Earlier, Zulip client used to fetch system locale thus setting default language to the client. Now we enable user to set custom language to the client.

**Screenshots?**
![Screenshot 2020-03-21 at 12 04 20 PM](https://user-images.githubusercontent.com/31139861/77222545-45d52480-6b7a-11ea-81a4-48c39db02d80.png)

**You have tested this PR on:**
[✓ ] macOS Catalina 10.15.2",True,902,https://api.github.com/repos/zulip/zulip-desktop/pulls/902,https://github.com/zulip/zulip-desktop/pull/902,closed,83,12,5,1,14,24,1,0,[{'name': 'size: L'}],2020-03-21 08:18:00+00:00,2020-04-22 12:38:50+00:00,2780450.0,"32 days, 4:20:50","[{'comment_id': 395992475, 'comment_body': ""Pass `event` here as parameter, then there is no need of the `opt` and the for-loop below.\r\n```ts\r\nlangMenu.addEventListener('change', (event: Event) => {\r\n```"", 'comment_created': datetime.datetime(2020, 3, 21, 13, 24, 21, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 395992520, 'comment_body': 'use `event.target.value` here and `event.target.selectedIndex` below instead.', 'comment_created': datetime.datetime(2020, 3, 21, 13, 25, 18, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 395992763, 'comment_body': '`langMenu` and `langList` both are the same I think. Can do with one of them.', 'comment_created': datetime.datetime(2020, 3, 21, 13, 28, 41, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 395992807, 'comment_body': ""Don't use `select` here, use the class name instead."", 'comment_created': datetime.datetime(2020, 3, 21, 13, 29, 11, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 395992970, 'comment_body': 'No need of this. Default (Arial) will be inherited.', 'comment_created': datetime.datetime(2020, 3, 21, 13, 31, 59, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 395993025, 'comment_body': '@akashnimare We should go or `requires restart` here? Since the menu bar needs to be rebuild.', 'comment_created': datetime.datetime(2020, 3, 21, 13, 32, 45, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 395995509, 'comment_body': 'Can use as following for TS errors - \r\n```ts\r\n(event.target as HTMLSelectElement).value;\r\n```', 'comment_created': datetime.datetime(2020, 3, 21, 14, 6, 50, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 395996079, 'comment_body': 'Also instead of `any`, use `HTMLSelectElement` here.', 'comment_created': datetime.datetime(2020, 3, 21, 14, 15, 15, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 395996317, 'comment_body': 'use `HTMLOptionElement` instead of `any`.', 'comment_created': datetime.datetime(2020, 3, 21, 14, 17, 13, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 395997270, 'comment_body': 'I was also ambiguous so kept refresh for the time being, now changed to restart\r\nIf you/ @akashnimare  think otherwise, I will revert it', 'comment_created': datetime.datetime(2020, 3, 21, 14, 29, 39, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 396025372, 'comment_body': 'Yeah, gotta add restart here.\r\n', 'comment_created': datetime.datetime(2020, 3, 21, 20, 13, 35, tzinfo=datetime.timezone.utc), 'commenter': 'akashnimare', 'type': 'User'}, {'comment_id': 396025624, 'comment_body': 'I think it makes sense to store the lang names in some array and call it using a for loop or something. You can make a component for the same. ', 'comment_created': datetime.datetime(2020, 3, 21, 20, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'akashnimare', 'type': 'User'}, {'comment_id': 396065335, 'comment_body': 'Changes made! Please have a look.', 'comment_created': datetime.datetime(2020, 3, 22, 8, 2, 24, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 396077585, 'comment_body': 'This is better.', 'comment_created': datetime.datetime(2020, 3, 22, 10, 32, 20, tzinfo=datetime.timezone.utc), 'commenter': 'akashnimare', 'type': 'User'}, {'comment_id': 407204636, 'comment_body': ""@manavmehta need to rephrase this and don't make it gender-specific."", 'comment_created': datetime.datetime(2020, 4, 12, 14, 18, 28, tzinfo=datetime.timezone.utc), 'commenter': 'akashnimare', 'type': 'User'}, {'comment_id': 407205581, 'comment_body': ""@manavmehta I was thinking about how we can sync this up with the translations we have in `/translations`. Maybe it's worth putting this in lang.json or something and then import it. cc @abhigyank "", 'comment_created': datetime.datetime(2020, 4, 12, 14, 25, 15, tzinfo=datetime.timezone.utc), 'commenter': 'akashnimare', 'type': 'User'}, {'comment_id': 407210040, 'comment_body': 'Hmm yes, then the languages would be dynamic. But the issue would be that `/translations` only has the `key` in the file name, not sure how we can get the language string from there if we are doing some sort of sync.', 'comment_created': datetime.datetime(2020, 4, 12, 14, 59, 43, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 409750603, 'comment_body': ""@akashnimare @abhigyank checkout [1219be8](https://github.com/zulip/zulip-desktop/pull/902/commits/1219be8ac7e4b023c3e8d0dd94d6edfcb4c34c15)\r\nI hope this is what you're looking for @akashnimare ?\r\n\r\nAlso any refinements?"", 'comment_created': datetime.datetime(2020, 4, 16, 18, 5, 51, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 410056363, 'comment_body': '@manavmehta can you set ""en-US"" as the default locale here? ', 'comment_created': datetime.datetime(2020, 4, 17, 7, 58, 54, tzinfo=datetime.timezone.utc), 'commenter': 'akashnimare', 'type': 'User'}, {'comment_id': 410057308, 'comment_body': 'Also, let\'s rename ""appLocale"" to ""appLanguage""?', 'comment_created': datetime.datetime(2020, 4, 17, 8, 0, 49, tzinfo=datetime.timezone.utc), 'commenter': 'akashnimare', 'type': 'User'}, {'comment_id': 410130105, 'comment_body': 'You want this change in translation-util or everywhere I used the word locale ?', 'comment_created': datetime.datetime(2020, 4, 17, 10, 16, 38, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 410656270, 'comment_body': 'We want to put ""appLanguage"" in the settings.json so make the changes where required.', 'comment_created': datetime.datetime(2020, 4, 18, 6, 26, 32, tzinfo=datetime.timezone.utc), 'commenter': 'akashnimare', 'type': 'User'}, {'comment_id': 413249445, 'comment_body': 'Storing this as an index is extremely fragile—it means we can never reorder, insert, or delete languages without disturbing other languages.\r\n\r\n#939', 'comment_created': datetime.datetime(2020, 4, 22, 19, 12, 18, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 413722649, 'comment_body': 'Agreed. Thanks @andersk :)', 'comment_created': datetime.datetime(2020, 4, 23, 11, 5, 6, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}]","[{'commit_sha': '6289c5b4831360f5f9822992eed3d505fd7bfa7e', 'committer_username': 'manavmehta', 'committer_name': 'Manav Mehta', 'committer_email': 'tmanavmehta@gmail.com', 'commit_date': datetime.datetime(2017, 8, 18, 17, 42, 6, tzinfo=datetime.timezone.utc)}]",Manav Mehta,31139861,tmanavmehta@gmail.com,User,,23,,6,33
400399454,Handle Reset options gracefully.,"**What's this PR do?**
Fixes: #903
- Transport `Factory Reset` from menu bar to Settings page
- Remove `Reset App Data` option as it does not do something much useful

**Screenshots?**
![Reset](https://user-images.githubusercontent.com/31139861/82370130-aa571780-9a35-11ea-9615-653829fd2409.png)
P.S. The `?` is added in the messageBox heading, just after screenshot

**You have tested this PR on:**
  - [X] macOS Catalina 10.15.2
  - [X] Linux/Ubuntu 18.04",True,924,https://api.github.com/repos/zulip/zulip-desktop/pulls/924,https://github.com/zulip/zulip-desktop/pull/924,closed,30,79,3,1,11,10,1,0,[{'name': 'size: XL'}],2020-04-07 17:19:02+00:00,2020-05-20 16:24:37+00:00,3711935.0,"42 days, 23:05:35","[{'comment_id': 405159878, 'comment_body': 'These strings aren\'t great; we use American English and the ""This will"" is weird.  How about:\r\n\r\n""Reset all desktop application settings to defaults, preserving connected organizations and accounts""', 'comment_created': datetime.datetime(2020, 4, 7, 22, 52, 53, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 405160039, 'comment_body': '""Reset all desktop application settings to defaults, deleting connected organizations and accounts""', 'comment_created': datetime.datetime(2020, 4, 7, 22, 53, 21, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 405510092, 'comment_body': 'Sure thing. Please have a look :)', 'comment_created': datetime.datetime(2020, 4, 8, 13, 7, 49, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 405511523, 'comment_body': '@timabbott @akashnimare any suggestions on what else can be done with `Reset App Data`?', 'comment_created': datetime.datetime(2020, 4, 8, 13, 9, 55, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 405527551, 'comment_body': 'We are removing preferences here. So should no write that preferences will not be removed.', 'comment_created': datetime.datetime(2020, 4, 8, 13, 32, 51, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 405553176, 'comment_body': 'My bad. That should be organisations and accounts', 'comment_created': datetime.datetime(2020, 4, 8, 14, 8, 4, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 405715698, 'comment_body': 'Please spell ""organizations""; we use American english spelling.', 'comment_created': datetime.datetime(2020, 4, 8, 18, 7, 51, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 405716335, 'comment_body': 'Can you show what this looks like? I don\'t understand why you have ""Selecting YES will ..."" in the label for this setting.  We don\'t have similar extra verbosity in other settings, and I just specifically suggested removing such extra verbosity yesterday.', 'comment_created': datetime.datetime(2020, 4, 8, 18, 8, 55, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 405786924, 'comment_body': '![Screenshot 2020-04-09 at 1 44 27 AM](https://user-images.githubusercontent.com/31139861/78829261-a7fba980-7a03-11ea-82a3-419978d30713.png)\r\nThis is how it, at present in this PR, looks like\r\n\r\nI totally agree on the part: \r\n> I just specifically suggested removing such extra verbosity yesterday.\r\n>\r\nJust left this as we already displayed these messages', 'comment_created': datetime.datetime(2020, 4, 8, 20, 15, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 405788027, 'comment_body': 'Will push in next commit :)', 'comment_created': datetime.datetime(2020, 4, 8, 20, 16, 48, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}]","[{'commit_sha': '6041a73b5eec07a9936f6c8c1563afb09529410e', 'committer_username': 'manavmehta', 'committer_name': 'Manav Mehta', 'committer_email': 'tmanavmehta@gmail.com', 'commit_date': datetime.datetime(2017, 8, 18, 17, 42, 6, tzinfo=datetime.timezone.utc)}]",Manav Mehta,31139861,tmanavmehta@gmail.com,User,,23,,6,33
402345956,"Generate User-Agent when app starts, thus avoiding storing it on disk","Fixes: #921 

**What's this PR do?**
Fetch and send UA from main process and use ipc call to catch it in renderer process: system-util.ts and use it elsewhere in the app as required, avoiding storing it on disk.

**Any background context you want to provide?**
Please refer #921 

**You have tested this PR on:**
  - [ ] Linux/Ubuntu
  - [X] macOS Catalina 10.15.2
",True,929,https://api.github.com/repos/zulip/zulip-desktop/pulls/929,https://github.com/zulip/zulip-desktop/pull/929,closed,17,24,4,1,9,12,1,0,[{'name': 'size: M'}],2020-04-12 14:22:25+00:00,2020-04-26 20:39:23+00:00,1232218.0,"14 days, 6:16:58","[{'comment_id': 408207483, 'comment_body': '@manavmehta we should put this where we initialize other settings?', 'comment_created': datetime.datetime(2020, 4, 14, 15, 1, 2, tzinfo=datetime.timezone.utc), 'commenter': 'akashnimare', 'type': 'User'}, {'comment_id': 408210371, 'comment_body': ""We need to use this with the session's UA. We are using `ZulipElectron` to detect the desktop app. Check out -\r\nhttps://github.com/zulip/zulip/search?q=ZulipElectron&unscoped_q=ZulipElectron\r\n\r\ncc @timabbott "", 'comment_created': datetime.datetime(2020, 4, 14, 15, 4, 55, tzinfo=datetime.timezone.utc), 'commenter': 'akashnimare', 'type': 'User'}, {'comment_id': 408238581, 'comment_body': ""@akashnimare Maybe we should refine `test_insecure_desktop_app(self)` itself? (wrt desktop app only)\r\nAs looking at L101, isn't this exactly what @andersk pointed out? As this forces us to append `ZulipElectron/${app.getVersion()}` to the UA.\r\n\r\nhttps://github.com/zulip/zulip/blob/17723b16177663a558c03ef6a41a926163ce4241/zerver/tests/test_compatibility.py#L101"", 'comment_created': datetime.datetime(2020, 4, 14, 15, 41, 51, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 415079475, 'comment_body': ""Hmm, I don't think using a `console.log()` statement is a great idea - we're already logging the UA sent on the server side, right?\r\nMaybe we can use a Sentry call here instead if we do client-side logs. "", 'comment_created': datetime.datetime(2020, 4, 25, 15, 0, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kanishk98', 'type': 'User'}, {'comment_id': 415080297, 'comment_body': ""Do we need this conditional? I believe the db handles that for us, doesn't it?"", 'comment_created': datetime.datetime(2020, 4, 25, 15, 5, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kanishk98', 'type': 'User'}, {'comment_id': 415080476, 'comment_body': ""Sorry, another nitpick, would you mind just returning the result of the expression directly?\r\nI don't see the need to declare a `const` here."", 'comment_created': datetime.datetime(2020, 4, 25, 15, 6, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kanishk98', 'type': 'User'}, {'comment_id': 415086276, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 4, 25, 15, 36, 48, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 415086360, 'comment_body': 'Probably it does. I was a little unsure about that. But you confirmed it for me. Thanks!', 'comment_created': datetime.datetime(2020, 4, 25, 15, 37, 27, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 415086486, 'comment_body': ""@kanishk98 I've changed the process from console.log() to logger.log()\r\nDO let me know if there is a need to make a Sentry call :)\r\n@akashnimare what would you suggest?"", 'comment_created': datetime.datetime(2020, 4, 25, 15, 38, 11, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 415375939, 'comment_body': 'This comment is wrong now since we don’t wait for `dom-ready` (and I don’t think there’s a reason to wait).', 'comment_created': datetime.datetime(2020, 4, 26, 18, 54, 55, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 415376418, 'comment_body': 'Remove this `if` branch, the `null` from the return type, and the logger. No reason to have a bunch of code for an impossible case.', 'comment_created': datetime.datetime(2020, 4, 26, 18, 57, 21, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 415383989, 'comment_body': ""My bad. Should've removed this in prev commit.\r\nRefactored"", 'comment_created': datetime.datetime(2020, 4, 26, 19, 37, 1, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}]","[{'commit_sha': '16f0af88533187dfbc219cd3832d8c1c43bdb6a8', 'committer_username': 'manavmehta', 'committer_name': 'Manav Mehta', 'committer_email': 'tmanavmehta@gmail.com', 'commit_date': datetime.datetime(2017, 8, 18, 17, 42, 6, tzinfo=datetime.timezone.utc)}]",Manav Mehta,31139861,tmanavmehta@gmail.com,User,,23,,6,33
408436797,macOS: Use electron API to get dark tray icon for the light theme.,"Context: #861 

**What's this PR do?**
We made a change to make the tray icon look flushed and coherent for the dark theme
A corresponding dark icon would do the necessary for the light theme
Electron makes it possible by using [Template Image](https://www.electronjs.org/docs/api/native-image#template-image)

**Screenshots?**
Presently we have this
![old light theme](https://user-images.githubusercontent.com/31139861/80196568-36df0780-863b-11ea-987f-80a5553220f1.png)
![dark theme](https://user-images.githubusercontent.com/31139861/80196607-465e5080-863b-11ea-90e2-9742456102bb.png)


This commit makes this change
![new light theme](https://user-images.githubusercontent.com/31139861/80196622-48281400-863b-11ea-840b-fe8ef6e84d85.png)
![dark theme](https://user-images.githubusercontent.com/31139861/80196607-465e5080-863b-11ea-90e2-9742456102bb.png)

**You have tested this PR on:**
  - [X] macOS Catalina 10.15.2
",True,941,https://api.github.com/repos/zulip/zulip-desktop/pulls/941,https://github.com/zulip/zulip-desktop/pull/941,closed,3,6,9,1,12,4,1,0,[{'name': 'size: S'}],2020-04-24 09:26:47+00:00,2020-05-19 15:33:14+00:00,2181987.0,"25 days, 6:06:27","[{'comment_id': 419145618, 'comment_body': 'The comment no longer applies and should be deleted too.', 'comment_created': datetime.datetime(2020, 5, 3, 19, 7, 14, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 419145663, 'comment_body': 'There’s no longer a reason to have the macOS icon in a different directory, right? This could just always be `../../resources/tray`.', 'comment_created': datetime.datetime(2020, 5, 3, 19, 7, 44, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 419341278, 'comment_body': 'I had the thought but preserved the extra directory so that the other contributors could comprehend what is Template Image and where it comes into play. (though we do have osx in the name)\r\nIf you feel I might shift it one dir up?', 'comment_created': datetime.datetime(2020, 5, 4, 10, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 419629004, 'comment_body': 'Yeah, I don’t see the extra directory doing anything to improve comprehensibility. Use the same directory to simplify the code. Feel free to rename the files to `tray-macOS-Template.png`, etc. or something.', 'comment_created': datetime.datetime(2020, 5, 4, 18, 11, 11, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}]","[{'commit_sha': 'eb0b3d96f527376fd030243f5ad898d08b5e5890', 'committer_username': 'manavmehta', 'committer_name': 'Manav Mehta', 'committer_email': 'tmanavmehta@gmail.com', 'commit_date': datetime.datetime(2017, 8, 18, 17, 42, 6, tzinfo=datetime.timezone.utc)}]",Manav Mehta,31139861,tmanavmehta@gmail.com,User,,23,,6,33
416505747,transifex: Setup Transifex for better translation process.,"**What's this PR do?**

1. add .tx/config to configure communication with Transifex CLI
2. add how-to-doc for translating zulip-desktop
3. add tx-pull executable script for pulling translations from Transifex
4. update supported-locales.json
5. remove now-inessential scripts and translations

and other necessary changes

**You have tested this PR on:**
  - [X] macOS
  - [ ] Ubuntu 20.04",True,957,https://api.github.com/repos/zulip/zulip-desktop/pulls/957,https://github.com/zulip/zulip-desktop/pull/957,closed,4306,2147,51,4,8,1,1,0,[{'name': 'size: XL'}],2020-05-12 06:03:22+00:00,2020-05-20 16:41:13+00:00,729471.0,"8 days, 10:37:51","[{'comment_id': 423720304, 'comment_body': 'These might or might not be required as-it-is and are prone to changes', 'comment_created': datetime.datetime(2020, 5, 12, 13, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}]","[{'commit_sha': 'b9c0bf1d2b6396694dd1b7c97f60c508fc2645a5', 'committer_username': 'manavmehta', 'committer_name': 'Manav Mehta', 'committer_email': 'tmanavmehta@gmail.com', 'commit_date': datetime.datetime(2017, 8, 18, 17, 42, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20d91ea24a6de49957db5ce913b693fe1e7e3035', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82f6c31dae8809b551a8fb236c8edd9aa0201e5d', 'committer_username': 'manavmehta', 'committer_name': 'Manav Mehta', 'committer_email': 'tmanavmehta@gmail.com', 'commit_date': datetime.datetime(2017, 8, 18, 17, 42, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18773232cbbd8ca640e421add87ed6372fc32ea0', 'committer_username': 'manavmehta', 'committer_name': 'Manav Mehta', 'committer_email': 'tmanavmehta@gmail.com', 'commit_date': datetime.datetime(2017, 8, 18, 17, 42, 6, tzinfo=datetime.timezone.utc)}]",Manav Mehta,31139861,tmanavmehta@gmail.com,User,,23,,6,33
422305427,spellchecker: Use Electron 8 built-in spellchecker. ,"**What's this PR do?**
#928 takes away with it the context menu as so this PR implements a custom context menu
Inherits commit from #928 as it was needed
**Screenshots?**

**You have tested this PR on:**
  - [X] macOS Catalina 10.15.2
  - [x] Linux/Ubuntu
  - [ ] Windows

Also fixes: #504 ",True,967,https://api.github.com/repos/zulip/zulip-desktop/pulls/967,https://github.com/zulip/zulip-desktop/pull/967,closed,248,303,12,5,4,39,1,0,[{'name': 'size: XL'}],2020-05-23 17:47:27+00:00,2020-06-18 12:44:24+00:00,2228217.0,"25 days, 18:56:57","[{'comment_id': 429600477, 'comment_body': 'Any need of this?', 'comment_created': datetime.datetime(2020, 5, 24, 5, 25, 9, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 429602283, 'comment_body': ""Inherited from #928 I'll check the package once"", 'comment_created': datetime.datetime(2020, 5, 24, 6, 1, 18, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 430595941, 'comment_body': 'bug: Most relevant suggestion is added at the bottom', 'comment_created': datetime.datetime(2020, 5, 26, 17, 48, 28, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 430596488, 'comment_body': ""bug: Separator visible on ubuntu even if word is not misspelled.\r\n`visible` attribute doesn't seem to work here too."", 'comment_created': datetime.datetime(2020, 5, 26, 17, 49, 20, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 430613354, 'comment_body': 'It’s required to work around CharlieHess/node-mac-notifier#19.', 'comment_created': datetime.datetime(2020, 5, 26, 18, 16, 18, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 432828898, 'comment_body': 'Can we first store everything from `props.dictionarySuggestions` to an array, reverse that and then insert into `menu`? That may solve this bug.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 8, 28, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 432864252, 'comment_body': 'Yes. That was my first choice. But I was going to push this to save some minor space  \r\n```suggestion\r\n\t\t\tlet suggestionIndex = 0;\r\n\t\t\tObject.values(props.dictionarySuggestions).forEach(value => {\r\n\t\t\t\tmenu.insert(suggestionIndex++, makeSuggestion(value as string));\r\n```', 'comment_created': datetime.datetime(2020, 5, 30, 15, 34, 1, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 432925472, 'comment_body': 'There’s no reason for this to be a function.', 'comment_created': datetime.datetime(2020, 5, 31, 8, 59, 9, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 432925819, 'comment_body': 'Instead of confusing everything with repeated `insert` calls (which also waste quadratic time), just use `map` to build an array and use a single `concat` to prepend it to the template before calling `Menu.buildFromTemplate`.', 'comment_created': datetime.datetime(2020, 5, 31, 9, 3, 42, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 433675272, 'comment_body': 'Thanks @andersk :)\r\nPlease have a look now.', 'comment_created': datetime.datetime(2020, 6, 2, 7, 30, 53, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 436264838, 'comment_body': 'This had to be done manually for the same reason.', 'comment_created': datetime.datetime(2020, 6, 6, 12, 25, 13, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 436265148, 'comment_body': ""This map could've been avoided."", 'comment_created': datetime.datetime(2020, 6, 6, 12, 29, 40, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 436266033, 'comment_body': '```suggestion\r\n\t\t\t\t<div class=""setting-description"">${t.__(\'SpellChecker Languages\')}</div>\r\n```', 'comment_created': datetime.datetime(2020, 6, 6, 12, 41, 23, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 436266156, 'comment_body': 'I think we should have this as true.', 'comment_created': datetime.datetime(2020, 6, 6, 12, 42, 55, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 436269852, 'comment_body': ""Seems a little inconvenient to click on the input field to select more languages, so I preferred `false`. If you think it should be `true`, we'll go with that.\r\ncc @akashnimare "", 'comment_created': datetime.datetime(2020, 6, 6, 13, 39, 37, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 436307836, 'comment_body': 'Why’s this crammed onto one line?', 'comment_created': datetime.datetime(2020, 6, 6, 23, 13, 39, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 436308126, 'comment_body': 'I assume this is copied and pasted from the `@yaireo/tagify` package. We should never copy and paste dependencies; we should load them from `node_modules`. One way to do that would be to add the stylesheet in JavaScript from `require.resolve(""@yaireo/tagify/dist/tagify.css"")`. A more general solution would be to build the app with webpack and html-webpack-plugin, or some other bundler.', 'comment_created': datetime.datetime(2020, 6, 6, 23, 20, 44, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 436308603, 'comment_body': 'Avoid `any` if at all possible. `event` has type `Event`. There is no `params` member of `Event`, but the `context-menu` event handler is passed `params: ContextMenuParams` as a second parameter. (Reference: https://github.com/electron-userland/electron-builder/blob/master/typings/electron.d.ts.)\r\n\r\nThis also makes the below `selectionText as string` casts unnecessary.', 'comment_created': datetime.datetime(2020, 6, 6, 23, 30, 18, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 436309284, 'comment_body': ""This is invalid HTML (due to the `->`s). We should always try to avoid HTML generation in favor of DOM manipulation:\r\n\r\n```ts\r\nnote.append('On macOS, the OS spellchecker is used.');\r\nnote.append(document.createElement('br'));\r\nnote.append('Change the language from System Preferences -> Keyboard -> Text -> Spelling.');\r\n```\r\n\r\nAdditionally, the UI strings should be internationalized.\r\n\r\n(And although it doesn’t change the fundamental point, consider true Unicode arrows: →.)"", 'comment_created': datetime.datetime(2020, 6, 6, 23, 43, 33, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 436309510, 'comment_body': 'This is a quadratic loop that could be avoided with better data structures.\r\n\r\n`string | void` doesn’t make sense.\r\n\r\nGenerally loops around `push` should be avoided in favor of `map`.', 'comment_created': datetime.datetime(2020, 6, 6, 23, 47, 43, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 436309551, 'comment_body': '…then we just want to ignore all but 100 of them?', 'comment_created': datetime.datetime(2020, 6, 6, 23, 48, 37, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 436309584, 'comment_body': 'Avoid `any`.', 'comment_created': datetime.datetime(2020, 6, 6, 23, 49, 40, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 436309600, 'comment_body': 'Avoid `any`.', 'comment_created': datetime.datetime(2020, 6, 6, 23, 50, 2, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 436309832, 'comment_body': 'These ought to be sorted.', 'comment_created': datetime.datetime(2020, 6, 6, 23, 54, 46, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 436333257, 'comment_body': '> One way to do that would be to add the stylesheet in JavaScript from `require.resolve(""@yaireo/tagify/dist/tagify.css"")`.\r\n\r\nBy this are you suggesting to add something like this in `preference.html` - \r\n```js\r\n\tlet tagifyCSS = document.createElement(""link"");\r\n\ttagifyCSS.rel = ""stylesheet"";\r\n\ttagifyCSS.type = ""text/css"";\r\n\ttagifyCSS.href = require.resolve(""@yaireo/tagify/dist/tagify.css"");\r\n\tdocument.querySelector(""head"").appendChild(tagifyCSS);\r\n```', 'comment_created': datetime.datetime(2020, 6, 7, 7, 11, 11, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 436335924, 'comment_body': 'Should be “Spell checker languages”.', 'comment_created': datetime.datetime(2020, 6, 7, 7, 47, 45, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 436347818, 'comment_body': ""There were 12 of them which would take up space and allow less code on screen thus reducing readability. I've spread it now."", 'comment_created': datetime.datetime(2020, 6, 7, 10, 22, 52, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 436348557, 'comment_body': 'Presently 50 locales are supported, so made it 100.\r\nNow changed to `Infinity`', 'comment_created': datetime.datetime(2020, 6, 7, 10, 31, 24, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 436373308, 'comment_body': ""@abhigyank the snippet can be shortened by assigning id to existing tagify \\<link\\>\r\n```ts\r\ndocument.querySelector('#tagifyCSS').href = require.resolve('@yaireo/tagify/dist/tagify.css');\r\n```"", 'comment_created': datetime.datetime(2020, 6, 7, 15, 12, 57, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 436378850, 'comment_body': ""Can we only declare the module? Thought it won't be able to use Intellisense, but we only need one method - `tagify.addTags()`."", 'comment_created': datetime.datetime(2020, 6, 7, 16, 18, 37, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 436462597, 'comment_body': '```suggestion\r\n        <link id=""tagify-css"" rel=""stylesheet"" href=""data:text/css,"">\r\n```\r\n\r\n(Spaces around `=` are unconventional in HTML, `href` is required, `type` is not, and restricting to `screen` might hide important clues from speech synthesizers.)', 'comment_created': datetime.datetime(2020, 6, 8, 5, 23, 54, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 436463089, 'comment_body': ""That’s still quadratic.\r\n\r\n```suggestion\r\n\t\t\tconst configuredLanguages: string[] =\r\n\t\t\t\tConfigUtil.getConfigItem('spellcheck-languages')\r\n\t\t\t\t\t.map((code: string) => ISO6391.getName(code));\r\n```"", 'comment_created': datetime.datetime(2020, 6, 8, 5, 26, 5, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 436466502, 'comment_body': '```suggestion\r\n\t\t\t\tif (ISO6391.validate(l)) {\r\n```', 'comment_created': datetime.datetime(2020, 6, 8, 5, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 436467948, 'comment_body': 'Default-sorting an array of arrays is weird in JS; sort the keys instead with `[...languagePairs.keys()].sort()`.', 'comment_created': datetime.datetime(2020, 6, 8, 5, 46, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 436483070, 'comment_body': ""We won't be able to do this because ISO6391 doesn't have all the languages , so we have to map from languagePairs.\r\nEven though, this looks quadratic, `ConfigUtil.getConfigItem('spellcheck-languages')` would at max have 3 values, so in reality the algorithm is actually linear on the size of languagePairs, which I think is okay."", 'comment_created': datetime.datetime(2020, 6, 8, 6, 37, 50, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 437312376, 'comment_body': ""@andersk \r\n```ts \r\n.map((code: string) => ISO6391.getName(code)); \r\n``` \r\nYou're correct. This IS the convention. But lack of all language pairs makes it unusable here.\r\nDO you have some other way in mind to make it linear ?"", 'comment_created': datetime.datetime(2020, 6, 9, 10, 39, 31, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 437473184, 'comment_body': 'Passed the comparator ', 'comment_created': datetime.datetime(2020, 6, 9, 14, 36, 29, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 437503481, 'comment_body': ""@andersk Sorry but I'm having a little hard time getting to this. Can you please give some suggestion?\r\n\r\n* The listener here is from `WebContents` class. Though we can definitely pass the webContents of the webview as that's what we're operating on, but the listener won't call our context-menu component.\r\n* How is it obtaining the `params` object which is being passed as `ContextMenuParams`?\r\n* Also keeping in mind the ContextMenuParams has everything we need but the `dictionarySuggestions[]`\r\n\r\nUpdate: Solved"", 'comment_created': datetime.datetime(2020, 6, 9, 15, 12, 50, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 441998984, 'comment_body': 'You can add this - \r\n` ""display:${process.platform === \'darwin\' ? \'\' : \'none\'}"" `, this will take care of one of your ToDo below.', 'comment_created': datetime.datetime(2020, 6, 18, 6, 37, 1, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}]","[{'commit_sha': '013f8629e970b7df22db33ad476014aedb70928c', 'committer_username': 'andersk', 'committer_name': 'Anders Kaseorg', 'committer_email': 'andersk@mit.edu', 'commit_date': datetime.datetime(2008, 9, 27, 3, 31, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26f5a16990dc6d4e81e0ec17f299380883be01e1', 'committer_username': 'manavmehta', 'committer_name': 'Manav Mehta', 'committer_email': 'tmanavmehta@gmail.com', 'commit_date': datetime.datetime(2017, 8, 18, 17, 42, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '808d62f430fa939c2862c5d6f76d745120a2c122', 'committer_username': 'manavmehta', 'committer_name': 'Manav Mehta', 'committer_email': 'tmanavmehta@gmail.com', 'commit_date': datetime.datetime(2017, 8, 18, 17, 42, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '647034be9db8b2c889357df3a7040dff9d95033c', 'committer_username': 'manavmehta', 'committer_name': 'Manav Mehta', 'committer_email': 'tmanavmehta@gmail.com', 'commit_date': datetime.datetime(2017, 8, 18, 17, 42, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27bc294253ffa1b897d89c63ef347a18a55a8aa1', 'committer_username': 'manavmehta', 'committer_name': 'Manav Mehta', 'committer_email': 'tmanavmehta@gmail.com', 'commit_date': datetime.datetime(2017, 8, 18, 17, 42, 6, tzinfo=datetime.timezone.utc)}]",Manav Mehta,31139861,tmanavmehta@gmail.com,User,,23,,6,33
433775914,zoom: Fix zoom issues.,"**Any background context you want to provide?**

The zoom issues seemed to be caused due to electron roles.
We also had our own definitions firing up along with the roles which might be clashing and the other instances of roles not being much effective in our use case.


**What's this PR do?**

* Remove roles from zoom options
* Add accelerator for zoomIn - Change both zoomIn, zoomOut accelerators as 'Ctrl/Cmd + Plus' seems not to work most of the time


**You have tested this PR on:**
  - [X] macOS Catalina 10.15.4
  - [ ] Linux/Ubuntu
  - [ ] Windows
",True,975,https://api.github.com/repos/zulip/zulip-desktop/pulls/975,https://github.com/zulip/zulip-desktop/pull/975,closed,1,3,1,1,0,0,1,0,[{'name': 'size: XS'}],2020-06-12 16:21:13+00:00,2020-06-13 07:29:44+00:00,54511.0,15:08:31,[],"[{'commit_sha': '41e310c1a198760e49ceb20c45bf7f4fce8a172e', 'committer_username': 'manavmehta', 'committer_name': 'Manav Mehta', 'committer_email': 'tmanavmehta@gmail.com', 'commit_date': datetime.datetime(2017, 8, 18, 17, 42, 6, tzinfo=datetime.timezone.utc)}]",Manav Mehta,31139861,tmanavmehta@gmail.com,User,,23,,6,33
440914839,request: Replace deprecated request module with net.request.,"**Any background context you want to provide?**
Fixes: #886 

**You have tested this PR on:**
  - [X] macOS Catalina 10.15.5
  - [ ] Windows
  - [ ] Linux/Ubuntu


**Checklist**

- [x] domain-util
- [x] reconnect-util
- [x] linuxupdater
- [x] check add-new-server
- [x] check UA on test server

We may think of a more appropriate and suitable name of the new added request.ts",True,993,https://api.github.com/repos/zulip/zulip-desktop/pulls/993,https://github.com/zulip/zulip-desktop/pull/993,closed,245,316,12,4,15,11,1,0,[{'name': 'size: XL'}],2020-06-27 13:53:52+00:00,2020-07-14 10:20:53+00:00,1456021.0,"16 days, 20:27:01","[{'comment_id': 446567939, 'comment_body': 'Unfortunately I don’t think `electron.net` can be used safely via `remote`; see electron/electron#12545. I think we’ll need to build our own IPC interface and use it in the main process. (Which is just as well, because `remote` is also [discouraged](https://github.com/electron/electron/blob/master/docs/tutorial/security.md#15-disable-the-remote-module) and we should aim to eliminate it eventually.)', 'comment_created': datetime.datetime(2020, 6, 27, 21, 13, 46, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 446604374, 'comment_body': 'So it would be better to move all `electron.net` requests to the main process via a IPCRenderer/Main interface call?\r\n\r\nFollowing this up, we could have a separate module in the main process that handles the replacement of remote calls in the renderer process? Solving #915 .', 'comment_created': datetime.datetime(2020, 6, 28, 5, 51, 53, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 446627602, 'comment_body': 'Okay, I was facing the `end` problem too. Seems plausible. Thanks @andersk .\r\nAlso, \r\n> IPC primitives (`ipcRenderer` and `ipcMain`) will be unaffected. This only affects the `remote` module, which is a convenience layer wrapped on top of those IPC primitives.\r\n> \r\n> The recommended migration path for apps is to replace usage of the remote module with explicit use of the IPC primitives, for example [`ipcRenderer.invoke`](https://electronjs.org/docs/api/ipc-renderer#ipcrendererinvokechannel-args) / [`ipcMain.handle`](https://electronjs.org/docs/api/ipc-main#ipcmainhandlechannel-listener).\r\n>\r\n\r\nIs it safe to say that the the `primitives` are safer and better, performance-wise, to use and hence to migrate to?\r\nAre there any cases where they lag behind `remote`?', 'comment_created': datetime.datetime(2020, 6, 28, 9, 42, 41, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 449755708, 'comment_body': ""Need to import `import escape from 'escape-html';` .\r\nCurrently the PR uses built-in `escape`, which's behavior is different from what we have in `domain-util.ts` ."", 'comment_created': datetime.datetime(2020, 7, 4, 9, 14, 25, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 452419736, 'comment_body': 'Don’t capitalize the variable `Session`.', 'comment_created': datetime.datetime(2020, 7, 9, 18, 46, 17, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 452426075, 'comment_body': 'Let’s try to extract the raw `Promise` logic into minimal shared helper functions and lean on `async`/`await` as much as possible. With a small fix to the Electron typings in `typings.d.ts` (justified by the [documentation](https://www.electronjs.org/docs/api/incoming-message#class-incomingmessage): “`IncomingMessage` implements the [Readable Stream](https://nodejs.org/api/stream.html#stream_readable_streams) interface”):\r\n\r\n```typescript\r\ndeclare module \'electron\' {\r\n    interface IncomingMessage extends NodeJS.ReadableStream {}\r\n}\r\n```\r\n\r\nwe can do this:\r\n\r\n```typescript\r\nimport getStream from \'get-stream\';\r\n\r\nasync function fetchResponse(request: ClientRequest): Promise<IncomingMessage> {\r\n    return new Promise((resolve, reject) => {\r\n        request.on(""response"", resolve);\r\n        request.on(""abort"", reject);\r\n        request.on(""error"", reject);\r\n        request.end();\r\n    });\r\n}\r\n\r\nexport async function _getServerSettings(…): Promise<ServerConf> {\r\n    const response = await fetchResponse(net.request({\r\n        url: domain + \'/api/v1/server_settings\',\r\n        session,\r\n    }));\r\n    if (response.statusCode !== 200) {\r\n        throw response;  // maybe we want this to be an actual Error?\r\n    }\r\n    const {realm_name, realm_uri, realm_icon} = JSON.parse(await getStream.buffer(response));\r\n    …\r\n}\r\n```', 'comment_created': datetime.datetime(2020, 7, 9, 18, 58, 1, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 452427464, 'comment_body': 'Don’t capitalize the variables `Url` and `Session`.', 'comment_created': datetime.datetime(2020, 7, 9, 19, 0, 35, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 452458831, 'comment_body': 'Don’t capitalize the variable `Session`.', 'comment_created': datetime.datetime(2020, 7, 9, 20, 3, 6, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 452460943, 'comment_body': 'Don’t capitalize the variable `Session`.', 'comment_created': datetime.datetime(2020, 7, 9, 20, 7, 42, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 452461155, 'comment_body': ""`return ipcRenderer.invoke('is-online', this)` seems fine."", 'comment_created': datetime.datetime(2020, 7, 9, 20, 8, 10, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 452462518, 'comment_body': 'I think the `async` equivalent here would be\r\n```typescript\r\nconst pipeline = util.promisify(stream.pipeline);\r\n…\r\nawait pipeline(response, file);\r\nreturn filePath;\r\n```', 'comment_created': datetime.datetime(2020, 7, 9, 20, 10, 48, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}]","[{'commit_sha': '6ebabd26ae46d9e6130b0434a1fc39c1ce16f383', 'committer_username': 'andersk', 'committer_name': 'Anders Kaseorg', 'committer_email': 'andersk@mit.edu', 'commit_date': datetime.datetime(2008, 9, 27, 3, 31, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d3322ab95f126f44b45ac0fcca45f310b0c6566', 'committer_username': 'manavmehta', 'committer_name': 'Manav Mehta', 'committer_email': 'tmanavmehta@gmail.com', 'commit_date': datetime.datetime(2017, 8, 18, 17, 42, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1515e438d4e6821624d8ac8314c24d08ca5cbc26', 'committer_username': 'manavmehta', 'committer_name': 'Manav Mehta', 'committer_email': 'tmanavmehta@gmail.com', 'commit_date': datetime.datetime(2017, 8, 18, 17, 42, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f84d0bc611ace72b544cb2aa40ec9d622691fe9', 'committer_username': 'manavmehta', 'committer_name': 'Manav Mehta', 'committer_email': 'tmanavmehta@gmail.com', 'commit_date': datetime.datetime(2017, 8, 18, 17, 42, 6, tzinfo=datetime.timezone.utc)}]",Manav Mehta,31139861,tmanavmehta@gmail.com,User,,23,,6,33
386323098,Add feature to enable Time based DND Mode,"**What's this PR do?**
Fixes: #561
User can now select time for which DND will be enabled.
Toast notification (4 sec) will be shown for clock time when DND would go off and also when it actually goes off.

**Screenshots?**
![Screenshot 2020-03-11 at 12 59 19 AM](https://user-images.githubusercontent.com/31139861/76351500-90150500-6333-11ea-94d1-88597429472b.png)
![Screenshot 2020-03-11 at 12 58 29 AM](https://user-images.githubusercontent.com/31139861/76351507-91dec880-6333-11ea-9169-336ac39d8e30.png)

**You have tested this PR on:**
[✓ ] macOS Catalina 10.15.4
",False,896,https://api.github.com/repos/zulip/zulip-desktop/pulls/896,https://github.com/zulip/zulip-desktop/pull/896,open,277,3,5,2,13,24,2,0,"[{'name': 'size: XL'}, {'name': 'has conflicts'}]",2020-03-10 19:30:07+00:00,,0.0,,"[{'comment_id': 391729367, 'comment_body': 'Could rename this as `dnd-menu` . ', 'comment_created': datetime.datetime(2020, 3, 12, 16, 10, 47, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 391730227, 'comment_body': 'No point of this, we can remove this.', 'comment_created': datetime.datetime(2020, 3, 12, 16, 12, 11, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 391730834, 'comment_body': 'The indentation seems off here.', 'comment_created': datetime.datetime(2020, 3, 12, 16, 13, 14, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 391731560, 'comment_body': 'Instead of an if-else block, it would be preferable to go for a switch-case.', 'comment_created': datetime.datetime(2020, 3, 12, 16, 14, 13, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 391731983, 'comment_body': 'You should move this to the top, since its also used in functions above.', 'comment_created': datetime.datetime(2020, 3, 12, 16, 14, 58, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 392033790, 'comment_body': 'Should be an `else if` block. ', 'comment_created': datetime.datetime(2020, 3, 13, 5, 14, 10, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 392086231, 'comment_body': '@manavmehta can you make the above changes?', 'comment_created': datetime.datetime(2020, 3, 13, 8, 24, 18, tzinfo=datetime.timezone.utc), 'commenter': 'akashnimare', 'type': 'User'}, {'comment_id': 392088619, 'comment_body': '@manavmehta @abhigyank this can be improved I think.', 'comment_created': datetime.datetime(2020, 3, 13, 8, 30, 9, tzinfo=datetime.timezone.utc), 'commenter': 'akashnimare', 'type': 'User'}, {'comment_id': 392570852, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 3, 14, 9, 19, 9, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 392570907, 'comment_body': ""@akashnimare can you check if the same problem is there for you too as @abhigyank 's system showed no indent.\r\nBut mine shows correctly.\r\nP.S. Linter also doesn't throw any error"", 'comment_created': datetime.datetime(2020, 3, 14, 9, 20, 31, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 392579341, 'comment_body': '@akashnimare you mean creating the menu ?', 'comment_created': datetime.datetime(2020, 3, 14, 11, 50, 5, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 394089549, 'comment_body': 'Looks fine for me now.\r\nProbably some loading error on Github,', 'comment_created': datetime.datetime(2020, 3, 18, 3, 36, 26, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 394090587, 'comment_body': ""@manavmehta I think it'd be better to use a `map` here - \r\n```js\r\nlet dndOptions = new Map();\r\ndndOptions.set('thirty_minutes', '30 Minutes');\r\ndndOptions.set('one_hour', '1 Hour');\r\n...\r\n```\r\nAnd in the below iteration it'd be good to use `forEach` - \r\n```js\r\ndndOptions.forEach((value, key) => {\r\n  ...\r\n})\r\n```"", 'comment_created': datetime.datetime(2020, 3, 18, 3, 40, 58, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 394855098, 'comment_body': 'used an object as akash suggested\r\nif you find map more useful I can do the necessary change', 'comment_created': datetime.datetime(2020, 3, 19, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 439717887, 'comment_body': '@manavmehta what happened to linting here?', 'comment_created': datetime.datetime(2020, 6, 13, 7, 32, 21, tzinfo=datetime.timezone.utc), 'commenter': 'akashnimare', 'type': 'User'}, {'comment_id': 439717930, 'comment_body': 'There are two font-sizes in this class. Please remove one.', 'comment_created': datetime.datetime(2020, 6, 13, 7, 32, 58, tzinfo=datetime.timezone.utc), 'commenter': 'akashnimare', 'type': 'User'}, {'comment_id': 439718233, 'comment_body': '@akashnimare \nToast fading out. I think I borrowed it from some module.\nYou want me to spread it ?', 'comment_created': datetime.datetime(2020, 6, 13, 7, 39, 13, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 439719806, 'comment_body': ""No no, just run the linting that's it."", 'comment_created': datetime.datetime(2020, 6, 13, 8, 5, 32, tzinfo=datetime.timezone.utc), 'commenter': 'akashnimare', 'type': 'User'}, {'comment_id': 439730298, 'comment_body': 'There will be linting errors if stylelint is not disabled for that line. It requires spreading. With the exception, it gives no errors. Checked', 'comment_created': datetime.datetime(2020, 6, 13, 10, 59, 48, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 439985124, 'comment_body': '@manavmehta I think it should be something like this - \r\n```css\r\n@keyframes fading {\r\n    0% {\r\n        opacity: 0\r\n    }\r\n    20% {\r\n        opacity: 1\r\n    }\r\n    80% {\r\n        opacity: 1\r\n    }\r\n    100% {\r\n        opacity: 0\r\n    }\r\n}\r\n```', 'comment_created': datetime.datetime(2020, 6, 15, 7, 40, 28, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 439986602, 'comment_body': 'I had committed the changes, just waiting for either of you to suggest either to go for these or not. Pushed now. Thanks\r\n', 'comment_created': datetime.datetime(2020, 6, 15, 7, 43, 19, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 439987836, 'comment_body': 'Remove this log statement.', 'comment_created': datetime.datetime(2020, 6, 15, 7, 45, 48, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 440315942, 'comment_body': 'Can you put some comments describing the scenarios of these if-else conditions?', 'comment_created': datetime.datetime(2020, 6, 15, 16, 56, 47, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}, {'comment_id': 440317095, 'comment_body': 'Why these two as separate lines? Can be in one line I think.', 'comment_created': datetime.datetime(2020, 6, 15, 16, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'abhigyank', 'type': 'User'}]","[{'commit_sha': '20e4f12ec38d7afd9317282632583db22e104ca2', 'committer_username': 'manavmehta', 'committer_name': 'Manav Mehta', 'committer_email': 'tmanavmehta@gmail.com', 'commit_date': datetime.datetime(2017, 8, 18, 17, 42, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b6a9ccb266e143153c2151f8b478a70d5a76ada', 'committer_username': 'manavmehta', 'committer_name': 'Manav Mehta', 'committer_email': 'tmanavmehta@gmail.com', 'commit_date': datetime.datetime(2017, 8, 18, 17, 42, 6, tzinfo=datetime.timezone.utc)}]",Manav Mehta,31139861,tmanavmehta@gmail.com,User,,23,,6,33
467335362,BrowserView: Rebased and cleaned up,"**What's this PR do?**
Builds upon #831 which was built upon #793 

**You have tested this PR on:**
  - [ ] Windows
  - [ ] Linux/Ubuntu
  - [ ] macOS (Not tested yet)

** Tasks **

- [X] Add context-menu support
- [X] Logic to handle-external-link
- [X] Check User Agent against a test server

** Temporarily Reverted PR's and commits:**
Commits reverted:
* https://github.com/zulip/zulip-desktop/commit/6b7cce0
* https://github.com/zulip/zulip-desktop/commit/8446deb673c88c2b433f9f34ee09f3c1f048d0cf
* https://github.com/zulip/zulip-desktop/commit/983254c310ea1b7454727b11c45028bf95a98dcb

PR's reverted:
* https://github.com/zulip/zulip-desktop/pull/890
",False,1018,https://api.github.com/repos/zulip/zulip-desktop/pulls/1018,https://github.com/zulip/zulip-desktop/pull/1018,open,610,601,14,24,1,0,2,0,"[{'name': 'size: XL'}, {'name': 'has conflicts'}]",2020-08-13 11:51:53+00:00,,0.0,,[],"[{'commit_sha': '57a5147af0fe768976d5e7de96319b601a21b272', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39642e45c00ac654ebd0fa23e9ff773b0aa67554', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24a98fba5e8e4504ce1d1a677342c1be1017969e', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a9e8e8d5a493f176b7518b2a9c900a10351743d', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf8fb41ea6858699cb693460f57127c09fc37cbd', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '152d045910cb5e0dfd1af0fb85f4f64812eef4a6', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a63713be842d7140d831777d0c6f00fc7593c08', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c1e01b43a9b61aa5dd005043913884abfa7d759', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '517f365fcc4b5bc7d2e58c6d91060739895fd499', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de902e5c90caeaad5e30d9193942da6f1399a34d', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3f5405e815013424a75b3503a94d01210af4d1b', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed41a0430f9ddf584a8926f8acdcdfa65e7c5223', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8754f75a5fb1bc733897af45194503352aaacb9', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4754cfc818cb715055820890dddbe77033bad96', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6012c8a0c0924685fece6b1b4eea39845ded4a5', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32b69d878e7981435a0f7cb87a068b4283a7a0d7', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9af2b3eeae6cb55031ebcadf846a6b72da90a404', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3066088d7b300bb5efc839175710f0a3792822d0', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80b887ada9a4dff87cc88276cc8f9e87772fe0e2', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ebb226878ab7cab5e753c61e278829bd6aca690', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97071c57e3a05d442294a5e2eff407bf4808a75a', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '051086cbe6df9a6f8ddb776dcea97d7d3b8f30ab', 'committer_username': 'vsvipul', 'committer_name': 'Vipul', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 15, 13, 28, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2bf6d8aec89170d2c50c26cfbea6e1042b9327e', 'committer_username': 'kanishk98', 'committer_name': 'Kanishk Kakar', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 17, 4, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd8a26faba03137bef40b19a32e5edb9bbd4e148', 'committer_username': 'kanishk98', 'committer_name': 'Kanishk Kakar', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 17, 4, 12, 40, tzinfo=datetime.timezone.utc)}]",Manav Mehta,31139861,tmanavmehta@gmail.com,User,,23,,6,33
469521909,darwin-notifications: Migrate darwin-notifications to electron's native Notifications.,"**What's this PR do?**
Electron's native Notifications now supports inline replies on macOS and thus we don't need any 3rd party package.
This commit removes the usage of node-mac-notifier and brings native Notification in picture.

For comprehensibility, ipc-helpers.ts will contain the functions which make use of Main process APIs with already functioning code in Renderer process.

**Any background context you want to provide?**
This is a potential solution to people not getting notifications on macOS.

**You have tested this PR on:**
  - [X] macOS Catalina 10.15.6

**Follow-ups**
  - [x] Display sender's profile picture on each notification",False,1022,https://api.github.com/repos/zulip/zulip-desktop/pulls/1022,https://github.com/zulip/zulip-desktop/pull/1022,closed,82,41,5,2,8,9,2,0,"[{'name': 'size: XL'}, {'name': 'has conflicts'}]",2020-08-18 14:05:55+00:00,2021-01-04 07:09:17+00:00,11984602.0,"138 days, 17:03:22","[{'comment_id': 477569861, 'comment_body': '`node-fetch` doesn’t use the Electron network stack, so this won’t work with custom certificates, proxies, etc. We should use `electron.net` like everything else.', 'comment_created': datetime.datetime(2020, 8, 26, 20, 28, 49, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 477569975, 'comment_body': 'How do we know it’s a PNG?', 'comment_created': datetime.datetime(2020, 8, 26, 20, 29, 3, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 477570710, 'comment_body': 'Why `removeAllListeners`? Did you just want to use `ipcRenderer.once` instead?', 'comment_created': datetime.datetime(2020, 8, 26, 20, 30, 25, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 477571418, 'comment_body': 'I don’t understand this new comment. [`Notification.close()`](https://developer.mozilla.org/en-US/docs/Web/API/Notification/close) is part of the standard `Notification` API. It’s not Zulip-specific.', 'comment_created': datetime.datetime(2020, 8, 26, 20, 31, 53, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 477944302, 'comment_body': 'Why do we need to go through the `NativeImage` dance? Can we not just set `icon` to the URL?', 'comment_created': datetime.datetime(2020, 8, 27, 2, 21, 59, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 478335013, 'comment_body': 'My bad. Referring to [this](https://github.com/RocketChat/Rocket.Chat.Electron/blob/062b4f958c942f2dc4eee9066ec8c28aa93db705/src/main/ui/notifications.js#L32-L44) piece of code, I missed this part somehow fiddling around. Adding it back.', 'comment_created': datetime.datetime(2020, 8, 27, 11, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 478335884, 'comment_body': 'Trying to do that from the beginning but it throws this error while converting\r\n![this](https://user-images.githubusercontent.com/31139861/91435289-b861d300-e883-11ea-9a37-72b90866e90f.png) \r\n', 'comment_created': datetime.datetime(2020, 8, 27, 11, 7, 15, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 478341632, 'comment_body': ""The previous comment got me believing that this was specific to `node-mac-notifier`. So I tried to refine it. I'll remodel it."", 'comment_created': datetime.datetime(2020, 8, 27, 11, 19, 22, tzinfo=datetime.timezone.utc), 'commenter': 'manavmehta', 'type': 'User'}, {'comment_id': 490145902, 'comment_body': ""@andersk the API doesn't support passing the URL directly. That's why we have to go through the `nativeImage` process.\r\nhttps://www.electronjs.org/docs/api/notification#new-notificationoptions\r\n\r\ncc @priyank-p "", 'comment_created': datetime.datetime(2020, 9, 17, 10, 42, 28, tzinfo=datetime.timezone.utc), 'commenter': 'akashnimare', 'type': 'User'}]","[{'commit_sha': 'b0ca202f82d0defd2754ba6e7beb951fd64b830f', 'committer_username': 'manavmehta', 'committer_name': 'Manav Mehta', 'committer_email': 'tmanavmehta@gmail.com', 'commit_date': datetime.datetime(2017, 8, 18, 17, 42, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c816233b0c4a356ab48a60e0f4a9bb1c7f2556f7', 'committer_username': 'manavmehta', 'committer_name': 'Manav Mehta', 'committer_email': 'tmanavmehta@gmail.com', 'commit_date': datetime.datetime(2017, 8, 18, 17, 42, 6, tzinfo=datetime.timezone.utc)}]",Manav Mehta,31139861,tmanavmehta@gmail.com,User,,23,,6,33

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
60656871,zulip-desktop,zulip/zulip-desktop,TypeScript,416,829,33,64,2028,196,26,53,"[{'id': 774781881, 'number': 1160, 'closed': None, 'created': datetime.datetime(2021, 11, 6, 11, 31, 15, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 55, 'deletions': 3, 'state': 'open'}, {'id': 469521909, 'number': 1022, 'closed': datetime.datetime(2021, 1, 4, 7, 9, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 18, 14, 5, 55, tzinfo=datetime.timezone.utc), 'time_taken': 11984602.0, 'time_delta': '138 days, 17:03:22', 'additions': 82, 'deletions': 41, 'state': 'closed'}, {'id': 468020253, 'number': 1020, 'closed': datetime.datetime(2020, 8, 18, 14, 6, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 14, 14, 38, 1, tzinfo=datetime.timezone.utc), 'time_taken': 343687.0, 'time_delta': '3 days, 23:28:07', 'additions': 78, 'deletions': 42, 'state': 'closed'}, {'id': 467335362, 'number': 1018, 'closed': None, 'created': datetime.datetime(2020, 8, 13, 11, 51, 53, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 610, 'deletions': 601, 'state': 'open'}, {'id': 466912060, 'number': 1017, 'closed': datetime.datetime(2020, 8, 12, 17, 48, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 12, 17, 36, 3, tzinfo=datetime.timezone.utc), 'time_taken': 755.0, 'time_delta': '0:12:35', 'additions': 8, 'deletions': 0, 'state': 'closed'}, {'id': 464999230, 'number': 1013, 'closed': datetime.datetime(2020, 8, 13, 11, 47, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 8, 7, 27, 27, tzinfo=datetime.timezone.utc), 'time_taken': 447625.0, 'time_delta': '5 days, 4:20:25', 'additions': 559, 'deletions': 572, 'state': 'closed'}, {'id': 458278998, 'number': 1008, 'closed': datetime.datetime(2020, 7, 29, 10, 52, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 29, 8, 28, 15, tzinfo=datetime.timezone.utc), 'time_taken': 8637.0, 'time_delta': '2:23:57', 'additions': 11, 'deletions': 0, 'state': 'closed'}, {'id': 457592983, 'number': 1007, 'closed': datetime.datetime(2020, 7, 28, 20, 1, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 28, 6, 46, 47, tzinfo=datetime.timezone.utc), 'time_taken': 47710.0, 'time_delta': '13:15:10', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 456784190, 'number': 1006, 'closed': datetime.datetime(2020, 7, 26, 19, 42, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 26, 18, 1, 24, tzinfo=datetime.timezone.utc), 'time_taken': 6064.0, 'time_delta': '1:41:04', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 454299595, 'number': 1002, 'closed': datetime.datetime(2020, 7, 21, 11, 30, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 21, 9, 12, 58, tzinfo=datetime.timezone.utc), 'time_taken': 8230.0, 'time_delta': '2:17:10', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 452066790, 'number': 1001, 'closed': datetime.datetime(2020, 7, 18, 20, 26, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 18, 18, 20, 19, tzinfo=datetime.timezone.utc), 'time_taken': 7559.0, 'time_delta': '2:05:59', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 452025315, 'number': 1000, 'closed': datetime.datetime(2020, 7, 21, 16, 35, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 18, 16, 47, 45, tzinfo=datetime.timezone.utc), 'time_taken': 258440.0, 'time_delta': '2 days, 23:47:20', 'additions': 20, 'deletions': 1, 'state': 'closed'}, {'id': 448782178, 'number': 998, 'closed': datetime.datetime(2020, 7, 14, 10, 21, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 14, 10, 6, 15, tzinfo=datetime.timezone.utc), 'time_taken': 924.0, 'time_delta': '0:15:24', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 440914839, 'number': 993, 'closed': datetime.datetime(2020, 7, 14, 10, 20, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 27, 13, 53, 52, tzinfo=datetime.timezone.utc), 'time_taken': 1456021.0, 'time_delta': '16 days, 20:27:01', 'additions': 245, 'deletions': 316, 'state': 'closed'}, {'id': 439081446, 'number': 985, 'closed': datetime.datetime(2020, 6, 24, 19, 2, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 24, 9, 30, 15, tzinfo=datetime.timezone.utc), 'time_taken': 34343.0, 'time_delta': '9:32:23', 'additions': 21, 'deletions': 0, 'state': 'closed'}, {'id': 437778096, 'number': 984, 'closed': datetime.datetime(2020, 7, 24, 8, 58, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 8, 38, 1, tzinfo=datetime.timezone.utc), 'time_taken': 2766010.0, 'time_delta': '32 days, 0:20:10', 'additions': 16, 'deletions': 5, 'state': 'closed'}, {'id': 433775914, 'number': 975, 'closed': datetime.datetime(2020, 6, 13, 7, 29, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 12, 16, 21, 13, tzinfo=datetime.timezone.utc), 'time_taken': 54511.0, 'time_delta': '15:08:31', 'additions': 1, 'deletions': 3, 'state': 'closed'}, {'id': 431959725, 'number': 974, 'closed': datetime.datetime(2020, 6, 12, 7, 48, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 9, 17, 29, 27, tzinfo=datetime.timezone.utc), 'time_taken': 224318.0, 'time_delta': '2 days, 14:18:38', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 422305427, 'number': 967, 'closed': datetime.datetime(2020, 6, 18, 12, 44, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 23, 17, 47, 27, tzinfo=datetime.timezone.utc), 'time_taken': 2228217.0, 'time_delta': '25 days, 18:56:57', 'additions': 248, 'deletions': 303, 'state': 'closed'}, {'id': 416505747, 'number': 957, 'closed': datetime.datetime(2020, 5, 20, 16, 41, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 12, 6, 3, 22, tzinfo=datetime.timezone.utc), 'time_taken': 729471.0, 'time_delta': '8 days, 10:37:51', 'additions': 4306, 'deletions': 2147, 'state': 'closed'}, {'id': 414270637, 'number': 954, 'closed': datetime.datetime(2020, 5, 7, 0, 1, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 6, 18, 48, 28, tzinfo=datetime.timezone.utc), 'time_taken': 18800.0, 'time_delta': '5:13:20', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 412433618, 'number': 950, 'closed': datetime.datetime(2020, 5, 2, 14, 47, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 2, 10, 47, 26, tzinfo=datetime.timezone.utc), 'time_taken': 14400.0, 'time_delta': '4:00:00', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 410547296, 'number': 945, 'closed': datetime.datetime(2020, 4, 29, 19, 18, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 29, 7, 49, 13, tzinfo=datetime.timezone.utc), 'time_taken': 41360.0, 'time_delta': '11:29:20', 'additions': 14, 'deletions': 0, 'state': 'closed'}, {'id': 408436797, 'number': 941, 'closed': datetime.datetime(2020, 5, 19, 15, 33, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 24, 9, 26, 47, tzinfo=datetime.timezone.utc), 'time_taken': 2181987.0, 'time_delta': '25 days, 6:06:27', 'additions': 3, 'deletions': 6, 'state': 'closed'}, {'id': 402345956, 'number': 929, 'closed': datetime.datetime(2020, 4, 26, 20, 39, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 12, 14, 22, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1232218.0, 'time_delta': '14 days, 6:16:58', 'additions': 17, 'deletions': 24, 'state': 'closed'}, {'id': 400399454, 'number': 924, 'closed': datetime.datetime(2020, 5, 20, 16, 24, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 7, 17, 19, 2, tzinfo=datetime.timezone.utc), 'time_taken': 3711935.0, 'time_delta': '42 days, 23:05:35', 'additions': 30, 'deletions': 79, 'state': 'closed'}, {'id': 400077071, 'number': 922, 'closed': datetime.datetime(2020, 6, 30, 21, 43, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 7, 6, 59, 8, tzinfo=datetime.timezone.utc), 'time_taken': 7310662.0, 'time_delta': '84 days, 14:44:22', 'additions': 32, 'deletions': 0, 'state': 'closed'}, {'id': 391830983, 'number': 902, 'closed': datetime.datetime(2020, 4, 22, 12, 38, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 21, 8, 18, tzinfo=datetime.timezone.utc), 'time_taken': 2780450.0, 'time_delta': '32 days, 4:20:50', 'additions': 83, 'deletions': 12, 'state': 'closed'}, {'id': 386323098, 'number': 896, 'closed': None, 'created': datetime.datetime(2020, 3, 10, 19, 30, 7, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 277, 'deletions': 3, 'state': 'open'}, {'id': 385146787, 'number': 892, 'closed': datetime.datetime(2020, 3, 8, 9, 25, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 7, 13, 51, 6, tzinfo=datetime.timezone.utc), 'time_taken': 70478.0, 'time_delta': '19:34:38', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 381841706, 'number': 876, 'closed': datetime.datetime(2020, 3, 4, 5, 46, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 29, 12, 8, 42, tzinfo=datetime.timezone.utc), 'time_taken': 322669.0, 'time_delta': '3 days, 17:37:49', 'additions': 15, 'deletions': 1, 'state': 'closed'}, {'id': 372844836, 'number': 868, 'closed': datetime.datetime(2020, 3, 4, 22, 23, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 9, 16, 8, 59, tzinfo=datetime.timezone.utc), 'time_taken': 2096054.0, 'time_delta': '24 days, 6:14:14', 'additions': 6, 'deletions': 12, 'state': 'closed'}]"
