pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
699869696,Update artifacthub link,fixes #579 ,True,663,https://api.github.com/repos/cert-manager/website/pulls/663,https://github.com/cert-manager/website/pull/663,closed,2,2,1,1,3,0,5,1,"[{'name': 'approved'}, {'name': 'size/XS'}, {'name': 'dco-signoff: yes'}, {'name': 'lgtm'}, {'name': 'ok-to-test'}]",2021-07-29 22:05:28+00:00,2021-07-30 08:40:17+00:00,38089.0,10:34:49,[],"[{'commit_sha': '2195327dadfcaf6a010699ace131f1b903966719', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
696408104,Add 'kubectl cert-manager check api' docs,,True,656,https://api.github.com/repos/cert-manager/website/pulls/656,https://github.com/cert-manager/website/pull/656,closed,31,12,1,1,4,0,6,1,"[{'name': 'approved'}, {'name': 'dco-signoff: yes'}, {'name': 'cherry-pick-approved'}, {'name': 'lgtm'}, {'name': 'size/M'}, {'name': 'ok-to-test'}]",2021-07-24 21:30:51+00:00,2021-07-29 11:37:12+00:00,396381.0,"4 days, 14:06:21",[],"[{'commit_sha': '82b0ece96fcdc37052ac3d9a2252289998887974', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
696397811,Install add 'kubectl cert-manager x install' documentation,,True,655,https://api.github.com/repos/cert-manager/website/pulls/655,https://github.com/cert-manager/website/pull/655,closed,69,481,8,3,4,12,6,1,"[{'name': 'approved'}, {'name': 'dco-signoff: yes'}, {'name': 'size/XL'}, {'name': 'cherry-pick-approved'}, {'name': 'lgtm'}, {'name': 'ok-to-test'}]",2021-07-24 19:45:25+00:00,2021-08-04 15:29:24+00:00,935039.0,"10 days, 19:43:59","[{'comment_id': 679263281, 'comment_body': ""```suggestion\r\nWe recommend [kubectl cert-manager x install](./kubectl-plugin/) to quickly install cert-manager and [interact with cert-manager resources](../usage/kubectl-plugin/) from the command line. \r\n\r\nOr if you prefer Helm or if you don't want to install the `kubectl cert-manager` plugin, you can [use helm to install cert-manager](./helm/).\r\n```"", 'comment_created': datetime.datetime(2021, 7, 29, 15, 33, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679276830, 'comment_body': 'I think you should mention both helm and the plugin here, for fairness.\r\nMaybe something along these lines:\r\n\r\n> You can use either `helm template` or  `kubectl cert-manager x install --dry-run` to generate customized cert-manager installation manifests.\r\n> See [Output YAML using kubectl cert-manager x install](./kubectl-plugin/#output-yaml) and [Output YAML using helm template](./helm/#output-yaml) for more details.', 'comment_created': datetime.datetime(2021, 7, 29, 15, 49, 40, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679279068, 'comment_body': '```suggestion\r\n- [Install the kubectl cert-manager plugin](../../usage/kubectl-plugin/#installation).\r\n```', 'comment_created': datetime.datetime(2021, 7, 29, 15, 52, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679279898, 'comment_body': '```suggestion\r\n- Install a [supported version of Kubernetes or OpenShift](../supported-releases/).\r\n```', 'comment_created': datetime.datetime(2021, 7, 29, 15, 53, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679283089, 'comment_body': '```suggestion\r\n- Read [Compatibility with Kubernetes Platform Providers](../compatibility/) if you are using Kubernetes on a cloud platform.\r\n```', 'comment_created': datetime.datetime(2021, 7, 29, 15, 57, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679289311, 'comment_body': '```suggestion\r\nYou can also use `kubectl cert-manager x install` to customize the installation of cert-manager.\r\n```', 'comment_created': datetime.datetime(2021, 7, 29, 16, 4, 44, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679292260, 'comment_body': ""```suggestion\r\nYou can find [a full list of the install parameters on cert-manager's ArtifactHub page](https://artifacthub.io/packages/helm/cert-manager/cert-manager#configuration). These are the same parameters that are available when using the Helm chart.\r\n```"", 'comment_created': datetime.datetime(2021, 7, 29, 16, 8, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679293152, 'comment_body': '```suggestion\r\nOnce you have deployed cert-manager, you can [verify the installation](../verify/) .\r\n```', 'comment_created': datetime.datetime(2021, 7, 29, 16, 9, 35, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679295090, 'comment_body': 'Should these have been deleted in #647  ?', 'comment_created': datetime.datetime(2021, 7, 29, 16, 12, 7, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679299529, 'comment_body': 'Yes, and they were; I asked @maelvls to rebase and that might have added them again.\r\nNot sure why there was a merge conflict...', 'comment_created': datetime.datetime(2021, 7, 29, 16, 17, 45, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 679336103, 'comment_body': ""Arghh, I'll look into it. That might be due to the merge I pushed on 23 July 2021 ( ab959b5d085ee05f91f42dc509b138d3a084dd69, https://github.com/cert-manager/website/pull/654)."", 'comment_created': datetime.datetime(2021, 7, 29, 17, 8, 16, tzinfo=datetime.timezone.utc), 'commenter': 'maelvls', 'type': 'User'}, {'comment_id': 679350123, 'comment_body': 'I mistakenly resolved the conflict between ada4f5ab02171765bf493037741965d1ed6c78a1 and 3186145ecaf410b6536f77115286cc507fc65a01 by choosing ada4f5ab02171765bf493037741965d1ed6c78a1... my fault!\r\n\r\nIt is really annoying that Git does not record any conflict resolution information. Things like `git log -p --cc ab959b5` are useless when looking for why a file has disappeared/appeared after a conflict... I wish I could see what `git rerere` has recorded too. The data in `.git/rr-cache` is indecipherable.', 'comment_created': datetime.datetime(2021, 7, 29, 17, 28, 37, tzinfo=datetime.timezone.utc), 'commenter': 'maelvls', 'type': 'User'}]","[{'commit_sha': '88715499a48102e7c652a75b0e496e1bdb056d0a', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ffe6ce5bfd63fb712a8109c2884fbb07ba33193', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46af435737491e7395f417cc1d6f8fac9d831720', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
692581028,restructured install documentation,"Instead of Kubernetes vs OpenShift, the installation categories should be based on the installation tools.
",True,647,https://api.github.com/repos/cert-manager/website/pulls/647,https://github.com/cert-manager/website/pull/647,closed,546,627,20,3,4,29,5,1,"[{'name': 'approved'}, {'name': 'dco-signoff: yes'}, {'name': 'size/XXL'}, {'name': 'lgtm'}, {'name': 'ok-to-test'}]",2021-07-19 12:55:54+00:00,2021-07-23 11:20:09+00:00,339855.0,"3 days, 22:24:15","[{'comment_id': 673870989, 'comment_body': 'nitpick: I think this reads fine without ""the""\r\n\r\n```suggestion\r\n[OpenShift](https://www.openshift.com). On both platforms there are multiple\r\nways to install cert-manager; for more information on different install\r\nscenarios and best practices, [check this page](./scenarios/).\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 10, 55, 58, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673872914, 'comment_body': ""NB: I can see this page is based on `content/en/docs/installation/kubernetes.md` and that a lot of the comments I'll make are on text which is copied from the old page, but I think now's a good time to change some of this!\r\n\r\nsuggestion: Having too many notices like this can just lead to people ignoring them; this seems like it could be removed and we could add an entry to the list under `### Prerequisites`."", 'comment_created': datetime.datetime(2021, 7, 21, 10, 59, 9, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673873338, 'comment_body': 'suggestion: As with the note above, I this this warning block could be removed and added to the list under `### Prerequisites`', 'comment_created': datetime.datetime(2021, 7, 21, 10, 59, 53, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673875033, 'comment_body': ""suggestion: I don't think this needs to be formatted as a note, and we could add a little more intro text:\r\n\r\n```suggestion\r\ncert-manager provides Helm charts as a first-class method of installation on both Kubernetes and OpenShift.\r\n\r\nBe sure never to embed cert-manager as a sub-chart of other Helm charts; cert-manager manages\r\nnon-namespaced resources in your cluster and care must be taken to ensure that it is installed exactly once.\r\n```"", 'comment_created': datetime.datetime(2021, 7, 21, 11, 2, 57, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673876046, 'comment_body': 'suggestion: as mentioned above\r\n\r\n```suggestion\r\n- Helm version 3 or later\r\n- A Kubernetes or OpenShift cluster running a [supported version](link/to/supported-versions/page/here)\r\n- cert-manager not already installed on the cluster\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 11, 4, 47, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673876393, 'comment_body': ""suggestion: we can remove this text entirely, it's not adding anything\r\n\r\n```suggestion\r\n```"", 'comment_created': datetime.datetime(2021, 7, 21, 11, 5, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673878584, 'comment_body': 'suggestion: I don\'t think we should link to a deprecated repository; we should just encourage people to use our repo. I also don\'t think this needs to be highlighted as a warning.\r\n\r\n```suggestion\r\nThis repository is the only supported source of cert-manager charts. There are some other mirrors and copies across the internet, but those are entirely unofficial and could present a security risk.\r\n\r\nNotably, the ""Helm stable repository"" version of cert-manager is deprecated and should not be used.\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 11, 9, 16, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673880286, 'comment_body': 'suggestion: this is weirdly phrased and too wordy, I think\r\n\r\n```suggestion\r\ncert-manager requires a number of CRD resources, which can  be installed manually using `kubectl`,\r\nor using the `installCRDs` option when installing the Helm chart.\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 11, 12, 3, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673880928, 'comment_body': ""suggestion: this can be moved under the option 2 heading below, since it's only relevant to that option"", 'comment_created': datetime.datetime(2021, 7, 21, 11, 13, 12, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673881373, 'comment_body': ""suggestion: this text doesn't provide any new information and I think it can be removed\r\n\r\n```suggestion\r\n```"", 'comment_created': datetime.datetime(2021, 7, 21, 11, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673882783, 'comment_body': ""suggestion: add the block about older versions of Helm here\r\n\r\n\r\n```suggestion\r\n\r\nNote that if you're using a `helm` version based on Kubernetes `v1.18` or below (Helm `v3.2`), `installCRDs` will not work with cert-manager `v0.16`. See the [v0.16 upgrade notes](../upgrading/upgrading-0.15-0.16/#helm) for more details.\r\n\r\n```"", 'comment_created': datetime.datetime(2021, 7, 21, 11, 16, 9, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673883336, 'comment_body': ""suggestion: rewording\r\n\r\n```suggestion\r\nA full list of available Helm values is on [cert-manager's ArtifactHub page](https://artifacthub.io/packages/helm/cert-manager/cert-manager).\r\n```"", 'comment_created': datetime.datetime(2021, 7, 21, 11, 17, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673883840, 'comment_body': 'suggestion: make the verb the link, rather than adding a ""here""\r\n\r\n```suggestion\r\nOnce you have deployed cert-manager, you can [verify](../verify/) the installation.\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 11, 17, 55, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673886188, 'comment_body': ""note: as with the helm doc, I think there are just too many notes here, but I've made enough suggestions already with the helm doc, so I'm not going to go through here and suggest changes :joy:  We should revisit and reword a lot of this but I don't think we need to do that in this PR."", 'comment_created': datetime.datetime(2021, 7, 21, 11, 21, 56, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673889669, 'comment_body': 'suggestion: I think the new ""scenarios"" page could actually just be placed here, on the index page for the `Installation` section. I\'m not sure what we gain by having ""scenarios"" on a different page.', 'comment_created': datetime.datetime(2021, 7, 21, 11, 28, 5, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673890117, 'comment_body': ""suggestion: as noted before, I think this doesn't need to be a separate page; it could just go into the `_index` for `Installation`, and the index page there could be the one-stop-shop for describing different types of installation"", 'comment_created': datetime.datetime(2021, 7, 21, 11, 28, 50, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673893112, 'comment_body': 'suggestion: a slight rewording\r\n\r\n```suggestion\r\nYou should see the `cert-manager`, `cert-manager-cainjector`, and\r\n`cert-manager-webhook` pods in a `Running` state. The webhook might take a\r\nlittle longer to successfully provision than the others.\r\n\r\nIf you experience problems, first check the [FAQ](../../faq/).\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 11, 33, 42, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673894960, 'comment_body': 'nitpick: this is a real nitpick :joy:  if we\'re using more informal language like ""good to go"" (which I think is good here!) I think this reads better using a contraction for ""you are""\r\n\r\n```suggestion\r\nIf all the above steps have completed without error, you\'re good to go!\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 11, 36, 48, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673896125, 'comment_body': ""suggestion: this sentence might be better higher up in this document; it would be annoying to do several manual steps to test your installation only to find out at the end of the document that there's a tool which can do it for you!\r\n\r\nalso, I'd reword slightly:\r\n\r\n```suggestion\r\nTo automatically check if cert-manager is correctly configured, you can run the community-maintained [cert-manager-verifier](https://github.com/alenkacz/cert-manager-verifier) tool.\r\n```"", 'comment_created': datetime.datetime(2021, 7, 21, 11, 38, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673896455, 'comment_body': ""suggestion: We mention the FAQ above, I don't think we need to mention it again here\r\n\r\n```suggestion\r\n```"", 'comment_created': datetime.datetime(2021, 7, 21, 11, 39, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 674224244, 'comment_body': 'Indeed. Note that, the ""kubectl cert-manager check api"" command will replace this tool in the future, so I\'ll revise this verify.md doc in a later PR.', 'comment_created': datetime.datetime(2021, 7, 21, 18, 20, 28, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 674940739, 'comment_body': 'nitpick: most pages we have already are using title casing; can we preserve that here?\r\n\r\n```suggestion\r\ntitle: ""Compatibility with Kubernetes Platform Providers""\r\n```', 'comment_created': datetime.datetime(2021, 7, 22, 15, 53, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 674941886, 'comment_body': 'nitpick: As above, can we preserve title case here?\r\n\r\n```suggestion\r\ntitle: ""Kubectl Apply""\r\nlinkTitle: ""Kubectl Apply""\r\n```\r\n\r\nAlternatively, it would be reasonable to have it all lowercase, so it looks more like the actual `kubectl apply` command:\r\n\r\n```suggestion\r\ntitle: ""kubectl apply""\r\nlinkTitle: ""kubectl apply""\r\n```', 'comment_created': datetime.datetime(2021, 7, 22, 15, 54, 50, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 674943858, 'comment_body': ""suggestion: I don't think this needs to be a highlighted note\r\n\r\n```suggestion\r\nBy default, cert-manager will be installed into the `cert-manager`\r\nnamespace. It is possible to run cert-manager in a different namespace, although\r\nyou'll need to make modifications to the deployment manifests.\r\n```"", 'comment_created': datetime.datetime(2021, 7, 22, 15, 56, 57, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 674949329, 'comment_body': 'suggestion: it doesn\'t feel quite right having a cloud-provider-specific suggestion here in this block. Could we maybe add a new subheading under the line `Once you have deployed cert-manager, you can verify the installation [here](../verify/).` below?\r\n\r\n```suggestion\r\n### Permissions Errors on Google Kubernetes Engine\r\n\r\nWhen running on , you might encounter a \'permission denied\' error when creating some\r\nof the required resources. This is a nuance of the way GKE handles RBAC and IAM permissions,\r\nand as such you might need to elevate your own privileges to that of a ""cluster-admin"" **before**\r\nrunning `kubectl apply`.\r\n\r\nIf you have already run `kubectl apply`, you should run it again after elevating your permissions:\r\n\r\n```bash\r\n$ kubectl create clusterrolebinding cluster-admin-binding \\\r\n    --clusterrole=cluster-admin \\\r\n    --user=$(gcloud config get-value core/account)\r\n\\``` # 🔥 should just be three backticks but it\'s hard to type three backticks inside a suggestion block 😂\r\n```', 'comment_created': datetime.datetime(2021, 7, 22, 16, 3, 10, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 674950383, 'comment_body': 'suggestion: minor wording change\r\n\r\n```suggestion\r\n- [Prerequisites specific to your cloud provider](../compatibility/)\r\n```', 'comment_created': datetime.datetime(2021, 7, 22, 16, 4, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 674950857, 'comment_body': ""note: I'm not at all familiar with OLM, so I haven't reviewed anything technical in this page - just the wording"", 'comment_created': datetime.datetime(2021, 7, 22, 16, 5, 5, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 674951811, 'comment_body': 'suggestion: as above, title casing\r\n\r\n```suggestion\r\ntitle: ""Verifying the Installation""\r\n```', 'comment_created': datetime.datetime(2021, 7, 22, 16, 6, 20, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 675123365, 'comment_body': 'I think both look a bit weird on the website (""Kubectl Apply"" & ""kubectl apply""), https://cert-manager.io/docs/usage/kubectl-plugin/ also says `Kubectl plugin`, and there are some other places on the website where the casing is different.\r\nSo, personally, I would prefer to not change it, please let me know if you don\'t agree.', 'comment_created': datetime.datetime(2021, 7, 22, 20, 0, 22, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}]","[{'commit_sha': '3186145ecaf410b6536f77115286cc507fc65a01', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ccda1e83ba34a4c38f1c6eb50142bb4cb02949c', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '320ecf1a91703c80b1cd4336af1387dcbdaa7283', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
677062374,upgrade hugo + upgrade docsy,"Upgraded some of the dependencies to the latest version.

https://deploy-preview-628--cert-manager.netlify.app/",True,628,https://api.github.com/repos/cert-manager/website/pulls/628,https://github.com/cert-manager/website/pull/628,closed,26,28,6,3,13,16,5,1,"[{'name': 'approved'}, {'name': 'dco-signoff: yes'}, {'name': 'lgtm'}, {'name': 'size/M'}, {'name': 'ok-to-test'}]",2021-06-24 12:18:55+00:00,2021-06-28 14:29:45+00:00,353450.0,"4 days, 2:10:50","[{'comment_id': 657900428, 'comment_body': 'Please explain this new setting. ', 'comment_created': datetime.datetime(2021, 6, 24, 12, 28, 8, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 657900578, 'comment_body': 'Please explain these CSS changes.', 'comment_created': datetime.datetime(2021, 6, 24, 12, 28, 20, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 657900971, 'comment_body': 'Explain the reason for using a different CDN', 'comment_created': datetime.datetime(2021, 6, 24, 12, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 657901611, 'comment_body': 'https://github.com/cert-manager/website/pull/508#issuecomment-818501996', 'comment_created': datetime.datetime(2021, 6, 24, 12, 29, 50, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 657912111, 'comment_body': 'I got these changes from the docsy repository: https://github.com/google/docsy/blob/1970009e00673e6ab15128d3441bbfff61ca4091/layouts/partials/scripts.html\r\n', 'comment_created': datetime.datetime(2021, 6, 24, 12, 44, 41, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 657915199, 'comment_body': 'This is required for the /docs/reference/api-docs/ to work (because it contains html). This is also the reason why tests fail for https://github.com/cert-manager/website/pull/508 but not for this PR.', 'comment_created': datetime.datetime(2021, 6, 24, 12, 48, 51, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 657918751, 'comment_body': 'The td-sidebar-toc change is needed because, the html was also changed, because the upstream html was changed (see layouts/docs/baseof.html).\r\n\r\nThe logo size I changed because it looks better on my machine:\r\n![image](https://user-images.githubusercontent.com/42113979/123265880-c9a75a80-d4fb-11eb-9d5d-24a2e9e0c6e8.png)\r\nold (left) vs new (right)\r\n\r\nPlease let me know if I should revert the logo change.', 'comment_created': datetime.datetime(2021, 6, 24, 12, 53, 10, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 657934346, 'comment_body': 'See https://github.com/cert-manager/website/pull/628#discussion_r657915199', 'comment_created': datetime.datetime(2021, 6, 24, 13, 12, 13, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 658119166, 'comment_body': ""Please drop a comment in to the code so that we don't forget the motivation for this setting."", 'comment_created': datetime.datetime(2021, 6, 24, 16, 47, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 658127057, 'comment_body': 'I like it. ', 'comment_created': datetime.datetime(2021, 6, 24, 16, 59, 12, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 658129336, 'comment_body': ""Yeah, but @maelvls 's concern is that all the anchors remain stable. \r\nHis example still works: https://deploy-preview-628--cert-manager.netlify.app/docs/contributing/building/#but-i-like-makefiles-more\r\n\r\nBut are there any that have changed? @maelvls You have a script to check this, right?"", 'comment_created': datetime.datetime(2021, 6, 24, 17, 2, 22, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 659661129, 'comment_body': ""question: which visual bug is this solving? I can't seem to be seeing a difference with/without :( "", 'comment_created': datetime.datetime(2021, 6, 28, 10, 18, 23, tzinfo=datetime.timezone.utc), 'commenter': 'maelvls', 'type': 'User'}, {'comment_id': 659681008, 'comment_body': ""![screencapture-deploy-preview-628-cert-manager-netlify-app-docs-concepts-certificaterequest-2021-06-28-12_48_43](https://user-images.githubusercontent.com/42113979/123624727-36c63300-d80f-11eb-92ac-d33376095471.png)\r\nNow the table is not wider than the rest of the content. Isn't that the issue you were describing here?: https://github.com/cert-manager/website/pull/628#issuecomment-867972867\r\n\r\nref. https://deploy-preview-628--cert-manager.netlify.app/docs/concepts/certificaterequest/"", 'comment_created': datetime.datetime(2021, 6, 28, 10, 50, 56, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 659760111, 'comment_body': 'I was rather thinking about the tables in the release process page that don\'t have the nice CSS that the other tables have because they are inside ordered lists:\r\n\r\n![image](https://user-images.githubusercontent.com/2195781/123655044-f080cc00-d82e-11eb-8399-ddd0fc19a732.png)\r\n\r\nThis bug only seem to appear when the table is inside ordered/unordered lists, such as:\r\n\r\n```md\r\n1. Some table:\r\n   | Name   | Description |\r\n   | ------ | ----------- |\r\n   | foo    | bar         |\r\n```\r\n\r\nI realize that I misled you when taking about a CSS bug in tables 😅 I am OK with tables ""overflowing"". With c27168d, the tables are now ""shrinked"" and take up more vertical space:\r\n\r\n| master | c27168d |\r\n|-|-|\r\n| <img alt=""master"" src=""https://user-images.githubusercontent.com/2195781/123639655-b6103280-d820-11eb-850c-957c59778975.png"" width=""500""> | <img alt=""c27168d"" src=""https://user-images.githubusercontent.com/2195781/123639117-2cf8fb80-d820-11eb-8b01-410cae9d6fe9.png"" width=""500""> |\r\n\r\n\r\n', 'comment_created': datetime.datetime(2021, 6, 28, 12, 55, 10, tzinfo=datetime.timezone.utc), 'commenter': 'maelvls', 'type': 'User'}, {'comment_id': 659764197, 'comment_body': 'I suggest that we leave these cosmetic changes to an ulterior PR, what do you think?\r\n\r\nThe certificaterequest page looks the same as yours on my machine (Chrome 91):\r\n\r\n| master | c27168d |\r\n|-|-|\r\n| ![1600_chrome_current (1)](https://user-images.githubusercontent.com/2195781/123645375-92e88180-d826-11eb-8586-4b483666ec2a.png) | ![1600_chrome_next (1)](https://user-images.githubusercontent.com/2195781/123645372-924feb00-d826-11eb-8b8b-f2bc314c095b.png) | \r\n\r\n\r\n', 'comment_created': datetime.datetime(2021, 6, 28, 13, 0, 42, tzinfo=datetime.timezone.utc), 'commenter': 'maelvls', 'type': 'User'}, {'comment_id': 659800055, 'comment_body': ""I'll revert that change."", 'comment_created': datetime.datetime(2021, 6, 28, 13, 44, 57, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}]","[{'commit_sha': 'b88168becd7bf8f1286b65ffd3b27876398764a8', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1631e2c37027d23a60682346a8f0df3b24747f1c', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '440e72cc0f908331bb6555a20321e1d13d482340', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
674671982,Refactor the end-to-end ACME HTTP01 tests (continuation of #3836),"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/release-notes.md
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
This is a continuation of #3836. It also includes some of the work done in #3724.

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
```
",True,4128,https://api.github.com/repos/cert-manager/cert-manager/pulls/4128,https://github.com/cert-manager/cert-manager/pull/4128,closed,220,465,6,11,12,26,8,2,"[{'name': 'size/XL'}, {'name': 'release-note-none'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/cleanup'}, {'name': 'dco-signoff: yes'}, {'name': 'area/testing'}, {'name': 'ok-to-test'}]",2021-06-21 15:44:39+00:00,2021-07-05 16:21:27+00:00,1211808.0,"14 days, 0:36:48","[{'comment_id': 655982253, 'comment_body': ""**suggestion:** re-wrap at 80 or 100 characters (we don't have a specific guideline regarding the wrapping width)\r\n\r\n```suggestion\r\n// WaitForCertificateReadyUpdate waits for the certificate resource to enter a\r\n// Ready state. If the provided cert was in a Ready state already, the function\r\n// waits for a state transition to have happened.\r\n```"", 'comment_created': datetime.datetime(2021, 6, 22, 8, 12, 10, tzinfo=datetime.timezone.utc), 'commenter': 'maelvls', 'type': 'User'}, {'comment_id': 655982541, 'comment_body': 'rewrap\r\n\r\n```suggestion\r\n// WaitForCertificateReadyUpdate waits for the certificate resource to enter a\r\n// Ready=False state. If the provided cert was in a Ready=False state already,\r\n// the function waits for a state transition to have happened.\r\n```', 'comment_created': datetime.datetime(2021, 6, 22, 8, 12, 32, tzinfo=datetime.timezone.utc), 'commenter': 'maelvls', 'type': 'User'}, {'comment_id': 655982802, 'comment_body': '```suggestion\r\n\t// ACME DNS Name.\r\n```', 'comment_created': datetime.datetime(2021, 6, 22, 8, 12, 52, tzinfo=datetime.timezone.utc), 'commenter': 'maelvls', 'type': 'User'}, {'comment_id': 655987039, 'comment_body': '**nit:** You are correct, the commonly accepted typography seems to be either:\r\n- ""commonName"" (the ASN.1 field name in the [RFC 5280](https://datatracker.ietf.org/doc/html/rfc5280)),\r\n- ""common name"" (lower-cased) is the human-readable attribute name for the `commonName` field in the [RFC 5280](https://datatracker.ietf.org/doc/html/rfc5280))\r\n\r\n```suggestion\r\n\t\t\t""should issue a certificate that defines a common name and URI SAN"": {\r\n```', 'comment_created': datetime.datetime(2021, 6, 22, 8, 18, 16, tzinfo=datetime.timezone.utc), 'commenter': 'maelvls', 'type': 'User'}, {'comment_id': 655988423, 'comment_body': '```suggestion\r\n// e.g. abcd.example.com.\r\n```', 'comment_created': datetime.datetime(2021, 6, 22, 8, 19, 52, tzinfo=datetime.timezone.utc), 'commenter': 'maelvls', 'type': 'User'}, {'comment_id': 655988577, 'comment_body': '```suggestion\r\n// e.g. abcd.example.com.\r\n```', 'comment_created': datetime.datetime(2021, 6, 22, 8, 20, 2, tzinfo=datetime.timezone.utc), 'commenter': 'maelvls', 'type': 'User'}, {'comment_id': 655988804, 'comment_body': '```suggestion\r\n// and so on.\r\n```', 'comment_created': datetime.datetime(2021, 6, 22, 8, 20, 18, tzinfo=datetime.timezone.utc), 'commenter': 'maelvls', 'type': 'User'}, {'comment_id': 656002002, 'comment_body': '@maelvls I did not apply your requested change because all other tests also seem to use ""Common Name"".\r\nAnd you also have ""DNS Name"" etc. that is used in these test files.\r\nSo currently I changed it to ""Common Name"" because all other tests also use this name.\r\nMight be useful to check these test names in the future, but maybe this is out of scope for this PR?', 'comment_created': datetime.datetime(2021, 6, 22, 8, 36, 25, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 656008648, 'comment_body': 'Totally agree, this is out of scope for this PR, my apologies 😅', 'comment_created': datetime.datetime(2021, 6, 22, 8, 44, 44, tzinfo=datetime.timezone.utc), 'commenter': 'maelvls', 'type': 'User'}, {'comment_id': 656059114, 'comment_body': 'It is unclear to me why this is specific to ACME and is invalid. The conformance suite tests should ideally be run against more than one issuer, otherwise it might be better to just back to the issuer specific test suite.', 'comment_created': datetime.datetime(2021, 6, 22, 9, 48, 34, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 656059717, 'comment_body': 'What is incorrect about this DNS name? Again, I think this is specific to ACME and should be moved to the issuer specific tests.', 'comment_created': datetime.datetime(2021, 6, 22, 9, 49, 22, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 656060419, 'comment_body': 'Can we add some comments as to why we are adding default here?', 'comment_created': datetime.datetime(2021, 6, 22, 9, 50, 16, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 656061834, 'comment_body': 'Why is this function being deleted?', 'comment_created': datetime.datetime(2021, 6, 22, 9, 52, 5, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 656062489, 'comment_body': ""Could you expand on this comment to give some examples as to what makes a DNS Name not ACME valid? I wasn't aware of any DNS names which aren't ACME valid."", 'comment_created': datetime.datetime(2021, 6, 22, 9, 52, 55, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 656064032, 'comment_body': 'Is this required? It would seem to me to just have `IPAdress` defined, which will be defaulted if empty.\r\n\r\n`f.Config.Addons.ACMEServer.IngressIP` should be able to be referenced by issuers that need to set it. ', 'comment_created': datetime.datetime(2021, 6, 22, 9, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 656064148, 'comment_body': 'Thanks :smile: ', 'comment_created': datetime.datetime(2021, 6, 22, 9, 55, 7, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 656141304, 'comment_body': 'I think the problem was that in eg. `runACMEIssuerTests` you do not have access to `f.Config.Addons.ACMEServer.IngressIP` yet so you cannot override the `IPAddress` value with that value. The `f *framework.Framework` parameter is only injected at the moment the `complete()` function is called', 'comment_created': datetime.datetime(2021, 6, 22, 11, 48, 14, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 656146567, 'comment_body': 'In `cert-manager/devel/addon/pebble/chart/templates/configmap.yaml` the google.com DNS Name is blacklisted, so that is where this ""invalid ACME DNS Name"" comes from.\r\nThis test is applicable to both HTTP01 and DNS01 challenges, so therefore it could maybe be useful to still move it to a conformance test?\r\n\r\n@JoshVanL please let me know what you think; for now I\'ll move it back to the issuer specific test suite.', 'comment_created': datetime.datetime(2021, 6, 22, 11, 55, 46, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 656147798, 'comment_body': 'I see, then maybe better to change this to `UseIngressIPAddress bool` in the suite struct, and remove both `IPAddress` and `IPAddressType`.\r\n\r\nWe can then define a `sharedIPAddress` in `tests.go`, similar to [`sharedURI`](https://github.com/jetstack/cert-manager/blob/15b6f32071b45687b44eb097145815fc3af1b010/test/e2e/suite/conformance/certificatesigningrequests/tests.go#L61), which implements the logic to determine which IP to use based on `UseIngressIPAddress`.', 'comment_created': datetime.datetime(2021, 6, 22, 11, 57, 26, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 656148481, 'comment_body': ""I'll move this back to the issuer specific test suite.\r\nI'll also look into adding a more general test here that checks for a wrong DNS Name (eg. wrongly formatted) if it can still recover."", 'comment_created': datetime.datetime(2021, 6, 22, 11, 58, 28, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 656151249, 'comment_body': ""I see, understood.\r\n\r\nI think having ACME specific tests isn't appropriate here in the conformance suite. Ideally the tests in conformance can be picked up by any issuer implementation, and they can pick and choose which features they support. \r\n\r\nHaving a feature which is _only_ for a specific domain blacklist on _this specific_ pebble installation clouds the intention a bit."", 'comment_created': datetime.datetime(2021, 6, 22, 12, 2, 31, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 656153413, 'comment_body': 'The function did almost the same as `WaitForCertificateReady`, so it could be replaced by this function. ', 'comment_created': datetime.datetime(2021, 6, 22, 12, 5, 37, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 663983834, 'comment_body': '**praise:** this is a super helpful comment 👍👍 ', 'comment_created': datetime.datetime(2021, 7, 5, 14, 44, 53, tzinfo=datetime.timezone.utc), 'commenter': 'maelvls', 'type': 'User'}, {'comment_id': 664006779, 'comment_body': ""question: has this test been moved to the conformance suite? I can't find it."", 'comment_created': datetime.datetime(2021, 7, 5, 15, 21, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jakexks', 'type': 'User'}, {'comment_id': 664008308, 'comment_body': '@jakexks thx for spotting that that test is missing, should have been https://github.com/jetstack/cert-manager/blob/fa45e867f8383c543afd553ad121603638476a7b/test/e2e/suite/conformance/certificates/tests.go#L239-L267 without the ""Common Name""\r\nAt some point, I added that test; but I must have lost it during rebase.', 'comment_created': datetime.datetime(2021, 7, 5, 15, 24, 11, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 664008402, 'comment_body': ""I'll add it now"", 'comment_created': datetime.datetime(2021, 7, 5, 15, 24, 22, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}]","[{'commit_sha': '98bf0b6478c1768643b50ea95dcbf72f2dc5057f', 'committer_username': 'maelvls', 'committer_name': 'Maël Valais', 'committer_email': 'mael@vls.dev', 'commit_date': datetime.datetime(2012, 8, 22, 10, 44, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f372c0812f7465925f0f8ce3881023dcb2fc880', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1284d5ef8d77be26c338c674b0440e8ef99bedf', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd776f04d12468989a1829bb3b1ff6e62cf9d3c8', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02aa9f0f0cd23e25b9e2ef0d7e414cb27f793fe8', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a62bb6a10aa8b1ea07a0a4ca228e3b9339d75fc5', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fa8255019c2fde086f993c55ef8580d7baca1ac', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3a7dbf247d9c02eb59fe2259943a7a0107811b6', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0e83feac2c74970bb8c014dcb975fb9c3cc0a9f', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02654fd107e6367b8884a83e327cfcb2f042c022', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4b3ee79c4f3fb0e0786d66b5c4f5f00b29e48bc', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
676417975,Basic install functionality for kubectl plugin,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/release-notes.md
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

First part towards a more complete install, uninstall, upgrade and verify toolset in the kubectl plugin.
Part of #4125.

The goal is to implement all functionality step-by-step so that it is easier to review and merge all the parts.

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
`kubectl cert-manager x install` command is added
```

/kind feature",True,4138,https://api.github.com/repos/cert-manager/cert-manager/pulls/4138,https://github.com/cert-manager/cert-manager/pull/4138,closed,9871,4064,17,10,6,89,8,1,"[{'name': 'release-note'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/feature'}, {'name': 'size/XXL'}, {'name': 'dco-signoff: yes'}, {'name': 'ok-to-test'}, {'name': 'area/deploy'}]",2021-06-23 15:51:16+00:00,2021-07-05 08:02:45+00:00,1008689.0,"11 days, 16:11:29","[{'comment_id': 657990862, 'comment_body': '```suggestion\r\n\tresources, err := helm.GetChartResourceInfo(chart, dryRunResult.Manifest, true, o.cfg.KubeClient)\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n```\r\n* #3858 \r\n* #3863 ', 'comment_created': datetime.datetime(2021, 6, 24, 14, 18, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 658001010, 'comment_body': 'Use `fmt.Errorf` and drop the preceding log message.', 'comment_created': datetime.datetime(2021, 6, 24, 14, 29, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 658027151, 'comment_body': '`fmt.Errorf` and remove the log', 'comment_created': datetime.datetime(2021, 6, 24, 14, 58, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 658051190, 'comment_body': 'This seems to pick up default flag values from environment variables prefixed `HELM_`, so perhaps :\r\n\r\n1. we need to mention that in the command line help with a link to the Helm docs on those variables. OR\r\n2. We might decide not to support all those env vars. \r\n\r\nI favour `1.` because I think the HELM_ env vars make the tool more flexible, as long as we document them properly.', 'comment_created': datetime.datetime(2021, 6, 24, 15, 25, 19, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 658056458, 'comment_body': 'I don\'t  think this function ever returns an error, but it does Panic in various places, e.g. if the supplied `HELM_DRIVER` is unrecognized.\r\nSeems a bit ugly. \r\n\r\nAlso note that the `helm` packages seem to use https://github.com/pkg/errors which means that the errors have stacktraces attached, and the `""%+v"", err` syntax above is how you control whether to print the stacktrace.\r\n\r\nThat should probably be a configuration option in future.\r\n\r\nAnd since they return these errors, we should probably consider using https://github.com/pkg/errors too, using `errors.WithLabel` for an error which is already a https://github.com/pkg/errors and using `errors.Wrap` for errors which are originate from our package.', 'comment_created': datetime.datetime(2021, 6, 24, 15, 31, 25, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 658066300, 'comment_body': ""This locates charts from filesystem or URL and if URL it downloads it.\r\nBut do we want users to have so much flexibility? And don't all the chart related flags add confusion to the CLI.\r\n"", 'comment_created': datetime.datetime(2021, 6, 24, 15, 42, 7, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 658072356, 'comment_body': 'Ah, hence your comment on Slack this morning.\r\nI created an issue: https://github.com/jetstack/cert-manager/issues/4139', 'comment_created': datetime.datetime(2021, 6, 24, 15, 49, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 658074998, 'comment_body': ""You'll need to explain this to me. \r\nLooks like you're effectively doing `helm template --set installCRDs=true` to generate static manifests.\r\nBut why?"", 'comment_created': datetime.datetime(2021, 6, 24, 15, 52, 19, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 658076701, 'comment_body': 'Document this function. Explain the intent.', 'comment_created': datetime.datetime(2021, 6, 24, 15, 54, 24, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 658078337, 'comment_body': ""And why is the `installCrdFolder` argument always set to true?\r\ncert-manager doesn't populate this folder, right?"", 'comment_created': datetime.datetime(2021, 6, 24, 15, 56, 18, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 659855323, 'comment_body': ""I'll just return error, and make cobra handle the rest."", 'comment_created': datetime.datetime(2021, 6, 28, 14, 47, 46, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 659862628, 'comment_body': ""For the e2e test, it uses the filesystem location, so I think that we should keep the option. I'll try to further remove flags that are probably not needed/ will not be used."", 'comment_created': datetime.datetime(2021, 6, 28, 14, 55, 48, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 659866106, 'comment_body': 'I added some comments.\r\nThe function argument is set to true: on install, we want to combine crds from all possible sources.\r\nAlthough, like explained in my comments, the parameter is only useful in case the /crds folder is used in the chart.\r\nSo, it is possible to switch to such a system in case that would be a requirement.', 'comment_created': datetime.datetime(2021, 6, 28, 14, 59, 43, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 660493632, 'comment_body': 'The cert-manager tool uses the kubectl flags for namespace etc., in the latest commit I created a function to convert these flags to the helm flags and overwrites the default helm flag values. For the non-overwritten values, the prefixed environment variables will be used.', 'comment_created': datetime.datetime(2021, 6, 29, 10, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 661464666, 'comment_body': 'These must be defined in one of the Kubernetes libraries. See if we can import these instead of redefining them here.', 'comment_created': datetime.datetime(2021, 6, 30, 13, 18, 22, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 661468156, 'comment_body': ""What are the three dots in  `[...]string{}` ? I've never seen that before."", 'comment_created': datetime.datetime(2021, 6, 30, 13, 22, 29, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 661470851, 'comment_body': 'We only ever use the ""Create"" policy in this branch. Shall we remove the other policies and associated code, for now.\r\nLeave a TODO explaining when other policies are likely to be needed in future.', 'comment_created': datetime.datetime(2021, 6, 30, 13, 25, 27, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 661485223, 'comment_body': 'Ok. Thanks for explaining.\r\nWe do not use the `crds/` folder and are unlikely to\r\n * https://cert-manager.io/docs/contributing/policy/#helm-crds\r\n\r\nSo please remove this function and all the calls to it,\r\nto further simplify this PR.\r\n', 'comment_created': datetime.datetime(2021, 6, 30, 13, 41, 21, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 661485968, 'comment_body': '```suggestion\r\nThis command installs cert-manager. It uses the Helm libraries to do so.\r\n```', 'comment_created': datetime.datetime(2021, 6, 30, 13, 42, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 661487238, 'comment_body': '```suggestion\r\nIn addition his command will always install CRD resources.\r\n```', 'comment_created': datetime.datetime(2021, 6, 30, 13, 43, 24, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 661488907, 'comment_body': ""Please find a way to make the default namespace be `cert-manager`.\r\nWe certainly don't want users to install cert-manager in the `default` namespace.\r\nAnd also don't want new users to have to choose a namespace."", 'comment_created': datetime.datetime(2021, 6, 30, 13, 45, 7, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 661493045, 'comment_body': ""What is the point of this `--dry-run` option? \r\nI expected it to print out all the resources that would be installed.\r\nThat's what `helm install --dry-run` does."", 'comment_created': datetime.datetime(2021, 6, 30, 13, 49, 29, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 661505408, 'comment_body': ""I don't like this.\r\nI'd prefer `uninstall` bail out unless it detects a single cert-manager installed by `kubectl cert-manager install`.\r\n\r\nGenerating static manifests from the latest Helm chart and assuming that those are the resources that are currently installed is unreliable. \r\nWhat if the latest release has removed various  RBAC cluster-role-bindings.\r\nOr maybe we'll end up removing the conversion webhook once we remove the old API versions.\r\nThis strategy will result in those old resources being orphaned.\r\n\r\nI think we need to consider this more carefully."", 'comment_created': datetime.datetime(2021, 6, 30, 14, 2, 35, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 661509590, 'comment_body': 'It has been argued that bundling Helm will make our dependencies difficult to manage.\r\nAnd glancing at these changes, it does seem like there are *a lot* of new dependencies here.\r\n\r\nBut many of these changes in `go.sum` seem to be updates of version of libraries that we already depend on.\r\n', 'comment_created': datetime.datetime(2021, 6, 30, 14, 7, 12, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 661911309, 'comment_body': 'Changed it', 'comment_created': datetime.datetime(2021, 7, 1, 1, 31, 33, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 661912155, 'comment_body': 'I found a way to do this, the changes are in the repo.', 'comment_created': datetime.datetime(2021, 7, 1, 1, 34, 30, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 661915041, 'comment_body': 'The [...]string{} operator means that you create an array of fixed length, statically determined by the compiler (https://golang.org/ref/spec#Composite_literals).\r\nI added a comment.', 'comment_created': datetime.datetime(2021, 7, 1, 1, 44, 49, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 661915228, 'comment_body': 'I removed that part of the function.', 'comment_created': datetime.datetime(2021, 7, 1, 1, 45, 32, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 661921039, 'comment_body': '`go mod tidy` reduces the number of records that are in `go.sum`.\r\nUnfortunately, after running `./hack/update-all.sh` they are added again.', 'comment_created': datetime.datetime(2021, 7, 1, 2, 5, 28, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 661921541, 'comment_body': 'Not sure what package that can be found in:\r\nhttps://pkg.go.dev/k8s.io/apiextensions-apiserver/pkg/apis/apiextensions only seems to contain the ""apiextensions.k8s.io"" value.', 'comment_created': datetime.datetime(2021, 7, 1, 2, 7, 19, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 662102496, 'comment_body': ""That's a shame, I wonder if its because bazel is using a differnt version of Go than you?"", 'comment_created': datetime.datetime(2021, 7, 1, 8, 47, 15, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 662102665, 'comment_body': 'Ok. Great.', 'comment_created': datetime.datetime(2021, 7, 1, 8, 47, 27, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 662102846, 'comment_body': ""Ok. I'll try it out."", 'comment_created': datetime.datetime(2021, 7, 1, 8, 47, 41, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 662103339, 'comment_body': 'Thanks for the link. Nice to know.', 'comment_created': datetime.datetime(2021, 7, 1, 8, 48, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 662114086, 'comment_body': '```suggestion\r\n\t\tShort: ""Install cert-manager"",\r\n```', 'comment_created': datetime.datetime(2021, 7, 1, 9, 2, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 662114574, 'comment_body': '```suggestion\r\n\t\tShort: ""Uninstall cert-manager"",\r\n```', 'comment_created': datetime.datetime(2021, 7, 1, 9, 3, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663022048, 'comment_body': 'Fixed it', 'comment_created': datetime.datetime(2021, 7, 2, 13, 41, 11, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 663035896, 'comment_body': 'Remove this whitespace', 'comment_created': datetime.datetime(2021, 7, 2, 14, 1, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663037606, 'comment_body': 'Remove this whitespace', 'comment_created': datetime.datetime(2021, 7, 2, 14, 3, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663037859, 'comment_body': 'Remove this blank line', 'comment_created': datetime.datetime(2021, 7, 2, 14, 3, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663038742, 'comment_body': 'Remove blank line', 'comment_created': datetime.datetime(2021, 7, 2, 14, 5, 13, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663041576, 'comment_body': '```\r\ngolangci-lint run ./cmd/ctl/...\r\ncmd/ctl/pkg/flags/flags.go:25:24: Error return value of `flag.CommandLine.Parse` is not checked (errcheck)\r\n\tflag.CommandLine.Parse([]string{})\r\n\r\n```\r\n\r\n(although it seems to be reporting the wrong line numbers in the output :shrug: ', 'comment_created': datetime.datetime(2021, 7, 2, 14, 9, 31, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663042097, 'comment_body': ""And what's the point of this line anyway?\r\nPlease add a comment if you know."", 'comment_created': datetime.datetime(2021, 7, 2, 14, 10, 23, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663047761, 'comment_body': ""Please consider renaming this function, because unlike the other AddFlags methods, this one has side-effects\r\n(it terminates the process)\r\n\r\nI know this is not your code, but if you can, please document how this function is intended to behave, because it's a mystery to me."", 'comment_created': datetime.datetime(2021, 7, 2, 14, 18, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663048265, 'comment_body': ""I don't understand why we need to call `os.Exit` here, since we've already configured the flagset to `ExitOnError`."", 'comment_created': datetime.datetime(2021, 7, 2, 14, 19, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663053179, 'comment_body': 'There should be a default case which returns an error in case anyone ever happens to be use it with a made up policy type number e.g. `ApplyCRDs( CRDsPolicy(999), ...)`', 'comment_created': datetime.datetime(2021, 7, 2, 14, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663061060, 'comment_body': ""I don't get this. If the CRD already exists, why do we still add it to the `totalItems` ? \r\nMaybe all the CRDs already exist in which case why do we need to invalidate the cache at the end of this function.\r\nAnd if `cfg.KubeClient.Create` returns an error, `rr` will always be `nil`, unless Create doesn't  follow that convention.\r\n(I think it does).\r\n\r\nI hadn't paid much attention to this code before because I saw that it was copied from another project, but all it makes me nervous about the quality of that original code.\r\n\r\nPlease document the intended behaviour of this function and remove all the unused parts. \r\n\r\nIt should probably just be called `CreateMissingCRDs` ....but deep down I think it should fail if there are any existing CRDs, because we might end up with a mixture of old and new."", 'comment_created': datetime.datetime(2021, 7, 2, 14, 38, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663062108, 'comment_body': 'There will never be any dependencies in the cert-manager chart, so why do we check for them?', 'comment_created': datetime.datetime(2021, 7, 2, 14, 39, 39, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663063849, 'comment_body': 'Can we just remove this whole block? Has this too been copied from Flux? Please remove it if you agree that it is never going to be used in cert-manager installer.', 'comment_created': datetime.datetime(2021, 7, 2, 14, 42, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663065375, 'comment_body': 'Is this relevant to cert-manager? What other Chart types are there? Libraries? Please remove this unless it has any relevance to cert-manager. Or document the intent of the function if you think it is needed.', 'comment_created': datetime.datetime(2021, 7, 2, 14, 44, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663070958, 'comment_body': 'You could do:\r\n\r\n```\r\nimport (\r\n\tapiextensionsv1 ""k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1""\r\n)\r\n\r\n(&apiextensionsv1.CustomResourceDefinition{}).GroupVersionKind().Group\r\n(&apiextensionsv1.CustomResourceDefinition{}).GroupVersionKind().Kind\r\n```\r\nBut probably not worth it.', 'comment_created': datetime.datetime(2021, 7, 2, 14, 53, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663075565, 'comment_body': 'I think a better name for this function is `LoadAllYAMLDocuments` or `ParseMultiDocumentYAML`. \r\nPlease document whether this function contains only Kubernetes resource types or whether it also contains Helm types.', 'comment_created': datetime.datetime(2021, 7, 2, 14, 59, 49, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663076001, 'comment_body': ""`failed to parse CRDs from render` isn't a full sentence."", 'comment_created': datetime.datetime(2021, 7, 2, 15, 0, 30, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663080300, 'comment_body': ""The name of this function doesn't match its content. It appears to be a general filter function with the ability to inject any sort of filter, but it assigns the results to a variable called `crds`."", 'comment_created': datetime.datetime(2021, 7, 2, 15, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663081571, 'comment_body': 'The `err` is unhandled. What it `helper.Get` does return a NotFoundError or some other transient error? Those two cases should be handled differently, right?', 'comment_created': datetime.datetime(2021, 7, 2, 15, 8, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663083414, 'comment_body': 'Remove blank line', 'comment_created': datetime.datetime(2021, 7, 2, 15, 11, 22, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663086208, 'comment_body': ""Please document the intended behaviour of this function. \r\nAnd consider renaming it, because I don't understand in what sense it *copies* flags?\r\n\r\nIt seems to merge the supplied flags with some overrides and then runs parse. \r\n"", 'comment_created': datetime.datetime(2021, 7, 2, 15, 15, 44, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663086338, 'comment_body': 'Remove blank line', 'comment_created': datetime.datetime(2021, 7, 2, 15, 15, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663090162, 'comment_body': 'Why is this variable called `factory`? Please think of a better name or  rename `AddFlags` to `NewFactory` and explain what a factory is.', 'comment_created': datetime.datetime(2021, 7, 2, 15, 22, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663100000, 'comment_body': ""Why is this variable called `settings` ? Shouldn't it be `helmCLI`, given the function call used?"", 'comment_created': datetime.datetime(2021, 7, 2, 15, 37, 48, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663100951, 'comment_body': 'If `settings := cli.New()`, why does `client := action.NewInstall()` ?\r\nSorry to nit pick but the variables and struct fields need to have more meaningful names.', 'comment_created': datetime.datetime(2021, 7, 2, 15, 39, 36, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663102047, 'comment_body': 'Make this default namespace a constant, or is it among the values of the chart? \r\nHow does helm know to use the namespace `cert-manager` when I run `helm install jetstack/cert-manager` ?\r\n', 'comment_created': datetime.datetime(2021, 7, 2, 15, 41, 22, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663103049, 'comment_body': 'This looks odd. We return `nil` if `CopyCliFlags` returns an `err`. ', 'comment_created': datetime.datetime(2021, 7, 2, 15, 43, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663105871, 'comment_body': 'This never returns an error.', 'comment_created': datetime.datetime(2021, 7, 2, 15, 48, 10, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663106978, 'comment_body': ""And I'd be inclined to call it `printReleaseSummary`"", 'comment_created': datetime.datetime(2021, 7, 2, 15, 50, 1, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663108022, 'comment_body': ""And I don't think this code branch belongs here. \r\nIt should be in the calling function."", 'comment_created': datetime.datetime(2021, 7, 2, 15, 51, 46, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663111153, 'comment_body': ""This is a problem. \r\nSpecifying `helm upgrade` here allows for iterative local development.\r\nE.g. it allows me to install cert-manager, modify the code and then call `install.sh` again to quickly build and deploy the modified code.\r\n\r\nWith this change I won't be able to do that."", 'comment_created': datetime.datetime(2021, 7, 2, 15, 57, 22, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663114951, 'comment_body': 'These flags are not useful for end users. \r\nBut I see that they are useful for  the E2E tests.\r\nSo please make them hidden flags. https://pkg.go.dev/github.com/spf13/pflag#readme-hidden-flags', 'comment_created': datetime.datetime(2021, 7, 2, 16, 4, 11, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663117970, 'comment_body': ""Please explain why setting `IsUpgrade = true` prevents validating against the cluster? It doesn't make sense to me."", 'comment_created': datetime.datetime(2021, 7, 2, 16, 9, 30, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663121983, 'comment_body': 'It might be useful to say whether *all* the CRDs were found to be already installed,\r\nor if a subset of them are installed.\r\nAnd if a subset, which ones are installed and which are missing.', 'comment_created': datetime.datetime(2021, 7, 2, 16, 16, 50, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663122574, 'comment_body': 'When would this ever be zero? \r\nThe tool should bail out with an error if this is found to be zero, I think.', 'comment_created': datetime.datetime(2021, 7, 2, 16, 17, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663125500, 'comment_body': 'The `Create` policy makes even less sense, since we\'ve already bailed out if any of the CRDs are already installed.\r\nAnd it re-enforces my feeling that the current Create strategy, of ""skipping"" CRDs which already exist, is wrong.\r\n\r\nIt should bail out early with an error if any of the CRDs are found to exist.\r\nAnd the subsequent attempt to create the CRDs need not have any special handling of the `IsAlreadyExists` error...which I suppose might occur if `kubectl cert-manager install` was running more than once in parallel....but then all bets are off, and maybe Helm SDK even has some locking mechanism to prevent that anyway.', 'comment_created': datetime.datetime(2021, 7, 2, 16, 23, 24, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663128486, 'comment_body': 'Please add a couple of paragraphs in above this function explaining the strategy.\r\nSomething like:\r\n\r\n> The overall strategy is to install the CRDs first, and not as part of a Helm release,\r\n> and then to install a Helm release without the CRDs.\r\n> This is to ensure that CRDs are not removed by a subsequent `helm uninstall` or by a future `kubectl cert-manager uninstall`.\r\n> We want the removal of CRDs to only be performed by an administrator who understands that the consequences of removing CRDs will be the garbage collection of all the related CRs in the cluster.\r\n> We first do a dry-run install of the chart (effectively `helm install --dry-run`) to both render the CRDs from the CRD templates in the Chart *and* to perform all the Helm pre-flight checks\r\n> We then extract the CRDs from the resulting dry-run manifests and install those first. \r\n> Finally we perform a `helm install` to install the remaining non-CRD resources and wait for those to be ""Ready"".\r\n> This creates a Helm ""release"" artifcact in a Secret in the target namespace, which contains a record of all the resources installed by Helm (except the CRDs).', 'comment_created': datetime.datetime(2021, 7, 2, 16, 29, 8, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663129322, 'comment_body': ""Should the log be directed to stderr, so that it doesn't corrupt the dry-run resources that may also be printed?\r\nPlease add a comment explaining what `log.SetFlags(0)` is for."", 'comment_created': datetime.datetime(2021, 7, 2, 16, 30, 48, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 663129938, 'comment_body': ""Not sure, I'll just not move these calls into a new function (it was part of a solution that I eventually replaced)."", 'comment_created': datetime.datetime(2021, 7, 2, 16, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 663130038, 'comment_body': ""I'll just not move these calls into a new function (it was part of a solution that I eventually replaced)."", 'comment_created': datetime.datetime(2021, 7, 2, 16, 32, 2, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 663130180, 'comment_body': ""I'll just not move these calls into a new function (it was part of a solution that I eventually replaced)."", 'comment_created': datetime.datetime(2021, 7, 2, 16, 32, 16, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 663133554, 'comment_body': ""I'll remove it for now, it was part of the Helm code. Since it is still experimental, we can still add this later if necessary (eg. if cert-manager ever plans on adding dependencies and we want older cli versions to already support this)."", 'comment_created': datetime.datetime(2021, 7, 2, 16, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 663134763, 'comment_body': 'https://helm.sh/docs/topics/charts/#chart-types\r\nYou can also have library chart types. Since you can provide your own charts via the --chart-name flag, it might be better to leave this check in place?', 'comment_created': datetime.datetime(2021, 7, 2, 16, 41, 47, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 663165280, 'comment_body': ""https://github.com/helm/helm/blob/699ea6dcef302d7ded608bc8a1ab6c404de81685/pkg/kube/client.go#L192-L198\r\n-> It is possible that err == nil and rr !=nil for the Update function; the Create function indeed only returns nil, err or val, nil.\r\n\r\nI'll simplify the function so it only creates CRDs, also I will only allow the case where there are no CRDs installed yet.\r\n"", 'comment_created': datetime.datetime(2021, 7, 2, 17, 42, 9, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 663169832, 'comment_body': 'On my machine it just installs cert-manager in the default namespace.', 'comment_created': datetime.datetime(2021, 7, 2, 17, 51, 28, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 663170691, 'comment_body': 'I moved that function back to this file; so the file should not contain any changes anymore.', 'comment_created': datetime.datetime(2021, 7, 2, 17, 53, 30, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 663207532, 'comment_body': 'Thx for spotting that error.', 'comment_created': datetime.datetime(2021, 7, 2, 19, 20, 28, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 663208289, 'comment_body': 'This was a workaround, ideally we use ClientOnly. I figured out how to do that now, so this is not an issue anymore.', 'comment_created': datetime.datetime(2021, 7, 2, 19, 22, 10, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 663211041, 'comment_body': ""I'll for now hide most of the flags. I think that will make the tool easier to use. "", 'comment_created': datetime.datetime(2021, 7, 2, 19, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 663211774, 'comment_body': 'This is the same naming that Helm internally uses: https://github.com/helm/helm/blob/eb99434597d230a2106b22f15ac1e250ca5592f6/cmd/helm/install.go#L192', 'comment_created': datetime.datetime(2021, 7, 2, 19, 30, 26, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 663212122, 'comment_body': 'Is also the same as Helm: https://github.com/helm/helm/blob/eb99434597d230a2106b22f15ac1e250ca5592f6/cmd/helm/install.go#L107', 'comment_created': datetime.datetime(2021, 7, 2, 19, 31, 22, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 663214350, 'comment_body': 'In this case the error triggers in case at least one CRD is found.\r\nWe want the user to have NO CRDs installed, so it is not that important what CRDs are missing.\r\nIn case of upgrading or in case we allow installing even with CRDs already present, adding those details might be very useful.', 'comment_created': datetime.datetime(2021, 7, 2, 19, 36, 59, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 663250871, 'comment_body': 'This is now unused.', 'comment_created': datetime.datetime(2021, 7, 2, 21, 17, 1, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}]","[{'commit_sha': '1c4b511876be653640cf5b9b0f84681ee5686ea6', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f228e6c7be9b1fe0a1144a846bb397a7cbcc5b94', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3177be515a1c411c58bcdbc6cf17a2cd1d4e63d4', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '136b8ef374b971fb3344428a0f2ed9a5b6cfe3c4', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4f65b47ed23b54c61cd8ff25632508165f8387c', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38b95f897f1a910e1ac8de371c2f910de034ff15', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18ccebdae31eab8887c1c5a9bac096a9babe8e7f', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfdb375b28aba7015a4feaaa8423535dd6c9fc63', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f6efb757562de68b0f8d142b09dcc234c882222', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4e8aad895ce597aa15091095fdb48e5165cad0b', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
679719767,chore: deduplicate subDomainName generation logic in tests,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/release-notes.md
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
There were a lot of subdomain generation implementations in the tests, now it is centralized. (part of #4128)

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note

```
",True,4154,https://api.github.com/repos/cert-manager/cert-manager/pulls/4154,https://github.com/cert-manager/cert-manager/pull/4154,closed,63,101,19,1,4,3,8,2,"[{'name': 'size/L'}, {'name': 'release-note-none'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/cleanup'}, {'name': 'dco-signoff: yes'}, {'name': 'area/testing'}, {'name': 'ok-to-test'}]",2021-06-29 08:32:15+00:00,2021-06-29 11:26:37+00:00,10462.0,2:54:22,"[{'comment_id': 660428477, 'comment_body': '```suggestion\r\n// RandomSubdomain returns a new subdomain domain of the domain suffix.\r\n// e.g. abcd.example.com.\r\n```', 'comment_created': datetime.datetime(2021, 6, 29, 9, 9, 53, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 660429098, 'comment_body': '```suggestion\r\n// RandomSubdomainLength returns a new subdomain domain of the domain suffix, where the subdomain has `length` number of characters.\r\n```', 'comment_created': datetime.datetime(2021, 6, 29, 9, 10, 44, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 660430081, 'comment_body': 'Is this function used anywhere?', 'comment_created': datetime.datetime(2021, 6, 29, 9, 11, 55, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}]","[{'commit_sha': '6ceaf6d4bd4bf1a0a0efffbb35063197e95d7798', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
679875728,cleanup tests: WaitForCertificateReady,"**What this PR does / why we need it**:

There was some duplicate WaitForCertificateReady/ WaitForCertificateIssued logic, also waiting for a status update to the same state was not possible (eg. Ready=true -> Ready=true). (part of #4128)
Other included cleanups:
- UseIngressIPAddress was added, so HTTP01 IP certificates can be tested
- some TODOs were removed from s.complete(...) & shared variables are initialized better

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
```",True,4157,https://api.github.com/repos/cert-manager/cert-manager/pulls/4157,https://github.com/cert-manager/cert-manager/pull/4157,closed,196,153,18,3,4,8,8,2,"[{'name': 'size/L'}, {'name': 'release-note-none'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/cleanup'}, {'name': 'dco-signoff: yes'}, {'name': 'area/testing'}, {'name': 'ok-to-test'}]",2021-06-29 11:47:57+00:00,2021-06-30 17:19:57+00:00,106320.0,"1 day, 5:32:00","[{'comment_id': 660560315, 'comment_body': ""What's the reason we are also checking the `ObservedGeneration`?\r\n\r\nThis does not seem required for the intent of this function since the passed condition normally doesn't have an `ObservedGeneration` set.\r\n\r\nIf this _is_ required somewhere, can we please add a `CertificateHasConditionWithObservedGeneration` function so we don't accidentally break existing consumers."", 'comment_created': datetime.datetime(2021, 6, 29, 12, 19, 50, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 660562767, 'comment_body': ""This doesn't look like it needs to be inside the `BeforeEach` and can instead live next to the `sharedIPAddress` declaration."", 'comment_created': datetime.datetime(2021, 6, 29, 12, 23, 7, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 660563448, 'comment_body': ""Don't think this needs to live in the before each."", 'comment_created': datetime.datetime(2021, 6, 29, 12, 24, 6, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 660563876, 'comment_body': 'Why is this being removed?', 'comment_created': datetime.datetime(2021, 6, 29, 12, 24, 42, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 660575390, 'comment_body': 'This function should work for both. Because in case `ObservedGeneration` is not set, it will default to 0 and all `ObservedGeneration` will always be larger than 0.\r\n\r\nIf I change that, I also have to change `WaitForCertificateCondition` so it will add a lot of duplicate code.', 'comment_created': datetime.datetime(2021, 6, 29, 12, 39, 45, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 660601907, 'comment_body': ""From slack;\r\n\r\n```\r\nI am very concerned with changing any of our public v1 util functions. These functions are used by third parties and we can't break them.\r\nIt could very well be that this doesn't actually break anything, or anyone, but we are changing the meaning of this v1 function.\r\n\r\nI'm not too concerned with needing multiple functions, especially in testing. More verbose it better. CertificateHasConditionWithObservedGeneration can even live in /test\r\n```"", 'comment_created': datetime.datetime(2021, 6, 29, 13, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 660641935, 'comment_body': 'Because the non-ready state will self-resolve. The non-ready state could be not observed/ skipped. Instead, using the ObservedGeneration, we can wait for a Ready state even if the current state is already Ready.', 'comment_created': datetime.datetime(2021, 6, 29, 13, 55, 12, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 660673357, 'comment_body': 'Understood, makes sense. Can you add a comment to the effect that we are waiting for a ready condition where the observed generation is the same generation of the latest spec that we just updated?', 'comment_created': datetime.datetime(2021, 6, 29, 14, 27, 6, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}]","[{'commit_sha': '879108d9e4ec06783057b67c02e8dd146101fb75', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd20a0584ad5b34b8155c6cf34d131f90cc02db7', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f28e53617779a5ababf824d73fbb75b8d958ac6a', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
681795623,add -s and -w flags to the go_binary linkopts,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/release-notes.md
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
Based on https://blog.filippo.io/shrink-your-go-binaries-with-this-one-weird-trick/, adding -s and -w flags as go_binary linkops arguments reduces the binary size.

From the article:

> Interestingly, what gets stripped is only the DWARF tables needed for debuggers, not the annotations needed for stack traces, so our panics are still readable!

The cert-manager kubectl plugin's size shrinks from 68M to 43M.

Kubernetes also applies these flags when compiling their binaries; https://github.com/kubernetes/kubernetes/blob/1861e4756df1818a2d4ca60c869780bf742fff6b/hack/lib/golang.sh#L798-L804.

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
reduce binary sizes by adding ""-s -w"" as ldflags
```
/kind feature",True,4169,https://api.github.com/repos/cert-manager/cert-manager/pulls/4169,https://github.com/cert-manager/cert-manager/pull/4169,closed,5,0,1,2,5,0,7,1,"[{'name': 'size/XS'}, {'name': 'release-note'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/feature'}, {'name': 'dco-signoff: yes'}, {'name': 'ok-to-test'}]",2021-07-01 12:07:01+00:00,2021-07-01 13:29:58+00:00,4977.0,1:22:57,[],"[{'commit_sha': '0fe0a588dc6861815f6f43cf9052fc0e979042bb', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f91159fba52b468a27c1349780b71220ff0f8b6', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
683580707,"Set linkopts ""-w"" instead of ""-w -s"" when building go binaries","<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/release-notes.md
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
In https://github.com/jetstack/cert-manager/pull/4169, the ""-w"" and ""-s"" flags were introduced when building go binaries.
These options remove both the DWARF tables and the symbol tables from the binary. However, removing the symbols table from the binaries causes some issues https://github.com/jetstack/cert-manager/pull/4169#issuecomment-873947733.
@SgtCoDFish noticed that the binary size reduction is mostly thanks to removing the DWARF tables.
Results for the kubectl plugin:
- no flags: 74M
- ""-w"": 62M
- ""-w"", ""-s"": 49M

This PR removes the ""-s"" flag and only keeps the ""-w"" flag for building go binaries.

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
reduce binary sizes by adding ""-w"" as ldflag
```",True,4181,https://api.github.com/repos/cert-manager/cert-manager/pulls/4181,https://github.com/cert-manager/cert-manager/pull/4181,closed,1,1,1,1,7,0,7,1,"[{'name': 'size/XS'}, {'name': 'release-note'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/cleanup'}, {'name': 'dco-signoff: yes'}, {'name': 'ok-to-test'}]",2021-07-05 10:33:28+00:00,2021-07-05 11:47:27+00:00,4439.0,1:13:59,[],"[{'commit_sha': '6343fee944b40e18bfeb81743fabdfb9d3646c6f', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
684336586,"Upgrade all ""hack"" tools to the latest version","**What this PR does / why we need it**:
continuation of #4094
chores:
- remove kustomize (is now part of kubectl)
- upgrade etcd
- upgrade kube-apiserver
- upgrade kubectl
- upgrade staticcheck
- upgrade jq
- upgrade buildozer
- upgrade helm
- upgrade kind
- upgrade to go 1.16.5
- upgrade kube v1.21.2
- merge kube-apiserver implementations

```release-note

```
/kind cleanup",True,4183,https://api.github.com/repos/cert-manager/cert-manager/pulls/4183,https://github.com/cert-manager/cert-manager/pull/4183,closed,215,495,20,3,4,2,8,1,"[{'name': 'size/XL'}, {'name': 'release-note-none'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/cleanup'}, {'name': 'dco-signoff: yes'}, {'name': 'area/testing'}, {'name': 'ok-to-test'}]",2021-07-06 12:32:49+00:00,2021-07-06 16:14:27+00:00,13298.0,3:41:38,"[{'comment_id': 664622745, 'comment_body': 'Question: This custom QPS/Burst config got removed. Should we keep that?', 'comment_created': datetime.datetime(2021, 7, 6, 14, 45, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jakexks', 'type': 'User'}, {'comment_id': 664635156, 'comment_body': 'in `envtest.Environment`, this logic is also present:\r\nhttps://github.com/kubernetes-sigs/controller-runtime/blob/985e819db7af1cd17782ca7ad27644d0ca655054/pkg/envtest/server.go#L265-L269', 'comment_created': datetime.datetime(2021, 7, 6, 14, 58, 45, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}]","[{'commit_sha': 'fa07da9302b6b28995e97d67787a83943e1b32d8', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd92bf321fe14f857f34763583071e068f6c96b3', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2ce115738c43416b13c613828b887f78efc1190', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
684672929,Add basic tests to kubectl cert-manager x install,"**Which issue this PR fixes**

first steps towards fixing #4180

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
```
",True,4184,https://api.github.com/repos/cert-manager/cert-manager/pulls/4184,https://github.com/cert-manager/cert-manager/pull/4184,closed,302,5,5,2,3,5,9,1,"[{'name': 'size/L'}, {'name': 'release-note-none'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/feature'}, {'name': 'dco-signoff: yes'}, {'name': 'area/testing'}, {'name': 'ok-to-test'}, {'name': 'area/deploy'}]",2021-07-06 20:56:30+00:00,2021-07-23 15:16:20+00:00,1448390.0,"16 days, 18:19:50","[{'comment_id': 675500303, 'comment_body': 'question: these fields (`Atomic` and `Wait`) aren\'t documented in `go doc ""helm.sh/helm/v3/pkg/action"" Install` - what\'s the aim here? not saying it\'s wrong or anything, but why are we setting `Atomic` to the value of `Wait`?', 'comment_created': datetime.datetime(2021, 7, 23, 11, 38, 3, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 675507612, 'comment_body': 'suggestion: this gets the job done but it feels a little messy as-is; what do you think to something like this?\r\n\r\n```suggestion\r\n\t\t\t""got unexpected output, diff (ignoring line anchors ^ and $ and regex for creation time):\\n""+\r\n\t\t\t\t""diff: %s\\n\\n""+\r\n\t\t\t\t"" exp: %s\\n\\n""+\r\n\t\t\t\t"" got: %s"",\r\n```', 'comment_created': datetime.datetime(2021, 7, 23, 11, 52, 48, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 675511658, 'comment_body': ""suggestion: it's not well documented in 1.16, but ioutil is deprecated and this function is replaced by `os.CreateTemp(dir, pattern)` (https://go-review.googlesource.com/c/go/+/285378/5/src/io/ioutil/tempfile.go#25 for the change coming in 1.17)"", 'comment_created': datetime.datetime(2021, 7, 23, 12, 0, 58, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 675554921, 'comment_body': 'More info can be found here: https://helm.sh/docs/helm/helm_install/#options\r\nAtomic, means that ""if set, the installation process deletes the installation on failure. The --wait flag will be set automatically if --atomic is used""\r\nI want to enable Atomic, so its less likely to install a half-working cert-manager installation.\r\nFor these tests however, I need to run the cli without waiting; and that is only possible if Atomic is also set to false.', 'comment_created': datetime.datetime(2021, 7, 23, 13, 14, 25, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 675632505, 'comment_body': 'praise: great description, thanks for adding it :+1: ', 'comment_created': datetime.datetime(2021, 7, 23, 15, 1, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}]","[{'commit_sha': '611bac67cf6dc8b58130b9cb43486d4ddda1b387', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ed01359306e89a4fab56d659c04d08796aaaa32', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
685936694,Remove Helm-specific labels & add version label,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/release-notes.md
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

Remove Helm-specific labels & add version label.

Also, replace identical `define ""cert-manager.chart""`, `define ""webhook.chart""`, `define ""cainjector.chart""` with `define ""chartName""`

part of #4188

**Which issue this PR fixes**

fixes #4117

**Special notes for your reviewer**:

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
set correct labels on resources in static manifest yaml files
```
",True,4190,https://api.github.com/repos/cert-manager/cert-manager/pulls/4190,https://github.com/cert-manager/cert-manager/pull/4190,closed,93,352,37,3,7,13,8,2,"[{'name': 'size/L'}, {'name': 'release-note'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/bug'}, {'name': 'dco-signoff: yes'}, {'name': 'ok-to-test'}, {'name': 'area/deploy'}]",2021-07-08 11:39:11+00:00,2021-07-13 17:27:04+00:00,452873.0,"5 days, 5:47:53","[{'comment_id': 667388309, 'comment_body': ""This is the bit I disagree with Tim.\r\nThis implementation detail will now be exposed to our users as a confusing new Helm template variable, \r\nwhich with #4199 will also show up in the chart README file.\r\n\r\nIsn't there some builtin variable in one of the other Helm namespaces that we could use to tell whether the user called `helm template` or `helm upgrade / install`, and only in the latter case would we add the  `helm.sh/chart` annotation.\r\n\r\nWhat is the value of `.Release.Service` if `helm template` is used?\r\n\r\nhttps://v3-1-0.helm.sh/docs/chart_best_practices/labels/"", 'comment_created': datetime.datetime(2021, 7, 10, 21, 41, 55, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 667498619, 'comment_body': ""I'll remove the creator parameter from the `values.yaml` file."", 'comment_created': datetime.datetime(2021, 7, 11, 15, 34, 54, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 668663718, 'comment_body': 'Why did you change this?', 'comment_created': datetime.datetime(2021, 7, 13, 11, 12, 22, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 668669661, 'comment_body': 'This seems to leave an empty comment in the generated YAML:\r\n\r\n```yaml\r\n# Source: cert-manager/templates/templates.out\r\napiVersion: apiextensions.k8s.io/v1\r\nkind: CustomResourceDefinition\r\nmetadata:\r\n  name: certificaterequests.cert-manager.io\r\n  annotations:\r\n    cert-manager.io/inject-ca-from-secret: \'cert-manager/cert-manager-webhook-ca\'\r\n  labels:\r\n    app: \'cert-manager\'\r\n    app.kubernetes.io/name: \'cert-manager\'\r\n    app.kubernetes.io/instance: \'cert-manager\'\r\n    #\r\n    app.kubernetes.io/version: ""v1.4.0-145-043bbd283eb6dd-dirty""\r\n    app.kubernetes.io/managed-by: Helm\r\n    helm.sh/chart: cert-manager-v1.4.0-145-043bbd283eb6dd-dirty\r\n```\r\n\r\nAny way to have it not do that? Or perhaps make it a meaningful comment like `# Generated labels`', 'comment_created': datetime.datetime(2021, 7, 13, 11, 21, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 668684170, 'comment_body': '`# Generated labels` is probably the best solution. The CRDs have to be valid YAML, so all these Helm template structures has to be part of a comment.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 43, 28, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 668715432, 'comment_body': 'It\'s unrelated to this PR, but do you agree that these name labels should always be ""cert-manager""? Ref:\r\n * https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/#labels\r\n * https://v3-1-0.helm.sh/docs/chart_best_practices/labels/#standard-labels\r\n\r\nPlease create a followup issue if you agree.', 'comment_created': datetime.datetime(2021, 7, 13, 12, 29, 29, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 668749533, 'comment_body': 'Why is this necessary in this PR? I can only imagine it being `--set=creator=static`? If it is important, then please add a comment explaining why these MUST be quoted.', 'comment_created': datetime.datetime(2021, 7, 13, 13, 12, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 668752625, 'comment_body': 'I wonder why we used to define a `.chart` variable for each component, if they all had the same value? ', 'comment_created': datetime.datetime(2021, 7, 13, 13, 16, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 668754126, 'comment_body': 'Add a comment here, for the benefit of future maintainers, explaining the intent of this values: static argument ', 'comment_created': datetime.datetime(2021, 7, 13, 13, 17, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 668754672, 'comment_body': 'And here.', 'comment_created': datetime.datetime(2021, 7, 13, 13, 18, 24, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 668874403, 'comment_body': 'Indeed, I think this is a mistake.', 'comment_created': datetime.datetime(2021, 7, 13, 15, 26, 25, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 668877963, 'comment_body': 'Not sure, but https://github.com/jetstack/cert-manager/commit/4586ecf9309c5a73edabecf3caf5ecd206e67ef4 shows that this code was part of another Chart.', 'comment_created': datetime.datetime(2021, 7, 13, 15, 30, 24, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 668878592, 'comment_body': 'Not necessary for this PR; but I think this could help prevent errors.', 'comment_created': datetime.datetime(2021, 7, 13, 15, 31, 9, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}]","[{'commit_sha': '043bbd283eb6dd632b2e214e6fdb9091e0975cee', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06837384584a787063e1f4edd1af994d6981ff49', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7d92681b84f75516d4b474b0f4519e1349636ec', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
687063447,Fix vscode crash,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/release-notes.md
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

On VS Code, when running `./hack/update-deps.sh`, the git menu crashes because of the large amount of changed files.
VS Code tries to keep track of all file changes, the update script introduces a lot of changes and this causes the crash.
An easy fix is to add the vendor folder to the .gitignore file.

**Which issue this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close that issue when PR gets merged)*: fixes #

**Special notes for your reviewer**:

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
```
",True,4200,https://api.github.com/repos/cert-manager/cert-manager/pulls/4200,https://github.com/cert-manager/cert-manager/pull/4200,closed,1,0,1,1,7,0,7,1,"[{'name': 'size/XS'}, {'name': 'release-note-none'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/bug'}, {'name': 'dco-signoff: yes'}, {'name': 'ok-to-test'}]",2021-07-09 22:12:34+00:00,2021-07-10 18:24:44+00:00,72730.0,20:12:10,[],"[{'commit_sha': '492671507f452a39017eca3c5055b5f8c62f5430', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
687222447,add -prune=true & go mod tidy to update-deps.sh,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/release-notes.md
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
This PR adds the `-prune=true` flag to `gazelle update-repos` in `update-deps.sh` (https://github.com/bazelbuild/bazel-gazelle#update-repos).
It also adds an execution of the `go mod tidy` command after running `gazelle update-repos`, so `go.sum` is cleaned up.

This results in a smaller `go.sum` file and a smaller `hack/build/repos.bzl` file.

```release-note
```
/kind cleanup",True,4201,https://api.github.com/repos/cert-manager/cert-manager/pulls/4201,https://github.com/cert-manager/cert-manager/pull/4201,closed,29,617,4,1,3,0,9,1,"[{'name': 'size/XL'}, {'name': 'release-note-none'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/cleanup'}, {'name': 'area/acme'}, {'name': 'dco-signoff: yes'}, {'name': 'ok-to-test'}, {'name': 'area/acme/dns01'}]",2021-07-10 18:38:40+00:00,2021-07-10 21:13:45+00:00,9305.0,2:35:05,[],"[{'commit_sha': 'cb6030f1d97d8a58457612b5db88c17bbb3fd484', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
687224067,Update ginkgo and gomega versions,"**Which issue this PR fixes**

fixes #3999

**Special notes for your reviewer**:

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
```
/kind cleanup",True,4202,https://api.github.com/repos/cert-manager/cert-manager/pulls/4202,https://github.com/cert-manager/cert-manager/pull/4202,closed,106,627,7,2,4,0,10,1,"[{'name': 'size/XL'}, {'name': 'release-note-none'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/cleanup'}, {'name': 'area/acme'}, {'name': 'dco-signoff: yes'}, {'name': 'area/testing'}, {'name': 'ok-to-test'}, {'name': 'area/acme/dns01'}]",2021-07-10 18:53:18+00:00,2021-07-10 21:54:44+00:00,10886.0,3:01:26,[],"[{'commit_sha': 'cb6030f1d97d8a58457612b5db88c17bbb3fd484', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b852735a95944bd2eca197d0d70589a44d5a7c79', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
687857375,Add kubectl 'cert-manager check api' command,"**What this PR does / why we need it**:
Adds the kubectl 'cert-manager check api' command.
This check attempts to perform a dry-run create of a cert-manager *v1alpha2*
Certificate resource in order to verify that CRDs are installed and all the
required webhooks are reachable by the K8S API server.
We use v1alpha2 API to ensure that the API server has also connected to the
cert-manager conversion webhook.

**Release note**:
```release-note
Added the kubectl 'cert-manager check api' command
```
/kind feature",True,4205,https://api.github.com/repos/cert-manager/cert-manager/pulls/4205,https://github.com/cert-manager/cert-manager/pull/4205,closed,664,0,13,3,5,51,7,1,"[{'name': 'release-note'}, {'name': 'size/XL'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/feature'}, {'name': 'dco-signoff: yes'}, {'name': 'ok-to-test'}]",2021-07-12 13:42:44+00:00,2021-07-16 13:43:15+00:00,345631.0,"4 days, 0:00:31","[{'comment_id': 668660271, 'comment_body': '@wallrj I had to add this `metav1.TypeMeta` object here. https://github.com/jetstack/cert-manager/pull/4171 did not have this. Do you know why not providing this `TypeMeta` causes errors in this PR, but not your PR?', 'comment_created': datetime.datetime(2021, 7, 13, 11, 7, 3, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 669628183, 'comment_body': ""This turns out to be a non-trivial problem.\r\nCould be related to https://github.com/kubernetes/kubernetes/issues/80609?\r\nI'll pass the kubectl global `Scheme` var that is used to initiate the `NegotiatedSerializer` to the `New` function, so the `cmapi.AddToScheme(...)` is called on that scheme.\r\nAnd both the `client` and `NegotiatedSerializer` use the same scheme object."", 'comment_created': datetime.datetime(2021, 7, 14, 13, 43, 43, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 669646185, 'comment_body': ""I don't think this needs to be stored as a field."", 'comment_created': datetime.datetime(2021, 7, 14, 14, 3, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 669647263, 'comment_body': ""I suggest combining this with timeout, for fewer command line flags and for a simpler implementation. \r\nLike `kind` does:\r\n\r\n```sh\r\nkind create cluster --help\r\nCreates a local Kubernetes cluster using Docker container 'nodes'\r\n\r\nUsage:\r\n  kind create cluster [flags]\r\n\r\nFlags:\r\n      --config string       path to a kind config file\r\n  -h, --help                help for cluster\r\n      --image string        node docker image to use for booting the cluster\r\n      --kubeconfig string   sets kubeconfig path instead of $KUBECONFIG or $HOME/.kube/config\r\n      --name string         cluster name, overrides KIND_CLUSTER_NAME, config (default kind)\r\n      --retain              retain nodes for debugging when cluster creation fails\r\n      --wait duration       wait for control plane node to be ready (default 0s)\r\n\r\nGlobal Flags:\r\n      --loglevel string   DEPRECATED: see -v instead\r\n  -q, --quiet             silence all stderr output\r\n  -v, --verbosity int32   info log verbosity\r\n\r\n```"", 'comment_created': datetime.datetime(2021, 7, 14, 14, 5, 19, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 669647681, 'comment_body': 'Drop this and combine it with wait.', 'comment_created': datetime.datetime(2021, 7, 14, 14, 5, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 669649500, 'comment_body': 'I suggest combining these two as `--wait=0s` (default) and `--wait=30s` (the wait with timeout behaviour)', 'comment_created': datetime.datetime(2021, 7, 14, 14, 7, 56, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 669650055, 'comment_body': 'The initial blank line shows up in the CLI help\r\n\r\n```\r\nAvailable Commands:\r\n  api         \r\n\t\t\tThis check attempts to perform a dry-run create of a cert-manager *v1alpha2*\r\n\t\t\tCertificate resource in order to verify that CRDs are installed and all the\r\n\t\t\trequired webhooks are reachable by the K8S API server.\r\n\t\t\tWe use v1alpha2 API to ensure that the API server has also connected to the\r\n\t\t\tcert-manager conversion webhook.\r\n\t\t\r\n```', 'comment_created': datetime.datetime(2021, 7, 14, 14, 8, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 669652043, 'comment_body': 'Maybe this branch could be removed and instead always use `PollImmediate` even with a zero Timeout', 'comment_created': datetime.datetime(2021, 7, 14, 14, 10, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 669656457, 'comment_body': '```suggestion\r\n\t\tlog.Print(""The cert-manager API is ready"")\r\n```', 'comment_created': datetime.datetime(2021, 7, 14, 14, 15, 32, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 669657867, 'comment_body': ""I don't think we need to save this pointer to the RESTConfig."", 'comment_created': datetime.datetime(2021, 7, 14, 14, 17, 12, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 669659050, 'comment_body': ""It'd be nice to wrap this error with some human readable context since it'll be printed to the user's console."", 'comment_created': datetime.datetime(2021, 7, 14, 14, 18, 33, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 669661266, 'comment_body': ""I think you need to check whether the error is a cancelled context and return early if so,  because otherwise `ctrl-c` doesn't stop the Polling loop."", 'comment_created': datetime.datetime(2021, 7, 14, 14, 21, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 669663648, 'comment_body': ""This was a hack when I wrote it in the startup probe branch, but I don't think it is necessary here....although perhaps it could play a part if the resulting error message is presented to the user as `Unable to reach Kubernetes API server`...I'm not sure."", 'comment_created': datetime.datetime(2021, 7, 14, 14, 23, 33, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 669674561, 'comment_body': 'Consider whether if this package had some public Error types it\'d be easier to log nice human readable messages from `kubectl cert-manager check api`. E.g.\r\n\r\n```\r\nvar (\r\n    ErrAPIServerUnreachable = NewError(""unable to connect to the Kubernetes API server"")\r\n    ErrCertManagerCRDsNotFound = NewError(""the cert-manager CRDs are not installed on the Kubernetes API server"")\r\n    ErrCertManagerAPIEndpointsNotEstablished = NewError(""the cert-manager API endpoints have not yet been published by the Kubernetes API server"")\r\n    ErrWebhookConnectionFailure = NewError(""the cert-manager webhook server can\'t be reached."")\r\n)\r\n```\r\n\r\n', 'comment_created': datetime.datetime(2021, 7, 14, 14, 35, 13, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 669679221, 'comment_body': 'And I\'ve been thinking about whether it\'d be right to distinguish between ""temporary"" and ""terminal"" errors here and exit the Poll loop early in case of terminal errors...\r\n\r\nDo we want people to be able to start running `kubectl cert-manager check api --wait=5m` before they\'ve:\r\n * Created the cluster\r\n * Installed the cert-manager CRDs\r\n * Installed the RBAC that allows the ""current"" user to interact with those CRds.\r\n\r\nAnd have the command print out clear human readable messages as the user performs each of those tasks?\r\n\r\nOr should we consider some  / all of those as pre-requisites for terminate the command if they fail?', 'comment_created': datetime.datetime(2021, 7, 14, 14, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 669680860, 'comment_body': ""But remember to add an explanatory comment, otherwise I'll come along one day and decide it's redundant and then spend an afternoon trying to work out how I broke it."", 'comment_created': datetime.datetime(2021, 7, 14, 14, 41, 41, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 669681201, 'comment_body': 'This package needs unit tests.', 'comment_created': datetime.datetime(2021, 7, 14, 14, 42, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 669681530, 'comment_body': 'Or integration tests.', 'comment_created': datetime.datetime(2021, 7, 14, 14, 42, 27, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 669681668, 'comment_body': 'Or both.', 'comment_created': datetime.datetime(2021, 7, 14, 14, 42, 36, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670402169, 'comment_body': 'I added some unit tests.', 'comment_created': datetime.datetime(2021, 7, 15, 12, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 670404130, 'comment_body': 'I think it is useful. It makes the tool easier to use I think. I set `unable to connect to the Kubernetes API server` as error message.', 'comment_created': datetime.datetime(2021, 7, 15, 12, 13, 6, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 670405386, 'comment_body': 'I think we should just wait for the api to be ready and make no assumptions about whether the cluster is reachable or the CRDs are installed.', 'comment_created': datetime.datetime(2021, 7, 15, 12, 14, 58, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 670409498, 'comment_body': 'I added `return fmt.Errorf(""Error: %v"", err)`, additionally the error will have had some context added in `cmapichecker.New`', 'comment_created': datetime.datetime(2021, 7, 15, 12, 20, 45, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 670413835, 'comment_body': 'I think it would be quite difficult to also add integration test, all the different scenarios would require a lot of tinkering with the kube-apiserver & webhooks.', 'comment_created': datetime.datetime(2021, 7, 15, 12, 27, 1, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 670502988, 'comment_body': ""If I start the `kubectl cert-manager check api` *before* I start `kind create cluster`, it never re-reads the `~/.kube/config`  when it is updated by `kind`.\r\n\r\n```\r\nkubectl-cert_manager  check api --wait=5m                                                                \r\n...\r\nNot ready: unable to connect to the Kubernetes API server                                                                                        \r\n```\r\n\r\nUntil the `--wait` timeout.\r\n\r\nI think it should exit early if it can't even reach the API server OR it should re-read the kube/config file."", 'comment_created': datetime.datetime(2021, 7, 15, 14, 14, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670518620, 'comment_body': 'This results in a couple of generic error messages printed to stderr:\r\n * `^Ccontext canceled` (ctrl-c)\r\n * `timed out waiting for the condition` (--wait=1s)\r\n\r\nInstead\r\n * ctrl-c should print nothing\r\n\r\n```\r\nNot ready: the cert-manager CRDs are not yet installed on the Kubernetes API server\r\n^C\r\n```\r\n\r\n\r\n * timeout should say ""Timed out after X""\r\n\r\n', 'comment_created': datetime.datetime(2021, 7, 15, 14, 31, 19, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670524461, 'comment_body': 'This would be even more useful if it was pre-compiled, because as it stands, this line triggers a lengthy `bazel build //cmd/ctl` process.\r\n\r\nSee https://storage.googleapis.com/jetstack-logs/pr-logs/pull/jetstack_cert-manager/4205/pull-cert-manager-e2e-v1-21/1415650783336075265/build-log.txt', 'comment_created': datetime.datetime(2021, 7, 15, 14, 37, 48, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670527749, 'comment_body': '```suggestion\r\n\tcmd.Flags().BoolVarP(&o.Verbose, ""verbose"", ""v"", false, ""Print detailed error messages"")\r\n```', 'comment_created': datetime.datetime(2021, 7, 15, 14, 41, 25, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670529937, 'comment_body': '```suggestion\r\n\tcmd.Flags().DurationVar(&o.Wait, ""wait"", 0, ""Wait until the cert-manager API is ready (default 0s)"")\r\n```\r\n\r\nI think the default should be to not wait.\r\n\r\nWhen a user reports on Slack or in an Issue that their webhooks are not working, we can ask them to run `kubectl cert-manager check api` and it will give an instant report about what is wrong with the API.\r\n\r\nIf we really wanted to go to town, the output could include links to the documentation explaining what each of the checks is doing and why it is important....but that\'s just an idea.\r\n\r\nThe `--wait` option is useful for people who installing cert-manager in a CI pipeline using static manifests.', 'comment_created': datetime.datetime(2021, 7, 15, 14, 43, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670530900, 'comment_body': '```suggestion\r\n\t\tShort: ""Check if the cert-manager API is ready"",\r\n```\r\n\r\nMaybe something short and snappy.', 'comment_created': datetime.datetime(2021, 7, 15, 14, 45, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670534886, 'comment_body': ""In the last previous review I think you were using a logging library for these messages, without the timestamps.\r\nI thought that was a nice default, and I'd quite like for there to be a command line option to configure the logged messages to have timestamps.\r\nWhen using this tool in CI, it'd be nice if the output included timestamps so that the developer can see the time taken to reach each stage of API readiness. \r\nWhat do you think?\r\nBut happy to defer that to a future PR."", 'comment_created': datetime.datetime(2021, 7, 15, 14, 49, 20, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670535024, 'comment_body': 'Nice.', 'comment_created': datetime.datetime(2021, 7, 15, 14, 49, 31, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670535363, 'comment_body': ""I'd also quite like a `--quiet` mode where nothing is logged."", 'comment_created': datetime.datetime(2021, 7, 15, 14, 49, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670539554, 'comment_body': 'I spotted a  case which isn\'t covered by these regexps:\r\n\r\n```\r\nNot ready: conversion webhook for cert-manager.io/v1alpha2, Kind=Certificate failed: Post ""https://cert-manager-webhook.cert-manager.svc:443/convert?timeout=30s"": service ""cert-manager-webhook"" not found\r\n```', 'comment_created': datetime.datetime(2021, 7, 15, 14, 54, 12, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670542313, 'comment_body': 'Remove this comment or expand it.', 'comment_created': datetime.datetime(2021, 7, 15, 14, 57, 11, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670547948, 'comment_body': 'I think we should stick to convention and return `error` interface here.\r\nThe underlying error type can then be deduced by ""unwrapping"" it or attempting to cast it to an `APICheckError` (which we\'d take to be a transient error, and any other error type would be taken to be permanent and immediately terminate the command:\r\n * https://blog.golang.org/go1.13-errors#TOC_3.2.\r\n * https://golang.org/src/errors/wrap.go ', 'comment_created': datetime.datetime(2021, 7, 15, 15, 3, 23, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670549995, 'comment_body': 'Are there any other reasons that `Client()` might fail, reasons other than server unreachable?', 'comment_created': datetime.datetime(2021, 7, 15, 15, 5, 44, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670551143, 'comment_body': ""Good idea to list the expected errors here, but please add a sentence above these explaining that these are the errors we're expecting and explaining what happens if we get an error which does not match these."", 'comment_created': datetime.datetime(2021, 7, 15, 15, 7, 1, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670551873, 'comment_body': 'This will result in duplicate error messages printed to the console when the `--verbose` flag is supplied and the error does not match any of the regexps', 'comment_created': datetime.datetime(2021, 7, 15, 15, 7, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670555205, 'comment_body': ""Check the error and fail the test. Don't drop it."", 'comment_created': datetime.datetime(2021, 7, 15, 15, 11, 36, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670562954, 'comment_body': ""Thanks for writing these tests.\r\nBut maybe they could be even more specific if you unit-tested the `translateToSimpleError` function. \r\nThat's only my suggestion.\r\n\r\n\r\nThere are a few lines which are not covered by the tests:\r\n\r\n```\r\ngo test -coverprofile=cover.out ./pkg/util/cmapichecker/... \r\ngo tool cover -html=cover.out\r\n\r\n```\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/978965/125813327-71e0f346-03ac-4766-8b94-f595f38611f9.png)\r\n"", 'comment_created': datetime.datetime(2021, 7, 15, 15, 20, 44, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670570804, 'comment_body': 'I think this error has more to do with the cert-manager webhook `Service` not being installed yet.\r\nEstablished, is when the K8S API server has started responding to e.g.\r\n\r\n * https://127.0.0.1:44273/apis/cert-manager.io/v1alpha2/namespaces/cert-manager-test/certificates\r\n\r\nAs described here: https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/#create-a-customresourcedefinition', 'comment_created': datetime.datetime(2021, 7, 15, 15, 29, 27, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670776737, 'comment_body': ""re-reading requires the` genericclioptions.NewConfigFlags(true)` to be changed to `genericclioptions.NewConfigFlags(false)` in cmd.go; so I'll just exit with an error instead."", 'comment_created': datetime.datetime(2021, 7, 15, 20, 16, 42, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 670795768, 'comment_body': ""I don't think so."", 'comment_created': datetime.datetime(2021, 7, 15, 20, 49, 50, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 670796485, 'comment_body': ""Indeed, I'll fix that"", 'comment_created': datetime.datetime(2021, 7, 15, 20, 51, 3, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 671047578, 'comment_body': 'I added the timestamps in case the `verbose` flag is added.', 'comment_created': datetime.datetime(2021, 7, 16, 8, 2, 14, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 671048576, 'comment_body': 'Adding ""links to the documentation"" is a great idea.\r\nBest way to do this is:\r\n1) get this PR merged\r\n2) update the docs\r\n3) link to those docs', 'comment_created': datetime.datetime(2021, 7, 16, 8, 3, 41, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 671164117, 'comment_body': 'I\'m now logging all errors to stderr and the final ""conclusion"" `Timed out` vs `API is ready` to stdout.\r\n`kubectl cert-manager check api --wait=40s --interval=1s 2>/dev/null` is now the same as your proposed quiet mode.', 'comment_created': datetime.datetime(2021, 7, 16, 11, 14, 1, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 671165160, 'comment_body': 'I changed these errors (see https://github.com/jetstack/cert-manager/pull/4205/files#diff-45bcb7bc419d5bffcc3ba2170dd4d059e82149f789f232f55cbc9700718e685dR39-R42)', 'comment_created': datetime.datetime(2021, 7, 16, 11, 16, 11, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 671170506, 'comment_body': 'Maybe we can fix this issue in another PR?', 'comment_created': datetime.datetime(2021, 7, 16, 11, 26, 40, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 671176911, 'comment_body': ':+1: ', 'comment_created': datetime.datetime(2021, 7, 16, 11, 38, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}]","[{'commit_sha': '5458173739ccfcf5ba6f06a35674932c2e2dcc52', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac7775bdb4d0d11e7b25e24e0c5b1957973a0d6f', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21bc98979e2c21df4da34142248ca741b3ccf3da', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
691542447,Use 'kubectl cert-manager check api' in verify-upgrade.sh,"**What this PR does / why we need it**:
In https://github.com/jetstack/cert-manager/pull/4205 the 'kubectl cert-manager check api' was introduced.
This can be used in `verify-upgrade.sh` and simplify that script.

**Release note**:
```release-note
```
/kind cleanup",True,4218,https://api.github.com/repos/cert-manager/cert-manager/pulls/4218,https://github.com/cert-manager/cert-manager/pull/4218,closed,17,22,1,1,8,0,7,1,"[{'name': 'release-note-none'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/cleanup'}, {'name': 'size/M'}, {'name': 'dco-signoff: yes'}, {'name': 'ok-to-test'}]",2021-07-16 14:40:51+00:00,2021-07-21 19:37:21+00:00,449790.0,"5 days, 4:56:30",[],"[{'commit_sha': '629924c1230f436927c5a6369029c75f732b4316', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
692746322,add 'kubectl cert-manager version',"**What this PR does / why we need it**:
For debugging purposes, determine what cert-manager version we are using.
This logic can be reused for uninstalling/ upgrading in later PRs.

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
add the deployed cert-manager version to 'kubectl cert-manager version' command
```
",True,4226,https://api.github.com/repos/cert-manager/cert-manager/pulls/4226,https://github.com/cert-manager/cert-manager/pull/4226,closed,904,17,15,4,6,26,7,1,"[{'name': 'release-note'}, {'name': 'size/XL'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/feature'}, {'name': 'dco-signoff: yes'}, {'name': 'ok-to-test'}]",2021-07-19 16:16:46+00:00,2021-08-03 11:36:19+00:00,1279173.0,"14 days, 19:19:33","[{'comment_id': 672486982, 'comment_body': 'This package should live in `/cmd/ctl/pkg/check/version/checker` or something similar under `/cmd`.', 'comment_created': datetime.datetime(2021, 7, 19, 17, 19, 22, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 673104176, 'comment_body': 'I moved it', 'comment_created': datetime.datetime(2021, 7, 20, 13, 6, 15, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 674739143, 'comment_body': 'Does it make sense for this command to be part of `kubectl cert-manager version`? I would expect the same behavior as kubectl:\r\n\r\n```\r\nClient Version: ...\r\nServer Version: ...\r\n``` ', 'comment_created': datetime.datetime(2021, 7, 22, 12, 12, 34, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 675132440, 'comment_body': ""Makes sense, although please notice that this version lib is also in the `/pkg` folder.\r\nI think I'll move my server-version detection logic back to that folder too, so its easier to use in other parts of the codebase too."", 'comment_created': datetime.datetime(2021, 7, 22, 20, 15, 57, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 675855743, 'comment_body': 'I merged the implementations', 'comment_created': datetime.datetime(2021, 7, 23, 20, 42, 47, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 678256400, 'comment_body': 'I find the names of these functions confusing.\r\n\r\n`extractVersionFromCr,d` attempts to get the version from labels of the CRDs, else it calls\r\n`extractVersionFromCrdv1beta1`, which actually\r\ngets the service referred to in the Conversion webhook config and gets the version from the labels of that service.\r\n\r\n', 'comment_created': datetime.datetime(2021, 7, 28, 12, 33, 1, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678258797, 'comment_body': 'Is this only used in tests? If so, I think it should be in a `_test.go` file or in a `testing` package somewhere. And probably not a public function.', 'comment_created': datetime.datetime(2021, 7, 28, 12, 36, 11, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678260059, 'comment_body': 'Please add a short paragraph here explaining here how the server version is detected.', 'comment_created': datetime.datetime(2021, 7, 28, 12, 37, 54, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678267936, 'comment_body': 'This is not necessarily a GitVersion. In E2E tests we set APP_VERSION=`data +s` .\r\nIt will give a false sense of certainty. \r\nBetter to simply say version.\r\n\r\nOr I think it\'d be even better to add specific fields for each source of version information. Making it a little clearer the heuristic we\'re using to get the version  Like:\r\n\r\n```yaml\r\nserverVersion:\r\n    api:\r\n        version: 1.3.0\r\n        source: ""crd-labels"" (or ""conversion-webhook-service-labels"")\r\n   controlPlane:\r\n        version: 1.3.1\r\n        source: ""controller-manager-metrics-service""\r\n   minVersion: 1.3.0\r\n```', 'comment_created': datetime.datetime(2021, 7, 28, 12, 48, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679778986, 'comment_body': ""What is the last `sed` component supposed to do in this pipeline?\r\n\r\nIs it supposed to remove v1.0.0-alpha.0 from the list? But why?\r\n\r\nAnd that version does still appear in the list:\r\n\r\n```\r\ncat bazel-bin/pkg/util/versionchecker/git_tags.txt\r\nv1.0.0-alpha.0\r\nv1.0.0-alpha.1\r\nv1.0.0-beta.0\r\nv1.0.0-beta.1\r\nv1.0.1\r\nv1.0.2\r\nv1.0.3\r\nv1.0.4\r\nv1.1.0\r\nv1.1.0-alpha.0\r\nv1.1.0-alpha.1\r\nv1.1.1\r\nv1.2.0\r\nv1.2.0-alpha.0\r\nv1.2.0-alpha.1\r\nv1.2.0-alpha.2\r\nv1.3.0\r\nv1.3.0-alpha.0\r\nv1.3.0-alpha.1\r\nv1.3.0-beta.0\r\nv1.3.1\r\nv1.4.0\r\nv1.4.0-alpha.0\r\nv1.4.0-alpha.1\r\nv1.4.0-beta.0\r\nv1.4.0-beta.1\r\nv1.4.1\r\nv1.5.0-alpha.0\r\n\r\n```\r\n\r\nWhy doesn't v1.0.0 appear in this list?"", 'comment_created': datetime.datetime(2021, 7, 30, 9, 17, 27, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679780189, 'comment_body': 'How about not downloading that version?', 'comment_created': datetime.datetime(2021, 7, 30, 9, 19, 22, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679783899, 'comment_body': ""This will continue if one or more of the required test yamls fails to download, but this will mean that people or CI might end up not running the full test suite.\r\nWouldn't it be better to fail the build if any of these downloads fails?\r\n\r\n```\r\n$ man curl\r\n\r\n      -f, --fail\r\n              (HTTP) Fail silently (no output at all) on server errors. This is mostly done to enable scripts etc to better deal with failed attempts. In normal cases when an HTTP server fails to deliver a document,  it  returns  an\r\n              HTML document stating so (which often also describes why and more). This flag will prevent curl from outputting that and return error 22.\r\n\r\n              This method is not fail-safe and there are occasions where non-successful response codes will slip through, especially when authentication is involved (response codes 401 and 407).\r\n\r\n              See also --fail-with-body.\r\n\r\n```"", 'comment_created': datetime.datetime(2021, 7, 30, 9, 24, 55, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679786105, 'comment_body': 'Document this function explaining the version detection strategy.', 'comment_created': datetime.datetime(2021, 7, 30, 9, 28, 20, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679786529, 'comment_body': ""Wow. I didn't realise it was that simple to embed files in binary. Cool."", 'comment_created': datetime.datetime(2021, 7, 30, 9, 28, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679824041, 'comment_body': 'Expand the long description to explain how the server version is detected. \r\nAlso maybe add some examples.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 32, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679827701, 'comment_body': 'These errors get passed to `cmdutl.CheckErr` which apparently adds its own `error: ` prefix to unrecongnized errors\r\n\r\n```\r\n// CheckErr prints a user friendly error to STDERR and exits with a non-zero\r\n// exit code. Unrecognized errors will be printed with an ""error: "" prefix.\r\n//\r\n// This method is generic to the command in use and may be used by non-Kubectl\r\n// commands.\r\nfunc CheckErr(err error) {\r\n\tcheckErr(err, fatalErrHandler)\r\n}\r\n\r\n```', 'comment_created': datetime.datetime(2021, 7, 30, 10, 39, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679830821, 'comment_body': 'I think these scripts ought to be extracted into `pkg/util/versionchecker/testdata/fetch.sh` so that the tests can be run by non-bazel users.\r\n\r\nhttps://dave.cheney.net/2016/05/10/test-fixtures-in-go\r\n\r\nI also wondered if the it\'d be better to pass multiple URLs to curl rather than launch all these curl sub-processes, which will grow as the number of tags grows.\r\n\r\n\r\n```\r\nman curl\r\n\r\nURL\r\n       The URL syntax is protocol-dependent. You\'ll find a detailed description in RFC 3986.\r\n\r\n       You can specify multiple URLs or parts of URLs by writing part sets within braces and quoting the URL as in:\r\n\r\n         ""http://site.{one,two,three}.com""\r\n\r\n       or you can get sequences of alphanumeric series by using [] as in:\r\n\r\n         ""ftp://ftp.example.com/file[1-100].txt""\r\n\r\n         ""ftp://ftp.example.com/file[001-100].txt""    (with leading zeros)\r\n\r\n         ""ftp://ftp.example.com/file[a-z].txt""\r\n\r\n       Nested sequences are not supported, but you can use several ones next to each other:\r\n\r\n         ""http://example.com/archive[1996-1999]/vol[1-4]/part{a,b,c}.html""\r\n\r\n       You can specify any amount of URLs on the command line. They will be fetched in a sequential manner in the specified order. You can specify command line options and URLs mixed and in any order on the command line.\r\n\r\n       You can specify a step counter for the ranges to get every Nth number or letter:\r\n\r\n         ""http://example.com/file[1-100:10].txt""\r\n\r\n         ""http://example.com/file[a-z:2].txt""\r\n\r\n       When  using  [] or {} sequences when invoked from a command line prompt, you probably have to put the full URL within double quotes to avoid the shell from interfering with it. This also goes for other characters treated spe‐\r\n       cial, like for example \'&\', \'?\' and \'*\'.\r\n\r\n       Provide the IPv6 zone index in the URL with an escaped percentage sign and the interface name. Like in\r\n\r\n         ""http://[fe80::3%25eth0]/""\r\n\r\n       If you specify URL without protocol:// prefix, curl will attempt to guess what protocol you might want. It will then default to HTTP but try other protocols based on often-used host name prefixes. For example, for host  names\r\n       starting with ""ftp."" curl will assume you want to speak FTP.\r\n\r\n       curl will do its best to use what you pass to it as a URL. It is not trying to validate it as a syntactically correct URL by any means but is instead very liberal with what it accepts.\r\n\r\n       curl will attempt to re-use connections for multiple file transfers, so that getting many files from the same server will not do multiple connects / handshakes. This improves speed. Of course this is only done on files speci‐\r\n       fied on a single command line and cannot be used between separate curl invokes.\r\n```', 'comment_created': datetime.datetime(2021, 7, 30, 10, 45, 22, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679831673, 'comment_body': 'But this prevents me running the tests using go test\r\n\r\n```\r\n\xa0go test ./pkg/util/versionchecker/...\r\n# github.com/jetstack/cert-manager/pkg/util/versionchecker\r\npkg/util/versionchecker/versionchecker_test.go:41:12: pattern test_manifests.tar: no matching files found\r\nFAIL\tgithub.com/jetstack/cert-manager/pkg/util/versionchecker [setup failed]\r\nFAIL\r\n\r\n```', 'comment_created': datetime.datetime(2021, 7, 30, 10, 47, 5, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679832919, 'comment_body': 'Cool tests.  Thanks for taking the time to write all this.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 49, 20, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679841927, 'comment_body': ""It selects only the latest versions. Indeed it should instead start from 1.0.0 I'll change that."", 'comment_created': datetime.datetime(2021, 7, 30, 11, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 679857201, 'comment_body': 'The manifest https://github.com/jetstack/cert-manager/releases/download/v1.2.0-alpha.1/cert-manager.yaml contains duplicate definitions for the CRD resources. This causes the test to fail, because it cannot add resources that were added already. Since it is just an error in the manifests, I skipped downloading the manifest instead of figuring out how to handle this edge-case in the tests.', 'comment_created': datetime.datetime(2021, 7, 30, 11, 35, 51, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 679860371, 'comment_body': ""> This will continue if one or more of the required test yamls fails to download, but this will mean that people or CI might end up not running the full test suite.\r\n> Wouldn't it be better to fail the build if any of these downloads fails?\r\n> \r\n> ```\r\n> $ man curl\r\n> \r\n>       -f, --fail\r\n>               (HTTP) Fail silently (no output at all) on server errors. This is mostly done to enable scripts etc to better deal with failed attempts. In normal cases when an HTTP server fails to deliver a document,  it  returns  an\r\n>               HTML document stating so (which often also describes why and more). This flag will prevent curl from outputting that and return error 22.\r\n> \r\n>               This method is not fail-safe and there are occasions where non-successful response codes will slip through, especially when authentication is involved (response codes 401 and 407).\r\n> \r\n>               See also --fail-with-body.\r\n> ```\r\n\r\nThis migth cause problems when a new version tag is added, but the manifest is not yet uploaded to git. @wallrj what do you think?"", 'comment_created': datetime.datetime(2021, 7, 30, 11, 41, 43, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 679879525, 'comment_body': ""The release manifests are uploaded before the tag is created, I think.\r\nThe git tag gets added by GitHub when the draft release created by `cmrel` is finally published.\r\nSo I don't think this will be a problem.\r\n\r\nhttps://github.com/cert-manager/release/blob/2078202305ef9f246bc1997d75befb07dff71e3f/cmd/cmrel/cmd/gcb_publish.go#L291-L343"", 'comment_created': datetime.datetime(2021, 7, 30, 12, 17, 25, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679890560, 'comment_body': 'I think I misread the code. I see now that this does skip downloading that version. Fine.\r\nI was probably thinking that `v1.2.0-alpha.1` could be grepped out of the `ls-remote` output above.\r\nIgnore my comment.', 'comment_created': datetime.datetime(2021, 7, 30, 12, 35, 38, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679893133, 'comment_body': 'I only just understood how that `sed` command works. Had to re-read the man page. \r\nIt filters tag names  starting at `v1.0.0.alpha.0` until the end of the output, right?\r\n\r\nMaybe add that to a comment in the code so that the intent is clear.\r\n\r\n```\r\nAddresses\r\n       Sed  commands can be given with no addresses, in which case the command will be executed for all input lines; with one address, in which case the command will only be executed for input lines which match that address; or with\r\n       two addresses, in which case the command will be executed for all input lines which match the inclusive range of lines starting from the first address and continuing to the second address.  Three things to note about  address\r\n       ranges:  the  syntax  is addr1,addr2 (i.e., the addresses are separated by a comma); the line which addr1 matched will always be accepted, even if addr2 selects an earlier line; and if addr2 is a regexp, it will not be tested\r\n       against the line that addr1 matched.\r\n\r\n```', 'comment_created': datetime.datetime(2021, 7, 30, 12, 39, 33, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 679941490, 'comment_body': 'Not sure what you mean; could you propose better names for these functions?', 'comment_created': datetime.datetime(2021, 7, 30, 13, 51, 27, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}]","[{'commit_sha': '6545064fcf2ee47d586cc4b09c540ebe14acafc0', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa36a5bc87027ec7b6d9104d201ca6fe87c953d1', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '644db10b92f58418f40d2e934408e47728911090', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85710579dd7983c3cd8a567e15f60dd957d94d8c', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
692879994,Set correct exit codes,"**What this PR does / why we need it**:

**Which issue this PR fixes**
fixes #4222

**Special notes for your reviewer**:

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
set correct exit codes on ctrl+c event & process defer calls on error
```
",True,4230,https://api.github.com/repos/cert-manager/cert-manager/pulls/4230,https://github.com/cert-manager/cert-manager/pull/4230,closed,172,93,30,2,3,16,8,1,"[{'name': 'size/L'}, {'name': 'release-note'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/bug'}, {'name': 'area/acme'}, {'name': 'dco-signoff: yes'}, {'name': 'ok-to-test'}]",2021-07-19 19:55:00+00:00,2021-07-23 12:06:09+00:00,317469.0,"3 days, 16:11:09","[{'comment_id': 672978468, 'comment_body': '`SoftExit` seems like the wrong name to be using here... Can we use `GracefullyExit` instead?', 'comment_created': datetime.datetime(2021, 7, 20, 9, 53, 9, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 672979075, 'comment_body': 'Do we really need this as a type? I think just returning a `func()` type is fine.', 'comment_created': datetime.datetime(2021, 7, 20, 9, 54, 3, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 672979643, 'comment_body': 'I think this package should not be in `/pkg` and instead `/cmd`.', 'comment_created': datetime.datetime(2021, 7, 20, 9, 54, 46, tzinfo=datetime.timezone.utc), 'commenter': 'JoshVanL', 'type': 'User'}, {'comment_id': 673030838, 'comment_body': ""I'm not sure what you mean; moving the package from `pkg/util/cmd/` to where?\r\nThe package is currently used for multiple commands (both controller and kubectl plugin); so it cannot be placed under 1 of these `cmd/...` dirs."", 'comment_created': datetime.datetime(2021, 7, 20, 11, 17, 11, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 673031080, 'comment_body': '+1 to moving to `cmd`. Technically a breaking API change but we encourage people not to import cert-manager as a module anyway and the chances of them having used this specific package are surely slim.\r\n\r\nI guess `cmd/util` would be reasonable', 'comment_created': datetime.datetime(2021, 7, 20, 11, 17, 33, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673032628, 'comment_body': 'Ok', 'comment_created': datetime.datetime(2021, 7, 20, 11, 20, 19, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 673104311, 'comment_body': 'renamed it', 'comment_created': datetime.datetime(2021, 7, 20, 13, 6, 27, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 673104436, 'comment_body': 'removed it', 'comment_created': datetime.datetime(2021, 7, 20, 13, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 673303284, 'comment_body': 'nitpick: it seems that basically everywhere we import this new `cmd` package (which now lives under `cmd/util`) we call it `cmdutil`. Naming things is hard and the name ultimately matters very little, but I wonder if it would be better to just name the package `cmdutil` or else pick a different name for the package. ', 'comment_created': datetime.datetime(2021, 7, 20, 16, 57, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673327029, 'comment_body': 'question: given the below:\r\n\r\n```console\r\n$ go doc runtime Goexit\r\npackage runtime // import ""runtime""\r\n\r\nfunc Goexit()\r\n    Goexit terminates the goroutine that calls it. No other goroutine is\r\n    affected. Goexit runs all deferred calls before terminating the goroutine.\r\n    Because Goexit is not a panic, any recover calls in those deferred functions\r\n    will return nil.\r\n\r\n    Calling Goexit from the main goroutine terminates that goroutine without\r\n    func main returning. Since func main has not returned, the program continues\r\n    execution of other goroutines. If all other goroutines exit, the program\r\n    crashes.\r\n```\r\n\r\nSpecifically, it seems we always call `GracefullyExit` in the main goroutine, which would mean that if there\'s another goroutine running we could end up causing a crash, because of this line:\r\n\r\n> Since func main has not returned, the program continues execution of other goroutines. If all other goroutines exit, the program crashes.\r\n\r\nThis seems like an undesirable behaviour to me, and could actually lead to more crashes if there _are_ other goroutines running, or else could lead to the program hanging if one of those goroutines doesn\'t exit.\r\n\r\nIs this an issue? I think at the very least we should be documenting this in the doc comment for GracefullyExit, but I\'m concerned that Goexit might not be what we want here.', 'comment_created': datetime.datetime(2021, 7, 20, 17, 20, 58, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 673365065, 'comment_body': ""Interesting, we probably want all goroutines to exit gracefully.\r\nThis however is probably not taken into account everywhere (each go routine should stop if the context is canceled). Additionally, like you describe, the main thread should then wait for all these goroutines to finish -> this is probably not an easy task, I'll have another look and will let you know if I can find some more details on how to fix this.\r\nThe current solution will call os.Exit(...) when the outer exit defer is called, but it will not exit in case there is no errorcode in the errorcode channel. To prevent crashes, we can call os.Exit(0) if there is no errorcode in the errorcode channel."", 'comment_created': datetime.datetime(2021, 7, 20, 18, 5, 45, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 673414005, 'comment_body': 'Just had a look at how goroutines are being awaited. I have found some examples that are being awaited and some that are not.\r\n- closing a channel: https://github.com/jetstack/cert-manager/blob/c92c8c8f1323172b9959b66820d99f41e4eec0af/pkg/webhook/server/server.go#L233\r\n- WaitGroup: https://github.com/jetstack/cert-manager/blob/c92c8c8f1323172b9959b66820d99f41e4eec0af/cmd/controller/app/controller.go#L126\r\n\r\nI also found some functions that I think are not awaited properly:\r\nhttps://github.com/jetstack/cert-manager/blob/c92c8c8f1323172b9959b66820d99f41e4eec0af/pkg/webhook/authority/authority.go#L212-L222\r\nhttps://github.com/jetstack/cert-manager/blob/c92c8c8f1323172b9959b66820d99f41e4eec0af/cmd/acmesolver/app/app.go#L40-L45\r\nhttps://github.com/jetstack/cert-manager/blob/c92c8c8f1323172b9959b66820d99f41e4eec0af/pkg/webhook/server/tls/dynamic_source.go#L63-L94\r\n\r\nI think we should change these non-awaited goroutines to be awaited, as this behavior is not correct!\r\nThe go main function, on exit, will cause all these goroutines to exit and the cleanup functions to fail.', 'comment_created': datetime.datetime(2021, 7, 20, 19, 24, 25, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 673865745, 'comment_body': 'suggestion: a quick additional comment, as a side-note to the much-more-important discussion about exit codes.\r\n\r\nI\'m not a huge fan of boolean parameters like this, because they don\'t convey any meaning when you see them at a call site:\r\n\r\n```go\r\nSetupExitHandler(true) //  what does true mean?\r\n```\r\nBool parameters are also inflexible if we decide there\'s a third option down the road; we end up having to create a new function or break the API.\r\n\r\nInstead, how about having a new type? It\'s a little more code, but I think it\'s a little more self documenting:\r\n\r\n```go\r\npackage main\r\n\r\nimport ""fmt""\r\n\r\n// ExitBehavior controls how the program should be terminated\r\n// in response to a shutdown signal.\r\ntype ExitBehavior int\r\n\r\nconst (\r\n\t// AlwaysErrCode indicates the exit code of the program should always be nonzero\r\n\t// and should correspond to the numeric value of the signal that was received.\r\n\tAlwaysErrCode ExitBehavior = iota\r\n\r\n\t// GracefulShutdown treats a shutdown signal as a request to exit gracefully, terminating\r\n\t// goroutines and returning an exit code of 0 if there are no errors during shutdown.\r\n\tGracefulShutdown ExitBehavior = iota\r\n)\r\n\r\nfunc SetupExitHandler(behavior ExitBehavior) (<-chan struct{}, func()) {\r\n\t// impl\r\n}\r\n\r\nfunc main() {\r\n\tSetupExitHandler(AlwaysErrCode)\r\n\tSetupExitHandler(GracefulShutdown)\r\n}\r\n```\r\n\r\nWhat do you think?', 'comment_created': datetime.datetime(2021, 7, 21, 10, 47, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 674935141, 'comment_body': 'praise: Nice touch adding the comment on `defer exit()` - good to highlight that :+1: ', 'comment_created': datetime.datetime(2021, 7, 22, 15, 47, 15, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 674936876, 'comment_body': 'nitpick: we\'re obviously in a slightly tricky situation with naming here because we have both `""k8s.io/kubectl/pkg/cmd/util` and `github.com/jetstack/cert-manager/cmd/util`\r\n\r\ncould we maybe rename `cmdutil ""k8s.io/kubectl/pkg/cmd/util""` to `k8scmdutil` just to really be clear about the two different import paths?', 'comment_created': datetime.datetime(2021, 7, 22, 15, 49, 15, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 675371115, 'comment_body': 'see https://github.com/jetstack/cert-manager/pull/4243', 'comment_created': datetime.datetime(2021, 7, 23, 7, 52, 9, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}]","[{'commit_sha': 'd6cd6f457d2c02c2b6efd9db6898011283b8e7f3', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50daf0411896a31cb6d8356cc429fe3c47b74e1a', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
693625116,Add startup api check Job,"**What this PR does / why we need it**:
Add `startupapicheck` Job that waits for the cert-manager api to become ready.
This Job can be awaited for by adding the `--wait` flag to the `helm install` command.

Alternatively, the following kubectl command can be used to wait for the cert-manager api to be ready:
```bash
kubectl wait -n cert-manager --for=condition=complete job/cert-manager-startupapicheck
```

**Which issue this PR fixes**
fixes #4155

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
Added a startup api check Job that waits for the cert-manager api to become ready
```
/kind feature",True,4234,https://api.github.com/repos/cert-manager/cert-manager/pulls/4234,https://github.com/cert-manager/cert-manager/pull/4234,closed,294,4,13,6,7,17,8,1,"[{'name': 'size/L'}, {'name': 'release-note'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/feature'}, {'name': 'dco-signoff: yes'}, {'name': 'ok-to-test'}, {'name': 'area/deploy'}]",2021-07-20 16:36:21+00:00,2021-08-03 16:41:49+00:00,1209928.0,"14 days, 0:05:28","[{'comment_id': 677293354, 'comment_body': 'I created https://github.com/jetstack/cert-manager/issues/4259 to discuss whether the values of these labels should be `cert-manager` rather than the component name.', 'comment_created': datetime.datetime(2021, 7, 27, 9, 46, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 677320112, 'comment_body': 's/cainject/startupapicheck/`?', 'comment_created': datetime.datetime(2021, 7, 27, 10, 25, 51, tzinfo=datetime.timezone.utc), 'commenter': 'munnerz', 'type': 'User'}, {'comment_id': 677320372, 'comment_body': '`controller` is wrong here I think :)', 'comment_created': datetime.datetime(2021, 7, 27, 10, 26, 18, tzinfo=datetime.timezone.utc), 'commenter': 'munnerz', 'type': 'User'}, {'comment_id': 677320524, 'comment_body': 'Does it? I thought we needed to also supply `--wait-for-jobs`.\r\n\r\n```\r\nhelm upgrade --help\r\n...\r\n--wait-for-jobs                if set and --wait enabled, will wait until all Jobs have been completed before marking the release as successful. It will wait for as long as --timeout\r\n```', 'comment_created': datetime.datetime(2021, 7, 27, 10, 26, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 677321458, 'comment_body': ""It won't work unless the service account token is mounted. So why make this optional?"", 'comment_created': datetime.datetime(2021, 7, 27, 10, 28, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 677465400, 'comment_body': 'I agree, we should change it once we change the other components.', 'comment_created': datetime.datetime(2021, 7, 27, 13, 45, 48, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 677467182, 'comment_body': ""Isn't this true for the other components too?"", 'comment_created': datetime.datetime(2021, 7, 27, 13, 47, 46, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 677470394, 'comment_body': ""Indeed, I'll update\r\nFYI ref code: https://github.com/helm/helm/blob/281380f31ccb8eb0c86c84daf8bcbbd2f82dc820/pkg/kube/ready.go#L106-L111"", 'comment_created': datetime.datetime(2021, 7, 27, 13, 51, 18, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 677579829, 'comment_body': 'Will we need to update https://github.com/cert-manager/release to publish the new ctl image?', 'comment_created': datetime.datetime(2021, 7, 27, 15, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 677581131, 'comment_body': 'I see that this comment is copied from other components, but what does ""compatibility with the v0.9 deployment selector"" mean? Any idea?', 'comment_created': datetime.datetime(2021, 7, 27, 15, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 677586918, 'comment_body': ""Yeah, you're right. I should create an Issue for deprecating some of these (seemingly) silly helm configuration options. "", 'comment_created': datetime.datetime(2021, 7, 27, 15, 54, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 677587948, 'comment_body': ""Doesn't this still apply? I suppose it must already have been compiled in order to create the Docker image."", 'comment_created': datetime.datetime(2021, 7, 27, 15, 56, 5, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 677590321, 'comment_body': 'We override the image tag for all these other images.\r\nBut I see that the default image tag is the `.Chart.AppVersion` which has been baked into the chart by virtue of the exported APP_VERSION environment variable above.\r\n\r\nSo for consistency, either `--set startupapicheck.image.tag ...` here, or remove those overrides for all the components.', 'comment_created': datetime.datetime(2021, 7, 27, 15, 58, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 677620810, 'comment_body': 'comment was introduced in https://github.com/jetstack/cert-manager/pull/2285\r\n- Old logic for determining the name: https://github.com/jetstack/cert-manager/pull/2285/files#diff-0155e087680c2cca7df368d18b701ec550eba7b257f163c6cef0951f6df37c3aL2-L7\r\n- New logic: https://github.com/jetstack/cert-manager/pull/2285/files#diff-6947fa6605ade4cf1c0c462b997945e18b10183fc115953087c41d1ca7ea7f8fR103-R105\r\n\r\nSo it probably just means that the value is now set to a fixed value (different from before #2285, where it was generated).\r\nThis was done to not break the deployment selector, because that might cause pods to get orphaned.\r\n\r\nSo, in conclusion I think we can do a cleanup and just replace `app.kubernetes.io/name: {{ include ""cainjector.name"" . }}` with `app.kubernetes.io/name: ""cainjector""` everywhere.', 'comment_created': datetime.datetime(2021, 7, 27, 16, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 677620972, 'comment_body': 'ok, added it', 'comment_created': datetime.datetime(2021, 7, 27, 16, 37, 50, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 678234504, 'comment_body': 'https://github.com/jetstack/cert-manager/issues/4266', 'comment_created': datetime.datetime(2021, 7, 28, 12, 1, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678965172, 'comment_body': 'You probably should make these same changes in the `hack/verify-upgrade.sh` script.\r\n\r\n```\r\n$ make verify_upgrade\r\n...\r\n\r\n$ kubectl get pods -A\r\nNAMESPACE            NAME                                         READY   STATUS         RESTARTS   AGE\r\ncert-manager         cert-manager-5b4b8574f8-gwvkk                1/1     Running        0          42s\r\ncert-manager         cert-manager-cainjector-6c5c7f6c47-2czng     1/1     Running        0          42s\r\ncert-manager         cert-manager-startupapicheck-kvght           0/1     ErrImagePull   0          42s\r\ncert-manager         cert-manager-webhook-76c4f7d5f8-7p5mk        1/1     Running        0          42s\r\n\r\n```', 'comment_created': datetime.datetime(2021, 7, 29, 9, 4, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}]","[{'commit_sha': '411452809cd37fb6db8326b6fba00ad17df5360a', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9092bf8bb661a93e9253cacd5486bf1af43f9215', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f19db0faa4d8bdf6bb1e9c745c3c01065f9b34d', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e73f3bed12a6fc14803d9cf2697cdc8642647903', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0eabaec743502225348cbebc35a913ab29db3142', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06e2ac2d4113dcb7920d7f1a4297e33efdbc7403', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
694736261,"Resolve test flakes ""the object has been modified""","**What this PR does / why we need it**:
This PR should resolve most of the flakes that look similar to ""Operation cannot be fulfilled on certificates.cert-manager.io \""serving-certs\"": the object has been modified; please apply your changes to the latest version and try again"".
This flake is caused by the Issuing=True certificate condition that is removed by the issuing controller.
The best fix is to wait for the Issuing=True certificate condition to get removed when waiting for the certificate to become ready.

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
```
/kind bug",True,4239,https://api.github.com/repos/cert-manager/cert-manager/pulls/4239,https://github.com/cert-manager/cert-manager/pull/4239,closed,61,13,3,2,9,0,8,1,"[{'name': 'release-note-none'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/bug'}, {'name': 'size/M'}, {'name': 'dco-signoff: yes'}, {'name': 'area/testing'}, {'name': 'ok-to-test'}]",2021-07-21 22:00:32+00:00,2021-07-26 13:47:12+00:00,402400.0,"4 days, 15:46:40",[],"[{'commit_sha': 'ac677964c154bd6148ae7b75a4dd2e95c93cff88', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c377e0e0cdffaf7723b81f83be2208b0108831cf', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
695446708,Cleanup goroutine management,"**What this PR does / why we need it**:
In the cert-manager repo, a lot of different methods are utilized for managing go routines.
Some of them do not properly wait for the goroutine to finish before exiting the program.
This might cause some logic to not run or only run sometimes.

This PR also cleans up the ""management of goroutines"", mostly by introducing ""errgroup"".

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
the controllers now exit more cleanly (eg. the Leader Election Lease is freed properly on shutdown)
```
/kind cleanup",True,4243,https://api.github.com/repos/cert-manager/cert-manager/pulls/4243,https://github.com/cert-manager/cert-manager/pull/4243,closed,312,268,13,9,10,47,10,1,"[{'name': 'release-note'}, {'name': 'size/XL'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/cleanup'}, {'name': 'area/acme'}, {'name': 'dco-signoff: yes'}, {'name': 'area/testing'}, {'name': 'ok-to-test'}, {'name': 'area/monitoring'}]",2021-07-22 19:37:17+00:00,2021-07-28 14:36:41+00:00,500364.0,"5 days, 18:59:24","[{'comment_id': 675429904, 'comment_body': 'nitpick: spelling (listener)', 'comment_created': datetime.datetime(2021, 7, 23, 9, 32, 54, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 675429974, 'comment_body': 'nitpick: spelling (listener)', 'comment_created': datetime.datetime(2021, 7, 23, 9, 32, 59, tzinfo=datetime.timezone.utc), 'commenter': 'SgtCoDFish', 'type': 'User'}, {'comment_id': 677312376, 'comment_body': ""I can't think of a way to wait for the informers to finish, do we really need to have a `TODO` here? Could we instead have a comment that says that we have no way to wait for the informers goroutines to stop?"", 'comment_created': datetime.datetime(2021, 7, 27, 10, 13, 54, tzinfo=datetime.timezone.utc), 'commenter': 'maelvls', 'type': 'User'}, {'comment_id': 677313780, 'comment_body': ""Can we remove this `TODO`? I can't think of a use case that would justify to make this configurable. The 1 second here is just the delay before re-launching the worker after it has (mysteriously) stopped."", 'comment_created': datetime.datetime(2021, 7, 27, 10, 15, 55, tzinfo=datetime.timezone.utc), 'commenter': 'maelvls', 'type': 'User'}, {'comment_id': 677318387, 'comment_body': ""I don't think there's a tonne of value in waiting for them to finish personally (given these are top-level `cmd/` packages anyway)"", 'comment_created': datetime.datetime(2021, 7, 27, 10, 22, 53, tzinfo=datetime.timezone.utc), 'commenter': 'munnerz', 'type': 'User'}, {'comment_id': 677318537, 'comment_body': 'Agreed on this.. :)', 'comment_created': datetime.datetime(2021, 7, 27, 10, 23, 8, tzinfo=datetime.timezone.utc), 'commenter': 'munnerz', 'type': 'User'}, {'comment_id': 677320425, 'comment_body': 'After reading this block a second time, I do not understand why we should silently re-launch a mysteriously stopped worker:\r\n\r\n```go\r\nvar wg sync.WaitGroup\r\nfor i := 0; i < workers; i++ {\r\n\twg.Add(1)\r\n\tgo func() {\r\n\t\tdefer wg.Done()\r\n\t\twait.Until(func() {\r\n            c.worker(ctx)\r\n        }, time.Second, stopCh) // 🍍 Silently re-launching the worker.\r\n\t}()\r\n}\r\n```\r\n\r\nWhat is the rationale for silently re-starting? When/why the worker would stop? I would rather see cert-manager entirely stop after a worker returns.', 'comment_created': datetime.datetime(2021, 7, 27, 10, 26, 24, tzinfo=datetime.timezone.utc), 'commenter': 'maelvls', 'type': 'User'}, {'comment_id': 677418364, 'comment_body': ""@maelvls I agree, I'll just remove the retry."", 'comment_created': datetime.datetime(2021, 7, 27, 12, 51, 54, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 677419743, 'comment_body': ""I'd be cautious to remove this without completely understanding why it's there - from what I understand, it is to handle e.g. a panic causing this to exit. That said, I'm not 100% certain and I think this added in probably some of the first commits to the project, which were taken by copying/reading through the k/k codebase at the time"", 'comment_created': datetime.datetime(2021, 7, 27, 12, 53, 27, tzinfo=datetime.timezone.utc), 'commenter': 'munnerz', 'type': 'User'}, {'comment_id': 677421018, 'comment_body': 'As an example: https://github.com/kubernetes/kubernetes/blob/d9d4f0c69cbd3922dce7db924051f96e50524c38/pkg/controller/deployment/deployment_controller.go#L160-L162', 'comment_created': datetime.datetime(2021, 7, 27, 12, 54, 56, tzinfo=datetime.timezone.utc), 'commenter': 'munnerz', 'type': 'User'}, {'comment_id': 677447980, 'comment_body': 'Seems like `wait.Until` will not prevent a crash; https://github.com/kubernetes/apimachinery/blob/f916759cb6b8547418dc7708876ecab5c1961448/pkg/util/wait/wait.go#L154\r\n\r\nhttps://pkg.go.dev/k8s.io/apimachinery@v0.21.0/pkg/util/runtime#HandleCrash\r\n""HandleCrash simply catches a crash and logs an error. Meant to be called via defer. Additional context-specific handlers can be provided, and will be called in case of panic. **HandleCrash actually crashes, after calling the handlers and logging the panic message.**\r\n\r\nE.g., you can provide one or more additional handlers for something like shutting down go routines gracefully.""', 'comment_created': datetime.datetime(2021, 7, 27, 13, 26, 52, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 677457843, 'comment_body': 'FYI: @munnerz I think the line you refer to was added in https://github.com/kubernetes/kubernetes/pull/17398', 'comment_created': datetime.datetime(2021, 7, 27, 13, 37, 38, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 677531243, 'comment_body': 'Also discussed here: https://github.com/jetstack/cert-manager/pull/3919#discussion_r622113559', 'comment_created': datetime.datetime(2021, 7, 27, 14, 53, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 677542663, 'comment_body': ""^ Richard's comment in https://github.com/jetstack/cert-manager/pull/3919#discussion_r622113559 is very good.\r\n"", 'comment_created': datetime.datetime(2021, 7, 27, 15, 5, 59, tzinfo=datetime.timezone.utc), 'commenter': 'maelvls', 'type': 'User'}, {'comment_id': 677749096, 'comment_body': 'Ok, I just removed that comment', 'comment_created': datetime.datetime(2021, 7, 27, 19, 44, 55, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 677749512, 'comment_body': 'I think we agree that it should be deleted, as there is no panic recovery provided by `wait.Until`', 'comment_created': datetime.datetime(2021, 7, 27, 19, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 678103967, 'comment_body': ""Did you consider using sync/errgroup here? I can't tell whether it'd be appropriate."", 'comment_created': datetime.datetime(2021, 7, 28, 8, 48, 44, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678106539, 'comment_body': ""Is this necessary? The goroutine won't exit until `Shutdown` completes, and only then will the completedCh be closed. Tell me if I've misunderstood."", 'comment_created': datetime.datetime(2021, 7, 28, 8, 52, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678107907, 'comment_body': ""The documentation for this field says:\r\n```\r\n\t// LeaderElectionReleaseOnCancel defines if the leader should step down voluntarily\r\n\t// when the Manager ends. This requires the binary to immediately end when the\r\n\t// Manager is stopped, otherwise this setting is unsafe. Setting this significantly\r\n\t// speeds up voluntary leader transitions as the new leader doesn't have to wait\r\n\t// LeaseDuration time first.\r\n```\r\n\r\nCan we be sure that the reconciler workers have all stopped before we release the leader election lock? Does it matter?"", 'comment_created': datetime.datetime(2021, 7, 28, 8, 53, 55, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678111726, 'comment_body': ""```suggestion\r\n\tcase <-gctx.Done(): // Exit early if we are shutting down or if the manager has exited with an error\r\n```\r\n\r\nThis case doesn't seem to have anything to do with the elected channel."", 'comment_created': datetime.datetime(2021, 7, 28, 8, 58, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678113474, 'comment_body': ""Maybe remove this logged error since it's now returned and will be printed to stderr anyway."", 'comment_created': datetime.datetime(2021, 7, 28, 9, 1, 14, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678114039, 'comment_body': 'Same here. Return an annotated error rather than logging it and then printing it to stderr.', 'comment_created': datetime.datetime(2021, 7, 28, 9, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678114548, 'comment_body': 'But add the options information to the returned error if that will be useful for debugging.', 'comment_created': datetime.datetime(2021, 7, 28, 9, 2, 38, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678117119, 'comment_body': 'Same comment as before....is this necessary? Since the goroutine and the errgroup will only be complete when  Shutdown finishes.', 'comment_created': datetime.datetime(2021, 7, 28, 9, 6, 21, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678119722, 'comment_body': 'Ah, wait, I get it. The context passed to Shutdown is a way to skip the graceful shutdown of established connections.\r\nIgnore my comments above.', 'comment_created': datetime.datetime(2021, 7, 28, 9, 9, 48, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678124964, 'comment_body': 'I can\'t see this message when the controller starts. Can you?\r\n\r\nAnd I suggest the following message instead.\r\n\r\n```suggestion\r\n\t\tlog.V(logf.InfoLevel).Info(""starting metrics server"", ""address"", ln.Addr())\r\n```', 'comment_created': datetime.datetime(2021, 7, 28, 9, 16, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678127509, 'comment_body': 'Another error message which will be both logged and printed to stderr on exit.', 'comment_created': datetime.datetime(2021, 7, 28, 9, 20, 12, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678190965, 'comment_body': ""Previously, did all these get started unconditionally? Even on replicas that did not have the leader election lock? It's difficult to interpret the diff."", 'comment_created': datetime.datetime(2021, 7, 28, 10, 51, 36, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678193486, 'comment_body': ""```suggestion\r\n\tcase <-rootCtx.Done(): // Exit early if we are shutting down or if any of the preceding goroutines have exited with failure.\r\n```\r\n\r\nThat makes me think that the errgroup thing isn't quite right....because what we want is for all the goroutines to exit if any of them exit (not just those that exit with an error). So should we consider making them all exit with a error of some kind? Do you know what I mean?"", 'comment_created': datetime.datetime(2021, 7, 28, 10, 55, 32, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678196972, 'comment_body': 'I hate throwing away errors. What errors would `g.Wait()` return here? Should we at least log them? Or add them to a `NewAggregate`\r\n\r\nhttps://github.com/kubernetes/apimachinery/blob/a644435e2c133d990b624858d9c01985d7f59adf/pkg/util/errors/errors.go#L41-L61', 'comment_created': datetime.datetime(2021, 7, 28, 11, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678197575, 'comment_body': 'We should make this a constant or a command line flag? Not now but maybe add a TODO comment / GitHub issue.', 'comment_created': datetime.datetime(2021, 7, 28, 11, 2, 20, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678197987, 'comment_body': 'Duplicate logged error. Consider removing the log line.', 'comment_created': datetime.datetime(2021, 7, 28, 11, 2, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678205446, 'comment_body': ""I quite like the way this used to be. A single function containing all the controller setup code, which would only be run after leader election....but looking at the leaderelection code, it launches this in an unmanaged goroutine....so perhaps that can't allow us to wait for everything to finish before exiting."", 'comment_created': datetime.datetime(2021, 7, 28, 11, 14, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678212854, 'comment_body': ""Could we use an errgroup here too? And this is another case where I think the logic should be that all or none of the workers must be running. ...but then looking at the `worker` code, they never return any errors, only the sync function returns errors and those are already logged because they shouldn't cause the worker to exit....so maybe this is ok afterall. Maybe these things need explaining in a comment above this bit of code, if you agree."", 'comment_created': datetime.datetime(2021, 7, 28, 11, 27, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 678241773, 'comment_body': 'This is a common pattern for http servers (see example https://pkg.go.dev/net/http#Server.Shutdown).\r\n""Shutdown gracefully shuts down the server without interrupting any active connections. Shutdown works by first closing all open listeners, then closing all idle connections, and then waiting indefinitely for connections to return to idle and then shut down. If the provided context expires before the shutdown is complete, Shutdown returns the context\'s error, otherwise it returns any error returned from closing the Server\'s underlying Listener(s).""', 'comment_created': datetime.datetime(2021, 7, 28, 12, 12, 15, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 678242650, 'comment_body': 'I think it is not needed, because there is only 1 goroutine that we are waiting for.', 'comment_created': datetime.datetime(2021, 7, 28, 12, 13, 38, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 678250053, 'comment_body': ""The context cancelation will also shut down all other go routines. So the only situation where this could be a problem is if 1) the goroutine does not end when the context is canceled (this is a bug that should be fixed) or 2) the cleanup procedure (after the context cancelation) performs api-requests that can interfere with a newly started controller.\r\n\r\nI don't think that situation 1 or situation 2 occurs in the codebase."", 'comment_created': datetime.datetime(2021, 7, 28, 12, 24, 21, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 678256503, 'comment_body': 'https://pkg.go.dev/golang.org/x/sync/errgroup#Group.Wait\r\n""Wait blocks until all function calls from the Go method have returned, then returns the first non-nil error (if any) from them.""\r\nThe errgroup will wait for all goroutines to return, not just those that returned an error. But in case an error is returned, the linked context will be canceled. If the context is canceled (either because of an error or a interrupt signal), we want all goroutines to return -> this is something we have to check for ourselves in our goroutine\'s implementation by passing the errgroup context & adding them to all select cases.', 'comment_created': datetime.datetime(2021, 7, 28, 12, 33, 8, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 678256796, 'comment_body': ""I'll add a TODO"", 'comment_created': datetime.datetime(2021, 7, 28, 12, 33, 28, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 678261938, 'comment_body': 'Indeed, OnStartedLeading is run in a separate goroutine. The previous implementation runs half of the setup in the main thread and half of the setup in this OnStartedLeading goroutine. Also if there is no leader election, it would run everything in the main thread. Now I just use OnStartedLeading to signal to the main thread that it can continue with its execution. This is similar to how https://github.com/kubernetes-sigs/controller-runtime/blob/d5fde106f02c76d9011676b97f117cd7d5d087ee/pkg/manager/internal.go#L644-L686 does it.', 'comment_created': datetime.datetime(2021, 7, 28, 12, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 678268309, 'comment_body': 'errgroup is basically WaitGroup + error handling, so because these controllers do only log errors, it should probably not be used here.', 'comment_created': datetime.datetime(2021, 7, 28, 12, 48, 48, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 678270353, 'comment_body': ""Indeed, I'll update"", 'comment_created': datetime.datetime(2021, 7, 28, 12, 51, 31, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 678293613, 'comment_body': 'No, this was done in the OnStartedLeading goroutine, more info: https://github.com/jetstack/cert-manager/pull/4243#discussion_r678261938', 'comment_created': datetime.datetime(2021, 7, 28, 13, 20, 39, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 678296514, 'comment_body': 'Note that g.Wait will also only return the first error that it encountered.', 'comment_created': datetime.datetime(2021, 7, 28, 13, 24, 2, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 678311098, 'comment_body': 'I will aggregate these 2 errors.', 'comment_created': datetime.datetime(2021, 7, 28, 13, 40, 36, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 678322735, 'comment_body': 'I changed  it, `bazel run //cmd/controller:controller -- --kubeconfig ~/.kube/config -v 3` shows that info msg on my machine.', 'comment_created': datetime.datetime(2021, 7, 28, 13, 53, 4, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 678355704, 'comment_body': ""Yeah, but I was thinking of the case where one of the goroutines exits early with `nil`.....for some reason. \r\nPerhaps if I examined the code, I'd see that that can't ever happen, but nevertheless, the expectation is that all the goroutines are running, otherwise cert-manager will not be functioning properly.\r\n\r\nSo *ideally*, we'd use something *like* errgroup, but where the exit of one goroutine (with error or nil) would immediatly cancel the group context so that the other goroutines can also exit cleanly.\r\n\r\nIf you agree with my logic, I don't propose that it should be done in this PR, but perhaps it should be considered for a future PR."", 'comment_created': datetime.datetime(2021, 7, 28, 14, 27, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}]","[{'commit_sha': '81aa09cd882c7de53d6108a1e140938bf419d891', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '769e05766316eae0211f219410114d63476298b5', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f11c44dd15fed6cc2677d57b12258b651a77a93e', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81e216eeba6cd74eab1c842b97dd35bb7a2ef3e1', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '632459c6d9d145b2c42fa1424c0abcdee1b63aa5', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48e9c2bd16549c95de45e5e1733cf3188d7f8b80', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd430113666d16ad396cbd6cb421d32265d444677', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd867fcc44dcb7a9b4345641eccbe4232d4f82dc5', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78d13787e61ca22620e2d276461511fdefa4a20c', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
702354727,Correctly print conditions during tests,"**What this PR does / why we need it**:

**Which issue this PR fixes**
Current the tests output:
```
Expected Certificate serving-certs condition Ready=True but it has: 0
```
Instead the conditions should be printed.

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note

```
/kind bug",True,4295,https://api.github.com/repos/cert-manager/cert-manager/pulls/4295,https://github.com/cert-manager/cert-manager/pull/4295,closed,2,2,1,1,2,0,8,1,"[{'name': 'size/XS'}, {'name': 'release-note-none'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/bug'}, {'name': 'dco-signoff: yes'}, {'name': 'area/testing'}, {'name': 'ok-to-test'}]",2021-08-03 14:55:29+00:00,2021-08-03 17:16:49+00:00,8480.0,2:21:20,[],"[{'commit_sha': 'bfb11d279d29f3b365622b55039205c15de1bd70', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
702480029,Improve certificate condition checking and error logging,"**What this PR does / why we need it**:

In #4234 there were intermittent test failures in the cainjector E2E tests:

https://prow.build-infra.jetstack.net/view/gs/jetstack-logs/pr-logs/pull/jetstack_cert-manager/4234/pull-cert-manager-e2e-v1-21/1422524737686343681
https://prow.build-infra.jetstack.net/view/gs/jetstack-logs/pr-logs/pull/jetstack_cert-manager/4234/pull-cert-manager-e2e-v1-21/1421109702468571136

In #4239, these flakes were partially resolved, although there is still an uncovered edge case where the flakes still persist.
This PR introduces more robust checking for both conditions Ready=true and Issuing not set.
Additionally it improves the logging in case of an error.
The logic for doing this is now aggregated in `test/e2e/framework/helper/certificates.go`.
The certificate functions in `test/e2e/util/util.go` are now not used anymore and deprecation comments have been added.

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
```
/kind flake",True,4298,https://api.github.com/repos/cert-manager/cert-manager/pulls/4298,https://github.com/cert-manager/cert-manager/pull/4298,closed,259,360,15,3,7,23,8,1,"[{'name': 'size/XL'}, {'name': 'release-note-none'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/cleanup'}, {'name': 'dco-signoff: yes'}, {'name': 'area/testing'}, {'name': 'ok-to-test'}]",2021-08-03 17:52:53+00:00,2021-08-05 08:43:39+00:00,139846.0,"1 day, 14:50:46","[{'comment_id': 682501585, 'comment_body': ""This will return an error and stop polling if the named Certificate is not-found, if have understood the PollImediate docs correctly:\r\n\r\n> // PollImmediate tries a condition func until it returns true, an error, or the timeout\r\n> // is reached.\r\n\r\nIs that the intention?\r\n\r\nIt would make more sense to me if this function was `waitForMatchingNamedCertificate(client, name, matchFunc, interval, timeout) (cert, error) {...}` \r\n\r\nAnd it should continue to poll if the Certificate is not-found, but exit if there is any other API error.\r\n\r\nAlternatively, (and this might be over complicating things) the function could be even more generic and take a variadic list of predicate functions which would run on all Certificates in a namespace and which all must return true for the poll loop to exit with the first matching Certificate ...or should it be all matching Certiificates....no I've changed my mind, this is way over complicated."", 'comment_created': datetime.datetime(2021, 8, 4, 10, 44, 12, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 682503559, 'comment_body': 'Why is this printed to stderr rather than logged?\r\nOr even better, why not log this using `t.Log(...`) ?...so that the diagnostic information gets unambiguously associated with the testcase that is underway.', 'comment_created': datetime.datetime(2021, 8, 4, 10, 47, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 682504581, 'comment_body': '```suggestion\r\n\t\t\tfmt.Fprintf(os.Stderr, ""Observed certificate conditions:\\n"")\r\n```\r\n\r\nAnd see previous question about printing to stderr', 'comment_created': datetime.datetime(2021, 8, 4, 10, 48, 47, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 682504851, 'comment_body': '```suggestion\r\n\t\tfmt.Fprintf(os.Stderr, ""CertificateRequest description:\\n"")\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 10, 49, 7, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 682514712, 'comment_body': ""I need some further explanation in the comments for this function and the other `WaitForCertificateReady...` functions explaining the scenarios when I should use the `...Update` variant.\r\n\r\nI'm also confused by this line in the documentation:\r\n\r\n> If the provided cert was in a Ready state already, the function waits for a state transition to have happened.\r\n\r\nIt implies to me that the function will always wait for a new Ready=True with an incremented observedGeneration, but I don't think that's the case.\r\n\r\nWould it be accurate to call this function `WaitForCertManagerToFinishReconcilingThisCertificate` ? That's how I understand it.  E.g.\r\n\r\nTest1 \r\n1. Create certificate\r\n2. WaitForCertManagerToFinishReconcilingThisCertificate\r\n3. Get and Update certificate, safe in the knowledge that we won't encounter an optimistic locking error\r\n4. WaitForCertManagerToFinishReconcilingThisCertificate\r\n5. Poll until cainjector has inject the updated tls.crt into the injectable target resource (safe in the knowledge that cert-manager has updated the Secret contents.\r\n\r\nAnd if that is the use-case, then I don't understand the need for the two variants: `...Ready` and `...ReadyUpdate`"", 'comment_created': datetime.datetime(2021, 8, 4, 11, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 682515517, 'comment_body': ""I suggest we remove all these unused functions. \r\nI don't expect any external projects to be importing packages from `cert-manager/test/...`"", 'comment_created': datetime.datetime(2021, 8, 4, 11, 6, 55, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 682543845, 'comment_body': 'The `f.CRClient.Create(ctx, testCertificate)` function call that might precede the `waitForMatchingNamedCertificate` call will already wait for the certificated to be created. So it would be unexpected if the certificate was not found I think.', 'comment_created': datetime.datetime(2021, 8, 4, 11, 52, 20, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 682544943, 'comment_body': 'I think the PollImmediate should exit if there is an unexpected error. If that is not the case it should continue until there is a timeout.', 'comment_created': datetime.datetime(2021, 8, 4, 11, 53, 59, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 682545776, 'comment_body': ""I'll update that"", 'comment_created': datetime.datetime(2021, 8, 4, 11, 55, 14, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 682546748, 'comment_body': ""> If the provided cert was in a Ready state already, the function waits for a state transition to have happened.\r\n\r\nThis is the reason the function exists, but it does not correctly explain what the function does or how to use it. I'll update the docs.\r\n"", 'comment_created': datetime.datetime(2021, 8, 4, 11, 56, 42, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 682549386, 'comment_body': ""> And if that is the use-case, then I don't understand the need for the two variants: ...Ready and ...ReadyUpdate\r\n\r\nIn all cases, ReadyUpdate can be used instead of Ready. I'll maybe try to refactor that.\r\nNote however that the only difference is that this function additionally filters the conditions based on the certificate generation. So, the certificate might have a condition Ready=True but for an older generation and that will not result in the function returning early."", 'comment_created': datetime.datetime(2021, 8, 4, 12, 0, 58, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 682552687, 'comment_body': 'I just noticed there is also a `WaitForCertificateToExist` function that is used, maybe its possible to combine these two calls?', 'comment_created': datetime.datetime(2021, 8, 4, 12, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 682638866, 'comment_body': 'nit: no need for the `= nil` ', 'comment_created': datetime.datetime(2021, 8, 4, 13, 54, 7, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 682769190, 'comment_body': 'That is much clearer, thanks', 'comment_created': datetime.datetime(2021, 8, 4, 16, 20, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 682769629, 'comment_body': 'This is much clearer too. Avoids repeating the string ""testcert"" everywhere.', 'comment_created': datetime.datetime(2021, 8, 4, 16, 21, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 682773886, 'comment_body': 'This looks wrong. Why wait for a *Certificate* with the name of the *Secret*? And why `foreverTestTimeout` ?', 'comment_created': datetime.datetime(2021, 8, 4, 16, 26, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 682775693, 'comment_body': 'This is neater too. Avoids *Get*ting the Certificate again.', 'comment_created': datetime.datetime(2021, 8, 4, 16, 28, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 682779328, 'comment_body': 'Ah, was that the cause of the intermittent failure? \r\nDid you consider doing the DeepCopy in the `WaitForCertificate...` helper functions, to help avoid this same bug happening elsewhere?', 'comment_created': datetime.datetime(2021, 8, 4, 16, 34, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 682780103, 'comment_body': ""Great. I think it's better to delete these unused functions rather than let them rot while unused. "", 'comment_created': datetime.datetime(2021, 8, 4, 16, 35, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 682794603, 'comment_body': 'This could be related, but I fear that there are multiple errors causing failures.\r\nI would like to keep the `cert = cert.DeepCopy()` visible in the code, so that we can more easily see when DeepCopies are needed.', 'comment_created': datetime.datetime(2021, 8, 4, 16, 54, 50, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 682795358, 'comment_body': 'Indeed, I fixed it', 'comment_created': datetime.datetime(2021, 8, 4, 16, 55, 55, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 682796322, 'comment_body': 'BTW: forever means 60s apparently 🤣 ', 'comment_created': datetime.datetime(2021, 8, 4, 16, 57, 12, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 683232913, 'comment_body': ""Here again, we seem to be using the name of the Secret as the name of the Certificate. \r\n```suggestion\r\n\t\tcert, err := f.Helper().WaitForCertificateToExist(f.Namespace.Name, certificateName, time.Second*60)\r\n```\r\n\r\nI guess it works because both names are the same. \r\n\r\nI can't face another round of code review and E2E tests. Let's just leave it."", 'comment_created': datetime.datetime(2021, 8, 5, 8, 16, 31, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}]","[{'commit_sha': '2d2bde57c0accd4cfd129f1a8b0c915e9d436a10', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bf6bf93bf56e642280b87aa91033c5b774f510e', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66820ed03e3230d7ab75f73814f84460a2ba9d24', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
702515421,Update bazel docker rules & go.mod dependencies,"
```release-note
```
/kind cleanup",True,4299,https://api.github.com/repos/cert-manager/cert-manager/pulls/4299,https://github.com/cert-manager/cert-manager/pull/4299,closed,1070,552,7,2,4,0,8,1,"[{'name': 'release-note-none'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/cleanup'}, {'name': 'size/XXL'}, {'name': 'dco-signoff: yes'}, {'name': 'area/testing'}, {'name': 'ok-to-test'}]",2021-08-03 18:51:00+00:00,2021-08-04 06:19:10+00:00,41290.0,11:28:10,[],"[{'commit_sha': 'f8b2fff845b8c6e54e0aa5b23ad73acac94aba4d', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e89e9a55b08b1ea9a61eb4c340fa96db80a1af6', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
702672574,Cleanup tests,"**What this PR does / why we need it**:
Cleanup integration tests, use the correct context and gracefully shutdown.
Return error if shutdown was not successful.

Fixes flakes similar to:
https://prow.build-infra.jetstack.net/view/gs/jetstack-logs/pr-logs/pull/jetstack_cert-manager/4298/pull-cert-manager-bazel/1422663871339958274

This PR also fixes:
- `run-e2e.sh` flag was not passed correctly
- remove `tiller.go` file
- improved error logging
- set `DomainSuffix` to a correct default value
- add NextPrivateKeySecretName == nil check for certificate to be considered stable
- escape commas in `featureGate`

fixes #4284
fixes #4066

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
```
/kind cleanup",True,4300,https://api.github.com/repos/cert-manager/cert-manager/pulls/4300,https://github.com/cert-manager/cert-manager/pull/4300,closed,168,106,22,6,13,13,8,2,"[{'name': 'size/L'}, {'name': 'release-note-none'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/cleanup'}, {'name': 'dco-signoff: yes'}, {'name': 'area/testing'}, {'name': 'ok-to-test'}]",2021-08-03 22:23:51+00:00,2021-08-07 14:51:46+00:00,318475.0,"3 days, 16:27:55","[{'comment_id': 683786421, 'comment_body': '@jakexks @wallrj these print statements should give some more insights into what causes the ""Expected certificate expiry date to be 2026-08-05 17:22:43 +0100 BST, but got 2026-08-05 16:23:13 +0000 UTC"" error.\r\nI\'m however not able to replicated the issue on my machine. Could someone try this and share the results?', 'comment_created': datetime.datetime(2021, 8, 5, 21, 4, 21, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 684075156, 'comment_body': 'Nice catch. Thanks for fixing this.', 'comment_created': datetime.datetime(2021, 8, 6, 9, 1, 23, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 684076109, 'comment_body': 'Thanks for cleaning up this legacy file.', 'comment_created': datetime.datetime(2021, 8, 6, 9, 2, 48, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 684080408, 'comment_body': ""That'll make it easier to discern the condition logs. Thanks."", 'comment_created': datetime.datetime(2021, 8, 6, 9, 9, 39, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 684134185, 'comment_body': ""The quotes didn't cause a problem for me. What problem did you encounter?"", 'comment_created': datetime.datetime(2021, 8, 6, 10, 35, 50, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 684135672, 'comment_body': 'Was this causing test failures? Under what  circumstances is DomainSuffix empty?', 'comment_created': datetime.datetime(2021, 8, 6, 10, 38, 24, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 684171407, 'comment_body': '`./devel/run-e2e.sh --ginkgo.focus ""basicConstraint""` does not work on my computer, it just ignores the `--ginkgo.focus` flag', 'comment_created': datetime.datetime(2021, 8, 6, 11, 46, 43, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 684173197, 'comment_body': 'This did not cause failures, but the value was empty and thus certificates were created with eg. `dqfdsfs.` as domain (instead of `dqfdsfs.example.com`) So I think it just worked by incident. This bug was introduced in #4276, before that the default was just the IngressController domain name.', 'comment_created': datetime.datetime(2021, 8, 6, 11, 49, 42, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 684283232, 'comment_body': 'Does this make it easier to read? Previously this would have run `kubectl describe certificate` right? In which case it would have included events related to the cert. Will we miss that?\r\n\r\nWould the old `kubectl describe` output have gone to stderr?', 'comment_created': datetime.datetime(2021, 8, 6, 14, 33, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 684284670, 'comment_body': ""Perhaps we can re-use some of the code from https://github.com/jetstack/cert-manager/blob/master/cmd/ctl/pkg/status/certificate/certificate.go here and get even more diagnostic info. If not in this PR, we could do it in a follow up PR if you agree that it'd be useful."", 'comment_created': datetime.datetime(2021, 8, 6, 14, 35, 14, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 684324001, 'comment_body': 'I do it this way, so we are certain the certificate displayed is the certificate that we were working with. Otherwise, it might be an updated version of the certificate.', 'comment_created': datetime.datetime(2021, 8, 6, 15, 29, 35, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 684330090, 'comment_body': 'instead of re-fetching the cert; I just display the current certificate.', 'comment_created': datetime.datetime(2021, 8, 6, 15, 38, 36, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 684330627, 'comment_body': 'I agree, there are possible improvements to be made here.', 'comment_created': datetime.datetime(2021, 8, 6, 15, 39, 27, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}]","[{'commit_sha': 'a569e797765927941d901b08d5630a0f7b3239ee', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef31a2ea08005c4e441ac18d333ad5a9f7f35e8a', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '347cd6c25dc25beb2decc6d9b652b1dc2ff8a177', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cad738b1e05cef07077ed8c726866d6d964541a', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ec405e8231e3a9d216a079320615a6e45a279c6', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abc39053b2bef7b7a1297e0e4b93eac06255992b', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
709659342,Don't wait for hooks in `kubectl cert-manager x install` integration test,"Integration tests are failing with a timeout error due to newly released Helm chart.
The integration test is performed against a fake kubernetes api-server, and the test only checks if the resources are created correctly.
The resources are not used to really deploy cert-manager in the tests, that is why we have to disable the post-install checks.
The newly-added post-install Helm hook in the v1.5 release was not yet disabled in the test; this causes a timeout error.

This PR disables the post-install Helm hook for the integration test.
Also included: use local chart instead of published chart in the integration test -> this should prevent this problem in the future

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
NONE
```
/kind bug",True,4342,https://api.github.com/repos/cert-manager/cert-manager/pulls/4342,https://github.com/cert-manager/cert-manager/pull/4342,closed,71,12,8,1,6,3,8,1,"[{'name': 'release-note-none'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/bug'}, {'name': 'size/M'}, {'name': 'dco-signoff: yes'}, {'name': 'area/testing'}, {'name': 'ok-to-test'}]",2021-08-11 21:25:19+00:00,2021-08-12 08:06:43+00:00,38484.0,10:41:24,"[{'comment_id': 687411401, 'comment_body': ""I found this comment useful, but I also find the new, shorter comment, below, easier to read.\r\nBut what neither comment explains is why we don't also use Atomic=True, in the async install scenario (`--wait=False`).\r\nThat's my question....why don't we always set `Atomic=True`? Please answer that in a comment above the code, for future reference."", 'comment_created': datetime.datetime(2021, 8, 12, 6, 1, 30, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 687413067, 'comment_body': ""And maybe explain **why** we disable hooks if wait is disabled. Is it simply for the sake of getting the tests to pass?  If so, that's fine, but make it clear in the comment.\r\nWhat if we introduce a future hook which performs some post-install editing of the CRDs, for example? Then we'd want the hooks to be run regardless of the `--wait` flag."", 'comment_created': datetime.datetime(2021, 8, 12, 6, 5, 13, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 687415210, 'comment_body': 'Document this function.', 'comment_created': datetime.datetime(2021, 8, 12, 6, 10, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}]","[{'commit_sha': 'e5df60d47e0de609365a7e1b85d079f8f92e6bf6', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
711167259,Don't wait for hooks in kubectl cert-manager x install integration test (part 2),"Integration tests are failing with a timeout error due to newly released Helm chart.
The integration test is performed against a fake kubernetes api-server, and the test only checks if the resources are created correctly.
The resources are not used to really deploy cert-manager in the tests, that is why we have to disable the post-install checks.
The newly-added post-install Helm hook in the v1.5 release was not yet disabled in the test; this causes a timeout error.

This PR disables the post-install Helm hook for the integration test.
Also included: use local chart instead of published chart in the integration test -> this should prevent this problem in the future

part 1: #4342

```release-note
NONE
```

/kind bug",True,4347,https://api.github.com/repos/cert-manager/cert-manager/pulls/4347,https://github.com/cert-manager/cert-manager/pull/4347,closed,13,3,2,1,3,2,8,1,"[{'name': 'release-note-none'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'size/S'}, {'name': 'kind/bug'}, {'name': 'dco-signoff: yes'}, {'name': 'area/testing'}, {'name': 'ok-to-test'}]",2021-08-12 15:57:03+00:00,2021-08-13 07:36:11+00:00,56348.0,15:39:08,"[{'comment_id': 687945325, 'comment_body': 'Ah, that explains it. Thanks.', 'comment_created': datetime.datetime(2021, 8, 12, 17, 27, 13, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 687945474, 'comment_body': 'Thanks.', 'comment_created': datetime.datetime(2021, 8, 12, 17, 27, 25, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}]","[{'commit_sha': 'f4bc2839657a47612eeb493123773b33efcfb14a', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
708151457,Integration tests cleanup,"**What this PR does / why we need it**:
The integration tests are still flaky and are hard to debug. This PR makes the tests use the correct context everywhere. The logic for adding cert-manager CRDs on startup has been updated also: now, no restart of the api-server is required.

BONUS: changed bazel to have build dependencies linked to the right files.
BONUS 2: the test-duration improved significantly by doing this cleanup:
before:
```
//test/integration/acme:go_default_test                                  PASSED in 31.5s
//test/integration/certificates:go_default_test                          PASSED in 149.5s
//test/integration/conversion:go_default_test                            PASSED in 126.1s
//test/integration/ctl:go_default_test                                   PASSED in 156.0s
//test/integration/validation:go_default_test                            PASSED in 153.3s
//test/integration/webhook:go_default_test                               PASSED in 100.0s
```

after:
```
//test/integration/acme:go_default_test                                  PASSED in 19.9s
//test/integration/certificates:go_default_test                          PASSED in 88.0s
//test/integration/conversion:go_default_test                            PASSED in 70.3s
//test/integration/ctl:go_default_test                                   PASSED in 104.5s
//test/integration/validation:go_default_test                            PASSED in 87.5s
//test/integration/webhook:go_default_test                               PASSED in 56.7s
```

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
```
/kind cleanup",True,4335,https://api.github.com/repos/cert-manager/cert-manager/pulls/4335,https://github.com/cert-manager/cert-manager/pull/4335,closed,206,151,21,1,6,26,8,1,"[{'name': 'size/L'}, {'name': 'release-note-none'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/cleanup'}, {'name': 'dco-signoff: yes'}, {'name': 'area/testing'}, {'name': 'ok-to-test'}]",2021-08-11 04:15:57+00:00,2021-08-13 06:56:12+00:00,182415.0,"2 days, 2:40:15","[{'comment_id': 686810725, 'comment_body': 'this dependency was incorrectly placed in `test/integration/framework/BUILD.bazel`', 'comment_created': datetime.datetime(2021, 8, 11, 13, 4, 57, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 686812011, 'comment_body': 'moved these dependencies to the correct files (the files that load these dependencies from the file-system)', 'comment_created': datetime.datetime(2021, 8, 11, 13, 6, 33, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 686812194, 'comment_body': 'this dependency was incorrectly placed in `test/integration/framework/BUILD.bazel`', 'comment_created': datetime.datetime(2021, 8, 11, 13, 6, 48, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 686814673, 'comment_body': 'Instead of using `context.Background()`, `context.TODO()` define a context per test that is bound to a timeout.\r\nThis should help to debug if there is a step in the test that takes too much time (the context will timeout instead of the whole bazel test).', 'comment_created': datetime.datetime(2021, 8, 11, 13, 9, 40, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 686817897, 'comment_body': 'Instead of waiting for a pre-defined amount of time, wait as long the context did not timeout.\r\nThis makes sure that the poll-loop is topped when the context times-out and this reduces the amount of timeout finetuning required.\r\nSometimes, we want to specify a max-timeout for a specific step, this can be done by creating a new child-context.', 'comment_created': datetime.datetime(2021, 8, 11, 13, 13, 31, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 686818954, 'comment_body': 'Here a child-context is created with a specific timeout. This means that the test will fail if the ctx reaches its deadline OR if timeoutCtx reaches its deadline.\r\nThis means that this is a stronger condition than just using ctx instead of timeoutCtx.', 'comment_created': datetime.datetime(2021, 8, 11, 13, 14, 44, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 686820972, 'comment_body': 'In this test we want the `timeoutCtx` to timeout. To make sure the `timeoutCtx` was not canceled due to `ctx` timing-out, this check is added.', 'comment_created': datetime.datetime(2021, 8, 11, 13, 17, 10, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 686822231, 'comment_body': 'Ideally, this logic is replaced with a more elegant solution, there is already a TODO comment above this section.', 'comment_created': datetime.datetime(2021, 8, 11, 13, 18, 35, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 686823273, 'comment_body': 'Wait for the goroutine to finish before ending the function.', 'comment_created': datetime.datetime(2021, 8, 11, 13, 19, 45, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 686824372, 'comment_body': 'By using `ctx`, we can be certain that all pending calls will end when the test stops (eg. timeout).', 'comment_created': datetime.datetime(2021, 8, 11, 13, 20, 58, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 686825598, 'comment_body': '`rootCtx` is shared among multiple tests, that is why it also has a higher timeout duration.', 'comment_created': datetime.datetime(2021, 8, 11, 13, 22, 15, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 686826607, 'comment_body': 'cancel the `pollCtx`, so that the goroutine ends and wait for the routine to end using doneCh.', 'comment_created': datetime.datetime(2021, 8, 11, 13, 23, 26, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 686827468, 'comment_body': 'This `context` is used correctly, there is nothing left TO DO.', 'comment_created': datetime.datetime(2021, 8, 11, 13, 24, 24, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 686828385, 'comment_body': ""Don't stop the kube-api server, instead just install the CRDs and wait for the installed CRDs to be detected."", 'comment_created': datetime.datetime(2021, 8, 11, 13, 25, 26, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 686830526, 'comment_body': 'use the `envtest.CreateCRDs` and `envtest.WaitForCRDs` to install the cert-manager CRDs and ""WaitForCRDs waits for the CRDs to appear in discovery."".\r\ninspired by: https://github.com/kubernetes-sigs/controller-runtime/blob/3c54acbad091d40ef80d467943c5d7126c4b8291/pkg/envtest/crd.go#L97-L113\r\n', 'comment_created': datetime.datetime(2021, 8, 11, 13, 27, 52, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 686927851, 'comment_body': 'Why 50 seconds? Is that chosen to be some number of seconds less than the default test timeout?', 'comment_created': datetime.datetime(2021, 8, 11, 15, 12, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 686932289, 'comment_body': ""Here you use `RequeuePeriod` but below you re-use this context to implement the timeout for a Poll which originally had a timeout set to `RequeuePeriod*3`. If requeueperiod is used here to allow time for at least one requeue to happen, then shouldn't the timeout be set to higher?"", 'comment_created': datetime.datetime(2021, 8, 11, 15, 18, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 686936096, 'comment_body': 'I see. So we expect `timeoutCtx` to timeout, and exit the PollImmediate function, but it might also have exited because the parent ""test-wide"" context has timed out, which would have Cancelled the `timeoutCtx`, so we\'d get a test error here saying ""context cancelled: timeout"" or something like that.', 'comment_created': datetime.datetime(2021, 8, 11, 15, 22, 21, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 686937058, 'comment_body': ""Ah, I see. We don't use `timeoutCtx` here, we just wait for success or for the test-wide timeout."", 'comment_created': datetime.datetime(2021, 8, 11, 15, 23, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 686937427, 'comment_body': 'Why has this timeout doubled?', 'comment_created': datetime.datetime(2021, 8, 11, 15, 23, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 686943315, 'comment_body': 'These both return errors which we should check.', 'comment_created': datetime.datetime(2021, 8, 11, 15, 30, 23, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 687035785, 'comment_body': ""Haven't given much thought about the timeouts honestly. Most important is that the timeouts happen before the bazel go test timeout (so we can clearly see where the timeout error occurred) and after a normal slow run (to prevent flakiness)"", 'comment_created': datetime.datetime(2021, 8, 11, 17, 30, 36, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 687036677, 'comment_body': ""I think that 40 seconds works for most tests, so I'll maybe set all these tests to 40 seconds."", 'comment_created': datetime.datetime(2021, 8, 11, 17, 31, 55, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 687037392, 'comment_body': 'This was the timeout that I found to work for most tests (should not give context timeout errors).\r\n(I just set all timeouts to the same value)\r\nTo prevent flaky tests, I think it is better to set quite a high value for all tests.', 'comment_created': datetime.datetime(2021, 8, 11, 17, 33, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 688285019, 'comment_body': ':+1: ', 'comment_created': datetime.datetime(2021, 8, 13, 6, 51, 11, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 688285673, 'comment_body': ':+1: ', 'comment_created': datetime.datetime(2021, 8, 13, 6, 52, 40, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}]","[{'commit_sha': '91ec4c773ad310f901480be682d1a49c51ef7c40', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
711586329,Upgrade deps (kube v0.22.0),"**What this PR does / why we need it**:
This PR upgrades most of the go deps to the latest version, `update-codegen.sh` was updated with an alternative fix for https://github.com/kubernetes/kubernetes/issues/101567.

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
NONE
```
/kind cleanup",True,4348,https://api.github.com/repos/cert-manager/cert-manager/pulls/4348,https://github.com/cert-manager/cert-manager/pull/4348,closed,4325,1859,12,1,5,7,9,1,"[{'name': 'release-note-none'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/cleanup'}, {'name': 'size/XXL'}, {'name': 'dco-signoff: yes'}, {'name': 'area/testing'}, {'name': 'ok-to-test'}, {'name': 'area/deploy'}]",2021-08-12 20:52:40+00:00,2021-08-13 23:07:12+00:00,94472.0,"1 day, 2:14:32","[{'comment_id': 688289512, 'comment_body': ""I'm interested to know if this speeds up the integration tests. \r\nApparently they use a version of etcd which can run with fsync disabled: https://github.com/kubernetes-sigs/controller-runtime/pull/1630"", 'comment_created': datetime.datetime(2021, 8, 13, 7, 0, 22, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 688342668, 'comment_body': 'Thanks for cleaning this up.', 'comment_created': datetime.datetime(2021, 8, 13, 8, 33, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 688346912, 'comment_body': ""I can't tell how many of these changes are automated. \r\nThis looks like something you've done, but the linked issue is now closed.\r\nSo please write a little more about whether this is a workaround and if so, when will it be possible for us to remove the workaround."", 'comment_created': datetime.datetime(2021, 8, 13, 8, 40, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 688350896, 'comment_body': 'Can you write more about this workaround. I skimmed through the linked issue and the workaround that I see there is to override the module to a forked version:\r\n```\r\nreplace k8s.io/code-generator => github.com/kmodules/code-generator v0.21.1-rc.0.0.20210428003838-7eafae069eb0\r\n\r\nreplace k8s.io/gengo => github.com/kmodules/gengo v0.0.0-20210428002657-a8850da697c2\r\n```\r\n\r\nIf this workaround has advantages then please document how it works and perhaps share it in the linked issue for the benefit of others.', 'comment_created': datetime.datetime(2021, 8, 13, 8, 47, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 688659853, 'comment_body': 'The main advantage is that we can work with the latest version of these deps (without depending on a forked version).', 'comment_created': datetime.datetime(2021, 8, 13, 17, 5, 44, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 688710700, 'comment_body': 'Ok, I moved this to a separate function & added some comments.', 'comment_created': datetime.datetime(2021, 8, 13, 18, 38, 30, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 688713443, 'comment_body': 'This comment should also explain more clearly what this workaround does: https://github.com/jetstack/cert-manager/pull/4348/files#diff-149dfe7bb29d1191dceae3a52915e750e64b7f87257a5fb309c29d3056e2a95dR247-R249', 'comment_created': datetime.datetime(2021, 8, 13, 18, 43, 48, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}]","[{'commit_sha': 'b13eb0483b7447ebc8f72cf135bca5a2b6e1324b', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
712624729,rerun git tags command when //:version changes,"**What this PR does / why we need it**:
The `git_tags` genrule generates other outputs depending on the released git tags for cert-manager.
Bazel however, thinks that this genrule can be cached (no `srcs` attribute & no changes to the rule).
This fix adds the `stamp = 1` option to the `git_tags` genrule, this option makes sure that the rule is re-run when `bazel-out/stable-status.txt` changes (more info: https://docs.bazel.build/versions/main/user-manual.html#workspace_status).

**Which issue this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close that issue when PR gets merged)*: fixes #
fixes https://github.com/jetstack/cert-manager/issues/4350

**Special notes for your reviewer**:

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
NONE
```
/kind bug",True,4363,https://api.github.com/repos/cert-manager/cert-manager/pulls/4363,https://github.com/cert-manager/cert-manager/pull/4363,closed,2,1,1,1,3,0,7,1,"[{'name': 'size/XS'}, {'name': 'release-note-none'}, {'name': 'approved'}, {'name': 'lgtm'}, {'name': 'kind/bug'}, {'name': 'dco-signoff: yes'}, {'name': 'ok-to-test'}]",2021-08-13 21:05:19+00:00,2021-08-13 22:02:12+00:00,3413.0,0:56:53,[],"[{'commit_sha': 'e439749e92000b4c1c9df3ba9219b222b8e95e71', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
685205658,Helm cleanup,"**What this PR does / why we need it**:
1) Currently a very complex bazel workflow is used to generate static yaml files from the helm chart.
This PR drastically simplifies that workflow, by moving most of the logic to the helm file and by removing unnecessary operations.

3) The helm value `components` is added, this value selects what resources should be included in the rendered helm chart.
Now we can do a helm install where the CRDs are in a separate helm deployment (this logic is also used for static yaml generation):
```bash
helm template \
  cert-manager jetstack/cert-manager \
  --set components={crd} \
  --version v1.4.0 | kubectl apply -f -

helm install \
  cert-manager jetstack/cert-manager \
  --namespace cert-manager \
  --create-namespace \
  --version v1.4.0
```
4) The `installCRDs` helm value can be replaced by `components`. I added a deprecation warning notifying the chart user that this option might get removed in later releases.

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
```
/kind cleanup",False,4188,https://api.github.com/repos/cert-manager/cert-manager/pulls/4188,https://github.com/cert-manager/cert-manager/pull/4188,closed,1265,700,59,2,16,0,9,0,"[{'name': 'do-not-merge/release-note-label-needed'}, {'name': 'needs-rebase'}, {'name': 'kind/cleanup'}, {'name': 'size/XXL'}, {'name': 'lifecycle/stale'}, {'name': 'dco-signoff: yes'}, {'name': 'area/testing'}, {'name': 'ok-to-test'}, {'name': 'area/deploy'}]",2021-07-07 13:37:25+00:00,2022-08-04 11:23:42+00:00,33947177.0,"392 days, 21:46:17",[],"[{'commit_sha': '2026972af9a74d62dd0adcce99b9c90e0cf43534', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c8282919fcb299c322f77e136d561b3723fcc36', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
689328109,"Auto generate README.md, Chart.yaml, values.schema.json and values.yaml using tem & helm-jsonschema-gen","**What this PR does / why we need it**:
Alternative implementation for solving #4199.
It uses a tool called [`tem`](https://github.com/amurant/tem), that I created.
`tem` combines the functionality of kubepack.dev/chart-doc-gen and github.com/gomatic/renderizer/v2.
It also allows us to create custom table layouts.
`tem` does not ONLY work for Helm, it can be used for any situation where templating using YAML as input is useful.

UPDATE: as requested by @wallrj, now the `values.schema.json` file is also auto-generated.
This is done using another custom tool https://github.com/amurant/helm-jsonschema-gen, that uses go code and 
translates it to a JSON schema definition.

**Which issue this PR fixes**

fixes #4010
fixes #2891

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
The Helm chart README.md, Chart.yaml, values.yaml, values.schema.json files are now generated automatically
```
",False,4209,https://api.github.com/repos/cert-manager/cert-manager/pulls/4209,https://github.com/cert-manager/cert-manager/pull/4209,closed,821,3,21,1,12,24,8,0,"[{'name': 'release-note'}, {'name': 'size/XL'}, {'name': 'approved'}, {'name': 'do-not-merge/work-in-progress'}, {'name': 'kind/feature'}, {'name': 'dco-signoff: yes'}, {'name': 'ok-to-test'}, {'name': 'area/deploy'}]",2021-07-13 19:03:52+00:00,2023-02-14 09:42:18+00:00,50164706.0,"580 days, 14:38:26","[{'comment_id': 670607233, 'comment_body': ""I honestly can't decipher this. Why can't `tem` have a function called `TableOfContentsMarkdown` which does all this?"", 'comment_created': datetime.datetime(2021, 7, 15, 16, 9, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670608040, 'comment_body': ':+1: ', 'comment_created': datetime.datetime(2021, 7, 15, 16, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 670614596, 'comment_body': ""I started wondering if it'd be niced to parse the comments as Markdown and then the example could be in a fenced code block labelled:\r\n ` ```example `\r\n```\r\nstrategy:\r\n   type: RollingUpdate\r\n   rollingUpdate:\r\n     maxSurge: 0\r\n     maxUnavailable: 1\r\n```\r\n` ``` `"", 'comment_created': datetime.datetime(2021, 7, 15, 16, 16, 25, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 671179173, 'comment_body': 'It can; I just think that it would cause a lot of upstream change requests. Now, all the logic is implemented in the template (identical to how a helm template would solve this). If a change in the comment > markdown logic is required, it can be done directly by updating the template file.', 'comment_created': datetime.datetime(2021, 7, 16, 11, 42, 55, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 671180993, 'comment_body': 'The main problem is that a markdown table can\'t easily contain a code snippet. You can\'t just do\r\n\\`\\`\\`yaml\r\nstrategy:\r\n   type: RollingUpdate\r\n\\`\\`\\`\r\ninside a table.\r\nInstead, it has to be formatted as <pre lang=\\""yaml\\"">strategy:\\&NewLine;   type: RollingUpdate\\<\\/pre> that is also the reason for the complex logic here: https://github.com/jetstack/cert-manager/pull/4209#discussion_r670607233', 'comment_created': datetime.datetime(2021, 7, 16, 11, 46, 31, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 679787272, 'comment_body': 'In the latest version, I removed the ""example"" parsing logic; the json schema should more clearly indicate the structure + this caused the table to become even larger.\r\nMaybe, this can be re-added, but that will not be part of this PR.', 'comment_created': datetime.datetime(2021, 7, 30, 9, 30, 5, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 704481477, 'comment_body': 'Include the new values.schema.json file in the final Helm chart archive.', 'comment_created': datetime.datetime(2021, 9, 8, 14, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 706252066, 'comment_body': ""@inteon I altered this so that it generates a table which is more similar to the existing table.\r\n * Dropped the `type` column\r\n * Dropped the `--set` / `--set-string` prefix \r\n\r\n\r\nAnd that allowed me to more easily compare the current documentation with the new documentation\r\n\r\n\r\n```sh\r\n# Compare the README value names in master with those in this branch\r\n$ diff --ignore-all-space --color -u \\\r\n  <(git show origin/master:deploy/charts/cert-manager/README.template.md | awk -F '|' '/^\\|/{print $2}' | sort) \\\r\n  <(awk -F '|' '/^\\|/ {print $2}' ./deploy/charts/cert-manager/README.md | sort)\r\n```\r\n\r\n```diff\r\n--- /dev/fd/63\t2021-09-10 15:37:19.133130262 +0100\r\n+++ /dev/fd/62\t2021-09-10 15:37:19.134130278 +0100\r\n@@ -5,7 +5,10 @@\r\n  `cainjector.deploymentAnnotations`\r\n  `cainjector.enabled`\r\n  `cainjector.extraArgs`\r\n+ `cainjector.extraEnv`\r\n+ `cainjector.image.digest`\r\n  `cainjector.image.pullPolicy`\r\n+ `cainjector.image.registry`\r\n  `cainjector.image.repository`\r\n  `cainjector.image.tag`\r\n  `cainjector.nodeSelector`\r\n@@ -21,6 +24,7 @@\r\n  `cainjector.tolerations`\r\n  `clusterResourceNamespace`\r\n  `containerSecurityContext`\r\n+ `creator`\r\n  `deploymentAnnotations`\r\n  `extraArgs`\r\n  `extraEnv`\r\n@@ -30,13 +34,16 @@\r\n  `global.leaderElection.namespace`\r\n  `global.leaderElection.renewDeadline`\r\n  `global.leaderElection.retryPeriod`\r\n+ `global.logLevel`\r\n  `global.podSecurityPolicy.enabled`\r\n  `global.podSecurityPolicy.useAppArmor`\r\n  `global.priorityClassName`\r\n  `global.rbac.create`\r\n  `http_proxy`\r\n  `https_proxy`\r\n+ `image.digest`\r\n  `image.pullPolicy`\r\n+ `image.registry`\r\n  `image.repository`\r\n  `image.tag`\r\n  `ingressShim.defaultIssuerGroup`\r\n@@ -62,7 +69,6 @@\r\n  `replicaCount`\r\n  `resources`\r\n  `securityContext`\r\n- `securityContext.enabled`\r\n  `serviceAccount.annotations`\r\n  `serviceAccount.automountServiceAccountToken`\r\n  `serviceAccount.create`\r\n@@ -70,15 +76,20 @@\r\n  `serviceLabels`\r\n  `startupapicheck.affinity`\r\n  `startupapicheck.backoffLimit`\r\n+ `startupapicheck.containerSecurityContext`\r\n  `startupapicheck.enabled`\r\n  `startupapicheck.extraArgs`\r\n+ `startupapicheck.extraEnv`\r\n+ `startupapicheck.image.digest`\r\n  `startupapicheck.image.pullPolicy`\r\n+ `startupapicheck.image.registry`\r\n  `startupapicheck.image.repository`\r\n  `startupapicheck.image.tag`\r\n  `startupapicheck.jobAnnotations`\r\n  `startupapicheck.nodeSelector`\r\n  `startupapicheck.podAnnotations`\r\n  `startupapicheck.podLabels`\r\n+ `startupapicheck.rbac.annotations`\r\n  `startupapicheck.resources`\r\n  `startupapicheck.securityContext`\r\n  `startupapicheck.serviceAccount.annotations`\r\n@@ -94,8 +105,11 @@\r\n  `webhook.containerSecurityContext`\r\n  `webhook.deploymentAnnotations`\r\n  `webhook.extraArgs`\r\n+ `webhook.extraEnv`\r\n  `webhook.hostNetwork`\r\n+ `webhook.image.digest`\r\n  `webhook.image.pullPolicy`\r\n+ `webhook.image.registry`\r\n  `webhook.image.repository`\r\n  `webhook.image.tag`\r\n  `webhook.livenessProbe.failureThreshold`\r\n```\r\n\r\n\r\nYou can see that these are mostly additions of fields which we'd previously forgotten to document.\r\nBut there's one missing field which I suggest we remove anyway in another PR:\r\n * https://github.com/jetstack/cert-manager/issues/4445\r\n"", 'comment_created': datetime.datetime(2021, 9, 10, 14, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 706255689, 'comment_body': ""It'd be nice to add a comment at the top of this file explaining that it's auto-generated by `github.com/amurant/helm-jsonschema-gen/cmd/helm-jsonschema-gen` and explaining that it is consumed by `tem`"", 'comment_created': datetime.datetime(2021, 9, 10, 15, 2, 39, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 706256369, 'comment_body': ""Similarly, it'd be nice to add a header comment exaplaining what autogenerates this file and what consumes it."", 'comment_created': datetime.datetime(2021, 9, 10, 15, 3, 39, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 706259922, 'comment_body': 'This file too would benefit from a header comment explaining that it is auto-generated by xxx \r\n\r\n*AND* retain the comment that explains that it contains the default values for the Helm chart.\r\n\r\nI checked this file by using `yq` to sort all the keys in this and the original and then doing a diff. \r\nI modified the `values/` source files so that there are no unnecessary empty slices (`[]`) or maps `{}` in here.\r\n\r\n```sh\r\ndiff --color --ignore-all-space -u \\\r\n  <(curl -sSL https://raw.githubusercontent.com/jetstack/cert-manager/master/deploy/charts/cert-manager/values.yaml | bazel run //hack/bin:yq -- eval --tojson \'sortKeys(..)\' - ) \\\r\n  <(bazel run //hack/bin:yq -- eval --tojson \'sortKeys(..)\' deploy/charts/cert-manager/values.yaml)\r\n```\r\n\r\n\r\n```diff\r\n--- /dev/fd/63\t2021-09-10 16:06:30.385954195 +0100\r\n+++ /dev/fd/62\t2021-09-10 16:06:30.386954211 +0100\r\n@@ -1,35 +1,20 @@\r\n {\r\n-  ""affinity"": {},\r\n   ""cainjector"": {\r\n-    ""affinity"": {},\r\n-    ""containerSecurityContext"": {},\r\n     ""enabled"": true,\r\n-    ""extraArgs"": [],\r\n     ""image"": {\r\n       ""pullPolicy"": ""IfNotPresent"",\r\n       ""repository"": ""quay.io/jetstack/cert-manager-cainjector""\r\n     },\r\n-    ""nodeSelector"": {},\r\n-    ""podLabels"": {},\r\n     ""replicaCount"": 1,\r\n-    ""resources"": {},\r\n     ""securityContext"": {\r\n       ""runAsNonRoot"": true\r\n     },\r\n     ""serviceAccount"": {\r\n       ""automountServiceAccountToken"": true,\r\n       ""create"": true\r\n+    }\r\n     },\r\n-    ""strategy"": {},\r\n-    ""tolerations"": []\r\n-  },\r\n-  ""clusterResourceNamespace"": """",\r\n-  ""containerSecurityContext"": {},\r\n-  ""extraArgs"": [],\r\n-  ""extraEnv"": [],\r\n-  ""featureGates"": """",\r\n   ""global"": {\r\n-    ""imagePullSecrets"": [],\r\n     ""leaderElection"": {\r\n       ""namespace"": ""kube-system""\r\n     },\r\n@@ -38,7 +23,6 @@\r\n       ""enabled"": false,\r\n       ""useAppArmor"": true\r\n     },\r\n-    ""priorityClassName"": """",\r\n     ""rbac"": {\r\n       ""create"": true\r\n     }\r\n@@ -49,14 +33,11 @@\r\n   },\r\n   ""ingressShim"": {},\r\n   ""installCRDs"": false,\r\n-  ""nodeSelector"": {},\r\n-  ""podLabels"": {},\r\n   ""prometheus"": {\r\n     ""enabled"": true,\r\n     ""servicemonitor"": {\r\n       ""enabled"": false,\r\n       ""interval"": ""60s"",\r\n-      ""labels"": {},\r\n       ""path"": ""/metrics"",\r\n       ""prometheusInstance"": ""default"",\r\n       ""scrapeTimeout"": ""30s"",\r\n@@ -64,7 +45,6 @@\r\n     }\r\n   },\r\n   ""replicaCount"": 1,\r\n-  ""resources"": {},\r\n   ""securityContext"": {\r\n     ""runAsNonRoot"": true\r\n   },\r\n@@ -73,10 +53,8 @@\r\n     ""create"": true\r\n   },\r\n   ""startupapicheck"": {\r\n-    ""affinity"": {},\r\n     ""backoffLimit"": 4,\r\n     ""enabled"": true,\r\n-    ""extraArgs"": [],\r\n     ""image"": {\r\n       ""pullPolicy"": ""IfNotPresent"",\r\n       ""repository"": ""quay.io/jetstack/cert-manager-ctl""\r\n@@ -86,8 +64,6 @@\r\n       ""helm.sh/hook-delete-policy"": ""before-hook-creation,hook-succeeded"",\r\n       ""helm.sh/hook-weight"": ""1""\r\n     },\r\n-    ""nodeSelector"": {},\r\n-    ""podLabels"": {},\r\n     ""rbac"": {\r\n       ""annotations"": {\r\n         ""helm.sh/hook"": ""post-install"",\r\n@@ -95,7 +71,6 @@\r\n         ""helm.sh/hook-weight"": ""-5""\r\n       }\r\n     },\r\n-    ""resources"": {},\r\n     ""securityContext"": {\r\n       ""runAsNonRoot"": true\r\n     },\r\n@@ -108,17 +83,9 @@\r\n       ""automountServiceAccountToken"": true,\r\n       ""create"": true\r\n     },\r\n-    ""timeout"": ""1m"",\r\n-    ""tolerations"": []\r\n+    ""timeout"": ""1m""\r\n   },\r\n-  ""strategy"": {},\r\n-  ""tolerations"": [],\r\n-  ""volumeMounts"": [],\r\n-  ""volumes"": [],\r\n   ""webhook"": {\r\n-    ""affinity"": {},\r\n-    ""containerSecurityContext"": {},\r\n-    ""extraArgs"": [],\r\n     ""hostNetwork"": false,\r\n     ""image"": {\r\n       ""pullPolicy"": ""IfNotPresent"",\r\n@@ -131,8 +98,6 @@\r\n       ""successThreshold"": 1,\r\n       ""timeoutSeconds"": 1\r\n     },\r\n-    ""nodeSelector"": {},\r\n-    ""podLabels"": {},\r\n     ""readinessProbe"": {\r\n       ""failureThreshold"": 3,\r\n       ""initialDelaySeconds"": 5,\r\n@@ -141,7 +106,6 @@\r\n       ""timeoutSeconds"": 1\r\n     },\r\n     ""replicaCount"": 1,\r\n-    ""resources"": {},\r\n     ""securePort"": 10250,\r\n     ""securityContext"": {\r\n       ""runAsNonRoot"": true\r\n@@ -150,11 +114,8 @@\r\n       ""automountServiceAccountToken"": true,\r\n       ""create"": true\r\n     },\r\n-    ""serviceLabels"": {},\r\n     ""serviceType"": ""ClusterIP"",\r\n-    ""strategy"": {},\r\n     ""timeoutSeconds"": 10,\r\n-    ""tolerations"": [],\r\n     ""url"": {}\r\n   }\r\n }\r\n\r\n```\r\n', 'comment_created': datetime.datetime(2021, 9, 10, 15, 8, 19, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 706263125, 'comment_body': ""This documentation is necessarily generic because it is embedded in `CAInjector,Webhook,Global` etc.\r\nBut it might be seen as a backward step, because the original documentation strings were context specific. e.g\r\n\r\n> Number of cert-manager *cainjector* replicas\r\n\r\nBut I think think that's fine since the documentation has the full path of the variable in a previous column anyway."", 'comment_created': datetime.datetime(2021, 9, 10, 15, 12, 23, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 706264722, 'comment_body': 'Nice to have these enumerated value checks.', 'comment_created': datetime.datetime(2021, 9, 10, 15, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 706268410, 'comment_body': ""This hasn't been used anywhere.\r\nAlthough I see that the templates do refer to it\r\n\r\n```sh\r\ngit grep .strategy deploy/charts/cert-manager/\r\ndeploy/charts/cert-manager/templates/cainjector-deployment.yaml:  {{- with .Values.cainjector.strategy }}\r\ndeploy/charts/cert-manager/templates/cainjector-deployment.yaml:  strategy:\r\ndeploy/charts/cert-manager/templates/deployment.yaml:  {{- with .Values.strategy }}\r\ndeploy/charts/cert-manager/templates/deployment.yaml:  strategy:\r\ndeploy/charts/cert-manager/templates/webhook-deployment.yaml:  {{- with .Values.webhook.strategy }}\r\ndeploy/charts/cert-manager/templates/webhook-deployment.yaml:  strategy:\r\n\r\n```\r\n\r\nBut these values are not documented in the current README.\r\n"", 'comment_created': datetime.datetime(2021, 9, 10, 15, 19, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 706269349, 'comment_body': 'Maybe add a comment explaining the changes in your fork and linking to a PR where you attempt to get these accepted upstream.', 'comment_created': datetime.datetime(2021, 9, 10, 15, 20, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 706270069, 'comment_body': ""Cool project @inteon I haven't gone and reviewed the code yet, but perhaps you should share this with the Helm maintainers."", 'comment_created': datetime.datetime(2021, 9, 10, 15, 21, 39, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 706270659, 'comment_body': 'This was missing from the original PR, so I added it.', 'comment_created': datetime.datetime(2021, 9, 10, 15, 22, 23, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 706279327, 'comment_body': 'Remove this.\r\n\r\n\r\n```sh\r\nbazel build //deploy/charts/cert-manager:cert-manager\r\nINFO: Analyzed target //deploy/charts/cert-manager:cert-manager (28 packages loaded, 232 targets configured).\r\nINFO: Found 1 target...\r\nINFO: From Executing genrule //deploy/charts/cert-manager:chart_files:\r\nUpdating templated helm README.md & Chart.yaml...\r\n{\r\n  ""repository"": {\r\n    ""name"": ""jetstack"",\r\n    ""url"": ""https://charts.jetstack.io""\r\n  },\r\n  ""chart"": {\r\n    ""name"": ""cert-manager"",\r\n    ""version"": ""v1.5.0-beta.0.81-c14c086566be45"",\r\n    ""isPrerelease"": ""true""\r\n  },\r\n  ""release"": {\r\n    ""name"": ""my-cert-manager"",\r\n    ""namespace"": ""cert-manager""\r\n  }\r\n}\r\nTarget //deploy/charts/cert-manager:cert-manager up-to-date:\r\n  bazel-bin/deploy/charts/cert-manager/cert-manager.tgz\r\nINFO: Elapsed time: 9.475s, Critical Path: 1.14s\r\nINFO: 15 processes: 3 internal, 12 linux-sandbox.\r\nINFO: Build completed successfully, 15 total actions\r\n\r\n```\r\n', 'comment_created': datetime.datetime(2021, 9, 10, 15, 34, 13, tzinfo=datetime.timezone.utc), 'commenter': 'wallrj', 'type': 'User'}, {'comment_id': 706378700, 'comment_body': 'In json its not that easy to add a comment; you would have to add an attribute in the json struct. https://stackoverflow.com/a/244858', 'comment_created': datetime.datetime(2021, 9, 10, 18, 12, 23, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 706380340, 'comment_body': 'If this becomes a hard requirement, we could move the comments to the `defaultValues` struct in `main.go`.', 'comment_created': datetime.datetime(2021, 9, 10, 18, 15, 28, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 706397410, 'comment_body': '@wallrj removing these empty attributes results in a different render (when installing/ running helm template)\r\nexample:\r\n```diff\r\n# Source: cert-manager/templates/webhook-deployment.yaml\r\napiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  name: cert-manager-webhook\r\n\r\n...\r\n\r\n                fieldPath: metadata.namespace\r\n          resources:\r\n-           {}\r\n+           null\r\n```\r\n\r\nI think this is because `{{ toYaml .Values.resources | indent 12 }}` will print a different value for not-found values vs. empty values.', 'comment_created': datetime.datetime(2021, 9, 10, 18, 45, 55, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 706398694, 'comment_body': 'I added the value to `deployment.go`.', 'comment_created': datetime.datetime(2021, 9, 10, 18, 48, 12, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 707510386, 'comment_body': 'upstreamed already', 'comment_created': datetime.datetime(2021, 9, 13, 16, 46, 17, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}, {'comment_id': 736864694, 'comment_body': 'fixed in: https://github.com/jetstack/cert-manager/pull/4556', 'comment_created': datetime.datetime(2021, 10, 26, 19, 44, 37, tzinfo=datetime.timezone.utc), 'commenter': 'inteon', 'type': 'User'}]","[{'commit_sha': 'd00da3cae379388a6abf3667f7e31a8c8c8273b7', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14
691990980,"add ""components"" Helm value","**What this PR does / why we need it**:
The helm value `components` is added, this value selects what resources should be included in the rendered helm chart.
Now, we can render the CRDs with Helm too, this allows to install cert-manager in a custom namespace or use a custom release name. (Using the static CRDs as described here: https://cert-manager.io/docs/installation/helm/ will result in a failed install in both of those cases.)
```bash
$ helm template \
  cert-manager jetstack/cert-manager \
  --set components={crd} \
  --version v1.4.0 | kubectl apply -f -

$ helm install \
  cert-manager jetstack/cert-manager \
  --namespace cert-manager \
  --create-namespace \
  --version v1.4.0
```

The `installCRDs` helm value can be replaced by `components`. I added a deprecation warning notifying the chart user that this option might get removed in later releases.

+ this can be used when generating static yaml manifests (bazel)
+ this can be used for automated testing (test for different install scenarios)

**Which issue this PR fixes**

Allows for installing cert-manager in namespace that differs from cert-manager, by creating 2 Helm deployments: https://github.com/jetstack/cert-manager/issues/2752#issuecomment-605883456

Should bring us closer to supporting a multi-controller scenario: https://github.com/jetstack/cert-manager/issues/2525#issuecomment-618982292

**Release note**:
<!--  Steps to write your release note:
1. Use the release-note-* labels to set the release note state (if you have access)
2. Enter your extended release note in the below block; leaving it blank means using the PR title as the release note. If no release note is required, just write `NONE`.
-->
```release-note
add components selector in Helm values
```
",False,4219,https://api.github.com/repos/cert-manager/cert-manager/pulls/4219,https://github.com/cert-manager/cert-manager/pull/4219,closed,77,18,29,2,19,0,8,0,"[{'name': 'release-note'}, {'name': 'needs-rebase'}, {'name': 'kind/feature'}, {'name': 'size/M'}, {'name': 'lifecycle/rotten'}, {'name': 'dco-signoff: yes'}, {'name': 'ok-to-test'}, {'name': 'area/deploy'}]",2021-07-17 21:37:30+00:00,2022-01-15 22:25:13+00:00,15727663.0,"182 days, 0:47:43",[],"[{'commit_sha': 'ee70730cf3502bfbd2569cbfb2a88c023afc083b', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e4d27b9cee42ad3b1c2039ce76ebead8c6988ea', 'committer_username': 'inteon', 'committer_name': 'Tim Ramlot', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 5, 12, 27, 9, tzinfo=datetime.timezone.utc)}]",Tim Ramlot,42113979,,User,,55,,17,14

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
194756741,website,cert-manager/website,JavaScript,330,53,5,269,3582,98,4,17,"[{'id': 2034421075, 'number': 1540, 'closed': datetime.datetime(2024, 8, 23, 15, 40, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 23, 15, 38, 4, tzinfo=datetime.timezone.utc), 'time_taken': 137.0, 'time_delta': '0:02:17', 'additions': 10, 'deletions': 6, 'state': 'closed'}, {'id': 2034004326, 'number': 1539, 'closed': datetime.datetime(2024, 8, 23, 11, 38, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 23, 11, 30, 29, tzinfo=datetime.timezone.utc), 'time_taken': 471.0, 'time_delta': '0:07:51', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 2022519109, 'number': 1537, 'closed': datetime.datetime(2024, 8, 16, 11, 1, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 16, 8, 16, 27, tzinfo=datetime.timezone.utc), 'time_taken': 9880.0, 'time_delta': '2:44:40', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 1976079657, 'number': 1518, 'closed': datetime.datetime(2024, 7, 18, 13, 54, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 18, 13, 51, 15, tzinfo=datetime.timezone.utc), 'time_taken': 176.0, 'time_delta': '0:02:56', 'additions': 8, 'deletions': 8, 'state': 'closed'}, {'id': 1959513259, 'number': 1512, 'closed': datetime.datetime(2024, 7, 9, 8, 52, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 9, 8, 31, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1280.0, 'time_delta': '0:21:20', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 1957577542, 'number': 1511, 'closed': datetime.datetime(2024, 7, 8, 13, 41, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 8, 11, 21, 36, tzinfo=datetime.timezone.utc), 'time_taken': 8405.0, 'time_delta': '2:20:05', 'additions': 7020, 'deletions': 14766, 'state': 'closed'}, {'id': 1940556630, 'number': 1509, 'closed': datetime.datetime(2024, 6, 26, 17, 50, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 26, 17, 38, 22, tzinfo=datetime.timezone.utc), 'time_taken': 717.0, 'time_delta': '0:11:57', 'additions': 13, 'deletions': 2, 'state': 'closed'}, {'id': 1932228076, 'number': 1506, 'closed': datetime.datetime(2024, 6, 21, 16, 13, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 21, 10, 38, 15, tzinfo=datetime.timezone.utc), 'time_taken': 20086.0, 'time_delta': '5:34:46', 'additions': 21, 'deletions': 0, 'state': 'closed'}, {'id': 1916528811, 'number': 1504, 'closed': datetime.datetime(2024, 6, 13, 12, 9, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 12, 12, 56, 1, tzinfo=datetime.timezone.utc), 'time_taken': 83582.0, 'time_delta': '23:13:02', 'additions': 203, 'deletions': 172, 'state': 'closed'}, {'id': 1914591498, 'number': 1502, 'closed': datetime.datetime(2024, 6, 11, 14, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 11, 14, 9, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1134.0, 'time_delta': '0:18:54', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 1906807416, 'number': 1497, 'closed': datetime.datetime(2024, 6, 6, 9, 23, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 6, 9, 11, 7, tzinfo=datetime.timezone.utc), 'time_taken': 769.0, 'time_delta': '0:12:49', 'additions': 30, 'deletions': 51, 'state': 'closed'}, {'id': 1904815920, 'number': 1491, 'closed': datetime.datetime(2024, 6, 5, 11, 0, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 5, 10, 45, 3, tzinfo=datetime.timezone.utc), 'time_taken': 952.0, 'time_delta': '0:15:52', 'additions': 70, 'deletions': 151, 'state': 'closed'}, {'id': 1869409775, 'number': 1479, 'closed': datetime.datetime(2024, 5, 31, 14, 0, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 14, 16, 32, 27, tzinfo=datetime.timezone.utc), 'time_taken': 1459663.0, 'time_delta': '16 days, 21:27:43', 'additions': 32, 'deletions': 18, 'state': 'closed'}, {'id': 1777913712, 'number': 1453, 'closed': datetime.datetime(2024, 3, 18, 17, 26, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 18, 16, 59, 23, tzinfo=datetime.timezone.utc), 'time_taken': 1638.0, 'time_delta': '0:27:18', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 1773619221, 'number': 1449, 'closed': datetime.datetime(2024, 6, 5, 10, 40, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 15, 8, 10, 59, tzinfo=datetime.timezone.utc), 'time_taken': 7093796.0, 'time_delta': '82 days, 2:29:56', 'additions': 68, 'deletions': 72, 'state': 'closed'}, {'id': 1773582390, 'number': 1448, 'closed': datetime.datetime(2024, 5, 31, 15, 43, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 15, 7, 42, 5, tzinfo=datetime.timezone.utc), 'time_taken': 6681665.0, 'time_delta': '77 days, 8:01:05', 'additions': 1, 'deletions': 4, 'state': 'closed'}, {'id': 1770185451, 'number': 1446, 'closed': datetime.datetime(2024, 3, 15, 9, 50, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 13, 14, 4, 14, tzinfo=datetime.timezone.utc), 'time_taken': 157547.0, 'time_delta': '1 day, 19:45:47', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 1769926653, 'number': 1445, 'closed': datetime.datetime(2024, 3, 13, 11, 59, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 13, 11, 56, 15, tzinfo=datetime.timezone.utc), 'time_taken': 208.0, 'time_delta': '0:03:28', 'additions': 27, 'deletions': 0, 'state': 'closed'}, {'id': 1763068717, 'number': 1441, 'closed': datetime.datetime(2024, 3, 8, 14, 23, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 8, 14, 15, 52, tzinfo=datetime.timezone.utc), 'time_taken': 440.0, 'time_delta': '0:07:20', 'additions': 23, 'deletions': 17, 'state': 'closed'}, {'id': 1762855108, 'number': 1440, 'closed': datetime.datetime(2024, 3, 8, 14, 33, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 8, 11, 53, 22, tzinfo=datetime.timezone.utc), 'time_taken': 9590.0, 'time_delta': '2:39:50', 'additions': 58, 'deletions': 3, 'state': 'closed'}, {'id': 1762603330, 'number': 1439, 'closed': datetime.datetime(2024, 3, 13, 14, 0, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 8, 9, 13, 57, tzinfo=datetime.timezone.utc), 'time_taken': 449193.0, 'time_delta': '5 days, 4:46:33', 'additions': 17, 'deletions': 3, 'state': 'closed'}, {'id': 1762576581, 'number': 1438, 'closed': datetime.datetime(2024, 3, 8, 16, 17, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 8, 8, 56, 22, tzinfo=datetime.timezone.utc), 'time_taken': 26443.0, 'time_delta': '7:20:43', 'additions': 40, 'deletions': 3, 'state': 'closed'}, {'id': 1760715123, 'number': 1437, 'closed': datetime.datetime(2024, 3, 11, 12, 53, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 7, 10, 19, 42, tzinfo=datetime.timezone.utc), 'time_taken': 354844.0, 'time_delta': '4 days, 2:34:04', 'additions': 12, 'deletions': 6, 'state': 'closed'}, {'id': 1759265552, 'number': 1436, 'closed': datetime.datetime(2024, 3, 7, 10, 31, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 6, 16, 13, 32, tzinfo=datetime.timezone.utc), 'time_taken': 65890.0, 'time_delta': '18:18:10', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1754894476, 'number': 1434, 'closed': datetime.datetime(2024, 3, 4, 14, 53, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 4, 14, 47, 48, tzinfo=datetime.timezone.utc), 'time_taken': 325.0, 'time_delta': '0:05:25', 'additions': 5, 'deletions': 11, 'state': 'closed'}, {'id': 1751871187, 'number': 1433, 'closed': datetime.datetime(2024, 3, 4, 14, 40, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 1, 15, 2, 38, tzinfo=datetime.timezone.utc), 'time_taken': 257855.0, 'time_delta': '2 days, 23:37:35', 'additions': 80, 'deletions': 20, 'state': 'closed'}, {'id': 1740435989, 'number': 1430, 'closed': datetime.datetime(2024, 2, 23, 11, 20, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 23, 10, 4, 34, tzinfo=datetime.timezone.utc), 'time_taken': 4535.0, 'time_delta': '1:15:35', 'additions': 90, 'deletions': 44, 'state': 'closed'}, {'id': 1729166850, 'number': 1428, 'closed': datetime.datetime(2024, 2, 16, 10, 22, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 16, 9, 39, 52, tzinfo=datetime.timezone.utc), 'time_taken': 2546.0, 'time_delta': '0:42:26', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 1729142099, 'number': 1427, 'closed': datetime.datetime(2024, 2, 16, 10, 21, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 16, 9, 22, 50, tzinfo=datetime.timezone.utc), 'time_taken': 3508.0, 'time_delta': '0:58:28', 'additions': 63, 'deletions': 78, 'state': 'closed'}, {'id': 1728314807, 'number': 1426, 'closed': datetime.datetime(2024, 2, 23, 14, 54, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 15, 19, 18, 44, tzinfo=datetime.timezone.utc), 'time_taken': 675325.0, 'time_delta': '7 days, 19:35:25', 'additions': 459, 'deletions': 307, 'state': 'closed'}, {'id': 1717577203, 'number': 1420, 'closed': datetime.datetime(2024, 2, 8, 13, 52, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 8, 13, 14, 34, tzinfo=datetime.timezone.utc), 'time_taken': 2277.0, 'time_delta': '0:37:57', 'additions': 32, 'deletions': 15, 'state': 'closed'}, {'id': 1703575646, 'number': 1401, 'closed': datetime.datetime(2024, 1, 31, 9, 31, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 31, 8, 26, 30, tzinfo=datetime.timezone.utc), 'time_taken': 3898.0, 'time_delta': '1:04:58', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1668859948, 'number': 1381, 'closed': datetime.datetime(2024, 1, 8, 15, 13, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 8, 12, 37, 47, tzinfo=datetime.timezone.utc), 'time_taken': 9321.0, 'time_delta': '2:35:21', 'additions': 6, 'deletions': 19, 'state': 'closed'}, {'id': 1668858908, 'number': 1380, 'closed': datetime.datetime(2024, 1, 8, 12, 37, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 8, 12, 37, 2, tzinfo=datetime.timezone.utc), 'time_taken': 9.0, 'time_delta': '0:00:09', 'additions': 1033, 'deletions': 122, 'state': 'closed'}, {'id': 1666163062, 'number': 1377, 'closed': datetime.datetime(2024, 1, 11, 13, 6, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 5, 13, 8, 7, tzinfo=datetime.timezone.utc), 'time_taken': 518323.0, 'time_delta': '5 days, 23:58:43', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1651745376, 'number': 1371, 'closed': datetime.datetime(2024, 1, 2, 12, 32, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 20, 9, 38, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1133645.0, 'time_delta': '13 days, 2:54:05', 'additions': 444, 'deletions': 48, 'state': 'closed'}, {'id': 1625290460, 'number': 1353, 'closed': datetime.datetime(2023, 12, 1, 10, 28, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 1, 9, 6, 31, tzinfo=datetime.timezone.utc), 'time_taken': 4938.0, 'time_delta': '1:22:18', 'additions': 39, 'deletions': 6, 'state': 'closed'}, {'id': 1617920386, 'number': 1352, 'closed': datetime.datetime(2023, 11, 28, 16, 15, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 27, 12, 57, 26, tzinfo=datetime.timezone.utc), 'time_taken': 98275.0, 'time_delta': '1 day, 3:17:55', 'additions': 32, 'deletions': 93, 'state': 'closed'}, {'id': 1606457124, 'number': 1348, 'closed': datetime.datetime(2023, 11, 17, 14, 47, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 17, 13, 34, 26, tzinfo=datetime.timezone.utc), 'time_taken': 4373.0, 'time_delta': '1:12:53', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 1579063945, 'number': 1336, 'closed': datetime.datetime(2023, 10, 30, 13, 46, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 30, 13, 23, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1397.0, 'time_delta': '0:23:17', 'additions': 21, 'deletions': 0, 'state': 'closed'}, {'id': 1579063838, 'number': 1335, 'closed': datetime.datetime(2023, 10, 30, 18, 11, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 30, 13, 23, 5, tzinfo=datetime.timezone.utc), 'time_taken': 17317.0, 'time_delta': '4:48:37', 'additions': 28, 'deletions': 28, 'state': 'closed'}, {'id': 1579063320, 'number': 1334, 'closed': datetime.datetime(2023, 10, 30, 13, 45, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 30, 13, 22, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1375.0, 'time_delta': '0:22:55', 'additions': 16, 'deletions': 0, 'state': 'closed'}, {'id': 1570519756, 'number': 1332, 'closed': datetime.datetime(2023, 10, 24, 16, 29, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 24, 7, 32, 8, tzinfo=datetime.timezone.utc), 'time_taken': 32243.0, 'time_delta': '8:57:23', 'additions': 7, 'deletions': 3, 'state': 'closed'}, {'id': 1562260305, 'number': 1329, 'closed': datetime.datetime(2023, 11, 6, 22, 19, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 18, 9, 38, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1687217.0, 'time_delta': '19 days, 12:40:17', 'additions': 769, 'deletions': 0, 'state': 'closed'}, {'id': 1556156915, 'number': 1327, 'closed': datetime.datetime(2023, 11, 5, 20, 21, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 13, 16, 9, 4, tzinfo=datetime.timezone.utc), 'time_taken': 2002374.0, 'time_delta': '23 days, 4:12:54', 'additions': 142, 'deletions': 137, 'state': 'closed'}, {'id': 1554050646, 'number': 1324, 'closed': datetime.datetime(2023, 11, 24, 10, 17, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 12, 12, 29, 41, tzinfo=datetime.timezone.utc), 'time_taken': 3707291.0, 'time_delta': '42 days, 21:48:11', 'additions': 219, 'deletions': 123, 'state': 'closed'}, {'id': 1543543850, 'number': 1319, 'closed': datetime.datetime(2023, 10, 6, 13, 51, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 5, 12, 11, 42, tzinfo=datetime.timezone.utc), 'time_taken': 92409.0, 'time_delta': '1 day, 1:40:09', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1541848152, 'number': 1318, 'closed': datetime.datetime(2023, 10, 5, 8, 26, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 4, 13, 29, 14, tzinfo=datetime.timezone.utc), 'time_taken': 68262.0, 'time_delta': '18:57:42', 'additions': 27, 'deletions': 14, 'state': 'closed'}, {'id': 1541736561, 'number': 1317, 'closed': datetime.datetime(2023, 10, 6, 13, 29, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 4, 12, 24, 13, tzinfo=datetime.timezone.utc), 'time_taken': 176739.0, 'time_delta': '2 days, 1:05:39', 'additions': 343, 'deletions': 376, 'state': 'closed'}, {'id': 1541651880, 'number': 1316, 'closed': datetime.datetime(2023, 10, 5, 8, 28, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 4, 11, 30, 16, tzinfo=datetime.timezone.utc), 'time_taken': 75520.0, 'time_delta': '20:58:40', 'additions': 92, 'deletions': 73, 'state': 'closed'}, {'id': 1538718035, 'number': 1315, 'closed': datetime.datetime(2023, 10, 6, 13, 59, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 2, 21, 0, 32, tzinfo=datetime.timezone.utc), 'time_taken': 320359.0, 'time_delta': '3 days, 16:59:19', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1538645941, 'number': 1314, 'closed': datetime.datetime(2023, 10, 5, 8, 23, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 2, 20, 20, 36, tzinfo=datetime.timezone.utc), 'time_taken': 216200.0, 'time_delta': '2 days, 12:03:20', 'additions': 25, 'deletions': 5, 'state': 'closed'}, {'id': 1538201692, 'number': 1313, 'closed': datetime.datetime(2023, 10, 2, 15, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 2, 15, 17, 46, tzinfo=datetime.timezone.utc), 'time_taken': 314.0, 'time_delta': '0:05:14', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1538126256, 'number': 1312, 'closed': datetime.datetime(2023, 10, 2, 14, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 2, 14, 31, 1, tzinfo=datetime.timezone.utc), 'time_taken': 1199.0, 'time_delta': '0:19:59', 'additions': 25, 'deletions': 16, 'state': 'closed'}, {'id': 1538032222, 'number': 1311, 'closed': datetime.datetime(2023, 10, 11, 12, 46, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 2, 13, 34, 44, tzinfo=datetime.timezone.utc), 'time_taken': 774687.0, 'time_delta': '8 days, 23:11:27', 'additions': 282, 'deletions': 297, 'state': 'closed'}, {'id': 1534209559, 'number': 1309, 'closed': datetime.datetime(2023, 9, 29, 16, 11, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 28, 13, 23, 31, tzinfo=datetime.timezone.utc), 'time_taken': 96497.0, 'time_delta': '1 day, 2:48:17', 'additions': 337, 'deletions': 194, 'state': 'closed'}, {'id': 1533624971, 'number': 1308, 'closed': datetime.datetime(2023, 9, 28, 8, 55, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 28, 7, 42, 4, tzinfo=datetime.timezone.utc), 'time_taken': 4420.0, 'time_delta': '1:13:40', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1531947110, 'number': 1307, 'closed': datetime.datetime(2023, 9, 27, 13, 8, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 27, 8, 44, 18, tzinfo=datetime.timezone.utc), 'time_taken': 15833.0, 'time_delta': '4:23:53', 'additions': 17, 'deletions': 0, 'state': 'closed'}, {'id': 1531944762, 'number': 1306, 'closed': datetime.datetime(2023, 9, 27, 13, 7, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 27, 8, 42, 40, tzinfo=datetime.timezone.utc), 'time_taken': 15872.0, 'time_delta': '4:24:32', 'additions': 16, 'deletions': 0, 'state': 'closed'}, {'id': 1531937648, 'number': 1305, 'closed': datetime.datetime(2023, 9, 28, 7, 38, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 27, 8, 37, 54, tzinfo=datetime.timezone.utc), 'time_taken': 82850.0, 'time_delta': '23:00:50', 'additions': 18, 'deletions': 18, 'state': 'closed'}, {'id': 1528818109, 'number': 1304, 'closed': datetime.datetime(2023, 10, 2, 8, 58, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 25, 13, 23, 53, tzinfo=datetime.timezone.utc), 'time_taken': 588888.0, 'time_delta': '6 days, 19:34:48', 'additions': 995, 'deletions': 278, 'state': 'closed'}, {'id': 1524380069, 'number': 1302, 'closed': datetime.datetime(2023, 9, 25, 11, 53, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 21, 8, 38, 31, tzinfo=datetime.timezone.utc), 'time_taken': 357289.0, 'time_delta': '4 days, 3:14:49', 'additions': 15, 'deletions': 6, 'state': 'closed'}, {'id': 1514168393, 'number': 1299, 'closed': datetime.datetime(2023, 9, 14, 12, 53, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 13, 16, 0, 15, tzinfo=datetime.timezone.utc), 'time_taken': 75167.0, 'time_delta': '20:52:47', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 1513510005, 'number': 1298, 'closed': datetime.datetime(2023, 9, 13, 12, 13, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 13, 9, 16, 58, tzinfo=datetime.timezone.utc), 'time_taken': 10614.0, 'time_delta': '2:56:54', 'additions': 19, 'deletions': 0, 'state': 'closed'}, {'id': 1513462708, 'number': 1296, 'closed': datetime.datetime(2023, 9, 13, 12, 15, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 13, 8, 46, 34, tzinfo=datetime.timezone.utc), 'time_taken': 12558.0, 'time_delta': '3:29:18', 'additions': 151, 'deletions': 0, 'state': 'closed'}, {'id': 1513460981, 'number': 1295, 'closed': datetime.datetime(2023, 9, 13, 14, 24, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 13, 8, 45, 26, tzinfo=datetime.timezone.utc), 'time_taken': 20366.0, 'time_delta': '5:39:26', 'additions': 22471, 'deletions': 5609, 'state': 'closed'}, {'id': 1507489854, 'number': 1292, 'closed': datetime.datetime(2023, 9, 8, 14, 11, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 8, 8, 41, 13, tzinfo=datetime.timezone.utc), 'time_taken': 19798.0, 'time_delta': '5:29:58', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1506311242, 'number': 1291, 'closed': datetime.datetime(2023, 10, 12, 10, 28, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 7, 13, 28, 50, tzinfo=datetime.timezone.utc), 'time_taken': 3013201.0, 'time_delta': '34 days, 21:00:01', 'additions': 53, 'deletions': 31, 'state': 'closed'}, {'id': 1506298114, 'number': 1290, 'closed': datetime.datetime(2023, 9, 7, 13, 22, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 7, 13, 21, 32, tzinfo=datetime.timezone.utc), 'time_taken': 67.0, 'time_delta': '0:01:07', 'additions': 83, 'deletions': 82, 'state': 'closed'}, {'id': 1506291054, 'number': 1289, 'closed': datetime.datetime(2023, 10, 17, 15, 26, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 7, 13, 16, 55, tzinfo=datetime.timezone.utc), 'time_taken': 3463786.0, 'time_delta': '40 days, 2:09:46', 'additions': 886, 'deletions': 1, 'state': 'closed'}, {'id': 1504733191, 'number': 1287, 'closed': datetime.datetime(2023, 9, 7, 16, 26, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 6, 14, 22, 46, tzinfo=datetime.timezone.utc), 'time_taken': 93840.0, 'time_delta': '1 day, 2:04:00', 'additions': 36, 'deletions': 27, 'state': 'closed'}, {'id': 1504136067, 'number': 1286, 'closed': datetime.datetime(2023, 9, 7, 13, 21, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 6, 7, 52, 52, tzinfo=datetime.timezone.utc), 'time_taken': 106131.0, 'time_delta': '1 day, 5:28:51', 'additions': 76, 'deletions': 76, 'state': 'closed'}, {'id': 1502420961, 'number': 1283, 'closed': datetime.datetime(2023, 10, 11, 12, 39, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 5, 9, 4, 54, tzinfo=datetime.timezone.utc), 'time_taken': 3123291.0, 'time_delta': '36 days, 3:34:51', 'additions': 2941, 'deletions': 10563, 'state': 'closed'}, {'id': 1502406849, 'number': 1282, 'closed': datetime.datetime(2023, 9, 6, 16, 54, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 5, 8, 55, 54, tzinfo=datetime.timezone.utc), 'time_taken': 115117.0, 'time_delta': '1 day, 7:58:37', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 1450269177, 'number': 1264, 'closed': datetime.datetime(2023, 8, 1, 17, 27, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 26, 13, 24, 49, tzinfo=datetime.timezone.utc), 'time_taken': 532961.0, 'time_delta': '6 days, 4:02:41', 'additions': 49, 'deletions': 1, 'state': 'closed'}, {'id': 1375213207, 'number': 1238, 'closed': datetime.datetime(2023, 6, 2, 9, 40, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 2, 6, 54, 55, tzinfo=datetime.timezone.utc), 'time_taken': 9925.0, 'time_delta': '2:45:25', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1350945379, 'number': 1223, 'closed': datetime.datetime(2023, 5, 16, 9, 6, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 15, 14, 47, 38, tzinfo=datetime.timezone.utc), 'time_taken': 65949.0, 'time_delta': '18:19:09', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1107869956, 'number': 1098, 'closed': datetime.datetime(2022, 11, 9, 15, 11, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 2, 8, 33, 10, tzinfo=datetime.timezone.utc), 'time_taken': 628688.0, 'time_delta': '7 days, 6:38:08', 'additions': 23, 'deletions': 20, 'state': 'closed'}, {'id': 699869696, 'number': 663, 'closed': datetime.datetime(2021, 7, 30, 8, 40, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 29, 22, 5, 28, tzinfo=datetime.timezone.utc), 'time_taken': 38089.0, 'time_delta': '10:34:49', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 696408104, 'number': 656, 'closed': datetime.datetime(2021, 7, 29, 11, 37, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 24, 21, 30, 51, tzinfo=datetime.timezone.utc), 'time_taken': 396381.0, 'time_delta': '4 days, 14:06:21', 'additions': 31, 'deletions': 12, 'state': 'closed'}, {'id': 696397811, 'number': 655, 'closed': datetime.datetime(2021, 8, 4, 15, 29, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 24, 19, 45, 25, tzinfo=datetime.timezone.utc), 'time_taken': 935039.0, 'time_delta': '10 days, 19:43:59', 'additions': 69, 'deletions': 481, 'state': 'closed'}, {'id': 692581028, 'number': 647, 'closed': datetime.datetime(2021, 7, 23, 11, 20, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 12, 55, 54, tzinfo=datetime.timezone.utc), 'time_taken': 339855.0, 'time_delta': '3 days, 22:24:15', 'additions': 546, 'deletions': 627, 'state': 'closed'}, {'id': 677099644, 'number': 629, 'closed': datetime.datetime(2021, 7, 19, 12, 55, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 13, 11, 8, tzinfo=datetime.timezone.utc), 'time_taken': 2159047.0, 'time_delta': '24 days, 23:44:07', 'additions': 567, 'deletions': 619, 'state': 'closed'}, {'id': 677062374, 'number': 628, 'closed': datetime.datetime(2021, 6, 28, 14, 29, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 12, 18, 55, tzinfo=datetime.timezone.utc), 'time_taken': 353450.0, 'time_delta': '4 days, 2:10:50', 'additions': 26, 'deletions': 28, 'state': 'closed'}, {'id': 601176086, 'number': 485, 'closed': datetime.datetime(2021, 6, 23, 13, 0, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 25, 23, 43, 20, tzinfo=datetime.timezone.utc), 'time_taken': 7737410.0, 'time_delta': '89 days, 13:16:50', 'additions': 375, 'deletions': 126, 'state': 'closed'}]"
92313258,cert-manager,cert-manager/cert-manager,Go,2043,11852,148,460,8981,196,37,46,"[{'id': 2034420730, 'number': 7246, 'closed': datetime.datetime(2024, 8, 23, 15, 53, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 23, 15, 37, 50, tzinfo=datetime.timezone.utc), 'time_taken': 930.0, 'time_delta': '0:15:30', 'additions': 11, 'deletions': 7, 'state': 'closed'}, {'id': 2029306882, 'number': 7243, 'closed': None, 'created': datetime.datetime(2024, 8, 21, 9, 8, 51, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 14, 'deletions': 18, 'state': 'open'}, {'id': 2029269409, 'number': 7242, 'closed': datetime.datetime(2024, 8, 21, 14, 0, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 21, 8, 50, 3, tzinfo=datetime.timezone.utc), 'time_taken': 18602.0, 'time_delta': '5:10:02', 'additions': 614, 'deletions': 476, 'state': 'closed'}, {'id': 2027953358, 'number': 7240, 'closed': None, 'created': datetime.datetime(2024, 8, 20, 15, 43, 13, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 15, 'deletions': 14, 'state': 'open'}, {'id': 2022783125, 'number': 7238, 'closed': datetime.datetime(2024, 8, 23, 11, 38, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 16, 11, 12, 36, tzinfo=datetime.timezone.utc), 'time_taken': 606344.0, 'time_delta': '7 days, 0:25:44', 'additions': 814, 'deletions': 736, 'state': 'closed'}, {'id': 2022760200, 'number': 7237, 'closed': datetime.datetime(2024, 8, 20, 8, 34, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 16, 10, 57, 6, tzinfo=datetime.timezone.utc), 'time_taken': 337018.0, 'time_delta': '3 days, 21:36:58', 'additions': 1324, 'deletions': 3694, 'state': 'closed'}, {'id': 2017654488, 'number': 7230, 'closed': datetime.datetime(2024, 8, 14, 8, 52, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 13, 17, 35, 39, tzinfo=datetime.timezone.utc), 'time_taken': 54985.0, 'time_delta': '15:16:25', 'additions': 161, 'deletions': 1, 'state': 'closed'}, {'id': 2017279294, 'number': 7229, 'closed': None, 'created': datetime.datetime(2024, 8, 13, 14, 10, 47, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 225, 'deletions': 40, 'state': 'open'}, {'id': 2015163213, 'number': 7227, 'closed': datetime.datetime(2024, 8, 20, 8, 50, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 12, 14, 3, tzinfo=datetime.timezone.utc), 'time_taken': 672424.0, 'time_delta': '7 days, 18:47:04', 'additions': 72, 'deletions': 75, 'state': 'closed'}, {'id': 1977612872, 'number': 7191, 'closed': datetime.datetime(2024, 7, 21, 9, 15, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 19, 9, 22, 48, tzinfo=datetime.timezone.utc), 'time_taken': 172338.0, 'time_delta': '1 day, 23:52:18', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1976245147, 'number': 7187, 'closed': datetime.datetime(2024, 7, 18, 15, 9, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 18, 14, 59, 16, tzinfo=datetime.timezone.utc), 'time_taken': 593.0, 'time_delta': '0:09:53', 'additions': 61, 'deletions': 60, 'state': 'closed'}, {'id': 1976079160, 'number': 7185, 'closed': datetime.datetime(2024, 7, 18, 14, 25, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 18, 13, 51, 2, tzinfo=datetime.timezone.utc), 'time_taken': 2047.0, 'time_delta': '0:34:07', 'additions': 11, 'deletions': 11, 'state': 'closed'}, {'id': 1973540903, 'number': 7180, 'closed': datetime.datetime(2024, 7, 17, 12, 32, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 17, 11, 57, 13, tzinfo=datetime.timezone.utc), 'time_taken': 2095.0, 'time_delta': '0:34:55', 'additions': 47, 'deletions': 23, 'state': 'closed'}, {'id': 1949505158, 'number': 7150, 'closed': datetime.datetime(2024, 8, 14, 10, 10, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 2, 13, 27, 28, tzinfo=datetime.timezone.utc), 'time_taken': 3703356.0, 'time_delta': '42 days, 20:42:36', 'additions': 703, 'deletions': 344, 'state': 'closed'}, {'id': 1949019404, 'number': 7148, 'closed': datetime.datetime(2024, 7, 2, 13, 26, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 2, 9, 17, 20, tzinfo=datetime.timezone.utc), 'time_taken': 14953.0, 'time_delta': '4:09:13', 'additions': 67, 'deletions': 95, 'state': 'closed'}, {'id': 1944440703, 'number': 7142, 'closed': datetime.datetime(2024, 7, 1, 11, 7, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 28, 14, 8, 51, tzinfo=datetime.timezone.utc), 'time_taken': 248313.0, 'time_delta': '2 days, 20:58:33', 'additions': 20, 'deletions': 19, 'state': 'closed'}, {'id': 1944043693, 'number': 7141, 'closed': datetime.datetime(2024, 7, 1, 10, 56, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 28, 10, 19, 26, tzinfo=datetime.timezone.utc), 'time_taken': 261417.0, 'time_delta': '3 days, 0:36:57', 'additions': 7, 'deletions': 0, 'state': 'closed'}, {'id': 1943831972, 'number': 7140, 'closed': datetime.datetime(2024, 6, 28, 9, 10, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 28, 8, 5, 57, tzinfo=datetime.timezone.utc), 'time_taken': 3864.0, 'time_delta': '1:04:24', 'additions': 10, 'deletions': 10, 'state': 'closed'}, {'id': 1935072701, 'number': 7119, 'closed': datetime.datetime(2024, 6, 24, 11, 15, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 24, 9, 31, 37, tzinfo=datetime.timezone.utc), 'time_taken': 6206.0, 'time_delta': '1:43:26', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1932040472, 'number': 7116, 'closed': datetime.datetime(2024, 6, 21, 9, 10, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 21, 8, 46, 41, tzinfo=datetime.timezone.utc), 'time_taken': 1400.0, 'time_delta': '0:23:20', 'additions': 34, 'deletions': 34, 'state': 'closed'}, {'id': 1932033438, 'number': 7115, 'closed': datetime.datetime(2024, 6, 21, 9, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 21, 8, 42, 10, tzinfo=datetime.timezone.utc), 'time_taken': 1730.0, 'time_delta': '0:28:50', 'additions': 32, 'deletions': 32, 'state': 'closed'}, {'id': 1930913977, 'number': 7111, 'closed': datetime.datetime(2024, 6, 20, 20, 16, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 20, 15, 51, 55, tzinfo=datetime.timezone.utc), 'time_taken': 15904.0, 'time_delta': '4:25:04', 'additions': 50, 'deletions': 3, 'state': 'closed'}, {'id': 1929057227, 'number': 7110, 'closed': datetime.datetime(2024, 6, 21, 15, 18, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 19, 15, 46, 58, tzinfo=datetime.timezone.utc), 'time_taken': 171063.0, 'time_delta': '1 day, 23:31:03', 'additions': 255, 'deletions': 153, 'state': 'closed'}, {'id': 1927723743, 'number': 7109, 'closed': datetime.datetime(2024, 6, 19, 9, 29, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 19, 4, 5, 37, tzinfo=datetime.timezone.utc), 'time_taken': 19461.0, 'time_delta': '5:24:21', 'additions': 86, 'deletions': 27, 'state': 'closed'}, {'id': 1926401513, 'number': 7108, 'closed': datetime.datetime(2024, 7, 12, 14, 13, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 18, 12, 30, 43, tzinfo=datetime.timezone.utc), 'time_taken': 2079756.0, 'time_delta': '24 days, 1:42:36', 'additions': 13, 'deletions': 5, 'state': 'closed'}, {'id': 1924969069, 'number': 7106, 'closed': datetime.datetime(2024, 6, 24, 14, 29, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 17, 20, 0, 46, tzinfo=datetime.timezone.utc), 'time_taken': 584950.0, 'time_delta': '6 days, 18:29:10', 'additions': 478, 'deletions': 777, 'state': 'closed'}, {'id': 1924433938, 'number': 7105, 'closed': datetime.datetime(2024, 6, 20, 15, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 17, 14, 54, 24, tzinfo=datetime.timezone.utc), 'time_taken': 262296.0, 'time_delta': '3 days, 0:51:36', 'additions': 50, 'deletions': 3, 'state': 'closed'}, {'id': 1920659121, 'number': 7100, 'closed': datetime.datetime(2024, 6, 17, 8, 51, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 14, 13, 1, 49, tzinfo=datetime.timezone.utc), 'time_taken': 244207.0, 'time_delta': '2 days, 19:50:07', 'additions': 133, 'deletions': 268, 'state': 'closed'}, {'id': 1919269341, 'number': 7094, 'closed': datetime.datetime(2024, 6, 17, 12, 24, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 13, 18, 11, 54, tzinfo=datetime.timezone.utc), 'time_taken': 324782.0, 'time_delta': '3 days, 18:13:02', 'additions': 650, 'deletions': 617, 'state': 'closed'}, {'id': 1905131429, 'number': 7069, 'closed': datetime.datetime(2024, 6, 10, 10, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 5, 13, 21, 45, tzinfo=datetime.timezone.utc), 'time_taken': 423075.0, 'time_delta': '4 days, 21:31:15', 'additions': 2167, 'deletions': 5, 'state': 'closed'}, {'id': 1893741946, 'number': 7057, 'closed': datetime.datetime(2024, 6, 10, 12, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 29, 11, 58, 18, tzinfo=datetime.timezone.utc), 'time_taken': 1038582.0, 'time_delta': '12 days, 0:29:42', 'additions': 552, 'deletions': 163, 'state': 'closed'}, {'id': 1891514222, 'number': 7052, 'closed': datetime.datetime(2024, 5, 28, 11, 29, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 28, 10, 3, 34, tzinfo=datetime.timezone.utc), 'time_taken': 5133.0, 'time_delta': '1:25:33', 'additions': 26, 'deletions': 10, 'state': 'closed'}, {'id': 1884396816, 'number': 7049, 'closed': datetime.datetime(2024, 5, 28, 11, 7, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 23, 11, 38, 18, tzinfo=datetime.timezone.utc), 'time_taken': 430129.0, 'time_delta': '4 days, 23:28:49', 'additions': 60, 'deletions': 1, 'state': 'closed'}, {'id': 1880301304, 'number': 7044, 'closed': datetime.datetime(2024, 5, 21, 12, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 21, 12, 1, 2, tzinfo=datetime.timezone.utc), 'time_taken': 3238.0, 'time_delta': '0:53:58', 'additions': 30, 'deletions': 0, 'state': 'closed'}, {'id': 1870392624, 'number': 7033, 'closed': datetime.datetime(2024, 5, 15, 8, 57, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 15, 6, 48, 20, tzinfo=datetime.timezone.utc), 'time_taken': 7771.0, 'time_delta': '2:09:31', 'additions': 9, 'deletions': 1, 'state': 'closed'}, {'id': 1869303061, 'number': 7030, 'closed': datetime.datetime(2024, 5, 14, 17, 1, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 14, 15, 30, 15, tzinfo=datetime.timezone.utc), 'time_taken': 5497.0, 'time_delta': '1:31:37', 'additions': 32, 'deletions': 20, 'state': 'closed'}, {'id': 1868916977, 'number': 7022, 'closed': datetime.datetime(2024, 5, 14, 13, 6, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 14, 12, 52, 24, tzinfo=datetime.timezone.utc), 'time_taken': 866.0, 'time_delta': '0:14:26', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1868419253, 'number': 7018, 'closed': datetime.datetime(2024, 5, 14, 12, 11, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 14, 8, 37, 41, tzinfo=datetime.timezone.utc), 'time_taken': 12850.0, 'time_delta': '3:34:10', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 1868416127, 'number': 7017, 'closed': datetime.datetime(2024, 5, 14, 12, 11, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 14, 8, 36, 22, tzinfo=datetime.timezone.utc), 'time_taken': 12929.0, 'time_delta': '3:35:29', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 1868407110, 'number': 7016, 'closed': datetime.datetime(2024, 5, 14, 12, 11, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 14, 8, 32, 32, tzinfo=datetime.timezone.utc), 'time_taken': 13159.0, 'time_delta': '3:39:19', 'additions': 10, 'deletions': 10, 'state': 'closed'}, {'id': 1868293958, 'number': 7015, 'closed': datetime.datetime(2024, 5, 17, 13, 19, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 14, 7, 44, 31, tzinfo=datetime.timezone.utc), 'time_taken': 279322.0, 'time_delta': '3 days, 5:35:22', 'additions': 204, 'deletions': 47, 'state': 'closed'}, {'id': 1868282965, 'number': 7014, 'closed': datetime.datetime(2024, 5, 17, 9, 43, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 14, 7, 37, 35, tzinfo=datetime.timezone.utc), 'time_taken': 266778.0, 'time_delta': '3 days, 2:06:18', 'additions': 624, 'deletions': 364, 'state': 'closed'}, {'id': 1868270492, 'number': 7013, 'closed': datetime.datetime(2024, 5, 14, 14, 28, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 14, 7, 29, 32, tzinfo=datetime.timezone.utc), 'time_taken': 25158.0, 'time_delta': '6:59:18', 'additions': 998, 'deletions': 1137, 'state': 'closed'}, {'id': 1867230935, 'number': 7011, 'closed': datetime.datetime(2024, 5, 17, 17, 16, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 13, 18, 11, 21, tzinfo=datetime.timezone.utc), 'time_taken': 342286.0, 'time_delta': '3 days, 23:04:46', 'additions': 1768, 'deletions': 1491, 'state': 'closed'}, {'id': 1866781617, 'number': 7008, 'closed': datetime.datetime(2024, 5, 13, 14, 59, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 13, 14, 25, 33, tzinfo=datetime.timezone.utc), 'time_taken': 2057.0, 'time_delta': '0:34:17', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1866778269, 'number': 7007, 'closed': datetime.datetime(2024, 5, 13, 14, 24, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 13, 14, 24, 27, tzinfo=datetime.timezone.utc), 'time_taken': 6.0, 'time_delta': '0:00:06', 'additions': 1928, 'deletions': 3702, 'state': 'closed'}, {'id': 1860722380, 'number': 6995, 'closed': datetime.datetime(2024, 5, 10, 5, 43, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 8, 17, 36, 46, tzinfo=datetime.timezone.utc), 'time_taken': 129992.0, 'time_delta': '1 day, 12:06:32', 'additions': 375, 'deletions': 428, 'state': 'closed'}, {'id': 1860587773, 'number': 6994, 'closed': datetime.datetime(2024, 5, 8, 16, 23, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 8, 16, 8, 43, tzinfo=datetime.timezone.utc), 'time_taken': 873.0, 'time_delta': '0:14:33', 'additions': 116, 'deletions': 114, 'state': 'closed'}, {'id': 1848460921, 'number': 6978, 'closed': datetime.datetime(2024, 5, 2, 12, 30, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 30, 17, 34, 39, tzinfo=datetime.timezone.utc), 'time_taken': 154550.0, 'time_delta': '1 day, 18:55:50', 'additions': 244, 'deletions': 221, 'state': 'closed'}, {'id': 1847454005, 'number': 6975, 'closed': datetime.datetime(2024, 5, 7, 10, 51, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 30, 9, 19, 59, tzinfo=datetime.timezone.utc), 'time_taken': 610276.0, 'time_delta': '7 days, 1:31:16', 'additions': 1165, 'deletions': 1127, 'state': 'closed'}, {'id': 1846468636, 'number': 6973, 'closed': datetime.datetime(2024, 4, 30, 9, 13, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 29, 20, 1, 21, tzinfo=datetime.timezone.utc), 'time_taken': 47536.0, 'time_delta': '13:12:16', 'additions': 481, 'deletions': 571, 'state': 'closed'}, {'id': 1845793346, 'number': 6972, 'closed': datetime.datetime(2024, 4, 29, 14, 45, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 29, 13, 53, 16, tzinfo=datetime.timezone.utc), 'time_taken': 3140.0, 'time_delta': '0:52:20', 'additions': 130, 'deletions': 190, 'state': 'closed'}, {'id': 1842948771, 'number': 6963, 'closed': datetime.datetime(2024, 4, 26, 17, 22, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 26, 14, 16, 46, tzinfo=datetime.timezone.utc), 'time_taken': 11149.0, 'time_delta': '3:05:49', 'additions': 25, 'deletions': 223, 'state': 'closed'}, {'id': 1839203507, 'number': 6952, 'closed': datetime.datetime(2024, 4, 29, 12, 35, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 24, 16, 27, 47, tzinfo=datetime.timezone.utc), 'time_taken': 418069.0, 'time_delta': '4 days, 20:07:49', 'additions': 277, 'deletions': 232, 'state': 'closed'}, {'id': 1838794144, 'number': 6950, 'closed': datetime.datetime(2024, 4, 24, 14, 52, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 24, 13, 3, 50, tzinfo=datetime.timezone.utc), 'time_taken': 6522.0, 'time_delta': '1:48:42', 'additions': 279, 'deletions': 212, 'state': 'closed'}, {'id': 1835013274, 'number': 6942, 'closed': datetime.datetime(2024, 4, 22, 18, 35, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 22, 16, 36, 11, tzinfo=datetime.timezone.utc), 'time_taken': 7177.0, 'time_delta': '1:59:37', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1834955339, 'number': 6938, 'closed': datetime.datetime(2024, 4, 22, 16, 23, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 22, 16, 2, 44, tzinfo=datetime.timezone.utc), 'time_taken': 1258.0, 'time_delta': '0:20:58', 'additions': 0, 'deletions': 20, 'state': 'closed'}, {'id': 1834801145, 'number': 6937, 'closed': datetime.datetime(2024, 4, 23, 11, 8, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 22, 14, 55, 34, tzinfo=datetime.timezone.utc), 'time_taken': 72772.0, 'time_delta': '20:12:52', 'additions': 15, 'deletions': 23, 'state': 'closed'}, {'id': 1834100182, 'number': 6928, 'closed': datetime.datetime(2024, 4, 22, 18, 26, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 22, 8, 55, 34, tzinfo=datetime.timezone.utc), 'time_taken': 34267.0, 'time_delta': '9:31:07', 'additions': 366, 'deletions': 102, 'state': 'closed'}, {'id': 1833008341, 'number': 6923, 'closed': datetime.datetime(2024, 4, 22, 14, 13, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 20, 20, 28, 23, tzinfo=datetime.timezone.utc), 'time_taken': 150322.0, 'time_delta': '1 day, 17:45:22', 'additions': 14, 'deletions': 3, 'state': 'closed'}, {'id': 1832065194, 'number': 6920, 'closed': datetime.datetime(2024, 4, 19, 20, 10, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 19, 17, 20, 51, tzinfo=datetime.timezone.utc), 'time_taken': 10175.0, 'time_delta': '2:49:35', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 1831963333, 'number': 6919, 'closed': datetime.datetime(2024, 4, 19, 19, 48, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 19, 16, 13, 27, tzinfo=datetime.timezone.utc), 'time_taken': 12893.0, 'time_delta': '3:34:53', 'additions': 59, 'deletions': 42, 'state': 'closed'}, {'id': 1830204893, 'number': 6914, 'closed': datetime.datetime(2024, 4, 19, 10, 36, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 18, 19, 28, 50, tzinfo=datetime.timezone.utc), 'time_taken': 54474.0, 'time_delta': '15:07:54', 'additions': 36, 'deletions': 28, 'state': 'closed'}, {'id': 1829420037, 'number': 6911, 'closed': datetime.datetime(2024, 4, 19, 9, 16, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 18, 12, 9, 51, tzinfo=datetime.timezone.utc), 'time_taken': 76013.0, 'time_delta': '21:06:53', 'additions': 3, 'deletions': 4, 'state': 'closed'}, {'id': 1829170651, 'number': 6910, 'closed': datetime.datetime(2024, 4, 22, 19, 13, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 18, 9, 49, 19, tzinfo=datetime.timezone.utc), 'time_taken': 379461.0, 'time_delta': '4 days, 9:24:21', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1823737523, 'number': 6906, 'closed': datetime.datetime(2024, 4, 22, 15, 40, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 15, 16, 50, 13, tzinfo=datetime.timezone.utc), 'time_taken': 600619.0, 'time_delta': '6 days, 22:50:19', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1787805380, 'number': 6871, 'closed': datetime.datetime(2024, 3, 25, 11, 31, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 23, 13, 23, 22, tzinfo=datetime.timezone.utc), 'time_taken': 166097.0, 'time_delta': '1 day, 22:08:17', 'additions': 184, 'deletions': 2, 'state': 'closed'}, {'id': 1762822546, 'number': 6846, 'closed': datetime.datetime(2024, 3, 8, 13, 43, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 8, 11, 27, 3, tzinfo=datetime.timezone.utc), 'time_taken': 8165.0, 'time_delta': '2:16:05', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1762822392, 'number': 6845, 'closed': datetime.datetime(2024, 3, 8, 13, 43, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 8, 11, 26, 56, tzinfo=datetime.timezone.utc), 'time_taken': 8171.0, 'time_delta': '2:16:11', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1762822177, 'number': 6844, 'closed': datetime.datetime(2024, 3, 8, 13, 42, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 8, 11, 26, 45, tzinfo=datetime.timezone.utc), 'time_taken': 8122.0, 'time_delta': '2:15:22', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1761457826, 'number': 6842, 'closed': datetime.datetime(2024, 3, 8, 9, 31, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 7, 16, 59, 18, tzinfo=datetime.timezone.utc), 'time_taken': 59509.0, 'time_delta': '16:31:49', 'additions': 7, 'deletions': 7, 'state': 'closed'}, {'id': 1761454271, 'number': 6841, 'closed': datetime.datetime(2024, 3, 8, 9, 43, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 7, 16, 57, 5, tzinfo=datetime.timezone.utc), 'time_taken': 60362.0, 'time_delta': '16:46:02', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 1761344484, 'number': 6840, 'closed': datetime.datetime(2024, 3, 7, 16, 55, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 7, 16, 1, 10, tzinfo=datetime.timezone.utc), 'time_taken': 3236.0, 'time_delta': '0:53:56', 'additions': 10, 'deletions': 10, 'state': 'closed'}, {'id': 1761292145, 'number': 6836, 'closed': datetime.datetime(2024, 3, 7, 19, 6, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 7, 15, 34, 15, tzinfo=datetime.timezone.utc), 'time_taken': 12712.0, 'time_delta': '3:31:52', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 1761291246, 'number': 6835, 'closed': datetime.datetime(2024, 3, 7, 18, 23, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 7, 15, 33, 46, tzinfo=datetime.timezone.utc), 'time_taken': 10161.0, 'time_delta': '2:49:21', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 1761279303, 'number': 6834, 'closed': datetime.datetime(2024, 3, 7, 15, 40, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 7, 15, 27, 30, tzinfo=datetime.timezone.utc), 'time_taken': 757.0, 'time_delta': '0:12:37', 'additions': 8, 'deletions': 8, 'state': 'closed'}, {'id': 1761184916, 'number': 6833, 'closed': datetime.datetime(2024, 3, 8, 10, 39, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 7, 14, 41, 33, tzinfo=datetime.timezone.utc), 'time_taken': 71854.0, 'time_delta': '19:57:34', 'additions': 15, 'deletions': 6, 'state': 'closed'}, {'id': 1761163863, 'number': 6832, 'closed': datetime.datetime(2024, 3, 8, 10, 21, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 7, 14, 31, 3, tzinfo=datetime.timezone.utc), 'time_taken': 71404.0, 'time_delta': '19:50:04', 'additions': 15, 'deletions': 6, 'state': 'closed'}, {'id': 1761030768, 'number': 6831, 'closed': datetime.datetime(2024, 3, 7, 16, 29, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 7, 13, 22, 53, tzinfo=datetime.timezone.utc), 'time_taken': 11174.0, 'time_delta': '3:06:14', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1761016421, 'number': 6830, 'closed': datetime.datetime(2024, 3, 7, 14, 10, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 7, 13, 14, 28, tzinfo=datetime.timezone.utc), 'time_taken': 3356.0, 'time_delta': '0:55:56', 'additions': 32, 'deletions': 32, 'state': 'closed'}, {'id': 1761003810, 'number': 6829, 'closed': datetime.datetime(2024, 3, 7, 15, 20, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 7, 13, 7, 7, tzinfo=datetime.timezone.utc), 'time_taken': 7997.0, 'time_delta': '2:13:17', 'additions': 36, 'deletions': 36, 'state': 'closed'}, {'id': 1760993264, 'number': 6828, 'closed': datetime.datetime(2024, 3, 7, 14, 9, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 7, 13, 1, 4, tzinfo=datetime.timezone.utc), 'time_taken': 4100.0, 'time_delta': '1:08:20', 'additions': 32, 'deletions': 32, 'state': 'closed'}, {'id': 1760981338, 'number': 6827, 'closed': datetime.datetime(2024, 3, 7, 13, 13, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 7, 12, 54, 3, tzinfo=datetime.timezone.utc), 'time_taken': 1177.0, 'time_delta': '0:19:37', 'additions': 32, 'deletions': 32, 'state': 'closed'}, {'id': 1760931155, 'number': 6824, 'closed': datetime.datetime(2024, 3, 7, 12, 38, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 7, 12, 24, 18, tzinfo=datetime.timezone.utc), 'time_taken': 861.0, 'time_delta': '0:14:21', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1760910288, 'number': 6823, 'closed': datetime.datetime(2024, 3, 7, 12, 25, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 7, 12, 11, 34, tzinfo=datetime.timezone.utc), 'time_taken': 845.0, 'time_delta': '0:14:05', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1760523030, 'number': 6821, 'closed': datetime.datetime(2024, 5, 21, 9, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 7, 8, 37, 52, tzinfo=datetime.timezone.utc), 'time_taken': 6481748.0, 'time_delta': '75 days, 0:29:08', 'additions': 3127, 'deletions': 1818, 'state': 'closed'}, {'id': 1757462032, 'number': 6816, 'closed': datetime.datetime(2024, 3, 6, 10, 34, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 5, 18, 24, 11, tzinfo=datetime.timezone.utc), 'time_taken': 58199.0, 'time_delta': '16:09:59', 'additions': 47, 'deletions': 0, 'state': 'closed'}, {'id': 1755322916, 'number': 6814, 'closed': datetime.datetime(2024, 3, 7, 13, 18, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 4, 18, 47, tzinfo=datetime.timezone.utc), 'time_taken': 239500.0, 'time_delta': '2 days, 18:31:40', 'additions': 168, 'deletions': 28, 'state': 'closed'}, {'id': 1755320118, 'number': 6813, 'closed': datetime.datetime(2024, 3, 7, 12, 44, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 4, 18, 45, 13, tzinfo=datetime.timezone.utc), 'time_taken': 237567.0, 'time_delta': '2 days, 17:59:27', 'additions': 168, 'deletions': 28, 'state': 'closed'}, {'id': 1742930320, 'number': 6800, 'closed': datetime.datetime(2024, 2, 26, 15, 34, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 26, 9, 8, 1, tzinfo=datetime.timezone.utc), 'time_taken': 23205.0, 'time_delta': '6:26:45', 'additions': 0, 'deletions': 8, 'state': 'closed'}, {'id': 1740338793, 'number': 6798, 'closed': datetime.datetime(2024, 2, 23, 10, 8, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 23, 8, 57, 57, tzinfo=datetime.timezone.utc), 'time_taken': 4213.0, 'time_delta': '1:10:13', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1740338596, 'number': 6797, 'closed': datetime.datetime(2024, 2, 23, 10, 8, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 23, 8, 57, 52, tzinfo=datetime.timezone.utc), 'time_taken': 4217.0, 'time_delta': '1:10:17', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1740338551, 'number': 6796, 'closed': datetime.datetime(2024, 2, 23, 10, 8, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 23, 8, 57, 49, tzinfo=datetime.timezone.utc), 'time_taken': 4221.0, 'time_delta': '1:10:21', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1739131298, 'number': 6793, 'closed': datetime.datetime(2024, 2, 23, 13, 29, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 22, 15, 18, 1, tzinfo=datetime.timezone.utc), 'time_taken': 79869.0, 'time_delta': '22:11:09', 'additions': 34, 'deletions': 35, 'state': 'closed'}, {'id': 1739050201, 'number': 6792, 'closed': datetime.datetime(2024, 3, 15, 9, 54, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 22, 14, 36, 7, tzinfo=datetime.timezone.utc), 'time_taken': 1883874.0, 'time_delta': '21 days, 19:17:54', 'additions': 93, 'deletions': 5, 'state': 'closed'}, {'id': 1738805572, 'number': 6791, 'closed': datetime.datetime(2024, 2, 22, 14, 13, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 22, 12, 19, 30, tzinfo=datetime.timezone.utc), 'time_taken': 6854.0, 'time_delta': '1:54:14', 'additions': 3954, 'deletions': 776, 'state': 'closed'}, {'id': 1738481075, 'number': 6790, 'closed': datetime.datetime(2024, 2, 22, 13, 0, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 22, 9, 18, 45, tzinfo=datetime.timezone.utc), 'time_taken': 13319.0, 'time_delta': '3:41:59', 'additions': 15, 'deletions': 10, 'state': 'closed'}, {'id': 1738466652, 'number': 6789, 'closed': datetime.datetime(2024, 2, 22, 13, 3, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 22, 9, 10, 14, tzinfo=datetime.timezone.utc), 'time_taken': 14010.0, 'time_delta': '3:53:30', 'additions': 15, 'deletions': 10, 'state': 'closed'}, {'id': 1738459187, 'number': 6788, 'closed': datetime.datetime(2024, 2, 22, 10, 40, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 22, 9, 5, 57, tzinfo=datetime.timezone.utc), 'time_taken': 5687.0, 'time_delta': '1:34:47', 'additions': 18, 'deletions': 18, 'state': 'closed'}, {'id': 1737460961, 'number': 6784, 'closed': datetime.datetime(2024, 3, 12, 12, 50, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 21, 18, 39, 4, tzinfo=datetime.timezone.utc), 'time_taken': 1707081.0, 'time_delta': '19 days, 18:11:21', 'additions': 590, 'deletions': 139, 'state': 'closed'}, {'id': 1736312117, 'number': 6779, 'closed': datetime.datetime(2024, 2, 21, 11, 42, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 21, 9, 7, 14, tzinfo=datetime.timezone.utc), 'time_taken': 9336.0, 'time_delta': '2:35:36', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 1733127641, 'number': 6775, 'closed': datetime.datetime(2024, 5, 14, 11, 24, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 19, 15, 27, 7, tzinfo=datetime.timezone.utc), 'time_taken': 7329463.0, 'time_delta': '84 days, 19:57:43', 'additions': 59, 'deletions': 38, 'state': 'closed'}, {'id': 1733015143, 'number': 6771, 'closed': datetime.datetime(2024, 3, 11, 13, 7, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 19, 14, 32, 18, tzinfo=datetime.timezone.utc), 'time_taken': 1809328.0, 'time_delta': '20 days, 22:35:28', 'additions': 205, 'deletions': 212, 'state': 'closed'}, {'id': 1732743236, 'number': 6770, 'closed': datetime.datetime(2024, 2, 19, 15, 2, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 19, 11, 59, 16, tzinfo=datetime.timezone.utc), 'time_taken': 10995.0, 'time_delta': '3:03:15', 'additions': 15, 'deletions': 0, 'state': 'closed'}, {'id': 1730709270, 'number': 6764, 'closed': datetime.datetime(2024, 2, 20, 9, 6, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 17, 10, 10, 4, tzinfo=datetime.timezone.utc), 'time_taken': 255391.0, 'time_delta': '2 days, 22:56:31', 'additions': 181, 'deletions': 109, 'state': 'closed'}, {'id': 1730700636, 'number': 6763, 'closed': datetime.datetime(2024, 2, 19, 20, 48, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 17, 9, 34, 1, tzinfo=datetime.timezone.utc), 'time_taken': 213274.0, 'time_delta': '2 days, 11:14:34', 'additions': 663, 'deletions': 661, 'state': 'closed'}, {'id': 1730192267, 'number': 6761, 'closed': datetime.datetime(2024, 2, 22, 12, 40, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 16, 20, 1, 33, tzinfo=datetime.timezone.utc), 'time_taken': 491951.0, 'time_delta': '5 days, 16:39:11', 'additions': 426, 'deletions': 167, 'state': 'closed'}, {'id': 1727758961, 'number': 6760, 'closed': datetime.datetime(2024, 2, 20, 12, 9, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 15, 14, 12, 51, tzinfo=datetime.timezone.utc), 'time_taken': 424604.0, 'time_delta': '4 days, 21:56:44', 'additions': 100, 'deletions': 11, 'state': 'closed'}, {'id': 1727312942, 'number': 6759, 'closed': datetime.datetime(2024, 2, 15, 12, 3, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 15, 10, 21, 21, tzinfo=datetime.timezone.utc), 'time_taken': 6100.0, 'time_delta': '1:41:40', 'additions': 21, 'deletions': 17, 'state': 'closed'}, {'id': 1720740886, 'number': 6751, 'closed': datetime.datetime(2024, 2, 15, 13, 32, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 10, 20, 44, 31, tzinfo=datetime.timezone.utc), 'time_taken': 406089.0, 'time_delta': '4 days, 16:48:09', 'additions': 174, 'deletions': 1391, 'state': 'closed'}, {'id': 1720642955, 'number': 6750, 'closed': datetime.datetime(2024, 2, 12, 9, 51, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 10, 16, 23, 40, tzinfo=datetime.timezone.utc), 'time_taken': 149272.0, 'time_delta': '1 day, 17:27:52', 'additions': 7, 'deletions': 506, 'state': 'closed'}, {'id': 1720596164, 'number': 6749, 'closed': datetime.datetime(2024, 4, 15, 16, 18, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 10, 15, 23, 7, tzinfo=datetime.timezone.utc), 'time_taken': 5619314.0, 'time_delta': '65 days, 0:55:14', 'additions': 1571, 'deletions': 945, 'state': 'closed'}, {'id': 1717766314, 'number': 6745, 'closed': datetime.datetime(2024, 2, 8, 15, 48, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 8, 14, 57, 1, tzinfo=datetime.timezone.utc), 'time_taken': 3089.0, 'time_delta': '0:51:29', 'additions': 295, 'deletions': 294, 'state': 'closed'}, {'id': 1717511891, 'number': 6742, 'closed': datetime.datetime(2024, 2, 8, 12, 49, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 8, 12, 38, 45, tzinfo=datetime.timezone.utc), 'time_taken': 634.0, 'time_delta': '0:10:34', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1717255253, 'number': 6732, 'closed': datetime.datetime(2024, 2, 8, 10, 47, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 8, 10, 21, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1569.0, 'time_delta': '0:26:09', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1717193981, 'number': 6731, 'closed': None, 'created': datetime.datetime(2024, 2, 8, 9, 46, 46, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1, 'deletions': 58, 'state': 'open'}, {'id': 1717186933, 'number': 6730, 'closed': datetime.datetime(2024, 2, 8, 13, 21, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 8, 9, 42, 58, tzinfo=datetime.timezone.utc), 'time_taken': 13113.0, 'time_delta': '3:38:33', 'additions': 7, 'deletions': 814, 'state': 'closed'}, {'id': 1715276561, 'number': 6724, 'closed': datetime.datetime(2024, 2, 7, 13, 55, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 7, 9, 34, 52, tzinfo=datetime.timezone.utc), 'time_taken': 15638.0, 'time_delta': '4:20:38', 'additions': 203, 'deletions': 5, 'state': 'closed'}, {'id': 1715181538, 'number': 6723, 'closed': datetime.datetime(2024, 3, 22, 20, 51, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 7, 8, 40, 29, tzinfo=datetime.timezone.utc), 'time_taken': 3845465.0, 'time_delta': '44 days, 12:11:05', 'additions': 27, 'deletions': 0, 'state': 'closed'}, {'id': 1713812663, 'number': 6719, 'closed': datetime.datetime(2024, 2, 12, 16, 18, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 6, 14, 29, 46, tzinfo=datetime.timezone.utc), 'time_taken': 524947.0, 'time_delta': '6 days, 1:49:07', 'additions': 137, 'deletions': 0, 'state': 'closed'}, {'id': 1708813475, 'number': 6713, 'closed': datetime.datetime(2024, 2, 7, 17, 22, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 2, 16, 47, 34, tzinfo=datetime.timezone.utc), 'time_taken': 434098.0, 'time_delta': '5 days, 0:34:58', 'additions': 12, 'deletions': 6, 'state': 'closed'}, {'id': 1708138808, 'number': 6708, 'closed': datetime.datetime(2024, 2, 5, 13, 35, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 2, 10, 20, 46, tzinfo=datetime.timezone.utc), 'time_taken': 270895.0, 'time_delta': '3 days, 3:14:55', 'additions': 1, 'deletions': 732, 'state': 'closed'}, {'id': 1706605802, 'number': 6706, 'closed': datetime.datetime(2024, 2, 2, 9, 46, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 1, 16, 17, 33, tzinfo=datetime.timezone.utc), 'time_taken': 62935.0, 'time_delta': '17:28:55', 'additions': 29, 'deletions': 26, 'state': 'closed'}, {'id': 1706598290, 'number': 6705, 'closed': datetime.datetime(2024, 2, 1, 16, 16, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 1, 16, 13, 9, tzinfo=datetime.timezone.utc), 'time_taken': 199.0, 'time_delta': '0:03:19', 'additions': 31, 'deletions': 24, 'state': 'closed'}, {'id': 1706133629, 'number': 6699, 'closed': datetime.datetime(2024, 2, 1, 14, 19, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 1, 12, 15, 24, tzinfo=datetime.timezone.utc), 'time_taken': 7434.0, 'time_delta': '2:03:54', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 1705777870, 'number': 6694, 'closed': datetime.datetime(2024, 2, 1, 9, 33, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 1, 9, 20, 43, tzinfo=datetime.timezone.utc), 'time_taken': 755.0, 'time_delta': '0:12:35', 'additions': 5, 'deletions': 4, 'state': 'closed'}, {'id': 1703780950, 'number': 6685, 'closed': datetime.datetime(2024, 1, 31, 11, 3, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 31, 10, 25, 15, tzinfo=datetime.timezone.utc), 'time_taken': 2293.0, 'time_delta': '0:38:13', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 1703649340, 'number': 6683, 'closed': datetime.datetime(2024, 1, 31, 11, 52, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 31, 9, 10, 14, tzinfo=datetime.timezone.utc), 'time_taken': 9734.0, 'time_delta': '2:42:14', 'additions': 86, 'deletions': 30, 'state': 'closed'}, {'id': 1702146391, 'number': 6677, 'closed': datetime.datetime(2024, 1, 30, 15, 34, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 30, 13, 57, 24, tzinfo=datetime.timezone.utc), 'time_taken': 5847.0, 'time_delta': '1:37:27', 'additions': 7, 'deletions': 88, 'state': 'closed'}, {'id': 1702014205, 'number': 6676, 'closed': datetime.datetime(2024, 1, 30, 17, 13, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 30, 12, 45, 59, tzinfo=datetime.timezone.utc), 'time_taken': 16072.0, 'time_delta': '4:27:52', 'additions': 102, 'deletions': 9, 'state': 'closed'}, {'id': 1698717367, 'number': 6672, 'closed': datetime.datetime(2024, 1, 29, 10, 26, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 28, 9, 48, 31, tzinfo=datetime.timezone.utc), 'time_taken': 88656.0, 'time_delta': '1 day, 0:37:36', 'additions': 1110, 'deletions': 1378, 'state': 'closed'}, {'id': 1698502823, 'number': 6671, 'closed': datetime.datetime(2024, 2, 8, 16, 54, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 27, 21, 19, 19, tzinfo=datetime.timezone.utc), 'time_taken': 1020912.0, 'time_delta': '11 days, 19:35:12', 'additions': 263, 'deletions': 146, 'state': 'closed'}, {'id': 1698416288, 'number': 6670, 'closed': datetime.datetime(2024, 1, 29, 13, 0, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 27, 18, 39, 22, tzinfo=datetime.timezone.utc), 'time_taken': 152442.0, 'time_delta': '1 day, 18:20:42', 'additions': 2, 'deletions': 781, 'state': 'closed'}, {'id': 1693663204, 'number': 6663, 'closed': datetime.datetime(2024, 1, 25, 11, 57, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 24, 13, 2, 8, tzinfo=datetime.timezone.utc), 'time_taken': 82512.0, 'time_delta': '22:55:12', 'additions': 19, 'deletions': 11886, 'state': 'closed'}, {'id': 1666070778, 'number': 6608, 'closed': datetime.datetime(2024, 1, 5, 15, 23, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 5, 12, 0, 32, tzinfo=datetime.timezone.utc), 'time_taken': 12171.0, 'time_delta': '3:22:51', 'additions': 209, 'deletions': 2, 'state': 'closed'}, {'id': 1666006544, 'number': 6607, 'closed': datetime.datetime(2024, 1, 5, 15, 23, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 5, 11, 6, 17, tzinfo=datetime.timezone.utc), 'time_taken': 15419.0, 'time_delta': '4:16:59', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1666005480, 'number': 6606, 'closed': datetime.datetime(2024, 1, 5, 15, 23, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 5, 11, 5, 24, tzinfo=datetime.timezone.utc), 'time_taken': 15465.0, 'time_delta': '4:17:45', 'additions': 2, 'deletions': 11, 'state': 'closed'}, {'id': 1666004239, 'number': 6605, 'closed': datetime.datetime(2024, 1, 5, 20, 5, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 5, 11, 4, 21, tzinfo=datetime.timezone.utc), 'time_taken': 32482.0, 'time_delta': '9:01:22', 'additions': 14, 'deletions': 103, 'state': 'closed'}, {'id': 1666003078, 'number': 6604, 'closed': datetime.datetime(2024, 1, 5, 15, 9, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 5, 11, 3, 25, tzinfo=datetime.timezone.utc), 'time_taken': 14751.0, 'time_delta': '4:05:51', 'additions': 3, 'deletions': 31, 'state': 'closed'}, {'id': 1666001472, 'number': 6603, 'closed': datetime.datetime(2024, 1, 5, 15, 51, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 5, 11, 2, 3, tzinfo=datetime.timezone.utc), 'time_taken': 17346.0, 'time_delta': '4:49:06', 'additions': 24, 'deletions': 21, 'state': 'closed'}, {'id': 1664891339, 'number': 6599, 'closed': datetime.datetime(2024, 1, 5, 15, 9, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 4, 15, 35, 46, tzinfo=datetime.timezone.utc), 'time_taken': 84803.0, 'time_delta': '23:33:23', 'additions': 18, 'deletions': 17, 'state': 'closed'}, {'id': 1664456567, 'number': 6596, 'closed': datetime.datetime(2024, 1, 4, 13, 56, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 4, 10, 27, 3, tzinfo=datetime.timezone.utc), 'time_taken': 12539.0, 'time_delta': '3:28:59', 'additions': 9, 'deletions': 10, 'state': 'closed'}, {'id': 1663594604, 'number': 6593, 'closed': datetime.datetime(2024, 1, 4, 13, 36, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 3, 17, 30, 29, tzinfo=datetime.timezone.utc), 'time_taken': 72334.0, 'time_delta': '20:05:34', 'additions': 53, 'deletions': 115, 'state': 'closed'}, {'id': 1663519207, 'number': 6592, 'closed': datetime.datetime(2024, 1, 4, 13, 18, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 3, 16, 26, 16, tzinfo=datetime.timezone.utc), 'time_taken': 75106.0, 'time_delta': '20:51:46', 'additions': 71, 'deletions': 0, 'state': 'closed'}, {'id': 1663394733, 'number': 6590, 'closed': datetime.datetime(2024, 1, 4, 13, 40, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 3, 14, 55, 2, tzinfo=datetime.timezone.utc), 'time_taken': 81914.0, 'time_delta': '22:45:14', 'additions': 42, 'deletions': 6, 'state': 'closed'}, {'id': 1663387570, 'number': 6589, 'closed': datetime.datetime(2024, 1, 3, 15, 4, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 3, 14, 49, 58, tzinfo=datetime.timezone.utc), 'time_taken': 865.0, 'time_delta': '0:14:25', 'additions': 59, 'deletions': 60, 'state': 'closed'}, {'id': 1662815054, 'number': 6587, 'closed': datetime.datetime(2024, 1, 3, 17, 29, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 3, 8, 56, 38, tzinfo=datetime.timezone.utc), 'time_taken': 30765.0, 'time_delta': '8:32:45', 'additions': 1981, 'deletions': 3086, 'state': 'closed'}, {'id': 1661768245, 'number': 6583, 'closed': datetime.datetime(2024, 1, 2, 12, 37, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 2, 12, 27, 42, tzinfo=datetime.timezone.utc), 'time_taken': 598.0, 'time_delta': '0:09:58', 'additions': 12, 'deletions': 12, 'state': 'closed'}, {'id': 1661565430, 'number': 6578, 'closed': datetime.datetime(2024, 1, 2, 9, 32, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 2, 9, 2, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1787.0, 'time_delta': '0:29:47', 'additions': 65, 'deletions': 65, 'state': 'closed'}, {'id': 1651742526, 'number': 6563, 'closed': datetime.datetime(2023, 12, 27, 10, 0, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 20, 9, 36, 45, tzinfo=datetime.timezone.utc), 'time_taken': 606195.0, 'time_delta': '7 days, 0:23:15', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1650697046, 'number': 6561, 'closed': datetime.datetime(2023, 12, 27, 9, 59, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 19, 16, 31, 39, tzinfo=datetime.timezone.utc), 'time_taken': 667694.0, 'time_delta': '7 days, 17:28:14', 'additions': 483, 'deletions': 413, 'state': 'closed'}, {'id': 1632939913, 'number': 6535, 'closed': datetime.datetime(2023, 12, 7, 12, 15, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 6, 17, 18, 33, tzinfo=datetime.timezone.utc), 'time_taken': 68193.0, 'time_delta': '18:56:33', 'additions': 200, 'deletions': 298, 'state': 'closed'}, {'id': 1632541938, 'number': 6533, 'closed': datetime.datetime(2023, 12, 6, 15, 24, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 6, 13, 45, 22, tzinfo=datetime.timezone.utc), 'time_taken': 5962.0, 'time_delta': '1:39:22', 'additions': 21, 'deletions': 12, 'state': 'closed'}, {'id': 1632523261, 'number': 6532, 'closed': datetime.datetime(2023, 12, 7, 11, 33, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 6, 13, 35, 18, tzinfo=datetime.timezone.utc), 'time_taken': 79075.0, 'time_delta': '21:57:55', 'additions': 128, 'deletions': 85, 'state': 'closed'}, {'id': 1632461677, 'number': 6531, 'closed': datetime.datetime(2023, 12, 6, 13, 46, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 6, 13, 0, 57, tzinfo=datetime.timezone.utc), 'time_taken': 2747.0, 'time_delta': '0:45:47', 'additions': 126, 'deletions': 109, 'state': 'closed'}, {'id': 1617643247, 'number': 6517, 'closed': datetime.datetime(2023, 11, 27, 16, 34, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 27, 9, 56, 43, tzinfo=datetime.timezone.utc), 'time_taken': 23843.0, 'time_delta': '6:37:23', 'additions': 13, 'deletions': 14, 'state': 'closed'}, {'id': 1615831043, 'number': 6514, 'closed': datetime.datetime(2023, 11, 27, 9, 41, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 24, 13, 56, 4, tzinfo=datetime.timezone.utc), 'time_taken': 243908.0, 'time_delta': '2 days, 19:45:08', 'additions': 366, 'deletions': 346, 'state': 'closed'}, {'id': 1615816627, 'number': 6513, 'closed': datetime.datetime(2023, 11, 27, 9, 28, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 24, 13, 44, 42, tzinfo=datetime.timezone.utc), 'time_taken': 243825.0, 'time_delta': '2 days, 19:43:45', 'additions': 417, 'deletions': 405, 'state': 'closed'}, {'id': 1615748347, 'number': 6512, 'closed': datetime.datetime(2023, 11, 27, 9, 26, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 24, 12, 49, 40, tzinfo=datetime.timezone.utc), 'time_taken': 246986.0, 'time_delta': '2 days, 20:36:26', 'additions': 15, 'deletions': 15, 'state': 'closed'}, {'id': 1606441169, 'number': 6498, 'closed': datetime.datetime(2023, 11, 22, 14, 0, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 17, 13, 25, 35, tzinfo=datetime.timezone.utc), 'time_taken': 434106.0, 'time_delta': '5 days, 0:35:06', 'additions': 25, 'deletions': 4, 'state': 'closed'}, {'id': 1604861299, 'number': 6493, 'closed': datetime.datetime(2023, 11, 17, 12, 26, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 16, 17, 16, 59, tzinfo=datetime.timezone.utc), 'time_taken': 68993.0, 'time_delta': '19:09:53', 'additions': 55, 'deletions': 97, 'state': 'closed'}, {'id': 1604107350, 'number': 6491, 'closed': datetime.datetime(2023, 11, 27, 18, 52, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 16, 10, 23, 18, tzinfo=datetime.timezone.utc), 'time_taken': 980928.0, 'time_delta': '11 days, 8:28:48', 'additions': 18, 'deletions': 2, 'state': 'closed'}, {'id': 1603278197, 'number': 6490, 'closed': datetime.datetime(2023, 11, 16, 8, 46, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 15, 21, 29, 39, tzinfo=datetime.timezone.utc), 'time_taken': 40582.0, 'time_delta': '11:16:22', 'additions': 57, 'deletions': 60, 'state': 'closed'}, {'id': 1602578478, 'number': 6487, 'closed': datetime.datetime(2023, 11, 15, 14, 34, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 15, 13, 50, 8, tzinfo=datetime.timezone.utc), 'time_taken': 2640.0, 'time_delta': '0:44:00', 'additions': 263, 'deletions': 249, 'state': 'closed'}, {'id': 1584231785, 'number': 6467, 'closed': datetime.datetime(2023, 11, 5, 20, 5, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 2, 12, 29, 32, tzinfo=datetime.timezone.utc), 'time_taken': 286587.0, 'time_delta': '3 days, 7:36:27', 'additions': 16, 'deletions': 19, 'state': 'closed'}, {'id': 1577811890, 'number': 6455, 'closed': datetime.datetime(2024, 2, 12, 10, 9, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 29, 10, 9, 46, tzinfo=datetime.timezone.utc), 'time_taken': 9158387.0, 'time_delta': '105 days, 23:59:47', 'additions': 458, 'deletions': 1685, 'state': 'closed'}, {'id': 1576419594, 'number': 6451, 'closed': datetime.datetime(2023, 10, 27, 13, 4, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 27, 11, 25, 1, tzinfo=datetime.timezone.utc), 'time_taken': 5956.0, 'time_delta': '1:39:16', 'additions': 13, 'deletions': 10, 'state': 'closed'}, {'id': 1576413206, 'number': 6450, 'closed': datetime.datetime(2023, 10, 27, 13, 3, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 27, 11, 20, 17, tzinfo=datetime.timezone.utc), 'time_taken': 6180.0, 'time_delta': '1:43:00', 'additions': 16, 'deletions': 13, 'state': 'closed'}, {'id': 1576405824, 'number': 6449, 'closed': datetime.datetime(2023, 10, 27, 13, 2, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 27, 11, 14, 45, tzinfo=datetime.timezone.utc), 'time_taken': 6483.0, 'time_delta': '1:48:03', 'additions': 20, 'deletions': 20, 'state': 'closed'}, {'id': 1575018732, 'number': 6446, 'closed': datetime.datetime(2023, 10, 26, 15, 45, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 26, 14, 45, 12, tzinfo=datetime.timezone.utc), 'time_taken': 3591.0, 'time_delta': '0:59:51', 'additions': 32, 'deletions': 32, 'state': 'closed'}, {'id': 1575016163, 'number': 6445, 'closed': datetime.datetime(2023, 10, 26, 14, 44, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 26, 14, 43, 58, tzinfo=datetime.timezone.utc), 'time_taken': 28.0, 'time_delta': '0:00:28', 'additions': 1611, 'deletions': 1537, 'state': 'closed'}, {'id': 1574995508, 'number': 6444, 'closed': datetime.datetime(2023, 10, 27, 10, 40, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 26, 14, 32, 25, tzinfo=datetime.timezone.utc), 'time_taken': 72472.0, 'time_delta': '20:07:52', 'additions': 47, 'deletions': 47, 'state': 'closed'}, {'id': 1566788568, 'number': 6438, 'closed': datetime.datetime(2023, 10, 23, 12, 58, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 20, 14, 19, 43, tzinfo=datetime.timezone.utc), 'time_taken': 254314.0, 'time_delta': '2 days, 22:38:34', 'additions': 179, 'deletions': 953, 'state': 'closed'}, {'id': 1566785517, 'number': 6437, 'closed': datetime.datetime(2023, 10, 20, 14, 18, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 20, 14, 18, 22, tzinfo=datetime.timezone.utc), 'time_taken': 6.0, 'time_delta': '0:00:06', 'additions': 1608, 'deletions': 1534, 'state': 'closed'}, {'id': 1566768616, 'number': 6436, 'closed': datetime.datetime(2023, 10, 23, 12, 57, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 20, 14, 7, 50, tzinfo=datetime.timezone.utc), 'time_taken': 254967.0, 'time_delta': '2 days, 22:49:27', 'additions': 357, 'deletions': 930, 'state': 'closed'}, {'id': 1564189149, 'number': 6428, 'closed': datetime.datetime(2023, 10, 19, 8, 40, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 19, 7, 19, 57, tzinfo=datetime.timezone.utc), 'time_taken': 4825.0, 'time_delta': '1:20:25', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1550527301, 'number': 6406, 'closed': datetime.datetime(2023, 10, 18, 8, 40, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 10, 18, 43, 50, tzinfo=datetime.timezone.utc), 'time_taken': 655006.0, 'time_delta': '7 days, 13:56:46', 'additions': 530, 'deletions': 3, 'state': 'closed'}, {'id': 1530798857, 'number': 6374, 'closed': datetime.datetime(2023, 9, 26, 16, 13, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 26, 15, 3, 14, tzinfo=datetime.timezone.utc), 'time_taken': 4235.0, 'time_delta': '1:10:35', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1530796656, 'number': 6373, 'closed': datetime.datetime(2023, 9, 26, 15, 2, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 26, 15, 2, 5, tzinfo=datetime.timezone.utc), 'time_taken': 9.0, 'time_delta': '0:00:09', 'additions': 849, 'deletions': 557, 'state': 'closed'}, {'id': 1530784351, 'number': 6372, 'closed': datetime.datetime(2023, 9, 26, 15, 21, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 26, 14, 55, 10, tzinfo=datetime.timezone.utc), 'time_taken': 1599.0, 'time_delta': '0:26:39', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1530561430, 'number': 6369, 'closed': datetime.datetime(2023, 9, 26, 13, 39, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 26, 12, 58, 1, tzinfo=datetime.timezone.utc), 'time_taken': 2507.0, 'time_delta': '0:41:47', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1530539630, 'number': 6368, 'closed': datetime.datetime(2023, 9, 26, 12, 54, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 26, 12, 44, 54, tzinfo=datetime.timezone.utc), 'time_taken': 594.0, 'time_delta': '0:09:54', 'additions': 28, 'deletions': 28, 'state': 'closed'}, {'id': 1530536981, 'number': 6367, 'closed': datetime.datetime(2023, 9, 26, 12, 45, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 26, 12, 43, 16, tzinfo=datetime.timezone.utc), 'time_taken': 116.0, 'time_delta': '0:01:56', 'additions': 848, 'deletions': 556, 'state': 'closed'}, {'id': 1530439252, 'number': 6366, 'closed': datetime.datetime(2023, 9, 26, 12, 7, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 26, 11, 41, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1585.0, 'time_delta': '0:26:25', 'additions': 28, 'deletions': 28, 'state': 'closed'}, {'id': 1530098814, 'number': 6362, 'closed': datetime.datetime(2023, 9, 26, 12, 45, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 26, 8, 7, 40, tzinfo=datetime.timezone.utc), 'time_taken': 16660.0, 'time_delta': '4:37:40', 'additions': 28, 'deletions': 28, 'state': 'closed'}, {'id': 1523052781, 'number': 6354, 'closed': datetime.datetime(2023, 9, 25, 14, 27, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 20, 12, 49, 29, tzinfo=datetime.timezone.utc), 'time_taken': 437905.0, 'time_delta': '5 days, 1:38:25', 'additions': 342, 'deletions': 9, 'state': 'closed'}, {'id': 1522696193, 'number': 6352, 'closed': datetime.datetime(2023, 9, 22, 11, 44, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 20, 8, 59, 15, tzinfo=datetime.timezone.utc), 'time_taken': 182720.0, 'time_delta': '2 days, 2:45:20', 'additions': 302, 'deletions': 56, 'state': 'closed'}, {'id': 1515696577, 'number': 6348, 'closed': datetime.datetime(2023, 9, 28, 12, 24, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 14, 13, 15, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1206560.0, 'time_delta': '13 days, 23:09:20', 'additions': 22, 'deletions': 164, 'state': 'closed'}, {'id': 1514455670, 'number': 6345, 'closed': datetime.datetime(2023, 10, 5, 12, 44, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 13, 19, 44, 17, tzinfo=datetime.timezone.utc), 'time_taken': 1875630.0, 'time_delta': '21 days, 17:00:30', 'additions': 2062, 'deletions': 322, 'state': 'closed'}, {'id': 1514343663, 'number': 6344, 'closed': datetime.datetime(2023, 9, 28, 10, 48, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 13, 18, 18, 42, tzinfo=datetime.timezone.utc), 'time_taken': 1269002.0, 'time_delta': '14 days, 16:30:02', 'additions': 835, 'deletions': 1774, 'state': 'closed'}, {'id': 1512222390, 'number': 6339, 'closed': datetime.datetime(2023, 9, 12, 14, 26, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 12, 14, 15, 43, tzinfo=datetime.timezone.utc), 'time_taken': 633.0, 'time_delta': '0:10:33', 'additions': 44, 'deletions': 43, 'state': 'closed'}, {'id': 1511735264, 'number': 6337, 'closed': datetime.datetime(2023, 9, 12, 11, 57, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 12, 9, 29, 54, tzinfo=datetime.timezone.utc), 'time_taken': 8871.0, 'time_delta': '2:27:51', 'additions': 41, 'deletions': 39, 'state': 'closed'}, {'id': 1511698649, 'number': 6336, 'closed': datetime.datetime(2023, 9, 12, 9, 28, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 12, 9, 8, 20, tzinfo=datetime.timezone.utc), 'time_taken': 1206.0, 'time_delta': '0:20:06', 'additions': 41, 'deletions': 39, 'state': 'closed'}, {'id': 1511504538, 'number': 6333, 'closed': datetime.datetime(2023, 9, 12, 8, 44, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 12, 7, 6, 12, tzinfo=datetime.timezone.utc), 'time_taken': 5884.0, 'time_delta': '1:38:04', 'additions': 8, 'deletions': 8, 'state': 'closed'}, {'id': 1511483347, 'number': 6332, 'closed': datetime.datetime(2023, 9, 12, 13, 21, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 12, 6, 49, 20, tzinfo=datetime.timezone.utc), 'time_taken': 23516.0, 'time_delta': '6:31:56', 'additions': 454, 'deletions': 496, 'state': 'closed'}, {'id': 1510415018, 'number': 6330, 'closed': datetime.datetime(2023, 9, 19, 17, 6, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 11, 14, 0, 59, tzinfo=datetime.timezone.utc), 'time_taken': 702349.0, 'time_delta': '8 days, 3:05:49', 'additions': 18, 'deletions': 12, 'state': 'closed'}, {'id': 1510201519, 'number': 6328, 'closed': datetime.datetime(2023, 9, 27, 9, 37, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 11, 12, 1, 17, tzinfo=datetime.timezone.utc), 'time_taken': 1373754.0, 'time_delta': '15 days, 21:35:54', 'additions': 89, 'deletions': 5, 'state': 'closed'}, {'id': 1498777130, 'number': 6320, 'closed': datetime.datetime(2023, 9, 1, 12, 38, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 1, 12, 21, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1032.0, 'time_delta': '0:17:12', 'additions': 14, 'deletions': 14, 'state': 'closed'}, {'id': 1498713377, 'number': 6319, 'closed': datetime.datetime(2023, 9, 1, 11, 58, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 1, 11, 30, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1660.0, 'time_delta': '0:27:40', 'additions': 7, 'deletions': 7, 'state': 'closed'}, {'id': 1498631583, 'number': 6316, 'closed': datetime.datetime(2023, 9, 1, 11, 17, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 1, 10, 24, 27, tzinfo=datetime.timezone.utc), 'time_taken': 3193.0, 'time_delta': '0:53:13', 'additions': 0, 'deletions': 2, 'state': 'closed'}, {'id': 1498407712, 'number': 6315, 'closed': datetime.datetime(2023, 9, 28, 10, 52, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 1, 7, 36, 40, tzinfo=datetime.timezone.utc), 'time_taken': 2344543.0, 'time_delta': '27 days, 3:15:43', 'additions': 233, 'deletions': 10, 'state': 'closed'}, {'id': 1497415716, 'number': 6314, 'closed': datetime.datetime(2023, 9, 28, 10, 52, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 31, 15, 45, 35, tzinfo=datetime.timezone.utc), 'time_taken': 2401595.0, 'time_delta': '27 days, 19:06:35', 'additions': 26, 'deletions': 4, 'state': 'closed'}, {'id': 1491526202, 'number': 6304, 'closed': datetime.datetime(2023, 8, 28, 15, 44, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 28, 7, 18, 1, tzinfo=datetime.timezone.utc), 'time_taken': 30401.0, 'time_delta': '8:26:41', 'additions': 206, 'deletions': 207, 'state': 'closed'}, {'id': 1490771698, 'number': 6302, 'closed': datetime.datetime(2023, 9, 1, 10, 38, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 26, 19, 24, 53, tzinfo=datetime.timezone.utc), 'time_taken': 486826.0, 'time_delta': '5 days, 15:13:46', 'additions': 524, 'deletions': 308, 'state': 'closed'}, {'id': 1489931931, 'number': 6301, 'closed': datetime.datetime(2023, 8, 25, 17, 48, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 25, 15, 38, 36, tzinfo=datetime.timezone.utc), 'time_taken': 7822.0, 'time_delta': '2:10:22', 'additions': 496, 'deletions': 471, 'state': 'closed'}, {'id': 1489722690, 'number': 6300, 'closed': datetime.datetime(2023, 8, 25, 13, 43, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 25, 13, 10, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1941.0, 'time_delta': '0:32:21', 'additions': 17, 'deletions': 17, 'state': 'closed'}, {'id': 1489506833, 'number': 6299, 'closed': datetime.datetime(2023, 8, 25, 13, 3, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 25, 10, 30, 24, tzinfo=datetime.timezone.utc), 'time_taken': 9167.0, 'time_delta': '2:32:47', 'additions': 57, 'deletions': 20, 'state': 'closed'}, {'id': 1489262780, 'number': 6298, 'closed': datetime.datetime(2023, 8, 30, 17, 25, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 25, 7, 43, 35, tzinfo=datetime.timezone.utc), 'time_taken': 466930.0, 'time_delta': '5 days, 9:42:10', 'additions': 67, 'deletions': 39, 'state': 'closed'}, {'id': 1486340001, 'number': 6291, 'closed': datetime.datetime(2023, 8, 24, 13, 11, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 23, 12, 27, tzinfo=datetime.timezone.utc), 'time_taken': 89057.0, 'time_delta': '1 day, 0:44:17', 'additions': 6, 'deletions': 14, 'state': 'closed'}, {'id': 1486327537, 'number': 6290, 'closed': datetime.datetime(2023, 8, 24, 10, 57, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 23, 12, 18, 22, tzinfo=datetime.timezone.utc), 'time_taken': 81535.0, 'time_delta': '22:38:55', 'additions': 39, 'deletions': 14, 'state': 'closed'}, {'id': 1486293985, 'number': 6289, 'closed': datetime.datetime(2023, 8, 24, 14, 49, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 23, 11, 55, 31, tzinfo=datetime.timezone.utc), 'time_taken': 96857.0, 'time_delta': '1 day, 2:54:17', 'additions': 4183, 'deletions': 29, 'state': 'closed'}, {'id': 1483293939, 'number': 6287, 'closed': datetime.datetime(2023, 8, 25, 10, 36, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 21, 17, 29, 18, tzinfo=datetime.timezone.utc), 'time_taken': 320813.0, 'time_delta': '3 days, 17:06:53', 'additions': 1675, 'deletions': 1672, 'state': 'closed'}, {'id': 1476371512, 'number': 6277, 'closed': datetime.datetime(2024, 3, 22, 16, 12, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 15, 19, 21, 3, tzinfo=datetime.timezone.utc), 'time_taken': 18996691.0, 'time_delta': '219 days, 20:51:31', 'additions': 79, 'deletions': 37, 'state': 'closed'}, {'id': 1476361642, 'number': 6276, 'closed': datetime.datetime(2023, 8, 17, 9, 43, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 15, 19, 13, 23, tzinfo=datetime.timezone.utc), 'time_taken': 138608.0, 'time_delta': '1 day, 14:30:08', 'additions': 56, 'deletions': 185, 'state': 'closed'}, {'id': 1476341616, 'number': 6275, 'closed': datetime.datetime(2023, 8, 16, 10, 18, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 15, 18, 55, 56, tzinfo=datetime.timezone.utc), 'time_taken': 55330.0, 'time_delta': '15:22:10', 'additions': 38, 'deletions': 41, 'state': 'closed'}, {'id': 1469838603, 'number': 6263, 'closed': datetime.datetime(2023, 8, 10, 9, 44, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 10, 7, 49, 38, tzinfo=datetime.timezone.utc), 'time_taken': 6884.0, 'time_delta': '1:54:44', 'additions': 22, 'deletions': 4, 'state': 'closed'}, {'id': 1457683882, 'number': 6247, 'closed': datetime.datetime(2023, 8, 1, 17, 12, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 9, 4, 1, tzinfo=datetime.timezone.utc), 'time_taken': 29308.0, 'time_delta': '8:08:28', 'additions': 116, 'deletions': 72, 'state': 'closed'}, {'id': 1456367523, 'number': 6244, 'closed': datetime.datetime(2023, 8, 18, 15, 10, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 31, 14, 31, 18, tzinfo=datetime.timezone.utc), 'time_taken': 1557528.0, 'time_delta': '18 days, 0:38:48', 'additions': 532, 'deletions': 364, 'state': 'closed'}, {'id': 1456357281, 'number': 6243, 'closed': datetime.datetime(2023, 8, 17, 11, 2, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 31, 14, 25, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1456651.0, 'time_delta': '16 days, 20:37:31', 'additions': 33, 'deletions': 14, 'state': 'closed'}, {'id': 1456172581, 'number': 6242, 'closed': datetime.datetime(2023, 8, 10, 13, 37, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 31, 12, 38, 28, tzinfo=datetime.timezone.utc), 'time_taken': 867521.0, 'time_delta': '10 days, 0:58:41', 'additions': 841, 'deletions': 475, 'state': 'closed'}, {'id': 1448956256, 'number': 6232, 'closed': datetime.datetime(2023, 7, 26, 11, 35, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 25, 18, 33, 51, tzinfo=datetime.timezone.utc), 'time_taken': 61277.0, 'time_delta': '17:01:17', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1427333966, 'number': 6208, 'closed': datetime.datetime(2023, 7, 10, 12, 44, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 10, 11, 31, 22, tzinfo=datetime.timezone.utc), 'time_taken': 4369.0, 'time_delta': '1:12:49', 'additions': 30, 'deletions': 7, 'state': 'closed'}, {'id': 1427333346, 'number': 6207, 'closed': datetime.datetime(2023, 7, 10, 12, 46, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 10, 11, 30, 55, tzinfo=datetime.timezone.utc), 'time_taken': 4516.0, 'time_delta': '1:15:16', 'additions': 34, 'deletions': 17, 'state': 'closed'}, {'id': 1427114193, 'number': 6206, 'closed': datetime.datetime(2023, 7, 10, 11, 14, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 10, 9, 6, 2, tzinfo=datetime.timezone.utc), 'time_taken': 7688.0, 'time_delta': '2:08:08', 'additions': 34, 'deletions': 17, 'state': 'closed'}, {'id': 1424991627, 'number': 6204, 'closed': datetime.datetime(2023, 7, 10, 8, 30, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 7, 17, 29, 57, tzinfo=datetime.timezone.utc), 'time_taken': 226817.0, 'time_delta': '2 days, 15:00:17', 'additions': 171, 'deletions': 180, 'state': 'closed'}, {'id': 1420805575, 'number': 6199, 'closed': datetime.datetime(2023, 7, 7, 7, 32, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 10, 7, 57, tzinfo=datetime.timezone.utc), 'time_taken': 163458.0, 'time_delta': '1 day, 21:24:18', 'additions': 209, 'deletions': 60, 'state': 'closed'}, {'id': 1407465144, 'number': 6182, 'closed': datetime.datetime(2023, 6, 29, 16, 10, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 26, 8, 35, 21, tzinfo=datetime.timezone.utc), 'time_taken': 286523.0, 'time_delta': '3 days, 7:35:23', 'additions': 215, 'deletions': 12, 'state': 'closed'}, {'id': 1404702791, 'number': 6176, 'closed': datetime.datetime(2023, 7, 4, 9, 55, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 23, 8, 34, 2, tzinfo=datetime.timezone.utc), 'time_taken': 955288.0, 'time_delta': '11 days, 1:21:28', 'additions': 542, 'deletions': 220, 'state': 'closed'}, {'id': 1403297891, 'number': 6173, 'closed': datetime.datetime(2023, 6, 23, 8, 43, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 22, 10, 47, 42, tzinfo=datetime.timezone.utc), 'time_taken': 78957.0, 'time_delta': '21:55:57', 'additions': 12, 'deletions': 5, 'state': 'closed'}, {'id': 1400212047, 'number': 6170, 'closed': datetime.datetime(2023, 6, 21, 12, 11, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 20, 17, 2, 18, tzinfo=datetime.timezone.utc), 'time_taken': 68941.0, 'time_delta': '19:09:01', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1399990115, 'number': 6168, 'closed': datetime.datetime(2023, 6, 23, 14, 55, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 20, 14, 32, 18, tzinfo=datetime.timezone.utc), 'time_taken': 260602.0, 'time_delta': '3 days, 0:23:22', 'additions': 65, 'deletions': 1, 'state': 'closed'}, {'id': 1398567731, 'number': 6164, 'closed': datetime.datetime(2023, 6, 20, 8, 30, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 19, 17, 14, 23, tzinfo=datetime.timezone.utc), 'time_taken': 54992.0, 'time_delta': '15:16:32', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1397784181, 'number': 6162, 'closed': datetime.datetime(2023, 6, 21, 11, 32, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 19, 8, 38, 19, tzinfo=datetime.timezone.utc), 'time_taken': 183241.0, 'time_delta': '2 days, 2:54:01', 'additions': 0, 'deletions': 2, 'state': 'closed'}, {'id': 1392998016, 'number': 6155, 'closed': None, 'created': datetime.datetime(2023, 6, 14, 20, 3, 56, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1459, 'deletions': 311, 'state': 'open'}, {'id': 1392965235, 'number': 6154, 'closed': datetime.datetime(2023, 6, 21, 12, 1, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 14, 19, 33, 28, tzinfo=datetime.timezone.utc), 'time_taken': 577678.0, 'time_delta': '6 days, 16:27:58', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 1392964538, 'number': 6153, 'closed': datetime.datetime(2023, 6, 20, 15, 26, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 14, 19, 32, 47, tzinfo=datetime.timezone.utc), 'time_taken': 503648.0, 'time_delta': '5 days, 19:54:08', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1392897755, 'number': 6152, 'closed': datetime.datetime(2023, 7, 24, 15, 6, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 14, 18, 34, 57, tzinfo=datetime.timezone.utc), 'time_taken': 3443505.0, 'time_delta': '39 days, 20:31:45', 'additions': 147, 'deletions': 108, 'state': 'closed'}, {'id': 1390781612, 'number': 6147, 'closed': datetime.datetime(2023, 6, 14, 14, 44, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 13, 14, 48, 35, tzinfo=datetime.timezone.utc), 'time_taken': 86147.0, 'time_delta': '23:55:47', 'additions': 223, 'deletions': 183, 'state': 'closed'}, {'id': 1389571395, 'number': 6145, 'closed': None, 'created': datetime.datetime(2023, 6, 12, 22, 57, 38, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 883, 'deletions': 755, 'state': 'open'}, {'id': 1376735883, 'number': 6129, 'closed': datetime.datetime(2023, 6, 21, 12, 1, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 3, 7, 55, 7, tzinfo=datetime.timezone.utc), 'time_taken': 1569973.0, 'time_delta': '18 days, 4:06:13', 'additions': 0, 'deletions': 4, 'state': 'closed'}, {'id': 1371715230, 'number': 6120, 'closed': datetime.datetime(2024, 1, 3, 14, 33, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 31, 8, 41, 30, tzinfo=datetime.timezone.utc), 'time_taken': 18769912.0, 'time_delta': '217 days, 5:51:52', 'additions': 25, 'deletions': 0, 'state': 'closed'}, {'id': 1370775853, 'number': 6119, 'closed': datetime.datetime(2023, 8, 1, 13, 5, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 30, 16, 37, 24, tzinfo=datetime.timezone.utc), 'time_taken': 5430485.0, 'time_delta': '62 days, 20:28:05', 'additions': 22, 'deletions': 7, 'state': 'closed'}, {'id': 1365981077, 'number': 6109, 'closed': datetime.datetime(2023, 5, 30, 13, 26, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 26, 9, 9, 42, tzinfo=datetime.timezone.utc), 'time_taken': 360979.0, 'time_delta': '4 days, 4:16:19', 'additions': 7, 'deletions': 2, 'state': 'closed'}, {'id': 1365886567, 'number': 6108, 'closed': datetime.datetime(2023, 7, 27, 15, 54, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 26, 7, 57, 8, tzinfo=datetime.timezone.utc), 'time_taken': 5385464.0, 'time_delta': '62 days, 7:57:44', 'additions': 60, 'deletions': 87, 'state': 'closed'}, {'id': 1364238178, 'number': 6103, 'closed': datetime.datetime(2024, 2, 24, 14, 36, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 25, 7, 33, 58, tzinfo=datetime.timezone.utc), 'time_taken': 23785358.0, 'time_delta': '275 days, 7:02:38', 'additions': 198, 'deletions': 181, 'state': 'closed'}, {'id': 1363487517, 'number': 6102, 'closed': datetime.datetime(2024, 1, 22, 12, 59, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 24, 16, 52, 7, tzinfo=datetime.timezone.utc), 'time_taken': 20981267.0, 'time_delta': '242 days, 20:07:47', 'additions': 72, 'deletions': 73, 'state': 'closed'}, {'id': 1348767600, 'number': 6070, 'closed': datetime.datetime(2023, 5, 12, 14, 38, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 12, 14, 17, 18, tzinfo=datetime.timezone.utc), 'time_taken': 1283.0, 'time_delta': '0:21:23', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1348704014, 'number': 6068, 'closed': datetime.datetime(2023, 5, 12, 13, 48, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 12, 13, 32, 54, tzinfo=datetime.timezone.utc), 'time_taken': 947.0, 'time_delta': '0:15:47', 'additions': 10, 'deletions': 10, 'state': 'closed'}, {'id': 1348640725, 'number': 6066, 'closed': datetime.datetime(2023, 5, 12, 13, 0, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 12, 12, 46, 54, tzinfo=datetime.timezone.utc), 'time_taken': 828.0, 'time_delta': '0:13:48', 'additions': 75, 'deletions': 91, 'state': 'closed'}, {'id': 1346749341, 'number': 6056, 'closed': datetime.datetime(2023, 7, 11, 15, 31, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 11, 9, 30, 20, tzinfo=datetime.timezone.utc), 'time_taken': 5292077.0, 'time_delta': '61 days, 6:01:17', 'additions': 53, 'deletions': 185, 'state': 'closed'}, {'id': 1346681447, 'number': 6054, 'closed': datetime.datetime(2023, 5, 26, 12, 57, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 11, 8, 44, 20, tzinfo=datetime.timezone.utc), 'time_taken': 1311192.0, 'time_delta': '15 days, 4:13:12', 'additions': 26, 'deletions': 20, 'state': 'closed'}, {'id': 1346659809, 'number': 6053, 'closed': datetime.datetime(2023, 10, 5, 15, 13, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 11, 8, 32, 6, tzinfo=datetime.timezone.utc), 'time_taken': 12724910.0, 'time_delta': '147 days, 6:41:50', 'additions': 32, 'deletions': 22, 'state': 'closed'}, {'id': 1341073643, 'number': 6032, 'closed': datetime.datetime(2023, 5, 12, 14, 19, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 7, 10, 11, 27, tzinfo=datetime.timezone.utc), 'time_taken': 446895.0, 'time_delta': '5 days, 4:08:15', 'additions': 12, 'deletions': 7, 'state': 'closed'}, {'id': 1341045995, 'number': 6031, 'closed': datetime.datetime(2023, 5, 10, 16, 52, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 7, 8, 39, 5, tzinfo=datetime.timezone.utc), 'time_taken': 288829.0, 'time_delta': '3 days, 8:13:49', 'additions': 38, 'deletions': 51, 'state': 'closed'}, {'id': 1341040298, 'number': 6030, 'closed': datetime.datetime(2023, 5, 9, 14, 31, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 7, 8, 18, 20, tzinfo=datetime.timezone.utc), 'time_taken': 195215.0, 'time_delta': '2 days, 6:13:35', 'additions': 193, 'deletions': 223, 'state': 'closed'}, {'id': 1340874424, 'number': 6029, 'closed': datetime.datetime(2023, 5, 9, 14, 3, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 6, 19, 37, 51, tzinfo=datetime.timezone.utc), 'time_taken': 239165.0, 'time_delta': '2 days, 18:26:05', 'additions': 6, 'deletions': 2, 'state': 'closed'}, {'id': 1340859582, 'number': 6028, 'closed': datetime.datetime(2023, 11, 6, 21, 57, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 6, 18, 46, 38, tzinfo=datetime.timezone.utc), 'time_taken': 15909032.0, 'time_delta': '184 days, 3:10:32', 'additions': 155, 'deletions': 131, 'state': 'closed'}, {'id': 1340172870, 'number': 6027, 'closed': datetime.datetime(2023, 5, 9, 9, 7, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 5, 17, 17, 11, tzinfo=datetime.timezone.utc), 'time_taken': 316237.0, 'time_delta': '3 days, 15:50:37', 'additions': 65, 'deletions': 84, 'state': 'closed'}, {'id': 1339010751, 'number': 6019, 'closed': datetime.datetime(2023, 5, 11, 8, 10, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 4, 20, 13, 39, tzinfo=datetime.timezone.utc), 'time_taken': 561414.0, 'time_delta': '6 days, 11:56:54', 'additions': 512, 'deletions': 222, 'state': 'closed'}, {'id': 1332768934, 'number': 6003, 'closed': datetime.datetime(2023, 10, 21, 18, 24, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 29, 13, 44, 56, tzinfo=datetime.timezone.utc), 'time_taken': 15136764.0, 'time_delta': '175 days, 4:39:24', 'additions': 10, 'deletions': 9, 'state': 'closed'}, {'id': 1332029404, 'number': 6002, 'closed': datetime.datetime(2024, 1, 22, 12, 59, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 28, 15, 5, 30, tzinfo=datetime.timezone.utc), 'time_taken': 23234065.0, 'time_delta': '268 days, 21:54:25', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 1332015502, 'number': 6001, 'closed': datetime.datetime(2024, 1, 22, 16, 19, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 28, 14, 56, 41, tzinfo=datetime.timezone.utc), 'time_taken': 23246543.0, 'time_delta': '269 days, 1:22:23', 'additions': 80, 'deletions': 9, 'state': 'closed'}, {'id': 1330330956, 'number': 5996, 'closed': datetime.datetime(2023, 7, 14, 11, 35, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 27, 12, 52, 56, tzinfo=datetime.timezone.utc), 'time_taken': 6734555.0, 'time_delta': '77 days, 22:42:35', 'additions': 1393, 'deletions': 2156, 'state': 'closed'}, {'id': 1328548077, 'number': 5991, 'closed': datetime.datetime(2023, 5, 5, 13, 21, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 26, 10, 50, 51, tzinfo=datetime.timezone.utc), 'time_taken': 786616.0, 'time_delta': '9 days, 2:30:16', 'additions': 203, 'deletions': 35, 'state': 'closed'}, {'id': 1325060480, 'number': 5981, 'closed': datetime.datetime(2023, 4, 25, 10, 56, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 24, 9, 27, 54, tzinfo=datetime.timezone.utc), 'time_taken': 91726.0, 'time_delta': '1 day, 1:28:46', 'additions': 56, 'deletions': 320, 'state': 'closed'}, {'id': 1325023915, 'number': 5980, 'closed': datetime.datetime(2023, 4, 24, 15, 30, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 24, 9, 9, 34, tzinfo=datetime.timezone.utc), 'time_taken': 22841.0, 'time_delta': '6:20:41', 'additions': 39, 'deletions': 16, 'state': 'closed'}, {'id': 1312959096, 'number': 5950, 'closed': datetime.datetime(2023, 5, 2, 8, 26, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 13, 18, 23, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1605805.0, 'time_delta': '18 days, 14:03:25', 'additions': 988, 'deletions': 1366, 'state': 'closed'}, {'id': 1312669724, 'number': 5947, 'closed': datetime.datetime(2023, 4, 13, 18, 32, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 13, 14, 57, 15, tzinfo=datetime.timezone.utc), 'time_taken': 12926.0, 'time_delta': '3:35:26', 'additions': 2, 'deletions': 29, 'state': 'closed'}, {'id': 1312325661, 'number': 5943, 'closed': datetime.datetime(2023, 4, 13, 11, 25, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 13, 11, 10, 7, tzinfo=datetime.timezone.utc), 'time_taken': 937.0, 'time_delta': '0:15:37', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 1310419942, 'number': 5939, 'closed': datetime.datetime(2023, 4, 13, 15, 25, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 12, 7, 58, 51, tzinfo=datetime.timezone.utc), 'time_taken': 113211.0, 'time_delta': '1 day, 7:26:51', 'additions': 126, 'deletions': 132, 'state': 'closed'}, {'id': 1308912005, 'number': 5936, 'closed': datetime.datetime(2023, 4, 11, 12, 47, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 11, 12, 18, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1786.0, 'time_delta': '0:29:46', 'additions': 11, 'deletions': 4, 'state': 'closed'}, {'id': 1308575150, 'number': 5934, 'closed': datetime.datetime(2023, 4, 11, 8, 40, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 11, 8, 10, 8, tzinfo=datetime.timezone.utc), 'time_taken': 1809.0, 'time_delta': '0:30:09', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 1307456080, 'number': 5932, 'closed': datetime.datetime(2023, 4, 11, 13, 50, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 10, 12, 12, 56, tzinfo=datetime.timezone.utc), 'time_taken': 92281.0, 'time_delta': '1 day, 1:38:01', 'additions': 19, 'deletions': 5, 'state': 'closed'}, {'id': 1305718179, 'number': 5928, 'closed': datetime.datetime(2023, 4, 7, 13, 7, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 7, 9, 20, 11, tzinfo=datetime.timezone.utc), 'time_taken': 13653.0, 'time_delta': '3:47:33', 'additions': 4, 'deletions': 5, 'state': 'closed'}, {'id': 1282533697, 'number': 5874, 'closed': datetime.datetime(2023, 4, 11, 9, 34, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 20, 12, 18, 49, tzinfo=datetime.timezone.utc), 'time_taken': 1890928.0, 'time_delta': '21 days, 21:15:28', 'additions': 56, 'deletions': 52, 'state': 'closed'}, {'id': 1256965556, 'number': 5835, 'closed': datetime.datetime(2023, 2, 28, 12, 22, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 28, 11, 45, 12, tzinfo=datetime.timezone.utc), 'time_taken': 2240.0, 'time_delta': '0:37:20', 'additions': 13, 'deletions': 13, 'state': 'closed'}, {'id': 1256952953, 'number': 5834, 'closed': datetime.datetime(2023, 2, 28, 13, 4, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 28, 11, 34, 20, tzinfo=datetime.timezone.utc), 'time_taken': 5413.0, 'time_delta': '1:30:13', 'additions': 3, 'deletions': 4, 'state': 'closed'}, {'id': 1253237309, 'number': 5829, 'closed': datetime.datetime(2023, 8, 25, 7, 3, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 24, 13, 7, 49, tzinfo=datetime.timezone.utc), 'time_taken': 15702969.0, 'time_delta': '181 days, 17:56:09', 'additions': 9, 'deletions': 3, 'state': 'closed'}, {'id': 1242126859, 'number': 5805, 'closed': datetime.datetime(2023, 2, 20, 17, 10, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 15, 13, 55, 39, tzinfo=datetime.timezone.utc), 'time_taken': 443683.0, 'time_delta': '5 days, 3:14:43', 'additions': 7, 'deletions': 4, 'state': 'closed'}, {'id': 1215047749, 'number': 5747, 'closed': datetime.datetime(2023, 5, 2, 10, 23, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 24, 12, 43, 15, tzinfo=datetime.timezone.utc), 'time_taken': 8458812.0, 'time_delta': '97 days, 21:40:12', 'additions': 29, 'deletions': 30, 'state': 'closed'}, {'id': 1212567157, 'number': 5744, 'closed': datetime.datetime(2023, 1, 24, 10, 34, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 22, 11, 2, 38, tzinfo=datetime.timezone.utc), 'time_taken': 171127.0, 'time_delta': '1 day, 23:32:07', 'additions': 804, 'deletions': 656, 'state': 'closed'}, {'id': 1212452962, 'number': 5743, 'closed': None, 'created': datetime.datetime(2023, 1, 21, 22, 19, 42, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 294, 'deletions': 49, 'state': 'open'}, {'id': 1117321669, 'number': 5571, 'closed': datetime.datetime(2022, 11, 15, 14, 8, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 10, 8, 29, 36, tzinfo=datetime.timezone.utc), 'time_taken': 452349.0, 'time_delta': '5 days, 5:39:09', 'additions': 164, 'deletions': 251, 'state': 'closed'}, {'id': 1116560069, 'number': 5569, 'closed': datetime.datetime(2022, 11, 10, 8, 22, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 9, 19, 16, 35, tzinfo=datetime.timezone.utc), 'time_taken': 47183.0, 'time_delta': '13:06:23', 'additions': 160, 'deletions': 252, 'state': 'closed'}, {'id': 1077609152, 'number': 5484, 'closed': datetime.datetime(2022, 10, 5, 17, 36, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 5, 16, 57, 1, tzinfo=datetime.timezone.utc), 'time_taken': 2361.0, 'time_delta': '0:39:21', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1064014185, 'number': 5459, 'closed': datetime.datetime(2022, 9, 23, 8, 5, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 22, 11, 11, 5, tzinfo=datetime.timezone.utc), 'time_taken': 75269.0, 'time_delta': '20:54:29', 'additions': 61, 'deletions': 41, 'state': 'closed'}, {'id': 1038953329, 'number': 5411, 'closed': datetime.datetime(2022, 8, 29, 11, 38, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 28, 20, 1, 50, tzinfo=datetime.timezone.utc), 'time_taken': 56173.0, 'time_delta': '15:36:13', 'additions': 6, 'deletions': 8, 'state': 'closed'}, {'id': 1034760538, 'number': 5398, 'closed': datetime.datetime(2022, 8, 26, 12, 14, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 23, 22, 15, 29, tzinfo=datetime.timezone.utc), 'time_taken': 223131.0, 'time_delta': '2 days, 13:58:51', 'additions': 296, 'deletions': 365, 'state': 'closed'}, {'id': 1024207206, 'number': 5383, 'closed': datetime.datetime(2024, 3, 31, 11, 28, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 11, 18, 50, 5, tzinfo=datetime.timezone.utc), 'time_taken': 51640722.0, 'time_delta': '597 days, 16:38:42', 'additions': 6540, 'deletions': 27, 'state': 'closed'}, {'id': 1020702742, 'number': 5378, 'closed': datetime.datetime(2023, 5, 24, 20, 34, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 8, 20, 0, 54, tzinfo=datetime.timezone.utc), 'time_taken': 24971625.0, 'time_delta': '289 days, 0:33:45', 'additions': 198, 'deletions': 185, 'state': 'closed'}, {'id': 1020008798, 'number': 5376, 'closed': datetime.datetime(2022, 8, 25, 15, 8, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 8, 8, 57, 14, tzinfo=datetime.timezone.utc), 'time_taken': 1491057.0, 'time_delta': '17 days, 6:10:57', 'additions': 767, 'deletions': 847, 'state': 'closed'}, {'id': 1018014038, 'number': 5370, 'closed': datetime.datetime(2023, 3, 19, 12, 40, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 4, 21, 2, 19, tzinfo=datetime.timezone.utc), 'time_taken': 19582692.0, 'time_delta': '226 days, 15:38:12', 'additions': 648, 'deletions': 736, 'state': 'closed'}, {'id': 1017281383, 'number': 5364, 'closed': datetime.datetime(2022, 8, 4, 13, 42, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 4, 9, 33, 23, tzinfo=datetime.timezone.utc), 'time_taken': 14931.0, 'time_delta': '4:08:51', 'additions': 151, 'deletions': 128, 'state': 'closed'}, {'id': 1017269888, 'number': 5363, 'closed': datetime.datetime(2022, 8, 4, 11, 46, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 4, 9, 22, 46, tzinfo=datetime.timezone.utc), 'time_taken': 8608.0, 'time_delta': '2:23:28', 'additions': 346, 'deletions': 8, 'state': 'closed'}, {'id': 1016726883, 'number': 5362, 'closed': datetime.datetime(2022, 8, 4, 10, 25, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 3, 19, 26, 38, tzinfo=datetime.timezone.utc), 'time_taken': 53916.0, 'time_delta': '14:58:36', 'additions': 57, 'deletions': 66, 'state': 'closed'}, {'id': 1011390028, 'number': 5346, 'closed': datetime.datetime(2022, 9, 26, 12, 11, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 28, 22, 56, 5, tzinfo=datetime.timezone.utc), 'time_taken': 5145337.0, 'time_delta': '59 days, 13:15:37', 'additions': 659, 'deletions': 897, 'state': 'closed'}, {'id': 1011279996, 'number': 5345, 'closed': datetime.datetime(2022, 8, 4, 20, 6, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 28, 20, 33, tzinfo=datetime.timezone.utc), 'time_taken': 603195.0, 'time_delta': '6 days, 23:33:15', 'additions': 180, 'deletions': 193, 'state': 'closed'}, {'id': 842701425, 'number': 4835, 'closed': None, 'created': datetime.datetime(2022, 2, 8, 11, 26, 36, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 34, 'deletions': 15, 'state': 'open'}, {'id': 766758485, 'number': 4556, 'closed': datetime.datetime(2021, 11, 15, 14, 27, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 26, 19, 2, 48, tzinfo=datetime.timezone.utc), 'time_taken': 1711458.0, 'time_delta': '19 days, 19:24:18', 'additions': 260, 'deletions': 246, 'state': 'closed'}, {'id': 712624729, 'number': 4363, 'closed': datetime.datetime(2021, 8, 13, 22, 2, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 13, 21, 5, 19, tzinfo=datetime.timezone.utc), 'time_taken': 3413.0, 'time_delta': '0:56:53', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 711586329, 'number': 4348, 'closed': datetime.datetime(2021, 8, 13, 23, 7, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 20, 52, 40, tzinfo=datetime.timezone.utc), 'time_taken': 94472.0, 'time_delta': '1 day, 2:14:32', 'additions': 4325, 'deletions': 1859, 'state': 'closed'}, {'id': 711167259, 'number': 4347, 'closed': datetime.datetime(2021, 8, 13, 7, 36, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 15, 57, 3, tzinfo=datetime.timezone.utc), 'time_taken': 56348.0, 'time_delta': '15:39:08', 'additions': 13, 'deletions': 3, 'state': 'closed'}, {'id': 709659342, 'number': 4342, 'closed': datetime.datetime(2021, 8, 12, 8, 6, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 11, 21, 25, 19, tzinfo=datetime.timezone.utc), 'time_taken': 38484.0, 'time_delta': '10:41:24', 'additions': 71, 'deletions': 12, 'state': 'closed'}, {'id': 708151457, 'number': 4335, 'closed': datetime.datetime(2021, 8, 13, 6, 56, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 11, 4, 15, 57, tzinfo=datetime.timezone.utc), 'time_taken': 182415.0, 'time_delta': '2 days, 2:40:15', 'additions': 206, 'deletions': 151, 'state': 'closed'}, {'id': 702672574, 'number': 4300, 'closed': datetime.datetime(2021, 8, 7, 14, 51, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 3, 22, 23, 51, tzinfo=datetime.timezone.utc), 'time_taken': 318475.0, 'time_delta': '3 days, 16:27:55', 'additions': 168, 'deletions': 106, 'state': 'closed'}, {'id': 702515421, 'number': 4299, 'closed': datetime.datetime(2021, 8, 4, 6, 19, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 3, 18, 51, tzinfo=datetime.timezone.utc), 'time_taken': 41290.0, 'time_delta': '11:28:10', 'additions': 1070, 'deletions': 552, 'state': 'closed'}, {'id': 702480029, 'number': 4298, 'closed': datetime.datetime(2021, 8, 5, 8, 43, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 3, 17, 52, 53, tzinfo=datetime.timezone.utc), 'time_taken': 139846.0, 'time_delta': '1 day, 14:50:46', 'additions': 259, 'deletions': 360, 'state': 'closed'}, {'id': 702354727, 'number': 4295, 'closed': datetime.datetime(2021, 8, 3, 17, 16, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 3, 14, 55, 29, tzinfo=datetime.timezone.utc), 'time_taken': 8480.0, 'time_delta': '2:21:20', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 697393750, 'number': 4258, 'closed': datetime.datetime(2021, 7, 29, 19, 18, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 26, 22, 24, 15, tzinfo=datetime.timezone.utc), 'time_taken': 248030.0, 'time_delta': '2 days, 20:53:50', 'additions': 833, 'deletions': 7, 'state': 'closed'}, {'id': 695446708, 'number': 4243, 'closed': datetime.datetime(2021, 7, 28, 14, 36, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 22, 19, 37, 17, tzinfo=datetime.timezone.utc), 'time_taken': 500364.0, 'time_delta': '5 days, 18:59:24', 'additions': 312, 'deletions': 268, 'state': 'closed'}, {'id': 694736261, 'number': 4239, 'closed': datetime.datetime(2021, 7, 26, 13, 47, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 21, 22, 0, 32, tzinfo=datetime.timezone.utc), 'time_taken': 402400.0, 'time_delta': '4 days, 15:46:40', 'additions': 61, 'deletions': 13, 'state': 'closed'}, {'id': 693625116, 'number': 4234, 'closed': datetime.datetime(2021, 8, 3, 16, 41, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 20, 16, 36, 21, tzinfo=datetime.timezone.utc), 'time_taken': 1209928.0, 'time_delta': '14 days, 0:05:28', 'additions': 294, 'deletions': 4, 'state': 'closed'}, {'id': 692879994, 'number': 4230, 'closed': datetime.datetime(2021, 7, 23, 12, 6, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 19, 55, tzinfo=datetime.timezone.utc), 'time_taken': 317469.0, 'time_delta': '3 days, 16:11:09', 'additions': 172, 'deletions': 93, 'state': 'closed'}, {'id': 692746322, 'number': 4226, 'closed': datetime.datetime(2021, 8, 3, 11, 36, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 16, 16, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1279173.0, 'time_delta': '14 days, 19:19:33', 'additions': 904, 'deletions': 17, 'state': 'closed'}, {'id': 691990980, 'number': 4219, 'closed': datetime.datetime(2022, 1, 15, 22, 25, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 17, 21, 37, 30, tzinfo=datetime.timezone.utc), 'time_taken': 15727663.0, 'time_delta': '182 days, 0:47:43', 'additions': 77, 'deletions': 18, 'state': 'closed'}, {'id': 691542447, 'number': 4218, 'closed': datetime.datetime(2021, 7, 21, 19, 37, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 14, 40, 51, tzinfo=datetime.timezone.utc), 'time_taken': 449790.0, 'time_delta': '5 days, 4:56:30', 'additions': 17, 'deletions': 22, 'state': 'closed'}, {'id': 689328109, 'number': 4209, 'closed': datetime.datetime(2023, 2, 14, 9, 42, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 13, 19, 3, 52, tzinfo=datetime.timezone.utc), 'time_taken': 50164706.0, 'time_delta': '580 days, 14:38:26', 'additions': 821, 'deletions': 3, 'state': 'closed'}, {'id': 687857375, 'number': 4205, 'closed': datetime.datetime(2021, 7, 16, 13, 43, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 12, 13, 42, 44, tzinfo=datetime.timezone.utc), 'time_taken': 345631.0, 'time_delta': '4 days, 0:00:31', 'additions': 664, 'deletions': 0, 'state': 'closed'}, {'id': 687224067, 'number': 4202, 'closed': datetime.datetime(2021, 7, 10, 21, 54, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 10, 18, 53, 18, tzinfo=datetime.timezone.utc), 'time_taken': 10886.0, 'time_delta': '3:01:26', 'additions': 106, 'deletions': 627, 'state': 'closed'}, {'id': 687222447, 'number': 4201, 'closed': datetime.datetime(2021, 7, 10, 21, 13, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 10, 18, 38, 40, tzinfo=datetime.timezone.utc), 'time_taken': 9305.0, 'time_delta': '2:35:05', 'additions': 29, 'deletions': 617, 'state': 'closed'}, {'id': 687063447, 'number': 4200, 'closed': datetime.datetime(2021, 7, 10, 18, 24, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 22, 12, 34, tzinfo=datetime.timezone.utc), 'time_taken': 72730.0, 'time_delta': '20:12:10', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 686915801, 'number': 4199, 'closed': datetime.datetime(2021, 7, 29, 19, 18, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 16, 40, 45, tzinfo=datetime.timezone.utc), 'time_taken': 1737478.0, 'time_delta': '20 days, 2:37:58', 'additions': 3020, 'deletions': 254, 'state': 'closed'}, {'id': 685936694, 'number': 4190, 'closed': datetime.datetime(2021, 7, 13, 17, 27, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 11, 39, 11, tzinfo=datetime.timezone.utc), 'time_taken': 452873.0, 'time_delta': '5 days, 5:47:53', 'additions': 93, 'deletions': 352, 'state': 'closed'}, {'id': 685205658, 'number': 4188, 'closed': datetime.datetime(2022, 8, 4, 11, 23, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 13, 37, 25, tzinfo=datetime.timezone.utc), 'time_taken': 33947177.0, 'time_delta': '392 days, 21:46:17', 'additions': 1265, 'deletions': 700, 'state': 'closed'}, {'id': 684672929, 'number': 4184, 'closed': datetime.datetime(2021, 7, 23, 15, 16, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 20, 56, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1448390.0, 'time_delta': '16 days, 18:19:50', 'additions': 302, 'deletions': 5, 'state': 'closed'}, {'id': 684336586, 'number': 4183, 'closed': datetime.datetime(2021, 7, 6, 16, 14, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 12, 32, 49, tzinfo=datetime.timezone.utc), 'time_taken': 13298.0, 'time_delta': '3:41:38', 'additions': 215, 'deletions': 495, 'state': 'closed'}, {'id': 683580707, 'number': 4181, 'closed': datetime.datetime(2021, 7, 5, 11, 47, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 10, 33, 28, tzinfo=datetime.timezone.utc), 'time_taken': 4439.0, 'time_delta': '1:13:59', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 681795623, 'number': 4169, 'closed': datetime.datetime(2021, 7, 1, 13, 29, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 1, 12, 7, 1, tzinfo=datetime.timezone.utc), 'time_taken': 4977.0, 'time_delta': '1:22:57', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 679875728, 'number': 4157, 'closed': datetime.datetime(2021, 6, 30, 17, 19, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 29, 11, 47, 57, tzinfo=datetime.timezone.utc), 'time_taken': 106320.0, 'time_delta': '1 day, 5:32:00', 'additions': 196, 'deletions': 153, 'state': 'closed'}, {'id': 679719767, 'number': 4154, 'closed': datetime.datetime(2021, 6, 29, 11, 26, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 29, 8, 32, 15, tzinfo=datetime.timezone.utc), 'time_taken': 10462.0, 'time_delta': '2:54:22', 'additions': 63, 'deletions': 101, 'state': 'closed'}, {'id': 676417975, 'number': 4138, 'closed': datetime.datetime(2021, 7, 5, 8, 2, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 23, 15, 51, 16, tzinfo=datetime.timezone.utc), 'time_taken': 1008689.0, 'time_delta': '11 days, 16:11:29', 'additions': 9871, 'deletions': 4064, 'state': 'closed'}, {'id': 675706955, 'number': 4133, 'closed': datetime.datetime(2021, 7, 11, 8, 30, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 19, 36, 16, tzinfo=datetime.timezone.utc), 'time_taken': 1601677.0, 'time_delta': '18 days, 12:54:37', 'additions': 186, 'deletions': 7, 'state': 'closed'}, {'id': 674671982, 'number': 4128, 'closed': datetime.datetime(2021, 7, 5, 16, 21, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 15, 44, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1211808.0, 'time_delta': '14 days, 0:36:48', 'additions': 220, 'deletions': 465, 'state': 'closed'}, {'id': 674447033, 'number': 4125, 'closed': datetime.datetime(2021, 8, 10, 10, 30, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 10, 58, 6, tzinfo=datetime.timezone.utc), 'time_taken': 4318357.0, 'time_delta': '49 days, 23:32:37', 'additions': 11381, 'deletions': 4423, 'state': 'closed'}, {'id': 627273913, 'number': 3946, 'closed': datetime.datetime(2021, 4, 30, 13, 57, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 30, 11, 17, 29, tzinfo=datetime.timezone.utc), 'time_taken': 9585.0, 'time_delta': '2:39:45', 'additions': 3620, 'deletions': 8443, 'state': 'closed'}, {'id': 625933910, 'number': 3937, 'closed': datetime.datetime(2021, 4, 29, 10, 53, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 29, 9, 20, 31, tzinfo=datetime.timezone.utc), 'time_taken': 5576.0, 'time_delta': '1:32:56', 'additions': 11, 'deletions': 11, 'state': 'closed'}, {'id': 582493958, 'number': 3724, 'closed': datetime.datetime(2021, 4, 28, 8, 58, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 1, 22, 47, 25, tzinfo=datetime.timezone.utc), 'time_taken': 4961443.0, 'time_delta': '57 days, 10:10:43', 'additions': 9276, 'deletions': 3022, 'state': 'closed'}]"
