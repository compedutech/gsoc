pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
397999878,sys/netbsd: adding chflags(2) syscalls,"Adding support for chflags(2), fchflags(2) and lchflags(2) syscalls
",True,1661,https://api.github.com/repos/google/syzkaller/pulls/1661,https://github.com/google/syzkaller/pull/1661,closed,48,9,5,1,3,0,0,0,[],2020-04-03 07:16:21+00:00,2020-04-03 22:07:52+00:00,53491.0,14:51:31,[],"[{'commit_sha': '9642059966103e777f31d0f59fbe06e0009e0e0f', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}]",Ayushi Sharma,35501599,,User,,35,,43,20
404085782,sys/netbsd: add minherit(2),"Adding minherit(2) syscall.
",True,1680,https://api.github.com/repos/google/syzkaller/pulls/1680,https://github.com/google/syzkaller/pull/1680,closed,20,2,5,1,0,0,0,0,[],2020-04-16 02:47:17+00:00,2020-04-16 05:02:16+00:00,8099.0,2:14:59,[],"[{'commit_sha': '2421b7afbd9a0d117d6f07f72e86819ec6605c46', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}]",Ayushi Sharma,35501599,,User,,35,,43,20
406256638,sys/netbsd: add lchmod(2),Adding lchmod(2).,True,1687,https://api.github.com/repos/google/syzkaller/pulls/1687,https://github.com/google/syzkaller/pull/1687,closed,10,2,5,1,1,0,0,0,[],2020-04-20 19:29:24+00:00,2020-04-21 11:22:04+00:00,57160.0,15:52:40,[],"[{'commit_sha': 'da4b620856b7774dcba28b636e978a242d1061fc', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}]",Ayushi Sharma,35501599,,User,,35,,43,20
415732121,sys/netbsd: add __getcwd(2),Adding support for __getcwd NetBSD syscall.,True,1725,https://api.github.com/repos/google/syzkaller/pulls/1725,https://github.com/google/syzkaller/pull/1725,closed,2,0,2,1,0,0,0,0,[],2020-05-10 14:54:09+00:00,2020-05-11 07:03:33+00:00,58164.0,16:09:24,[],"[{'commit_sha': '76c953e648797e964d3f4e83b743812c717008c0', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}]",Ayushi Sharma,35501599,,User,,35,,43,20
415748098,sys/netbsd: add access(2),"Adding support for access(2) NetBSD syscall.
",True,1727,https://api.github.com/repos/google/syzkaller/pulls/1727,https://github.com/google/syzkaller/pull/1727,closed,8,1,2,1,3,0,0,0,[],2020-05-10 16:48:06+00:00,2020-05-12 06:18:49+00:00,135043.0,"1 day, 13:30:43",[],"[{'commit_sha': 'e961b607cf8d5569c9974ffdc02fdab0bd8a8ccd', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}]",Ayushi Sharma,35501599,,User,,35,,43,20
415811902,sys/netbsd: increase syscall support,"Adding support for NetBSD syscalls -` __getlogin`, `__setlogin`, `getsid`, `setsid`
Manual Pages: [__getlogin and __setlogin](https://netbsd.gw.com/cgi-bin/man-cgi?getlogin+2+NetBSD-current), [getsid](https://netbsd.gw.com/cgi-bin/man-cgi?getsid+2+NetBSD-current), [setsid](https://netbsd.gw.com/cgi-bin/man-cgi?setsid+2+NetBSD-current)
NetBSD ref. (syscall.h): [__getlogin](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#160), [__setlogin](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#163), [getsid](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#792), [setsid](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#428)",True,1728,https://api.github.com/repos/google/syzkaller/pulls/1728,https://github.com/google/syzkaller/pull/1728,closed,6,0,2,1,6,0,0,0,[],2020-05-11 01:00:57+00:00,2020-05-15 20:43:56+00:00,416579.0,"4 days, 19:42:59",[],"[{'commit_sha': 'bb294e6d89f66034938c63c114674fee42975a26', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}]",Ayushi Sharma,35501599,,User,,35,,43,20
432222433,sys/netbsd: increase syscall support,"Syscalls added:

[mknod manual](https://netbsd.gw.com/cgi-bin/man-cgi?mknod+2+NetBSD-current)
- [compat_50_mknod](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#56) [arguments](https://nxr.netbsd.org/xref/src/sys/sys/syscallargs.h#3351)
- [__mknod50](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#1245): Needs to be reviewed again, compiler fails to assign constant and reports it as unsupported syscall.

[utimes manual](https://netbsd.gw.com/cgi-bin/man-cgi?utimes+2+NetBSD-current)
- [compat_50_utimes](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#404): [arguments](https://nxr.netbsd.org/xref/src/sys/sys/syscallargs.h#3577)
- [compat_50_lutimes](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#763)
- [compat_50_futimes](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#589)
- [__utimes50](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#1151)
- [__futimes50](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#1160)
- [__lutimes50](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#1163)

[wait4 manual](https://netbsd.gw.com/cgi-bin/man-cgi?wait4+2+NetBSD-current)
- [compat_50_wait4](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#37)
-  [__wait450](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#1242)

[seek manual](https://netbsd.gw.com/cgi-bin/man-cgi?seek+2+NetBSD-current)
- [compat_43_olseek](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#71)

[settimer manual](https://netbsd.gw.com/cgi-bin/man-cgi?setitimer+2+NetBSD-current)
- [compat_50_setitimer](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#251)
- [compat_50_getitimer](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#260)
- [__setitimer50](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#1166)
- [__getitimer50](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#1169)

[setpriority manual](https://netbsd.gw.com/cgi-bin/man-cgi?setpriority+2+NetBSD-current)
- [setpriority](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#284)
- [getpriority](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#296)

[getrusage manual](https://netbsd.gw.com/cgi-bin/man-cgi?getrusage+2+NetBSD-current)
- [compat_50_getrusage](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#343)
- [__getrusage50](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#1226)

[clock_settime manual](https://netbsd.gw.com/cgi-bin/man-cgi?clock_settime+2+NetBSD-current)
- [compat_50_clock_gettime](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#640)
- [compat_50_clock_settime](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#643)
- [compat_50_clock_getres](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#646)
- [__clock_gettime50](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#1172)
- [__clock_settime50](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#1175)
- [__clock_getres50](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#1178)

[nanosleep manual](https://netbsd.gw.com/cgi-bin/man-cgi?nanosleep+2+NetBSD-current)
- [compat_50_nanosleep](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#664)
- [__nanosleep50](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#1181)

[getdents manual](https://netbsd.gw.com/cgi-bin/man-cgi?getdents+2+NetBSD-current)
- [compat_30_getdents](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#751)
- [__getdents30](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#1072)

[acct manual](https://netbsd.gw.com/cgi-bin/man-cgi?acct+2+NetBSD-current)
- [acct](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#167)",True,1805,https://api.github.com/repos/google/syzkaller/pulls/1805,https://github.com/google/syzkaller/pull/1805,closed,94,25,4,5,4,10,0,0,[],2020-06-10 06:01:16+00:00,2020-06-21 08:41:24+00:00,960008.0,"11 days, 2:40:08","[{'comment_id': 438177433, 'comment_body': 'lseek uses 64-bit offset, compat_43_olseek ptr-size offset\r\n\r\nIs this handled well here?', 'comment_created': datetime.datetime(2020, 6, 10, 14, 41, 52, tzinfo=datetime.timezone.utc), 'commenter': 'krytarowski', 'type': 'User'}, {'comment_id': 438178551, 'comment_body': 'Technically we shall add `pad` argument here.', 'comment_created': datetime.datetime(2020, 6, 10, 14, 43, 22, tzinfo=datetime.timezone.utc), 'commenter': 'krytarowski', 'type': 'User'}, {'comment_id': 438329604, 'comment_body': 'why removal of options here?', 'comment_created': datetime.datetime(2020, 6, 10, 18, 32, 55, tzinfo=datetime.timezone.utc), 'commenter': 'krytarowski', 'type': 'User'}, {'comment_id': 439170420, 'comment_body': 'It was considered while adding the description for compat_43_olseek. Compiler errored out when I added the type for the argument as const[0, int32], however, it works if the type added for pad argument is const[0]. In the recent patch the type is const[0].', 'comment_created': datetime.datetime(2020, 6, 12, 2, 13, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ais2397', 'type': 'User'}, {'comment_id': 439170726, 'comment_body': 'Changes have been made in recent patch.', 'comment_created': datetime.datetime(2020, 6, 12, 2, 14, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ais2397', 'type': 'User'}, {'comment_id': 439754063, 'comment_body': ""Why are we removing these and replacing? Don't we need both the syscalls?"", 'comment_created': datetime.datetime(2020, 6, 13, 17, 14, 32, tzinfo=datetime.timezone.utc), 'commenter': 'R3x', 'type': 'User'}, {'comment_id': 439754165, 'comment_body': 'Are these two flags not used?', 'comment_created': datetime.datetime(2020, 6, 13, 17, 15, 48, tzinfo=datetime.timezone.utc), 'commenter': 'R3x', 'type': 'User'}, {'comment_id': 439754318, 'comment_body': 'is the structure here `timeval50` or timeval itself?', 'comment_created': datetime.datetime(2020, 6, 13, 17, 18, 12, tzinfo=datetime.timezone.utc), 'commenter': 'R3x', 'type': 'User'}, {'comment_id': 441676534, 'comment_body': 'In fact the only functional one for regular user is S_IFIFO.', 'comment_created': datetime.datetime(2020, 6, 17, 16, 33, 23, tzinfo=datetime.timezone.utc), 'commenter': 'krytarowski', 'type': 'User'}, {'comment_id': 443192300, 'comment_body': '@ais2397 this still needs to be done!', 'comment_created': datetime.datetime(2020, 6, 21, 7, 47, 2, tzinfo=datetime.timezone.utc), 'commenter': 'R3x', 'type': 'User'}]","[{'commit_sha': '9eeba1e4f1b7ede5016a8f360e622111ae836893', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71a553c3f703d81810806d018d44f4f224d8b448', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5b2968eae7c498136a4ae7c062b8a5e9b9f787e', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b50a433832b236572dcb1693d8b1634c1a50b55', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e52cbf3ebd84cd0138d595781adbc38c4f85e3d2', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}]",Ayushi Sharma,35501599,,User,,35,,43,20
434002253,sys/netbsd: adding filesystem and communication syscalls,"Syscalls added/updated:

- [compat_43_ocreat](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#40)

[**socket** man page](https://netbsd.gw.com/cgi-bin/man-cgi?socket+2+NetBSD-current)
- [compat_30_socket](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#287)

[**accept** man page](https://netbsd.gw.com/cgi-bin/man-cgi?accept+2+NetBSD-current)
- [accept](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#104)
- [compat_43_oaccept](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#293)

[**recvfrom** man page](https://netbsd.gw.com/cgi-bin/man-cgi?recvfrom+2+NetBSD-current)
- [compat_43_orecvfrom](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#365)

[**stat** man page](https://netbsd.gw.com/cgi-bin/man-cgi?fstat+2+NetBSD-current)
- [__stat50](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#1208)
- [__fstat50](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#1211)
- [__lstat50](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#1214)
- [compat_43_stat43](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#128)
- [compat_43_lstat43](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#134)
- [compat_43_fstat43](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#200)

[**msync** man page](https://netbsd.gw.com/cgi-bin/man-cgi?msync+2+NetBSD-current)
- [__msync13](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#766)
- [compat_12_msync](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#209)

[**profil** man page](https://netbsd.gw.com/cgi-bin/man-cgi?profil+2+NetBSD-current)
- [profil](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#146)

[**truncate** man page](https://netbsd.gw.com/cgi-bin/man-cgi?truncate+2+NetBSD-current)
- [truncate](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#571)
- [ftruncate](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#574)
- [compat_43_otruncate](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#377)
- [compat_43_oftruncate](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#380)

[**dup3** man page](https://netbsd.gw.com/cgi-bin/man-cgi?dup3+2+NetBSD-current)
- [dup3](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#1255)",True,1826,https://api.github.com/repos/google/syzkaller/pulls/1826,https://github.com/google/syzkaller/pull/1826,closed,125,15,6,2,2,2,0,0,[],2020-06-13 12:46:39+00:00,2020-06-17 09:40:06+00:00,334407.0,"3 days, 20:53:27","[{'comment_id': 439755098, 'comment_body': 'This should be flags.', 'comment_created': datetime.datetime(2020, 6, 13, 17, 30, 43, tzinfo=datetime.timezone.utc), 'commenter': 'R3x', 'type': 'User'}, {'comment_id': 439755188, 'comment_body': 'Why is the samples a filename?', 'comment_created': datetime.datetime(2020, 6, 13, 17, 32, tzinfo=datetime.timezone.utc), 'commenter': 'R3x', 'type': 'User'}]","[{'commit_sha': '14bcd8c58b37a1335dde7a3939dc900018656c25', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '751ea5f333642f8bf27094af50ee8976438a04d9', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}]",Ayushi Sharma,35501599,,User,,35,,43,20
437461875,sys/netbsd: add common ioctl() commands,"NetBSD ref. : [filio.h](https://nxr.netbsd.org/xref/src/sys/sys/filio.h)
",True,1850,https://api.github.com/repos/google/syzkaller/pulls/1850,https://github.com/google/syzkaller/pull/1850,closed,25,0,2,6,3,0,0,0,[],2020-06-20 21:20:47+00:00,2020-06-21 17:00:44+00:00,70797.0,19:39:57,[],"[{'commit_sha': '14bcd8c58b37a1335dde7a3939dc900018656c25', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '751ea5f333642f8bf27094af50ee8976438a04d9', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c37aeedeee0171acd1ae565e5e0e63da9fc13624', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '172eff3cac0897ed29a91381ccd16f199070fe7f', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d6c69ab16cd0c1c260b2e0e7baecfeeab0b28b2', 'committer_username': 'R3x', 'committer_name': 'Siddharth M', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 9, 16, 16, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f546a290465f6fc094a5f0714ccfd250509c0db0', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}]",Ayushi Sharma,35501599,,User,,35,,43,20
437997650,Adding stat(2) and statfs(2) related syscalls,"********************************
##### Syscalls added 
[stat(2) manual](https://netbsd.gw.com/cgi-bin/man-cgi?stat+2+NetBSD-1.6)
- [compat_12_stat12](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#535)
- [compat_12_fstat12](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#538)
- [compat_12_lstat12](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#541)

[statfs(2) manual](https://netbsd.gw.com/cgi-bin/man-cgi?statfs+2+NetBSD-1.6)
- [compat_20_statfs](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#447)
- [compat_20_fstatfs](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#450)

[getfsstat(2) manual](https://netbsd.gw.com/cgi-bin/man-cgi?getfsstat+2+NetBSD-1.4.3)
- [compat_20_getfsstat](https://nxr.netbsd.org/xref/src/sys/sys/syscall.h#68)

Change in position of dup3(2)  syscall from sys.txt to fs.txt
*****************
",True,1855,https://api.github.com/repos/google/syzkaller/pulls/1855,https://github.com/google/syzkaller/pull/1855,closed,95,2,4,10,1,0,0,0,[],2020-06-22 14:54:54+00:00,2020-06-26 20:26:52+00:00,365518.0,"4 days, 5:31:58",[],"[{'commit_sha': '14bcd8c58b37a1335dde7a3939dc900018656c25', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '751ea5f333642f8bf27094af50ee8976438a04d9', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c37aeedeee0171acd1ae565e5e0e63da9fc13624', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '172eff3cac0897ed29a91381ccd16f199070fe7f', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d6c69ab16cd0c1c260b2e0e7baecfeeab0b28b2', 'committer_username': 'R3x', 'committer_name': 'Siddharth M', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 9, 16, 16, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f546a290465f6fc094a5f0714ccfd250509c0db0', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdb4110f724799e56dca367b08a10c1ab4d2f683', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd932d4765a392e3c892abda17f42664be266cb02', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cb33be62d599de9448e04b5b4f3640cd59c4fc5', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db4ee0351b3905208e74e166cf60f8d63256f99b', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}]",Ayushi Sharma,35501599,,User,,35,,43,20
456582495,Adding ksem family of  syscalls,"NetBSD ref. : [ksem syscalls](https://nxr.netbsd.org/xref/src/sys/sys/syscallargs.h#3765)
",True,1972,https://api.github.com/repos/google/syzkaller/pulls/1972,https://github.com/google/syzkaller/pull/1972,closed,29,0,2,4,2,14,0,0,[],2020-07-25 07:44:14+00:00,2020-07-26 08:19:16+00:00,88502.0,"1 day, 0:35:02","[{'comment_id': 460385548, 'comment_body': ""Shouldn't this be `_ksem_trywait()` here?\r\n\r\nWe miss real `_ksem_timedwait()`"", 'comment_created': datetime.datetime(2020, 7, 25, 9, 19, 26, tzinfo=datetime.timezone.utc), 'commenter': 'krytarowski', 'type': 'User'}, {'comment_id': 460387989, 'comment_body': 'This is not fully `out` parameter.\r\n\r\nIt first accepts either 0 or `KSEM_PSHARED` for pshared. Later it returns `semid`.', 'comment_created': datetime.datetime(2020, 7, 25, 9, 50, 48, tzinfo=datetime.timezone.utc), 'commenter': 'krytarowski', 'type': 'User'}, {'comment_id': 460388000, 'comment_body': 'https://nxr.netbsd.org/xref/src/lib/librt/sem.c#197', 'comment_created': datetime.datetime(2020, 7, 25, 9, 50, 57, tzinfo=datetime.timezone.utc), 'commenter': 'krytarowski', 'type': 'User'}, {'comment_id': 460401619, 'comment_body': 'Sorry for missing out on this. The recent commit takes it into notice.', 'comment_created': datetime.datetime(2020, 7, 25, 12, 44, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ais2397', 'type': 'User'}, {'comment_id': 460402426, 'comment_body': 'Can we specify somehow that on the `in` entry there are only two valid numbers 0 and `KSEM_PSHARED`?\r\n\r\nCC: @dvyukov ', 'comment_created': datetime.datetime(2020, 7, 25, 12, 54, 19, tzinfo=datetime.timezone.utc), 'commenter': 'krytarowski', 'type': 'User'}, {'comment_id': 460408249, 'comment_body': 'The flags type can be used for this:\r\nhttps://github.com/google/syzkaller/blob/master/docs/syscall_descriptions.md#flagsenums\r\n', 'comment_created': datetime.datetime(2020, 7, 25, 14, 6, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dvyukov', 'type': 'User'}, {'comment_id': 460408609, 'comment_body': 'And even if the output value will be out of the flag entry, it will be fine?\r\n\r\n@ais2397 please use enum-type flag here.', 'comment_created': datetime.datetime(2020, 7, 25, 14, 10, 36, tzinfo=datetime.timezone.utc), 'commenter': 'krytarowski', 'type': 'User'}, {'comment_id': 460409441, 'comment_body': ""Oh, you mean for the idp? Is it 0/KSEM_PSHARED on entry and the semid resource as output?\r\nWe don't have support for different types for input/output... I guess somebody wanted to save 4 bytes of memory 40 years ago and now we need to struggle with it :)\r\n\r\n0 is a the default special value for any resource, we can explicitly state KSEM_PSHARED as well:\r\n```\r\nresource semid[intptr]: 0, KSEM_PSHARED\r\n```\r\n\r\nthen we can declare the semid as optional here to increase chances of passing the special values (good in either case because we don't really need to pass an existing semid as input here):\r\n```\r\nidp ptr[inout, semid[opt]]\r\n```\r\n\r\nBut then the fuzzer will pass KSEM_PSHARED for all other uses of semid from time to time."", 'comment_created': datetime.datetime(2020, 7, 25, 14, 20, 36, tzinfo=datetime.timezone.utc), 'commenter': 'dvyukov', 'type': 'User'}, {'comment_id': 460409565, 'comment_body': ""What is the value for KSEM_PSHARED? Maybe it's possible to play some bitfield tricks if semid's are usually small and KSEM_PSHARED does not occupy low bits..."", 'comment_created': datetime.datetime(2020, 7, 25, 14, 22, 12, tzinfo=datetime.timezone.utc), 'commenter': 'dvyukov', 'type': 'User'}, {'comment_id': 460409722, 'comment_body': 'You may leave a `NEED:` comment describing what is the feature we are failing to describe properly (grep for other examples).', 'comment_created': datetime.datetime(2020, 7, 25, 14, 24, 8, tzinfo=datetime.timezone.utc), 'commenter': 'dvyukov', 'type': 'User'}, {'comment_id': 460409978, 'comment_body': '> Oh, you mean for the idp? Is it 0/KSEM_PSHARED on entry and the semid resource as output?\r\n\r\nYes.\r\n\r\nOn entry it is either 0 or KSEM_PSHARED, on output it is an unique intptr_t value.\r\n\r\n> But then the fuzzer will pass KSEM_PSHARED for all other uses of semid from time to time.\r\n\r\nAs long as it will pass a valid semid for other entry calls at least in half of the cases, it should be enough.', 'comment_created': datetime.datetime(2020, 7, 25, 14, 27, 8, tzinfo=datetime.timezone.utc), 'commenter': 'krytarowski', 'type': 'User'}, {'comment_id': 460410544, 'comment_body': ""> What is the value for KSEM_PSHARED? Maybe it's possible to play some bitfield tricks if semid's are usually small and KSEM_PSHARED does not occupy low bits...\r\n\r\n`#define\tKSEM_PSHARED\t\t0x50535244U\t/* 'PSRD' */`\r\n\r\nhttps://nxr.netbsd.org/xref/src/sys/sys/ksem.h#66\r\n\r\nThe returned semid value as far as I can see, is a random number between the range 0x0 and 0x01000000U with an optional bit set inside the 0xff000001U mask.\r\n\r\nReference:\r\n\r\nhttps://nxr.netbsd.org/xref/src/sys/kern/uipc_sem.c"", 'comment_created': datetime.datetime(2020, 7, 25, 14, 34, 29, tzinfo=datetime.timezone.utc), 'commenter': 'krytarowski', 'type': 'User'}, {'comment_id': 460414206, 'comment_body': ""0x50535244U probably won't allows us to describe some kind of bitfield. But:\r\n\r\n> As long as it will pass a valid semid for other entry calls at least in half of the cases, it should be enough.\r\n\r\nIt will pass valid semid's even more frequently. These special values are for things like fd -1, which are not all that interesting to pass.\r\n\r\n\r\n"", 'comment_created': datetime.datetime(2020, 7, 25, 15, 14, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dvyukov', 'type': 'User'}, {'comment_id': 460480846, 'comment_body': ""Yes, that's what I meant. LGTM for this part."", 'comment_created': datetime.datetime(2020, 7, 26, 5, 29, 19, tzinfo=datetime.timezone.utc), 'commenter': 'dvyukov', 'type': 'User'}]","[{'commit_sha': 'dfefa83283848ed87d6a2fd345a49312868700e3', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6354eec92e408df570f730b9808bf741004ac389', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87b5d394683fe82247ac2898aaff0989bc248f4e', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1b8ae1a377e2721aa7f419df5a9211552862416', 'committer_username': 'ais2397', 'committer_name': 'Ayushi Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 16, 17, 59, 59, tzinfo=datetime.timezone.utc)}]",Ayushi Sharma,35501599,,User,,35,,43,20

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
44087204,syzkaller,google/syzkaller,Go,1202,5259,198,279,9371,361,34,54,"[{'id': 785143666, 'number': 2888, 'closed': datetime.datetime(2022, 7, 20, 12, 53, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 20, 4, 9, 57, tzinfo=datetime.timezone.utc), 'time_taken': 20940225.0, 'time_delta': '242 days, 8:43:45', 'additions': 217, 'deletions': 0, 'state': 'closed'}, {'id': 681678014, 'number': 2640, 'closed': datetime.datetime(2021, 10, 24, 19, 26, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 1, 9, 38, 52, tzinfo=datetime.timezone.utc), 'time_taken': 9971252.0, 'time_delta': '115 days, 9:47:32', 'additions': 312, 'deletions': 19, 'state': 'closed'}, {'id': 475858945, 'number': 2080, 'closed': datetime.datetime(2021, 3, 24, 13, 4, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 30, 3, 56, 17, tzinfo=datetime.timezone.utc), 'time_taken': 17831285.0, 'time_delta': '206 days, 9:08:05', 'additions': 1687, 'deletions': 994, 'state': 'closed'}, {'id': 457109567, 'number': 1976, 'closed': datetime.datetime(2020, 7, 30, 12, 42, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 27, 11, 44, 1, tzinfo=datetime.timezone.utc), 'time_taken': 262712.0, 'time_delta': '3 days, 0:58:32', 'additions': 86, 'deletions': 7, 'state': 'closed'}, {'id': 456582495, 'number': 1972, 'closed': datetime.datetime(2020, 7, 26, 8, 19, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 25, 7, 44, 14, tzinfo=datetime.timezone.utc), 'time_taken': 88502.0, 'time_delta': '1 day, 0:35:02', 'additions': 29, 'deletions': 0, 'state': 'closed'}, {'id': 437997650, 'number': 1855, 'closed': datetime.datetime(2020, 6, 26, 20, 26, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 14, 54, 54, tzinfo=datetime.timezone.utc), 'time_taken': 365518.0, 'time_delta': '4 days, 5:31:58', 'additions': 95, 'deletions': 2, 'state': 'closed'}, {'id': 437461875, 'number': 1850, 'closed': datetime.datetime(2020, 6, 21, 17, 0, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 20, 21, 20, 47, tzinfo=datetime.timezone.utc), 'time_taken': 70797.0, 'time_delta': '19:39:57', 'additions': 25, 'deletions': 0, 'state': 'closed'}, {'id': 434002253, 'number': 1826, 'closed': datetime.datetime(2020, 6, 17, 9, 40, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 13, 12, 46, 39, tzinfo=datetime.timezone.utc), 'time_taken': 334407.0, 'time_delta': '3 days, 20:53:27', 'additions': 125, 'deletions': 15, 'state': 'closed'}, {'id': 432222433, 'number': 1805, 'closed': datetime.datetime(2020, 6, 21, 8, 41, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 10, 6, 1, 16, tzinfo=datetime.timezone.utc), 'time_taken': 960008.0, 'time_delta': '11 days, 2:40:08', 'additions': 94, 'deletions': 25, 'state': 'closed'}, {'id': 415811902, 'number': 1728, 'closed': datetime.datetime(2020, 5, 15, 20, 43, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 11, 1, 0, 57, tzinfo=datetime.timezone.utc), 'time_taken': 416579.0, 'time_delta': '4 days, 19:42:59', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 415748098, 'number': 1727, 'closed': datetime.datetime(2020, 5, 12, 6, 18, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 10, 16, 48, 6, tzinfo=datetime.timezone.utc), 'time_taken': 135043.0, 'time_delta': '1 day, 13:30:43', 'additions': 8, 'deletions': 1, 'state': 'closed'}, {'id': 415732121, 'number': 1725, 'closed': datetime.datetime(2020, 5, 11, 7, 3, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 10, 14, 54, 9, tzinfo=datetime.timezone.utc), 'time_taken': 58164.0, 'time_delta': '16:09:24', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 406256638, 'number': 1687, 'closed': datetime.datetime(2020, 4, 21, 11, 22, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 20, 19, 29, 24, tzinfo=datetime.timezone.utc), 'time_taken': 57160.0, 'time_delta': '15:52:40', 'additions': 10, 'deletions': 2, 'state': 'closed'}, {'id': 406186674, 'number': 1685, 'closed': datetime.datetime(2020, 4, 20, 18, 33, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 20, 17, 4, 19, tzinfo=datetime.timezone.utc), 'time_taken': 5372.0, 'time_delta': '1:29:32', 'additions': 43, 'deletions': 22, 'state': 'closed'}, {'id': 404085782, 'number': 1680, 'closed': datetime.datetime(2020, 4, 16, 5, 2, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 16, 2, 47, 17, tzinfo=datetime.timezone.utc), 'time_taken': 8099.0, 'time_delta': '2:14:59', 'additions': 20, 'deletions': 2, 'state': 'closed'}, {'id': 400186744, 'number': 1668, 'closed': datetime.datetime(2020, 4, 13, 19, 20, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 7, 10, 42, 43, tzinfo=datetime.timezone.utc), 'time_taken': 549459.0, 'time_delta': '6 days, 8:37:39', 'additions': 48, 'deletions': 33, 'state': 'closed'}, {'id': 397999878, 'number': 1661, 'closed': datetime.datetime(2020, 4, 3, 22, 7, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 3, 7, 16, 21, tzinfo=datetime.timezone.utc), 'time_taken': 53491.0, 'time_delta': '14:51:31', 'additions': 48, 'deletions': 9, 'state': 'closed'}, {'id': 395210246, 'number': 1654, 'closed': datetime.datetime(2020, 3, 31, 12, 14, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 29, 7, 8, 35, tzinfo=datetime.timezone.utc), 'time_taken': 191126.0, 'time_delta': '2 days, 5:05:26', 'additions': 30, 'deletions': 10, 'state': 'closed'}, {'id': 395062911, 'number': 1651, 'closed': datetime.datetime(2020, 3, 28, 8, 57, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 28, 8, 7, 12, tzinfo=datetime.timezone.utc), 'time_taken': 3044.0, 'time_delta': '0:50:44', 'additions': 1076, 'deletions': 541, 'state': 'closed'}]"
