pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1012998414,(Contributor Recognition Infrastructure) Milestone 1.1: Introduce storage models for contribution stats,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of N/A
2. This PR does the following:
- Adds new stats models to handle contributor stats.

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,15821,https://api.github.com/repos/oppia/oppia/pulls/15821,https://github.com/oppia/oppia/pull/15821,closed,1558,5,5,25,22,40,2,1,"[{'name': 'PR: LGTM'}, {'name': 'PR: Affects datastore layer'}]",2022-07-31 10:47:43+00:00,2022-08-14 12:41:00+00:00,1216397.0,"14 days, 1:53:17","[{'comment_id': 934185019, 'comment_body': 'I think you can drop the last sentence. All info here should be self-contained.', 'comment_created': datetime.datetime(2022, 8, 1, 6, 41, 4, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 934185649, 'comment_body': 'Explain the format in which the month is stored.', 'comment_created': datetime.datetime(2022, 8, 1, 6, 42, 4, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 934186079, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2022, 8, 1, 6, 42, 47, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 934186244, 'comment_body': 'Ditto re documenting format.', 'comment_created': datetime.datetime(2022, 8, 1, 6, 43, 1, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 934186508, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2022, 8, 1, 6, 43, 25, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 934186556, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2022, 8, 1, 6, 43, 31, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 934935771, 'comment_body': ""Why are these necessary again? I don't see the dates surfaced in the mocks anywhere?"", 'comment_created': datetime.datetime(2022, 8, 1, 21, 31, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 939553824, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 8, 6, 17, 29, 56, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 939554246, 'comment_body': 'Decided to drop contribution months/review months(after discussing with Sagang as well) since we never use them anywhere and first contribution date and the last contribution date are sufficient to show the contribution range in the front end. If we need the exact dates, we can use the created date in suggestion model.', 'comment_created': datetime.datetime(2022, 8, 6, 17, 33, 56, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 939554252, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 6, 17, 34, 3, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 939554329, 'comment_body': 'Explained in the previous comment.', 'comment_created': datetime.datetime(2022, 8, 6, 17, 34, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 939554362, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 6, 17, 34, 32, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 939554376, 'comment_body': 'Explained in a previous comment.', 'comment_created': datetime.datetime(2022, 8, 6, 17, 34, 46, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 939555082, 'comment_body': 'As we discussed in the meeting, the first contribution date and the last contribution date will help to get the range(such as 2022 Apr - 2022 Jun) and display them in the front end. Also dropped the contribution/review month fields since the range of months can be taken from these two fields. https://www.figma.com/file/SNOHAatFcCvdvIAdxAzF6E/Contributor-Dashboard-Achievements?node-id=107%3A2', 'comment_created': datetime.datetime(2022, 8, 6, 17, 41, 13, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 939793138, 'comment_body': 'Why are we dropping this one?', 'comment_created': datetime.datetime(2022, 8, 8, 3, 22, 14, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 940175488, 'comment_body': 'We do not use this parameter for any calculations to compute levels/milestones. Furthermore, this is not displayed in the [reviewer stats](https://www.figma.com/file/SNOHAatFcCvdvIAdxAzF6E/Contributor-Dashboard-Achievements?node-id=112%3A16) as well. Hence, it is removed.\r\n\r\nEdit: I planned to set this values as the length of the original translation, so think it is not useful and removing it.', 'comment_created': datetime.datetime(2022, 8, 8, 12, 23, 3, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 942408422, 'comment_body': 'Can these also be `Final`?', 'comment_created': datetime.datetime(2022, 8, 10, 12, 49, 14, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 942409494, 'comment_body': 'This is not needed if model has `DELETE` policy it should be executed automatically.', 'comment_created': datetime.datetime(2022, 8, 10, 12, 50, 21, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 942414608, 'comment_body': '```suggestion\r\n    """"""Records the translation review stats. There is one instance of \r\n    this model per (language_code, reviewer_user_id, topic_id) tuple.\r\n```\r\n\r\nI think ""contributor dashboard"" is unnecessary as there are other places where this model can theoretically be used. Also please add information about the structure of this model ID.', 'comment_created': datetime.datetime(2022, 8, 10, 12, 55, 18, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 942415887, 'comment_body': 'Above you mention `reviewer_user_id` but here you use `contributor_user_id`', 'comment_created': datetime.datetime(2022, 8, 10, 12, 56, 28, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 942416967, 'comment_body': '```suggestion\r\n    def create(\r\n        cls,\r\n        language_code: str,\r\n        contributor_user_id: str,\r\n        topic_id: str,\r\n        reviewed_translations_count: int,\r\n        reviewed_translation_word_count: int,\r\n        accepted_translations_count: int,\r\n        accepted_translations_with_reviewer_edits_count: int,\r\n        accepted_translation_word_count: int,\r\n        first_contribution_date: datetime.date,\r\n        last_contribution_date: datetime.date\r\n    ) -> str:\r\n```', 'comment_created': datetime.datetime(2022, 8, 10, 12, 57, 30, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 942417279, 'comment_body': 'Ditto elsewhere', 'comment_created': datetime.datetime(2022, 8, 10, 12, 57, 45, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 942417721, 'comment_body': 'Please explain why is the ignore needed in a comment.', 'comment_created': datetime.datetime(2022, 8, 10, 12, 58, 11, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 942419098, 'comment_body': 'Same comment as in the model above.', 'comment_created': datetime.datetime(2022, 8, 10, 12, 59, 27, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 942419750, 'comment_body': 'ditto below', 'comment_created': datetime.datetime(2022, 8, 10, 12, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 942422235, 'comment_body': 'Please add a test for the deletion policy. Ditto elsewhere.', 'comment_created': datetime.datetime(2022, 8, 10, 13, 1, 29, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 942813343, 'comment_body': 'Removing these makes the corresponding tests I wrote in wipeout_tests below fail. I followed these guidelines and it seems I have done it correctly. https://github.com/oppia/oppia/wiki/Storage-models#apply-deletion-policy', 'comment_created': datetime.datetime(2022, 8, 10, 19, 16, 2, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 942813661, 'comment_body': 'Added a comment.', 'comment_created': datetime.datetime(2022, 8, 10, 19, 16, 25, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 942814413, 'comment_body': '@vojtechjelinek Tests to get the deletion policy.', 'comment_created': datetime.datetime(2022, 8, 10, 19, 17, 17, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 942814972, 'comment_body': '@vojtechjelinek Test to apply deletion policy.', 'comment_created': datetime.datetime(2022, 8, 10, 19, 18, 2, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 942815548, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 10, 19, 18, 48, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 942815695, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 10, 19, 19, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 942815804, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 10, 19, 19, 9, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 942815937, 'comment_body': 'DOne', 'comment_created': datetime.datetime(2022, 8, 10, 19, 19, 17, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 942816140, 'comment_body': 'Shown below.', 'comment_created': datetime.datetime(2022, 8, 10, 19, 19, 34, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 943094842, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 11, 4, 55, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 943524545, 'comment_body': 'Ah, okay, please add `_delete_models(user_id, models.NAMES.suggestion)` into the `delete_user` function and then remove the `apply_deletion_policy` from here (not only the ones that you added).', 'comment_created': datetime.datetime(2022, 8, 11, 14, 2, 56, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 944251057, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 12, 8, 50, 9, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 945163009, 'comment_body': '```suggestion\r\n    def generate_id(\r\n        language_code: str, reviewer_user_id: str, topic_id: str\r\n    ) -> str:\r\n```', 'comment_created': datetime.datetime(2022, 8, 13, 15, 59, 27, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 945239216, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 14, 6, 57, 4, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}]","[{'commit_sha': 'c798e78df80c745a7181584710e4bfb707f09926', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '218b79c52ced20bc00d941ad4258e6fa1ac28b92', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd03d5799641213b5dc15f27084ce45aed359d99c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '536a551e6bca8a3f0f6b0d2529995ff1d7b262fa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b853c9a686ebce7b8b26a3a3fa137cd24700a7db', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cab061f577b3fe093555c1526bee7bf9c4baf8f6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f746b930b061b5a8c969f3249ff2476f8ca5514', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63a998851075b029479db7964bcef44d1d57eaa1', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40e6c29251a3a2340e17cef9a14160a82bb55876', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dd7b48b8011091022fd70b7c5e6d77095e7e0b2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbfa22cb69f9fbc167f8f4ca1ed1da602238433e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bcdecd33e25345e8971e35cce8706ede0cac532', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b693c80a358697923efb832c6da533c6f9eb9c0c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f9b46cbe64fbe543e2f9c8d12a609fc3eb6c961', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ebbfcc2553a6ae6c607c40a2661f24465eb17e2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a46e21bfeff3e81d7e53026b1f319f11f13d240', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b95ce3daa362bbf7620992afd4f37b1a7bcb8e3b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '958d3028a3112ef70e1d639941ef4e8e0e152337', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '878a917a95cb83fa6045d78bd38faabf9c0ff864', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8520e3eac15e9f14a506963926b47e4fef069f4', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91538b8bc8a79370a5279e32d9ba61cd2fe103b6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99630277015c52d63860c6666f87392cb0834889', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4980b096c66404f1a525de3b1822fc3b116b38ee', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab76beeca87f2b5284fbd523c4bf428e8217533a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cdd7a2e07b542a36c303a4a93df98cee9c5fcd4', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}]",Hasitha Kaushan,41409951,,User,,34,,33,36
1017560429,(Contributor Recognition Infrastructure) Milestone 1.2: Introduce required domain objects for the contributor recognition infrastructure,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of N/A.
2. This PR does the following:
- Adds required domain objects for the project https://docs.google.com/document/d/16SciF9u-AngOdmvBaSyjYCAYrppR6lTE-S2vwhhh86A/edit#

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
",True,15845,https://api.github.com/repos/oppia/oppia/pulls/15845,https://github.com/oppia/oppia/pull/15845,closed,504,1,2,23,10,24,1,1,[{'name': 'PR: LGTM'}],2022-08-04 13:36:55+00:00,2022-08-10 08:12:47+00:00,498952.0,"5 days, 18:35:52","[{'comment_id': 938276957, 'comment_body': 'Do we need `accepted_translation_word_count` and `accepted_translations_with_reviewer_edits_word_count`?', 'comment_created': datetime.datetime(2022, 8, 4, 21, 54, 48, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 938279020, 'comment_body': 'Did we decide to drop the `Info`? I forget if Sean had thoughts on this as well.', 'comment_created': datetime.datetime(2022, 8, 4, 21, 58, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 938279677, 'comment_body': '```suggestion\r\n            i.e. submissions/acceptances/reviews/edits.\r\n```\r\n\r\nI don\'t think we use the ""corrections"" term anywhere.', 'comment_created': datetime.datetime(2022, 8, 4, 21, 59, 45, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 938280888, 'comment_body': '```suggestion\r\n    """"""Encapsulates key information that is used to create the email content for\r\n```\r\n\r\nNit: ""Stores"" might be a bit of a misnomer here. Ditto below.', 'comment_created': datetime.datetime(2022, 8, 4, 22, 1, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 938282267, 'comment_body': 'Missing attribute info in docstring?', 'comment_created': datetime.datetime(2022, 8, 4, 22, 4, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 938282953, 'comment_body': '```suggestion\r\n        actual_stats = suggestion_registry.TranslationReviewStats(\r\n```\r\n\r\nNit: Usually use ""expected"" and ""actual"" in tests. Ditto below.', 'comment_created': datetime.datetime(2022, 8, 4, 22, 5, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 939568257, 'comment_body': '[In my final mocks for translation review stats](https://www.figma.com/file/SNOHAatFcCvdvIAdxAzF6E/Contributor-Dashboard-Achievements?node-id=112%3A16), there is no field for `accepted_translations_with_reviewer_edits_word_count` so this probably can be removed. I added it here only because this field was included in the storage model. So this field can be removed from both the domain objects and storage models. `accepted_translation_word_count` is kept because we show it in the stats table.', 'comment_created': datetime.datetime(2022, 8, 6, 19, 37, 25, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 939568322, 'comment_body': 'We finally agreed to keep at as it is this. https://docs.google.com/document/d/16SciF9u-AngOdmvBaSyjYCAYrppR6lTE-S2vwhhh86A/edit?disco=AAAAc9OXkkc', 'comment_created': datetime.datetime(2022, 8, 6, 19, 38, 19, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 939568325, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 6, 19, 38, 26, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 939568332, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 6, 19, 38, 32, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 939568349, 'comment_body': 'Added', 'comment_created': datetime.datetime(2022, 8, 6, 19, 38, 40, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 939568354, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 6, 19, 38, 47, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 940438626, 'comment_body': ""Re https://github.com/oppia/oppia/pull/15845#discussion_r939568257: Just double-checking—`accepted_translations_with_reviewer_edits_word_count` is no longer being used to calculate any internal scores either? And I don't see `accepted_translations_with_reviewer_edits_count` in the stats mocks either, so where will it be used?"", 'comment_created': datetime.datetime(2022, 8, 8, 16, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 940439541, 'comment_body': '```suggestion\r\n    """"""Encapsulates key information that is used to send to the frontend regarding\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 16, 31, 2, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 940439866, 'comment_body': '```suggestion\r\n        contributor_user_id: str. The ID of the contributor.\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 16, 31, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 940440305, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 16, 31, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 940440454, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 16, 32, 6, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 940440717, 'comment_body': '```suggestion\r\n        )\r\n        \r\n        contribution_summary = suggestion_registry.ContributorStatsSummary(\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 16, 32, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 940528597, 'comment_body': '`accepted_translations_with_reviewer_edits_count` is required to generate [badges for corrections](https://www.figma.com/file/SNOHAatFcCvdvIAdxAzF6E/Contributor-Dashboard-Achievements?node-id=789%3A664). In case if we decide to drop badges based on the feedback for gamification we may drop this. Until we can keep it.', 'comment_created': datetime.datetime(2022, 8, 8, 18, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 940528860, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 8, 18, 17, 11, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 940528941, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 8, 18, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 940529064, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 8, 18, 17, 26, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 940529157, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 8, 18, 17, 32, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 940538032, 'comment_body': 'I see thanks.', 'comment_created': datetime.datetime(2022, 8, 8, 18, 28, 2, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}]","[{'commit_sha': 'c798e78df80c745a7181584710e4bfb707f09926', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '218b79c52ced20bc00d941ad4258e6fa1ac28b92', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd03d5799641213b5dc15f27084ce45aed359d99c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '536a551e6bca8a3f0f6b0d2529995ff1d7b262fa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b853c9a686ebce7b8b26a3a3fa137cd24700a7db', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cab061f577b3fe093555c1526bee7bf9c4baf8f6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f746b930b061b5a8c969f3249ff2476f8ca5514', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63a998851075b029479db7964bcef44d1d57eaa1', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40e6c29251a3a2340e17cef9a14160a82bb55876', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dd7b48b8011091022fd70b7c5e6d77095e7e0b2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbfa22cb69f9fbc167f8f4ca1ed1da602238433e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bcdecd33e25345e8971e35cce8706ede0cac532', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd52c559de2ef28bcda60369f7cd792db123f149a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9a5cb937c6b2816002f28d3cebcc49d2199a4ed', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad2b9ad9a22eb3feafb56bd1ba435764132b9d44', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3ee6383143288a6deb00d9c8a68ffa6537ff82f', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dc9079a9384bbda7280512e59aa1b9a77436483', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b32386269b7e049ff1ae809a5c61b208d062886', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bbb6390a93a2616a4e67f6d79370a5ddb93463a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f0fdd210dcbc50cec2f50fb566182880464aa7f', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9e9c786d3b991d0ac2afc2d6e7f0329fd05e0e7', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cdad2d3f9f7a5d6a5ee1ff9a155bd7b606fe28e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a23cc074a986b6722822052ee5423126c4f8537', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}]",Hasitha Kaushan,41409951,,User,,34,,33,36
1029178114,(Contributor Recognition Infrastructure) Milestone 1.3: Add required suggestion services to handle contributor stats,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of n/a.
2. This PR does the following:3. 
- Added stats services and relevant unit tests
- Doc: https://docs.google.com/document/d/16SciF9u-AngOdmvBaSyjYCAYrppR6lTE-S2vwhhh86A/edit#
## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [ ] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
",True,15917,https://api.github.com/repos/oppia/oppia/pulls/15917,https://github.com/oppia/oppia/pull/15917,closed,2082,20,8,97,44,296,2,1,"[{'name': 'PR: LGTM'}, {'name': 'PR: Affects datastore layer'}]",2022-08-17 18:52:10+00:00,2022-09-16 13:54:01+00:00,2574111.0,"29 days, 19:01:51","[{'comment_id': 948652050, 'comment_body': 'Just to check -- these are four rather heavy GET requests. Will you need them all at once in the frontend?', 'comment_created': datetime.datetime(2022, 8, 18, 5, 3, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 948652878, 'comment_body': ""I'm a bit concerned about this. Is exp_opportunity being None even a valid case? If not we should raise an exception or something, and then assign topic_id properly, but I'm not sure what the expectations are here."", 'comment_created': datetime.datetime(2022, 8, 18, 5, 5, 51, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 948652959, 'comment_body': 'Is this the UTC date? How do you know?', 'comment_created': datetime.datetime(2022, 8, 18, 5, 6, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 948653058, 'comment_body': 'I think you missed some line breaks here.\r\n\r\nWhy do you need the ""1 *""?', 'comment_created': datetime.datetime(2022, 8, 18, 5, 6, 21, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 948653397, 'comment_body': 'Why the extra ""1+""?', 'comment_created': datetime.datetime(2022, 8, 18, 5, 7, 15, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 948653502, 'comment_body': 'Try not to start booleans with verbs. Do e.g. suggestion_is_accepted, ditto elsewhere.', 'comment_created': datetime.datetime(2022, 8, 18, 5, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 948653720, 'comment_body': 'Same concerns in this function as above.', 'comment_created': datetime.datetime(2022, 8, 18, 5, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 948654018, 'comment_body': 'Ditto here and below.', 'comment_created': datetime.datetime(2022, 8, 18, 5, 8, 44, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 948655202, 'comment_body': 'In general, these tests are pretty minimal. Try to cover different-length submissions, rejected questions, and other cases.', 'comment_created': datetime.datetime(2022, 8, 18, 5, 11, 24, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 949093698, 'comment_body': '```suggestion\r\ndef _create_translation_review_stats_from_models(\r\n    translation_review_stats_model\r\n):\r\n```', 'comment_created': datetime.datetime(2022, 8, 18, 12, 51, 5, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 949093809, 'comment_body': 'ditto below', 'comment_created': datetime.datetime(2022, 8, 18, 12, 51, 13, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 949095496, 'comment_body': '```suggestion\r\n    translation_contribution_stats = get_all_translation_contribution_stats(\r\n        user_id)\r\n```', 'comment_created': datetime.datetime(2022, 8, 18, 12, 52, 46, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 949099529, 'comment_body': 'Hmm, can we use a different name than `generate_id`, I was a bit confused since from generate I expected we will be creating new IDs and not just building up existing ones.\r\n\r\nOr maybe can we store the ID in `TranslationContributionStats` and just do `stat.id`?', 'comment_created': datetime.datetime(2022, 8, 18, 12, 56, 37, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 949109066, 'comment_body': 'ditto below', 'comment_created': datetime.datetime(2022, 8, 18, 13, 5, 54, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 949114953, 'comment_body': 'The `is_submission` adds an unnecessary complexity IMO. Can we have a separate function for submission and not submission?', 'comment_created': datetime.datetime(2022, 8, 18, 13, 11, 23, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 951933083, 'comment_body': '```suggestion\r\ndef _create_translation_review_stats_from_model(\r\n```\r\n\r\nShould be singular since it only accepts one model. Here and below.', 'comment_created': datetime.datetime(2022, 8, 22, 21, 34, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 951936666, 'comment_body': 'Is it guaranteed that `suggestion_models.TranslationContributionStatsModel.get_multi` will return the corresponding models in the same order? Maybe create a dict of stats model ID -> stats domain object so that we can lookup by ID. Here and below.', 'comment_created': datetime.datetime(2022, 8, 22, 21, 40, 4, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 951938681, 'comment_body': '```suggestion\r\n        is_submission: bool. Indicates whether this function is called when\r\n          submitting a translation.\r\n```\r\n\r\nNit: The arg type is already stated so no need to include in the description as well. Here and below.', 'comment_created': datetime.datetime(2022, 8, 22, 21, 43, 5, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 951942043, 'comment_body': ""Since there's so many occurrences of `is_submission`, seems cleaner to increment the corresponding counts under a condition, e.g. in the `if is_submission` clause below. Here and below."", 'comment_created': datetime.datetime(2022, 8, 22, 21, 48, 9, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 951942180, 'comment_body': 'Typo.', 'comment_created': datetime.datetime(2022, 8, 22, 21, 48, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 956542030, 'comment_body': 'After discussing with @sagangwee I confirmed that exp_opportunity being None is not a valid case and removed the check.', 'comment_created': datetime.datetime(2022, 8, 27, 5, 45, 56, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 956542062, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 8, 27, 5, 46, 17, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 956542120, 'comment_body': 'Added more test cases.', 'comment_created': datetime.datetime(2022, 8, 27, 5, 46, 50, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 956544005, 'comment_body': '@seanlip Sagang confirmed that, a skill will be assigned to only one topic. But in any case if there would be more than one topics that have a given skill, there could be fake contributor/reviewer statistics created. In that case shall we store question contribution/review stats per skill per user.(Currently we are storing question contribution/review stats per topic per user).\r\n\r\nIf we store question contribution/review stats per skill per user, then we will have to update this mock to display stats per skill.(Currently we have planned to show per topic https://www.figma.com/file/SNOHAatFcCvdvIAdxAzF6E/Contributor-Dashboard-Achievements?node-id=112%3A40)\r\n\r\ncc/ @sagangwee ', 'comment_created': datetime.datetime(2022, 8, 27, 6, 9, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 956544398, 'comment_body': 'Yes we fetch them once https://docs.google.com/document/d/16SciF9u-AngOdmvBaSyjYCAYrppR6lTE-S2vwhhh86A/edit#bookmark=id.rpcmy3f6cyjv', 'comment_created': datetime.datetime(2022, 8, 27, 6, 14, 58, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 956544414, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2022, 8, 27, 6, 15, 18, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 956544690, 'comment_body': '""1 *"" is to add `accepted_translations_count` if the suggestion is not submission(i.e. when reviewing) and if the suggestion is accepted.', 'comment_created': datetime.datetime(2022, 8, 27, 6, 17, 29, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 956544722, 'comment_body': 'Should be ""1*"" and updated.', 'comment_created': datetime.datetime(2022, 8, 27, 6, 17, 51, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 956544728, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 27, 6, 17, 59, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 956544737, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 27, 6, 18, 9, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 956544880, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2022, 8, 27, 6, 19, 30, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 956544962, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2022, 8, 27, 6, 19, 53, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 956545009, 'comment_body': 'Renamed `generate_id` as `build_id`', 'comment_created': datetime.datetime(2022, 8, 27, 6, 20, 34, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 956545031, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 27, 6, 20, 41, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 956545043, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 27, 6, 20, 53, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 956545048, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 27, 6, 21, 1, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 956545162, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 27, 6, 23, 1, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 956545207, 'comment_body': 'Separated into a new function as @vojtechjelinek suggested.', 'comment_created': datetime.datetime(2022, 8, 27, 6, 23, 28, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 956545211, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 27, 6, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 956624345, 'comment_body': 'Wait ... I\'m pretty sure that, in our current system for content management, a skill can appear in multiple topics. So it\'s important to account for that.\r\n\r\nI would say that, in the mocks, we should still show ""per topic"" since that\'s the milestone that matters. Also, if you show skills, it will overflow very quickly. I have no problems with a contribution being counted for two topics if the skill is in two topics, that is totally OK.\r\n\r\nWhether to store stats for skills in the backend (in case it\'s needed later) is a question I\'m not sure about. Do you have any thoughts on this? One possible issue is that there is the potential for ""score decreases"" if we change the assignment of skills to topics later. On the other hand I can imagine having 1000 skills and I\'m not sure if that will result in latency issues when fetching the data. Additionally it\'s possible to merge skills into other skills and we\'d need to deal with that properly in the future.\r\n\r\nOn the whole, I would say, if we don\'t ever plan to show stats for skills, we probably don\'t need to do the bookkeeping for that. But let me know your thoughts.', 'comment_created': datetime.datetime(2022, 8, 27, 21, 14, 32, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 956624834, 'comment_body': 'Re https://github.com/oppia/oppia/pull/15917#discussion_r948652050 :\r\n\r\nWhy is fetching them all at once better than the alternative of doing so more incrementally?\r\nWill there be any latency issues?\r\nIs there a decision analysis for this? If not, might be worth making one.', 'comment_created': datetime.datetime(2022, 8, 27, 21, 19, 49, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 956624872, 'comment_body': 'This and other similar comments need more detail. Please check with @sahiljoster32 for guidance on this.', 'comment_created': datetime.datetime(2022, 8, 27, 21, 20, 44, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 956625027, 'comment_body': 'Re https://github.com/oppia/oppia/pull/15917#discussion_r948653058 -- I just meant, why `1 * int(X)` instead of just `int(X)`? Ditto a few lines below.', 'comment_created': datetime.datetime(2022, 8, 27, 21, 22, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 956625061, 'comment_body': 'Indent by 4.', 'comment_created': datetime.datetime(2022, 8, 27, 21, 23, 5, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 956625077, 'comment_body': ""Can't this fit on one line?\r\n\r\n```\r\n        translation_contribution_stat.accepted_translations_count += (\r\n            ...)\r\n```\r\n"", 'comment_created': datetime.datetime(2022, 8, 27, 21, 23, 38, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 956625082, 'comment_body': 'Same concerns in this and other functions in this file, as above.', 'comment_created': datetime.datetime(2022, 8, 27, 21, 24, 3, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 956625176, 'comment_body': ""Why change this? build_id actually sounds more like a noun in some cases (it's the id of a build) so just wanted to check why the old name was not suitable. Ditto below.\r\n\r\nEDIT: Ah, saw @vojtechjelinek's comment. Try construct_id. "", 'comment_created': datetime.datetime(2022, 8, 27, 21, 25, 7, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 956625293, 'comment_body': 'Any type ignores (except for no-untyped-call) need a clear explanatory comment. Please talk to @sahiljoster32 for advice on this (or, ideally, update the code so that the ignores are not required).', 'comment_created': datetime.datetime(2022, 8, 27, 21, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 956625558, 'comment_body': 'I\'m having trouble seeing those other cases (e.g. I can\'t find rejected questions, etc.).  The test names don\'t help because they just say ""test this function"". \r\n\r\nCan you either clarify what\'s being tested in the test names, or leave comments throughout the test to explain what cases/behaviours specific parts of the test are covering?', 'comment_created': datetime.datetime(2022, 8, 27, 21, 29, 12, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 957070699, 'comment_body': '```suggestion\r\ndef _create_translation_review_stats_from_model(\r\n    translation_review_stats_model: (\r\n        suggestion_models.TranslationReviewStatsModel\r\n    )\r\n) -> suggestion_registry.TranslationReviewStats:\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 9, 7, 45, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 957070827, 'comment_body': 'ditto below', 'comment_created': datetime.datetime(2022, 8, 29, 9, 7, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 957071439, 'comment_body': '```suggestion\r\ndef _get_all_translation_review_stats(\r\n    user_id: str\r\n) -> List[suggestion_registry.TranslationReviewStats]:\r\n```\r\n\r\nditto elsewhere', 'comment_created': datetime.datetime(2022, 8, 29, 9, 8, 33, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 957075512, 'comment_body': 'You can use `zip` here and put the `stat = stats_dict[stats_model.id]` into the for loop header.\r\n\r\nditto in all the other similar functions', 'comment_created': datetime.datetime(2022, 8, 29, 9, 13, 1, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 957077663, 'comment_body': 'You can generate just the dict and then get the IDs using `keys()`.\r\n\r\nditto in all the other similar functions', 'comment_created': datetime.datetime(2022, 8, 29, 9, 15, 27, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 957078299, 'comment_body': '```suggestion\r\ndef update_translation_contribution_stats_at_submission(\r\n    suggestion: suggestion_registry.BaseSuggestion,\r\n    user_id: str, \r\n    target_id: str\r\n) -> None:\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 9, 16, 9, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 957103287, 'comment_body': 'Should you create a helper function for this? You seem to use it in many places.', 'comment_created': datetime.datetime(2022, 8, 29, 9, 43, 49, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 957104874, 'comment_body': 'Could you create a function in `opportunity_services` that will fetch just one summary and return it directly?', 'comment_created': datetime.datetime(2022, 8, 29, 9, 45, 33, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 957122916, 'comment_body': 'Put the square brackets next to the normal brackets, so it will be:\r\n```\r\n([\r\n\r\n\r\n])', 'comment_created': datetime.datetime(2022, 8, 29, 9, 56, 41, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 957632350, 'comment_body': ""If this is only used by the controller to fetch each type of stat model, then might be better to have 4 separate endpoints to fetch each stat separately since in the mocks they're displayed individually anyway: https://www.figma.com/file/SNOHAatFcCvdvIAdxAzF6E/Contributor-Dashboard-Achievements?node-id=107%3A2."", 'comment_created': datetime.datetime(2022, 8, 29, 17, 42, 47, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 957634331, 'comment_body': 'nit: Remove new line. Here and below.', 'comment_created': datetime.datetime(2022, 8, 29, 17, 45, 23, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 957642770, 'comment_body': 'Consider extracting the value update into a new function, e.g. `get_incremented_translation_contribution_stats(translation_contribution_stat_model, content_word_count)`.', 'comment_created': datetime.datetime(2022, 8, 29, 17, 55, 36, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 957644286, 'comment_body': 'Maybe simpler to have conditional increments? e.g.\r\n\r\n```\r\nif suggestion_is_accepted:\r\n  ...\r\nif suggestion_is_rejected:\r\n  ...\r\n```\r\n\r\nAvoids having to cast booleans into ints. This does increase nesting, which can be mitigated by extracting the logic into a new function.', 'comment_created': datetime.datetime(2022, 8, 29, 17, 57, 23, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 957647411, 'comment_body': ""In Python, it's more idiomatic to use list comprehension for something like this, e.g.:\r\n\r\n```\r\ntopic_ids = [\r\n  topic.topic_id\r\n  for topic in skill_services.get_all_topic_assignments_for_skill(target_id)\r\n]\r\n```"", 'comment_created': datetime.datetime(2022, 8, 29, 18, 1, 1, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 957652629, 'comment_body': 'We can `continue` here and then get rid of the `else` block below. That way, we reduce nesting, which should help with the line breaks and readability. \r\n\r\nditto below', 'comment_created': datetime.datetime(2022, 8, 29, 18, 6, 47, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 960039656, 'comment_body': 'Fetch all at once will be needed for the badges page since we show everything at one place. I think we can use separate API calls to fetch data for the stats page based on the contribution type selected. I made a analysis here and proposed my suggestions. https://docs.google.com/document/d/10VUaO7yNMzG74a61a6NepOkUu8DOsC3gzgv8yLWaiFw/edit?usp=sharing', 'comment_created': datetime.datetime(2022, 8, 31, 21, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 960041121, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 31, 21, 28, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 960041314, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 31, 21, 28, 40, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 960041692, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 31, 21, 29, 16, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 960041798, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 31, 21, 29, 27, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 960042739, 'comment_body': 'I removed almost every ignored checks/explained in comments but this one and another remains and I will contact @sahiljoster32 for some advice.', 'comment_created': datetime.datetime(2022, 8, 31, 21, 31, 1, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 960043432, 'comment_body': 'I added more cases for acceptances, rejects and reviewer edits. Furthermore explained some complex tests cases by commenting.', 'comment_created': datetime.datetime(2022, 8, 31, 21, 32, 4, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 960043982, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 31, 21, 32, 56, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 960045005, 'comment_body': ""I moved this into a separate function `get_incremental_translation_contribution_stats_at_review` and I don't think we need condition check in that function because it is a very simple function."", 'comment_created': datetime.datetime(2022, 8, 31, 21, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 960045139, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 31, 21, 34, 49, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 960045217, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 31, 21, 34, 57, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 960045316, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 31, 21, 35, 6, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 960045400, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 31, 21, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 960048484, 'comment_body': 'Done. But getting keys from `keys()` made a mypy check failure for the following statement saying that ""get_multi"" of `""BaseModel"" has incompatible type ""KeysView[str]""; expected ""Sequence[Optional[str]]""  [arg-type]`. If we want to get `Sequence[Optional[str]]` type for `stats_ids` we will have use the previous approach but that would be inefficient. So I ignored mypy checks for the next statement and added a comment mentioning it.', 'comment_created': datetime.datetime(2022, 8, 31, 21, 40, 23, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 960048660, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 31, 21, 40, 43, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 960048743, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 31, 21, 40, 49, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 960051525, 'comment_body': 'I think we will have to use zip like this right?\r\n\r\n```\r\nfor (stat_key, stat_value), (stats_model) in zip(stats_dict.items(), stats_models_to_update):\r\n```\r\n\r\nIf we use it like that we still can not confirm whether the order of `stats_dict` matches for `stats_models_to_update`?', 'comment_created': datetime.datetime(2022, 8, 31, 21, 45, 9, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 961186648, 'comment_body': '```suggestion\r\n    if exp_opportunity_summary_model is None:\r\n        return None\r\n    return get_exploration_opportunity_summary_from_model(\r\n        exp_opportunity_summary_model)\r\n```', 'comment_created': datetime.datetime(2022, 9, 1, 23, 58, 3, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 961188622, 'comment_body': 'Remove new line.', 'comment_created': datetime.datetime(2022, 9, 2, 0, 4, 19, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 961189840, 'comment_body': 'Would casting `stats_ids` as a `list` work?', 'comment_created': datetime.datetime(2022, 9, 2, 0, 8, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 961190472, 'comment_body': '```suggestion\r\n    stats_models = (\r\n```', 'comment_created': datetime.datetime(2022, 9, 2, 0, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 961190918, 'comment_body': 'Should this be prepended with an underscore?', 'comment_created': datetime.datetime(2022, 9, 2, 0, 11, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 961192686, 'comment_body': 'This particular function seems simple enough to just inline here.', 'comment_created': datetime.datetime(2022, 9, 2, 0, 16, 46, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 961194368, 'comment_body': ""Why does this function need to accept a list? Don't the callers currently always only supply a single stats object?"", 'comment_created': datetime.datetime(2022, 9, 2, 0, 22, 8, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 961328971, 'comment_body': ""Here's a thought -- will the badges page ever be the default page?\r\n\r\nIf so then yeah, two endpoints seems sensible; maybe you can cache the data in the frontend so that you don't need to refetch data you already have.\r\n\r\nIf not, then one idea might be to pre-fetch and cache the badges data while the user is on the stats page, and it's unlikely that the user will run into a lag unless they navigate to the badges page very quickly. \r\n\r\nWhat do you think?\r\n"", 'comment_created': datetime.datetime(2022, 9, 2, 6, 27, 29, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 961338201, 'comment_body': ""I have replied to your email. But if you still have any doubts I'll be happy to help."", 'comment_created': datetime.datetime(2022, 9, 2, 6, 41, 17, tzinfo=datetime.timezone.utc), 'commenter': 'sahiljoster32', 'type': 'User'}, {'comment_id': 961339359, 'comment_body': '@chris7716 please put a proper reason why this is not None here.\r\n\r\nBut yeah if you are not sure then please raise an exception here, and after that you can use assert if it is still needed.', 'comment_created': datetime.datetime(2022, 9, 2, 6, 43, 7, tzinfo=datetime.timezone.utc), 'commenter': 'sahiljoster32', 'type': 'User'}, {'comment_id': 961363713, 'comment_body': 'Added the reasoning.', 'comment_created': datetime.datetime(2022, 9, 2, 7, 19, 27, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 961364200, 'comment_body': 'Yeah just `int(X)` is sufficient and updated.', 'comment_created': datetime.datetime(2022, 9, 2, 7, 20, 8, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 961364778, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 2, 7, 20, 54, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 961364957, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 2, 7, 21, 8, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 961365074, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 2, 7, 21, 17, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 961365301, 'comment_body': 'Yes it was resolved. Thanks', 'comment_created': datetime.datetime(2022, 9, 2, 7, 21, 35, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 961372686, 'comment_body': 'If a contribution being counted for two topics if the skill is in two topics, is fine I don\'t think that there is an issue for going ahead with the current plan as well. We can keep the storage models as it is right now(Also we have not planned to show stats for skills before as well).\r\n\r\n""score decreases"" should not happen even if skill assignments are changed because at the submission/review of the suggestion we store the stats data in the stats model with corresponding topic id that the skill was assigned at the time of submission/review. Those data will not be changed even if the skill assignments are changed.\r\n\r\nSo I think, we can go ahead with currently what we have done in the storage layer by storing question stats per topic per user.', 'comment_created': datetime.datetime(2022, 9, 2, 7, 30, 57, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 961378127, 'comment_body': 'The default page will be the stats page where those stats tables are displayed.\r\n\r\nAnd yes I agree with pre-fetching and caching badges data when the user is on the stats page.\r\n\r\nWill it be fine if I followup this in my next PR i.e. milestone 1.6 which will basically add the controller layer related implementation?', 'comment_created': datetime.datetime(2022, 9, 2, 7, 38, 16, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 961912765, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 2, 18, 17, 43, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 961912848, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 2, 18, 17, 51, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 961913010, 'comment_body': 'It worked. Done.', 'comment_created': datetime.datetime(2022, 9, 2, 18, 18, 6, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 961913055, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 2, 18, 18, 12, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 961913103, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 2, 18, 18, 18, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 961913193, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 2, 18, 18, 25, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 961914091, 'comment_body': 'I thought in future if we need to update a list of stats data, it would be helpful so I kept it as a list.', 'comment_created': datetime.datetime(2022, 9, 2, 18, 19, 59, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 961924063, 'comment_body': 'Since the below functions don\'t return the stats model, I would drop the ""get"" and name them like `increment...`', 'comment_created': datetime.datetime(2022, 9, 2, 18, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 961925333, 'comment_body': ""Nit: Doesn't seem necessary to have these new lines between the function calls. Remove here and below."", 'comment_created': datetime.datetime(2022, 9, 2, 18, 39, 6, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 961926252, 'comment_body': '```suggestion\r\n    reviewer when a question is reviewed.\r\n```', 'comment_created': datetime.datetime(2022, 9, 2, 18, 40, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 961927127, 'comment_body': 'Add new lines above and below to differentiate between the arrange, act, and assert test phases. Ditto elsewhere.', 'comment_created': datetime.datetime(2022, 9, 2, 18, 42, 12, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 961930667, 'comment_body': ""Are these arguments necessary? Can't you get all this information from the suggestion object (assuming the suggestion object is up-to-date)?"", 'comment_created': datetime.datetime(2022, 9, 2, 18, 48, 16, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 961932431, 'comment_body': ""Since this function is only setting 2 properties,, doesn't seem worth it to have a separate function for this. I would delete this function and just inline these lines. Ditto with `get_incremental_question_contribution_stats_at_review`."", 'comment_created': datetime.datetime(2022, 9, 2, 18, 51, 29, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 961935662, 'comment_body': 'This section is the test setup (the ""arrange"" phase), so add a new line below it to separate it from the action under test. Also, can you add a comment explaining what is necessary for the setup, e.g. ""Create an exploration, topic, stories for suggestions."" Ditto below.', 'comment_created': datetime.datetime(2022, 9, 2, 18, 56, 46, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 961936335, 'comment_body': 'We seem to repeat this section multiple times. Can you create a helper function to do this (setup for creating suggestions)?', 'comment_created': datetime.datetime(2022, 9, 2, 18, 57, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 961937448, 'comment_body': 'Can you add a comment above each different model assertion, e.g. ""Assert translation review stats."" That way it\'s easier to follow. Ditto elsewhere.', 'comment_created': datetime.datetime(2022, 9, 2, 18, 59, 47, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 961952199, 'comment_body': '> The default page will be the stats page where those stats tables are displayed.\r\n\r\nEven so, will we be providing ""deep URLs"" where a user can go to that URL and then automatically land on the badges page? Typically we should do this if a page has multiple tabs etc., though I suppose this is not doable immediately because even the main part of the contributor dashboard doesn\'t have this. But if it\'s something that we should do in future then maybe worth planning for it.\r\n\r\n> Will it be fine if I followup this in my next PR i.e. milestone 1.6 which will basically add the controller layer related implementation?\r\n\r\nThat\'s up to @sagangwee since he\'s mentoring your project. I\'m happy with anything you\'re both happy with. But in general if you\'re punting anything to later, there needs to be a TODO and an issue filed (or it needs to be tracked somewhere where it won\'t be missed).', 'comment_created': datetime.datetime(2022, 9, 2, 19, 26, 1, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 961953420, 'comment_body': ""I don't understand this reasoning. How do you know that the for loop gives a stats object that's not None? Typically get_multi() could include None entries.\r\n\r\nWe need to be really careful with the justification here because this could lead to production errors. We just encountered something similar in the August release which is now causing delays to the release.\r\n\r\n@sahiljoster32 can give you more guidance on what is acceptable here."", 'comment_created': datetime.datetime(2022, 9, 2, 19, 28, 22, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 961954757, 'comment_body': 'I was thinking about this more and I would suggest replacing `int(suggestion_is_accepted)` throughout with `(1 if suggestion_is_accepted else 0)`. \r\n\r\nConceptually I think that\'s more correct and will help with comprehensibility/maintainability, since you\'re not actually really aiming to assign ""some version of suggestion_is_accepted"" to the attribute (though I know that both formulations would lead to the same result).', 'comment_created': datetime.datetime(2022, 9, 2, 19, 30, 56, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 961964069, 'comment_body': 'Change the docstring to also say construct.', 'comment_created': datetime.datetime(2022, 9, 2, 19, 49, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 961964679, 'comment_body': '```suggestion\r\ndef _update_translation_contribution_stats_models(\r\n    translation_contribution_stats: List[\r\n        suggestion_registry.TranslationContributionStats\r\n    ]\r\n) -> None:\r\n    """"""Updates TranslationContributionStatsModel models for given translation\r\n```', 'comment_created': datetime.datetime(2022, 9, 2, 19, 50, 14, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 961964913, 'comment_body': 'ditto below', 'comment_created': datetime.datetime(2022, 9, 2, 19, 50, 42, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 961967123, 'comment_body': '..if it exists, else None.', 'comment_created': datetime.datetime(2022, 9, 2, 19, 55, 3, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 961967332, 'comment_body': 'Deindent by 4.', 'comment_created': datetime.datetime(2022, 9, 2, 19, 55, 11, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 961968387, 'comment_body': 'Why do you need to do all these casts to strings? /cc @sahiljoster32 ', 'comment_created': datetime.datetime(2022, 9, 2, 19, 56, 54, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 961968704, 'comment_body': 'Why we need to use `str`?', 'comment_created': datetime.datetime(2022, 9, 2, 19, 57, 30, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 961969192, 'comment_body': 'Same thing, this needs careful and proper justification. I suggest getting a review from @sahiljoster32 to see if what you write here convinces him.', 'comment_created': datetime.datetime(2022, 9, 2, 19, 58, 18, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 961969352, 'comment_body': 'Same note here and below.', 'comment_created': datetime.datetime(2022, 9, 2, 19, 58, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 961969384, 'comment_body': '```suggestion\r\n    stats_dict = {}\r\n    for stat in translation_review_stats:\r\n        stat_id = suggestion_models.TranslationReviewStatsModel.construct_id(\r\n            stat.language_code, stat.contributor_user_id, stat.topic_id)\r\n        stats_dict[stat_id] = stat\r\n\r\n    stats_ids = stats_dict.keys()\r\n\r\n    stats_models = (\r\n        suggestion_models.TranslationReviewStatsModel.get_multi(list(\r\n            stats_ids)))\r\n    stats_models_to_update: List[\r\n        suggestion_models.TranslationReviewStatsModel] = []\r\n    for stats_model in stats_models:\r\n```\r\n\r\nditto elsewhere', 'comment_created': datetime.datetime(2022, 9, 2, 19, 58, 44, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 961969532, 'comment_body': 'Indentation seems odd. It should only be by 4 from the previous line -- please fix.', 'comment_created': datetime.datetime(2022, 9, 2, 19, 59, 1, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 961969991, 'comment_body': ""_get_date_as_string() or _convert_date_to_string()\r\n\r\n(because: this function does not care that it's a contribution date, and the function name is actually completely missing the description of what the function does)."", 'comment_created': datetime.datetime(2022, 9, 2, 19, 59, 51, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 961970034, 'comment_body': ""```suggestion\r\n    return datetime.datetime.strptime(\r\n        str(date.utcnow().date().isoformat()), '%Y-%m-%d'\r\n    ).date()\r\n```"", 'comment_created': datetime.datetime(2022, 9, 2, 19, 59, 58, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 961970199, 'comment_body': '```suggestion\r\n    suggestion: suggestion_registry.BaseSuggestion,\r\n    user_id: str,\r\n    target_id: str\r\n```\r\n\r\nditto below', 'comment_created': datetime.datetime(2022, 9, 2, 20, 0, 19, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 961970360, 'comment_body': 'Please do not set this to empty string, rather use `None`', 'comment_created': datetime.datetime(2022, 9, 2, 20, 0, 40, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 961970717, 'comment_body': 'Not done', 'comment_created': datetime.datetime(2022, 9, 2, 20, 1, 18, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 961970922, 'comment_body': 'Same notes above re (0 if suggestion_is_accepted) etc.\r\n\r\nor you can do something like:\r\n\r\n```\r\n translation_contribution_stat.rejected_translation_word_count += (\r\n     0 if suggestion_is_accepted else content_word_count)\r\n```\r\nwhich seems cleaner. Similarly elsewhere.', 'comment_created': datetime.datetime(2022, 9, 2, 20, 1, 42, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 961970932, 'comment_body': 'ditto below', 'comment_created': datetime.datetime(2022, 9, 2, 20, 1, 43, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 961972338, 'comment_body': 'This can fit one line or can be split up so that it is more readable (after `int(` for example).', 'comment_created': datetime.datetime(2022, 9, 2, 20, 4, 40, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 961973246, 'comment_body': '```suggestion\r\n    translation_contribution_stat.accepted_translation_word_count += (\r\n        content_word_count * int(suggestion_is_accepted))\r\n    translation_contribution_stat.rejected_translations_count += int(\r\n        not suggestion_is_accepted)\r\n    translation_contribution_stat.rejected_translation_word_count += (\r\n        content_word_count * int(not suggestion_is_accepted))\r\n```', 'comment_created': datetime.datetime(2022, 9, 2, 20, 6, 2, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 961974192, 'comment_body': 'Yeah, right.', 'comment_created': datetime.datetime(2022, 9, 2, 20, 7, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 962001152, 'comment_body': 'Every assert must have a comment justifying it. /cc @sahiljoster32 ', 'comment_created': datetime.datetime(2022, 9, 2, 20, 48, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 962264396, 'comment_body': ""Here, `stat.language_code`, `stat.contributor_user_id` and `stat.topic_id` is of type Optional[str]. Because while creating default TranslationContributionStats domain object we are providing them as None https://github.com/oppia/oppia/blob/7ad815df8c289a032080cc909a03f4a3b37287a6/core/domain/suggestion_registry.py#L1704\r\n\r\nSo, instead of just casting to string please throw an error, if these values are not expected to be None here. \r\n\r\nSomething like: \r\n```python\r\nif stat.language_code is None:\r\n   raise Exception(' <<some valide message >>')\r\n```"", 'comment_created': datetime.datetime(2022, 9, 4, 7, 21, 7, tzinfo=datetime.timezone.utc), 'commenter': 'sahiljoster32', 'type': 'User'}, {'comment_id': 962267323, 'comment_body': 'I\'m not ok with the reasoning here -- but since it is currently in the development phase I think you can do the following thing:\r\n\r\nInstead of fetching the values in this function from `get_multi`, define a new function that will check the None case for you and throw an error if None is encountered.\r\n\r\nMock implementation:\r\n```python\r\n\r\n@ overload\r\nget_TranslationContributionStats_model(stats_ids: List[str] *, strict: Literal[True]) -> List[TranslationContributionStatsModel]: ...\r\n\r\n@ overload\r\nget_TranslationContributionStats_model(stats_ids: List[str]) -> List[Optional[TranslationContributionStatsModel]]: ...\r\n\r\n\r\n@ overload\r\nget_TranslationContributionStats_model(stats_ids: List[str] *, strict: Literal[False]) -> List[Optional[TranslationContributionStatsModel]]: ...\r\n\r\n\r\nget_TranslationContributionStats_model(stats_ids: List[str], strict=False) -> Sequence[Optional[TranslationContributionStatsModel]]:\r\n  """"your doc string\r\n\r\n  args:\r\n     strict: bool. argument to decide whether to fail nosily if None case occur or not. If true throws an error and if false just return the list with None values.\r\n\r\n   return:\r\n     """"your return doc""""\r\n\r\n   """"""\r\n\r\n      stats_models = (\r\n        suggestion_models.TranslationContributionStatsModel.get_multi(\r\n            list(stats_ids)))\r\n    \r\n      if strict:\r\n           for model in stats_model:\r\n                  if model is None:\r\n                      raise Exception(\'...\')\r\n\r\n      return stats_models\r\n\r\n\r\n```\r\n\r\n\r\nBy doing the above thing, If you call `get_TranslationContributionStats_model` with strict = True then your list\'s type will be without optional.', 'comment_created': datetime.datetime(2022, 9, 4, 7, 42, 49, tzinfo=datetime.timezone.utc), 'commenter': 'sahiljoster32', 'type': 'User'}, {'comment_id': 962267392, 'comment_body': 'Please see in the codebase for proper implementation.', 'comment_created': datetime.datetime(2022, 9, 4, 7, 43, 25, tzinfo=datetime.timezone.utc), 'commenter': 'sahiljoster32', 'type': 'User'}, {'comment_id': 962268726, 'comment_body': ""wait!, In line 2048 you are defining `stats_models_to_update` as an empty list and at line 2073 your passing this (stats_models_to_update) list directly without appending anything to this list in between. Basically, you are passing empty list to `update_timestamps_multi` and `put_multi` methods? -- please correct me if I'm wrong here."", 'comment_created': datetime.datetime(2022, 9, 4, 7, 53, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sahiljoster32', 'type': 'User'}, {'comment_id': 962269000, 'comment_body': 'Also, since you are defining stats_models_to_update as a List[suggestion_models.TranslationContributionStatsModel] I really doubt that you need to assert here -- can you please provide the log error that MyPy is saying?', 'comment_created': datetime.datetime(2022, 9, 4, 7, 55, 51, tzinfo=datetime.timezone.utc), 'commenter': 'sahiljoster32', 'type': 'User'}, {'comment_id': 962269176, 'comment_body': 'I think here new method approach will work.', 'comment_created': datetime.datetime(2022, 9, 4, 7, 57, 3, tzinfo=datetime.timezone.utc), 'commenter': 'sahiljoster32', 'type': 'User'}, {'comment_id': 962269583, 'comment_body': ""Same comment as above why are we providing an empty list here -- basically, we are not appending anything to this list. In line 2104 we are defining an empty list and here we are passing that list but in between, we are not appending anything? -- again please correct me If I'm wrong "", 'comment_created': datetime.datetime(2022, 9, 4, 8, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'sahiljoster32', 'type': 'User'}, {'comment_id': 963107570, 'comment_body': '> Even so, will we be providing ""deep URLs"" where a user can go to that URL and then automatically land on the badges page? Typically we should do this if a page has multiple tabs etc., though I suppose this is not doable immediately because even the main part of the contributor dashboard doesn\'t have this. But if it\'s something that we should do in future then maybe worth planning for it.\r\n\r\nIn that case I will add a separate endpoint anyhow since it will be useful for future as well.\r\n\r\n> That\'s up to @sagangwee since he\'s mentoring your project. I\'m happy with anything you\'re both happy with. But in general if you\'re punting anything to later, there needs to be a TODO and an issue filed (or it needs to be tracked somewhere where it won\'t be missed).\r\n\r\nCreated a TODO comment and linked it [here](https://docs.google.com/document/d/16SciF9u-AngOdmvBaSyjYCAYrppR6lTE-S2vwhhh86A/edit#bookmark=id.wljrj85sobjw) ', 'comment_created': datetime.datetime(2022, 9, 5, 19, 51, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963107674, 'comment_body': 'Sorry done.', 'comment_created': datetime.datetime(2022, 9, 5, 19, 51, 44, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963107945, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 19, 52, 44, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963108208, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 19, 53, 53, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963108291, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 19, 54, 10, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963108324, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 19, 54, 19, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963108449, 'comment_body': 'Yeah I only kept suggestion object now and done.', 'comment_created': datetime.datetime(2022, 9, 5, 19, 54, 49, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963108509, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 19, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963108560, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 19, 55, 8, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963108576, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 19, 55, 15, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963108606, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 19, 55, 22, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963108645, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 19, 55, 32, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963108773, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 19, 56, 9, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963110177, 'comment_body': 'As it is mentioned [here](https://github.com/oppia/oppia/pull/15917#discussion_r962264396) `TranslationContributionStatsModel.construct_id` expects a strings but these attributes in `suggestion_registry.TranslationContributionStats` are `Optional[str]`. It is obvious that these attributes are not None for this case since `TranslationContributionStats` objects passed in to `_update_translation_contribution_stats_models` will contain string values for these attributes. Anyway I added an exception when they are None.', 'comment_created': datetime.datetime(2022, 9, 5, 20, 1, 51, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963110217, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 20, 2, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963110279, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 20, 2, 11, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963110314, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 20, 2, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963110445, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 20, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963110500, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 20, 2, 56, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963110567, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 20, 3, 10, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963111406, 'comment_body': 'I made it `(1 if suggestion_is_accepted else 0)`', 'comment_created': datetime.datetime(2022, 9, 5, 20, 6, 17, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963111458, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 20, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963111490, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 20, 6, 38, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963111530, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 20, 6, 47, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963111922, 'comment_body': ""> wait!, In line 2048 you are defining stats_models_to_update as an empty list and at line 2073 your passing this (stats_models_to_update) list directly without appending anything to this list in between. Basically, you are passing empty list to update_timestamps_multi and put_multi methods? -- please correct me if I'm wrong here.\r\n\r\nThanks for pointing it out. I appended `stats_models_to_update` `stats_model`.\r\n\r\n> Also, since you are defining stats_models_to_update as a List[suggestion_models.TranslationContributionStatsModel] I really doubt that you need to assert here -- can you please provide the log error that MyPy is saying?\r\n\r\nYeah I removed the assertion."", 'comment_created': datetime.datetime(2022, 9, 5, 20, 8, 32, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963111957, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 20, 8, 43, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963111994, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 20, 8, 53, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963112119, 'comment_body': 'Renamed to `_get_date_as_string `', 'comment_created': datetime.datetime(2022, 9, 5, 20, 9, 22, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963112158, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 20, 9, 29, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963112196, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 20, 9, 40, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963112263, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 20, 9, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963112279, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 5, 20, 10, 2, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 963402991, 'comment_body': 'Please create an issue and use it in the TODO, you can link the doc in the issue.', 'comment_created': datetime.datetime(2022, 9, 6, 8, 21, 15, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 963409027, 'comment_body': '```suggestion\r\n@overload\r\ndef get_translation_contribution_stats_models(\r\n    stats_ids: List[str]\r\n) -> List[suggestion_models.TranslationContributionStatsModel]: ...\r\n```\r\n\r\nbecause the default value for `strict` is `True`.', 'comment_created': datetime.datetime(2022, 9, 6, 8, 27, 2, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 963409471, 'comment_body': '```suggestion\r\n    stats_models = (\r\n        suggestion_models.TranslationContributionStatsModel.get_multi(\r\n            list(stats_ids)))\r\n```', 'comment_created': datetime.datetime(2022, 9, 6, 8, 27, 25, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 963411924, 'comment_body': ""```suggestion\r\n    if not strict:\r\n        return stats_models\r\n        \r\n    for model in stats_models:\r\n        if model is None:\r\n            raise Exception('The stats models do not exist for the given IDs.')\r\n\r\n    return stats_models\r\n```"", 'comment_created': datetime.datetime(2022, 9, 6, 8, 28, 49, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 963412843, 'comment_body': 'Ditto as above, this should not be optional.', 'comment_created': datetime.datetime(2022, 9, 6, 8, 29, 23, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 963413434, 'comment_body': 'Ditto as above.', 'comment_created': datetime.datetime(2022, 9, 6, 8, 29, 43, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 963413822, 'comment_body': 'And ditto below.', 'comment_created': datetime.datetime(2022, 9, 6, 8, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 963413943, 'comment_body': 'And ditto below.', 'comment_created': datetime.datetime(2022, 9, 6, 8, 30, 1, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 963419596, 'comment_body': ""I'm leaving the resolution of this to @sahiljoster32 as it relates to his comments."", 'comment_created': datetime.datetime(2022, 9, 6, 8, 33, 47, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 963421782, 'comment_body': 'Wait, looking at this again, why we need to do this bunch of stuff just to get datetime object again?', 'comment_created': datetime.datetime(2022, 9, 6, 8, 36, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 963434345, 'comment_body': ""Okay, I tried this code and it always seems to return today's date. Can you please fix this?"", 'comment_created': datetime.datetime(2022, 9, 6, 8, 47, 44, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 963439323, 'comment_body': ""You don't even need this right? As you set it to the correct value on line  2573"", 'comment_created': datetime.datetime(2022, 9, 6, 8, 52, 9, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 963439903, 'comment_body': '```suggestion\r\n        question_contribution_stat.accepted_questions_count += int(\r\n            suggestion_is_accepted)\r\n```', 'comment_created': datetime.datetime(2022, 9, 6, 8, 52, 39, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 963441520, 'comment_body': 'Somewhere you use `int(<boolean>)` but here you use `1 if <boolean> else 0`, can you please use one approach everywhere.', 'comment_created': datetime.datetime(2022, 9, 6, 8, 54, 3, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 963446272, 'comment_body': '```suggestion\r\n    def test_update_question_stats_when_suggestion_is_edited(\r\n        self\r\n    ) -> None:\r\n```\r\n\r\nditto elsewhere', 'comment_created': datetime.datetime(2022, 9, 6, 8, 58, 19, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 963778170, 'comment_body': '```suggestion\r\n                stat.language_code,\r\n```\r\n\r\nAfter raising the error why you are still casting to str() -- Is MyPy still throwing an error ?', 'comment_created': datetime.datetime(2022, 9, 6, 14, 25, 56, tzinfo=datetime.timezone.utc), 'commenter': 'sahiljoster32', 'type': 'User'}, {'comment_id': 963784173, 'comment_body': 'After doing these changes https://github.com/oppia/oppia/pull/15917/files#r963412843  I think you can remove this assert.', 'comment_created': datetime.datetime(2022, 9, 6, 14, 30, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sahiljoster32', 'type': 'User'}, {'comment_id': 963784491, 'comment_body': 'Ditto as mentioned above', 'comment_created': datetime.datetime(2022, 9, 6, 14, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'sahiljoster32', 'type': 'User'}, {'comment_id': 963784958, 'comment_body': 'Ditto as mentioned above', 'comment_created': datetime.datetime(2022, 9, 6, 14, 31, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sahiljoster32', 'type': 'User'}, {'comment_id': 963785269, 'comment_body': 'again same comment as mentioned above', 'comment_created': datetime.datetime(2022, 9, 6, 14, 31, 37, tzinfo=datetime.timezone.utc), 'commenter': 'sahiljoster32', 'type': 'User'}, {'comment_id': 963951604, 'comment_body': 'Nit: Remove new line? Ditto below.', 'comment_created': datetime.datetime(2022, 9, 6, 16, 49, 28, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 963954980, 'comment_body': ""Can't you cast `suggestion_is_accepted` to an int like below?"", 'comment_created': datetime.datetime(2022, 9, 6, 16, 53, 19, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 963956305, 'comment_body': ""Can't we remove this and just iterate over `skill_services.get_all_topic_assignments_for_skill(\r\n            suggestion.target_id)` below?\r\n\r\nDitto below."", 'comment_created': datetime.datetime(2022, 9, 6, 16, 54, 48, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 963956976, 'comment_body': ""This doesn't seem done?"", 'comment_created': datetime.datetime(2022, 9, 6, 16, 55, 35, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 963957498, 'comment_body': '```suggestion\r\n        # 3. Create stories for translation opportunities.\r\n```', 'comment_created': datetime.datetime(2022, 9, 6, 16, 56, 11, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 963957698, 'comment_body': '```suggestion\r\n        # At this point we can confirm that there should be an associated\r\n```', 'comment_created': datetime.datetime(2022, 9, 6, 16, 56, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 963957984, 'comment_body': '```suggestion\r\n        # Steps required in the setup phase before testing.\r\n```', 'comment_created': datetime.datetime(2022, 9, 6, 16, 56, 43, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 963958426, 'comment_body': '```suggestion\r\n        # Steps required in the setup phase before testing.\r\n```\r\n\r\nMake sure to proofread your comments, especially if it will be duplicated. Ditto below.', 'comment_created': datetime.datetime(2022, 9, 6, 16, 57, 11, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 963958810, 'comment_body': '```suggestion\r\n        # 3. Create stories for translation opportunities.\r\n```', 'comment_created': datetime.datetime(2022, 9, 6, 16, 57, 37, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 963964735, 'comment_body': 'Can you add a bit more detail into what this function sets up? E.g. Creates/publishes 3 explorations, 1 topic with 2 linked skills, and 2 stories linked to the topic and explorations. ', 'comment_created': datetime.datetime(2022, 9, 6, 17, 0, 31, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 963970577, 'comment_body': '```suggestion\r\n        # 4. Create a question suggestion.\r\n```', 'comment_created': datetime.datetime(2022, 9, 6, 17, 3, 28, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 963973889, 'comment_body': ""I'm fine with doing this in M1.6."", 'comment_created': datetime.datetime(2022, 9, 6, 17, 7, 39, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 964318722, 'comment_body': 'All TODOs should point to an issue on our issue tracker. See other TODOs in the codebase for examples.', 'comment_created': datetime.datetime(2022, 9, 7, 2, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 964319815, 'comment_body': ""Hm, see https://github.com/oppia/oppia/pull/15917#discussion_r961954757 -- we're trying to do this semantically correctly and not change types of things. That's because technically suggestion_is_accepted doesn't actually represent an int in the first place.\r\n\r\nIf there are further issues below we should fix them similarly as here, I think."", 'comment_created': datetime.datetime(2022, 9, 7, 2, 16, 56, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 964320310, 'comment_body': ""Please fix this, let's not cast. Ditto elsewhere."", 'comment_created': datetime.datetime(2022, 9, 7, 2, 18, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 964320647, 'comment_body': 'Please see my previous [comment](https://github.com/oppia/oppia/pull/15917#discussion_r961967123) again. You\'re missing an ""it"" and a comma.', 'comment_created': datetime.datetime(2022, 9, 7, 2, 18, 54, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 964321308, 'comment_body': ""Shouldn't TranslationContributionStats be typed in such a way that these attributes are not optional, in that case (even though the superclass attrs might be optional)?\r\n\r\n/cc @sahiljoster32 "", 'comment_created': datetime.datetime(2022, 9, 7, 2, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 965306302, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 17, 33, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965306449, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 17, 43, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965306668, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 18, 1, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965306766, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 18, 10, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965306839, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 18, 18, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965308511, 'comment_body': ""> Wait, looking at this again, why we need to do this bunch of stuff just to get datetime object again?\r\n\r\nI wanted to get the date in the format of yyyy-MM-dd.\r\n\r\n> Okay, I tried this code and it always seems to return today's date. Can you please fix this?\r\n\r\nI removed `utcnow()` and suggestion.last_updated always saved in the UTC time."", 'comment_created': datetime.datetime(2022, 9, 7, 21, 20, 38, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965308752, 'comment_body': 'Yeah removed', 'comment_created': datetime.datetime(2022, 9, 7, 21, 20, 58, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965308841, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 21, 5, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965309110, 'comment_body': 'Made everythong as `1 if <boolean> else 0`', 'comment_created': datetime.datetime(2022, 9, 7, 21, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965309191, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 21, 33, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965309698, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 21, 44, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965310209, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 21, 50, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965310441, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 21, 57, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965310625, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 22, 3, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965310917, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 22, 11, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965311256, 'comment_body': 'Made everything as `1 if <boolean> else 0`', 'comment_created': datetime.datetime(2022, 9, 7, 21, 22, 36, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965311377, 'comment_body': 'Yes and done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 22, 47, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965311518, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 22, 58, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965311558, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 23, 3, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965311615, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 23, 8, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965311679, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 23, 13, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965311750, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 23, 17, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965311818, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 23, 23, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965311910, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 23, 30, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965311993, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965312082, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 23, 45, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965312143, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 7, 21, 23, 50, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965314506, 'comment_body': 'Yeah every translation contribution stat should have a language_code, contributor_user_id and a topic_id.', 'comment_created': datetime.datetime(2022, 9, 7, 21, 27, 12, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965513093, 'comment_body': 'Better to say exactly which ID, for debugging purposes.', 'comment_created': datetime.datetime(2022, 9, 8, 5, 25, 3, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 965513176, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2022, 9, 8, 5, 25, 14, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 965513236, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2022, 9, 8, 5, 25, 21, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 965513324, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2022, 9, 8, 5, 25, 32, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 965514274, 'comment_body': 'Why do you need str() here?', 'comment_created': datetime.datetime(2022, 9, 8, 5, 27, 23, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 965514531, 'comment_body': 'Why do you need str() here? Is it possible for suggestion.final_reviewer_id to not be a string? If so this should be handled properly.', 'comment_created': datetime.datetime(2022, 9, 8, 5, 27, 54, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 965514591, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2022, 9, 8, 5, 27, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 965514639, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2022, 9, 8, 5, 28, 7, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 965514659, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2022, 9, 8, 5, 28, 11, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 965611712, 'comment_body': 'Most of the code here is not needed \r\n![image](https://user-images.githubusercontent.com/10142938/189063820-8ac7a215-3a33-4027-a6b7-02f9de6460b1.png)\r\n', 'comment_created': datetime.datetime(2022, 9, 8, 7, 39, 41, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 965630565, 'comment_body': ""Something like:\r\n\r\n```python\r\n    for index, model in enumerate(stats_models):\r\n        if model is None:\r\n            raise Exception(\r\n                'The stats models do not exist for the stats_id %s.' % stats_ids[index]\r\n            )\r\n```\r\n\r\nbecause currently, we are following this pattern but if you have a better idea feel free to use that!"", 'comment_created': datetime.datetime(2022, 9, 8, 7, 59, 5, tzinfo=datetime.timezone.utc), 'commenter': 'sahiljoster32', 'type': 'User'}, {'comment_id': 965682251, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 8, 8, 49, 22, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965682357, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 8, 8, 49, 28, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965682442, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 8, 8, 49, 33, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965682990, 'comment_body': 'date.date() is sufficient and I removed the function since it is not necessary.', 'comment_created': datetime.datetime(2022, 9, 8, 8, 50, 7, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965688229, 'comment_body': '`final_reviewer_id`is in `Optional[str]` type since it can be None before reviewing a suggestion. But in this case, this function is called once the review is done so that it will be not None. I added an explanation as a comment.', 'comment_created': datetime.datetime(2022, 9, 8, 8, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965688773, 'comment_body': 'Explained above.', 'comment_created': datetime.datetime(2022, 9, 8, 8, 55, 29, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965688897, 'comment_body': 'Explained above.', 'comment_created': datetime.datetime(2022, 9, 8, 8, 55, 36, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 965689010, 'comment_body': 'Explained above.', 'comment_created': datetime.datetime(2022, 9, 8, 8, 55, 41, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 966172053, 'comment_body': 'But in that case what you\'ll need to do is something like ""if suggestion.final_reviewer_id is None, throw an exception"" somewhere before this -- not cast it here.\r\n\r\nThe former approach will catch the problem if it occurs. The latter approach will just save the string \'None\' and is not defensive.\r\n\r\nDitto elsewhere below.', 'comment_created': datetime.datetime(2022, 9, 8, 16, 24, 54, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 966209167, 'comment_body': ""Prefer the positive version of a boolean when possible as it's easier to reason about."", 'comment_created': datetime.datetime(2022, 9, 8, 17, 4, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 966211410, 'comment_body': 'As noted before, it still seems cleaner to me to increment within conditions than to have all these inline ternary conditions, e.g.\r\n\r\n```\r\nif suggestion_is_accepted:\r\n  increment...\r\nelse:\r\n  increment...\r\n\r\nif edited_by_reviewer:\r\n  increment...\r\n```\r\n\r\nDitto for the other increment functions.', 'comment_created': datetime.datetime(2022, 9, 8, 17, 6, 49, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 966212998, 'comment_body': '```suggestion\r\n        4. Create 2 stories for translation opportunities.\r\n```', 'comment_created': datetime.datetime(2022, 9, 8, 17, 8, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 966213687, 'comment_body': 'Nit: Can omit since we state the return object below.', 'comment_created': datetime.datetime(2022, 9, 8, 17, 8, 58, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 966216711, 'comment_body': ""This also seems duplicated across the question suggestion tests, so we should extract it into a helper function. In general, try to extract out the uninteresting parts of tests, e.g. prerequisite setup that's the reader doesn't really care about in the test case."", 'comment_created': datetime.datetime(2022, 9, 8, 17, 11, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 966220278, 'comment_body': 'Probably also want helper functions to create the question suggestions, so that these lines can become something like `create_question_suggestion(skill_id)`. Ditto below.', 'comment_created': datetime.datetime(2022, 9, 8, 17, 14, 16, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 966476411, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 8, 22, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 966476445, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 8, 22, 31, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 966476511, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 8, 22, 32, 4, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 966476694, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 8, 22, 32, 26, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 966476730, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 8, 22, 32, 32, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 966476858, 'comment_body': 'Handled exception for None case', 'comment_created': datetime.datetime(2022, 9, 8, 22, 32, 50, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 967562339, 'comment_body': 'That\'s not what this function does, right?\r\n\r\n```suggestion\r\n        """"""Creates a question suggestion corresponding to the supplied skill.\r\n```', 'comment_created': datetime.datetime(2022, 9, 10, 1, 33, 5, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 967562486, 'comment_body': 'This is the ""action"" that we are testing, so add a new line above to differentiate it from the test setup.', 'comment_created': datetime.datetime(2022, 9, 10, 1, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 967562613, 'comment_body': 'Similar point to above, add new lines above and below to differentiate between the test setup, action under test, and the asserts.', 'comment_created': datetime.datetime(2022, 9, 10, 1, 35, 37, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 967562765, 'comment_body': ""Aren't the below lines in this test redundant with the below test that tests the accept behavior?"", 'comment_created': datetime.datetime(2022, 9, 10, 1, 37, 6, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 967562992, 'comment_body': ""Seems a bit redundant since we've already tested this part in the test above. I would remove these lines here and in the tests below."", 'comment_created': datetime.datetime(2022, 9, 10, 1, 39, 28, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 967563142, 'comment_body': ""Since we've already tested this above, I would just remove these lines here and in the tests below."", 'comment_created': datetime.datetime(2022, 9, 10, 1, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 968254046, 'comment_body': 'Tt is also added as a base verification of contributor stats before it is reviewed.', 'comment_created': datetime.datetime(2022, 9, 12, 10, 36, 50, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 968254095, 'comment_body': 'Actually it is added as a base verification of contributor stats before it is reviewed.', 'comment_created': datetime.datetime(2022, 9, 12, 10, 36, 54, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 968254144, 'comment_body': 'Yeah removed', 'comment_created': datetime.datetime(2022, 9, 12, 10, 36, 58, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 968254186, 'comment_body': 'I removed these checks since we are testing the similar behaviour in following tests', 'comment_created': datetime.datetime(2022, 9, 12, 10, 37, 2, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 968254271, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 12, 10, 37, 8, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 968254325, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 12, 10, 37, 13, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 968970922, 'comment_body': '```suggestion\r\n        # 3. Create a question suggestion.\r\n```', 'comment_created': datetime.datetime(2022, 9, 12, 22, 1, 14, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 968971040, 'comment_body': '```suggestion\r\n        # 3. Create a question suggestion.\r\n```', 'comment_created': datetime.datetime(2022, 9, 12, 22, 1, 28, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 968973115, 'comment_body': ""Right, but we've already tested the behavior when submitting in the test above, so it doesn't seem necessary to repeat it here, when the main thing we're testing in this test is the behavior after accepting a suggestion. Ditto below."", 'comment_created': datetime.datetime(2022, 9, 12, 22, 4, 58, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 968991196, 'comment_body': ""Because we already test this above and to cut down a bit on these long tests, I think it's worth it to remove these lines. Ditto below."", 'comment_created': datetime.datetime(2022, 9, 12, 22, 38, 56, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 969712651, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 13, 14, 35, 19, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 969712733, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 13, 14, 35, 23, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 969712778, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 13, 14, 35, 25, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 969714791, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 13, 14, 37, 2, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}]","[{'commit_sha': 'c798e78df80c745a7181584710e4bfb707f09926', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '218b79c52ced20bc00d941ad4258e6fa1ac28b92', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd03d5799641213b5dc15f27084ce45aed359d99c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '536a551e6bca8a3f0f6b0d2529995ff1d7b262fa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b853c9a686ebce7b8b26a3a3fa137cd24700a7db', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cab061f577b3fe093555c1526bee7bf9c4baf8f6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f746b930b061b5a8c969f3249ff2476f8ca5514', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63a998851075b029479db7964bcef44d1d57eaa1', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40e6c29251a3a2340e17cef9a14160a82bb55876', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dd7b48b8011091022fd70b7c5e6d77095e7e0b2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbfa22cb69f9fbc167f8f4ca1ed1da602238433e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bcdecd33e25345e8971e35cce8706ede0cac532', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b693c80a358697923efb832c6da533c6f9eb9c0c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f9b46cbe64fbe543e2f9c8d12a609fc3eb6c961', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ebbfcc2553a6ae6c607c40a2661f24465eb17e2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a46e21bfeff3e81d7e53026b1f319f11f13d240', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b95ce3daa362bbf7620992afd4f37b1a7bcb8e3b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '958d3028a3112ef70e1d639941ef4e8e0e152337', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '878a917a95cb83fa6045d78bd38faabf9c0ff864', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8520e3eac15e9f14a506963926b47e4fef069f4', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91538b8bc8a79370a5279e32d9ba61cd2fe103b6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99630277015c52d63860c6666f87392cb0834889', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4980b096c66404f1a525de3b1822fc3b116b38ee', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2eb06d4c40f446c4b547a6e03eaacfdfe30331da', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aca05eacbc1cc289b71a44b8b8981f46d54592be', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3353812efb11f5b72198715efd5ac53378c05b87', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f43c8365242de72038d3388c8d8ed160c783151', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9537d679c9cbd13b59aa4aca562ebb90610185f6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3a98cf6fd19232c69c0fd12a164b6f734054b7b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35d974741325789847f2a73dfa9484948263604d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93bef6cbba9953a00238c27ba32d16cd20bc40a4', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4b283fa0115fe05c073d63498ab09e3c1422575', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44e3023bc0c4f53954fba8a2cf7975dc512ed785', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40f2b8e03621031023f86da2dc74f940cff1d57a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e042a80db9b38bf2ede32b177af88c75e9a333c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0f33242dc59fc205de4fc8d965b9066b052fba9', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aac9c96b99e877b56465cac39eb2cb402b8a9edf', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6af13e9faa3fed8bb47b3a67ab7e7c17cfae2319', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbcabe0f8b7f0e4ea86f692f2e557a99573aaa60', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21dd9e9a042adb5a293e59102e6bfe04ac7e5254', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37893632de802f6c55adf7aa87d4ec756325c9c9', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c24eb62d6759490fb980a1fb567c2847a3dad4f8', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '224cfa65a4b8d80eda66e660abe78aac9d5a6cb0', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90b260232b3212a06bc139fb286eb2c50e7ee0b3', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3a1f17643d8665cc488cac5008faba61c3dcf39', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b4c8e9296cfa2f18beaddefe225321f4d47961b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99c6a8c2c6a23c5521b00de220debbf10922036d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8d6c07bc9175ca9015b995cbf789e3bb15c1649', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca2b83cf5fcad39660a333f6441bd68d2e32e68a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e414a435a5cacb761407fb39f70d8aa2bedc19b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db4de8f5047df2e0c92732da6973577d84b2acba', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e1ac4442476ddbbd079101b881c61a2e0939093', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '115317f1eff55d8a007ac231ed550300f1a46286', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45ebd2dd1d5d501e50546cde7bac330e177553f4', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99026ad93349b2feef3f43fcec80ee2d00cbf910', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85925677daa8254cf5cee177873706647e3f0756', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b77e9d227adaa9a18c19682a2654588727d50fc8', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2aff74cb95b6e83e9c295396fc6ac5465b717c8', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f355219da2b738ecfc97a681955fb98473a9d37', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d5bd983ce50cf7277d5f16fb7c9af0de9195a69', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '299dcea66227d75b05d33e78836db5c7b95a7689', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cce1a73e814648e468d1a8205cd932f7fcbf05e6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '283af457922167e0d94b311b572cb3b6c63d7584', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd52f1755065a0b2feddb2d054de4da24e87eede7', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e689ed05af416671cee059ad1e5940af34cff1f8', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a620e66ca671cb362fabc40da25b3f15328c365', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcd59744f5400064be8666d2f5cbf0d574333cb2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63645fb044add4d07194cc49658a6a9c1efb6ad5', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc0e9af86849124a25787e95d7751a652fd2a81c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bc40daf833697e43b99dde29fb28934925a7114', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1da730048804a88b15aeac4278a20375045e79a6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f55cacb90be96e62038a2ff8a95c6549e3074b0e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cde04c66a0417853ea958ef48e54cf103348ac6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4893e30c21ffa066770e7f1a30b06e4094258bc6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44265f77f5e187b5e95283196d67ad92668d3df8', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45ab30f107781abafc437ad343f08aec67f59039', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca1039003eefca82f59ff240a76f8e3933fcbc61', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9186274d8ea06d1e4e1763917fec51594a62bda', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc5248b387c71e493f303fe896c600b0808c402a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9c4eebe20bcacebe31ab8ed4b4400f24221342d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '658e2200177fe43b7bb3d43330fc08ee1f0d2ec6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ca659ff4ef48f7e5bd279c71b5db16d6d0a176a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd52c96cf0673c6564438327cb37ce05bcdc1e68', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf70dca758fb8b6c3529f4a1dffb912d351ddc3e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4601054260c411cb1b541a80bd8e248d1690fad', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2d9ff72d9f1a3f03841470df66869400dc6977d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '270dcd6a762b9ff8a7aacdb7518763bfa515221b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21627821c4e6db65fbd8a672220e7ffe5649ca96', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3d28f398407b11ff4fd80ac6d725f6cbb2269c8', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ea088544af0decb121518376c1580e6897e2132', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b67ab1e3b140453a43fac4993aa8b9dc5d33c88e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33e82c2495c57bbf29443458ccd958ec66c389b6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acf8e425fba708f505405649c5dd681e142a3660', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d25712406a17fc5e21ecdadca94ea3f00081ffc', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '856d353a6f41095dbff779d6de104c6e188b89a4', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37d6f2c92561a0ed7d578876d299a65381af5e59', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3802ec498adfbb25b3f5a6d5d91d1ae2082e2a9', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}]",Hasitha Kaushan,41409951,,User,,34,,33,36
1035822177,(Contributor Recognition Infrastructure) Milestone 1.4: Add required email services to notify contributors about levels they achieved,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of n/a.
2. This PR does the following:
- Adds Email services to notify contributors about their achieved rankings.
- Doc - https://docs.google.com/document/d/16SciF9u-AngOdmvBaSyjYCAYrppR6lTE-S2vwhhh86A/edit#

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [ ] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
",True,15940,https://api.github.com/repos/oppia/oppia/pulls/15940,https://github.com/oppia/oppia/pull/15940,closed,528,15,6,30,18,17,1,1,[{'name': 'PR: LGTM'}],2022-08-24 18:04:00+00:00,2022-09-02 15:08:37+00:00,767077.0,"8 days, 21:04:37","[{'comment_id': 954337485, 'comment_body': '```suggestion\r\ndef send_contributor_rank_achievement_email(\r\n```', 'comment_created': datetime.datetime(2022, 8, 24, 22, 3, 58, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 954338732, 'comment_body': ""```suggestion\r\n                'The Oppia Contributor Dashboard Team'\r\n```\r\n\r\nSeems redundant with 'Best wishes` above. Ditto below."", 'comment_created': datetime.datetime(2022, 8, 24, 22, 6, 12, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 954339118, 'comment_body': ""```suggestion\r\n                'the %s rank for submitting practice questions. Your efforts '\r\n```\r\n\r\nDitto below."", 'comment_created': datetime.datetime(2022, 8, 24, 22, 6, 57, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 954339897, 'comment_body': '```suggestion\r\nCONTRIBUTOR_RANK_ACHIEVEMENT_NOTIFICATION: Dict[str, Dict[str, str]] = {\r\n```', 'comment_created': datetime.datetime(2022, 8, 24, 22, 8, 28, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 954340611, 'comment_body': ""```suggestion\r\n        logging.error('This user can not receive emails.')\r\n```"", 'comment_created': datetime.datetime(2022, 8, 24, 22, 9, 53, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 954341306, 'comment_body': '```suggestion\r\n    """"""Test that correct email is sent when notifying contributor\r\n```', 'comment_created': datetime.datetime(2022, 8, 24, 22, 11, 4, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 954341699, 'comment_body': '```suggestion\r\n        messages = self._get_sent_email_messages(\r\n            self.USER_EMAIL)\r\n\r\n        self.assertEqual(len(messages), 0)\r\n```\r\n\r\nInsert new line between action and assert to make test structure clear. Here and below.', 'comment_created': datetime.datetime(2022, 8, 24, 22, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 954342437, 'comment_body': '```suggestion\r\n        rank_name: str. The name of the rank that the contributor achieved.\r\n```', 'comment_created': datetime.datetime(2022, 8, 24, 22, 13, 14, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 954503119, 'comment_body': '""subtype"" is one word, please fix throughout.', 'comment_created': datetime.datetime(2022, 8, 25, 5, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 957140109, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 29, 10, 10, 25, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 957140197, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 29, 10, 10, 32, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 957140274, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 29, 10, 10, 38, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 957140348, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 29, 10, 10, 45, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 957140429, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 29, 10, 10, 51, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 957140542, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 29, 10, 11, 1, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 957140667, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 29, 10, 11, 9, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 957140771, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 29, 10, 11, 13, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}]","[{'commit_sha': 'c798e78df80c745a7181584710e4bfb707f09926', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '218b79c52ced20bc00d941ad4258e6fa1ac28b92', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd03d5799641213b5dc15f27084ce45aed359d99c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '536a551e6bca8a3f0f6b0d2529995ff1d7b262fa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b853c9a686ebce7b8b26a3a3fa137cd24700a7db', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cab061f577b3fe093555c1526bee7bf9c4baf8f6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f746b930b061b5a8c969f3249ff2476f8ca5514', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63a998851075b029479db7964bcef44d1d57eaa1', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40e6c29251a3a2340e17cef9a14160a82bb55876', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dd7b48b8011091022fd70b7c5e6d77095e7e0b2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbfa22cb69f9fbc167f8f4ca1ed1da602238433e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bcdecd33e25345e8971e35cce8706ede0cac532', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd52c559de2ef28bcda60369f7cd792db123f149a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9a5cb937c6b2816002f28d3cebcc49d2199a4ed', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8653f40252f51b10705c4dacd7ec37bb2b74c10', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e042a80db9b38bf2ede32b177af88c75e9a333c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4204eb618dbc615e3281ee983d8c71502376581', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8da4fff523bfb8a0bfe8b5957cc8ed8e3def97bd', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4833b5a35bdb495d363848cdc9cfa6bc282eb274', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cba405a3699d5eaeb2ac27f4a80c7208f3c1bd85', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adad9d22111b1708c8fccc4b78fc7eb414de31b9', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3478978c98294379a326181d976495ddb3bd18dc', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f60b2cc61efddc3cd7e7ff5852373952568c5a8', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5477ac8193040aa3ad727b6084f370c7c2f5a544', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8646d9db822dbb9d8fdaf4bcc45ca243a1cffdec', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5db1dece4eee23f0cef60eedbc90ffa23b4dc6e9', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '408c75dba8a0c388c37da8d4be5bba9656a0e85d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e58f698179aaa14ea0df1496fe9546093fd7fd71', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71a89581fd27acca93d145a9576ae05289271eb9', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69e836f0de4718c32eceb1219524736bbdd058df', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}]",Hasitha Kaushan,41409951,,User,,34,,33,36
1038702842,(Contributor Recognition Infrastructure) Milestone 1.5: Write asynchronous tasks to send new rank notifying emails,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of n/a.
2. This PR does the following:
- Adds the necessary asynchronous methods to send email to notify new ranks that have been achieved by the question/translation submitters and reviewers.
- Doc: https://docs.google.com/document/d/16SciF9u-AngOdmvBaSyjYCAYrppR6lTE-S2vwhhh86A/edit# 
## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [ ] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
",True,15960,https://api.github.com/repos/oppia/oppia/pulls/15960,https://github.com/oppia/oppia/pull/15960,closed,252,0,6,35,18,11,1,1,[{'name': 'PR: LGTM'}],2022-08-27 20:24:31+00:00,2022-09-17 02:40:21+00:00,1750550.0,"20 days, 6:15:50","[{'comment_id': 961890096, 'comment_body': ""This isn't actually transactional without the `@transaction_services.run_in_transaction_wrapper` annotation, right? Also, I don't think it needs to be wrapped in a transaction if it's just sending an email.\r\n\r\nAlso, where will we actually call this function?"", 'comment_created': datetime.datetime(2022, 9, 2, 17, 39, 46, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 961890421, 'comment_body': '```suggestion\r\nTASK_URL_CONTRIBUTOR_DASHBOARD_ACHIEVEMENT_NOTIFICATION_EMAILS = (\r\n```', 'comment_created': datetime.datetime(2022, 9, 2, 17, 40, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 961890661, 'comment_body': ""```suggestion\r\n    '%s/email/contributordashboardachievementnotificationemailhandler' % (\r\n```"", 'comment_created': datetime.datetime(2022, 9, 2, 17, 40, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 966061148, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 8, 14, 43, 15, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 966061297, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 8, 14, 43, 22, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 966063501, 'comment_body': 'Yeah I renamed it.\r\n\r\n> Also, where will we actually call this function?\r\n\r\nAs I discussed wit you, this will be triggered if a submitter/reviewer achieves a new rank at the submission/review. I have not included that logic yet since it is pretty much same as the badges generation logic. So I thought of implementing that logic in the badges generation PR.', 'comment_created': datetime.datetime(2022, 9, 8, 14, 45, 15, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 966304866, 'comment_body': 'Should this be user A?', 'comment_created': datetime.datetime(2022, 9, 8, 18, 39, 49, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 966673932, 'comment_body': 'Should we perform any validations on the payload data? For example, it looks like we expect contribution_sub_type to be of certain fixed values.', 'comment_created': datetime.datetime(2022, 9, 9, 6, 37, 1, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 968317003, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 12, 11, 51, 16, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 970344619, 'comment_body': 'Should we validate any of the other values too? If not, please explain how we ensure that the task runs without errors once it is submitted to the queue.', 'comment_created': datetime.datetime(2022, 9, 14, 6, 0, 2, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 972254819, 'comment_body': 'Since rank names are not finalised yet, I added a TODO to make the validation for it.', 'comment_created': datetime.datetime(2022, 9, 15, 17, 25, 10, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}]","[{'commit_sha': 'c798e78df80c745a7181584710e4bfb707f09926', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '218b79c52ced20bc00d941ad4258e6fa1ac28b92', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd03d5799641213b5dc15f27084ce45aed359d99c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '536a551e6bca8a3f0f6b0d2529995ff1d7b262fa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b853c9a686ebce7b8b26a3a3fa137cd24700a7db', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cab061f577b3fe093555c1526bee7bf9c4baf8f6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f746b930b061b5a8c969f3249ff2476f8ca5514', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63a998851075b029479db7964bcef44d1d57eaa1', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40e6c29251a3a2340e17cef9a14160a82bb55876', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dd7b48b8011091022fd70b7c5e6d77095e7e0b2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbfa22cb69f9fbc167f8f4ca1ed1da602238433e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bcdecd33e25345e8971e35cce8706ede0cac532', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd52c559de2ef28bcda60369f7cd792db123f149a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9a5cb937c6b2816002f28d3cebcc49d2199a4ed', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8653f40252f51b10705c4dacd7ec37bb2b74c10', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e042a80db9b38bf2ede32b177af88c75e9a333c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4204eb618dbc615e3281ee983d8c71502376581', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8da4fff523bfb8a0bfe8b5957cc8ed8e3def97bd', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4833b5a35bdb495d363848cdc9cfa6bc282eb274', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cba405a3699d5eaeb2ac27f4a80c7208f3c1bd85', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adad9d22111b1708c8fccc4b78fc7eb414de31b9', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d2e59bc54886aa3536df919bb30cf2db7b2843d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e9d948437e2d4f21e9c6e5b58e595a2cdb9bd3c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8dca2e0e886ebbc6a43639cfab0d54c52260220a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '693c4810c0dcf609a308c322e2a8a1935c814250', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7a7caabfde9ea83383553b61e577dc3eeda3db2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c1439c8f578b2bef79e7f4d3553649cf7443840', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76ae58a7d40e468e585b22cb53aa544990ee54be', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08858f9554cd1c91eb60f33cd706220b74e479bf', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c23767ca40f6d3a426c99b6bf3a45eebc70b503', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2b2529f9e299fb98a907a0b4c7fb26f1edefa6b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8fd206905a329a2f3d517da8e51f1a519965229', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42c9d2b4720074898a735086c8264f90a77b8c04', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8b5075196595cae13f11dcdae0dd223e470d3bc', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '498b22bf1f32709d3a60a3a4ff802c45f50f8b64', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}]",Hasitha Kaushan,41409951,,User,,34,,33,36
1052958269,(Contributor Recognition Infrastructure) Milestone 1.6: Implement controller layer for the project,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of n/a.
2. This PR does the following:
- Implements the controllers
- Two controllers implemented
- - `ContributorStatsSummariesHandler` -- Will provide stats based on the the type of the contribution
- - `ContributorAllStatsSummariesHandler` -- Will provide stats for all contribution types

Changes done in this PR
- `controllers/*`
- `main.py`

Other changes are coming from the M1.3 since it is not merged yet https://github.com/oppia/oppia/pull/15917

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
",True,16044,https://api.github.com/repos/oppia/oppia/pulls/16044,https://github.com/oppia/oppia/pull/16044,closed,711,7,6,115,8,24,1,1,[{'name': 'PR: LGTM'}],2022-09-12 08:24:45+00:00,2022-09-17 07:25:12+00:00,428427.0,"4 days, 23:00:27","[{'comment_id': 969002687, 'comment_body': '```suggestion\r\ndef _get_client_side_stats(\r\n```\r\n\r\nSeems more descriptive.', 'comment_created': datetime.datetime(2022, 9, 12, 23, 4, 29, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 969003264, 'comment_body': ""```suggestion\r\n    stats_dicts = [\r\n```\r\nSince it's not just translation review stats."", 'comment_created': datetime.datetime(2022, 9, 12, 23, 5, 52, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 969004154, 'comment_body': 'Instead of passing in this boolean everywhere, can we just check for the existence of the `first_contribution_date` and `last_contribution_date` keys?\r\n\r\nAlso, can you add a TODO to migrate TranslationContributionStats to use `first_contribution_date` and `last_contribution_date` instead?', 'comment_created': datetime.datetime(2022, 9, 12, 23, 8, 3, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 969010645, 'comment_body': '```suggestion\r\n    backend_stats: List[Union[\r\n```\r\n\r\n""Data"" doesn\'t add much value in the name since pretty much everything can be considered ""data"". Added ""backend"" as a hint that we\'re converting a backend stats object.', 'comment_created': datetime.datetime(2022, 9, 12, 23, 23, 51, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 969011978, 'comment_body': 'Seems more Pythonic to convert this to use dictionary comprehension.', 'comment_created': datetime.datetime(2022, 9, 12, 23, 27, 5, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 969012104, 'comment_body': 'nit: Remove new line.', 'comment_created': datetime.datetime(2022, 9, 12, 23, 27, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 969012640, 'comment_body': '```suggestion\r\n    """"""Returns contribution statistics for the supplied contribution type.""""""\r\n```', 'comment_created': datetime.datetime(2022, 9, 12, 23, 28, 37, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 969012906, 'comment_body': '```suggestion\r\n    """"""Returns all contribution statistics associated with the user.""""""\r\n```', 'comment_created': datetime.datetime(2022, 9, 12, 23, 29, 16, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 969900073, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 13, 17, 25, 45, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 969900155, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 13, 17, 25, 51, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 969900224, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 13, 17, 25, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 969900301, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 13, 17, 25, 59, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 969900434, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 13, 17, 26, 8, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 969900471, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 13, 17, 26, 11, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 969900557, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 13, 17, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 969900604, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 13, 17, 26, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 970519250, 'comment_body': 'The user %s is not allowed to fetch the stats of other users.', 'comment_created': datetime.datetime(2022, 9, 14, 8, 55, 12, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 970519459, 'comment_body': 'The user %s is not allowed to fetch the stats of other users.', 'comment_created': datetime.datetime(2022, 9, 14, 8, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 970944411, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 14, 15, 6, 36, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 970944812, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 14, 15, 6, 54, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 970997058, 'comment_body': 'I think you missed the ""to"".', 'comment_created': datetime.datetime(2022, 9, 14, 15, 43, 22, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 970997103, 'comment_body': 'I think you missed the ""to"".', 'comment_created': datetime.datetime(2022, 9, 14, 15, 43, 25, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 971010229, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 14, 15, 52, 58, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 971010810, 'comment_body': 'Done -- sorry I missed it.', 'comment_created': datetime.datetime(2022, 9, 14, 15, 53, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}]","[{'commit_sha': 'c798e78df80c745a7181584710e4bfb707f09926', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '218b79c52ced20bc00d941ad4258e6fa1ac28b92', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd03d5799641213b5dc15f27084ce45aed359d99c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '536a551e6bca8a3f0f6b0d2529995ff1d7b262fa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b853c9a686ebce7b8b26a3a3fa137cd24700a7db', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cab061f577b3fe093555c1526bee7bf9c4baf8f6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f746b930b061b5a8c969f3249ff2476f8ca5514', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63a998851075b029479db7964bcef44d1d57eaa1', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40e6c29251a3a2340e17cef9a14160a82bb55876', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dd7b48b8011091022fd70b7c5e6d77095e7e0b2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbfa22cb69f9fbc167f8f4ca1ed1da602238433e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bcdecd33e25345e8971e35cce8706ede0cac532', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b693c80a358697923efb832c6da533c6f9eb9c0c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f9b46cbe64fbe543e2f9c8d12a609fc3eb6c961', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ebbfcc2553a6ae6c607c40a2661f24465eb17e2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a46e21bfeff3e81d7e53026b1f319f11f13d240', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b95ce3daa362bbf7620992afd4f37b1a7bcb8e3b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '958d3028a3112ef70e1d639941ef4e8e0e152337', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '878a917a95cb83fa6045d78bd38faabf9c0ff864', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8520e3eac15e9f14a506963926b47e4fef069f4', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91538b8bc8a79370a5279e32d9ba61cd2fe103b6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99630277015c52d63860c6666f87392cb0834889', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4980b096c66404f1a525de3b1822fc3b116b38ee', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2eb06d4c40f446c4b547a6e03eaacfdfe30331da', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aca05eacbc1cc289b71a44b8b8981f46d54592be', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3353812efb11f5b72198715efd5ac53378c05b87', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f43c8365242de72038d3388c8d8ed160c783151', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9537d679c9cbd13b59aa4aca562ebb90610185f6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3a98cf6fd19232c69c0fd12a164b6f734054b7b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35d974741325789847f2a73dfa9484948263604d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93bef6cbba9953a00238c27ba32d16cd20bc40a4', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4b283fa0115fe05c073d63498ab09e3c1422575', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44e3023bc0c4f53954fba8a2cf7975dc512ed785', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40f2b8e03621031023f86da2dc74f940cff1d57a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e042a80db9b38bf2ede32b177af88c75e9a333c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0f33242dc59fc205de4fc8d965b9066b052fba9', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aac9c96b99e877b56465cac39eb2cb402b8a9edf', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6af13e9faa3fed8bb47b3a67ab7e7c17cfae2319', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbcabe0f8b7f0e4ea86f692f2e557a99573aaa60', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21dd9e9a042adb5a293e59102e6bfe04ac7e5254', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37893632de802f6c55adf7aa87d4ec756325c9c9', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c24eb62d6759490fb980a1fb567c2847a3dad4f8', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d2e59bc54886aa3536df919bb30cf2db7b2843d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '224cfa65a4b8d80eda66e660abe78aac9d5a6cb0', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90b260232b3212a06bc139fb286eb2c50e7ee0b3', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3a1f17643d8665cc488cac5008faba61c3dcf39', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b4c8e9296cfa2f18beaddefe225321f4d47961b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99c6a8c2c6a23c5521b00de220debbf10922036d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8d6c07bc9175ca9015b995cbf789e3bb15c1649', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca2b83cf5fcad39660a333f6441bd68d2e32e68a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e414a435a5cacb761407fb39f70d8aa2bedc19b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db4de8f5047df2e0c92732da6973577d84b2acba', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e1ac4442476ddbbd079101b881c61a2e0939093', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '115317f1eff55d8a007ac231ed550300f1a46286', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45ebd2dd1d5d501e50546cde7bac330e177553f4', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99026ad93349b2feef3f43fcec80ee2d00cbf910', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85925677daa8254cf5cee177873706647e3f0756', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b77e9d227adaa9a18c19682a2654588727d50fc8', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2aff74cb95b6e83e9c295396fc6ac5465b717c8', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f355219da2b738ecfc97a681955fb98473a9d37', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d5bd983ce50cf7277d5f16fb7c9af0de9195a69', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '299dcea66227d75b05d33e78836db5c7b95a7689', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cce1a73e814648e468d1a8205cd932f7fcbf05e6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '283af457922167e0d94b311b572cb3b6c63d7584', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd52f1755065a0b2feddb2d054de4da24e87eede7', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e689ed05af416671cee059ad1e5940af34cff1f8', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a620e66ca671cb362fabc40da25b3f15328c365', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcd59744f5400064be8666d2f5cbf0d574333cb2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63645fb044add4d07194cc49658a6a9c1efb6ad5', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc0e9af86849124a25787e95d7751a652fd2a81c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bc40daf833697e43b99dde29fb28934925a7114', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1da730048804a88b15aeac4278a20375045e79a6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f55cacb90be96e62038a2ff8a95c6549e3074b0e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cde04c66a0417853ea958ef48e54cf103348ac6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4893e30c21ffa066770e7f1a30b06e4094258bc6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44265f77f5e187b5e95283196d67ad92668d3df8', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45ab30f107781abafc437ad343f08aec67f59039', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca1039003eefca82f59ff240a76f8e3933fcbc61', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9186274d8ea06d1e4e1763917fec51594a62bda', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc5248b387c71e493f303fe896c600b0808c402a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9c4eebe20bcacebe31ab8ed4b4400f24221342d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '658e2200177fe43b7bb3d43330fc08ee1f0d2ec6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ca659ff4ef48f7e5bd279c71b5db16d6d0a176a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd52c96cf0673c6564438327cb37ce05bcdc1e68', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf70dca758fb8b6c3529f4a1dffb912d351ddc3e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec0690940d4756948199e14cd6c9016ac59033d6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4daa6b74d8b17441aeff56f8b472e8a866f61bd', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e369dd9a99a85b7b7c1ec4646ae06765b68b228', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f98c9d68831f6f06d53fcd62f9f6bf8625e77b7c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a614f0b43ef4dad81228ea00b9b2d079f1cbf3d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50c884d8dda72108e99bda2fd2b5c9d07b44c6a2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cbab1515597a3a14e87020bdfbed570b4f5ac81', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3afec4902948acbb43cbe349d0e3c48a66b5bedb', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c57a8ba0d0fff1a4e2a714d5295769a0e8a61b96', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f37ef3497ef2dea176920e62fe3a0be368faa37d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd5f9bf2b4914513fab05c2c740f72246fe5a2e2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6193dda2e94f10f359f3b01fdbcb527ece59bc31', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4601054260c411cb1b541a80bd8e248d1690fad', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2d9ff72d9f1a3f03841470df66869400dc6977d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '270dcd6a762b9ff8a7aacdb7518763bfa515221b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21627821c4e6db65fbd8a672220e7ffe5649ca96', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3d28f398407b11ff4fd80ac6d725f6cbb2269c8', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ea088544af0decb121518376c1580e6897e2132', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52655fa27e7f134fecd741ab7f5fd8dec1d19b32', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '873de84f718ef0a718c0c711234d71668b902409', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37937a9ec3e923ef4d709307abf89ca4a3596a7c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81017c8019682e2195c3c549207f65e316ed58f5', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81057da9136b4b7ef9eabd9389eb49d739b0e8f3', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '870f9519d665e7e805e9fdd14e908d98182e44f3', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b30ed51dd333bcacdad6c476761839ff90bf5ac', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01f96288fc781d74e64152e544b79e150c620e30', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8bc2a608a75256411309826e5013cd31dc90521', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a7f825f9e5972ff6a5f7fc54f64367671cd66b5', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '709d3d5195d2e61ea47d5579cc14962c916376c2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c44e3182940974df9c08c20d05d1ccdf496a856b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}]",Hasitha Kaushan,41409951,,User,,34,,33,36
1068806583,(Contributor Recognition Infrastructure) Milestone 2.1: Add new frontend endpoints to call the ContributorStatsSummariesHandler,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of n/a.
2. This PR does the following: 
- Adds the required frontend services to fetch stats
- Doc https://docs.google.com/document/d/16SciF9u-AngOdmvBaSyjYCAYrppR6lTE-S2vwhhh86A/edit#

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
",True,16153,https://api.github.com/repos/oppia/oppia/pulls/16153,https://github.com/oppia/oppia/pull/16153,closed,632,1,6,18,11,4,1,1,[{'name': 'PR: LGTM'}],2022-09-27 15:35:34+00:00,2022-10-14 03:13:13+00:00,1424259.0,"16 days, 11:37:39","[{'comment_id': 982103906, 'comment_body': ""These hardcoded strings ought to be named constants / enums, I think.\r\n\r\nAlso these are four roundtrip calls. How long does each take? I'm wondering about this strategy vs batching the GET into a single one."", 'comment_created': datetime.datetime(2022, 9, 28, 8, 27, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 994226327, 'comment_body': '> These hardcoded strings ought to be named constants / enums, I think.\r\n\r\nDone\r\n\r\n> How long does each take?\r\n\r\n```\r\nTranslation Submissions -> 0.0019922256469726562 s\r\nTranslation Reviews -> 0.002099275588989258 s\r\nQuestion Submissions -> 0.0017049312591552734 s\r\nQuestion Reviews -> 0.0022652149200439453 s\r\n------------------------------------------------------\r\nTotal -> 0.00806164741 s\r\n```\r\n\r\nAlso I have a separate endpoint fetch all stats at once in case to fetch everything from one request. It takes 0.008791923522949219 s.\r\n\r\n', 'comment_created': datetime.datetime(2022, 10, 13, 6, 51, 49, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 994260674, 'comment_body': ""Just to check, these are being measured starting from the frontend? Could you show a screenshot of where the measurement was done from? I'm a bit surprised because I'd have thought the network latency itself would be larger than this."", 'comment_created': datetime.datetime(2022, 10, 13, 7, 29, 50, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 994966181, 'comment_body': 'Ah, I just checked it in the backend.\r\n\r\nThis when they are fetched from the frontend. The first record with `126 ms` corresponds to fetch everything from one request. The other four correspond for fetching stats for translation submissions, translation reviews, question submissions and question reviews.\r\n\r\n![image](https://user-images.githubusercontent.com/41409951/195672784-3622ad60-1422-4c16-9272-ad4757a42658.png)\r\n', 'comment_created': datetime.datetime(2022, 10, 13, 18, 7, 15, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}]","[{'commit_sha': 'c798e78df80c745a7181584710e4bfb707f09926', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '218b79c52ced20bc00d941ad4258e6fa1ac28b92', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd03d5799641213b5dc15f27084ce45aed359d99c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '536a551e6bca8a3f0f6b0d2529995ff1d7b262fa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b853c9a686ebce7b8b26a3a3fa137cd24700a7db', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cab061f577b3fe093555c1526bee7bf9c4baf8f6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f746b930b061b5a8c969f3249ff2476f8ca5514', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63a998851075b029479db7964bcef44d1d57eaa1', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40e6c29251a3a2340e17cef9a14160a82bb55876', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e042a80db9b38bf2ede32b177af88c75e9a333c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d2e59bc54886aa3536df919bb30cf2db7b2843d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec0690940d4756948199e14cd6c9016ac59033d6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82b8daee90bc28afc5a7607a41591a9845d2166d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac535986e2c38ca6843d7f8513be917b46f3667d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e211ca5cba6a21551c2d15500a79e55538efc777', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2173fcb443b170812a9e95b78923aabbc78b213c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58d21d813191797f351b37fdfd63ab13a34cfe19', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30bfaefe95e319740de20504bbf75ff7891e195e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}]",Hasitha Kaushan,41409951,,User,,34,,33,36
1084768567,(Contributor Recognition Infrastructure) Milestone 2.2: Create contributor stats component to contributor dashboard with mobile view,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of n/a.
2. This PR does the following: This PR adds the stats component to the CD. Doc: https://docs.google.com/document/d/16SciF9u-AngOdmvBaSyjYCAYrppR6lTE-S2vwhhh86A/edit#

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [ ] The linter/Karma presubmit checks have passed locally on your machine.
- [ ] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [ ] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->



https://user-images.githubusercontent.com/41409951/202192398-7e28264c-3056-477b-b2ff-eb73c77ac814.mov



#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
",True,16289,https://api.github.com/repos/oppia/oppia/pulls/16289,https://github.com/oppia/oppia/pull/16289,closed,1943,97,17,95,34,177,1,1,[{'name': 'PR: LGTM'}],2022-10-12 14:16:01+00:00,2022-11-21 03:45:39+00:00,3418178.0,"39 days, 13:29:38","[{'comment_id': 1005103414, 'comment_body': 'Typo. Ditto below.', 'comment_created': datetime.datetime(2022, 10, 26, 0, 46, 20, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1005103646, 'comment_body': 'Typo in accomplishments.', 'comment_created': datetime.datetime(2022, 10, 26, 0, 46, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1005104199, 'comment_body': 'Nit: I think we can have this in one line.', 'comment_created': datetime.datetime(2022, 10, 26, 0, 47, 54, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1005104823, 'comment_body': 'Is this unclassed div necessary?', 'comment_created': datetime.datetime(2022, 10, 26, 0, 49, 12, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1005106017, 'comment_body': 'Need to update.', 'comment_created': datetime.datetime(2022, 10, 26, 0, 50, 28, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1005107959, 'comment_body': 'Nit: Add new line above and below.', 'comment_created': datetime.datetime(2022, 10, 26, 0, 52, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1005108104, 'comment_body': 'Add new line above.', 'comment_created': datetime.datetime(2022, 10, 26, 0, 52, 14, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1005108314, 'comment_body': 'This can be `const`.', 'comment_created': datetime.datetime(2022, 10, 26, 0, 52, 46, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1005108852, 'comment_body': 'Add new lines above and below to differentiate test phases.', 'comment_created': datetime.datetime(2022, 10, 26, 0, 53, 46, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1005108961, 'comment_body': 'Need to update description.', 'comment_created': datetime.datetime(2022, 10, 26, 0, 53, 59, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1005109545, 'comment_body': 'Typo. Ditto below.', 'comment_created': datetime.datetime(2022, 10, 26, 0, 55, 6, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1005112247, 'comment_body': ""Why do you need to get all the contribution languages? Can't you just iterate over all the stats objects directly? Ditto below."", 'comment_created': datetime.datetime(2022, 10, 26, 1, 1, 23, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1005113025, 'comment_body': 'Why is it named block?', 'comment_created': datetime.datetime(2022, 10, 26, 1, 3, 30, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1005114005, 'comment_body': 'Why block?', 'comment_created': datetime.datetime(2022, 10, 26, 1, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1005117309, 'comment_body': ""Would it be simpler to just have an array of stats objects and incrementing/decrementing the index by page size on next/previous page instead of using the `PagedStats` objects? That's what we do for the opportunity pagination currently."", 'comment_created': datetime.datetime(2022, 10, 26, 1, 8, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1005309085, 'comment_body': 'elif', 'comment_created': datetime.datetime(2022, 10, 26, 7, 20, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1005311212, 'comment_body': 'Avoid starting variable names with verbs. Perhaps activeTabIsAccomplishments or similar.', 'comment_created': datetime.datetime(2022, 10, 26, 7, 23, 25, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1005311822, 'comment_body': 'accomplishments is misspelled, and I also don\'t know what this variable name means (what does it means for ""accomplishments to be enabled""). How does it differ from ""isAccomplishmentsTab""?', 'comment_created': datetime.datetime(2022, 10, 26, 7, 24, 2, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1005312711, 'comment_body': 'else if (and move to previous line)\r\n\r\nBetter still, construct a declarative dict so that you can do `return tabTypesToNames[this.activeTabType][subType];` -- that might be simpler to read.', 'comment_created': datetime.datetime(2022, 10, 26, 7, 24, 58, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1005314688, 'comment_body': ""Better to have an else here to show mutual exclusivity.\r\n\r\nIf possible try to set the variables in the same order in both cases, so that you can be sure you didn't miss any. Would be good to have as much parity as possible between the two. E.g. I see `this.dropdownShown = false;` is repeated below and some of the setActiveTabType stuff seems missing."", 'comment_created': datetime.datetime(2022, 10, 26, 7, 26, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1005315878, 'comment_body': 'accomplishments\r\n\r\nAlso maybe a better name is accomplishmentsTabIsEnabled', 'comment_created': datetime.datetime(2022, 10, 26, 7, 28, 17, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1005316666, 'comment_body': 'Can you perhaps make direct use of these variables in getActiveDropdownTabChoice() (see comment above) so that the logic can be generalized?', 'comment_created': datetime.datetime(2022, 10, 26, 7, 29, 8, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1005317480, 'comment_body': 'Each indentation level should be indented by only 2 spaces after the previous one.', 'comment_created': datetime.datetime(2022, 10, 26, 7, 29, 56, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1005318267, 'comment_body': ""I worry about this use of [0], [1], [2], [3] -- I have no idea from reading this what it represents. Can we use dicts instead as the internal representation, rather than lists, so that this is more readable? (You're already going to be listing it out here anyway.)\r\n\r\nThe benefit of using a list is if you have an ng-repeat here but since you're just repeating blocks of code manually I don't think that representation is particularly useful (unless you can find a way to simplify the display logic and make it generic for each row, e.g. you could compute a new property string for the dates and reference the corresponding property name in a generic for loop -- that would probably be better and make the code simpler and more declarative, but if you can't pull it off then it's better to use a dict instead to avoid the [0], [1], [2], ..., [5]).\r\n\r\nDitto below/elsewhere."", 'comment_created': datetime.datetime(2022, 10, 26, 7, 30, 49, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1005321097, 'comment_body': 'Extra newline (and also missing newline at EOF -- see Files Changed tab)?', 'comment_created': datetime.datetime(2022, 10, 26, 7, 33, 52, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1005322168, 'comment_body': 'Can you do an experiment to see whether, if you use this class name in another component that\'s still on the CD page, whether the styles ""leak out""? You can put ""color: red"" here or similar so that it\'s more obvious. Please submit an image as proof of the results when replying to this comment, so that we can verify that you\'ve done the right thing.\r\n\r\nIf the styles leak out, then you\'ll need to prefix all these CSS selectors by the name of your component or something that scopes them to being within your component only. Ditto for other HTML files.', 'comment_created': datetime.datetime(2022, 10, 26, 7, 35, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1005323732, 'comment_body': 'sliceStatsIntoPages (there are multiple pages, right)?', 'comment_created': datetime.datetime(2022, 10, 26, 7, 36, 45, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1010631543, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 1, 16, 23, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1010635535, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 1, 16, 26, 42, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1010636174, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 1, 16, 27, 13, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1010637162, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 1, 16, 28, 9, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1010639304, 'comment_body': 'Since this is not ready for the production, I have put the Accomplishments section behind a feature flag. This variable holds whether the flag is enabled.', 'comment_created': datetime.datetime(2022, 11, 1, 16, 30, 27, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1011507067, 'comment_body': 'Constructed a declarative dict.', 'comment_created': datetime.datetime(2022, 11, 2, 10, 7, 29, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1011516472, 'comment_body': 'Added an else clause. Made the order of variables consistent as much as can since contributionAndReviewService only engages with when `tabType != this.TAB_TYPE_ACCOMPLISHMENTS`', 'comment_created': datetime.datetime(2022, 11, 2, 10, 16, 45, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1011679848, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 2, 12, 25, 23, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1011680614, 'comment_body': 'Done. Made a dict and the values are returned from it.', 'comment_created': datetime.datetime(2022, 11, 2, 12, 26, 1, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1011686911, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2022, 11, 2, 12, 30, 32, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1011810507, 'comment_body': 'Made a dict and used it.', 'comment_created': datetime.datetime(2022, 11, 2, 13, 58, 51, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1011810911, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 2, 13, 59, 10, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1011814266, 'comment_body': 'Translation contribution/review stats are grouped by languages and displayed inside a `mat-card`. Each group of language stats is named as a block.', 'comment_created': datetime.datetime(2022, 11, 2, 14, 1, 46, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1011830783, 'comment_body': '![Screenshot 2022-11-02 at 19 41 03](https://user-images.githubusercontent.com/41409951/199512169-07d43c7f-03dc-4143-8d65-ef23f6f10832.png)\r\n\r\n\r\n![Screenshot 2022-11-02 at 19 42 10](https://user-images.githubusercontent.com/41409951/199512261-bfc36b58-963d-462b-bb19-376874523047.png)\r\n', 'comment_created': datetime.datetime(2022, 11, 2, 14, 14, 42, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1011833636, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2022, 11, 2, 14, 16, 59, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1011839358, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 2, 14, 21, 36, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1011839524, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 2, 14, 21, 44, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1011840340, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 2, 14, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1011840836, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 2, 14, 22, 43, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1011841800, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 2, 14, 23, 23, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1011843178, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 2, 14, 24, 14, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1011844352, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 2, 14, 25, 8, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1012252852, 'comment_body': ""Yeah removed iterating over all the languages. Created `{[key: string]: Stats}` type objects to keep stats of a given language. We are showing stats of all languages in different containers of the same window.  I used a `Stats` to track each language's page position. If we just increment the array indexes, going into a new page in one language's statistics will result in moving pages of ever other languages' statistics. Please correct me if I am wrong.\r\n\r\nI have updated the pagination logic to simplify it. There will be no more `PagedStats` interface. `Stats` objects will keep the starting and ending positions of the current page."", 'comment_created': datetime.datetime(2022, 11, 2, 20, 11, 40, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1012260922, 'comment_body': 'Explained above. I have modified the pagination logic.', 'comment_created': datetime.datetime(2022, 11, 2, 20, 20, 26, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1012261327, 'comment_body': 'Removed this function since it is no more used.', 'comment_created': datetime.datetime(2022, 11, 2, 20, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1012262559, 'comment_body': 'Renamed as page', 'comment_created': datetime.datetime(2022, 11, 2, 20, 22, 33, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1013421486, 'comment_body': 'Why not just use the `activeTabType` variable instead of this to determine the current tab?', 'comment_created': datetime.datetime(2022, 11, 3, 21, 40, 48, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1013423141, 'comment_body': 'Maybe just have one `activeSubType` field instead of both `activeSuggestionType` and `activeAccomplishmentType` so that we can consolidate this logic.', 'comment_created': datetime.datetime(2022, 11, 3, 21, 43, 31, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1013431941, 'comment_body': '""page"" instead of ""block"" seems clearer. Ditto below.', 'comment_created': datetime.datetime(2022, 11, 3, 21, 54, 36, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1013434743, 'comment_body': ""This doesn't seem necessary—we can just check if the corresponding `statsData` field is empty."", 'comment_created': datetime.datetime(2022, 11, 3, 21, 59, 33, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1013435948, 'comment_body': 'These fields seem redundant with the corresponding ones in `statsData`.', 'comment_created': datetime.datetime(2022, 11, 3, 22, 1, 30, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1013436277, 'comment_body': 'Are these used anywhere?', 'comment_created': datetime.datetime(2022, 11, 3, 22, 1, 54, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1013438265, 'comment_body': 'These 3 fields are common across all the stat types, so maybe move them to the `StatsPage`.', 'comment_created': datetime.datetime(2022, 11, 3, 22, 5, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1013440506, 'comment_body': 'Should extract this into a `createStatsPage` function.', 'comment_created': datetime.datetime(2022, 11, 3, 22, 9, 41, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1013668690, 'comment_body': ""Not sure I understand why this is gated behind a platform parameter. I thought the platform parameter was only for showing the data but we're updating it behind the scenes (and have always been updating it)? Or do we need to run a job to summarize and generate stats models for the existing contributions?"", 'comment_created': datetime.datetime(2022, 11, 4, 6, 36, 39, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1013671334, 'comment_body': ""In these composite && statements, always start with the accomplishmentsTabIsEnabled check first because it determines whether we can do the thing at all or not. If this is false then everything else doesn't matter."", 'comment_created': datetime.datetime(2022, 11, 4, 6, 40, 55, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1013671594, 'comment_body': 'Add a docstring here to explain what this is for ... tie it to the feature flag and give the name of that flag.', 'comment_created': datetime.datetime(2022, 11, 4, 6, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1013672286, 'comment_body': 'This is a constant, so just populate it directly when declared? Not sure why you have it empty at the top and overwrite it here later.', 'comment_created': datetime.datetime(2022, 11, 4, 6, 42, 47, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1013673582, 'comment_body': 'Is it possible to combine all these into a single constant rather than have two constants describing overlapping parts of the same thing? Or if not then maybe one constant for ""order of tabs"" and the other constant for ""mapping tab names to tab properties""?', 'comment_created': datetime.datetime(2022, 11, 4, 6, 45, 32, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1013674190, 'comment_body': 'This is still wrong -- my previous comment said ""Each indentation level should be indented by only 2 spaces after the previous one."" This is indented by 4 spaces, and so is the line below. Please fix throughout.', 'comment_created': datetime.datetime(2022, 11, 4, 6, 46, 52, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1013675095, 'comment_body': 'What do these mean? Please add comments explaining, they look like magic numbers.', 'comment_created': datetime.datetime(2022, 11, 4, 6, 48, 45, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1013675524, 'comment_body': 'All method names should start with verbs. Ditto above (previousPage, nextPage, etc.) -- please fix.', 'comment_created': datetime.datetime(2022, 11, 4, 6, 49, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1013676144, 'comment_body': 'Er, I\'m not sure you understood my comment, let me try again.\r\n\r\nI\'m saying, try using .mobile-stats-block in another component that\'s not this one, but that is loaded on the CD page. See if the other component takes the same style.\r\n\r\nThe thing you\'re highlighting here seems like a library component and not something we declare. I want to make sure that custom components we declare don\'t ""bleed"" into other components -- if they do then we should safeguard against that. Makes sense?', 'comment_created': datetime.datetime(2022, 11, 4, 6, 51, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1014245935, 'comment_body': ""Since we're expecting there to always be at least one matching option, I think `Array.find()` would be better here so that we don't need to index into the result array: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find. Ditto above in the init function."", 'comment_created': datetime.datetime(2022, 11, 4, 16, 37, 56, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1014267082, 'comment_body': '```suggestion\r\n  currentPageStartIndex: number;\r\n  currentPageEndIndex: number;\r\n```', 'comment_created': datetime.datetime(2022, 11, 4, 16, 59, 17, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1017758891, 'comment_body': 'Will have a beam job for this as discussed in the meeting.', 'comment_created': datetime.datetime(2022, 11, 9, 10, 33, 7, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1017933037, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 9, 13, 24, 7, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1017945962, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 9, 13, 35, 18, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1018036444, 'comment_body': ""In the template accomplishment tab check is used in several places. Rather than `checking activeTabType === 'accomplishments'` I put it into a boolean in the component."", 'comment_created': datetime.datetime(2022, 11, 9, 14, 48, 14, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1018043742, 'comment_body': ""It requires `SUGGESTION_TYPE_QUESTION` `SUGGESTION_TYPE_TRANSLATE` `TAB_TYPE_CONTRIBUTIONS` `TAB_TYPE_REVIEWS` which are initialized in the `ngOnInit()`. That's why I made it empty at the beginning."", 'comment_created': datetime.datetime(2022, 11, 9, 14, 53, 43, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1018138803, 'comment_body': 'Sorry. I adjusted', 'comment_created': datetime.datetime(2022, 11, 9, 16, 9, 34, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1018141974, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 9, 16, 12, 7, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1018181111, 'comment_body': '![Screenshot 2022-11-09 at 22 14 32](https://user-images.githubusercontent.com/41409951/200889871-e8b042c7-894c-4b5f-ad14-72676222d352.png)\r\n![Screenshot 2022-11-09 at 22 13 48](https://user-images.githubusercontent.com/41409951/200889897-6b966e70-02ac-4fdd-90bc-27ad81153d88.png)\r\n\r\nIs this what you mean?\r\n', 'comment_created': datetime.datetime(2022, 11, 9, 16, 46, 5, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1018706531, 'comment_body': 'Removed `TAB_TYPES_TO_NAMES` and only used(in getActiveDropdownTabChoice()) `contributionTabs` `accomplishmentsTabs` `reviewTabs` that consist tab properties.', 'comment_created': datetime.datetime(2022, 11, 10, 6, 45, 44, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1018715481, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 10, 6, 59, 29, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1018717443, 'comment_body': 'I created a new interface and named it as `Stats` and all the other stats interfaces extend it. Previous `Stats` interface was renamed as `StatsPage` since it is more about paging rather than direct ""stats"".', 'comment_created': datetime.datetime(2022, 11, 10, 7, 2, 50, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1018718334, 'comment_body': 'Not used and removed.', 'comment_created': datetime.datetime(2022, 11, 10, 7, 4, 11, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1018718389, 'comment_body': 'Not used and removed.', 'comment_created': datetime.datetime(2022, 11, 10, 7, 4, 17, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1018733663, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2022, 11, 10, 7, 26, 13, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1019114717, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 10, 13, 24, 45, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1019119301, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 10, 13, 28, 7, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1019327687, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 10, 15, 59, 20, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1019391110, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 10, 16, 54, 42, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1019726760, 'comment_body': 'You can create a `isAccomplishmentsActiveTab` method instead and remove this if statement and the `activeTabIsAccomplishments` variable.', 'comment_created': datetime.datetime(2022, 11, 11, 0, 25, 40, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1019728269, 'comment_body': ""I don't think you need a separate create method per stat type if you instead have a `createStatsPage(data, language?)` method."", 'comment_created': datetime.datetime(2022, 11, 11, 0, 29, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1019729762, 'comment_body': '```suggestion\r\n      currentPageEndIndex: ITEMS_PER_PAGE \r\n```', 'comment_created': datetime.datetime(2022, 11, 11, 0, 33, 1, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1019729973, 'comment_body': ""This doesn't seem used anywhere?"", 'comment_created': datetime.datetime(2022, 11, 11, 0, 33, 29, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1019730608, 'comment_body': 'Maybe add a comment that this is the ""exclusive"" index (and not actually the last index).', 'comment_created': datetime.datetime(2022, 11, 11, 0, 34, 58, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1020665362, 'comment_body': ""That addresses my last question, but not my first concern. Why do we need a platform parameter here -- are we not planning to update contributions currently?\r\n\r\nIf we were to run a Beam job it would overwrite the data so I'm not sure why we need to gate it at this point -- we just shouldn't display it until we're ready to do so."", 'comment_created': datetime.datetime(2022, 11, 12, 3, 9, 35, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1020665953, 'comment_body': 'This determines whether ...', 'comment_created': datetime.datetime(2022, 11, 12, 3, 10, 50, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1020666243, 'comment_body': 'This needs to be tied clearly to the actual feature flag -- state the exact name of that feature flag here. (I already mentioned this in my previous comment.)', 'comment_created': datetime.datetime(2022, 11, 12, 3, 11, 18, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1020666739, 'comment_body': '""type"" and ""subtype"" are in the same category, so if you have ""activeTabType"" you should have ""activeTabSubtype"" as well. Note that ""subtype"" is one word.', 'comment_created': datetime.datetime(2022, 11, 12, 3, 12, 49, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1020667015, 'comment_body': ""Yup, that's great. Thank you for checking!"", 'comment_created': datetime.datetime(2022, 11, 12, 3, 16, 7, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1020667320, 'comment_body': ""It's not clear what 0 means, please explain. Perhaps you should use an enum? At any rate, this needs clear code comments."", 'comment_created': datetime.datetime(2022, 11, 12, 3, 18, 49, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1020667359, 'comment_body': ""Shouldn't there be error-checking here (to ensure that there is a next page)?\r\n\r\nDitto below -- should check that we aren't already on the first page?"", 'comment_created': datetime.datetime(2022, 11, 12, 3, 19, 29, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1022275476, 'comment_body': 'Yes i think we dont need a check here since the data can be overwritten from the beam job. So removed it.', 'comment_created': datetime.datetime(2022, 11, 15, 3, 17, 6, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1022278930, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 15, 3, 25, 4, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1022279448, 'comment_body': 'Done\r\n', 'comment_created': datetime.datetime(2022, 11, 15, 3, 25, 46, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1022286402, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 15, 3, 43, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1022287205, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 15, 3, 45, 4, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1022293271, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 15, 3, 59, 5, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1022293532, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 15, 3, 59, 39, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1022293825, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 15, 4, 0, 30, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1022334924, 'comment_body': 'But still we need two types of functions for translation stats and question stats because we pass individual backend dict object for translation stats and arrays of backend dict objects for question stats.\r\n\r\nBasically what we do in `createTranslationReviewStatsPage` and `createTranslationContributionStatsPage` is creating the first record of stat for a given language.\r\n\r\nIn `createQuestionContributionStatsPage` and `createQuestionReviewStatsPage` we create all records of stats. Maybe I will rename functions because theoretically they do different things even though it looks like they do the same.', 'comment_created': datetime.datetime(2022, 11, 15, 5, 30, 45, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1022366403, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 15, 6, 29, 40, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1022373538, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 15, 6, 42, 14, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1022388013, 'comment_body': 'isAccomplishmentsTabActive, ditto elsewhere.\r\n\r\n(Basically, you\'re asking, is the ""accomplishments tab"" active or not)', 'comment_created': datetime.datetime(2022, 11, 15, 7, 4, 27, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1022388919, 'comment_body': ""I don't actually understand what this means. Can you elaborate more on this?"", 'comment_created': datetime.datetime(2022, 11, 15, 7, 5, 51, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1022389585, 'comment_body': 'Boolean variables should not start with a verb. Only functions should.', 'comment_created': datetime.datetime(2022, 11, 15, 7, 6, 57, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1022390170, 'comment_body': 'This function is messy. I suggest you make two separate functions, one for each case, and get rid of the boolean variable.', 'comment_created': datetime.datetime(2022, 11, 15, 7, 7, 52, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1022390460, 'comment_body': ""Same thing, keep it as two separate functions. It would be fine to do a single function if the interior was pretty similar, but as it stands your function is basically a big if/else block and there isn't much benefit in unifying in that case."", 'comment_created': datetime.datetime(2022, 11, 15, 7, 8, 19, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1022391117, 'comment_body': 'There are no more pages after this one.', 'comment_created': datetime.datetime(2022, 11, 15, 7, 9, 17, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1022391301, 'comment_body': 'There are no more pages before this one.', 'comment_created': datetime.datetime(2022, 11, 15, 7, 9, 33, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1022393409, 'comment_body': 'I\'m confused by this. There\'s only one direction and it\'s represented by a zero. That doesn\'t really make sense to me -- I would expect something like ""+1"" for normal and ""-1"" for reverse. But here there\'s only one value in the enum so I don\'t even understand why we need this function at all.\r\n\r\nWhat is this actually representing? Is it actually a sort direction? If so what are the two values for ""usual order"" and ""reverse order""?', 'comment_created': datetime.datetime(2022, 11, 15, 7, 12, 19, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1022466516, 'comment_body': 'What I am doing is getting column names in the order I specified in COLUMNS object. According to the Angular documentation, the keyvalue pipe sorts the items by key order by default. We can provide a comparer function to change that order, and sort the items according to the key, to the value, or to the entry order of the properties in the object.\r\n\r\nSince I do not want to sort according to the key or to the value I just added a comparer function to get the items in the order I had specified in the COLUMNS object. Do I still need to add the reverse or normal order as well(including ENUMS for them too)?', 'comment_created': datetime.datetime(2022, 11, 15, 8, 16, 3, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1022471376, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 15, 8, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1022473855, 'comment_body': 'Added a more clear comment.', 'comment_created': datetime.datetime(2022, 11, 15, 8, 23, 39, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1022497644, 'comment_body': 'I believe it is better to use separate functions. Because when grouping functionality into one method, I had to use casting as well. So probably different functions will be good.', 'comment_created': datetime.datetime(2022, 11, 15, 8, 46, 32, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1022497826, 'comment_body': 'FUnction removed', 'comment_created': datetime.datetime(2022, 11, 15, 8, 46, 41, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1022498246, 'comment_body': ""Then this doesn't sound like a direction. getKeyToSortBy() perhaps?\r\n\r\nBut is the key always going to be 0? If so, then why do we need this function?\r\n\r\nI think the important thing is to provide enough documentation in the code explaining what is going on. You don't need to add the reverse order if that is not an intended use case; the problem here is that I cannot understand what this code is doing and what the implication of returning 0 is. If you can update the explanation more clearly (it needs to be clearer than your comment above), then I can take another look and give you feedback."", 'comment_created': datetime.datetime(2022, 11, 15, 8, 47, 2, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1022498295, 'comment_body': 'Explained in a previous comment.', 'comment_created': datetime.datetime(2022, 11, 15, 8, 47, 5, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1022548788, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 15, 9, 30, 51, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1022548904, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 15, 9, 30, 57, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1022961154, 'comment_body': 'Basically what we need is a constant in order to preserve the original key value order.\r\n\r\nI changed the function name as `provideOriginalOrder`\r\n\r\nI access this as `*ngFor=""let column of COLUMNS[type] | keyvalue: provideOriginalOrder""` in the template. We could have directly use *ngFor=""let column of COLUMNS[type] | keyvalue: 0""` instead of creating a function to preserve the original order of keys. But it gives console errors and the fix was to return 0(any constant from a function). Source: https://stackoverflow.com/questions/52793944/angular-keyvalue-pipe-sort-properties-iterate-in-order', 'comment_created': datetime.datetime(2022, 11, 15, 15, 47, 24, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1023035649, 'comment_body': '```suggestion\r\n  getActiveDropdownTabText(tabType: string, subType: string): string {\r\n```\r\n""Active"" already implies that the tab is chosen, and we\'re returning the tab text not the tab object itself.', 'comment_created': datetime.datetime(2022, 11, 15, 16, 50, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1023041174, 'comment_body': '```suggestion\r\n  // Index (exclusive) of the last item of the current stats page.\r\n```\r\n\r\nThe ""exclusive"" is the important part since it\'s not actually the index of the item, which can be confusing.', 'comment_created': datetime.datetime(2022, 11, 15, 16, 55, 13, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1023048616, 'comment_body': 'Not done? Ditto for all the other `currentPageEndIndex: 5` usages.', 'comment_created': datetime.datetime(2022, 11, 15, 17, 1, 38, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1023057965, 'comment_body': 'Can we add types here for each of the different stats objects? It looks like the translation stats have a structure like `{language: PageableStats}` whereas the question stats are just `PageableStats`.', 'comment_created': datetime.datetime(2022, 11, 15, 17, 10, 23, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1023067022, 'comment_body': ""Is it necessary to store language here if you're already storing language as a key in the translation stats of `statsData`?"", 'comment_created': datetime.datetime(2022, 11, 15, 17, 18, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1023075413, 'comment_body': 'It doesn\'t look like we ever use `page.key`, so it seems simpler to just iterate over statsData[type].values() in the first place. Also let\'s update the name since it\'s not actually the page we\'re iterating over, but the stat object itself. Ditto below.\r\n\r\n```suggestion\r\n    <mat-card *ngFor=""let translationStatByLanguageAndTopic of statsData[type].values()"" layout=""row"" class=""list-view-item"">\r\n```', 'comment_created': datetime.datetime(2022, 11, 15, 17, 27, 6, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1023082369, 'comment_body': '```suggestion\r\n        <tr *ngFor=""let questionStat of statsData[type].data.slice(statsData[type].currentPageStartIndex, statsData[type].currentPageEndIndex)"" class=""stats-row"">\r\n```\r\n\r\nDitto below. ', 'comment_created': datetime.datetime(2022, 11, 15, 17, 33, 54, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1023100386, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 15, 17, 52, 58, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1023108010, 'comment_body': 'Keeping keyvalue as it is since we are removing language from `PageableStats`', 'comment_created': datetime.datetime(2022, 11, 15, 18, 1, 10, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1023112543, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 15, 18, 6, 4, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1023116332, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2022, 11, 15, 18, 10, 30, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1023116946, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 15, 18, 11, 12, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1023196717, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 15, 19, 46, 22, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1023197556, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 11, 15, 19, 47, 27, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1023327731, 'comment_body': 'I don\'t really understand what ""exclusive"" means here. Maybe adding an example to the comment could clarify? (Or maybe change the way it\'s represented so it\'s not ""exclusive""?)', 'comment_created': datetime.datetime(2022, 11, 15, 22, 41, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1023329272, 'comment_body': 'Your comment should explain the significance of the constant ""0"". What does 0 actually represent? (If you returned 2 or 3 or -1 or something else, would this cause any issues?)', 'comment_created': datetime.datetime(2022, 11, 15, 22, 43, 27, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1023330089, 'comment_body': '(Also I would recommend linking to the SO post in the comment -- you can get a shortlink by using the ""Share"" link below the answer you are referencing.)', 'comment_created': datetime.datetime(2022, 11, 15, 22, 44, 43, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1023968406, 'comment_body': 'We can just increment `currentPageStartIndex` and check the current page based on it. So I removed this field.', 'comment_created': datetime.datetime(2022, 11, 16, 13, 4, 41, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1023969232, 'comment_body': 'Removed this filed.', 'comment_created': datetime.datetime(2022, 11, 16, 13, 5, 23, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1023981574, 'comment_body': ""I checked with negative and positive consts but negative ones didn't give the preferred order. So I mentioned we need to return a **non-negative** constant.  I mentioned it in the comment."", 'comment_created': datetime.datetime(2022, 11, 16, 13, 17, 10, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1024506288, 'comment_body': ""Instead of this let's just make `PageableStats` a class instead of an interface with a `create(data)` method. Especially since we always set `currentPageStartIndex: 0`."", 'comment_created': datetime.datetime(2022, 11, 16, 21, 5, 5, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1024506693, 'comment_body': 'Add new line above.', 'comment_created': datetime.datetime(2022, 11, 16, 21, 5, 37, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1024541080, 'comment_body': '...to return 0, since any other ...', 'comment_created': datetime.datetime(2022, 11, 16, 21, 51, 2, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1024697091, 'comment_body': 'Perhaps we could be a bit more descriptive as to what enabling the feature does, e.g.: ""This flag enables showing per-contributor accomplishments on the contributor dashboard.""\r\n\r\nWDYT?', 'comment_created': datetime.datetime(2022, 11, 17, 2, 38, 4, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 1024722330, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 17, 3, 39, 42, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1024722599, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 17, 3, 40, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1024722690, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 17, 3, 40, 33, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1024722755, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 17, 3, 40, 40, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1025810799, 'comment_body': ""There doesn't seem a good enough reason to disable this lint check. Can we just line break?"", 'comment_created': datetime.datetime(2022, 11, 17, 22, 45, 37, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1025812242, 'comment_body': 'Ah, sorry in my previous comment I meant we can delete these functions and just create the Pageable stats inline above.', 'comment_created': datetime.datetime(2022, 11, 17, 22, 47, 43, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1025813663, 'comment_body': 'I think the compiler is complaining about the `language` object, right? I think we can just add a check making sure `language` is defined rather than adding all these ignores below.', 'comment_created': datetime.datetime(2022, 11, 17, 22, 50, 11, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026119048, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 7, 53, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026119227, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 7, 54, 4, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026119307, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 7, 54, 10, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026770722, 'comment_body': ""Let's just instantiate this above."", 'comment_created': datetime.datetime(2022, 11, 18, 18, 44, 9, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026771253, 'comment_body': ""Let's just instantiate the map here and then we can also remove the `undefined` types."", 'comment_created': datetime.datetime(2022, 11, 18, 18, 44, 51, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026771618, 'comment_body': 'I think we can actually remove this check if we instantiate the `this.statsData.translationContribution` on declaration above.', 'comment_created': datetime.datetime(2022, 11, 18, 18, 45, 19, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026771829, 'comment_body': 'I think we can actually remove this check if we instantiate the `this.statsData.translationReview` on declaration above.', 'comment_created': datetime.datetime(2022, 11, 18, 18, 45, 37, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1027076925, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 19, 11, 18, 32, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027076930, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 19, 11, 18, 37, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027076932, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 19, 11, 18, 41, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027076950, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 19, 11, 18, 46, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027128844, 'comment_body': 'Prefer the direct comparison:\r\n```suggestion\r\n        if (translationContributionStatsData === undefined) {\r\n```', 'comment_created': datetime.datetime(2022, 11, 19, 18, 55, 29, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1027128857, 'comment_body': 'Prefer the direct comparison.', 'comment_created': datetime.datetime(2022, 11, 19, 18, 55, 41, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1027248045, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 20, 8, 33, 54, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027248053, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 20, 8, 33, 58, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}]","[{'commit_sha': 'c798e78df80c745a7181584710e4bfb707f09926', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '218b79c52ced20bc00d941ad4258e6fa1ac28b92', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd03d5799641213b5dc15f27084ce45aed359d99c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '536a551e6bca8a3f0f6b0d2529995ff1d7b262fa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b853c9a686ebce7b8b26a3a3fa137cd24700a7db', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cab061f577b3fe093555c1526bee7bf9c4baf8f6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f746b930b061b5a8c969f3249ff2476f8ca5514', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63a998851075b029479db7964bcef44d1d57eaa1', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40e6c29251a3a2340e17cef9a14160a82bb55876', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e042a80db9b38bf2ede32b177af88c75e9a333c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d2e59bc54886aa3536df919bb30cf2db7b2843d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec0690940d4756948199e14cd6c9016ac59033d6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82b8daee90bc28afc5a7607a41591a9845d2166d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac535986e2c38ca6843d7f8513be917b46f3667d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e211ca5cba6a21551c2d15500a79e55538efc777', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '457397387916098eca03068ff705401b68d8b3d5', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb6325941bef5193b3daba77a8a01a70727e7b08', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09f468adf4998e1a4c003d016e2e244eda5e652a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd214681d82717604c56a7cf0487295cd095c7c34', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53b2d186fa9be480db0914b7af149f390a5ca7b2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fb9feef25baa55af4a62a4318c8cd12496aa30f', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0da489240407853f9628cdc6898be9998551d82', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99f637090f7db73fadac2beff63f8a36e88730fc', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0d071b7590a25cff5083a7de0ce4570048a0056', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b531b277c9c18ca1ec46489eb28bb6609dfb5508', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b3b0994a7439af3170b3d32dfa8d20e4e554935', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f25c22c86aeff2f87bd7bace57aa62c42ddea60e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd17e5209d95f0eb75e4194d56edf900cd244466', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71027ce9075330c453cf988e50565314e3dc15bd', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03f05203b70740c1fab6c19535d2eb27253a2fb8', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '464a643e73b767b47f6eb0c16347a77e1f0f3019', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0452ed785a90cb9c7b5c343fe7bb694391a0a515', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98a5b45ac2ac882e3797c469e6db5abe40fa7706', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9988aadbd17c3a05be9836214c75444ea8d2955', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db831aea415c86fa9db1735796db0308f5341e95', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81d963130f9926dda6b12338c0475c6dad6ba051', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de425540c99e277bbac8f61e7ba5c17af337de46', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37d34c5f3107728b53c8d9dc74b955dbe4741e7a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85ebdc4d2de290acd917a1c5e4ee14d304cd0bea', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '396ad547ca869ce8d18281e1966b6001df3f4ac1', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbb9297e4ac710be0557bf41fa9cd903c0e5ab9b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f6bce0537aa837a7e173c62722257e08fa2d9fa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbc75ccc264b5a17d884238ad3fa5b070cd2c762', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '235d23986c3b4de3973061311973e749b5ec375f', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '629ad5ebdbf07a9b9cec744b16ae7e5f6c23adbc', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6eca00f9a520b12a15ef79162a78cae6de248560', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc3a956b8e4e60bc71c4a5f2bc3384e50e9f5180', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f916fe4246e3e4a0d8bdb7b656737d58e79580a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd59efdcf4f9056e192cf5cb025035fffac2f5c13', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c82bd7db73ae02ad4415cb6e2ed892b6b6d6713a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd42a694ef5ce8e3b136b9c3de45bc91cf5b27a14', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c91ea46860bd09aeca820dc275153e9903068712', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a679859d01e066ebe4abb0f250b179f45271ce34', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03b5447b8d1a7c8a5cbaf8c8f20400b4434832e7', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e17316dfb60b42fdd395804cb32cf7142355f1b9', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49c6873752b51401ea0e57f30e7039646a69efe4', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfce935bdcda7258967ed06af183dbbaa958d79e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '253699997a4cb25c6d8155b442c459d3eed1647c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccb99add789bb58d65dfef60a3a0802c52dcb023', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '990ed1d04bb6db7f3296b1b6be2559d47909355c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5ded5d659d84596080f1d9e55bd8461f135586a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '773fbe17e8d9ba166e4992aebe140f2bc4ab4465', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cac46199dae688b1511939e68091daa9d3620e36', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd442f5c3393c438fcdf7688c408fa7d03d34eb2f', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '018f498a21563ca501d87ce71e525752288d9864', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f23b1bb83c02e85b990776d06cb1f9f7df14b746', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b15b772828c3ee7e81caddcbe5cbbe52d4bcdbba', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d241446d2ed212b27debd7cad602f856b233eaf', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bf57b28834db24e25e6dabd028716b84e1ae72e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bbf92435001e9c5ef8663200938a549c7bc9521', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2060ed37c42b8d879b6f434f2cf08426f59c337', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77c8ed59a4faae4967efd7e333029ab7ef6a664d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fce8b8205e000e8f88d576f28f3ae6f4b8030ed6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce6ef71329595e0254d6d83fd32f7cec1b6f66c5', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae822ceef67fb64be25baa1fad8f2c49dbf669fa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2754bee9d67fa6bc55e48dd5ec33697e29830d61', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe5c0978ecbaa542fb55c9a7c1acd96553b66103', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80643770c9f5253a0055e24df05d4739a33bb725', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd28c1960da41fc92a22c8c6a08e4fc3e06e3a263', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52a2d0d292eed0f09c973a99e1d74a801238a261', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4f3e25f0199923e9c4b95411fcedbe3408c01ba', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e033e83aa4cdc2b24f2714825c75c1a047f0ac1d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4595c6dd66e93eeec8fd43831e0ede44d3178fa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c167a3c26df4d9efcabd8766dc57a6b6fd15ec2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3772a44508528a0aa1adcded36ea40e3e8a7e0c9', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28622e212b294b44a89be74c8be38a1430023dac', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be0d122847c4a7826d095984648723fd53ca9b1b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f490626644c48e219979cee830bd064e27944dc', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8970af88add652cb1798698566b8268abccb698e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1963db6adf623695c49d6d4777aa949c5c607dae', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25242427bc2bff6e37f351833e1d2e8698d69ef3', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc3de12aa0c0511c121b902faa06382ac01c6c0e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4093966a8ca5f3b0d3939b2ebaf93c3faa6c19b8', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7989aa6b37fe2080d979c216f14cef117b2662b1', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0055557eaccc44a6bfe1bc8d6feb956483324e3f', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}]",Hasitha Kaushan,41409951,,User,,34,,33,36
1106364435,(Contributor Recognition Infrastructure) Milestone2.3: Add contributor badges with the mobile view,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of n/a.
2. This PR does the following: Added badges for contributors: Doc https://docs.google.com/document/d/16SciF9u-AngOdmvBaSyjYCAYrppR6lTE-S2vwhhh86A/edit3. 

- This is stacked on https://github.com/oppia/oppia/pull/16289
- This branch is taken from the milestone2.2 branch, which is also in-review currently. So only the following files are relevant for this PR.

```
assets/images/contributor_dashboard/*
core/templates/app.constants.ts
core/templates/pages/contributor-dashboard-page/contributor-badge/*
core/templates/pages/contributor-dashboard-page/question-badge/*
core/templates/pages/contributor-dashboard-page/translation-badge/*
```


## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [ ] The linter/Karma presubmit checks have passed locally on your machine.
- [ ] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [ ] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

https://user-images.githubusercontent.com/41409951/199207545-92a2e14c-9d2f-4684-8564-95c68712186e.mov


https://user-images.githubusercontent.com/41409951/199207758-969658da-0414-470e-842a-b2822a3b8101.mov

![image](https://user-images.githubusercontent.com/41409951/199209605-8b280795-6bb3-4f46-b11f-578f2cf2507c.png)

![image](https://user-images.githubusercontent.com/41409951/199209696-6dcd2e6e-ffd4-45dc-9da1-8839dbadc616.png)



#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->


https://user-images.githubusercontent.com/41409951/199207328-5802dc2c-4425-4423-8edf-9abe3085ac66.mov



#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
",True,16459,https://api.github.com/repos/oppia/oppia/pulls/16459,https://github.com/oppia/oppia/pull/16459,closed,1655,1,16,95,18,146,0,1,[],2022-11-01 07:25:53+00:00,2022-11-24 04:04:46+00:00,1975133.0,"22 days, 20:38:53","[{'comment_id': 1012068797, 'comment_body': 'nit: `showMobileTranslationBadges` would read better.', 'comment_created': datetime.datetime(2022, 11, 2, 17, 7, 31, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1012071252, 'comment_body': ""Seems odd that the mobile container class is used here, but it's always displayed."", 'comment_created': datetime.datetime(2022, 11, 2, 17, 9, 46, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1012072290, 'comment_body': 'Typo in ""containier"". Also, it may be cleaner to drop ""non-mobile"" from the class name.', 'comment_created': datetime.datetime(2022, 11, 2, 17, 10, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1012075764, 'comment_body': 'Is it possible to make the loading box larger to more closely reflect the end-state?', 'comment_created': datetime.datetime(2022, 11, 2, 17, 13, 52, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1012077503, 'comment_body': 'Do these cover the case if the user has question badges, but no translation badges on desktop?', 'comment_created': datetime.datetime(2022, 11, 2, 17, 15, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1012083455, 'comment_body': 'Add new line before and after.', 'comment_created': datetime.datetime(2022, 11, 2, 17, 20, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1012084283, 'comment_body': 'Fix the double words, e.g. ""should should"".\r\n\r\nAlso, I\'m not sure these test names match the parent ""when user navigates to contributor badge page"", since these require user action.', 'comment_created': datetime.datetime(2022, 11, 2, 17, 21, 35, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1012086229, 'comment_body': 'Add new line.', 'comment_created': datetime.datetime(2022, 11, 2, 17, 23, 25, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1012086517, 'comment_body': 'Remember to add new lines for the test structure.', 'comment_created': datetime.datetime(2022, 11, 2, 17, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1012090689, 'comment_body': 'We seem to be using the `userCanSuggestQuestions || userCanReviewQuestionSuggestions` logic a lot in this file, so it may be worth declaring a `userHasQuestionRights` variable in the component.', 'comment_created': datetime.datetime(2022, 11, 2, 17, 27, 11, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1012138740, 'comment_body': 'Maybe add new line to be consistent with below.', 'comment_created': datetime.datetime(2022, 11, 2, 18, 13, 10, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1012138893, 'comment_body': 'Add new line here.', 'comment_created': datetime.datetime(2022, 11, 2, 18, 13, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1012139716, 'comment_body': 'Add new line.', 'comment_created': datetime.datetime(2022, 11, 2, 18, 14, 16, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1012143783, 'comment_body': 'Since this is the context of a badge already, we can drop ""badge"". Also, since it\'s boolean, `isUnlocked` would be better.', 'comment_created': datetime.datetime(2022, 11, 2, 18, 18, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1012144242, 'comment_body': 'Value seems too generic. Maybe something like ""contributionCount"".', 'comment_created': datetime.datetime(2022, 11, 2, 18, 19, 14, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1012146695, 'comment_body': '`ContributionCounts`?', 'comment_created': datetime.datetime(2022, 11, 2, 18, 21, 27, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1012156770, 'comment_body': ""```suggestion\r\n          this.totalTranslationStats[languageDescription].submissions = (\r\n```\r\n\r\nI don't think you need to add the value, just set it. Here and below."", 'comment_created': datetime.datetime(2022, 11, 2, 18, 31, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1012184918, 'comment_body': 'I think the below logic can be simplified quite a bit if we had a function like `getObtainedBadges(contributionCount, contributionType, contributionSubType, language?)`, which we would call for each type of badge/language. That way we wouldn\'t need the ""get predefined/non-predefined"" or ""all badges created"" functions. The function could look like:\r\n\r\n```\r\nbadges = []\r\nfor level in initial badge levels:\r\n  if  contributionCount >= level:\r\n    add badge\r\n  else:\r\n    add locked badge\r\n    return\r\n\r\nlevel = 1000\r\nwhile contributionCount >= level:\r\n  same logic as above...\r\n```\r\n\r\nYou can also call this function above for each stat count above, so you wouldn\'t need the `TotalContributionsAndReviews` objects to store intermediate values.', 'comment_created': datetime.datetime(2022, 11, 2, 18, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1012239264, 'comment_body': 'Typo.', 'comment_created': datetime.datetime(2022, 11, 2, 19, 56, 10, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1012239904, 'comment_body': 'Typo.', 'comment_created': datetime.datetime(2022, 11, 2, 19, 57, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1012241321, 'comment_body': 'I think we can just assign the language above as well, since if language is undefined, it should be the same.', 'comment_created': datetime.datetime(2022, 11, 2, 19, 58, 40, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1020374607, 'comment_body': 'In desktop view it is set as none. Only when the width < 700px it is displayed using css class', 'comment_created': datetime.datetime(2022, 11, 11, 16, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1020390166, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 11, 16, 46, 3, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1020392149, 'comment_body': 'Done and renamed', 'comment_created': datetime.datetime(2022, 11, 11, 16, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1020448393, 'comment_body': ""This will be only shown if there are no translation badges AND the user has no question rights(that means no question badges). If the user has question rights but has not achieved any badges yet, but he has disabled badges.\r\n\r\nSince user can submit translations for any language, we will have to create disabled badges for all of them if we want to show them. I do not think it's necessary and will be time consuming to created disabled badges for all languages. Disabled badges for translation submissions will be shown only if the user has review right for the particular language.\r\n\r\nBut for the mobile view it's different because Badge type dropdown item for Questions only visible if the user has rights for question submission/reviews."", 'comment_created': datetime.datetime(2022, 11, 11, 17, 58, 53, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1020450361, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 11, 18, 1, 14, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1020451490, 'comment_body': 'Done. Added the user action as ""when user clicks on it""', 'comment_created': datetime.datetime(2022, 11, 11, 18, 2, 59, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1020451899, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 11, 18, 3, 36, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1020452141, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 11, 18, 3, 59, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1020457343, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 11, 18, 12, 33, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1020459529, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 11, 18, 15, 47, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1020461937, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 11, 18, 19, 47, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1020462181, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 11, 18, 20, 11, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1020462363, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 11, 18, 20, 35, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1020462620, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 11, 18, 21, 2, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1020465788, 'comment_body': 'Here one stat record gives the number of submissions for a given topic in a given language. If we want to get the total submissions for the language we need to get the sum of contributions for all topics so we need to add the value rather setting the value.', 'comment_created': datetime.datetime(2022, 11, 11, 18, 25, 16, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1020534347, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 11, 20, 17, 38, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1020539234, 'comment_body': 'Changed the logic.\r\n\r\nBut I think still we need to have `TotalContributionsAndReviews` since before creating badges, we need to have total submissions, reviews, corrections(per language if translations) and one backend dict represents stats per a topic.', 'comment_created': datetime.datetime(2022, 11, 11, 20, 27, 34, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1020544809, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 11, 20, 39, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1020653534, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 12, 2, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1020653798, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 12, 2, 46, 8, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1020663142, 'comment_body': 'Is this sufficient? \r\n![image](https://user-images.githubusercontent.com/41409951/201453627-ce07c062-f5ba-4d77-836d-08545f5d9669.png)\r\n', 'comment_created': datetime.datetime(2022, 11, 12, 3, 4, 58, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1022185779, 'comment_body': ""This function doesn't seem to really do much. I would just get rid of it."", 'comment_created': datetime.datetime(2022, 11, 15, 0, 7, 2, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1022186104, 'comment_body': ""Maybe add a comment here explaining that you're adding a locked badge."", 'comment_created': datetime.datetime(2022, 11, 15, 0, 7, 48, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1022186314, 'comment_body': 'Should be able to return here.', 'comment_created': datetime.datetime(2022, 11, 15, 0, 8, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1022186722, 'comment_body': '```suggestion\r\n    for (const level of AppConstants.CONTRIBUTOR_BADGE_INITIAL_LEVELS) {\r\n```\r\nSeems more descriptive.', 'comment_created': datetime.datetime(2022, 11, 15, 0, 9, 12, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1022188266, 'comment_body': 'Can return early instead.', 'comment_created': datetime.datetime(2022, 11, 15, 0, 12, 23, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1022195287, 'comment_body': 'These labels should be plural like in the mocks.', 'comment_created': datetime.datetime(2022, 11, 15, 0, 26, 1, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1022195764, 'comment_body': 'Can we add tests for these two cases? Could you also post screenshots of these two cases as well?', 'comment_created': datetime.datetime(2022, 11, 15, 0, 27, 5, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1022196930, 'comment_body': 'Noting the typos.', 'comment_created': datetime.datetime(2022, 11, 15, 0, 29, 32, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1022197337, 'comment_body': '```suggestion\r\n<div *ngIf=""!isUnlocked""  \r\n```\r\n\r\nShould work since `isUnlocked` is a boolean. Here and elsewhere.', 'comment_created': datetime.datetime(2022, 11, 15, 0, 30, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1022197427, 'comment_body': '```suggestion\r\n<div *ngIf=""isUnlocked"" class=""badge-container"">\r\n```', 'comment_created': datetime.datetime(2022, 11, 15, 0, 30, 40, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1022198090, 'comment_body': '```suggestion\r\n     ngbTooltip=""{{value}} more {{contributionTypeText.toLowerCase()}} to achieve this badge""\r\n```\r\n\r\nand elsewhere.', 'comment_created': datetime.datetime(2022, 11, 15, 0, 32, 12, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1022201143, 'comment_body': ""Don't you also need to add these counts since there is one question stat per topic? Also, there should be unit tests verifying these counts/obtained badges."", 'comment_created': datetime.datetime(2022, 11, 15, 0, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1022204380, 'comment_body': '```suggestion\r\n    const allContributionStats = await this.contributionAndReviewStatsService.fetchAllStats(\r\n```', 'comment_created': datetime.datetime(2022, 11, 15, 0, 45, 36, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1022205464, 'comment_body': '```suggestion\r\n  @Input() contributionCount: number;\r\n```\r\n\r\nDitto for translation badge.', 'comment_created': datetime.datetime(2022, 11, 15, 0, 47, 32, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1024232281, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 16, 16, 27, 45, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1024239626, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 16, 16, 33, 51, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1024260375, 'comment_body': 'Yes done.', 'comment_created': datetime.datetime(2022, 11, 16, 16, 51, 20, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1024261052, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 16, 16, 51, 56, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1024264807, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 16, 16, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1024264980, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 16, 16, 55, 29, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1024268118, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 16, 16, 58, 9, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1024273928, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2022, 11, 16, 17, 3, 13, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1024275425, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 16, 17, 4, 41, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1024276031, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 16, 17, 5, 18, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1024278459, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 16, 17, 7, 33, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1024279651, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 16, 17, 8, 36, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1024380349, 'comment_body': 'When has no translation badges AND no question rights(no question badges).\r\n\r\n![image](https://user-images.githubusercontent.com/41409951/202260337-c01e3902-44f7-4744-9a07-f37055a2c07f.png)\r\n\r\nWhen has no translation badges AND has question rights(has unlocked question badges)\r\n![image](https://user-images.githubusercontent.com/41409951/202260737-e8e41ccd-995f-4ab3-a05b-300b1ba80972.png)\r\n\r\nWhen has translation badges AND no question rights(no question badges)\r\n![image](https://user-images.githubusercontent.com/41409951/202261442-359df1f2-9a55-4ec6-a3ec-94879d02fdc5.png)\r\n\r\nUpdated test cases\r\n\r\n\r\n', 'comment_created': datetime.datetime(2022, 11, 16, 18, 42, 42, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1024554863, 'comment_body': ""This test name doesn't seem to match the assertions."", 'comment_created': datetime.datetime(2022, 11, 16, 22, 8, 52, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1024555631, 'comment_body': ""```suggestion\r\n      it('should show translation badges type in mobile', fakeAsync(() => {\r\n```"", 'comment_created': datetime.datetime(2022, 11, 16, 22, 9, 47, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1024555726, 'comment_body': ""```suggestion\r\n      it('should show question badges type in mobile', fakeAsync(() => {\r\n```"", 'comment_created': datetime.datetime(2022, 11, 16, 22, 9, 56, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1024560618, 'comment_body': '```suggestion\r\n  selectMobileBadgeType(mobileBadgeType: MobileBadgeType): void {\r\n```', 'comment_created': datetime.datetime(2022, 11, 16, 22, 16, 30, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1024561675, 'comment_body': 'Can we make this an enum, e.g.\r\n\r\n```suggestion\r\n  enum MobileBadgeType {\r\n    Question = ""QUESTION"",\r\n    Translation = ""TRANSLATION"",\r\n  }\r\n```\r\n\r\nIt would make its usages clearer.', 'comment_created': datetime.datetime(2022, 11, 16, 22, 18, 1, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1024561861, 'comment_body': ""```suggestion\r\n      it('should toggle mobile badge type dropdown', fakeAsync(() => {\r\n```"", 'comment_created': datetime.datetime(2022, 11, 16, 22, 18, 17, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1024562546, 'comment_body': '```suggestion\r\n      (languageCode) => {\r\n```', 'comment_created': datetime.datetime(2022, 11, 16, 22, 19, 19, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1024563143, 'comment_body': 'Remove.', 'comment_created': datetime.datetime(2022, 11, 16, 22, 20, 9, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1024564409, 'comment_body': '```suggestion\r\n        // Add a locked badge for the next unachieved milestone.\r\n```', 'comment_created': datetime.datetime(2022, 11, 16, 22, 21, 57, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1024566374, 'comment_body': 'Add new line before and after.', 'comment_created': datetime.datetime(2022, 11, 16, 22, 24, 36, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1024566552, 'comment_body': 'Add new line before and after.', 'comment_created': datetime.datetime(2022, 11, 16, 22, 24, 49, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1024567666, 'comment_body': 'What is meant by this describe? ', 'comment_created': datetime.datetime(2022, 11, 16, 22, 26, 32, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1024568000, 'comment_body': 'How does this test multiple badges?', 'comment_created': datetime.datetime(2022, 11, 16, 22, 27, 2, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1024571977, 'comment_body': ""Since this logic is the same as above, let's consolidate this into one loop (keep track of index, increment index, when index gets to end of `AppConstants.CONTRIBUTOR_BADGE_INITIAL_LEVELS`, start incrementing level by 500 instead). "", 'comment_created': datetime.datetime(2022, 11, 16, 22, 33, 10, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1025492653, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 17, 17, 35, 23, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1025493270, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 17, 17, 36, 1, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1025493953, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 17, 17, 36, 40, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1025495370, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2022, 11, 17, 17, 38, 8, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1025514748, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 17, 17, 55, 1, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1025515420, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 17, 17, 55, 24, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1025516544, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 17, 17, 56, 6, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1025588247, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 17, 19, 3, 44, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1025623319, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 17, 19, 34, 35, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1025624118, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 17, 19, 35, 37, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1025625112, 'comment_body': 'Updated the describe.', 'comment_created': datetime.datetime(2022, 11, 17, 19, 36, 51, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1025627629, 'comment_body': 'It should not actually test the multiple badges. It should test that the plural form of the badge text is given when the contributionCount is greater than 1.', 'comment_created': datetime.datetime(2022, 11, 17, 19, 39, 35, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1025628132, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 17, 19, 40, 12, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1025671945, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 17, 20, 16, 50, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026796763, 'comment_body': ""Nit:\r\n```suggestion\r\n      if (index < AppConstants.CONTRIBUTOR_BADGE_INITIAL_LEVELS.length) {\r\n```\r\nJust so that when reading you're thinking of the index first."", 'comment_created': datetime.datetime(2022, 11, 18, 19, 17, 58, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026798047, 'comment_body': 'Looks great :)', 'comment_created': datetime.datetime(2022, 11, 18, 19, 19, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026798398, 'comment_body': 'Got it. Thanks for updating!', 'comment_created': datetime.datetime(2022, 11, 18, 19, 19, 51, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1027657580, 'comment_body': '```suggestion\r\n        <div #mobileBadgeTypeDropdown \r\n             class=""oppia-contribution-stats-type-selector-mobile-container e2e-test-topic-selector"">\r\n            <div class=""oppia-stats-type-selector-inner-container e2e-test-topic-selector-selected"" \r\n                 (click)=""toggleMobileBadgeTypeDropdown()"">\r\n              {{mobileBadgeTypeSelected}}\r\n              <span class=""material-icons oppia-contributions-dropdown-arrow""\r\n                    [ngStyle]=""{ \'transform\': mobileBadgeTypeSelected === \'Translation\' ? \'scaleY(-1)\' : \'scaleY(1)\' }"">\r\n```\r\n\r\nditto elsewhere', 'comment_created': datetime.datetime(2022, 11, 21, 7, 30, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027658454, 'comment_body': 'Should we handle other than WebKit scrollbars too?', 'comment_created': datetime.datetime(2022, 11, 21, 7, 32, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027658655, 'comment_body': 'Missing newline?', 'comment_created': datetime.datetime(2022, 11, 21, 7, 32, 34, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027659020, 'comment_body': 'Why is language optional?', 'comment_created': datetime.datetime(2022, 11, 21, 7, 33, 8, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027659060, 'comment_body': 'Why is language optional?', 'comment_created': datetime.datetime(2022, 11, 21, 7, 33, 12, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027659281, 'comment_body': 'Why is this set to empty string and not null?', 'comment_created': datetime.datetime(2022, 11, 21, 7, 33, 32, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027660540, 'comment_body': '```suggestion\r\n      contributionCount: number,\r\n      contributionSubType: string, \r\n      language?: string\r\n  ): Badge[] {\r\n```\r\n\r\nWhy is language optional?', 'comment_created': datetime.datetime(2022, 11, 21, 7, 35, 14, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027661289, 'comment_body': '```suggestion\r\n      targetElement &&\r\n      !this.dropdownRef.nativeElement.contains(targetElement)\r\n```\r\nditto below', 'comment_created': datetime.datetime(2022, 11, 21, 7, 36, 14, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027661610, 'comment_body': '```suggestion\r\n    <img class=""translation-badge"" \r\n         src=""/assets/images/contributor_dashboard/question-{{type}}-badge.component.svg"">\r\n```', 'comment_created': datetime.datetime(2022, 11, 21, 7, 36, 43, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027661724, 'comment_body': '```suggestion\r\n  <img class=""translation-badge"" src=""/assets/images/contributor_dashboard/locked-badge.svg"">\r\n```', 'comment_created': datetime.datetime(2022, 11, 21, 7, 36, 55, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027661872, 'comment_body': 'Missing newline at the end of the file.', 'comment_created': datetime.datetime(2022, 11, 21, 7, 37, 8, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027668670, 'comment_body': ""I would expect that we have some kind of base badge object and then have a question and translation badge to inherit from that. Why isn't that so?"", 'comment_created': datetime.datetime(2022, 11, 21, 7, 45, 27, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027754775, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 21, 9, 18, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027778353, 'comment_body': 'Only these are handled throughout the CD page(selectors includin language selector, topic selector etc.). In order to keep the consistency, only these are handled in the badge component too.', 'comment_created': datetime.datetime(2022, 11, 21, 9, 39, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027805025, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 21, 10, 1, 25, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027806855, 'comment_body': 'We keep translation and question contribution counts in these objects. Only translation contributions have a language that is associated with it. Hence language is an optional attribute here.', 'comment_created': datetime.datetime(2022, 11, 21, 10, 3, 1, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027807448, 'comment_body': 'We keep translation and question contribution badges in these objects. Only translation contributions have a language that is associated with it. Hence language is an optional attribute here as well', 'comment_created': datetime.datetime(2022, 11, 21, 10, 3, 31, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027809083, 'comment_body': 'Removed the assignment of empty string.', 'comment_created': datetime.datetime(2022, 11, 21, 10, 4, 50, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027810919, 'comment_body': 'We create Question contribution badges from this function as well. They dont have an associated language. Hence it is an optional param here.', 'comment_created': datetime.datetime(2022, 11, 21, 10, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027811492, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 21, 10, 7, 5, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027812146, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 21, 10, 7, 47, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027813322, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 21, 10, 8, 50, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027814559, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 21, 10, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027814741, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 21, 10, 10, 8, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027878045, 'comment_body': 'We already have `Badge` object for both translation and question types. The only difference is translation type badges have language attribute.\r\n\r\nWe do not pass the whole badge object to the translation badge component or question badge component, instead we just pass their attributes.', 'comment_created': datetime.datetime(2022, 11, 21, 11, 9, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1028322990, 'comment_body': 'Hmm, did you check that the UI works correctly in non-webkit browsers?', 'comment_created': datetime.datetime(2022, 11, 21, 17, 9, 55, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1028327675, 'comment_body': 'Hmm, I think it would be better to use a bit different type then.', 'comment_created': datetime.datetime(2022, 11, 21, 17, 14, 42, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1028327848, 'comment_body': 'ditto as above', 'comment_created': datetime.datetime(2022, 11, 21, 17, 14, 52, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1028331375, 'comment_body': 'I know. What I am saying is that it seems a bit redundant to have two full components if they do almost the same thing.', 'comment_created': datetime.datetime(2022, 11, 21, 17, 18, 33, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1028332478, 'comment_body': 'Or if you want to keep this as optinal then please do \r\n```suggestion\r\n  language: string | null;\r\n```\r\nAnd set `null` explicitely.\r\n\r\nThe other possibility would be to use discriminated unions.', 'comment_created': datetime.datetime(2022, 11, 21, 17, 19, 43, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1028829146, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 22, 4, 58, 16, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1028829259, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 22, 4, 58, 30, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1028829541, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 22, 4, 59, 7, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1028829851, 'comment_body': 'Created a new component', 'comment_created': datetime.datetime(2022, 11, 22, 4, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1028831474, 'comment_body': 'I can not test it because I do not have a non-webkit browser. But should it be still an issue since we are already do this way in the contributor dashboard?', 'comment_created': datetime.datetime(2022, 11, 22, 5, 3, 50, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1029539054, 'comment_body': 'Can you ask someone for testing? Or can you download Firefox for testing?', 'comment_created': datetime.datetime(2022, 11, 22, 16, 8, 51, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1029539700, 'comment_body': '```suggestion\r\n<div *ngIf=""isUnlocked && contributionType === \'translation\'"" \r\n     class=""translation-badge-container"">\r\n```', 'comment_created': datetime.datetime(2022, 11, 22, 16, 9, 24, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1029541640, 'comment_body': ""You can implement mapping from the AppConstants.XXX → 'yyy' and then just do `mapping[XXX]` here to remove th ifs."", 'comment_created': datetime.datetime(2022, 11, 22, 16, 11, 1, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1029542917, 'comment_body': '```suggestion\r\n          <div *ngIf=""dropdownShown"" \r\n               class=""oppia-stats-type-selector-dropdown-container e2e-test-topic-selector-dropdown"">\r\n```', 'comment_created': datetime.datetime(2022, 11, 22, 16, 12, 5, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1029543317, 'comment_body': '```suggestion\r\n            <badge class=""badge-item""\r\n                   *ngFor=""let badge of translationBadges[selectedLanguage].submission""\r\n                   [isUnlocked]=""badge.isUnlocked"" \r\n                   contributionSubType=""{{badge.text}}""\r\n                   language=""{{badge.language}}""\r\n                   contributionType=""translation"" \r\n                   contributionCount=""{{badge.contributionCount}}"">\r\n```', 'comment_created': datetime.datetime(2022, 11, 22, 16, 12, 25, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1029544035, 'comment_body': 'ditto below', 'comment_created': datetime.datetime(2022, 11, 22, 16, 13, 4, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1029997033, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 23, 3, 43, 58, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1030006807, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 23, 4, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1030007138, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 23, 4, 15, 2, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1030007830, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 23, 4, 17, 11, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1030009300, 'comment_body': '\r\nhttps://user-images.githubusercontent.com/41409951/203468683-e63721e3-5f5d-4e37-8f37-f4b147b420f4.mov\r\n\r\nIt seems fine in firefox.', 'comment_created': datetime.datetime(2022, 11, 23, 4, 22, 5, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}]","[{'commit_sha': 'c798e78df80c745a7181584710e4bfb707f09926', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '218b79c52ced20bc00d941ad4258e6fa1ac28b92', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd03d5799641213b5dc15f27084ce45aed359d99c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '536a551e6bca8a3f0f6b0d2529995ff1d7b262fa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b853c9a686ebce7b8b26a3a3fa137cd24700a7db', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cab061f577b3fe093555c1526bee7bf9c4baf8f6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f746b930b061b5a8c969f3249ff2476f8ca5514', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63a998851075b029479db7964bcef44d1d57eaa1', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40e6c29251a3a2340e17cef9a14160a82bb55876', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e042a80db9b38bf2ede32b177af88c75e9a333c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d2e59bc54886aa3536df919bb30cf2db7b2843d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec0690940d4756948199e14cd6c9016ac59033d6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82b8daee90bc28afc5a7607a41591a9845d2166d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac535986e2c38ca6843d7f8513be917b46f3667d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e211ca5cba6a21551c2d15500a79e55538efc777', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '457397387916098eca03068ff705401b68d8b3d5', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb6325941bef5193b3daba77a8a01a70727e7b08', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09f468adf4998e1a4c003d016e2e244eda5e652a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd214681d82717604c56a7cf0487295cd095c7c34', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53b2d186fa9be480db0914b7af149f390a5ca7b2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fb9feef25baa55af4a62a4318c8cd12496aa30f', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0da489240407853f9628cdc6898be9998551d82', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99f637090f7db73fadac2beff63f8a36e88730fc', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7b36a98a0cb4136d163ec62a28a7b1164aa0bbb', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f920c5236963a35f3ff8028b5f99cbf59ad63d0', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0d071b7590a25cff5083a7de0ce4570048a0056', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b531b277c9c18ca1ec46489eb28bb6609dfb5508', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b3b0994a7439af3170b3d32dfa8d20e4e554935', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ce552158c5492b9ca0f89c0f5b9d2addfd85ebd', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f25c22c86aeff2f87bd7bace57aa62c42ddea60e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd17e5209d95f0eb75e4194d56edf900cd244466', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71027ce9075330c453cf988e50565314e3dc15bd', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03f05203b70740c1fab6c19535d2eb27253a2fb8', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '464a643e73b767b47f6eb0c16347a77e1f0f3019', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5185a0a885dba2eb10d15720428e04a59e9bfdcd', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4eb23e34a2811be9e980463ec7f60839b0c97535', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4386afe8701fd212b9b2cb7aa4b17fa21cdd140f', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0452ed785a90cb9c7b5c343fe7bb694391a0a515', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98a5b45ac2ac882e3797c469e6db5abe40fa7706', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9988aadbd17c3a05be9836214c75444ea8d2955', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db831aea415c86fa9db1735796db0308f5341e95', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81d963130f9926dda6b12338c0475c6dad6ba051', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de425540c99e277bbac8f61e7ba5c17af337de46', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37d34c5f3107728b53c8d9dc74b955dbe4741e7a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85ebdc4d2de290acd917a1c5e4ee14d304cd0bea', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '396ad547ca869ce8d18281e1966b6001df3f4ac1', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbb9297e4ac710be0557bf41fa9cd903c0e5ab9b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f6bce0537aa837a7e173c62722257e08fa2d9fa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbc75ccc264b5a17d884238ad3fa5b070cd2c762', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '235d23986c3b4de3973061311973e749b5ec375f', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '629ad5ebdbf07a9b9cec744b16ae7e5f6c23adbc', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6eca00f9a520b12a15ef79162a78cae6de248560', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc3a956b8e4e60bc71c4a5f2bc3384e50e9f5180', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cae961b7daa003b2b889067d466d1f92fdf4e6b2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f916fe4246e3e4a0d8bdb7b656737d58e79580a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd59efdcf4f9056e192cf5cb025035fffac2f5c13', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c82bd7db73ae02ad4415cb6e2ed892b6b6d6713a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd42a694ef5ce8e3b136b9c3de45bc91cf5b27a14', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c91ea46860bd09aeca820dc275153e9903068712', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a679859d01e066ebe4abb0f250b179f45271ce34', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03b5447b8d1a7c8a5cbaf8c8f20400b4434832e7', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e17316dfb60b42fdd395804cb32cf7142355f1b9', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49c6873752b51401ea0e57f30e7039646a69efe4', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfce935bdcda7258967ed06af183dbbaa958d79e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '253699997a4cb25c6d8155b442c459d3eed1647c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccb99add789bb58d65dfef60a3a0802c52dcb023', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '990ed1d04bb6db7f3296b1b6be2559d47909355c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5ded5d659d84596080f1d9e55bd8461f135586a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '773fbe17e8d9ba166e4992aebe140f2bc4ab4465', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cac46199dae688b1511939e68091daa9d3620e36', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd442f5c3393c438fcdf7688c408fa7d03d34eb2f', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '018f498a21563ca501d87ce71e525752288d9864', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f23b1bb83c02e85b990776d06cb1f9f7df14b746', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db8b9555d0e8820713f384f87a679b7e90459e1b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2146998ee620d6b33a8f1d671849fb56e36ad217', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42216f4264c7f1859f4771d8b9d01c2abb8ad68d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68ddfeb9108fb0cd05932e450d69aaef61cbb676', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b01fb27c91a161e66ba6178d3f02fcc0fe436c39', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd360b8baeb1bed8fc06e3c3a49e7b9e98cc27d22', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a707c42fdcbcd7ea13b9ae602dc79ffa7c9dfea', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b24ed228be6e1e4588b4239d722bd39af12794aa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '496ef430009ca30f318deeae976ad51b7cfc5219', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31de14a458d7bc23b8ceee687cdfe7bf13d97a06', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66436735bf424d6d1d9ab77952325fb279e88577', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '544acea166660fa854dfc52908b300db9d4addb9', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f0ac822a3b046c84ceef3cd7dd9cad6aab8b971', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9aeff514fff615d4088214a89ceb3c304174c3a6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e43bb5288eb90d37eb3b231b3b9ff05a851f92ee', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0709a10826143e52b6b63291858f208010bf3b5', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0225537485d5e16921dff2a56c7219713748954c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0e77fffaa6ab4b9b31957bda4f8d66ead29ec01', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4752140eef83684aeb7b3a07fd9c2cce1d12aa9', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6c8ebaea3703de02fe1795a5345cda379f671e5', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fca792ecd4bc1da855cf5ea42da220abb1ddc950', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56aecf6ff19bf591ed2ca8972f8c24af3af38e83', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}]",Hasitha Kaushan,41409951,,User,,34,,33,36
1115066416,"(Contributor Recognition Infrastructure) Milestone2.4: Add certificate generation for contributors (including service method, API controller)","## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of n/a.
2. This PR does the following: This PR adds the certificate generation in the contributor dashboard.3. 


This branch is taken from the milestone2.2 branch so there are some optional files changed that is not related to this PR. You can review the below files which are only related to this PR.

```
core/controllers/*
core/domain/suggestion_services*
core/feconf.py
core/storage/suggestion/*
core/templates/pages/contributor-dashboard-page/contributor-stats/contributor-stats.component.spec.ts(Line 186 - 189)
core/templates/pages/contributor-dashboard-page/contributor-stats/contributor-stats.component.ts (Line 372 - 389)
core/templates/pages/contributor-dashboard-page/modal-templates/*
core/templates/pages/contributor-dashboard-page/services/*
main.py
requirements.in
requirements.txt
```


## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [ ] The linter/Karma presubmit checks have passed locally on your machine.
- [ ] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [ ] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->


https://user-images.githubusercontent.com/41409951/206081104-a40c82b4-1312-4142-8f51-d978138a146c.mov




#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
",True,16513,https://api.github.com/repos/oppia/oppia/pulls/16513,https://github.com/oppia/oppia/pull/16513,closed,1819,56,26,156,62,285,1,1,[{'name': 'PR: LGTM'}],2022-11-08 21:39:10+00:00,2023-01-27 16:57:34+00:00,6895104.0,"79 days, 19:18:24","[{'comment_id': 1018243544, 'comment_body': '""Object"" isn\'t very descriptive. Maybe just `from_datetime`', 'comment_created': datetime.datetime(2022, 11, 9, 17, 46, 19, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1018245786, 'comment_body': 'I would move the ""private"" functions below the `generate_contributor_certificate` function and order them in order of usage.', 'comment_created': datetime.datetime(2022, 11, 9, 17, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1018246256, 'comment_body': 'Add new line above.', 'comment_created': datetime.datetime(2022, 11, 9, 17, 49, 9, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1018247111, 'comment_body': 'for which*', 'comment_created': datetime.datetime(2022, 11, 9, 17, 50, 2, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1018247770, 'comment_body': '```suggestion\r\n        suggestion_type: str. The type of suggestion that the certificate\r\n          needs to generate.\r\n```', 'comment_created': datetime.datetime(2022, 11, 9, 17, 50, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1018253335, 'comment_body': 'Add new line above and rename this ""Args"". Ditto below.', 'comment_created': datetime.datetime(2022, 11, 9, 17, 56, 41, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1018253579, 'comment_body': '```suggestion\r\n        Exception. Image generation failed.\r\n```', 'comment_created': datetime.datetime(2022, 11, 9, 17, 56, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1018254422, 'comment_body': 'Since this is specific to the contributor certificate, I would rename this.\r\n```suggestion\r\ndef _generate_contributor_certificate_image(template: str) -> str:\r\n```', 'comment_created': datetime.datetime(2022, 11, 9, 17, 57, 47, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1018256795, 'comment_body': 'Move this to the generate image function.', 'comment_created': datetime.datetime(2022, 11, 9, 18, 0, 23, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1018267029, 'comment_body': '```suggestion\r\n    image_paths = hti.screenshot(\r\n```', 'comment_created': datetime.datetime(2022, 11, 9, 18, 11, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1018278197, 'comment_body': '```suggestion\r\n        Exception. The language is invalid.\r\n```', 'comment_created': datetime.datetime(2022, 11, 9, 18, 23, 49, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1018278447, 'comment_body': '```suggestion\r\n        Exception: The suggestion type is invalid.\r\n```', 'comment_created': datetime.datetime(2022, 11, 9, 18, 24, 4, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1019423930, 'comment_body': ""```suggestion\r\n        raise Exception('The provided language is invalid.')\r\n```"", 'comment_created': datetime.datetime(2022, 11, 10, 17, 26, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1019424238, 'comment_body': '```suggestion\r\n    all_suggestions = (\r\n```', 'comment_created': datetime.datetime(2022, 11, 10, 17, 27, 2, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1019430205, 'comment_body': 'Why not just have 1 method that returns the suggestions in between the from and to dates?', 'comment_created': datetime.datetime(2022, 11, 10, 17, 33, 6, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1019431651, 'comment_body': 'Why not allow passing in both the from and to dates and filter for in between?', 'comment_created': datetime.datetime(2022, 11, 10, 17, 34, 35, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1019446166, 'comment_body': '```suggestion\r\n        Exception: The given suggestion type is invalid.\r\n```', 'comment_created': datetime.datetime(2022, 11, 10, 17, 50, 25, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1019454863, 'comment_body': ""This name doesn't seem to match the test."", 'comment_created': datetime.datetime(2022, 11, 10, 17, 59, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1019455781, 'comment_body': 'Typo.', 'comment_created': datetime.datetime(2022, 11, 10, 18, 0, 45, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1019459036, 'comment_body': '```suggestion\r\n    private contributionAndReviewService: ContributionAndReviewService) {\r\n```', 'comment_created': datetime.datetime(2022, 11, 10, 18, 4, 25, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1019459650, 'comment_body': 'Is it possible for this to not be true if we return above?', 'comment_created': datetime.datetime(2022, 11, 10, 18, 5, 11, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1019460761, 'comment_body': 'Remember to prefer `const` over `let` if the variables are not being reassigned.', 'comment_created': datetime.datetime(2022, 11, 10, 18, 6, 32, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1019461655, 'comment_body': ""```suggestion\r\n  it('should show error for invalid time ranges', () => {\r\n```"", 'comment_created': datetime.datetime(2022, 11, 10, 18, 7, 32, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1019462030, 'comment_body': ""```suggestion\r\n  it('should show error when contributions not found', fakeAsync(() => {\r\n```"", 'comment_created': datetime.datetime(2022, 11, 10, 18, 7, 59, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026216421, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 9, 38, 6, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026253003, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 10, 12, 31, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026254748, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 10, 14, 26, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026255182, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 10, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026256752, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 10, 16, 39, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026257196, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 10, 17, 8, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026257684, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 10, 17, 40, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026258847, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 10, 19, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026259332, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 10, 19, 33, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026259933, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 10, 20, 14, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026262929, 'comment_body': 'Since it is not thrown from this function, it is removed.', 'comment_created': datetime.datetime(2022, 11, 18, 10, 23, 40, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026263309, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 10, 24, 6, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026263719, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 10, 24, 37, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026264066, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 10, 24, 57, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026265082, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 10, 25, 58, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026429416, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 13, 21, 12, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026430127, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 13, 21, 59, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026434550, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 13, 26, 14, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026435231, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 13, 27, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026435772, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 13, 27, 34, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026436383, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 13, 28, 15, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026437084, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 13, 29, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026479084, 'comment_body': 'No, so removed this check', 'comment_created': datetime.datetime(2022, 11, 18, 14, 11, 20, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026480294, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 18, 14, 12, 33, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1026922997, 'comment_body': '```suggestion\r\n    """"""Generates a certificate for user contributions.\r\n```', 'comment_created': datetime.datetime(2022, 11, 18, 21, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026923102, 'comment_body': '```suggestion\r\n        language_code: str|None. The language for which the contributions should be\r\n```', 'comment_created': datetime.datetime(2022, 11, 18, 21, 52, 29, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026923349, 'comment_body': ""This doesn't seem done?"", 'comment_created': datetime.datetime(2022, 11, 18, 21, 52, 52, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026923879, 'comment_body': 'See https://github.com/oppia/oppia/pull/16513#discussion_r1018247770', 'comment_created': datetime.datetime(2022, 11, 18, 21, 53, 51, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026924917, 'comment_body': '""The start of the date range for which the contributions were created.""', 'comment_created': datetime.datetime(2022, 11, 18, 21, 55, 48, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026924972, 'comment_body': '""The end of the date range for which the contributions were created.""', 'comment_created': datetime.datetime(2022, 11, 18, 21, 55, 57, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026925307, 'comment_body': '```suggestion\r\n    """"""Generates a certificate for a user\'s translation contributions.\r\n```', 'comment_created': datetime.datetime(2022, 11, 18, 21, 56, 35, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026925594, 'comment_body': 'Remove.', 'comment_created': datetime.datetime(2022, 11, 18, 21, 56, 59, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026926891, 'comment_body': 'Are you able to call `filter()` on `constants.SUPPORTED_AUDIO_LANGUAGES` directly? https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter ', 'comment_created': datetime.datetime(2022, 11, 18, 21, 59, 25, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026933528, 'comment_body': '```suggestion\r\n    """"""Generates a certificate for a user\'s question contributions.\r\n```', 'comment_created': datetime.datetime(2022, 11, 18, 22, 11, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026933806, 'comment_body': 'Typo.', 'comment_created': datetime.datetime(2022, 11, 18, 22, 11, 27, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026933965, 'comment_body': 'Can you link the doc in a comment where this formula was derived?', 'comment_created': datetime.datetime(2022, 11, 18, 22, 11, 49, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026934864, 'comment_body': 'Should this be <= and >=? I would expect the certificate to capture contributions on the start and end date as well.', 'comment_created': datetime.datetime(2022, 11, 18, 22, 13, 38, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026934976, 'comment_body': 'Update name to reflect range.', 'comment_created': datetime.datetime(2022, 11, 18, 22, 13, 52, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026935112, 'comment_body': 'Seems truncated.', 'comment_created': datetime.datetime(2022, 11, 18, 22, 14, 9, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026935347, 'comment_body': 'Reorder so from_date comes before to_date.', 'comment_created': datetime.datetime(2022, 11, 18, 22, 14, 41, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026935687, 'comment_body': 'Update test names to reflect range as well. Ditto below.', 'comment_created': datetime.datetime(2022, 11, 18, 22, 15, 17, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1026938735, 'comment_body': ""Should this error message be something more like 'Not able to download contributor certificate'? "", 'comment_created': datetime.datetime(2022, 11, 18, 22, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1027081694, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 19, 12, 4, 7, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027081751, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 19, 12, 4, 51, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027081927, 'comment_body': 'Sorry, done now.', 'comment_created': datetime.datetime(2022, 11, 19, 12, 6, 58, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027082134, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 19, 12, 9, 10, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027082140, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 19, 12, 9, 15, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027101977, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 19, 14, 53, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027102023, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 19, 14, 53, 45, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027105335, 'comment_body': 'Tried to python version of filter in order to filter the language from the json object https://stackoverflow.com/questions/51179236/what-is-the-python-equivalent-of-javascripts-array-prototype-find', 'comment_created': datetime.datetime(2022, 11, 19, 15, 23, 59, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027105414, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 19, 15, 24, 32, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027105590, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 19, 15, 25, 54, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027105770, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 19, 15, 27, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027105826, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 19, 15, 27, 50, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027105988, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 19, 15, 29, 22, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027106328, 'comment_body': 'Not needed, removed.', 'comment_created': datetime.datetime(2022, 11, 19, 15, 32, 9, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027106422, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 19, 15, 33, 2, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027106566, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 19, 15, 34, 12, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027109026, 'comment_body': 'https://docs.google.com/spreadsheets/d/1ykSNwPLZ5qTCkuO21VLdtm_2SjJ5QJ0z0PlVjjSB4ZQ/edit?usp=sharing', 'comment_created': datetime.datetime(2022, 11, 19, 15, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027145355, 'comment_body': 'Not done?', 'comment_created': datetime.datetime(2022, 11, 19, 21, 26, 7, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1027145362, 'comment_body': 'Not done?', 'comment_created': datetime.datetime(2022, 11, 19, 21, 26, 14, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1027145535, 'comment_body': ""Since we expect there to be only one language, let's just try to get a single result: https://stackoverflow.com/a/29563313."", 'comment_created': datetime.datetime(2022, 11, 19, 21, 27, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1027145869, 'comment_body': 'I meant link the doc in a comment in the code, so that future readers understand how this formula was derived and what it means. Also, do you have any supporting documentation with the reasoning?', 'comment_created': datetime.datetime(2022, 11, 19, 21, 32, 1, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1027145922, 'comment_body': 'Can you link a doc that explains where this formula comes from in a code comment?', 'comment_created': datetime.datetime(2022, 11, 19, 21, 32, 41, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1027145966, 'comment_body': 'Update description.', 'comment_created': datetime.datetime(2022, 11, 19, 21, 33, 16, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1027146064, 'comment_body': '```suggestion\r\n            from_date: Date. The date that suggestions are submitted on or after.\r\n```\r\n\r\nDitto below.', 'comment_created': datetime.datetime(2022, 11, 19, 21, 34, 10, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1027146081, 'comment_body': '```suggestion\r\n            to_date: Date. The date that suggestions are submitted on or before.\r\n```', 'comment_created': datetime.datetime(2022, 11, 19, 21, 34, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1027146372, 'comment_body': 'Add new line above.', 'comment_created': datetime.datetime(2022, 11, 19, 21, 35, 47, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1027146593, 'comment_body': ""`binaryData` doesn't seem necessary—I would just inline it in the `Blob` constructor below."", 'comment_created': datetime.datetime(2022, 11, 19, 21, 38, 59, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1027248585, 'comment_body': 'Sorry done', 'comment_created': datetime.datetime(2022, 11, 20, 8, 38, 19, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027248670, 'comment_body': 'Sorry done', 'comment_created': datetime.datetime(2022, 11, 20, 8, 38, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027284022, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 20, 12, 47, 5, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027284700, 'comment_body': 'DOne', 'comment_created': datetime.datetime(2022, 11, 20, 12, 50, 28, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027285331, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 20, 12, 55, 29, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027285542, 'comment_body': 'It was based on the email thread that recieved feedback from question and translation teams. I linked the excel sheet here as well. Included an explanation in the excel sheet.', 'comment_created': datetime.datetime(2022, 11, 20, 12, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027285669, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 20, 12, 57, 22, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027285783, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 20, 12, 58, 12, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027285890, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 20, 12, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027286050, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 20, 13, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027286175, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 20, 13, 1, 7, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1027332608, 'comment_body': '```suggestion\r\n    if language is None:\r\n```', 'comment_created': datetime.datetime(2022, 11, 20, 18, 25, 2, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1027332925, 'comment_body': '```suggestion\r\n      this.toDate\r\n    ).then((response: Blob) => {\r\n      const dataType = response.type;\r\n```\r\n\r\nSeems more readable if the linter allows it.', 'comment_created': datetime.datetime(2022, 11, 20, 18, 27, 36, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1027344833, 'comment_body': 'Add more rules to these, please look at other files for things that you can validate.', 'comment_created': datetime.datetime(2022, 11, 20, 20, 1, 57, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027345281, 'comment_body': 'Is it possible to save the image into an IO object (like `BytesIO`) and not into the filesystem? ', 'comment_created': datetime.datetime(2022, 11, 20, 20, 4, 57, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027345383, 'comment_body': 'Import these from `typing`', 'comment_created': datetime.datetime(2022, 11, 20, 20, 5, 39, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027345664, 'comment_body': 'I was looking into this library and find out that it uses a browser in headless mode behind the scenes, I think we will need to test whether this PR works on the backup server.', 'comment_created': datetime.datetime(2022, 11, 20, 20, 7, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027345894, 'comment_body': 'Ideally, this would be handled without saving the image into the file system.', 'comment_created': datetime.datetime(2022, 11, 20, 20, 9, 19, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027383800, 'comment_body': 'Can you point to the sheet directly?', 'comment_created': datetime.datetime(2022, 11, 21, 0, 29, 59, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027384150, 'comment_body': 'Can the formatting of this be improved for a better readability? Now this is just a blob of text where we also have some custom parts.', 'comment_created': datetime.datetime(2022, 11, 21, 0, 32, 2, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027384409, 'comment_body': 'ditto as above', 'comment_created': datetime.datetime(2022, 11, 21, 0, 33, 26, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027384858, 'comment_body': 'ditto as above, this is hard to read', 'comment_created': datetime.datetime(2022, 11, 21, 0, 35, 33, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027384993, 'comment_body': 'Should this be put into a constant?', 'comment_created': datetime.datetime(2022, 11, 21, 0, 36, 21, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027385063, 'comment_body': 'Why is this changed?', 'comment_created': datetime.datetime(2022, 11, 21, 0, 36, 50, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027385321, 'comment_body': '```suggestion\r\n    def get_translation_suggestions_submitted_within_given_dates(\r\n        cls, \r\n        from_date: datetime.datetime, \r\n        to_date: datetime.datetime,\r\n        user_id: str, language_code: str\r\n    ) -> Sequence[GeneralSuggestionModel]:\r\n```', 'comment_created': datetime.datetime(2022, 11, 21, 0, 38, 18, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027385405, 'comment_body': '```suggestion\r\n    def get_question_suggestions_submitted_within_given_dates(\r\n        cls, \r\n        from_date: datetime.datetime, \r\n        to_date: datetime.datetime,\r\n        user_id: str\r\n    ) -> Sequence[GeneralSuggestionModel]:\r\n```', 'comment_created': datetime.datetime(2022, 11, 21, 0, 38, 43, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027385623, 'comment_body': '```suggestion\r\n    def test_get_translation_suggestions_submitted_for_given_date_range(\r\n        self\r\n    ) -> None:\r\n```\r\nditto elsewhere', 'comment_created': datetime.datetime(2022, 11, 21, 0, 39, 43, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027386223, 'comment_body': 'Why is this in the bottom section?', 'comment_created': datetime.datetime(2022, 11, 21, 0, 42, 22, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027386405, 'comment_body': '```suggestion\r\n  async downloadContributorCertificateAsync(\r\n      username: string, \r\n      suggestionType: string,\r\n      languageCode: string, \r\n      fromDate: string,\r\n      toDate: string\r\n  ): Promise<Blob> {\r\n```', 'comment_created': datetime.datetime(2022, 11, 21, 0, 43, 23, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027386788, 'comment_body': '```suggestion\r\n  async downloadContributorCertificateAsync(\r\n      username: string, \r\n      suggestionType: string,\r\n      languageCode: string, \r\n      fromDate: string,\r\n      toDate: string\r\n  ): Promise<Blob> {\r\n```', 'comment_created': datetime.datetime(2022, 11, 21, 0, 45, 27, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027387121, 'comment_body': '```suggestion\r\n  .oppia-translate-text-header-container .oppia-opportunities-heading {\r\n    display: block;\r\n    font-size: 20px;\r\n  }\r\n  .oppia-translate-text-header-container .oppia-mobile-opportunities-heading {\r\n    display: none;\r\n  }\r\n```', 'comment_created': datetime.datetime(2022, 11, 21, 0, 47, 1, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027387248, 'comment_body': '```suggestion\r\n  <button [disabled]=""certificateDownloading"" \r\n          class=""btn btn-success oppia-upload-translated-text-button"" \r\n          (click)=""downloadCertificate()"">\r\n```', 'comment_created': datetime.datetime(2022, 11, 21, 0, 47, 31, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027387389, 'comment_body': '```suggestion\r\n      <button type=""button"" \r\n              class=""close oppia-close-button-position"" \r\n              (click)=""close()"" \r\n              attr.aria-label=""Close"">\r\n```', 'comment_created': datetime.datetime(2022, 11, 21, 0, 48, 4, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027388045, 'comment_body': '```suggestion\r\n  createTranslationContributionStat(\r\n      stat: TranslationContributionBackendDict\r\n  ): TranslationContributionStats {\r\n```\r\n', 'comment_created': datetime.datetime(2022, 11, 21, 0, 51, 13, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027388086, 'comment_body': 'ditto below', 'comment_created': datetime.datetime(2022, 11, 21, 0, 51, 25, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027388281, 'comment_body': ""```suggestion\r\n    if (page.currentPageStartIndex === 0) {\r\n      throw new Error('There are no more pages before this one.');\r\n    }\r\n```"", 'comment_created': datetime.datetime(2022, 11, 21, 0, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027388430, 'comment_body': 'Why is `languageCode` optional?', 'comment_created': datetime.datetime(2022, 11, 21, 0, 52, 44, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027388481, 'comment_body': 'Is it possible to not introduce this TODO?', 'comment_created': datetime.datetime(2022, 11, 21, 0, 53, 3, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027388607, 'comment_body': '```suggestion\r\n      <div class=""oppia-stats-type-selector-inner-container e2e-test-topic-selector-selected"" \r\n           (click)=""toggleMobileDropdown()"">\r\n```', 'comment_created': datetime.datetime(2022, 11, 21, 0, 53, 48, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027388768, 'comment_body': '```suggestion\r\n        <span class=""fas fa-sort-down oppia-contributions-dropdown-arrow"" \r\n              [ngStyle]=""{ \'transform\': mobileDropdownShown ? \'scaleY(-1)\' : \'scaleY(1)\' }"">\r\n```', 'comment_created': datetime.datetime(2022, 11, 21, 0, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027388850, 'comment_body': '```suggestion\r\n      <div *ngIf=""mobileDropdownShown"" \r\n           class=""oppia-stats-type-selector-dropdown-container e2e-test-topic-selector-dropdown"">\r\n```', 'comment_created': datetime.datetime(2022, 11, 21, 0, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027389066, 'comment_body': 'ditto below', 'comment_created': datetime.datetime(2022, 11, 21, 0, 55, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027389372, 'comment_body': ""```suggestion\r\n        score_category: str = '%s%sEnglish' % (\r\n            suggestion_models.SCORE_TYPE_TRANSLATION +\r\n            suggestion_models.SCORE_CATEGORY_DELIMITER\r\n        )\r\n```"", 'comment_created': datetime.datetime(2022, 11, 21, 0, 57, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027389547, 'comment_body': '```suggestion\r\n    def test_create_contributor_certificate_raises_exception_for_wrong_language(\r\n        self\r\n    ) -> None:\r\n```\r\nditto below', 'comment_created': datetime.datetime(2022, 11, 21, 0, 57, 45, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1027389791, 'comment_body': ""```suggestion\r\n        with self.assertRaisesRegex(\r\n            Exception,\r\n            'The language that is provided is invalid.'\r\n        ):\r\n```"", 'comment_created': datetime.datetime(2022, 11, 21, 0, 59, 12, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032091943, 'comment_body': ""Added a validation for  `suggestion_type` and validations for others are pretty much limited.\r\n\r\nusername: just the string type\r\nlanguage: we can not validate because for question contributor's certificate generation this is not needed.\r\nfrom_date, to_date: string of date"", 'comment_created': datetime.datetime(2022, 11, 25, 7, 55, 39, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032095838, 'comment_body': 'Hmm. It would be not possible with the library, because it creates a file. What I have done here is got the buffer of bytes and removed the original file from the file system, before sending the response.', 'comment_created': datetime.datetime(2022, 11, 25, 8, 1, 11, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032098205, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 25, 8, 4, 44, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032098450, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 25, 8, 5, 9, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032099158, 'comment_body': ""It's url length is more than 80 chars that's why I put the link of the PR comment."", 'comment_created': datetime.datetime(2022, 11, 25, 8, 6, 9, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032134837, 'comment_body': 'Will file a testing request', 'comment_created': datetime.datetime(2022, 11, 25, 8, 51, 18, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032137875, 'comment_body': 'DONE', 'comment_created': datetime.datetime(2022, 11, 25, 8, 54, 49, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032139115, 'comment_body': 'It is not possible. It creates a file from the library. What I do is after creating the file, I convert it `BytesIO` and then remove the file from the file system.', 'comment_created': datetime.datetime(2022, 11, 25, 8, 56, 14, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032139748, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 25, 8, 56, 57, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032140092, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 25, 8, 57, 18, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032140493, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 25, 8, 57, 46, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032141402, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 25, 8, 58, 47, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032141767, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 25, 8, 59, 10, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032153777, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 25, 9, 13, 2, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032154883, 'comment_body': ""For question submitters' certificates, language code is not needed."", 'comment_created': datetime.datetime(2022, 11, 25, 9, 14, 20, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032159385, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 25, 9, 19, 23, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032159811, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 25, 9, 19, 51, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032160190, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 25, 9, 20, 20, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032160713, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 25, 9, 20, 54, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032161614, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 25, 9, 21, 53, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032162354, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 25, 9, 22, 43, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032164849, 'comment_body': 'Chnaged', 'comment_created': datetime.datetime(2022, 11, 25, 9, 25, 28, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032276328, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 25, 10, 51, 17, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032276615, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 25, 10, 51, 35, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032276793, 'comment_body': 'Explained above', 'comment_created': datetime.datetime(2022, 11, 25, 10, 51, 48, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032596978, 'comment_body': 'username: you can validate max length\r\nlang: you can still validate the format but also allow None (default_value: None)\r\ndates: you can validate the format of the date', 'comment_created': datetime.datetime(2022, 11, 25, 16, 41, 16, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032597933, 'comment_body': 'Hmm, okay this is not ideal can you at least add a TODO to investigate this later.', 'comment_created': datetime.datetime(2022, 11, 25, 16, 42, 58, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032598453, 'comment_body': 'Add a TODO for later investigation\r\n', 'comment_created': datetime.datetime(2022, 11, 25, 16, 43, 59, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032599943, 'comment_body': 'Ok', 'comment_created': datetime.datetime(2022, 11, 25, 16, 46, 58, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032600864, 'comment_body': ""```suggestion\r\n                buf, 'certificate.png', 'image/png')\r\n```"", 'comment_created': datetime.datetime(2022, 11, 25, 16, 48, 44, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032603109, 'comment_body': 'Lets use format string and move this into some constant.', 'comment_created': datetime.datetime(2022, 11, 25, 16, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032615268, 'comment_body': 'ditto as above\r\n', 'comment_created': datetime.datetime(2022, 11, 25, 17, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032630564, 'comment_body': 'Not addressed.', 'comment_created': datetime.datetime(2022, 11, 25, 17, 55, 22, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032630654, 'comment_body': 'Then pass null explicitely', 'comment_created': datetime.datetime(2022, 11, 25, 17, 55, 35, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032630835, 'comment_body': '```suggestion\r\n      <div class=""certificate-download-button-container"" \r\n           *ngIf=""type == \'questionContribution\'"">\r\n        <button class=""btn btn-success certificate-download-button"" \r\n                (click)=""openCertificateDownloadModal(\'add_question\', \'-\')"">\r\n```', 'comment_created': datetime.datetime(2022, 11, 25, 17, 56, 10, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032630997, 'comment_body': '```suggestion\r\n      <div class=""certificate-download-button-container"" \r\n           *ngIf=""type == \'translationContribution\'"">\r\n        <button class=""btn btn-success certificate-download-button"" \r\n                (click)=""openCertificateDownloadModal(\'translate_content\', translationStatByLanguageAndTopic.key)"">\r\n```', 'comment_created': datetime.datetime(2022, 11, 25, 17, 56, 37, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032631118, 'comment_body': '```suggestion\r\n    def test_get_question_suggestions_submitted_for_given_date_range(\r\n        self\r\n    ) -> None:\r\n```', 'comment_created': datetime.datetime(2022, 11, 25, 17, 56, 59, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032631276, 'comment_body': ""```suggestion\r\n        with self.assertRaisesRegex(\r\n            Exception,\r\n            'Invalid contribution type to generate the certificate.'\r\n        ):\r\n```"", 'comment_created': datetime.datetime(2022, 11, 25, 17, 57, 23, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032631437, 'comment_body': ""```suggestion\r\n            suggestion_services.generate_contributor_certificate(\r\n                username, \r\n                feconf.SUGGESTION_TYPE_EDIT_STATE_CONTENT,\r\n                'test',\r\n                from_date, \r\n                to_date\r\n            )\r\n```"", 'comment_created': datetime.datetime(2022, 11, 25, 17, 57, 45, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032631484, 'comment_body': 'ditto elsewhere', 'comment_created': datetime.datetime(2022, 11, 25, 17, 57, 52, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032631557, 'comment_body': 'ditto elsewhere', 'comment_created': datetime.datetime(2022, 11, 25, 17, 58, 2, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032767770, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 26, 10, 15, 56, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032773555, 'comment_body': 'DONE', 'comment_created': datetime.datetime(2022, 11, 26, 11, 11, 58, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032773591, 'comment_body': 'DONE', 'comment_created': datetime.datetime(2022, 11, 26, 11, 12, 22, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032773661, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 26, 11, 13, 15, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032773952, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 26, 11, 16, 9, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032774112, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 26, 11, 17, 54, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032774389, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 26, 11, 20, 24, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032774628, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 26, 11, 23, 18, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032775430, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 26, 11, 30, 40, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032775686, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 26, 11, 33, 11, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032811527, 'comment_body': '`BaseHandler` needs to be parametrized\r\n\r\ncc @sahiljoster32 Can we somehow enforce this?', 'comment_created': datetime.datetime(2022, 11, 26, 17, 8, 44, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032811557, 'comment_body': '```suggestion\r\n\r\n        # TODO(#16632): Certificate file should not be saved into the file\r\n        # system.\r\n```', 'comment_created': datetime.datetime(2022, 11, 26, 17, 8, 58, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032811879, 'comment_body': 'not done', 'comment_created': datetime.datetime(2022, 11, 26, 17, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032811993, 'comment_body': 'Still missing validations.', 'comment_created': datetime.datetime(2022, 11, 26, 17, 12, 20, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032812121, 'comment_body': ""Can\r\n```suggestion\r\n    certificate_template = feconf.TRANSLATION_SUBMITTER_CERTIFICATE.format(\r\n        logo_path,\r\n        username,\r\n        language_description,\r\n        language_description,\r\n        username,\r\n        str(hours_contributed),\r\n        from_date.strftime('%d %b %Y'),\r\n        to_date.strftime('%d %b %Y'),\r\n        signature,\r\n        date\r\n    )\r\n```\r\n\r\nAlso can you use named arguments?"", 'comment_created': datetime.datetime(2022, 11, 26, 17, 13, 59, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032812168, 'comment_body': '```suggestion\r\n    suggestions = suggestion_models.GeneralSuggestionModel\r\n        .get_translation_suggestions_submitted_within_given_dates(\r\n              from_date,\r\n              to_date_to_fetch_contributions,\r\n              user_id,\r\n              language_code\r\n        )\r\n```', 'comment_created': datetime.datetime(2022, 11, 26, 17, 14, 38, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032812266, 'comment_body': ""```suggestion\r\n    def test_create_contributor_certificate_raises_exception_for_wrong_type(\r\n        self\r\n    ) -> None:\r\n```\r\n\r\nditto elsewhere\r\n\r\nI've already mentioned it in this PR multiple times."", 'comment_created': datetime.datetime(2022, 11, 26, 17, 16, 18, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032812330, 'comment_body': '```suggestion\r\n                      We confirm that {} has contributed \r\n```', 'comment_created': datetime.datetime(2022, 11, 26, 17, 16, 56, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032812424, 'comment_body': 'Why `statsData?`?', 'comment_created': datetime.datetime(2022, 11, 26, 17, 17, 40, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032812432, 'comment_body': '```suggestion\r\n  openCertificateDownloadModal(\r\n      suggestionType: string, languageCode: string | null\r\n  ): void {\r\n```', 'comment_created': datetime.datetime(2022, 11, 26, 17, 17, 49, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1032818881, 'comment_body': '> cc @sahiljoster32 Can we somehow enforce this?\r\n\r\nThis is already enforced, without this MyPy checks will not pass. -- [LINK](https://github.com/oppia/oppia/actions/runs/3554331008/jobs/5970359568#step:7:126)', 'comment_created': datetime.datetime(2022, 11, 26, 18, 27, 20, tzinfo=datetime.timezone.utc), 'commenter': 'sahiljoster32', 'type': 'User'}, {'comment_id': 1032876467, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 27, 6, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032876515, 'comment_body': 'Added', 'comment_created': datetime.datetime(2022, 11, 27, 6, 48, 47, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032876521, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 27, 6, 48, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032877168, 'comment_body': ""It doesn't let me to use this suggestion. \r\n![image](https://user-images.githubusercontent.com/41409951/204123170-b11b7f59-106d-46eb-ba4c-17c5ddafdfbd.png)\r\n\r\nI think we need to include the following part inside brackets.\r\n```\r\nsuggestion_models.GeneralSuggestionModel\r\n        .get_translation_suggestions_submitted_within_given_dates(\r\n              from_date,\r\n              to_date_to_fetch_contributions,\r\n              user_id,\r\n              language_code\r\n        )\r\n```\r\n"", 'comment_created': datetime.datetime(2022, 11, 27, 6, 55, 46, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032877338, 'comment_body': ""Done, Tried using named args but was not possible and got JSON parse errors due the usage of '%' character in the html template."", 'comment_created': datetime.datetime(2022, 11, 27, 6, 57, 25, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032877499, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 27, 6, 59, 12, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032877590, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 27, 7, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032878217, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2022, 11, 27, 7, 6, 9, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1032878321, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 27, 7, 7, 8, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1033226866, 'comment_body': 'Added some validations', 'comment_created': datetime.datetime(2022, 11, 28, 8, 6, 22, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1033229472, 'comment_body': 'No more there in the PR', 'comment_created': datetime.datetime(2022, 11, 28, 8, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1033273336, 'comment_body': 'Added one TODO for both cases you mentioned.', 'comment_created': datetime.datetime(2022, 11, 28, 8, 57, 52, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1033273480, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 28, 8, 58, 1, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1033274014, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 28, 8, 58, 31, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1033274070, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 28, 8, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1033274151, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 28, 8, 58, 40, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1033274247, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 28, 8, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1033274318, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 11, 28, 8, 58, 49, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1033562049, 'comment_body': 'We will need to use diffent library right, so this does not matter anymore?', 'comment_created': datetime.datetime(2022, 11, 28, 13, 46, 43, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1041746757, 'comment_body': 'I think you should change this function\'s name to something like ""generate certificate data"" and define a domain object for the return value that gets changed using to_dict() in the controller to pass to the frontend.\r\n\r\nThat\'s because what\'s being returned here is not a certificate, but the data for a certificate. Make sure that the whole thing is conceptually correct.', 'comment_created': datetime.datetime(2022, 12, 7, 4, 34, 4, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1045347139, 'comment_body': 'Done\r\n\r\n![certificate (28)](https://user-images.githubusercontent.com/41409951/206944500-d1b48276-a139-49bd-b2f6-7771d3665ddf.jpeg)\r\n![certificate (29)](https://user-images.githubusercontent.com/41409951/206944515-ee6bcb59-473f-46b0-9f8b-2baf36c5efbd.jpeg)\r\n', 'comment_created': datetime.datetime(2022, 12, 12, 1, 55, 26, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1045508975, 'comment_body': ""Don't do this -- can you drop this line? Shouldn't set it to something invalid."", 'comment_created': datetime.datetime(2022, 12, 12, 8, 10, 53, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1058779662, 'comment_body': 'Done\r\n![certificate (32)](https://user-images.githubusercontent.com/41409951/209917361-f0d16ddd-3e0c-4155-993c-8b8e704b3090.jpeg)\r\n![certificate (33)](https://user-images.githubusercontent.com/41409951/209917371-756454eb-36ef-447e-938e-e06de6defeee.jpeg)\r\n', 'comment_created': datetime.datetime(2022, 12, 29, 7, 21, 32, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1059758783, 'comment_body': ""```suggestion\r\n        cars.downloadContributorCertificateAsync(\r\n          'user', 'translate_content', 'hi', '2022-01-01', '2022-01-02'\r\n        ).then((response) => {\r\n```"", 'comment_created': datetime.datetime(2023, 1, 1, 14, 24, 54, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059758848, 'comment_body': '```suggestion\r\n      url, { params }\r\n```', 'comment_created': datetime.datetime(2023, 1, 1, 14, 25, 26, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059758923, 'comment_body': ""```suggestion\r\n    carbas.downloadContributorCertificateAsync(\r\n      'user', 'translate_content', 'hi', '2022-01-01', '2022-01-02'\r\n    ).then(successHandler, failureHandler);\r\n```"", 'comment_created': datetime.datetime(2023, 1, 1, 14, 25, 56, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059758961, 'comment_body': ""```suggestion\r\n    const url = (\r\n      '/contributorcertificate/user/translate_content?'\r\n      'from_date=2022-01-01&to_date=2022-01-02&language=hi'\r\n    );\r\n```"", 'comment_created': datetime.datetime(2023, 1, 1, 14, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059759297, 'comment_body': 'Can you use loop here?', 'comment_created': datetime.datetime(2023, 1, 1, 14, 29, 6, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059759483, 'comment_body': 'Comments like this seem a bit redundant. Are they needed?', 'comment_created': datetime.datetime(2023, 1, 1, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059759579, 'comment_body': 'Ditto in the functions above.', 'comment_created': datetime.datetime(2023, 1, 1, 14, 31, 54, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059759990, 'comment_body': ""```suggestion\r\n            Exception, 'The suggestion type is invalid.'\r\n```"", 'comment_created': datetime.datetime(2023, 1, 1, 14, 35, 6, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059760006, 'comment_body': ""```suggestion\r\n            Exception, 'There is no user for the given username.'\r\n```"", 'comment_created': datetime.datetime(2023, 1, 1, 14, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059760014, 'comment_body': ""```suggestion\r\n            Exception, 'The provided language is invalid.'\r\n```"", 'comment_created': datetime.datetime(2023, 1, 1, 14, 35, 24, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059760083, 'comment_body': ""```suggestion\r\n        question_state_data = test_question_dict['question_state_data']\r\n```"", 'comment_created': datetime.datetime(2023, 1, 1, 14, 35, 55, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059760129, 'comment_body': ""```suggestion\r\n        question_state_data['content']['html'] = (\r\n          '<oppia-noninteractive-image></oppia-noninteractive-image>')\r\n```"", 'comment_created': datetime.datetime(2023, 1, 1, 14, 36, 21, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059760171, 'comment_body': 'Can you define these in `setUp`?', 'comment_created': datetime.datetime(2023, 1, 1, 14, 36, 45, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059760191, 'comment_body': 'And use them everywhere?', 'comment_created': datetime.datetime(2023, 1, 1, 14, 37, 2, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059760219, 'comment_body': 'ditto above', 'comment_created': datetime.datetime(2023, 1, 1, 14, 37, 22, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059760224, 'comment_body': 'ditto above', 'comment_created': datetime.datetime(2023, 1, 1, 14, 37, 25, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059760591, 'comment_body': 'Wait why do we allow `None` to be passed as `language_code` when we know that it will fail?', 'comment_created': datetime.datetime(2023, 1, 1, 14, 40, 41, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059760661, 'comment_body': 'I think it would be better to handle this outside this function.', 'comment_created': datetime.datetime(2023, 1, 1, 14, 41, 16, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059760749, 'comment_body': ""```suggestion\r\n    if ' (' in language_description:\r\n```"", 'comment_created': datetime.datetime(2023, 1, 1, 14, 41, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059760987, 'comment_body': ""Can you use a different link? I don't see a comment when using the one that you used. Also you can link the sheet directly, we allow more than 80 chars for links."", 'comment_created': datetime.datetime(2023, 1, 1, 14, 44, 22, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059761087, 'comment_body': 'Ditto as above the link is not working for me. Also should this comment be put above line 3149?', 'comment_created': datetime.datetime(2023, 1, 1, 14, 45, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059761381, 'comment_body': '```suggestion\r\n        self, username: str, suggestion_type: str\r\n```', 'comment_created': datetime.datetime(2023, 1, 1, 14, 47, 40, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1059761471, 'comment_body': 'Why is this needed?', 'comment_created': datetime.datetime(2023, 1, 1, 14, 48, 18, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1071333417, 'comment_body': 'If the `suggestion_type` is not `feconf.SUGGESTION_TYPE_TRANSLATE_CONTENT`, there will not be a parameter with `language`.', 'comment_created': datetime.datetime(2023, 1, 16, 14, 54, 53, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1071333520, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 1, 16, 14, 54, 59, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1071333699, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 1, 16, 14, 55, 9, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1071333829, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 1, 16, 14, 55, 17, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1071333911, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 1, 16, 14, 55, 22, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1071334039, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 1, 16, 14, 55, 28, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1071334115, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 1, 16, 14, 55, 33, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1071334184, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 1, 16, 14, 55, 37, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1071334259, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 1, 16, 14, 55, 41, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1071334353, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 1, 16, 14, 55, 45, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1071334405, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2023, 1, 16, 14, 55, 50, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1071334454, 'comment_body': 'I removed `fillTranslationSubmitterCertificateContent` `fillQuestionSubmitterCertificateContent` functions and made one single function to fill the dynamic content. But rest of the parts can not be done through a loop because various parts have different configurations of the canvas.', 'comment_created': datetime.datetime(2023, 1, 16, 14, 55, 53, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1071334568, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 1, 16, 14, 55, 59, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1071334622, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 1, 16, 14, 56, 2, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1071334678, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 1, 16, 14, 56, 5, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1071334719, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 1, 16, 14, 56, 8, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1072524197, 'comment_body': ""I don't understand this line."", 'comment_created': datetime.datetime(2023, 1, 17, 17, 26, 33, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1072541670, 'comment_body': '```suggestion\r\n    # Go to the below link for more information about how we count hours contributed.\r\n```\r\n\r\nditto below', 'comment_created': datetime.datetime(2023, 1, 17, 17, 34, 43, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1072547272, 'comment_body': 'This can be removed.', 'comment_created': datetime.datetime(2023, 1, 17, 17, 37, 20, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1072551405, 'comment_body': '```suggestion\r\n      !this.fromDate ||\r\n      !this.toDate ||\r\n      new Date(this.fromDate) >= new Date(this.toDate)\r\n```\r\n\r\nShould this be, like this ^', 'comment_created': datetime.datetime(2023, 1, 17, 17, 39, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1072554607, 'comment_body': 'What is `Intl.DateTimeFormatOptions`?', 'comment_created': datetime.datetime(2023, 1, 17, 17, 40, 44, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1072560793, 'comment_body': ""You can do\r\n```suggestion\r\n        language = self.normalized_request.get('language')\r\n```"", 'comment_created': datetime.datetime(2023, 1, 17, 17, 43, 42, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1088322125, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2023, 1, 26, 20, 46, 17, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1088322165, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 1, 26, 20, 46, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1088322189, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 1, 26, 20, 46, 24, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1088327854, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 1, 26, 20, 53, 12, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1088328008, 'comment_body': 'It is used to enable language sensitive date formatting https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat', 'comment_created': datetime.datetime(2023, 1, 26, 20, 53, 20, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1088328318, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 1, 26, 20, 53, 38, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1088796292, 'comment_body': ""```suggestion\r\n        language = self.normalized_request['language']\r\n```"", 'comment_created': datetime.datetime(2023, 1, 27, 10, 20, 37, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1088799445, 'comment_body': '```suggestion\r\n    hours_contributed = round(words_count / 300, 2)\r\n```', 'comment_created': datetime.datetime(2023, 1, 27, 10, 24, 10, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1088799724, 'comment_body': '```suggestion\r\n    hours_contributed = round(minutes_contributed / 60, 2)\r\n```', 'comment_created': datetime.datetime(2023, 1, 27, 10, 24, 29, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1088801323, 'comment_body': 'Can you explain that in code comment?', 'comment_created': datetime.datetime(2023, 1, 27, 10, 26, 8, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1088802455, 'comment_body': 'Should this path be placed into a constant?', 'comment_created': datetime.datetime(2023, 1, 27, 10, 27, 27, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1088871895, 'comment_body': ""I think we will have to use the `self.normalized_request.get('language')` because when generating the question certificate, we do not include language param in the request and it throws `KeyError: 'language'` if we use `self.normalized_request['language']`\r\n\r\nWe can get the the default value which is set as `None` if we use `self.normalized_request.get('language')` when language is not included in the request."", 'comment_created': datetime.datetime(2023, 1, 27, 11, 51, 34, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1088871935, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 1, 27, 11, 51, 39, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1088871982, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 1, 27, 11, 51, 43, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1088872026, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 1, 27, 11, 51, 46, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1088872548, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 1, 27, 11, 52, 24, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1088876830, 'comment_body': 'Ah, right, sorry.', 'comment_created': datetime.datetime(2023, 1, 27, 11, 55, 32, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}]","[{'commit_sha': 'c798e78df80c745a7181584710e4bfb707f09926', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '218b79c52ced20bc00d941ad4258e6fa1ac28b92', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd03d5799641213b5dc15f27084ce45aed359d99c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '536a551e6bca8a3f0f6b0d2529995ff1d7b262fa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b853c9a686ebce7b8b26a3a3fa137cd24700a7db', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cab061f577b3fe093555c1526bee7bf9c4baf8f6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f746b930b061b5a8c969f3249ff2476f8ca5514', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63a998851075b029479db7964bcef44d1d57eaa1', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40e6c29251a3a2340e17cef9a14160a82bb55876', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e042a80db9b38bf2ede32b177af88c75e9a333c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d2e59bc54886aa3536df919bb30cf2db7b2843d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec0690940d4756948199e14cd6c9016ac59033d6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82b8daee90bc28afc5a7607a41591a9845d2166d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac535986e2c38ca6843d7f8513be917b46f3667d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e211ca5cba6a21551c2d15500a79e55538efc777', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '457397387916098eca03068ff705401b68d8b3d5', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb6325941bef5193b3daba77a8a01a70727e7b08', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09f468adf4998e1a4c003d016e2e244eda5e652a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd214681d82717604c56a7cf0487295cd095c7c34', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53b2d186fa9be480db0914b7af149f390a5ca7b2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fb9feef25baa55af4a62a4318c8cd12496aa30f', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0da489240407853f9628cdc6898be9998551d82', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99f637090f7db73fadac2beff63f8a36e88730fc', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7b36a98a0cb4136d163ec62a28a7b1164aa0bbb', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f920c5236963a35f3ff8028b5f99cbf59ad63d0', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0d071b7590a25cff5083a7de0ce4570048a0056', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9f5aea7d3977cfb732b6a2e59975172e82cebbb', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b30d4080ca7a24c8768290a1c5ca40aa236aeaa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b531b277c9c18ca1ec46489eb28bb6609dfb5508', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b3b0994a7439af3170b3d32dfa8d20e4e554935', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b809d1020a84b060a98e397433b890c149eff556', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ce552158c5492b9ca0f89c0f5b9d2addfd85ebd', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f25c22c86aeff2f87bd7bace57aa62c42ddea60e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd17e5209d95f0eb75e4194d56edf900cd244466', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71027ce9075330c453cf988e50565314e3dc15bd', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03f05203b70740c1fab6c19535d2eb27253a2fb8', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '464a643e73b767b47f6eb0c16347a77e1f0f3019', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5185a0a885dba2eb10d15720428e04a59e9bfdcd', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4eb23e34a2811be9e980463ec7f60839b0c97535', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4386afe8701fd212b9b2cb7aa4b17fa21cdd140f', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0452ed785a90cb9c7b5c343fe7bb694391a0a515', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98a5b45ac2ac882e3797c469e6db5abe40fa7706', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9988aadbd17c3a05be9836214c75444ea8d2955', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db831aea415c86fa9db1735796db0308f5341e95', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81d963130f9926dda6b12338c0475c6dad6ba051', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de425540c99e277bbac8f61e7ba5c17af337de46', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37d34c5f3107728b53c8d9dc74b955dbe4741e7a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85ebdc4d2de290acd917a1c5e4ee14d304cd0bea', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '396ad547ca869ce8d18281e1966b6001df3f4ac1', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbb9297e4ac710be0557bf41fa9cd903c0e5ab9b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f6bce0537aa837a7e173c62722257e08fa2d9fa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbc75ccc264b5a17d884238ad3fa5b070cd2c762', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '235d23986c3b4de3973061311973e749b5ec375f', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '629ad5ebdbf07a9b9cec744b16ae7e5f6c23adbc', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6eca00f9a520b12a15ef79162a78cae6de248560', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc3a956b8e4e60bc71c4a5f2bc3384e50e9f5180', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cae961b7daa003b2b889067d466d1f92fdf4e6b2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f916fe4246e3e4a0d8bdb7b656737d58e79580a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd59efdcf4f9056e192cf5cb025035fffac2f5c13', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c82bd7db73ae02ad4415cb6e2ed892b6b6d6713a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd42a694ef5ce8e3b136b9c3de45bc91cf5b27a14', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c91ea46860bd09aeca820dc275153e9903068712', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a679859d01e066ebe4abb0f250b179f45271ce34', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03b5447b8d1a7c8a5cbaf8c8f20400b4434832e7', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e17316dfb60b42fdd395804cb32cf7142355f1b9', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49c6873752b51401ea0e57f30e7039646a69efe4', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfce935bdcda7258967ed06af183dbbaa958d79e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '253699997a4cb25c6d8155b442c459d3eed1647c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccb99add789bb58d65dfef60a3a0802c52dcb023', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '990ed1d04bb6db7f3296b1b6be2559d47909355c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5ded5d659d84596080f1d9e55bd8461f135586a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '773fbe17e8d9ba166e4992aebe140f2bc4ab4465', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cac46199dae688b1511939e68091daa9d3620e36', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd442f5c3393c438fcdf7688c408fa7d03d34eb2f', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '018f498a21563ca501d87ce71e525752288d9864', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f23b1bb83c02e85b990776d06cb1f9f7df14b746', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b3814ccb107e2b7aaae1a1d5ece64fb63dfd55c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a04050f08de9d36fbcdc0883beb1f9f42be4bdc9', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db8b9555d0e8820713f384f87a679b7e90459e1b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18058b63696bf83508613db444ac67f8d6f35f67', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '687c494ad383c1cbe7a3d0c53cb2b39386fe4c65', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c7b82d55274a298b878ad316467ef8436785ab6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2146998ee620d6b33a8f1d671849fb56e36ad217', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42216f4264c7f1859f4771d8b9d01c2abb8ad68d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68ddfeb9108fb0cd05932e450d69aaef61cbb676', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b01fb27c91a161e66ba6178d3f02fcc0fe436c39', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd360b8baeb1bed8fc06e3c3a49e7b9e98cc27d22', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a707c42fdcbcd7ea13b9ae602dc79ffa7c9dfea', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b24ed228be6e1e4588b4239d722bd39af12794aa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '496ef430009ca30f318deeae976ad51b7cfc5219', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31de14a458d7bc23b8ceee687cdfe7bf13d97a06', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66436735bf424d6d1d9ab77952325fb279e88577', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '544acea166660fa854dfc52908b300db9d4addb9', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f0ac822a3b046c84ceef3cd7dd9cad6aab8b971', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9aeff514fff615d4088214a89ceb3c304174c3a6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e43bb5288eb90d37eb3b231b3b9ff05a851f92ee', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0709a10826143e52b6b63291858f208010bf3b5', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0225537485d5e16921dff2a56c7219713748954c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0e77fffaa6ab4b9b31957bda4f8d66ead29ec01', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85b54fc2c8a8a45f123c5c06b5ab4c7b96c546de', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50d919ae17d8541402bb60359d6632c8c0f7e887', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31c86d4a6ef2d644cd537c078ee50a22e59cfd0c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8f4426205075c208136ce3e0be85b5671d8d851', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbd2d1832b70f4d40a483b5dbb3ed857ea443d08', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '670bfe1a288b09658247b23d746eafeeaef9523a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f782890212beecb0dc89b1216725f116893f1458', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77493b7e525ae8df43770ac1d0f6c54e491b36b6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41da8f32f0e71fbea593c72a3b743fa36293f36d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aba7fe1f08da33e4fc26323d04a85c213d591713', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78652f8b41ffa455d58358d80f38ac3bb7275a28', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ca2bdfd4ac561047ef84abcf0527e964ce5b650', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cb6391ad764f737e04da6fb69184925bde3e1fe', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e532dc9e0c6b637412ab9ebf87299eca822d82ef', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3dac23dc8ee0751dddce2f8a93fe891ab3e0b6b1', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5ecdf5da1d8da596e7aea54503b87e83256bca3', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2de5f98cef8d57a7978e17f2b38faa94eec72f5', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ebc01dd15e0565711c310ac04872e24c8b1a314', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38e61d1224ea8c3f8e8a4b697f5f2a33fdb750f9', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea6179108e96a56874aa93c4685b73602eea2034', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '861661e0b5cae413255097d7cc137a47ef5196fd', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e7db4402330f784e2652d4b5d856b61ecdc8e2e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66d57a96a0811641d2d89cf424006164c327324e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '597bd426c7480970a39f7bbce30cdca3378afd71', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'afabab334510802f4681ad85eb9fcc861b626953', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9ef2521adce517ab34d31dfd039403e6d8db91a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad379ed2d52713e7b34c2f725163344968b5a071', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb948aa41cd8356a8fe40b8cbd66a5d5f6cda7b4', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fd619d7e103d1c69baf9bf78fbb3d8823066b73', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d29a0088ef99884ee19c56381849b354fa6b8c0', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6a75aeb25dcab91871845ee12c4fe7deb241e41', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3267f34040ce1cc751a8e2f37f285a14b5c4783c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42069873b731ce4a2008f82f48d11ad18115749f', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad06a773314bc8283f799f7986aa7bc21026b1a4', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32b26a4d13f3fe5da3c77ebc2be47a915d840bd5', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40c4bf9b34abbc167d0693ada89b2e908d0145df', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50e7978383963a5bd1535ec4339634975e918e77', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8b0f5ab7413ac5fcd3a240f67dc4ec934f57327', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9e2b60ad64f6ba0dd02e814d089727fde7704f0', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60783090ce4316b9b01c63790cce709aad5cb7fa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9bc1b6b80450f63d5cfc190e960e5f836d49642', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abbbd344b3be02cc13505e7a1270e86d9b0a2b2a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a2d4427c548eb4d7cb2825706f15b3fa76b430f', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1ac5e128eeeda89e58754a9c8f793a942bc7875', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '566bf72e5c4966e5727d18ac629f6f99371f03ea', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12f3a7669f8ae67041f26e5958e676d5d6c289ee', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f9e963c38b1135231ae95cfa733f9c43c63187b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '966e1b6ec330f8a9c814c3ebcad73369ab200a45', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27348f39c2bbcc5853e3eeed53ef850f458891c6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c46f507fd812e6709016b0a5f7168e82c91e66cd', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aaf02c0e5064ca5df0dc6fd57ef9ea11260f7203', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ca1cb0fc3655e645f33505912cb6a5c9ec548dc', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43c8d6e4beb2b3ec0bbfaec3ce2aa4fa7465290c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7596dbc4a7d26f095be12558ecc443ac6e039b5b', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa5f20db793c2ca46ce03dfa727cd56014b6c467', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d54ca8ec9ab6e50bd3b03ab53bd9d2ea4c00a71', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '718a103c8ffd5f3185697b313f43a9733f637ac6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}]",Hasitha Kaushan,41409951,,User,,34,,33,36
1120920022,[Do not review](Contributor Recognition Infrastructure) Milestone2.5: Cover e2e tests for contributor stats and contributor badges,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: [Explain here what your PR does and why]

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [ ] The linter/Karma presubmit checks have passed locally on your machine.
- [ ] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [ ] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
",False,16540,https://api.github.com/repos/oppia/oppia/pulls/16540,https://github.com/oppia/oppia/pull/16540,closed,4749,235,67,54,8,0,3,1,"[{'name': 'stale'}, {'name': ""PR: don't merge - HAS MERGE CONFLICTS""}, {'name': ""PR: don't merge - STALE BUILD""}]",2022-11-14 07:51:29+00:00,2022-12-09 18:37:27+00:00,2198758.0,"25 days, 10:45:58",[],"[{'commit_sha': 'c798e78df80c745a7181584710e4bfb707f09926', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '218b79c52ced20bc00d941ad4258e6fa1ac28b92', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd03d5799641213b5dc15f27084ce45aed359d99c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '536a551e6bca8a3f0f6b0d2529995ff1d7b262fa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b853c9a686ebce7b8b26a3a3fa137cd24700a7db', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cab061f577b3fe093555c1526bee7bf9c4baf8f6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f746b930b061b5a8c969f3249ff2476f8ca5514', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63a998851075b029479db7964bcef44d1d57eaa1', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40e6c29251a3a2340e17cef9a14160a82bb55876', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e042a80db9b38bf2ede32b177af88c75e9a333c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d2e59bc54886aa3536df919bb30cf2db7b2843d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec0690940d4756948199e14cd6c9016ac59033d6', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82b8daee90bc28afc5a7607a41591a9845d2166d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac535986e2c38ca6843d7f8513be917b46f3667d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e211ca5cba6a21551c2d15500a79e55538efc777', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '457397387916098eca03068ff705401b68d8b3d5', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb6325941bef5193b3daba77a8a01a70727e7b08', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09f468adf4998e1a4c003d016e2e244eda5e652a', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd214681d82717604c56a7cf0487295cd095c7c34', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53b2d186fa9be480db0914b7af149f390a5ca7b2', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fb9feef25baa55af4a62a4318c8cd12496aa30f', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0da489240407853f9628cdc6898be9998551d82', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99f637090f7db73fadac2beff63f8a36e88730fc', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7b36a98a0cb4136d163ec62a28a7b1164aa0bbb', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f920c5236963a35f3ff8028b5f99cbf59ad63d0', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0d071b7590a25cff5083a7de0ce4570048a0056', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9f5aea7d3977cfb732b6a2e59975172e82cebbb', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b30d4080ca7a24c8768290a1c5ca40aa236aeaa', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b531b277c9c18ca1ec46489eb28bb6609dfb5508', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b3b0994a7439af3170b3d32dfa8d20e4e554935', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b809d1020a84b060a98e397433b890c149eff556', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ce552158c5492b9ca0f89c0f5b9d2addfd85ebd', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9e81cafb28dbd8c7f971b8a36d7b4de45a77339', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ccc183f199f239a8238b8e64e93782886d77585', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a91e0387e1e6e04a70098bfad1efc598e53efbde', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5124e4ed4348ee9ba0cfe09efc8006dee631e7ba', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77643629f5eea4d65cf2933719c1550bced72422', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a289686cd5a3afc625be1b47757787a73f7855d7', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '994340b167c98434f842f4b7442f00e3b2826424', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b66a1d8ffefd7093904533d91b68a49da9d6818', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e025300869af73d0d8ef4570f69494d2adbffb4c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5900a20c42f217638e69a954771a3d235eb62be', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c109e2268300bff4067b7f69695e47007d378caf', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d39d4b00d6e08cf576cedcecb45e3e779215ba0', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f25c22c86aeff2f87bd7bace57aa62c42ddea60e', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd17e5209d95f0eb75e4194d56edf900cd244466', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71027ce9075330c453cf988e50565314e3dc15bd', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66ffb238c7d58b8f86c7d2cac3af28fdc702aa6c', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7111805e8a321ac360719932faf7b9c3c07ae8d', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0eb7f7bfca81726f641b693b9a43dc12dec7d368', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4448459b591dd33b914c982deed9bf104d9f8024', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ffaa082904379c0bba537f84a2ca3fb462e2857', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e55f3b03794da0131f3fa87adcb761f505899bc9', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9750ab4a3d2029b540d6d898c1ad6ec2dffab4a8', 'committer_username': 'chris7716', 'committer_name': 'Hasitha Kaushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 19, 3, 27, 33, tzinfo=datetime.timezone.utc)}]",Hasitha Kaushan,41409951,,User,,34,,33,36

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
40687563,oppia,oppia/oppia,Python,3838,5716,240,775,15750,1422,417,25,"[{'id': 1947908929, 'number': 20618, 'closed': datetime.datetime(2024, 7, 4, 18, 46, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 1, 18, 20, 30, tzinfo=datetime.timezone.utc), 'time_taken': 260788.0, 'time_delta': '3 days, 0:26:28', 'additions': 46, 'deletions': 18, 'state': 'closed'}, {'id': 1944766465, 'number': 20602, 'closed': datetime.datetime(2024, 7, 10, 19, 1, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 28, 17, 44, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1041439.0, 'time_delta': '12 days, 1:17:19', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1922245777, 'number': 20471, 'closed': datetime.datetime(2024, 6, 27, 16, 34, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 15, 18, 20, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1030466.0, 'time_delta': '11 days, 22:14:26', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1914128616, 'number': 20436, 'closed': datetime.datetime(2024, 6, 26, 20, 34, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 11, 10, 19, 29, tzinfo=datetime.timezone.utc), 'time_taken': 1332907.0, 'time_delta': '15 days, 10:15:07', 'additions': 23, 'deletions': 9, 'state': 'closed'}, {'id': 1901384072, 'number': 20396, 'closed': datetime.datetime(2024, 6, 3, 18, 7, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 3, 17, 56, 21, tzinfo=datetime.timezone.utc), 'time_taken': 697.0, 'time_delta': '0:11:37', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1882105334, 'number': 20341, 'closed': datetime.datetime(2024, 5, 23, 9, 35, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 22, 10, 15, 46, tzinfo=datetime.timezone.utc), 'time_taken': 83969.0, 'time_delta': '23:19:29', 'additions': 30, 'deletions': 58, 'state': 'closed'}, {'id': 1764555026, 'number': 19919, 'closed': datetime.datetime(2024, 3, 23, 17, 37, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 10, 18, 47, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1119011.0, 'time_delta': '12 days, 22:50:11', 'additions': 140, 'deletions': 20, 'state': 'closed'}, {'id': 1698901246, 'number': 19621, 'closed': datetime.datetime(2024, 2, 17, 15, 13, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 28, 18, 34, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1715955.0, 'time_delta': '19 days, 20:39:15', 'additions': 12, 'deletions': 11, 'state': 'closed'}, {'id': 1681102041, 'number': 19494, 'closed': datetime.datetime(2024, 1, 16, 14, 31, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 16, 14, 27, 5, tzinfo=datetime.timezone.utc), 'time_taken': 286.0, 'time_delta': '0:04:46', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1677952199, 'number': 19466, 'closed': datetime.datetime(2024, 1, 14, 3, 29, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 14, 0, 53, 48, tzinfo=datetime.timezone.utc), 'time_taken': 9318.0, 'time_delta': '2:35:18', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1536680337, 'number': 18962, 'closed': datetime.datetime(2023, 11, 1, 22, 57, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 30, 18, 45, 5, tzinfo=datetime.timezone.utc), 'time_taken': 2779929.0, 'time_delta': '32 days, 4:12:09', 'additions': 133, 'deletions': 214, 'state': 'closed'}, {'id': 1529113972, 'number': 18930, 'closed': datetime.datetime(2023, 10, 6, 17, 12, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 25, 16, 1, 13, tzinfo=datetime.timezone.utc), 'time_taken': 954677.0, 'time_delta': '11 days, 1:11:17', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1529111432, 'number': 18929, 'closed': datetime.datetime(2023, 9, 25, 15, 59, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 25, 15, 59, 36, tzinfo=datetime.timezone.utc), 'time_taken': 4.0, 'time_delta': '0:00:04', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1499088826, 'number': 18830, 'closed': datetime.datetime(2023, 9, 12, 14, 12, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 1, 16, 1, 42, tzinfo=datetime.timezone.utc), 'time_taken': 943851.0, 'time_delta': '10 days, 22:10:51', 'additions': 36, 'deletions': 9, 'state': 'closed'}, {'id': 1499085062, 'number': 18829, 'closed': datetime.datetime(2023, 9, 1, 15, 58, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 1, 15, 58, 21, tzinfo=datetime.timezone.utc), 'time_taken': 37.0, 'time_delta': '0:00:37', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1499080968, 'number': 18828, 'closed': datetime.datetime(2023, 9, 1, 15, 55, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 1, 15, 54, 44, tzinfo=datetime.timezone.utc), 'time_taken': 25.0, 'time_delta': '0:00:25', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 1476859869, 'number': 18784, 'closed': datetime.datetime(2023, 8, 20, 0, 18, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 16, 5, 31, 32, tzinfo=datetime.timezone.utc), 'time_taken': 326805.0, 'time_delta': '3 days, 18:46:45', 'additions': 70, 'deletions': 59, 'state': 'closed'}, {'id': 1337803143, 'number': 18185, 'closed': datetime.datetime(2023, 6, 3, 2, 38, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 4, 5, 38, 5, tzinfo=datetime.timezone.utc), 'time_taken': 2581237.0, 'time_delta': '29 days, 21:00:37', 'additions': 58, 'deletions': 4, 'state': 'closed'}, {'id': 1257275241, 'number': 17530, 'closed': datetime.datetime(2023, 7, 16, 11, 14, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 28, 14, 55, 53, tzinfo=datetime.timezone.utc), 'time_taken': 11909942.0, 'time_delta': '137 days, 20:19:02', 'additions': 2451, 'deletions': 697, 'state': 'closed'}, {'id': 1120920022, 'number': 16540, 'closed': datetime.datetime(2022, 12, 9, 18, 37, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 14, 7, 51, 29, tzinfo=datetime.timezone.utc), 'time_taken': 2198758.0, 'time_delta': '25 days, 10:45:58', 'additions': 4749, 'deletions': 235, 'state': 'closed'}, {'id': 1115066416, 'number': 16513, 'closed': datetime.datetime(2023, 1, 27, 16, 57, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 8, 21, 39, 10, tzinfo=datetime.timezone.utc), 'time_taken': 6895104.0, 'time_delta': '79 days, 19:18:24', 'additions': 1819, 'deletions': 56, 'state': 'closed'}, {'id': 1106364435, 'number': 16459, 'closed': datetime.datetime(2022, 11, 24, 4, 4, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 1, 7, 25, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1975133.0, 'time_delta': '22 days, 20:38:53', 'additions': 1655, 'deletions': 1, 'state': 'closed'}, {'id': 1084768567, 'number': 16289, 'closed': datetime.datetime(2022, 11, 21, 3, 45, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 12, 14, 16, 1, tzinfo=datetime.timezone.utc), 'time_taken': 3418178.0, 'time_delta': '39 days, 13:29:38', 'additions': 1943, 'deletions': 97, 'state': 'closed'}, {'id': 1068806583, 'number': 16153, 'closed': datetime.datetime(2022, 10, 14, 3, 13, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 27, 15, 35, 34, tzinfo=datetime.timezone.utc), 'time_taken': 1424259.0, 'time_delta': '16 days, 11:37:39', 'additions': 632, 'deletions': 1, 'state': 'closed'}, {'id': 1052958269, 'number': 16044, 'closed': datetime.datetime(2022, 9, 17, 7, 25, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 12, 8, 24, 45, tzinfo=datetime.timezone.utc), 'time_taken': 428427.0, 'time_delta': '4 days, 23:00:27', 'additions': 711, 'deletions': 7, 'state': 'closed'}, {'id': 1038702842, 'number': 15960, 'closed': datetime.datetime(2022, 9, 17, 2, 40, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 27, 20, 24, 31, tzinfo=datetime.timezone.utc), 'time_taken': 1750550.0, 'time_delta': '20 days, 6:15:50', 'additions': 252, 'deletions': 0, 'state': 'closed'}, {'id': 1035822177, 'number': 15940, 'closed': datetime.datetime(2022, 9, 2, 15, 8, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 24, 18, 4, tzinfo=datetime.timezone.utc), 'time_taken': 767077.0, 'time_delta': '8 days, 21:04:37', 'additions': 528, 'deletions': 15, 'state': 'closed'}, {'id': 1029178114, 'number': 15917, 'closed': datetime.datetime(2022, 9, 16, 13, 54, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 17, 18, 52, 10, tzinfo=datetime.timezone.utc), 'time_taken': 2574111.0, 'time_delta': '29 days, 19:01:51', 'additions': 2082, 'deletions': 20, 'state': 'closed'}, {'id': 1017560429, 'number': 15845, 'closed': datetime.datetime(2022, 8, 10, 8, 12, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 4, 13, 36, 55, tzinfo=datetime.timezone.utc), 'time_taken': 498952.0, 'time_delta': '5 days, 18:35:52', 'additions': 504, 'deletions': 1, 'state': 'closed'}, {'id': 1012998414, 'number': 15821, 'closed': datetime.datetime(2022, 8, 14, 12, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 31, 10, 47, 43, tzinfo=datetime.timezone.utc), 'time_taken': 1216397.0, 'time_delta': '14 days, 1:53:17', 'additions': 1558, 'deletions': 5, 'state': 'closed'}, {'id': 920765032, 'number': 15409, 'closed': datetime.datetime(2022, 6, 12, 5, 16, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 27, 15, 0, 48, tzinfo=datetime.timezone.utc), 'time_taken': 3939316.0, 'time_delta': '45 days, 14:15:16', 'additions': 439, 'deletions': 90, 'state': 'closed'}, {'id': 790602020, 'number': 14341, 'closed': datetime.datetime(2021, 12, 1, 8, 33, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 29, 11, 57, 3, tzinfo=datetime.timezone.utc), 'time_taken': 160595.0, 'time_delta': '1 day, 20:36:35', 'additions': 274, 'deletions': 7, 'state': 'closed'}, {'id': 785058129, 'number': 14289, 'closed': datetime.datetime(2021, 11, 26, 19, 10, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 19, 22, 5, tzinfo=datetime.timezone.utc), 'time_taken': 594305.0, 'time_delta': '6 days, 21:05:05', 'additions': 718, 'deletions': 259, 'state': 'closed'}, {'id': 783037076, 'number': 14268, 'closed': datetime.datetime(2021, 11, 25, 14, 24, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 17, 19, 13, 50, tzinfo=datetime.timezone.utc), 'time_taken': 673836.0, 'time_delta': '7 days, 19:10:36', 'additions': 32, 'deletions': 2, 'state': 'closed'}, {'id': 774763721, 'number': 14194, 'closed': datetime.datetime(2021, 11, 9, 20, 40, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 6, 8, 55, 12, tzinfo=datetime.timezone.utc), 'time_taken': 301543.0, 'time_delta': '3 days, 11:45:43', 'additions': 49, 'deletions': 20, 'state': 'closed'}, {'id': 764608531, 'number': 14125, 'closed': datetime.datetime(2021, 11, 1, 11, 59, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 23, 4, 52, 40, tzinfo=datetime.timezone.utc), 'time_taken': 803232.0, 'time_delta': '9 days, 7:07:12', 'additions': 54, 'deletions': 0, 'state': 'closed'}, {'id': 761667908, 'number': 14104, 'closed': datetime.datetime(2021, 10, 30, 16, 31, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 19, 18, 3, 5, tzinfo=datetime.timezone.utc), 'time_taken': 944890.0, 'time_delta': '10 days, 22:28:10', 'additions': 134, 'deletions': 24, 'state': 'closed'}, {'id': 758920322, 'number': 14067, 'closed': datetime.datetime(2021, 10, 24, 9, 36, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 15, 5, 20, 18, tzinfo=datetime.timezone.utc), 'time_taken': 792999.0, 'time_delta': '9 days, 4:16:39', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 747350104, 'number': 13972, 'closed': datetime.datetime(2021, 10, 7, 15, 18, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 1, 7, 37, 1, tzinfo=datetime.timezone.utc), 'time_taken': 546105.0, 'time_delta': '6 days, 7:41:45', 'additions': 43, 'deletions': 22, 'state': 'closed'}, {'id': 729644636, 'number': 13835, 'closed': datetime.datetime(2021, 9, 30, 18, 34, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 8, 13, 23, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1919434.0, 'time_delta': '22 days, 5:10:34', 'additions': 468, 'deletions': 70, 'state': 'closed'}, {'id': 703928947, 'number': 13577, 'closed': datetime.datetime(2021, 9, 16, 9, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 19, 51, 26, tzinfo=datetime.timezone.utc), 'time_taken': 3677554.0, 'time_delta': '42 days, 13:32:34', 'additions': 8, 'deletions': 1, 'state': 'closed'}, {'id': 700960531, 'number': 13542, 'closed': datetime.datetime(2021, 8, 18, 2, 35, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 1, 18, 28, 26, tzinfo=datetime.timezone.utc), 'time_taken': 1411653.0, 'time_delta': '16 days, 8:07:33', 'additions': 414, 'deletions': 34, 'state': 'closed'}, {'id': 677261059, 'number': 13202, 'closed': datetime.datetime(2021, 7, 9, 18, 38, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 16, 20, 58, tzinfo=datetime.timezone.utc), 'time_taken': 1304251.0, 'time_delta': '15 days, 2:17:31', 'additions': 119, 'deletions': 4, 'state': 'closed'}, {'id': 665157253, 'number': 13020, 'closed': datetime.datetime(2021, 6, 10, 21, 45, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 18, 16, 53, tzinfo=datetime.timezone.utc), 'time_taken': 185298.0, 'time_delta': '2 days, 3:28:18', 'additions': 19, 'deletions': 13, 'state': 'closed'}, {'id': 652179507, 'number': 12909, 'closed': datetime.datetime(2021, 6, 15, 15, 4, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 25, 10, 53, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1829451.0, 'time_delta': '21 days, 4:10:51', 'additions': 319, 'deletions': 11, 'state': 'closed'}, {'id': 639605214, 'number': 12785, 'closed': datetime.datetime(2021, 5, 14, 4, 52, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 11, 7, 22, 16, tzinfo=datetime.timezone.utc), 'time_taken': 250212.0, 'time_delta': '2 days, 21:30:12', 'additions': 126, 'deletions': 101, 'state': 'closed'}, {'id': 617437878, 'number': 12540, 'closed': datetime.datetime(2021, 5, 17, 20, 31, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 18, 7, 37, 52, tzinfo=datetime.timezone.utc), 'time_taken': 2552043.0, 'time_delta': '29 days, 12:54:03', 'additions': 1591, 'deletions': 102, 'state': 'closed'}, {'id': 608425817, 'number': 12424, 'closed': datetime.datetime(2021, 4, 20, 2, 47, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 3, 18, 31, 20, tzinfo=datetime.timezone.utc), 'time_taken': 1412154.0, 'time_delta': '16 days, 8:15:54', 'additions': 5333, 'deletions': 1355, 'state': 'closed'}, {'id': 565196250, 'number': 11838, 'closed': datetime.datetime(2021, 4, 22, 16, 8, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 1, 13, 48, 58, tzinfo=datetime.timezone.utc), 'time_taken': 6920359.0, 'time_delta': '80 days, 2:19:19', 'additions': 406, 'deletions': 43, 'state': 'closed'}, {'id': 557903493, 'number': 11738, 'closed': datetime.datetime(2021, 3, 17, 2, 50, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 20, 2, 45, 6, tzinfo=datetime.timezone.utc), 'time_taken': 4838717.0, 'time_delta': '56 days, 0:05:17', 'additions': 261, 'deletions': 79, 'state': 'closed'}, {'id': 552220768, 'number': 11650, 'closed': datetime.datetime(2021, 1, 20, 13, 58, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 10, 3, 23, 27, tzinfo=datetime.timezone.utc), 'time_taken': 902119.0, 'time_delta': '10 days, 10:35:19', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 545217341, 'number': 11489, 'closed': datetime.datetime(2021, 1, 4, 9, 47, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 24, 8, 49, 25, tzinfo=datetime.timezone.utc), 'time_taken': 953872.0, 'time_delta': '11 days, 0:57:52', 'additions': 168, 'deletions': 1, 'state': 'closed'}, {'id': 543253057, 'number': 11455, 'closed': datetime.datetime(2020, 12, 22, 6, 27, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 21, 6, 16, 58, tzinfo=datetime.timezone.utc), 'time_taken': 87052.0, 'time_delta': '1 day, 0:10:52', 'additions': 10, 'deletions': 10, 'state': 'closed'}, {'id': 543058628, 'number': 11453, 'closed': datetime.datetime(2020, 12, 20, 12, 7, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 20, 12, 7, 31, tzinfo=datetime.timezone.utc), 'time_taken': 3.0, 'time_delta': '0:00:03', 'additions': 10, 'deletions': 10, 'state': 'closed'}]"
