pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
668386178,Fix #3293: Introduced Developer Options Starter,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Fixes #3293: Introduced Developer Options Starter. This PR also introduces the initial label test for `DeveloperOptionsActivity`.

**Screenshots**

- Espresso tests passing for `DeveloperOptionsActivityTest`
![Screenshot from 2021-06-22 20-26-22](https://user-images.githubusercontent.com/63469151/122948420-87193d00-d398-11eb-99a1-58f3ea304836.png)

- Robolectric tests passing for `DeveloperOptionsActivityTest`
![Screenshot from 2021-06-22 20-27-45](https://user-images.githubusercontent.com/63469151/122948467-90a2a500-d398-11eb-8d65-31e34f8b4e5a.png)


## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3313,https://api.github.com/repos/oppia/oppia-android/pulls/3313,https://github.com/oppia/oppia-android/pull/3313,closed,238,4,10,16,10,20,0,1,[],2021-06-11 17:33:48+00:00,2021-06-27 16:42:09+00:00,1379301.0,"15 days, 23:08:21","[{'comment_id': 650367826, 'comment_body': 'Nit: Can be renamed to something like `DebugApplicationComponent` since the mode name will be debug, not dev. ', 'comment_created': datetime.datetime(2021, 6, 12, 8, 55, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 650367889, 'comment_body': 'Nit: in debug mode', 'comment_created': datetime.datetime(2021, 6, 12, 8, 56, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 650368033, 'comment_body': 'nit: `debugComponent` sounds better. ', 'comment_created': datetime.datetime(2021, 6, 12, 8, 57, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 650368059, 'comment_body': 'nit: `enableDebugMode`', 'comment_created': datetime.datetime(2021, 6, 12, 8, 58, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 650368341, 'comment_body': ""It might be worth mentioning what we're doing here in a comment. "", 'comment_created': datetime.datetime(2021, 6, 12, 9, 1, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 650432454, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 12, 20, 17, 58, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 650432460, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 12, 20, 18, 7, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 650432480, 'comment_body': 'Now outdated.', 'comment_created': datetime.datetime(2021, 6, 12, 20, 18, 20, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 650432484, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 12, 20, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 650432501, 'comment_body': 'Now outdated.', 'comment_created': datetime.datetime(2021, 6, 12, 20, 18, 48, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 655603787, 'comment_body': 'Please add a test case for this label similar to `testFaqListActivity_hasCorrectActivityLabel`', 'comment_created': datetime.datetime(2021, 6, 21, 18, 13, 58, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 655604374, 'comment_body': 'Add Kdoc for this.', 'comment_created': datetime.datetime(2021, 6, 21, 18, 14, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 655604925, 'comment_body': '@Sarthak2601 Was this suppose to be a separate module or just separate package?', 'comment_created': datetime.datetime(2021, 6, 21, 18, 15, 53, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 655605796, 'comment_body': ""Why do we need this? Why can't we just call `DeveloperOptionsActivity.createDeveloperOptionsActivityIntent(context, internalProfileId)` directly similar to our current code base ?"", 'comment_created': datetime.datetime(2021, 6, 21, 18, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 655866872, 'comment_body': ""Earlier it was supposed to be a separate module but now we've shifted it to separate package approach. "", 'comment_created': datetime.datetime(2021, 6, 22, 4, 29, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 656299044, 'comment_body': 'Done. PTAL.', 'comment_created': datetime.datetime(2021, 6, 22, 14, 50, 43, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 656299792, 'comment_body': 'Done. PTAL.', 'comment_created': datetime.datetime(2021, 6, 22, 14, 51, 28, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 656303541, 'comment_body': ""It is necessary to follow this approach as for non-debug builds, we won't be including DeveloperOptionsActivity and all the related files to it in our build. So, if we follow the conventional approach the app will throw a build time error. Having this Starter provides Optional binding for the intent which means if the Dev modules are not found in the build it won't throw an error. It will just treat it as if it is not present. Hope this clarifies the approach. Thanks."", 'comment_created': datetime.datetime(2021, 6, 22, 14, 54, 50, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 659223303, 'comment_body': 'Okay.', 'comment_created': datetime.datetime(2021, 6, 26, 21, 0, 2, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 659223439, 'comment_body': 'Makes sense. Thanks.', 'comment_created': datetime.datetime(2021, 6, 26, 21, 1, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}]","[{'commit_sha': '5dc378feff9fd2e71ac113be8a1ca9e21445390c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a29b60f6ca83be1f4859da37f705f219f61457eb', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6d697cd1209079a8c92630790a8579c4c0a8684', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da4a535fd491312f57fc41ea51b3630333ec0a59', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55bf1caaa1879eb8334201697f0c09d0b71867ad', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9cd1a83baabe53552a00634b00c8db11734dfc2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1259636b7ed8787b1b1f6987db51241a0c4ebc6a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ceb61c398de083352dd8fe98dea2a2e6c641025', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfed4c84416636cda36ebebb8953d78b6c8c6275', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06d0904af130684ca4e3f6ee766da384c82bc103', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff2b35190b37fa56bb485ca286e2a933ef96954a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63b901d5cfa5cb2779ce3885a29afc1657bafdcc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce707ca9a6eb121d1a9d84f2825f52aed36bb3da', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd8cf75a514f8f4a7e5dbd91eea706846a26f258', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '761f2d48cf4548a4474a3b81b9e1ff5b65b44e1b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72f072ffafd093f9eb3c32134c2cbc5812360499', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}]",Yash Raj,63469151,,User,,24,,4,14
668535054,Fix #3294: Create Developer options menu item in Navigation Drawer,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Fixes #3294: Create Developer options menu item in Navigation Drawer. The feature is backed by tests in `NavigationDrawerActivityProdTest` and `NavigationDrawerActivityDevTest`.

**Mock link:** https://xd.adobe.com/view/e8aa4198-3940-47f9-514a-f41cc54457f6-9e9b/screen/be13be5c-d0c5-4430-bda2-670d48a36b53/

**Screenshots**

- GIF showing the Developer Options menu item
  <img width=""290"" height=""555""  src=""https://user-images.githubusercontent.com/63469151/121744718-ee292d00-cb20-11eb-92f1-9ba7b6ac5341.gif"">

- Espresso Test result for `NavigationDrawerActivityProdTest`
![Screenshot from 2021-06-22 23-38-22](https://user-images.githubusercontent.com/63469151/122986011-7aa6db80-d3bc-11eb-9282-5a64351e3d39.png)

- Robolectric Test result for `NavigationDrawerActivityProdTest`
![Screenshot from 2021-06-22 23-44-51](https://user-images.githubusercontent.com/63469151/122986062-8e524200-d3bc-11eb-824e-c074ffdea82a.png)

- Espresso Test result for `NavigationDrawerActivityDebugTest`
![Screenshot from 2021-06-26 23-57-55](https://user-images.githubusercontent.com/63469151/123522420-c0281900-d6da-11eb-923c-fd3eb487078e.png)

- Robolectric Test result for `NavigationDrawerActivityDebugTest`
![Screenshot from 2021-06-26 23-59-05](https://user-images.githubusercontent.com/63469151/123522433-d33ae900-d6da-11eb-84ce-921a226a4c99.png)

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3314,https://api.github.com/repos/oppia/oppia-android/pulls/3314,https://github.com/oppia/oppia-android/pull/3314,closed,1141,105,110,47,17,70,0,1,[],2021-06-11 20:29:12+00:00,2021-06-30 04:53:25+00:00,1585453.0,"18 days, 8:24:13","[{'comment_id': 653460892, 'comment_body': ""We're setting the internalProfileId with `KEY_NAVIGATION_PROFILE_ID ` and then retrieving it using `DEVELOPER_OPTIONS_ACTIVITY_PROFILE_ID_KEY`. Shouldn't it be the same key in both cases? "", 'comment_created': datetime.datetime(2021, 6, 17, 11, 5, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 653471178, 'comment_body': 'nit: add reference to developer options activity as well. ', 'comment_created': datetime.datetime(2021, 6, 17, 11, 21, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 653472074, 'comment_body': 'EOF missing. ', 'comment_created': datetime.datetime(2021, 6, 17, 11, 22, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 653472186, 'comment_body': ""EOF missing and I don't think we need the textview for displaying the name. "", 'comment_created': datetime.datetime(2021, 6, 17, 11, 22, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 653493517, 'comment_body': ""Yes. I realised that when I was working on PR #3331. I have corrected this there. I'll also correct this here also."", 'comment_created': datetime.datetime(2021, 6, 17, 11, 55, 13, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 653557160, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 17, 13, 19, 45, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 653557330, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 17, 13, 19, 56, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 653559085, 'comment_body': 'Done. And the TextView is just temporary, just to have a simple layout for DeveloperOptionsActivity. I have removed it and implemented the actual layout in the next PR #3331.', 'comment_created': datetime.datetime(2021, 6, 17, 13, 22, 1, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 653561803, 'comment_body': 'Done. Added another comment below the if statement for DeveloperOptionsActivity on line 435.', 'comment_created': datetime.datetime(2021, 6, 17, 13, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 653626806, 'comment_body': ""Aah, you'll probably have to remove it from the PR. In general, we should not check in any temporary/wrong code in the codebase even if we've removed/corrected it in the stacked PR. "", 'comment_created': datetime.datetime(2021, 6, 17, 14, 35, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 653703439, 'comment_body': 'Oh okay. I have modified the layout file. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 6, 17, 15, 58, 7, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 654465024, 'comment_body': 'EOF missing. ', 'comment_created': datetime.datetime(2021, 6, 18, 14, 13, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 654466325, 'comment_body': 'The mode name is `debug` not `dev` -- ditto everywhere else. ', 'comment_created': datetime.datetime(2021, 6, 18, 14, 14, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 654513463, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 18, 15, 16, 39, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 654513563, 'comment_body': 'Done. PTAL.', 'comment_created': datetime.datetime(2021, 6, 18, 15, 16, 47, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 654760990, 'comment_body': 'What does this noDebugComponent mean here? Ideally the main component should be called `component` and the debug component should be called `debugComponent`. ', 'comment_created': datetime.datetime(2021, 6, 19, 7, 18, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 654769935, 'comment_body': ""Actually, here most of the tests use `debugComponent` and only one test requires test application component without debug modules. So, I thought instead of creating `component` and `debugComponent` I should create a `component` with all the modules and a `noDebugComponent` without debug modules. The reason I named it `noDebugComponent` was because we cannot call it `prodComponent`. \r\n\r\nOne thing we can do is, we can rename `TestApplicationComponent` to `TestDebugApplicationComponent` and `TestNoDebugApplicationComponent` to `TestApplicationComponent`. This will replace `component` with `debugComponent` and `noDebugComponent` to `component`. \r\n\r\nOr we can just rename  `noDebugComponent` to a proper name. I'm very bad with names so if you could suggest one then it will be really helpful :|\r\n\r\nWDYT @Sarthak2601? Or if you have any other suggestions, please let me know. Thanks."", 'comment_created': datetime.datetime(2021, 6, 19, 8, 52, 2, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 654963345, 'comment_body': 'use complete import of `assertThat` not just Truth\r\n\r\n', 'comment_created': datetime.datetime(2021, 6, 20, 17, 10, 17, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 654963369, 'comment_body': '```suggestion\r\nimport com.google.common.truth.Truth.assertThat\r\n```', 'comment_created': datetime.datetime(2021, 6, 20, 17, 10, 26, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 654963436, 'comment_body': 'do we need intents?', 'comment_created': datetime.datetime(2021, 6, 20, 17, 10, 55, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 654963496, 'comment_body': 'do we need this?', 'comment_created': datetime.datetime(2021, 6, 20, 17, 11, 29, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 654963572, 'comment_body': 'do we need this?', 'comment_created': datetime.datetime(2021, 6, 20, 17, 12, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 654963578, 'comment_body': 'do we need this?', 'comment_created': datetime.datetime(2021, 6, 20, 17, 12, 5, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 654964553, 'comment_body': '```suggestion\r\n      ).check(matches(hasTextColor(R.color.highlightedDeveloperOptionsNavMenuItem)))\r\n```', 'comment_created': datetime.datetime(2021, 6, 20, 17, 20, 52, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 654964642, 'comment_body': 'ditto', 'comment_created': datetime.datetime(2021, 6, 20, 17, 21, 33, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 654981037, 'comment_body': 'Yes. We need this to create intent for `DeveloperOptionsActivity`', 'comment_created': datetime.datetime(2021, 6, 20, 19, 52, 7, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 654981304, 'comment_body': 'We will be needing them in future tests. But I should remove them for now and add them when required. Same for others.', 'comment_created': datetime.datetime(2021, 6, 20, 19, 54, 31, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 654982113, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 20, 20, 2, 1, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 654982132, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 20, 20, 2, 11, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 654982151, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 20, 20, 2, 22, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 654982230, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 20, 20, 2, 49, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 654982389, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2021, 6, 20, 20, 4, 26, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 654982491, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 6, 20, 20, 4, 40, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 654982505, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 6, 20, 20, 4, 46, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 655632707, 'comment_body': 'Instead of removing this. If the condition is null than only `add` fragment.\r\nWDYT?', 'comment_created': datetime.datetime(2021, 6, 21, 19, 1, 43, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 655633084, 'comment_body': 'Single line\r\n`return developerOptionsFragmentPresenter.handleCreateView(inflater, container)`', 'comment_created': datetime.datetime(2021, 6, 21, 19, 2, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 655633430, 'comment_body': 'Not getting used. Remove them.\r\nAdd only when needed.', 'comment_created': datetime.datetime(2021, 6, 21, 19, 2, 53, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 655635504, 'comment_body': 'Why is it wrapped for N and above only? And what about below N ?', 'comment_created': datetime.datetime(2021, 6, 21, 19, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 655635979, 'comment_body': 'Shift this to top.', 'comment_created': datetime.datetime(2021, 6, 21, 19, 7, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 655636186, 'comment_body': 'Reformat\r\n```\r\n<vector xmlns:android=""http://schemas.android.com/apk/res/android""\r\n  android:width=""24dp""\r\n  android:height=""24dp""\r\n  android:tint=""#00609C""\r\n  android:viewportWidth=""24""\r\n  android:viewportHeight=""24"">\r\n  <path\r\n    android:fillColor=""#ffffff""\r\n    android:pathData=""M9.4,16.6L4.8,12l4.6,-4.6L8,6l-6,6 6,6 1.4,-1.4zM14.6,16.6l4.6,-4.6 -4.6,-4.6L16,6l6,6 -6,6 -1.4,-1.4z"" />\r\n</vector>\r\n\r\n```', 'comment_created': datetime.datetime(2021, 6, 21, 19, 7, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 655636920, 'comment_body': 'Add `6dp` shadow below toolbar. You can find this in `help_activity`', 'comment_created': datetime.datetime(2021, 6, 21, 19, 8, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 655637432, 'comment_body': 'Shift these `xmlns` to `layout`', 'comment_created': datetime.datetime(2021, 6, 21, 19, 9, 33, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 655868038, 'comment_body': ""I think we'll now need to shift from having 2 components to having two test files, so this won't make sense. "", 'comment_created': datetime.datetime(2021, 6, 22, 4, 32, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 656353602, 'comment_body': ""The optional feature is supported only for N and above. As this is meant for developers only, I believe it won't be much trouble. WDYT?\r\n\r\n@BenHenning @Sarthak2601 what are your thoughts on this?"", 'comment_created': datetime.datetime(2021, 6, 22, 15, 47, 22, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 656368262, 'comment_body': ""Yes, I think that is a better approach. I'll do it."", 'comment_created': datetime.datetime(2021, 6, 22, 16, 3, 15, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 656373447, 'comment_body': '```suggestion\r\n      intended(hasExtra(DeveloperOptionsActivity.getIntentKey(), internalProfileId))\r\n```', 'comment_created': datetime.datetime(2021, 6, 22, 16, 9, 24, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 656374448, 'comment_body': 'Okay. Should I also shift `DeveloperOptionsActivity` to top in `ActivityComponent`', 'comment_created': datetime.datetime(2021, 6, 22, 16, 10, 41, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 656384153, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 22, 16, 23, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 656384254, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 22, 16, 23, 5, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 656384366, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 22, 16, 23, 9, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 656385652, 'comment_body': 'Done for `FragmentComponent`. Waiting for your response about `ActivityComponent`', 'comment_created': datetime.datetime(2021, 6, 22, 16, 24, 10, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 656385924, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2021, 6, 22, 16, 24, 21, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 656386031, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 22, 16, 24, 26, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 656386131, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 22, 16, 24, 31, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 656480986, 'comment_body': 'Done. This test is now moved to `NavigationDrawerActivityDevTest.kt`. PTAL at https://github.com/oppia/oppia-android/blob/536f69fcc3f0866080ce71c27f1dfd9c92a0c8dc/app/src/sharedTest/java/org/oppia/android/app/testing/NavigationDrawerActivityDevTest.kt#L289-L294\r\nThanks.', 'comment_created': datetime.datetime(2021, 6, 22, 18, 29, 51, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 656482011, 'comment_body': 'I have separated the test files into `NavigationDrawerActivityProdTest.kt` and `NavigationDrawerActivityDevTest.kt`.\r\nPTAL @Sarthak2601 @BenHenning @anandwana001. Thanks.', 'comment_created': datetime.datetime(2021, 6, 22, 18, 31, 20, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 656526726, 'comment_body': ""Since this is dev-only feature, I don't think there should be much concern on what happens below N. That being said, @rt4914 is there any specific use case that we'd want to test below android version N?"", 'comment_created': datetime.datetime(2021, 6, 22, 19, 40, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 657268956, 'comment_body': ""@yashraj-01 @Sarthak2601 Does this mean that the feature (Developer Options) will be available to only devices with above N version? If so, we should avoid this and make it accessible by all.\r\n\r\nReason: There might be some contributor who is using an old android phone and does not have emulator strong hardware so for them it won't be accessible. Considering we can make it easily accessible to all developers we should prioritise that."", 'comment_created': datetime.datetime(2021, 6, 23, 16, 22, 28, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 657811135, 'comment_body': ""Hmm, seems reasonable. The use of optional is such that it can't be used below android version N but we can achieve this functionality if we have an optional class implementation of our own -- [reference blog](https://medium.com/@coreflodev/use-optional-t-in-android-today-a3f7021e3f7a). There are some other alternatives in the blog as well. @rt4914 @yashraj-01 WDYT? \r\n\r\nNote: this is subject to @BenHenning's approval. "", 'comment_created': datetime.datetime(2021, 6, 24, 10, 5, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 657813552, 'comment_body': 'do we need this? \r\nIf yes, add some comments so that in the future it will not get removed ', 'comment_created': datetime.datetime(2021, 6, 24, 10, 9, 21, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 657822109, 'comment_body': '```suggestion\r\n      toolbar, menuItemId = -1\r\n```', 'comment_created': datetime.datetime(2021, 6, 24, 10, 22, 35, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 658246955, 'comment_body': 'Yes. I think we need this. As far as I understood we need this test rule when we specify on which platform a test runs on. If I am correct then I think we need this as there are tests in this file that are specified to run on espresso only. Am I correct @anandwana001?', 'comment_created': datetime.datetime(2021, 6, 24, 20, 5, 40, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 658248074, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 24, 20, 7, 44, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 658885535, 'comment_body': 'ah, I missed the RunOn annotations. ', 'comment_created': datetime.datetime(2021, 6, 25, 16, 17, 30, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 659223795, 'comment_body': 'By top I meant just one line above. Basically keep this list in Alphabetical order as much as possible. Same applies for `ActivityComponent` too.', 'comment_created': datetime.datetime(2021, 6, 26, 21, 5, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 659223819, 'comment_body': ""@Sarthak2601 yes we can use Optional. Lets wait for @BenHenning 's suggestion too."", 'comment_created': datetime.datetime(2021, 6, 26, 21, 6, 5, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 659338823, 'comment_body': 'There are several instances where this list is not in alphabetical order -- both in `ActivityComponent` and `FragmentComponent`. I suggest we create a separate good first issue for arranging them in alphabetical order. WDYT?', 'comment_created': datetime.datetime(2021, 6, 27, 15, 33, 42, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 659675718, 'comment_body': 'Sounds good. Can you file that issue please?', 'comment_created': datetime.datetime(2021, 6, 28, 10, 42, 6, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 659781754, 'comment_body': 'Done. PTAL #3378 and #3379 ', 'comment_created': datetime.datetime(2021, 6, 28, 13, 23, 31, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 660099886, 'comment_body': '@rt4914 @Sarthak2601 I have filed an issue for this. PTAL #3383 ', 'comment_created': datetime.datetime(2021, 6, 28, 20, 36, 57, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}]","[{'commit_sha': '5dc378feff9fd2e71ac113be8a1ca9e21445390c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a29b60f6ca83be1f4859da37f705f219f61457eb', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '483bc61c5d8d2c9b436b0f9a4e2984a76a901511', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72a0173381d55069792eb6fae1925a5b727560dc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6d697cd1209079a8c92630790a8579c4c0a8684', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da4a535fd491312f57fc41ea51b3630333ec0a59', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1bf92fbe105b39d5748f71f2b2e642bd93873a6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5917850889f1b2a19bc4f300140604fd07fcdd10', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be028fd941d50bfc613e0313885dc77c1b17bf5b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55bf1caaa1879eb8334201697f0c09d0b71867ad', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9cd1a83baabe53552a00634b00c8db11734dfc2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '853fdf963cc3c817e672a9edb22772e5c9e71a0d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1259636b7ed8787b1b1f6987db51241a0c4ebc6a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9738bcf6646b83dee9fe4ee64639d014a26f620c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdb2f5ec9856a7b4ebc3450ff7182be63b4ccfef', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ee761d2bd1c8d5cfcd263e4dc47dc9558bfd158', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ceb61c398de083352dd8fe98dea2a2e6c641025', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d928f5833d10abe9d34a76aba3a98d9ce8bae46', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfed4c84416636cda36ebebb8953d78b6c8c6275', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4aad8f4c5a39d2733b1d2d506ad0207fbfb55d3', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81f538e83b7a825390d75ae0daa8c3a0bc5ae92c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bda3cfffc7b03cae71de2445fcad46925a208a6d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3df7e3a28fc132dabc83014292ae28421d124386', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06d0904af130684ca4e3f6ee766da384c82bc103', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5efd5d46ef5c245748743a8d9e7719956623e240', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5222123f78f5d27c042242a10f7825902e8d999', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '154e849fe7b464d0dc2723d9f155a3e0f9697532', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5cecc8063e8447ea869bb9fd7db3ec926b91b11', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff2b35190b37fa56bb485ca286e2a933ef96954a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63b901d5cfa5cb2779ce3885a29afc1657bafdcc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce707ca9a6eb121d1a9d84f2825f52aed36bb3da', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd8cf75a514f8f4a7e5dbd91eea706846a26f258', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '761f2d48cf4548a4474a3b81b9e1ff5b65b44e1b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcafeb3018b1ea31c142c4e9c806c1e9fed7993c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6ae9024fb648c899700c941ec8c8e8a7226271b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '536f69fcc3f0866080ce71c27f1dfd9c92a0c8dc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b71a07944c4f27db9e684754e5a236b35adb98b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b164b4675f8493aecf16d5e99eb740d33c0201b8', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef11e7d619bcd1ae594508d25117efe1fea40fc3', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72f072ffafd093f9eb3c32134c2cbc5812360499', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '230978282dea3400aa1d0a36c9d9428be9231d4b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50a4354c67f92c202377d3dca614a0a57f908e2f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae3e08e0e84cf2916f85566c801a7039a471eec6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37f0bea78361cdadf0d523dc8d661ec1aaa60935', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b46679d2fe3eb1d2ca3f1a54f55eb49463dfe784', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a1e41e933ec4c84a50b4a8f4b0798ab9bc8c909', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a805def0488bd5c83bc40cafae9a12701059550a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}]",Yash Raj,63469151,,User,,24,,4,14
671809259,Fix #3295: Introduce UI for Developer Options Menu,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Fixes #3295 : Introduced UI for Developer Options Menu

**Mock link:** https://xd.adobe.com/view/e8aa4198-3940-47f9-514a-f41cc54457f6-9e9b/screen/116991fa-d0eb-42f9-9db2-b4456d797a48/

**Screenshots**

- UI
  <img width=""290"" height=""555""  src=""https://user-images.githubusercontent.com/63469151/122278218-4dfa4c00-cf04-11eb-8778-9bea17d09ca8.png"">

**All test results are after adding** `AccessibilityTestRule`

- Espresso test passing -- `NavigationDrawerActivityDebugTest`
![Screenshot from 2021-06-30 23-42-41](https://user-images.githubusercontent.com/63469151/124012986-6176de00-d9ff-11eb-8d5a-3dc87be5726a.png)

- Robolectric test passing -- `NavigationDrawerActivityDebugTest`
![Screenshot from 2021-06-30 23-45-33](https://user-images.githubusercontent.com/63469151/124013030-6e93cd00-d9ff-11eb-8edc-d77596898c4f.png)

- Espresso test passing -- `DeveloperOptionsActivityTest`
![Screenshot from 2021-06-30 23-51-10](https://user-images.githubusercontent.com/63469151/124013069-7bb0bc00-d9ff-11eb-8a20-7707a5d6a6df.png)

- Robolectric test passing -- `DeveloperOptionsActivityTest`
![Screenshot from 2021-06-30 23-51-42](https://user-images.githubusercontent.com/63469151/124013108-88cdab00-d9ff-11eb-82fb-2e2a8ca38f2b.png)

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3331,https://api.github.com/repos/oppia/oppia-android/pulls/3331,https://github.com/oppia/oppia-android/pull/3331,closed,730,40,16,71,13,24,0,1,[],2021-06-16 19:18:34+00:00,2021-07-06 00:26:21+00:00,1660067.0,"19 days, 5:07:47","[{'comment_id': 653498258, 'comment_body': ""I think we can add a few more tests to check the hints and solutions' switch status. These can be similar to the ones we do for wifi switch in administrator controls. Additionally in the future (when the corresponding activities are made), we'll need to add tests related to opening of appropriate activity on option selection in this test file as well. "", 'comment_created': datetime.datetime(2021, 6, 17, 12, 2, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 653505508, 'comment_body': ""Okay. I'll add these tests and also check for failing tests."", 'comment_created': datetime.datetime(2021, 6, 17, 12, 12, 40, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 653877862, 'comment_body': 'I have added the test for the switch. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 6, 17, 19, 35, 48, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 654469168, 'comment_body': 'Aah, I think there was one more test involving config change. ', 'comment_created': datetime.datetime(2021, 6, 18, 14, 17, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 654517965, 'comment_body': 'Yes. But that test is feasible only after implementing the logic for showing hints and solution. We can add that test when we implement this or we can add the test now and mark it as **Ignore**.', 'comment_created': datetime.datetime(2021, 6, 18, 15, 23, 34, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 654761735, 'comment_body': 'Oh okay, maybe we can put it in place at the time of logic implementation. ', 'comment_created': datetime.datetime(2021, 6, 19, 7, 27, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 659224087, 'comment_body': 'Name these as per convention mentioned in this issue: #1587 ', 'comment_created': datetime.datetime(2021, 6, 26, 21, 8, 47, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 659224120, 'comment_body': 'Also possibly mention in alphabetical order.', 'comment_created': datetime.datetime(2021, 6, 26, 21, 9, 6, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 659224180, 'comment_body': 'Add `.` at the end.', 'comment_created': datetime.datetime(2021, 6, 26, 21, 9, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 660796639, 'comment_body': 'I was refactoring all the PRs and it came to my notice that these are unnecessary. I have removed them now.', 'comment_created': datetime.datetime(2021, 6, 29, 16, 50, 9, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 660796694, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 29, 16, 50, 15, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 662129599, 'comment_body': 'can we write a test case to check click operation on this switch?', 'comment_created': datetime.datetime(2021, 7, 1, 9, 23, 32, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 662133266, 'comment_body': 'Actually, the click operations are not implemented on any of the views in this PR. So, I think we cannot write tests to check click operation yet. WDYT?', 'comment_created': datetime.datetime(2021, 7, 1, 9, 28, 32, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 662139224, 'comment_body': 'ok, could you add here which issue will be tracking the user interaction?', 'comment_created': datetime.datetime(2021, 7, 1, 9, 36, 56, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 662139921, 'comment_body': 'Sure. will do that.', 'comment_created': datetime.datetime(2021, 7, 1, 9, 37, 56, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 662455157, 'comment_body': 'Added TODO. PTAL. The issue is #3397.', 'comment_created': datetime.datetime(2021, 7, 1, 17, 0, 15, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 662696455, 'comment_body': 'For this & related view models, this seems too non-specific. Please update the class KDocs to more specifically describe what the view model represents (since presumably its presence in the recycler view results in something changing for the UI displayed to the user).', 'comment_created': datetime.datetime(2021, 7, 2, 2, 31, 25, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 662696768, 'comment_body': 'This is technically still part of the public API of this view model, so it ought to have a KDoc.', 'comment_created': datetime.datetime(2021, 7, 2, 2, 32, 18, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 662696824, 'comment_body': 'What does the view model represent with regards to the UI? The KDoc should be more specific.', 'comment_created': datetime.datetime(2021, 7, 2, 2, 32, 30, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 662697192, 'comment_body': ""Mutability isn't needed here:\r\n\r\n```suggestion\r\n    return listOf(\r\n      DeveloperOptionsModifyLessonProgressViewModel(),\r\n      DeveloperOptionsViewLogsViewModel(),\r\n      DeveloperOptionsOverrideAppBehaviorsViewModel()\r\n    )\r\n```"", 'comment_created': datetime.datetime(2021, 7, 2, 2, 33, 48, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 662978311, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 2, 12, 32, 30, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 662978453, 'comment_body': 'KDoc update. PTAL.', 'comment_created': datetime.datetime(2021, 7, 2, 12, 32, 44, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 662978513, 'comment_body': 'KDoc added. PTAL.', 'comment_created': datetime.datetime(2021, 7, 2, 12, 32, 53, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 662978704, 'comment_body': 'KDoc updated. PTAL.', 'comment_created': datetime.datetime(2021, 7, 2, 12, 33, 14, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}]","[{'commit_sha': '5dc378feff9fd2e71ac113be8a1ca9e21445390c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a29b60f6ca83be1f4859da37f705f219f61457eb', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '483bc61c5d8d2c9b436b0f9a4e2984a76a901511', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72a0173381d55069792eb6fae1925a5b727560dc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6d697cd1209079a8c92630790a8579c4c0a8684', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da4a535fd491312f57fc41ea51b3630333ec0a59', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1bf92fbe105b39d5748f71f2b2e642bd93873a6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5917850889f1b2a19bc4f300140604fd07fcdd10', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be028fd941d50bfc613e0313885dc77c1b17bf5b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55bf1caaa1879eb8334201697f0c09d0b71867ad', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9cd1a83baabe53552a00634b00c8db11734dfc2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '853fdf963cc3c817e672a9edb22772e5c9e71a0d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1259636b7ed8787b1b1f6987db51241a0c4ebc6a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9738bcf6646b83dee9fe4ee64639d014a26f620c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdb2f5ec9856a7b4ebc3450ff7182be63b4ccfef', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ee761d2bd1c8d5cfcd263e4dc47dc9558bfd158', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ceb61c398de083352dd8fe98dea2a2e6c641025', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d928f5833d10abe9d34a76aba3a98d9ce8bae46', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20f8e4dd061c09310e25d2f324209b364f977623', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a134dcc70607a75dc82fecb09e8a72a8441d0cf', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79ac431c86da780030373f6d37584851f1cc5af1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c35003320531df76f2597152324187ad9dfe9f1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adf415275e3f8efa89b63a15ad54aadc526b8a5f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a1b7a1f08f3ee11f5405b69c3da6080352c30b8', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfed4c84416636cda36ebebb8953d78b6c8c6275', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4aad8f4c5a39d2733b1d2d506ad0207fbfb55d3', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4878e9328af2d0cc62c2df2300ddc9010ae551a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81f538e83b7a825390d75ae0daa8c3a0bc5ae92c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bda3cfffc7b03cae71de2445fcad46925a208a6d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3df7e3a28fc132dabc83014292ae28421d124386', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b731f914ced1d7c38c557437d8bdfb1f3b5a0c7c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06d0904af130684ca4e3f6ee766da384c82bc103', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5efd5d46ef5c245748743a8d9e7719956623e240', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74138b4f9b05b85fc8f4164277983e5305d0225d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08787e2d36e859a6800b7f518faf0aaddc30c18d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5222123f78f5d27c042242a10f7825902e8d999', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '882de713556e0a4ad49843b46032adac0f7126ac', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1d092ca1fdc2a81105b88db892be2fe05d4b452', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '154e849fe7b464d0dc2723d9f155a3e0f9697532', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5cecc8063e8447ea869bb9fd7db3ec926b91b11', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c4a72d97b2370793ad54a45df8823f095103976', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff2b35190b37fa56bb485ca286e2a933ef96954a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63b901d5cfa5cb2779ce3885a29afc1657bafdcc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce707ca9a6eb121d1a9d84f2825f52aed36bb3da', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd8cf75a514f8f4a7e5dbd91eea706846a26f258', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '761f2d48cf4548a4474a3b81b9e1ff5b65b44e1b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcafeb3018b1ea31c142c4e9c806c1e9fed7993c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6ae9024fb648c899700c941ec8c8e8a7226271b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '536f69fcc3f0866080ce71c27f1dfd9c92a0c8dc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64b8490d7ffdae27eb1556a19f71eab2f26e28fd', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b71a07944c4f27db9e684754e5a236b35adb98b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b164b4675f8493aecf16d5e99eb740d33c0201b8', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef11e7d619bcd1ae594508d25117efe1fea40fc3', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72f072ffafd093f9eb3c32134c2cbc5812360499', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '230978282dea3400aa1d0a36c9d9428be9231d4b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50a4354c67f92c202377d3dca614a0a57f908e2f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae3e08e0e84cf2916f85566c801a7039a471eec6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37f0bea78361cdadf0d523dc8d661ec1aaa60935', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b46679d2fe3eb1d2ca3f1a54f55eb49463dfe784', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbe858eabdf3eb357261dffd45684a35159498ce', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a1e41e933ec4c84a50b4a8f4b0798ab9bc8c909', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7d676af3976da0355dc7b907cb9bd8a564ee248', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70d9d4b815677bd40744ccd5a220c1b00126d49d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eea3c1767bf483f9fd3ce3ac2a3238b78a3bf632', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '357edca778518b25c3f075abbd7f3cc6058e0af1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2c16b8bd0d4f3e463b1308cd8422095869d2223', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc97928b850b72a98c1587f370972a885a410c0a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f7361b74f7faa8dcdcd478825f3b39d10eaad0b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd05ab0dbed9a1b6df57b43eae75053fffcc69600', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ce4e70583acdddc8d69792a0871f8a825e63712', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6e5cc86e2e80959db01f67a3e68f511b81319e0', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}]",Yash Raj,63469151,,User,,24,,4,14
673005663,Fix #3297: Implement Force Crash App Feature,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Fixes #3297: Implemented force crashing of app.

**Note for reviewers**
In `testDeveloperOptionsFragment_clickForceCrash_assertException` we have asserted the message of `exception.cause`. This is because Espresso throws `PerformException` which is caused by the `RuntimeException` which we are throwing. You can check out the references below:

- https://stackoverflow.com/questions/50563600/assert-exceptions-in-android-espresso-test
- https://stackoverflow.com/a/64922103

**Screenshots**

- Working
  <img width=""300"" height=""550""  src=""https://user-images.githubusercontent.com/63469151/122474379-bfa7c800-cfe0-11eb-8695-beaa91edff3f.gif"">
- Espresso tests -- `DeveloperOptuionsActivityTest`
![Screenshot from 2021-06-18 02-45-17](https://user-images.githubusercontent.com/63469151/122474565-0a294480-cfe1-11eb-9251-a373b98cd7b3.png)

- Robolectric tests -- `DeveloperOptuionsActivityTest`
![Screenshot from 2021-06-18 02-43-21](https://user-images.githubusercontent.com/63469151/122474598-16ad9d00-cfe1-11eb-8275-1b5edfabf368.png)


## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3339,https://api.github.com/repos/oppia/oppia-android/pulls/3339,https://github.com/oppia/oppia-android/pull/3339,closed,68,4,8,89,6,31,1,1,[{'name': 'PR: LGTM'}],2021-06-17 21:31:44+00:00,2021-07-07 06:27:42+00:00,1673758.0,"19 days, 8:55:58","[{'comment_id': 654475704, 'comment_body': 'Maybe -- `Force crash occurred`? ', 'comment_created': datetime.datetime(2021, 6, 18, 14, 26, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 654563383, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 18, 16, 44, 17, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 659224533, 'comment_body': 'Shift this to single like\r\n`class DeveloperOptionsActivity : InjectableAppCompatActivity(), ForceCrashListener {`', 'comment_created': datetime.datetime(2021, 6, 26, 21, 13, 35, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 659224587, 'comment_body': 'This is not getting used.', 'comment_created': datetime.datetime(2021, 6, 26, 21, 14, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 659224596, 'comment_body': 'Nit update\r\n`activity: AppCompatActivity,`', 'comment_created': datetime.datetime(2021, 6, 26, 21, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 659224604, 'comment_body': 'Nit update\r\n`activity: AppCompatActivity,`', 'comment_created': datetime.datetime(2021, 6, 26, 21, 14, 35, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 659224680, 'comment_body': '`Listener for Force Crash TextView click. `', 'comment_created': datetime.datetime(2021, 6, 26, 21, 15, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 660079332, 'comment_body': 'All public functions should have KDocs explaining what they are doing & how/when they should/could be called. Please make sure all public functions, classes, and fields in this & your other PRs have clear KDocs.', 'comment_created': datetime.datetime(2021, 6, 28, 20, 2, 11, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 660079647, 'comment_body': 'I suggest using a string literal, instead, since these are strings that are meant to be visually displayed to the user (& thus will be translated).', 'comment_created': datetime.datetime(2021, 6, 28, 20, 2, 39, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 660079995, 'comment_body': 'Please verify the message of the exception being thrown to ensure the correct runtime exception is being thrown.', 'comment_created': datetime.datetime(2021, 6, 28, 20, 3, 17, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 660080298, 'comment_body': ""Small adjustment to Rajat's:\r\n\r\n``Listener for when the 'force crash' button is clicked.``\r\n\r\n(note capitalization)"", 'comment_created': datetime.datetime(2021, 6, 28, 20, 3, 52, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 660080468, 'comment_body': ""This should also be documented, e.g. ``Called when the 'force crash' button is clicked by the user.``"", 'comment_created': datetime.datetime(2021, 6, 28, 20, 4, 9, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 660080814, 'comment_body': ""Perhaps: ``ForceCrashButtonClickListener`` might be a bit clearer as to what's being listened for. At the moment, this name could also be construed as listening for when a force crash happens, not when we want it to happen."", 'comment_created': datetime.datetime(2021, 6, 28, 20, 4, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 660080993, 'comment_body': ""Nit: the named argument isn't needed here since the variable name is fully self-documenting."", 'comment_created': datetime.datetime(2021, 6, 28, 20, 5, 4, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 660081290, 'comment_body': ""Ditto here--another public function that should have a KDoc.\r\n\r\nNote that one exception to this is override functions, but that doesn't apply in this case."", 'comment_created': datetime.datetime(2021, 6, 28, 20, 5, 33, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 660725885, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 29, 15, 22, 17, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 660726036, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 6, 29, 15, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 660726204, 'comment_body': 'Same as the above comment.', 'comment_created': datetime.datetime(2021, 6, 29, 15, 22, 37, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 660726298, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 29, 15, 22, 43, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 660726526, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 29, 15, 22, 58, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 660726680, 'comment_body': 'KDoc added.', 'comment_created': datetime.datetime(2021, 6, 29, 15, 23, 10, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 660727016, 'comment_body': 'Changed string resource to string literal.', 'comment_created': datetime.datetime(2021, 6, 29, 15, 23, 31, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 660727231, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 29, 15, 23, 46, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 660727542, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 29, 15, 24, 5, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 660727903, 'comment_body': 'Refactored.', 'comment_created': datetime.datetime(2021, 6, 29, 15, 24, 27, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 660728254, 'comment_body': 'Removed named arguments.', 'comment_created': datetime.datetime(2021, 6, 29, 15, 24, 47, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 660728560, 'comment_body': 'KDoc added.', 'comment_created': datetime.datetime(2021, 6, 29, 15, 25, 7, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 661232676, 'comment_body': ""First, KDocs should fill up as much space as they can before wrapping (at the 100 character line limit). Second, maybe instead of specifying a really implementation-specific detail like 'throws a RuntimeException' we could instead explain what's conceptually happening, e.g.:\r\n\r\n``This function crashes the app and will not return.``\r\n\r\nIn fact, you could even have it return Nothing since that's the designated Kotlin type for this exact circumstance."", 'comment_created': datetime.datetime(2021, 6, 30, 8, 12, 18, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 661233295, 'comment_body': 'Can this fit on one line? If so, prefer to keep it on one line.', 'comment_created': datetime.datetime(2021, 6, 30, 8, 13, 10, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 661748290, 'comment_body': 'Updated KDoc. Also, added `Nothing` as the return type of the function.', 'comment_created': datetime.datetime(2021, 6, 30, 19, 19, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 661748329, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 30, 19, 19, 6, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}]","[{'commit_sha': '5dc378feff9fd2e71ac113be8a1ca9e21445390c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a29b60f6ca83be1f4859da37f705f219f61457eb', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '483bc61c5d8d2c9b436b0f9a4e2984a76a901511', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72a0173381d55069792eb6fae1925a5b727560dc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6d697cd1209079a8c92630790a8579c4c0a8684', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da4a535fd491312f57fc41ea51b3630333ec0a59', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1bf92fbe105b39d5748f71f2b2e642bd93873a6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5917850889f1b2a19bc4f300140604fd07fcdd10', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be028fd941d50bfc613e0313885dc77c1b17bf5b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55bf1caaa1879eb8334201697f0c09d0b71867ad', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9cd1a83baabe53552a00634b00c8db11734dfc2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '853fdf963cc3c817e672a9edb22772e5c9e71a0d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1259636b7ed8787b1b1f6987db51241a0c4ebc6a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9738bcf6646b83dee9fe4ee64639d014a26f620c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdb2f5ec9856a7b4ebc3450ff7182be63b4ccfef', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ee761d2bd1c8d5cfcd263e4dc47dc9558bfd158', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ceb61c398de083352dd8fe98dea2a2e6c641025', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d928f5833d10abe9d34a76aba3a98d9ce8bae46', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20f8e4dd061c09310e25d2f324209b364f977623', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a134dcc70607a75dc82fecb09e8a72a8441d0cf', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79ac431c86da780030373f6d37584851f1cc5af1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c35003320531df76f2597152324187ad9dfe9f1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adf415275e3f8efa89b63a15ad54aadc526b8a5f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a1b7a1f08f3ee11f5405b69c3da6080352c30b8', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfed4c84416636cda36ebebb8953d78b6c8c6275', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4aad8f4c5a39d2733b1d2d506ad0207fbfb55d3', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4878e9328af2d0cc62c2df2300ddc9010ae551a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bc6dab985bda5b018f5ae0ef111d7919341dd6e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81f538e83b7a825390d75ae0daa8c3a0bc5ae92c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bda3cfffc7b03cae71de2445fcad46925a208a6d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3df7e3a28fc132dabc83014292ae28421d124386', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b731f914ced1d7c38c557437d8bdfb1f3b5a0c7c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06d0904af130684ca4e3f6ee766da384c82bc103', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5efd5d46ef5c245748743a8d9e7719956623e240', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74138b4f9b05b85fc8f4164277983e5305d0225d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08787e2d36e859a6800b7f518faf0aaddc30c18d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7dc04df577f76c573ef631136f7ccecb256d4558', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd545eb738f11c415337e1c014e76363851883f8d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5222123f78f5d27c042242a10f7825902e8d999', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '882de713556e0a4ad49843b46032adac0f7126ac', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3573802bbe7feb324b8845161f4476e528c9d96', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff6fb829bd51505c9f4c2dedacd5f995ecbd1cf2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bac4d37d3d6f5aefea1f9f8903a90483f19507d7', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1d092ca1fdc2a81105b88db892be2fe05d4b452', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d1901bb08465b8acfaa703c037423094c26f3b4', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '154e849fe7b464d0dc2723d9f155a3e0f9697532', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5cecc8063e8447ea869bb9fd7db3ec926b91b11', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c4a72d97b2370793ad54a45df8823f095103976', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '106d224ae0afc76151b74785c3aa54cb76ff6d89', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff2b35190b37fa56bb485ca286e2a933ef96954a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63b901d5cfa5cb2779ce3885a29afc1657bafdcc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce707ca9a6eb121d1a9d84f2825f52aed36bb3da', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd8cf75a514f8f4a7e5dbd91eea706846a26f258', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '761f2d48cf4548a4474a3b81b9e1ff5b65b44e1b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcafeb3018b1ea31c142c4e9c806c1e9fed7993c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6ae9024fb648c899700c941ec8c8e8a7226271b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '536f69fcc3f0866080ce71c27f1dfd9c92a0c8dc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64b8490d7ffdae27eb1556a19f71eab2f26e28fd', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f2f950c67604edf171ce4e50ec31d0a3f71020c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b71a07944c4f27db9e684754e5a236b35adb98b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b164b4675f8493aecf16d5e99eb740d33c0201b8', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef11e7d619bcd1ae594508d25117efe1fea40fc3', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72f072ffafd093f9eb3c32134c2cbc5812360499', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '230978282dea3400aa1d0a36c9d9428be9231d4b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50a4354c67f92c202377d3dca614a0a57f908e2f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae3e08e0e84cf2916f85566c801a7039a471eec6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37f0bea78361cdadf0d523dc8d661ec1aaa60935', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b46679d2fe3eb1d2ca3f1a54f55eb49463dfe784', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf75d97f1d445db5e1b96cc2e2b23008031d35e8', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbe858eabdf3eb357261dffd45684a35159498ce', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a1e41e933ec4c84a50b4a8f4b0798ab9bc8c909', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7d676af3976da0355dc7b907cb9bd8a564ee248', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae755bdd9b2b3fde5b92b34257fe7d1616c21017', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf5d696e162b379404603abbaeeba7ba91cde2f0', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70d9d4b815677bd40744ccd5a220c1b00126d49d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eea3c1767bf483f9fd3ce3ac2a3238b78a3bf632', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '357edca778518b25c3f075abbd7f3cc6058e0af1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '663ba9e986f593aa34ef5fc9ba040e91332e8b55', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0823f4aba49663dcb1ffa63fc0e8db1034f91894', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2c16b8bd0d4f3e463b1308cd8422095869d2223', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc97928b850b72a98c1587f370972a885a410c0a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f7361b74f7faa8dcdcd478825f3b39d10eaad0b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd05ab0dbed9a1b6df57b43eae75053fffcc69600', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ce4e70583acdddc8d69792a0871f8a825e63712', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04cf41e4d6d25f63d117d9ac6a1ac7ccbacdd428', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6e5cc86e2e80959db01f67a3e68f511b81319e0', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05d7616d68536ce683ae04a660f771031c1788a4', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3196463399a4659ffb3d4e1313494c78e8f275b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ca88ccfb417d7bda74cb37086038ad7a4eb2d14', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}]",Yash Raj,63469151,,User,,24,,4,14
678507912,Fix #3302 and #3307: Implement View Event Logs Feature,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Fixes #3302 and #3307: Implemented view event logs feature.

**Mock link:** https://xd.adobe.com/view/e8aa4198-3940-47f9-514a-f41cc54457f6-9e9b/screen/d5f8aa25-0482-41dd-ab67-5611fdc05ff3/

**Screenshots**

- UI
  <img width=""243"" height=""432"" src=""https://user-images.githubusercontent.com/63469151/123544385-a76a4280-d770-11eb-92f4-84be8c9dde3f.png""> 

- Espresso tests passing for `ViewEventLogsActivity`
![Screenshot from 2021-06-30 00-26-23](https://user-images.githubusercontent.com/63469151/123852535-0af39c00-d93a-11eb-9ba2-8ca6c601f470.png)

- Robolectric tests passing for `ViewEventLogsActivity`
![Screenshot from 2021-06-30 00-27-14](https://user-images.githubusercontent.com/63469151/123852590-1a72e500-d93a-11eb-8151-9c81c8c2b7af.png)


## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3376,https://api.github.com/repos/oppia/oppia-android/pulls/3376,https://github.com/oppia/oppia-android/pull/3376,closed,1233,16,27,101,20,98,1,1,[{'name': 'PR: LGTM'}],2021-06-27 12:25:47+00:00,2021-07-09 05:13:41+00:00,1010874.0,"11 days, 16:47:54","[{'comment_id': 660457910, 'comment_body': ""This doesn't seem very clear. Since the application component is for `debug` by default, we should clearly tell what to remove and what to add. I think a better way of doing this can be two different lines - one for the dependencies that we have to remove and one for the dependencies that we have to add. \r\nIt can be as simple as:\r\n```\r\nAt the time of building the app in prod mode - \r\nRemove: DeveloperOptionsStarterModule, DebugLogReportingModule \r\nAdd: LogReportingModule\r\n```"", 'comment_created': datetime.datetime(2021, 6, 29, 9, 48, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 660460505, 'comment_body': '```suggestion\r\n/** Listener for when an activity should route to [ViewEventLogsActivity]. */\r\n```', 'comment_created': datetime.datetime(2021, 6, 29, 9, 51, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 660462776, 'comment_body': ""I think it's best to directly use `.toLowerCase().capitalize()` since it's only getting used once in the file. \r\nAlso, both these things have deprecated in the latest version of Kotlin. So: \r\n```\r\ntoLowerCase() --> lowercase()\r\ncapitalize() --> replaceFirstChar(Char::uppercase)\r\n```"", 'comment_created': datetime.datetime(2021, 6, 29, 9, 54, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 660669297, 'comment_body': 'EOF missing.', 'comment_created': datetime.datetime(2021, 6, 29, 14, 22, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 660669772, 'comment_body': 'EOF missing. ', 'comment_created': datetime.datetime(2021, 6, 29, 14, 23, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 660669992, 'comment_body': 'EOF missing. ', 'comment_created': datetime.datetime(2021, 6, 29, 14, 23, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 660671257, 'comment_body': ""I don't think we need a debug exception logger. Is there something I'm missing here?"", 'comment_created': datetime.datetime(2021, 6, 29, 14, 24, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 660813712, 'comment_body': 'we can remove this if not using', 'comment_created': datetime.datetime(2021, 6, 29, 17, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 660819557, 'comment_body': 'There are two things with the `launch`:\r\n1. launch using class - `launch(Class<A> activityClass)`\r\n2. launch using intent - `launch(Intent startActivityIntent)`\r\n\r\nWe generally pass intent when we want to pass some argument else we go with the passing class. So, as here we are not passing any argument so we can launch using class. \r\n', 'comment_created': datetime.datetime(2021, 6, 29, 17, 22, 45, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 660824232, 'comment_body': 'named arguments `count`', 'comment_created': datetime.datetime(2021, 6, 29, 17, 28, 40, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 660828647, 'comment_body': 'Correct me if I am wrong here, \r\nin condition `contextIsNull` no logs will be displayed, right?\r\n\r\nIf yes, we can rename the test as `testViewEventLogsActivity_contextIsNull_logsAreNotDisplayed`', 'comment_created': datetime.datetime(2021, 6, 29, 17, 33, 32, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 660874429, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 29, 18, 41, 27, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 660874644, 'comment_body': 'Changed to class approach.', 'comment_created': datetime.datetime(2021, 6, 29, 18, 41, 45, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 660874778, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 6, 29, 18, 41, 56, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 660875713, 'comment_body': 'Is it affecting the test result shown in the earlier screenshot in the PR description? ', 'comment_created': datetime.datetime(2021, 6, 29, 18, 43, 20, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 660875892, 'comment_body': 'Ah. Actually, when the event context is null then the **context field** is not displayed. The name of the test may have been confusing so I have renamed it to `testViewEventLogsActivity_contextIsNull_contextIsNotDisplayed`. Does this look good?', 'comment_created': datetime.datetime(2021, 6, 29, 18, 43, 36, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 660880450, 'comment_body': 'No. I have run the tests again in Espresso as well as Robolectric. I have also updated the screenshots in the PR description.', 'comment_created': datetime.datetime(2021, 6, 29, 18, 50, 38, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 660883112, 'comment_body': 'bit confused with `contextIsNotDisplayed`, what does context implies here? ', 'comment_created': datetime.datetime(2021, 6, 29, 18, 54, 39, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 660888496, 'comment_body': '`context` here is a property of `EventLog`. You can see below: https://github.com/oppia/oppia-android/blob/a918b1cf905ea27dabe8cb35da825e94cd6d8b7b/model/src/main/proto/oppia_logger.proto#L20-L35\r\nWe are showing list of `event logs` and each of the `event log item` contains of four fields -- `time`, `priority`, `context` and `action name`.Does this clarify?', 'comment_created': datetime.datetime(2021, 6, 29, 19, 2, 37, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 660890432, 'comment_body': ""ok, let's keep the name intact. "", 'comment_created': datetime.datetime(2021, 6, 29, 19, 5, 39, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 660917964, 'comment_body': ""This is getting used at two places but `toLowerCase` isn't required at one of them (context). We can keep this for splitting + capitalizing and do the lowercasing only when needed. Also, as suggested above -- `capitalize() --> replaceFirstChar(Char::uppercase)`"", 'comment_created': datetime.datetime(2021, 6, 29, 19, 50, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 660918802, 'comment_body': 'ditto as above. ', 'comment_created': datetime.datetime(2021, 6, 29, 19, 51, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 660921990, 'comment_body': '@yashraj-01 have you confirmed the non-displaying of context if null from @rt4914? ', 'comment_created': datetime.datetime(2021, 6, 29, 19, 57, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 661550528, 'comment_body': '@Sarthak2601 @yashraj-01 If context is not available we can hide that specific textview.', 'comment_created': datetime.datetime(2021, 6, 30, 14, 50, 24, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 661764801, 'comment_body': 'KDoc updated. PTAL.', 'comment_created': datetime.datetime(2021, 6, 30, 19, 46, 52, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 661764856, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 30, 19, 46, 57, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 661765915, 'comment_body': 'Removed method `capitalizeWord` and directly used `.toLowerCase().capitalize()`.\r\n\r\nNow, I got the following warning when I changed `toLowerCase()` --> `lowercase()`. Can you please clarify what does this mean?\r\n![Screenshot from 2021-07-01 01-15-05](https://user-images.githubusercontent.com/63469151/124022299-4198e780-da0a-11eb-820b-c4cd4f781660.png)\r\nSame for `capitalize()` --> `replaceFirstChar(Char::uppercase)`', 'comment_created': datetime.datetime(2021, 6, 30, 19, 48, 48, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 661766070, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2021, 6, 30, 19, 49, 3, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 661766183, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2021, 6, 30, 19, 49, 13, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 661766256, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2021, 6, 30, 19, 49, 20, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 661766951, 'comment_body': ""Yes, we don't need this in our feature but we need this to build the app as there are several instances where it is used.\r\n![Screenshot from 2021-07-01 01-12-23](https://user-images.githubusercontent.com/63469151/124022485-7a38c100-da0a-11eb-8575-ad2bc1ddab8c.png)\r\n"", 'comment_created': datetime.datetime(2021, 6, 30, 19, 50, 31, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 661768093, 'comment_body': 'Actually we need `toLowerCase` for `context` as well. See the original text below.\r\n<img width=""243"" height=""432"" src=""https://user-images.githubusercontent.com/63469151/124022593-a0f6f780-da0a-11eb-9195-59695fbedd2d.jpg""> \r\n', 'comment_created': datetime.datetime(2021, 6, 30, 19, 52, 31, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 661768803, 'comment_body': 'Explained in the previous comment.', 'comment_created': datetime.datetime(2021, 6, 30, 19, 53, 46, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 661770465, 'comment_body': 'Thanks for the clarification @rt4914 ', 'comment_created': datetime.datetime(2021, 6, 30, 19, 56, 31, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 661952811, 'comment_body': 'In that case you could provide the same binding in the debug module as the prod module for the exception logger so that dependencies get the real implementation.', 'comment_created': datetime.datetime(2021, 7, 1, 3, 56, 20, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 661952936, 'comment_body': 'We should always pass around immutable structures, so ``List<EventLog>`` in this case.', 'comment_created': datetime.datetime(2021, 7, 1, 3, 56, 50, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 661952992, 'comment_body': 'Nit: extra space. Please remove.', 'comment_created': datetime.datetime(2021, 7, 1, 3, 57, 5, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 661953138, 'comment_body': 'A more Kotlin-idiomatic way would be:\r\n\r\n```kotlin\r\nprivate val eventList = mutableListOf<EventLog>()\r\n```', 'comment_created': datetime.datetime(2021, 7, 1, 3, 57, 32, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 661953228, 'comment_body': 'Also, this KDoc should specify how this implementation differs from the production version.', 'comment_created': datetime.datetime(2021, 7, 1, 3, 57, 53, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 661953615, 'comment_body': ""This function should also have a KDoc since it's part of the public API of the listener."", 'comment_created': datetime.datetime(2021, 7, 1, 3, 59, 38, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 661953839, 'comment_body': ""All non-private members of a class should have KDocs since they're part of that class's exported API. The KDocs should explain what the function does to provide more context to the caller on how to properly use it."", 'comment_created': datetime.datetime(2021, 7, 1, 4, 0, 29, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 661954274, 'comment_body': ""'processPriority' isn't really clear--what does 'process' mean here/what's actually happening? Ditto for the other pubic API functions here."", 'comment_created': datetime.datetime(2021, 7, 1, 4, 1, 49, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 661980965, 'comment_body': 'As mentioned by Ben in the earlier comment, you can provide the prod implementation here instead of creating a debug exception logger.', 'comment_created': datetime.datetime(2021, 7, 1, 5, 15, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 661981058, 'comment_body': 'Aah, okay. ', 'comment_created': datetime.datetime(2021, 7, 1, 5, 15, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 661982533, 'comment_body': 'Could you update Kotlin and see if this still persists? ', 'comment_created': datetime.datetime(2021, 7, 1, 5, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 662981033, 'comment_body': 'Kotlin is already updated. So, I think these new methods are not available yet. WDYT?', 'comment_created': datetime.datetime(2021, 7, 2, 12, 37, 9, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 663006018, 'comment_body': 'Removed `DebugExceptionLogger` and provided prod exception logger as binding here.', 'comment_created': datetime.datetime(2021, 7, 2, 13, 17, 36, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 663006096, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 2, 13, 17, 44, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 663006521, 'comment_body': 'Changed to `List<EventLog>`', 'comment_created': datetime.datetime(2021, 7, 2, 13, 18, 21, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 663007048, 'comment_body': 'Nit: removed extra space.\r\nUpdated KDoc. PTAL.', 'comment_created': datetime.datetime(2021, 7, 2, 13, 19, 10, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 663007289, 'comment_body': 'Changed to `mutableListOf<EventLog>()`', 'comment_created': datetime.datetime(2021, 7, 2, 13, 19, 31, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 663007431, 'comment_body': 'KDoc added. PTAL.', 'comment_created': datetime.datetime(2021, 7, 2, 13, 19, 44, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 663007637, 'comment_body': 'KDoc added. PTAL.', 'comment_created': datetime.datetime(2021, 7, 2, 13, 20, 4, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 663008381, 'comment_body': 'Renamed function to `formatPriorityString`. SImilarly renamed other functions as well. Also, added KDoc to explain what it does. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 7, 2, 13, 21, 12, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 663318952, 'comment_body': 'Yeah, as discussed in the meeting -- makes sense! ', 'comment_created': datetime.datetime(2021, 7, 3, 5, 11, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 663329303, 'comment_body': ""I think it should be more towards what the function will essentially do and not when it'll be called. "", 'comment_created': datetime.datetime(2021, 7, 3, 7, 8, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 663329972, 'comment_body': 'Kdoc?', 'comment_created': datetime.datetime(2021, 7, 3, 7, 15, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 663352586, 'comment_body': 'Added. PTAL.', 'comment_created': datetime.datetime(2021, 7, 3, 11, 10, 58, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 663352615, 'comment_body': 'KDoc Updated. PTAL.', 'comment_created': datetime.datetime(2021, 7, 3, 11, 11, 14, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 663353740, 'comment_body': '@BenHenning @Sarthak2601 I have created this library to provide the prod exception logger as `deps` to `logging:debug_module`. Now, since it is used only here, is it the best way to do it? If no, can you please suggest a better approach? If yes, then should we add a TODO here and file an issue tracking to remove this if and when we will create a `DebugExceptionLogger` in the future? WDYT?', 'comment_created': datetime.datetime(2021, 7, 3, 11, 22, 25, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 663374713, 'comment_body': 'In latest develop this entire list has been made alphabetical order. Please make this correct.', 'comment_created': datetime.datetime(2021, 7, 3, 15, 2, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 663486401, 'comment_body': 'I think adding a todo here along with an issue is enough. However, deferring to @BenHenning for final call on this. ', 'comment_created': datetime.datetime(2021, 7, 4, 11, 4, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 663486665, 'comment_body': 'Suggested change: `Routes the user to <screen_name> for <use-case>`. ', 'comment_created': datetime.datetime(2021, 7, 4, 11, 6, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 664083378, 'comment_body': '@yashraj-01 PTAL', 'comment_created': datetime.datetime(2021, 7, 5, 18, 30, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 664083487, 'comment_body': 'Remove the comment.', 'comment_created': datetime.datetime(2021, 7, 5, 18, 30, 31, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 664084229, 'comment_body': 'One suggestion, we should separate the tests into `DeveloperOptionsActivityTest` and `DeveloperOptionsFragmentTest`.', 'comment_created': datetime.datetime(2021, 7, 5, 18, 32, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 664084388, 'comment_body': 'Separate tests into `ViewEventLogsActivityTest ` and `ViewEventLogsFragmentTest `', 'comment_created': datetime.datetime(2021, 7, 5, 18, 33, 28, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 664170323, 'comment_body': ""I think you're on the right track, but maybe a bit too prescriptive. All the listener tells us is what the user intends to do, not what the implementation will do in response to that. Consider the following alternative:\r\n\r\n```kotlin\r\n/** Listener for when the user wants to view event logs. */\r\ninterface RouteToViewEventLogsListener {\r\n  /** Called when the user indicates that they want to view event logs. */\r\n  fun routeToViewEventLogs()\r\n}\r\n```\r\n\r\nThe difference here is we are documenting that we're reacting to the user's input. The fact that we will choose to route to ``ViewEventLogsActivity`` is an implementation detail of one particular implementation of this listener--there could also be other implementations that choose to do something different. Does the difference here make sense?\r\n\r\nPlease try to follow this pattern for other listener & callback methods when documenting them."", 'comment_created': datetime.datetime(2021, 7, 6, 0, 51, 30, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 664170699, 'comment_body': ""```suggestion\r\n   * Processes timestamp and converts it to a proper date and time string format to show in the\r\n   * event log item.\r\n```\r\n\r\nMethod KDocs should also use action verbs. However, this is missing details on what's returned, so it may be clearer just to say:\r\n\r\n```suggestion\r\n   * Returns the event log timestamp in a human readable format.\r\n```"", 'comment_created': datetime.datetime(2021, 7, 6, 0, 53, 13, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 664170748, 'comment_body': 'Ditto elsewhere for other new KDocs.', 'comment_created': datetime.datetime(2021, 7, 6, 0, 53, 29, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 664171635, 'comment_body': ""Some points:\r\n- Will a debug version of the logger be added in a future PR as part of this project?\r\n- Exposing the implementation to the logging package doesn't seem necessary to me--why not have a debug_module within the firebase package similar to how there's a prod_module?\r\n- We now have 2 packages with FirebaseExceptionLogger listed as a source--that can result in redundant compilation (at best) and one version violations (at worst). You need to update the impl package to depend on this new library & remove the FirebaseExceptionLogger file from impl's srcs list"", 'comment_created': datetime.datetime(2021, 7, 6, 0, 57, 26, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 664172125, 'comment_body': ""Per my other comment, this might be a nice change to make both to /logging & /logging/firebase: having distinct prod_impl & debug_impl packages to more clearly differentiate dependencies. For cases when a dependency is both, prefer to name it prod_impl since it's always fine to use prod impls in debug & testing scenarios, but never vice versa."", 'comment_created': datetime.datetime(2021, 7, 6, 0, 59, 36, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 664520061, 'comment_body': 'KDoc updated. PTAL.', 'comment_created': datetime.datetime(2021, 7, 6, 12, 44, 10, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 664520294, 'comment_body': 'Arranged it alphabetically. PTAL.', 'comment_created': datetime.datetime(2021, 7, 6, 12, 44, 30, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 664520397, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 7, 6, 12, 44, 37, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 664520855, 'comment_body': 'As per discussion, I have added the TODO and filed an issue for the same #3418. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 7, 6, 12, 45, 17, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 664521033, 'comment_body': 'As per discussion, I have added the TODO and filed an issue for the same #3419. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 7, 6, 12, 45, 30, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 664521368, 'comment_body': 'KDocs updated. PTAL.', 'comment_created': datetime.datetime(2021, 7, 6, 12, 46, 1, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 664624308, 'comment_body': ""Thanks @BenHenning for the clarification on KDocs. I'll try my best to follow it elsewhere. For this case I have have updated the KDoc. PTAL."", 'comment_created': datetime.datetime(2021, 7, 6, 14, 46, 53, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 664627507, 'comment_body': ""- No, there won't be a debug exception logger as part of this project.\r\n- From what I have understood from the second and third comment, I think we should move the `DebugEventLogger` and `DebugLogreportingModule` in the `logging/firebase` base package alongside the prod impls. Then, we will crate a `debug_impl` and `debug_module` bazel libraries similar to the prod ones. This way we are not exposing the `FirebaseExceptionLogger` to `logging` package.\r\n\r\nI have made the changes as stated above. PTAL. Thanks."", 'comment_created': datetime.datetime(2021, 7, 6, 14, 50, 27, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 664628104, 'comment_body': 'Got it. Thanks for the suggestion.', 'comment_created': datetime.datetime(2021, 7, 6, 14, 51, 7, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 665067634, 'comment_body': '```suggestion\r\n    return eventList.map {\r\n      EventLogItemViewModel(it, oppiaDateTimeFormatter)\r\n    }.reversed()\r\n```\r\n\r\nMore Kotlin-idiomatic alternative since it avoids using a mutable list.', 'comment_created': datetime.datetime(2021, 7, 7, 6, 3, 42, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665068398, 'comment_body': 'Suggest also using prod_module_visibility here as well since this is effectively a drop-in replacement for a prod module & not actually an API library.', 'comment_created': datetime.datetime(2021, 7, 7, 6, 5, 41, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665217621, 'comment_body': 'That makes sense. Change done. Thanks.', 'comment_created': datetime.datetime(2021, 7, 7, 9, 47, 44, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 665217747, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 7, 9, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 665274015, 'comment_body': 'I think only keeping the` routes the user` line makes more sense than adding the `called when button is clicked`. ', 'comment_created': datetime.datetime(2021, 7, 7, 11, 13, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 665533392, 'comment_body': 'This sounds like a part of the project so could you assign [this](https://github.com/oppia/oppia-android/issues/3418) issue to yourself or can we do this in this PR only? ', 'comment_created': datetime.datetime(2021, 7, 7, 16, 32, 32, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 665533924, 'comment_body': 'Also, why are we creating a separate issue for this? Is there any on going work in other PR which are stacked or something?', 'comment_created': datetime.datetime(2021, 7, 7, 16, 33, 16, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 665535370, 'comment_body': 'ditto', 'comment_created': datetime.datetime(2021, 7, 7, 16, 35, 19, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 665536593, 'comment_body': 'Add 1 more test \r\n\r\n```kt\r\nfun testViewEventLogsActivity_configChange_displaysEventLogsList()\r\n```', 'comment_created': datetime.datetime(2021, 7, 7, 16, 37, 1, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 665536692, 'comment_body': 'ditto for others', 'comment_created': datetime.datetime(2021, 7, 7, 16, 37, 11, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 665539160, 'comment_body': 'add kdoc why this function', 'comment_created': datetime.datetime(2021, 7, 7, 16, 40, 22, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 665668428, 'comment_body': 'KDoc added. PTAL.', 'comment_created': datetime.datetime(2021, 7, 7, 20, 0, 18, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 665668532, 'comment_body': 'Tests added. PTAL.', 'comment_created': datetime.datetime(2021, 7, 7, 20, 0, 29, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 665671256, 'comment_body': 'Actually, I have already added the tests to the activity test file. We just have to separate them. But since the tests span across multiple PRs it might cause issues. Also, I still have one pending PR for Milestone1 so I thought we could do this later as I think this does not block the PR.', 'comment_created': datetime.datetime(2021, 7, 7, 20, 5, 12, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 665671427, 'comment_body': 'Explained above. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 7, 7, 20, 5, 30, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 666021676, 'comment_body': 'Suggested alteration to name:\r\n\r\n```testDeveloperOptionsFragment_clickForceCrash_throwsRuntimeException``\r\n\r\nSlightly clearer & more consistent with similar cases when exceptions are thrown. Ditto for test below.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 21, 18, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 666296810, 'comment_body': 'Done. Also, thanks for the review.', 'comment_created': datetime.datetime(2021, 7, 8, 15, 24, 31, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}]","[{'commit_sha': '5dc378feff9fd2e71ac113be8a1ca9e21445390c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a29b60f6ca83be1f4859da37f705f219f61457eb', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '483bc61c5d8d2c9b436b0f9a4e2984a76a901511', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72a0173381d55069792eb6fae1925a5b727560dc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6d697cd1209079a8c92630790a8579c4c0a8684', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da4a535fd491312f57fc41ea51b3630333ec0a59', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1bf92fbe105b39d5748f71f2b2e642bd93873a6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5917850889f1b2a19bc4f300140604fd07fcdd10', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be028fd941d50bfc613e0313885dc77c1b17bf5b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55bf1caaa1879eb8334201697f0c09d0b71867ad', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9cd1a83baabe53552a00634b00c8db11734dfc2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '853fdf963cc3c817e672a9edb22772e5c9e71a0d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1259636b7ed8787b1b1f6987db51241a0c4ebc6a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9738bcf6646b83dee9fe4ee64639d014a26f620c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdb2f5ec9856a7b4ebc3450ff7182be63b4ccfef', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ee761d2bd1c8d5cfcd263e4dc47dc9558bfd158', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ceb61c398de083352dd8fe98dea2a2e6c641025', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d928f5833d10abe9d34a76aba3a98d9ce8bae46', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20f8e4dd061c09310e25d2f324209b364f977623', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a134dcc70607a75dc82fecb09e8a72a8441d0cf', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79ac431c86da780030373f6d37584851f1cc5af1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c35003320531df76f2597152324187ad9dfe9f1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adf415275e3f8efa89b63a15ad54aadc526b8a5f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a1b7a1f08f3ee11f5405b69c3da6080352c30b8', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfed4c84416636cda36ebebb8953d78b6c8c6275', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4aad8f4c5a39d2733b1d2d506ad0207fbfb55d3', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4878e9328af2d0cc62c2df2300ddc9010ae551a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81f538e83b7a825390d75ae0daa8c3a0bc5ae92c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bda3cfffc7b03cae71de2445fcad46925a208a6d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3df7e3a28fc132dabc83014292ae28421d124386', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b731f914ced1d7c38c557437d8bdfb1f3b5a0c7c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06d0904af130684ca4e3f6ee766da384c82bc103', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5efd5d46ef5c245748743a8d9e7719956623e240', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74138b4f9b05b85fc8f4164277983e5305d0225d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08787e2d36e859a6800b7f518faf0aaddc30c18d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5222123f78f5d27c042242a10f7825902e8d999', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '882de713556e0a4ad49843b46032adac0f7126ac', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1d092ca1fdc2a81105b88db892be2fe05d4b452', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '154e849fe7b464d0dc2723d9f155a3e0f9697532', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5cecc8063e8447ea869bb9fd7db3ec926b91b11', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c4a72d97b2370793ad54a45df8823f095103976', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff2b35190b37fa56bb485ca286e2a933ef96954a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63b901d5cfa5cb2779ce3885a29afc1657bafdcc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce707ca9a6eb121d1a9d84f2825f52aed36bb3da', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd8cf75a514f8f4a7e5dbd91eea706846a26f258', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '761f2d48cf4548a4474a3b81b9e1ff5b65b44e1b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcafeb3018b1ea31c142c4e9c806c1e9fed7993c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6ae9024fb648c899700c941ec8c8e8a7226271b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '536f69fcc3f0866080ce71c27f1dfd9c92a0c8dc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64b8490d7ffdae27eb1556a19f71eab2f26e28fd', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b71a07944c4f27db9e684754e5a236b35adb98b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb0da7d05844ef5590dceebd730e73cfb7cdbfe1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c727b2f349b383135bd980d64dfd63cd99bf3bba', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b164b4675f8493aecf16d5e99eb740d33c0201b8', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb53c5ee1d052e7d097bdd4d02a458b894d17e06', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad63da9ceb8a21882803cef79c28b7502f28c567', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe07b89c406bc3937bf5e44677b1e76084964cd4', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef11e7d619bcd1ae594508d25117efe1fea40fc3', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72f072ffafd093f9eb3c32134c2cbc5812360499', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '230978282dea3400aa1d0a36c9d9428be9231d4b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50a4354c67f92c202377d3dca614a0a57f908e2f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae3e08e0e84cf2916f85566c801a7039a471eec6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e65f12d51448cf0a24c5b85a3fa60dcb79d114a2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37f0bea78361cdadf0d523dc8d661ec1aaa60935', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b46679d2fe3eb1d2ca3f1a54f55eb49463dfe784', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbe858eabdf3eb357261dffd45684a35159498ce', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a1e41e933ec4c84a50b4a8f4b0798ab9bc8c909', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7d676af3976da0355dc7b907cb9bd8a564ee248', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdaa05f90cf53c10e7cb8b283a59f2fee44dec48', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c232bcc3e57eb0757e91af8944cfe9903302626', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70d9d4b815677bd40744ccd5a220c1b00126d49d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eea3c1767bf483f9fd3ce3ac2a3238b78a3bf632', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '357edca778518b25c3f075abbd7f3cc6058e0af1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cb33e3e0859830b649875cc9bd8cf6c7c35a595', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6892c1d710a1671f63d77b2365294c7043232631', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2c16b8bd0d4f3e463b1308cd8422095869d2223', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc97928b850b72a98c1587f370972a885a410c0a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32529d45217c5377ab93f1205e73eafa39766c71', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f7361b74f7faa8dcdcd478825f3b39d10eaad0b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63877c723391477c4f239e04961abdbe6df8711e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd05ab0dbed9a1b6df57b43eae75053fffcc69600', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ce4e70583acdddc8d69792a0871f8a825e63712', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6e5cc86e2e80959db01f67a3e68f511b81319e0', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8df1ac9c8baa307d369716f6aa767cfdee3b37e9', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e6a70b15a718f73e1295742024fb176dd413215', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c51317c9782530b23608bef28260b7957531c29a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c189b0caf362bd7d037f52dcd0d09ab096a03e7', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c00619a5adc48dd490ae189cd9b298a827018a7', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85651f03f63ad3083512ad65148ee7fdf0be4fc2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c613cb939d58f8fd937e60e7afe842dfe31bf21', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20c05aacfe5faf46248f35587ba508858b2b1b14', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bb7b7ff271ba8195e050a749f62a08464e1bc8e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e30f856c9269d8915e941ab7dab1c24f66671a7', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d7f67fe26880b50cc1c3aa81f76efecaeec8eb0', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa0b77d0c5e39894a2580210832d373f45a47826', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '628d5290837facd37e38d6195d7d384c92f0ed00', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05175d40f6681fea1c1f0f1e0f43bda3fc7e9c0e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f9b9f47f5385a83eae5b9b5ba3dc1727a1a6086', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dc8352df1038abe200c2254b6df8621aa7eef5f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc616e3facf712b7a13ceebc7698db9989100e1a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc316bce1d400bd065a3e8320a3deb910c40c1ad', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}]",Yash Raj,63469151,,User,,24,,4,14
673934537,"Fix #3298, #3299 and #3301: Introduce UI for MarkChaptersCompleted, MarkStoriesCompleted and MarkTopicsCompleted","<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Fixes #3298, #3299 and #3301: Introduced UI for MarkChaptersCompleted, MarkStoriesCompleted and MarkTopicsCompleted.

**Note:** 

- This PR only introduces the UI and the logic for displaying the list of chapters/stories/topics. All the interaction and modifying progress logic will be tracked by issues #3303, #3305 and #3306.

- In this PR I have added all the newly added kotlin files to `test_file_exemptions.textproto` except:

1. `DeveloperOptionsActivity`
2. `MarkChaptersCompletedActivity`
3. `MarkStoriesCompletedActivity`
4. `MarkTopicsCompletedActivity`
5. `ViewEventLogsActivity`

- This is to prevent CI checks from failing.

**Mock links:** 

| MarkChaptersCompleted | MarkStoriesCompleted | MarkTopicsCompleted |
|:---:|:---:|:---:|
| https://xd.adobe.com/view/e8aa4198-3940-47f9-514a-f41cc54457f6-9e9b/screen/ae50eed5-c5c5-4fc4-b5a8-fef1748f782a/ | https://xd.adobe.com/view/e8aa4198-3940-47f9-514a-f41cc54457f6-9e9b/screen/8a5fe55c-6244-4702-970d-97eea6f3bb2a/ | https://xd.adobe.com/view/e8aa4198-3940-47f9-514a-f41cc54457f6-9e9b/screen/db9d6aaf-5588-4963-8f32-1351677bcf47/ |

**Screenshots**
| MarkChaptersCompleted | MarkStoriesCompleted | MarkTopicsCompleted |
|:---:|:---:|:---:|
| <img width=""243"" height=""432"" src=""https://user-images.githubusercontent.com/63469151/122816554-83cc7580-d2f4-11eb-8522-208fc183179d.gif"">  | <img width=""243"" height=""432"" src=""https://user-images.githubusercontent.com/63469151/122816661-a52d6180-d2f4-11eb-9c5a-ef4b2cb7a038.gif""> | <img width=""243"" height=""432"" src=""https://user-images.githubusercontent.com/63469151/122816725-bbd3b880-d2f4-11eb-804d-659b011bd23f.gif""> |

- `DeveloperOptionsActivityTest`

| Espresso | Robolectric |
|:---:|:---:|
| ![Screenshot from 2021-07-07 00-11-42](https://user-images.githubusercontent.com/63469151/124651178-3c2f1780-deb8-11eb-811d-2348ee656f78.png) | ![Screenshot from 2021-07-07 00-12-57](https://user-images.githubusercontent.com/63469151/124651294-5b2da980-deb8-11eb-9f9f-67270236bed9.png) |

- `MarkChaptersCompletedActivityTest`

| Espresso | Robolectric |
|:---:|:---:|
| ![Screenshot from 2021-07-06 02-32-45](https://user-images.githubusercontent.com/63469151/124522690-c3758000-de11-11eb-8be1-a3d52c1d2597.png) | ![Screenshot from 2021-07-06 03-50-05](https://user-images.githubusercontent.com/63469151/124522709-d5572300-de11-11eb-949a-d35214717c17.png) |

- `MarkStoriesCompletedActivityTest`

| Espresso | Robolectric |
|:---:|:---:|
| ![Screenshot from 2021-07-07 00-19-02](https://user-images.githubusercontent.com/63469151/124651865-15251580-deb9-11eb-92c2-167acedefb5b.png) | ![Screenshot from 2021-07-07 00-19-34](https://user-images.githubusercontent.com/63469151/124651892-1e15e700-deb9-11eb-957b-b9737302397a.png) |

- `MarkTopicsCompletedActivityTest`

| Espresso | Robolectric |
|:---:|:---:|
| ![Screenshot from 2021-07-07 00-25-43](https://user-images.githubusercontent.com/63469151/124652786-23276600-deba-11eb-8e9f-b65f59e409e7.png) | ![Screenshot from 2021-07-07 00-26-15](https://user-images.githubusercontent.com/63469151/124652816-2ae70a80-deba-11eb-95c8-f29e24042999.png) |

- Robolectric test results for `ModifyLessonProgressControllerTest`
![Screenshot from 2021-07-05 22-50-48](https://user-images.githubusercontent.com/63469151/124503818-ec7f1c00-dde3-11eb-9cdd-001714858fc3.png)

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3347,https://api.github.com/repos/oppia/oppia-android/pulls/3347,https://github.com/oppia/oppia-android/pull/3347,closed,4632,8,57,133,21,52,1,2,[{'name': 'PR: LGTM'}],2021-06-19 21:11:51+00:00,2021-07-10 14:50:14+00:00,1791503.0,"20 days, 17:38:23","[{'comment_id': 658913343, 'comment_body': 'we can skip such named arguments where the named argument is the same as the argument.', 'comment_created': datetime.datetime(2021, 6, 25, 17, 4, 29, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 658914207, 'comment_body': 'a helper function in this file is helpful same as we have in other test files. \r\nRefer from - `DeveloperOptionsActivityTest`', 'comment_created': datetime.datetime(2021, 6, 25, 17, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 658914659, 'comment_body': '```suggestion\r\n  fun testMarkChaptersCompletedActivity_configChange_chapterListIsVisible() {\r\n```', 'comment_created': datetime.datetime(2021, 6, 25, 17, 6, 53, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 658916057, 'comment_body': 'Found something interesting about `Select-Deselect`. \r\n\r\nGoogle Defination\r\n```\r\nDeselect is the real antonym of select. Unselect is only used when talking about computers. \r\n```\r\n\r\nAlso, no need of `then`', 'comment_created': datetime.datetime(2021, 6, 25, 17, 9, 16, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 658918430, 'comment_body': ""though this file doesn't come under my codeowners, nit suggestion, It will be helpful to keep these new strings under a section just like we have a section for `  <!-- DeveloperOptionsFragment -->`"", 'comment_created': datetime.datetime(2021, 6, 25, 17, 13, 28, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 659218982, 'comment_body': 'removed at all occurrences. ', 'comment_created': datetime.datetime(2021, 6, 26, 20, 11, 51, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 659219025, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 26, 20, 12, 28, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 659219044, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 26, 20, 12, 36, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 659219116, 'comment_body': 'replaced `deselect` with `unselect`. also removed `then`', 'comment_created': datetime.datetime(2021, 6, 26, 20, 13, 33, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 659219239, 'comment_body': 'I think we should create a separate issue to put all the activity titles under one section such as `<!-- Activity Titles -->`. WDYT?', 'comment_created': datetime.datetime(2021, 6, 26, 20, 14, 34, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 659504219, 'comment_body': 'add named arguments', 'comment_created': datetime.datetime(2021, 6, 28, 6, 14, 1, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 659506377, 'comment_body': ""Sounds good to me, let's create a good first issue for any Home activity only. I will create a good first issue for other screens later on. \r\n\r\nFor Developer Options, suggesting to fix in this PR only. "", 'comment_created': datetime.datetime(2021, 6, 28, 6, 19, 1, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 660110186, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 28, 20, 54, 51, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 660114145, 'comment_body': 'I have arranged the titles. PTAL. Also, I have filed an issue for the same (#3384).', 'comment_created': datetime.datetime(2021, 6, 28, 21, 1, 29, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 661114796, 'comment_body': 'This should be name as file, look for other for reference.', 'comment_created': datetime.datetime(2021, 6, 30, 4, 6, 45, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 661114902, 'comment_body': 'Comes under developer options section', 'comment_created': datetime.datetime(2021, 6, 30, 4, 7, 7, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 661115315, 'comment_body': 'Earlier I got the wrong idea from activity Titels, I think it will be replaced with the activity name. \r\n\r\nSuggest in review, take a look at comments below.', 'comment_created': datetime.datetime(2021, 6, 30, 4, 8, 32, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 663375944, 'comment_body': 'Renamed to `<!-- DeveloperOptionsActivity -->`.', 'comment_created': datetime.datetime(2021, 7, 3, 15, 13, 41, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 663375954, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 3, 15, 13, 47, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 663375980, 'comment_body': 'Apologies for the delay. I have addressed all your below comments. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 7, 3, 15, 14, 2, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 663381024, 'comment_body': 'can we have `configChange` variant of these 3 new test cases. ', 'comment_created': datetime.datetime(2021, 7, 3, 16, 3, 38, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 663381101, 'comment_body': 'add 1 more test `testMarkChaptersCompletedActivity_selectAll_configCahnge_isChecked`', 'comment_created': datetime.datetime(2021, 7, 3, 16, 4, 44, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 663381148, 'comment_body': 'add 1 more test `testMarkChaptersCompletedActivity_selectAll_unselect_configChange_isNotChecked`', 'comment_created': datetime.datetime(2021, 7, 3, 16, 5, 14, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 663381200, 'comment_body': 'add 1 more test `testMarkChaptersCompletedActivity_selectChaptersOfFirstStory_configChange_chaptersAreChecked`', 'comment_created': datetime.datetime(2021, 7, 3, 16, 5, 49, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 663482148, 'comment_body': 'I think `called when button is clicked` can be replaced by `routes the user to the <screen_name> screen for <use-case>. ` Ditto for others as well. ', 'comment_created': datetime.datetime(2021, 7, 4, 10, 28, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 663482572, 'comment_body': 'Move this above the companion object. ', 'comment_created': datetime.datetime(2021, 7, 4, 10, 31, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 663484169, 'comment_body': 'This file has to go in a separate devoptions package in domain module. ', 'comment_created': datetime.datetime(2021, 7, 4, 10, 45, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 664066646, 'comment_body': 'Done. PTAL.', 'comment_created': datetime.datetime(2021, 7, 5, 17, 36, 34, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 664066715, 'comment_body': 'KDoc updated. PTAL.', 'comment_created': datetime.datetime(2021, 7, 5, 17, 36, 46, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 664094942, 'comment_body': 'Tests added.', 'comment_created': datetime.datetime(2021, 7, 5, 19, 8, 5, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 664095315, 'comment_body': 'This test is now redundant. I have removed it. Will add new tests with their configChange variants.', 'comment_created': datetime.datetime(2021, 7, 5, 19, 9, 17, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 664149406, 'comment_body': 'Moved to `devoptions` package. PTAL.', 'comment_created': datetime.datetime(2021, 7, 5, 23, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 664817138, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 6, 19, 17, 52, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 664817196, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 6, 19, 17, 59, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 665070159, 'comment_body': 'Function KDocs should always read as a verb phrase. Consider this alternative:\r\n\r\n```kotlin\r\n/** Returns whether the chapter represented by the current view model is completed. */\r\n```\r\n\r\nNote the phrasing. Also, I omitted the ""It is used"" bit since that\'s unrelated to this class. We should only ever document what a function does and how it can be used, not how it\'s actually used. The latter is always changing & is better found by analyzing call sites rather than documentation.\r\n\r\nDitto elsewhere for all other KDocs.', 'comment_created': datetime.datetime(2021, 7, 7, 6, 9, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665070332, 'comment_body': 'Please add missing KDoc.\r\n\r\nDitto elsewhere (if applicable).', 'comment_created': datetime.datetime(2021, 7, 7, 6, 10, 9, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665071433, 'comment_body': 'We ought to be passing around a ``ProfileId`` instead of the raw integer. I suggest updating this accordingly.', 'comment_created': datetime.datetime(2021, 7, 7, 6, 12, 38, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665071832, 'comment_body': 'This documentation is a bit vague--can you add more context as to exactly how this view model should be used & what it represents?', 'comment_created': datetime.datetime(2021, 7, 7, 6, 13, 31, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665072167, 'comment_body': 'Ditto here.', 'comment_created': datetime.datetime(2021, 7, 7, 6, 14, 12, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665072925, 'comment_body': ""More Kotlin idiomatic would be to create a mutable list using ``mutableListOf<String>()``, however it's a bit concerning to expose a mutable val as part of a class's public API. Is this list directly modified by databinding? If not, we should add methods to change the list rather than exposing the list itself."", 'comment_created': datetime.datetime(2021, 7, 7, 6, 15, 49, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665073132, 'comment_body': 'Ditto here--more detail is needed.', 'comment_created': datetime.datetime(2021, 7, 7, 6, 16, 16, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665507229, 'comment_body': 'Thanks for the suggestion. I have updated the Kdoc.', 'comment_created': datetime.datetime(2021, 7, 7, 15, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 665507321, 'comment_body': 'KDoc added.', 'comment_created': datetime.datetime(2021, 7, 7, 15, 58, 43, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 665507940, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 7, 15, 59, 21, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 665508133, 'comment_body': 'KDoc updated. PTAL.', 'comment_created': datetime.datetime(2021, 7, 7, 15, 59, 35, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 665508225, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 7, 15, 59, 41, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 665509134, 'comment_body': 'No, it is not directly modified by the binding. I have made this private and created a getter function for it. PTAL.', 'comment_created': datetime.datetime(2021, 7, 7, 16, 0, 43, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 665509289, 'comment_body': 'KDoc updated. PTAL.', 'comment_created': datetime.datetime(2021, 7, 7, 16, 0, 54, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 666025064, 'comment_body': '```suggestion\r\n  /** Returns a list of [TopicViewModel]s whose progress can be modified. */\r\n```\r\n\r\nDitto elsewhere (where applicable).', 'comment_created': datetime.datetime(2021, 7, 8, 9, 25, 52, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 666169859, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 13, 0, 14, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 666282398, 'comment_body': 'Nit space `/*itemCount = */ nextStoryIndex - chapterIndex`', 'comment_created': datetime.datetime(2021, 7, 8, 15, 7, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 666315682, 'comment_body': 'Done. Also, thanks for the review.', 'comment_created': datetime.datetime(2021, 7, 8, 15, 47, 16, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}]","[{'commit_sha': '5dc378feff9fd2e71ac113be8a1ca9e21445390c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a29b60f6ca83be1f4859da37f705f219f61457eb', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '483bc61c5d8d2c9b436b0f9a4e2984a76a901511', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72a0173381d55069792eb6fae1925a5b727560dc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6d697cd1209079a8c92630790a8579c4c0a8684', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da4a535fd491312f57fc41ea51b3630333ec0a59', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1bf92fbe105b39d5748f71f2b2e642bd93873a6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5917850889f1b2a19bc4f300140604fd07fcdd10', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be028fd941d50bfc613e0313885dc77c1b17bf5b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55bf1caaa1879eb8334201697f0c09d0b71867ad', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9cd1a83baabe53552a00634b00c8db11734dfc2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '853fdf963cc3c817e672a9edb22772e5c9e71a0d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1259636b7ed8787b1b1f6987db51241a0c4ebc6a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9738bcf6646b83dee9fe4ee64639d014a26f620c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdb2f5ec9856a7b4ebc3450ff7182be63b4ccfef', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ee761d2bd1c8d5cfcd263e4dc47dc9558bfd158', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ceb61c398de083352dd8fe98dea2a2e6c641025', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d928f5833d10abe9d34a76aba3a98d9ce8bae46', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20f8e4dd061c09310e25d2f324209b364f977623', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a134dcc70607a75dc82fecb09e8a72a8441d0cf', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79ac431c86da780030373f6d37584851f1cc5af1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c35003320531df76f2597152324187ad9dfe9f1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adf415275e3f8efa89b63a15ad54aadc526b8a5f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a1b7a1f08f3ee11f5405b69c3da6080352c30b8', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfed4c84416636cda36ebebb8953d78b6c8c6275', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4aad8f4c5a39d2733b1d2d506ad0207fbfb55d3', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4878e9328af2d0cc62c2df2300ddc9010ae551a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81f538e83b7a825390d75ae0daa8c3a0bc5ae92c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bda3cfffc7b03cae71de2445fcad46925a208a6d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3df7e3a28fc132dabc83014292ae28421d124386', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b731f914ced1d7c38c557437d8bdfb1f3b5a0c7c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06d0904af130684ca4e3f6ee766da384c82bc103', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5efd5d46ef5c245748743a8d9e7719956623e240', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74138b4f9b05b85fc8f4164277983e5305d0225d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08787e2d36e859a6800b7f518faf0aaddc30c18d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5222123f78f5d27c042242a10f7825902e8d999', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '882de713556e0a4ad49843b46032adac0f7126ac', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6e4a3c249a22c6cb7921932b10495c66f13d5c4', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4de7b6a4d68781c71b1a20adcecaf945e5077fec', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5db3b1e3ddbe93b1c0959e893736baaf7f0ca1bf', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d34efdad93895419570c2e7cc19831852ba7ef1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1d092ca1fdc2a81105b88db892be2fe05d4b452', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee0615e4374dd7b48c0898df30b9d3b7f9becaae', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7eff1766217e63e0195696ba72273d7d0ee59c81', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0c465b428b8cf798bd346699f3b11d5bedd1d6f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '154e849fe7b464d0dc2723d9f155a3e0f9697532', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5cecc8063e8447ea869bb9fd7db3ec926b91b11', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c4a72d97b2370793ad54a45df8823f095103976', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f8a8c1ff8e79c67a20612156593358f0979f61f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff2b35190b37fa56bb485ca286e2a933ef96954a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63b901d5cfa5cb2779ce3885a29afc1657bafdcc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce707ca9a6eb121d1a9d84f2825f52aed36bb3da', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7995124347736035c2d1ba8ed54c3bf85928e98c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb89b418e7d64e6bd034f9b7832aad3f98c107bd', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd8cf75a514f8f4a7e5dbd91eea706846a26f258', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '761f2d48cf4548a4474a3b81b9e1ff5b65b44e1b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcafeb3018b1ea31c142c4e9c806c1e9fed7993c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6ae9024fb648c899700c941ec8c8e8a7226271b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '536f69fcc3f0866080ce71c27f1dfd9c92a0c8dc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64b8490d7ffdae27eb1556a19f71eab2f26e28fd', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '648d103549173e9d8130ae9f67d9f1bf0ab44f1a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2d5cd7c041d6b30a8f50b19764cfec2c824e999', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bce62c131d392a458157c6089cad88590748b03', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0e0a4b08c170c6f18e22a76f8695c3b93c57445', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24299abc821b4e9341d0d2fbe89297254588f8d9', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b71a07944c4f27db9e684754e5a236b35adb98b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b164b4675f8493aecf16d5e99eb740d33c0201b8', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8f1a06a5be364593220d150f35c9b9c2c939576', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef11e7d619bcd1ae594508d25117efe1fea40fc3', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72f072ffafd093f9eb3c32134c2cbc5812360499', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '230978282dea3400aa1d0a36c9d9428be9231d4b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50a4354c67f92c202377d3dca614a0a57f908e2f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae3e08e0e84cf2916f85566c801a7039a471eec6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37f0bea78361cdadf0d523dc8d661ec1aaa60935', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b46679d2fe3eb1d2ca3f1a54f55eb49463dfe784', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '963689b7a66584b9b33e6c72879050a9a9aedbf1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c2b630aa61e2692b34dae203d26f4667995e476', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbe858eabdf3eb357261dffd45684a35159498ce', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a1e41e933ec4c84a50b4a8f4b0798ab9bc8c909', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7d676af3976da0355dc7b907cb9bd8a564ee248', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70d9d4b815677bd40744ccd5a220c1b00126d49d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eea3c1767bf483f9fd3ce3ac2a3238b78a3bf632', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '357edca778518b25c3f075abbd7f3cc6058e0af1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37b45fbf6cc6a1e282821957cd10835a1f623950', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2c16b8bd0d4f3e463b1308cd8422095869d2223', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc97928b850b72a98c1587f370972a885a410c0a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f7361b74f7faa8dcdcd478825f3b39d10eaad0b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5de7f1d36460b454eca953b460c866fd258d4d20', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1839fa3e90a54d417bb2dc4f0650018ce2d65d15', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55ae46c41220421a45ccca2578108182bfd727e2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfe6a992e14ab8a19a69a35e04257e3a235e0e31', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1763010da05290a8a2f897c4c687a92c2d0608bb', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd05ab0dbed9a1b6df57b43eae75053fffcc69600', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e035d22d7c178ea727e0bc712f99e7a5440148e9', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ce4e70583acdddc8d69792a0871f8a825e63712', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6e5cc86e2e80959db01f67a3e68f511b81319e0', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b32065f29ac0d12fa39927dafaaeb0b9f49272fb', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f269d57c4ad60eb3f22b1f0c48c648aa92614e62', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45ee6f7c464512b73fd514f195daf09be92eb2fb', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6f2e7ab35b72dc5d6ed56ed743e1cbc7733e10d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37b1b5cf1468249f5c3cb65c04ae7b6f8f835d05', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '449481bd8ae2cd45a71f1774cc7a36570e810f2b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4719da4b25671fcf3ec3187de565df07a4e75112', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9948bf59bfd9d472bc9b4babe5b35c5dd1f006b2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd934bf23374ad294686fbd69fce87c279841761e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e59eaa282f64cb5d696232a4d3db5014f7153d4f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aeeb70ae704d681c6dede062fbe21a7b205c3fc3', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13018f7e1970cbb79a8013e4673ef07d1e4cb633', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '429ba2c28d2ac4662e3ecbd4aa39e1ca3295afe5', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b20dfd73aec94a094d415c6e5507709b39c43d8', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef1e6743a55caab4b19db8c0968e5a85ac03965c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f49bb508e0b4834969e34e9fa5bbd3302100efc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '525210df156c8e3bfc1639f8277cb1b7f0db252c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b73c93c375bfe1e1554a4650ee0582144f127781', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '756555c191d1cb0dd29440896a0bb48c58c69109', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1619868cb62ce63f695431751575d1c71decfec2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29f8745db408b305851a6c7606aaccd2ae3d7a98', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb9a1160cec2878f3be961e496d9e69f9bee53c2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ebf6d4116cc21ebd6db11fc3e329d1b0ca53b49', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '642422230eea6553ca06c967d012edb6fced370a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0db81466e3172fb57d0ef2944275318f0152dee1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dee27a448e6858e315a9565bee3c821065c8ab0', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fb9896ef24df9162dc1891106c034f133d045c3', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31ccb1ce232c2c94953b44f91144d937d9c61049', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd3dcd489ed9b994b20c17e1f2bc775f0ab0f53d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '415e4678b162d966ff50bed235acd69158dbb5a9', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6d4596ada396433e4bed48fac9fdea7805ffdeb', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cb7e539e9fa7b643f795cee8878d1c162b3cc10', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fc337ed076ec62773432c22c8607e4660e94b42', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bafc2cc73df2ca3ae332ccb6665e8f617d84943e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2a2a85d68bd5916b94c97af7341bf868bfcc079', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9b3788bb6c4d81bd04b8eedbf50f10ab35ea542', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46913e8e97817bf2386bd79c245ba8fc51531cd7', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}]",Yash Raj,63469151,,User,,24,,4,14
685979281,"Fix #3303, #3305 and #3306: Implement logic to modify lesson progress","<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Fixes #3303, #3305 and #3306: Implement logic to modify lesson progress.

**Scrrenshots**

- `MarkChaptersCompletedActivityTest`

| Espresso | Robolectric |
|:---:|:---:|
| ![Screenshot from 2021-07-08 17-53-38](https://user-images.githubusercontent.com/63469151/124920974-8974cb80-e015-11eb-8b45-3728436f674e.png) | ![Screenshot from 2021-07-08 17-56-12](https://user-images.githubusercontent.com/63469151/124921289-dc4e8300-e015-11eb-8225-fd79ee988dc2.png) |

- `MarkStoriesCompletedActivityTest`

| Espresso | Robolectric |
|:---:|:---:|
| ![Screenshot from 2021-07-08 18-01-23](https://user-images.githubusercontent.com/63469151/124921949-99d97600-e016-11eb-928f-a7365beb2407.png) | ![Screenshot from 2021-07-08 18-02-14](https://user-images.githubusercontent.com/63469151/124922036-b5448100-e016-11eb-9fdf-4757dd1e4fb2.png) |

- `MarkTopicsCompletedActivityTest`

| Espresso | Robolectric |
|:---:|:---:|
| ![Screenshot from 2021-07-08 18-07-59](https://user-images.githubusercontent.com/63469151/124922815-81b62680-e017-11eb-9171-bc0a9ae429a2.png) | ![Screenshot from 2021-07-08 18-08-43](https://user-images.githubusercontent.com/63469151/124922949-9db9c800-e017-11eb-8e4a-08edf30d5c5c.png) |

- Robolectric test results for `ModifyLessonProgressControllerTest`
![Screenshot from 2021-07-08 18-10-44](https://user-images.githubusercontent.com/63469151/124923244-dfe30980-e017-11eb-8856-7c6a9c61fa48.png)

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [ ] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3445,https://api.github.com/repos/oppia/oppia-android/pulls/3445,https://github.com/oppia/oppia-android/pull/3445,closed,375,33,13,152,6,43,0,1,[],2021-07-08 12:41:32+00:00,2021-07-11 06:06:06+00:00,235474.0,"2 days, 17:24:34","[{'comment_id': 666218580, 'comment_body': 'I am curious as to why we need to return the status boolean. And if it fails, how do we know what the issue is?', 'comment_created': datetime.datetime(2021, 7, 8, 13, 57, 49, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 666218728, 'comment_body': 'Same comment here and below regarding the purpose of returning the boolen', 'comment_created': datetime.datetime(2021, 7, 8, 13, 58, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 666219626, 'comment_body': '```suggestion\r\n  fun markFirstAndFractionsTopicsCompleted_all(or both)TopicsAreCompleted() {\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 13, 58, 57, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 666220147, 'comment_body': '```suggestion\r\n  fun markFirstAndRatios2StoriesCompleted_bothStoriesAreCompleted() {\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 13, 59, 32, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 666220471, 'comment_body': '```suggestion\r\n  fun markPrototypeAndBothFractionsExplorationsCompleted_allExplorationsAreCompleted() {\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 13, 59, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 666252170, 'comment_body': ""Actually, I was using this boolean just to check if the function call was successful. You can see the use case below https://github.com/oppia/oppia-android/blob/cc53a69992335ff70106799de5f3acd2c35c4bb0/app/src/main/java/org/oppia/android/app/devoptions/marktopicscompleted/MarkTopicsCompletedFragmentPresenter.kt#L80-L86\r\nBut, I think it is unnecessary. I have removed it now. Also, I don't think that there is a possibility for this function to fail as the only reason this might fail will be because of an invalid `topicId`. But since the source of `topicId` is the list of topics fetched using https://github.com/oppia/oppia-android/blob/feb7d812b96c3b384b3ed9bfa38e3e560c058c78/domain/src/main/java/org/oppia/android/domain/devoptions/ModifyLessonProgressController.kt#L39\r\nI don't think there will be a case of invalid `topicId`. WDYT @vinitamurthi? cc: @rt4914 @Sarthak2601."", 'comment_created': datetime.datetime(2021, 7, 8, 14, 34, 23, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 666252478, 'comment_body': 'Explained in the previous comment. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 34, 42, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 666254873, 'comment_body': 'Changed to `markFirstAndFractionsTopicsCompleted_bothTopicsAreCompleted`.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 37, 16, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 666255089, 'comment_body': 'Changed to `markFirstAndRatios2StoriesCompleted_bothStoriesAreCompleted`', 'comment_created': datetime.datetime(2021, 7, 8, 14, 37, 31, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 666255776, 'comment_body': 'Changed to `markPrototypeAndBothFractionsExplorationsCompleted_allThreeExplorationsAreCompleted`. There is some slight difference. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 38, 17, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 666322939, 'comment_body': ""I think even if there is an invalid topicId, this boolean isn't really giving us a lot of information so its better to remove it. "", 'comment_created': datetime.datetime(2021, 7, 8, 15, 56, 16, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 666335175, 'comment_body': 'This is a bit difficult to read.\r\nSuggestion\r\n```\r\n    val notCompletedChapterCount = getMarkChaptersCompletedViewModel().getItemList().count {\r\n      it is ChapterSummaryViewModel && !it.checkIfChapterIsCompleted()\r\n    }\r\n    if (notCompletedChapterCount == 0) {\r\n      this.binding.isAllChecked = true\r\n    }\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 16, 12, 1, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 666336322, 'comment_body': 'Optional suggestion:\r\n```\r\n    itemList.filterIsInstance<ChapterSummaryViewModel>().associateBy(\r\n      { it.chapterSummary.explorationId }, \r\n      { Pair(it.storyId, it.topicId) }\r\n    )\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 16, 13, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 666338923, 'comment_body': 'Suggest writing it as `fun testMarkChapsCompleted_land_selectChapters_clickCompleted_reopen_completedChapsAreChecked() { ` \r\n\r\nas in long term we will remove all `// ktlint-disable max-line-length`', 'comment_created': datetime.datetime(2021, 7, 8, 16, 16, 52, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 666339252, 'comment_body': '@anandwana001 Is this a good way to write tests? I meaning launching it twice in same test.', 'comment_created': datetime.datetime(2021, 7, 8, 16, 17, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 666339420, 'comment_body': 'Rename to remove `ktlint` comment.', 'comment_created': datetime.datetime(2021, 7, 8, 16, 17, 33, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 666339549, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2021, 7, 8, 16, 17, 43, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 666339622, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2021, 7, 8, 16, 17, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 666339702, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2021, 7, 8, 16, 17, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 666346012, 'comment_body': 'not its not, make separate test cases.', 'comment_created': datetime.datetime(2021, 7, 8, 16, 26, 38, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 666347379, 'comment_body': 'it should be something like \r\n\r\nexample\r\n```\r\nassertThat(activityTestRule.activity.isFinishing).isTrue()\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 16, 28, 28, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 666348838, 'comment_body': 'ditto', 'comment_created': datetime.datetime(2021, 7, 8, 16, 30, 24, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 666349649, 'comment_body': '@yashraj-01 Please check the note section - https://github.com/oppia/oppia-android/wiki/Ktlint-Guide#how-to-fix-the-most-common-issues', 'comment_created': datetime.datetime(2021, 7, 8, 16, 31, 31, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 666430522, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 18, 32, 50, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 666430615, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 18, 33, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 666430680, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 18, 33, 7, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 666430759, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 18, 33, 16, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 666430972, 'comment_body': 'Renamed.', 'comment_created': datetime.datetime(2021, 7, 8, 18, 33, 39, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 666431042, 'comment_body': 'Renamed.', 'comment_created': datetime.datetime(2021, 7, 8, 18, 33, 47, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 666431088, 'comment_body': 'Renamed.', 'comment_created': datetime.datetime(2021, 7, 8, 18, 33, 52, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 666432798, 'comment_body': 'Actually what I need to test is here is that when the user clicks the `MARK COMPLETED` button, the activity finishes and then when the user reopens the activity the completed items are already marked. Could you please suggest me some better ways to reopen an activity?', 'comment_created': datetime.datetime(2021, 7, 8, 18, 36, 32, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 666443037, 'comment_body': 'Thanks for this. I have updated the tests. PTAL.', 'comment_created': datetime.datetime(2021, 7, 8, 18, 53, 49, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 666443162, 'comment_body': 'Test updated. PTAL.', 'comment_created': datetime.datetime(2021, 7, 8, 18, 54, 4, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 666460869, 'comment_body': 'check this in a way\r\nafter click - as it is opening new activity - check `intended`\r\n\r\nthen for the next activity, try to pre-fill data and open the activity and test it, so this way we can have 2 separate test testing these individually, not dependent. \r\n\r\nAlso, such test will fail on robolectric, so test one activity at a time.\r\n', 'comment_created': datetime.datetime(2021, 7, 8, 19, 24, 53, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 666991661, 'comment_body': ""Oh okay. In that case, I don't think we need this test as I have already written tests that check for the individual functionalities. Removing this test now. Thanks."", 'comment_created': datetime.datetime(2021, 7, 9, 14, 27, 52, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 667150493, 'comment_body': '@rt4914 could you confirm if this is the intended functionality on click of the `Mark Completed`button? ', 'comment_created': datetime.datetime(2021, 7, 9, 18, 52, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 667154891, 'comment_body': 'Nit: `Modifies lesson progress by marking multiple topics as completed for the current user profile.  `\r\nDitto for other similar comments. ', 'comment_created': datetime.datetime(2021, 7, 9, 19, 1, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 667156103, 'comment_body': 'small nit: \r\n```suggestion\r\n   * @param profileId: the ID corresponding to the profile for which progress needs modified.\r\n```\r\nditto elsewhere. ', 'comment_created': datetime.datetime(2021, 7, 9, 19, 3, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 667280167, 'comment_body': 'Here we can either finish the activity or update it. Either one can work as this feature is meant for developers. I suggest following the solution which works easily.', 'comment_created': datetime.datetime(2021, 7, 10, 3, 1, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 667315150, 'comment_body': 'Thanks for the confirmation @rt4914. I think finishing the activity is a fine approach. WDYT @Sarthak2601?', 'comment_created': datetime.datetime(2021, 7, 10, 9, 15, 33, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 667315735, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 10, 9, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 667315748, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 10, 9, 21, 36, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 667348297, 'comment_body': 'Yes, sounds good. ', 'comment_created': datetime.datetime(2021, 7, 10, 14, 51, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}]","[{'commit_sha': '5dc378feff9fd2e71ac113be8a1ca9e21445390c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a29b60f6ca83be1f4859da37f705f219f61457eb', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '483bc61c5d8d2c9b436b0f9a4e2984a76a901511', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72a0173381d55069792eb6fae1925a5b727560dc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6d697cd1209079a8c92630790a8579c4c0a8684', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da4a535fd491312f57fc41ea51b3630333ec0a59', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1bf92fbe105b39d5748f71f2b2e642bd93873a6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5917850889f1b2a19bc4f300140604fd07fcdd10', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be028fd941d50bfc613e0313885dc77c1b17bf5b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55bf1caaa1879eb8334201697f0c09d0b71867ad', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9cd1a83baabe53552a00634b00c8db11734dfc2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '853fdf963cc3c817e672a9edb22772e5c9e71a0d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1259636b7ed8787b1b1f6987db51241a0c4ebc6a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9738bcf6646b83dee9fe4ee64639d014a26f620c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdb2f5ec9856a7b4ebc3450ff7182be63b4ccfef', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ee761d2bd1c8d5cfcd263e4dc47dc9558bfd158', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ceb61c398de083352dd8fe98dea2a2e6c641025', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d928f5833d10abe9d34a76aba3a98d9ce8bae46', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20f8e4dd061c09310e25d2f324209b364f977623', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a134dcc70607a75dc82fecb09e8a72a8441d0cf', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79ac431c86da780030373f6d37584851f1cc5af1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c35003320531df76f2597152324187ad9dfe9f1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adf415275e3f8efa89b63a15ad54aadc526b8a5f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a1b7a1f08f3ee11f5405b69c3da6080352c30b8', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfed4c84416636cda36ebebb8953d78b6c8c6275', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4aad8f4c5a39d2733b1d2d506ad0207fbfb55d3', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4878e9328af2d0cc62c2df2300ddc9010ae551a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81f538e83b7a825390d75ae0daa8c3a0bc5ae92c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bda3cfffc7b03cae71de2445fcad46925a208a6d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3df7e3a28fc132dabc83014292ae28421d124386', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b731f914ced1d7c38c557437d8bdfb1f3b5a0c7c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06d0904af130684ca4e3f6ee766da384c82bc103', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5efd5d46ef5c245748743a8d9e7719956623e240', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74138b4f9b05b85fc8f4164277983e5305d0225d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08787e2d36e859a6800b7f518faf0aaddc30c18d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5222123f78f5d27c042242a10f7825902e8d999', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '882de713556e0a4ad49843b46032adac0f7126ac', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6e4a3c249a22c6cb7921932b10495c66f13d5c4', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4de7b6a4d68781c71b1a20adcecaf945e5077fec', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5db3b1e3ddbe93b1c0959e893736baaf7f0ca1bf', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d34efdad93895419570c2e7cc19831852ba7ef1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1d092ca1fdc2a81105b88db892be2fe05d4b452', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee0615e4374dd7b48c0898df30b9d3b7f9becaae', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7eff1766217e63e0195696ba72273d7d0ee59c81', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0c465b428b8cf798bd346699f3b11d5bedd1d6f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '154e849fe7b464d0dc2723d9f155a3e0f9697532', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5cecc8063e8447ea869bb9fd7db3ec926b91b11', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c4a72d97b2370793ad54a45df8823f095103976', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f8a8c1ff8e79c67a20612156593358f0979f61f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff2b35190b37fa56bb485ca286e2a933ef96954a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63b901d5cfa5cb2779ce3885a29afc1657bafdcc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce707ca9a6eb121d1a9d84f2825f52aed36bb3da', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7995124347736035c2d1ba8ed54c3bf85928e98c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb89b418e7d64e6bd034f9b7832aad3f98c107bd', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd8cf75a514f8f4a7e5dbd91eea706846a26f258', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '761f2d48cf4548a4474a3b81b9e1ff5b65b44e1b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcafeb3018b1ea31c142c4e9c806c1e9fed7993c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6ae9024fb648c899700c941ec8c8e8a7226271b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '536f69fcc3f0866080ce71c27f1dfd9c92a0c8dc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64b8490d7ffdae27eb1556a19f71eab2f26e28fd', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '648d103549173e9d8130ae9f67d9f1bf0ab44f1a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2d5cd7c041d6b30a8f50b19764cfec2c824e999', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bce62c131d392a458157c6089cad88590748b03', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0e0a4b08c170c6f18e22a76f8695c3b93c57445', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24299abc821b4e9341d0d2fbe89297254588f8d9', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b71a07944c4f27db9e684754e5a236b35adb98b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b164b4675f8493aecf16d5e99eb740d33c0201b8', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8f1a06a5be364593220d150f35c9b9c2c939576', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef11e7d619bcd1ae594508d25117efe1fea40fc3', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72f072ffafd093f9eb3c32134c2cbc5812360499', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '230978282dea3400aa1d0a36c9d9428be9231d4b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50a4354c67f92c202377d3dca614a0a57f908e2f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae3e08e0e84cf2916f85566c801a7039a471eec6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37f0bea78361cdadf0d523dc8d661ec1aaa60935', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b46679d2fe3eb1d2ca3f1a54f55eb49463dfe784', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '963689b7a66584b9b33e6c72879050a9a9aedbf1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c2b630aa61e2692b34dae203d26f4667995e476', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbe858eabdf3eb357261dffd45684a35159498ce', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a1e41e933ec4c84a50b4a8f4b0798ab9bc8c909', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7d676af3976da0355dc7b907cb9bd8a564ee248', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70d9d4b815677bd40744ccd5a220c1b00126d49d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eea3c1767bf483f9fd3ce3ac2a3238b78a3bf632', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '357edca778518b25c3f075abbd7f3cc6058e0af1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37b45fbf6cc6a1e282821957cd10835a1f623950', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2c16b8bd0d4f3e463b1308cd8422095869d2223', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc97928b850b72a98c1587f370972a885a410c0a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f7361b74f7faa8dcdcd478825f3b39d10eaad0b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5de7f1d36460b454eca953b460c866fd258d4d20', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1839fa3e90a54d417bb2dc4f0650018ce2d65d15', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55ae46c41220421a45ccca2578108182bfd727e2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfe6a992e14ab8a19a69a35e04257e3a235e0e31', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1763010da05290a8a2f897c4c687a92c2d0608bb', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd05ab0dbed9a1b6df57b43eae75053fffcc69600', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e035d22d7c178ea727e0bc712f99e7a5440148e9', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ce4e70583acdddc8d69792a0871f8a825e63712', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6e5cc86e2e80959db01f67a3e68f511b81319e0', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b32065f29ac0d12fa39927dafaaeb0b9f49272fb', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f269d57c4ad60eb3f22b1f0c48c648aa92614e62', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45ee6f7c464512b73fd514f195daf09be92eb2fb', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6f2e7ab35b72dc5d6ed56ed743e1cbc7733e10d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37b1b5cf1468249f5c3cb65c04ae7b6f8f835d05', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '449481bd8ae2cd45a71f1774cc7a36570e810f2b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4719da4b25671fcf3ec3187de565df07a4e75112', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9948bf59bfd9d472bc9b4babe5b35c5dd1f006b2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd934bf23374ad294686fbd69fce87c279841761e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e59eaa282f64cb5d696232a4d3db5014f7153d4f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aeeb70ae704d681c6dede062fbe21a7b205c3fc3', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13018f7e1970cbb79a8013e4673ef07d1e4cb633', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '429ba2c28d2ac4662e3ecbd4aa39e1ca3295afe5', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b20dfd73aec94a094d415c6e5507709b39c43d8', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef1e6743a55caab4b19db8c0968e5a85ac03965c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f49bb508e0b4834969e34e9fa5bbd3302100efc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '525210df156c8e3bfc1639f8277cb1b7f0db252c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b73c93c375bfe1e1554a4650ee0582144f127781', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '756555c191d1cb0dd29440896a0bb48c58c69109', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1619868cb62ce63f695431751575d1c71decfec2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29f8745db408b305851a6c7606aaccd2ae3d7a98', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb9a1160cec2878f3be961e496d9e69f9bee53c2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ebf6d4116cc21ebd6db11fc3e329d1b0ca53b49', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '642422230eea6553ca06c967d012edb6fced370a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0db81466e3172fb57d0ef2944275318f0152dee1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dee27a448e6858e315a9565bee3c821065c8ab0', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fb9896ef24df9162dc1891106c034f133d045c3', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31ccb1ce232c2c94953b44f91144d937d9c61049', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd3dcd489ed9b994b20c17e1f2bc775f0ab0f53d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc53a69992335ff70106799de5f3acd2c35c4bb0', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18bf75b63b30f712b21efc1c9a2d110d0549f1c0', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '415e4678b162d966ff50bed235acd69158dbb5a9', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9823412915f07c7540bbfcbe62e79ed6333f9d2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c746fcff5e4e728bc082d460ff007adc4751a636', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e1f9e9616ab4e5e1b7b1110fe8c42794f250f23', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bf47f010242f3491d35a7afe68762ef24e99e4b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '857649362193640be2a57d67d191fece2f78190e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6d4596ada396433e4bed48fac9fdea7805ffdeb', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cb7e539e9fa7b643f795cee8878d1c162b3cc10', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fc337ed076ec62773432c22c8607e4660e94b42', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37d8d42327e17a95373c36806dcac726315a32be', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2e39ec41075e8b0765e98077a56e143c623411c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'feb7d812b96c3b384b3ed9bfa38e3e560c058c78', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9241f0e940c29dfe04b77473e1d544e518d9463b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bafc2cc73df2ca3ae332ccb6665e8f617d84943e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0364a145777e44180e10775f1c04e4a707a50bf9', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72796e5baf41507c21890e81867cd1df5f542f3a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83a527a6632ace3bae0c0afa2040d4d13bbdf189', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2a2a85d68bd5916b94c97af7341bf868bfcc079', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96980d70b6d77925df78f282e391d8a540372288', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9b3788bb6c4d81bd04b8eedbf50f10ab35ea542', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46913e8e97817bf2386bd79c245ba8fc51531cd7', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a5bdd23c5258607006bda1534fe6c9f548fd350', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b70714bc8c7a9d12c193eb45543d3fc318b65603', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b827edbd38620c2ed7de8075e598062b61aed2de', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4246d8c606245de7c2979112433fe6734761592c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}]",Yash Raj,63469151,,User,,24,,4,14
694348439,Fix #3310: Introduce Prod and Debug Implementation of NetworkConnectionUtil,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Fixes #3310. Introduced Prod and Debug implementations of NetworkConnectionUtil.

**Screenshots**

- Robolectric tests passing for `ProdNetworkConnectionUtilTest`
![Screenshot from 2021-07-22 22-37-11](https://user-images.githubusercontent.com/63469151/126680667-05706cf6-074b-4af1-a77f-34e0698d9b81.png)

- Robolectric tests passing for `DebugNetworkConnectionUtilTest`
![Screenshot from 2021-07-22 22-37-28](https://user-images.githubusercontent.com/63469151/126680704-f73aedb7-d705-4513-bc76-463058157741.png)

- Robolectric tests passing for `NetworkConnectionTestUtilTest`
![Screenshot from 2021-07-28 13-39-08](https://user-images.githubusercontent.com/63469151/127288367-eb3cc8b7-30bc-494f-bd27-fd3e91c1aa13.png)

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3512,https://api.github.com/repos/oppia/oppia-android/pulls/3512,https://github.com/oppia/oppia-android/pull/3512,closed,1434,292,168,61,11,169,0,0,[],2021-07-21 12:59:37+00:00,2021-08-17 10:10:47+00:00,2322670.0,"26 days, 21:11:10","[{'comment_id': 674497794, 'comment_body': '```suggestion\r\n  /**\r\n   * Returns a [ConnectionStatus] indicating the current connection status of the device. \r\n   */\r\n```', 'comment_created': datetime.datetime(2021, 7, 22, 4, 47, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 674498042, 'comment_body': 'Naming change: `DebugNetworkConnectionUtil`', 'comment_created': datetime.datetime(2021, 7, 22, 4, 48, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 674498674, 'comment_body': '```suggestion\r\n/**\r\n * [NetworkConnectionUtil] that gets and sets the current [ConnectionStatus] of the device in debug builds. \r\n */\r\n```', 'comment_created': datetime.datetime(2021, 7, 22, 4, 50, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 674499953, 'comment_body': '```suggestion\r\n  /**\r\n   * Forces [connectionStatus] as the current connection status of the device and returns a boolean indicating result. \r\n   */\r\n```', 'comment_created': datetime.datetime(2021, 7, 22, 4, 55, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 674501215, 'comment_body': 'Is there any specific requirement to do this?', 'comment_created': datetime.datetime(2021, 7, 22, 4, 59, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 674504334, 'comment_body': '```suggestion\r\n/**\r\n * [NetworkConnectionUtil] which gets the current [ConnectionStatus] of the device in production builds.\r\n */\r\n```', 'comment_created': datetime.datetime(2021, 7, 22, 5, 10, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 674505347, 'comment_body': 'Naming change: `ProdNetworkConnectionUtil`', 'comment_created': datetime.datetime(2021, 7, 22, 5, 14, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 674505857, 'comment_body': ""```suggestion\r\n  fun testGetCurrentConnectionStatus_activeWifi_noForcedConnection_returnsWifi() {\r\n```\r\n\r\nTry to be consistent in naming. If you've used activeWifi in 3/4 tests then try to use the same in the other test as well. Ditto elsewhere. "", 'comment_created': datetime.datetime(2021, 7, 22, 5, 15, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 674764317, 'comment_body': '```suggestion\r\n/** Provides production implementation of [NetworkConnectionUtil]. */\r\n```', 'comment_created': datetime.datetime(2021, 7, 22, 12, 48, 28, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 675000322, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 22, 17, 15, 2, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 675000403, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 22, 17, 15, 10, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 675000463, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 22, 17, 15, 17, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 675000547, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 22, 17, 15, 24, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 675000683, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 22, 17, 15, 37, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 675000782, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 22, 17, 15, 47, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 675000864, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 22, 17, 15, 53, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 675000949, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 22, 17, 16, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 675001834, 'comment_body': 'This is to check for impossible cases like when the user tries to force a `CELLULAR` or `LOCAL` network when there is no network connection.', 'comment_created': datetime.datetime(2021, 7, 22, 17, 17, 19, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 676272180, 'comment_body': ' is deprecated, check \r\n\r\n1. https://developer.android.com/reference/android/net/ConnectivityManager#TYPE_WIFI\r\n2. https://developer.android.com/reference/android/net/NetworkCapabilities#hasTransport(int)', 'comment_created': datetime.datetime(2021, 7, 26, 3, 46, 30, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676273871, 'comment_body': '```suggestion\r\n   * Forces [connectionStatus] as the current connection status of the device and returns a\r\n```', 'comment_created': datetime.datetime(2021, 7, 26, 3, 52, 44, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676274001, 'comment_body': 'same for forcedConnectionStatus in below function', 'comment_created': datetime.datetime(2021, 7, 26, 3, 53, 10, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676274325, 'comment_body': 'add named arguments', 'comment_created': datetime.datetime(2021, 7, 26, 3, 54, 22, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676274826, 'comment_body': '`connectivityManager.activeNetworkInfo`is warning and might require permissions, but we should not use the deprecated version. Look for the alternative. ', 'comment_created': datetime.datetime(2021, 7, 26, 3, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676275403, 'comment_body': 'add kdoc telling when to use and what to pass as argument. ', 'comment_created': datetime.datetime(2021, 7, 26, 3, 58, 45, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676275447, 'comment_body': 'Looks like this is also deprecated. ', 'comment_created': datetime.datetime(2021, 7, 26, 3, 58, 58, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676275992, 'comment_body': 'new function will be `newInstance(NetworkInfo.DetailedState, int, int, boolean,NetworkInfo.State)`\r\n\r\nAlso, add named arguments. ', 'comment_created': datetime.datetime(2021, 7, 26, 4, 1, 16, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676276727, 'comment_body': 'Can we move this function to test utility `utility/src/test/java/org/oppia/android/util/utility/*.kt` create a new utility file inside test and all test can use this function from there. ', 'comment_created': datetime.datetime(2021, 7, 26, 4, 4, 9, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676418573, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 26, 8, 57, 44, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 676420639, 'comment_body': 'That would be good. But, no other test is using this function. Should we still move it to a separate test utility?', 'comment_created': datetime.datetime(2021, 7, 26, 9, 0, 38, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 676420993, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 26, 9, 1, 8, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 676421062, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 26, 9, 1, 13, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 676426271, 'comment_body': ""Added permissions to the Manifest file. \r\n\r\nRegarding the deprecated version, it was already in use in the codebase so I just used this only and I think there might be some reason for it. What I think is that our targeted version is API 29 and `activeNetworkInfo` is deprecated in API 29 and above. So, it may be a reason that we are still using it. Also, there is an alternative to this ([reference](https://stackoverflow.com/a/57284789)). But, it works only on API levels greater than 23 and our minimum API level is 19. So, even in this case, we won't be able to cover all the API levels. WDYT should we do here?"", 'comment_created': datetime.datetime(2021, 7, 26, 9, 8, 44, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 676429392, 'comment_body': 'This deprecation is linked to the one I addressed in the below comment. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 7, 26, 9, 13, 13, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 677097739, 'comment_body': 'Looks like there is no backward compatibility here. We have to go with this only. If I come up with something, I will create a separate issue for it as other than this PR there are places where we are using this. ', 'comment_created': datetime.datetime(2021, 7, 27, 3, 53, 16, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 677098044, 'comment_body': 'I think the other test file, also has this method he prod one in this PR, is it?\r\n\r\nHere - utility/src/test/java/org/oppia/android/util/networking/ProdNetworkConnectionUtilTest.kt', 'comment_created': datetime.datetime(2021, 7, 27, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 677253703, 'comment_body': 'Ah! Yes. But, there is no such directory as `utility/src/test/java/org/oppia/android/util/utility/*.kt`. Should we create one?', 'comment_created': datetime.datetime(2021, 7, 27, 8, 54, 4, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 677603336, 'comment_body': 'yes', 'comment_created': datetime.datetime(2021, 7, 27, 16, 14, 49, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 677674852, 'comment_body': 'Created a separate `NetworkConnectionTestUtil`. @anandwana001 PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 7, 27, 17, 54, 2, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 677991054, 'comment_body': ""rather than creating it singleton and injecting, I don't see any reason to make this class singleton. \r\nWhat other way we can do is, make `setNetworkInfo` static by putting it inside the companion object and access accordingly. "", 'comment_created': datetime.datetime(2021, 7, 28, 5, 47, 4, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 677992205, 'comment_body': 'We can write a test for this file. Testing if the function is setting params correctly or not. ', 'comment_created': datetime.datetime(2021, 7, 28, 5, 49, 54, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 677993204, 'comment_body': '```suggestion\r\n   * @param context: the context of the dummy network connection.\r\n   * @param status: the type of network type.\r\n   * @param networkState: [status] of the network connection.\r\n   */\r\n```', 'comment_created': datetime.datetime(2021, 7, 28, 5, 52, 25, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 678069283, 'comment_body': ""Can you provide an example of a test case or maybe provide any reference? I'm not able to figure out how to test this. I was thinking of checking if the `ConnectionStatus` is the one that we are setting using `NetworkConnectionTestUtil`. But this test was almost exactly similar to the `ProdNetworkConnectionUtilTest`."", 'comment_created': datetime.datetime(2021, 7, 28, 8, 2, 57, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 678074848, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 28, 8, 10, 49, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 678074975, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 28, 8, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 678075520, 'comment_body': 'I have written the tests with what I said in the above comment. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 7, 28, 8, 11, 33, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679656915, 'comment_body': 'now we can remove these as we have test files', 'comment_created': datetime.datetime(2021, 7, 30, 5, 25, 11, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 679657643, 'comment_body': ""Ah! Actually, we don't have tests for these files. These are interfaces and dagger modules only."", 'comment_created': datetime.datetime(2021, 7, 30, 5, 27, 32, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679668929, 'comment_body': '```suggestion\r\n        # Replace debug_module with prod_module when building the app in prod mode.\r\n```\r\n\r\nPlease also add a TODO here on #2432 to set this up properly.', 'comment_created': datetime.datetime(2021, 7, 30, 5, 59, 21, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679669602, 'comment_body': ""This seems wrong--why are we overwriting an injected field? We generally shouldn't do that (and, I think, this is just being ignored anyway since setUpTestApplicationComponent will overwrite this value when it calls inject(this))."", 'comment_created': datetime.datetime(2021, 7, 30, 6, 1, 20, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679669748, 'comment_body': 'Ditto here.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 1, 42, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679669848, 'comment_body': 'Ditto here.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 1, 58, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679669912, 'comment_body': 'Ditto here.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 2, 11, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679670013, 'comment_body': 'Ditto here.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 2, 21, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679670536, 'comment_body': ""I suggest adding tests for the modules. They can be simple tests which just verify that the correct implementation is injected, but modules are arranging a very specific configuration & it's useful to verify that configuration is correct."", 'comment_created': datetime.datetime(2021, 7, 30, 6, 3, 41, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679671128, 'comment_body': ""Why is this needed here? I know it's needed in the main manifest for the app binary, but it's not clear to me why the utility manifest needs it now."", 'comment_created': datetime.datetime(2021, 7, 30, 6, 5, 19, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679671474, 'comment_body': ""Instead of doing this, we should have a network_connection_test_util library within src/main/java/org/oppia/android/util/networking/BUILD.bazel that's testonly & used by tests.\r\n\r\nNote that test utilities go in **main** not **test**. ``test`` is only for tests."", 'comment_created': datetime.datetime(2021, 7, 30, 6, 6, 24, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679672659, 'comment_body': ""For this & the other new tests, I suggest adding dedicated local_test targets for these. See #3061 & https://github.com/oppia/oppia-android/blob/24ff6ec7c8ea16b1e21b18d3587d4b52a8d20df2/testing/src/test/java/org/oppia/android/testing/threading/BUILD.bazel#L10 for a reference.\r\n\r\nThis will require you to add these new test targets as migration exemptions in the top-level utility BUILD.bazel file, but that's ideal anyway since it avoids you needing to awkwardly include both debug_module and prod_module targets."", 'comment_created': datetime.datetime(2021, 7, 30, 6, 9, 26, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679673454, 'comment_body': 'Is this actually needed? It seems redundant.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 11, 18, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679674007, 'comment_body': 'More conventional: NetworkConnectionUtilProdImpl. Ditto for the debug version.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 12, 42, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679674825, 'comment_body': 'According to https://developer.android.com/reference/android/net/ConnectivityManager#getActiveNetworkInfo() this should be available from API 1. Is that not the case?\r\n\r\nAlso, I suspect the ""correct"" way to do this is to have a TargetApi method for 28 that uses the old version, and a 29+ method for the new version and use an if-statement to choose. It\'s probably worth filing & adding a TODO here to update this code to support both old and new APIs to make sure we\'re keeping up with SDK changes.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 14, 43, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679675562, 'comment_body': 'debug builds and tests.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 16, 34, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679675851, 'comment_body': ""This isn't needed since there isn't any state being stored in the class."", 'comment_created': datetime.datetime(2021, 7, 30, 6, 17, 17, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679676456, 'comment_body': '```suggestion\r\n    return forcedConnectionStatus ?: actualConnectionStatus\r\n```\r\n\r\nElvis operator is more idiomatic in this case.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 18, 33, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679676721, 'comment_body': ""This is a bit unexpected--usually getters don't have side-effects (except in rare cases when we want to use something like memoization which doesn't have _logical_ side effects). Why is this correct?"", 'comment_created': datetime.datetime(2021, 7, 30, 6, 19, 15, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679676985, 'comment_body': 'Indicating what result? We should be more clear in this documentation to help indicate to the caller when they can specifically expect true vs. false.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 19, 51, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679677368, 'comment_body': ""Why not always force the status? The extra checks here don't quite make sense to me."", 'comment_created': datetime.datetime(2021, 7, 30, 6, 20, 45, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679677868, 'comment_body': ""For this & the next module: remove this. We don't need to qualify the lifecycle both on the provider and within the class--that's redundant."", 'comment_created': datetime.datetime(2021, 7, 30, 6, 21, 56, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679678749, 'comment_body': ""This seems like something that should stay under util/networking.\r\n\r\nWe generally want to avoid generic buckets like utility, and it's a bit extra confusing to have utility/utility. We try to keep utility subpackages very specific for this reason."", 'comment_created': datetime.datetime(2021, 7, 30, 6, 24, 1, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679678929, 'comment_body': 'I suggest making this injectable & have it inject its own context rather than using a companion object & passing it in.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 24, 32, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679679102, 'comment_body': '```suggestion\r\n     * @param context the context of the dummy network connection\r\n     * @param status the type of network\r\n     * @param networkState status of the network connection\r\n```\r\n\r\nNote changes for KDoc formatting corrections.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 25, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679679493, 'comment_body': 'Adding onto my suggestion above to make the util class injectable: this could be a by lazy field to avoid needing to fetch it multiple times.\r\n\r\nNote that only the getSystemService result should be stored in a field, not the shadow itself (the Robolectric team strongly discourages caching shadow objects themselves).', 'comment_created': datetime.datetime(2021, 7, 30, 6, 26, 1, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679679616, 'comment_body': '```suggestion\r\n            /* detailedState= */ null,\r\n            /* type= */ status,\r\n            /* subType= */ 0,\r\n            /* isAvailable= */ true,\r\n            /* state= */ networkState\r\n```\r\n\r\nSmall nits on comment formatting.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679679721, 'comment_body': '```suggestion\r\n/** Test utility to modify [ShadowNetworkInfo] in tests. */\r\n```', 'comment_created': datetime.datetime(2021, 7, 30, 6, 26, 35, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679680629, 'comment_body': ""This seems a bit like a logical circular dependency to me. NetworkConnectionUtil is validated by using tests which depend on NetworkConnectionTestUtil. In order for NetworkConnectionTestUtil to be validated, it should be verified independently of NetworkConnectionUtil (otherwise it's kind of like trying to prove something with itself).\r\n\r\nCould we just use the system service directly in the test to verify state? I suspect we don't need all the extra complexity of NetworkConnectionUtil, anyway."", 'comment_created': datetime.datetime(2021, 7, 30, 6, 28, 43, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679681258, 'comment_body': 'Maybe shorten the field to connectionUtil & import the ConnectionStatus constants to simplify things?', 'comment_created': datetime.datetime(2021, 7, 30, 6, 30, 8, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679681520, 'comment_body': ""This test doesn't match the outcome--shouldn't we be validating that CELLULAR is returned?"", 'comment_created': datetime.datetime(2021, 7, 30, 6, 30, 43, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679681841, 'comment_body': ""This scenario doesn't make sense to me--shouldn't it return wifi since that's being forced? I suspect this is related to some of my earlier comments."", 'comment_created': datetime.datetime(2021, 7, 30, 6, 31, 25, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679682129, 'comment_body': ""Per the code, isn't this inactiveCellular?"", 'comment_created': datetime.datetime(2021, 7, 30, 6, 32, 7, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679682246, 'comment_body': 'Ditto here--seems like the network is actually inactive.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 32, 19, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679682326, 'comment_body': 'Nit: s/nonActive/inactive/\r\n\r\nDitto elsewhere.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 32, 32, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679682936, 'comment_body': 'Per later comments on making this utility injectable, I think this helper function can eventually be removed here & in other tests where applicable.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 33, 57, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679831102, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 45, 55, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679832737, 'comment_body': 'Actually, it was previously initializing the `NetworkConnectionUtil`, so I did it for debug util as well. But, I did not realise that previously it was not having an `@Inject` constructor. I have removed these initializations now. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 49, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679832904, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 49, 18, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679833047, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 49, 32, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679833098, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 49, 38, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679833360, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 50, 15, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679833646, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 50, 46, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679833685, 'comment_body': 'Renamed.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 50, 53, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679833883, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 51, 21, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679833931, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 51, 27, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679833997, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 51, 34, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679834174, 'comment_body': 'KDoc updated. PTAL.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 51, 54, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679834340, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 52, 14, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679834492, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 52, 35, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679834646, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 52, 54, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679834730, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 53, 4, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679834904, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 53, 22, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679835238, 'comment_body': 'Thanks for pointing this out. I may have mixed up the test cases. I have corrected them now. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 54, 3, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679835377, 'comment_body': 'Test corrected. PTAL.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 54, 15, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679835749, 'comment_body': 'Actually, the test case was incorrect here. I have corrected it. PTAL.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 54, 55, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679835913, 'comment_body': 'Test corrected. PTAL.', 'comment_created': datetime.datetime(2021, 7, 30, 10, 55, 16, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679850410, 'comment_body': 'Tests added. PTAL.', 'comment_created': datetime.datetime(2021, 7, 30, 11, 22, 29, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679853390, 'comment_body': '![Screenshot from 2021-07-30 16-55-01](https://user-images.githubusercontent.com/63469151/127646545-a0203536-19c7-4a12-850e-1cccb3c40b51.png)\r\nThe `connectivityManager` was showing this error so I added permissions to the manifest file.', 'comment_created': datetime.datetime(2021, 7, 30, 11, 28, 18, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679860049, 'comment_body': 'I have added this check to prevent impossible scenarios. Consider an example where the user is connected to Cellular network and has forced the app to use Wifi network. Now, the user turns off the network in his device. This basically means that the device now has no connection but we are forcing a Wifi network -- this is an impossible scenario. So, this check will set the network type to default automatically in the case the previously mentioned scenario happens. Does this make sense?', 'comment_created': datetime.datetime(2021, 7, 30, 11, 41, 7, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679860560, 'comment_body': 'We are supposed to prevent impossible scenarios from happening which is forcing WIFI or CELLULAR network when there is no actual network on the device.', 'comment_created': datetime.datetime(2021, 7, 30, 11, 42, 4, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679862644, 'comment_body': ""I'm not able to fully understand what you are trying to say. How can we store the `getSystemService` result only? Are you referring to `ShadowNetworkInfo.newInstance`?"", 'comment_created': datetime.datetime(2021, 7, 30, 11, 46, 15, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679863462, 'comment_body': 'Can you please provide a reference on how can we do that?', 'comment_created': datetime.datetime(2021, 7, 30, 11, 47, 50, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679863557, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 30, 11, 48, 3, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679866651, 'comment_body': 'Will address other comments related to `NetworkConnectionTestUtil` once this is clarified.', 'comment_created': datetime.datetime(2021, 7, 30, 11, 53, 42, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 679872533, 'comment_body': ""Can you please clarify a bit more? I'm not able to fully understand this."", 'comment_created': datetime.datetime(2021, 7, 30, 12, 4, 28, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 680195380, 'comment_body': 'Filed an issue (#3616) and added the corresponding TODO. PTAL.', 'comment_created': datetime.datetime(2021, 7, 30, 20, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 682443114, 'comment_body': 'This should be defined in a BUILD.bazel file in the same package as NetworkConnectionTestUtil.kt.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 21, 9, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682444013, 'comment_body': 'Aha. @Sparsh1212 this might have been a missed case for the KDoc checker. ``@Binds`` should be exempted for the same was ``@Provides`` is.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 22, 22, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682444388, 'comment_body': '```suggestion\r\n    //  older (current) method for SDK versions < 28 and the newer method for SDK versions >= 29 and\r\n```\r\n\r\nSome spacing nits.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 22, 51, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682446365, 'comment_body': 'Should this be ``debugImplementationIsInjected``?', 'comment_created': datetime.datetime(2021, 8, 4, 9, 25, 33, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682446759, 'comment_body': '```suggestion\r\n    assertThat(networkConnectionUtil).isInstanceOf(NetworkConnectionUtilDebugImpl::class.java)\r\n```\r\n\r\nMore idiomatic & better potential error messaging. Ditto for the other new test suite.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 26, 8, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682447185, 'comment_body': 'For here & other test files: I suggest removing the extra KDocs (the top-level suite KDoc is fine to keep) & adding exemptions. We should actually be exempting all test files for KDocs by default.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 26, 46, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682451654, 'comment_body': 'Do tests pass fine without the extra permission added? Android Studio might be looking at the wrong manifest when coming up with this error (it has issues with multi-module projects), and it may not be a real error.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 33, 1, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682452092, 'comment_body': '@yashraj-01 was this resolved?', 'comment_created': datetime.datetime(2021, 8, 4, 9, 33, 39, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682453315, 'comment_body': ""I'm suggesting that you add a new BUILD.bazel file under utility/src/test/java/org/oppia/android/util/networking & define test targets for each of these networking tests following a similar structure to these tests: https://github.com/oppia/oppia-android/blob/24ff6ec7c8ea16b1e21b18d3587d4b52a8d20df2/testing/src/test/java/org/oppia/android/testing/threading/BUILD.bazel#L22-L37.\r\n\r\nThis will also require you to add the new tests to the MIGRATED_TESTS target here:\r\n\r\nhttps://github.com/oppia/oppia-android/blob/develop/utility/BUILD.bazel#L102\r\n\r\nSimilar to here:\r\n\r\nhttps://github.com/oppia/oppia-android/blob/develop/testing/BUILD.bazel#L93"", 'comment_created': datetime.datetime(2021, 8, 4, 9, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682456240, 'comment_body': ""Yes, that makes sense, though I would actually expect the app to try to use wifi since the user instructed it to. It shouldn't actually work when they try to download something, but it's actually a useful scenario: it's testing when the app thinks it has wifi but connectivity doesn't work (which definitely happens to people). I suggest reverting this special case since it will simplify the implementation & tests, and allow us to test those sorts of scenarios.\r\n\r\nOtherwise, if a user breaks the app because they combine these contexts then they can always change back the debug settings to follow the system default."", 'comment_created': datetime.datetime(2021, 8, 4, 9, 39, 26, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682458297, 'comment_body': ""I'm suggesting something like this:\r\n\r\n```kotlin\r\nclass NetworkConnectionTestUtil @Inject constructor(\r\n  @ApplicationContext private val applicationContext: Context\r\n) {\r\n  private val connectivityManager by lazy {\r\n    context.getSystemService(Context.CONNECTIVITY_SERVICE) as ConnectivityManager\r\n  }\r\n\r\n  ...\r\n```\r\n\r\nAnd then when we want to use it, we just call ``Shadows.shadowOf(connectivityManager)``.\r\n\r\nDoes this help clarify?"", 'comment_created': datetime.datetime(2021, 8, 4, 9, 42, 21, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682459314, 'comment_body': 'How would you verify this without NetworkConnectionUtilProdImpl? We can call directly into the system service like NetworkConnectionUtilProdImpl does to retrieve the state that we want to verify here.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 43, 47, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682558989, 'comment_body': ""Yes, the tests are passing without the permission. I'll remove the permission from the utility manifest file."", 'comment_created': datetime.datetime(2021, 8, 4, 12, 15, 36, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 682887790, 'comment_body': 'Removed permission.', 'comment_created': datetime.datetime(2021, 8, 4, 19, 11, 18, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 682891116, 'comment_body': 'Actually, the `NetworkConnectionTetsUtil` imports Shadow from robolectric and when I put it in **main**, the import statement was showing an error. It was not able to identify robolectric. So for now, I have moved it to test/networking. Is it okay here? If not, then how can we resolve this error?\r\n![Screenshot from 2021-08-05 00-44-51](https://user-images.githubusercontent.com/63469151/128241300-7a0a361c-385a-4307-8dbd-c28c3c0d9d1b.png)\r\n', 'comment_created': datetime.datetime(2021, 8, 4, 19, 15, 56, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 682891502, 'comment_body': 'Done. PTAL.', 'comment_created': datetime.datetime(2021, 8, 4, 19, 16, 28, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 682894343, 'comment_body': 'Removed extra checks. PTAL.', 'comment_created': datetime.datetime(2021, 8, 4, 19, 20, 43, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 682894497, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 19, 20, 55, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 682895086, 'comment_body': 'Thanks for the clarification @BenHenning. It really helped. I have made the changes as suggested. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 8, 4, 19, 21, 48, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 682895242, 'comment_body': 'Updated the test file. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 8, 4, 19, 22, 4, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 682895329, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 19, 22, 12, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 682895918, 'comment_body': 'Moved to test/networking package. More details are mentioned in the previous comment related to it, https://github.com/oppia/oppia-android/pull/3512#discussion_r682891116.', 'comment_created': datetime.datetime(2021, 8, 4, 19, 23, 11, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 682896265, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 19, 23, 46, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 682896522, 'comment_body': 'Ah! Thanks for pointing it out. I have corrected it now.', 'comment_created': datetime.datetime(2021, 8, 4, 19, 24, 12, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 682896601, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 19, 24, 21, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 682896912, 'comment_body': 'Extra Kdocs removed and test files added to exemption.', 'comment_created': datetime.datetime(2021, 8, 4, 19, 24, 54, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 683191931, 'comment_body': ""Does this make sense in the production sense of the component? It seems like a debug-only property. Could we redesign this such that 'default' is only usable in debug situations?"", 'comment_created': datetime.datetime(2021, 8, 5, 7, 17, 49, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683192323, 'comment_body': '```suggestion\r\nTests for networking-specific utilities.\r\n```\r\n\r\nThis tests production utilities, too.', 'comment_created': datetime.datetime(2021, 8, 5, 7, 18, 18, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683192825, 'comment_body': ""Prefer not having common deps, actually. They pose problems long-term (particularly they result in a denser build graph by providing tests with deps that they don't always need). Prefer just duplicating the deps for each test target, instead, to ensure each one has exactly the deps it needs."", 'comment_created': datetime.datetime(2021, 8, 5, 7, 19, 4, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683193242, 'comment_body': 'This should be the package of the class (e.g. org.oppia.android.util.networking). Ditto for the others.', 'comment_created': datetime.datetime(2021, 8, 5, 7, 19, 46, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683194508, 'comment_body': 'Rather than \'returnsCorrectNetworkInfo\' I think it helps to be specific like the names were before. One really useful property of test names is being able to understand what the test _intends_ to accomplish from the name alone. With the current name, we don\'t quite get that because we don\'t know what ""correct network info"" means or what to expect.', 'comment_created': datetime.datetime(2021, 8, 5, 7, 21, 33, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683196597, 'comment_body': 'This might actually be reducing readability by hiding some of the context. Consider instead doing something like:\r\n\r\n```kotlin\r\nassertThat(connectivityManager.getActiveType()).isEqualTo(NO_CONNECTION)\r\nassertThat(connectivityManager.getActiveState()).isEqualTo(NetworkInfo.State.DISCONNECTED)\r\n\r\n...\r\n\r\nprivate fun ConnectivityManager.getActiveType() = activeNetworkInfo?.type\r\nprivate fun ConnectivityManager.getActiveState() = activeNetworkInfo?.state\r\n```\r\n\r\nThat might help improve test readability a bit since it\'s making it much clearer what is being checked. And, if a check fails, the error will probably be much more clear (rather than ""is not true"" which would be the case for the current code).', 'comment_created': datetime.datetime(2021, 8, 5, 7, 24, 43, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683198856, 'comment_body': ""Aha. That's unfortunate (it's another limitation of Gradle unfortunately). One thing you could do is move the utility & its test to the testing package (e.g. org.oppia.android.testing.networking) since that module is allowed to have non-test files that specifically depend on Robolectric."", 'comment_created': datetime.datetime(2021, 8, 5, 7, 28, 6, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683199214, 'comment_body': 'Per other comment, I suggest moving this & its test to the testing module per the issues with Gradle.', 'comment_created': datetime.datetime(2021, 8, 5, 7, 28, 36, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683545605, 'comment_body': 'Not really. But putting this in `NetworkConnectionUtilDebugImpl` will require us to import it when we are passing DEFAULT connection status to the `ForceNewtorkTypeViewModel` in #3502. An alternative could be to go back to the **null** approach instead of setting **forcedConnectionStatus** as DEFAULT.  What I mean is we can pass `NetowrkConnectionUtilDebugImpl.ConnectionStatus.DEFAULT` or `null` here instead. I was previously using `null` but I was suggested to create a `DEFAULT` connection status and use it instead.\r\nhttps://github.com/oppia/oppia-android/blob/4f17f119fb975060825a8d90c37b47d147cb2d6e/app/src/main/java/org/oppia/android/app/devoptions/forcenetworktype/ForceNetworkTypeViewModel.kt#L27-L32\r\nAnd, similarly in `ForceNetworkTypeFragmentPresenter`.\r\n\r\nWDYT?', 'comment_created': datetime.datetime(2021, 8, 5, 15, 9, 52, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 683594365, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 16, 8, 12, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 683594548, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 16, 8, 25, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 683594688, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 16, 8, 35, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 683594821, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 16, 8, 45, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 683595201, 'comment_body': 'Removed and added deps to each test.', 'comment_created': datetime.datetime(2021, 8, 5, 16, 9, 12, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 683595280, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 16, 9, 19, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 683673365, 'comment_body': 'Moved to testing/networking package', 'comment_created': datetime.datetime(2021, 8, 5, 17, 58, 53, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 683779918, 'comment_body': 'This will be covered in #3648.\r\nThanks.', 'comment_created': datetime.datetime(2021, 8, 5, 20, 53, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Sparsh1212', 'type': 'User'}, {'comment_id': 685551511, 'comment_body': ""Hmm. ``null`` has the same problem, I think, it just changes what the sentinel value is in this case. I actually think that importing the debug implementation _is_ the correct way to do this; the purpose of the debug version is to be used in both production and debug cases (in the same way that a test implementation is used in prod and tests).\r\n\r\nThat being said, depending directly on a debug impl isn't so great. It may actually be cleaner to have something like NetworkConnectionDebugUtil that exposes whatever API you need in debug-only cases and then have the implementation implement both the prod & debug interfaces (& have corresponding bindings so that the view model can inject the debug version when it needs to).\r\n\r\nThis, I think, would be a relatively small change. Please reach out if you have any concerns or if I didn't explain this well."", 'comment_created': datetime.datetime(2021, 8, 9, 22, 3, 8, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686236509, 'comment_body': ""This seems a good approach but I am facing some issues with this. Let me describe.\r\n\r\nThere are two interfaces now: `NetworkConnectionUtil` and `NetworkConnectionDebugUtil`.\r\n\r\n`NetworkConnectionUtilProdImpl` implements `NetworkConnectionUtil` whose binding is provided by `NetworkConnectionUtilProdModule`. \r\n\r\n`NetworkConnectionUtilDebugImpl` implements both `NetworkConnectionUtil` and `NetworkConnectionDebugUtil` whose corresponding bindings are provided by `NetworkConnectionUtilDebugModule`. \r\n\r\n`ForceNetworkTypeFragmentPresenter` will be injecting `NetworkConnectionDebugUtil` as it requires debug-only functions i.e, _setNetworkConnectionStatus_ and _getForcedConnectionStatus_.\r\n\r\nNow, when we are building the app in debug mode (i.e, putting `NetworkConnectionUtilDebugModule` in `ApplicationComponent`) then everything is fine. But when we are building the app in prod mode (i.e, putting `NetworkConnectionUtilProdModule` in `ApplicationComponent`), the Gradle build is failing as it cannot provide dependencies for `NetworkConnectionDebugUtil` which is used in `ForceNetworkTypeFragmentPresenter`.\r\n\r\nCan you think of a way to resolve this?\r\n\r\nA quick alternative could be to use `NetworkConnectionUtilDebugImpl` only instead of creating a debug util interface. Or, we can leave the DEFAULT case in `NetworkConnectionUtil` only as you mentioned debug version can be used in both production and debug cases (I'm not sure if this is what you meant exactly).\r\n\r\nWDYT about this @BenHenning?"", 'comment_created': datetime.datetime(2021, 8, 10, 18, 49, 59, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 686374417, 'comment_body': ""Ah, another case of Gradle making this sort of dependency separation more difficult.\r\n\r\nI think our only option is to introduce a BindsOptionalOf for the debug interface, and the inject an Optional<NetworkConnectionDebugUtil> (see 'Optional bindings' under https://dagger.dev/dev-guide/). If we go this route, please add a TODO to the optional binding to remove it once we move to Bazel (a TODO on #59 should be sufficient for now).\r\n\r\nWould this work?"", 'comment_created': datetime.datetime(2021, 8, 10, 22, 56, 10, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686747769, 'comment_body': 'I have used optional binding now and it works fine in both builds. I have also added the TODO. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 39, 42, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 688150534, 'comment_body': 'Perhaps instead: DebugConnectionStatus & ProdConnectionStatus to differentiate & avoid fully qualifying ConnectionStatus?', 'comment_created': datetime.datetime(2021, 8, 12, 23, 35, 6, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688150593, 'comment_body': 'This interface-based mechanism was a nice idea.', 'comment_created': datetime.datetime(2021, 8, 12, 23, 35, 17, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688150972, 'comment_body': ""Is this KDoc still correct? It almost seems to me that this is returning the forced connection status set by ``[setCurrentConnectionStatus]``. Also, what does this return if that method isn't called? Probably worth clarifying that in the comment, too."", 'comment_created': datetime.datetime(2021, 8, 12, 23, 36, 19, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688158629, 'comment_body': ""Missed this before, but I suggest expanding this into a proper if-braced if/else:\r\n\r\n```kotlin\r\nreturn if (forcedConnectionStatus == DEFAULT) {\r\n  actualConnectionStatus\r\n} else forcedConnectionStatus\r\n```\r\n\r\nThe current format seems like it might be against the style guide, but I can't be sure. I think the above might be a bit more consistent with the codebase."", 'comment_created': datetime.datetime(2021, 8, 12, 23, 59, 17, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688159518, 'comment_body': ""Hmm. I'm wondering if we could introduce a new oppia_debug_visibility that's basically oppia testing visibility + specific subpackages that are allowed to access debug utilities. WDYT? That will help isolate these debug utilities to exactly where they should be used."", 'comment_created': datetime.datetime(2021, 8, 13, 0, 1, 58, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688597829, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 13, 15, 24, 49, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 688598076, 'comment_body': 'Thanks :)', 'comment_created': datetime.datetime(2021, 8, 13, 15, 25, 7, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 688598227, 'comment_body': 'Updated Kdoc. PTAL.', 'comment_created': datetime.datetime(2021, 8, 13, 15, 25, 22, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 688598317, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 13, 15, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 688599236, 'comment_body': 'I think this makes sense to have separate debug visibility. I have introduced a new `oppia_debug_visibility`. PTAL if it is correct or not. Thanks.', 'comment_created': datetime.datetime(2021, 8, 13, 15, 26, 54, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}]","[{'commit_sha': 'b8d634f0fddfd20f4f487c0682a2f75461139da4', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6555ed39f126c7694bf741c1b3ae8cde5597adf7', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '940775dea02ac8b44999188997740287abbab639', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6370d9190789e325fb3319180fa2e137de4d796', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0953cd95a7693c85fe26f30de0d3b211e59bfb3', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e52b27ffabc5ec1b7bd45f293aa633a6dfc8dda5', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a25fe84cb9b6d04c2cf40efcbba5c7aa088a9cff', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '721b765b0ddf1178501ba02b7d61115bb96e5970', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c63fdd4e2d6a45abcaad99ab6fcb34e1238f5ce', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd962e8a905a24361a610116f53823ddd7acca7b5', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3810da0bed9808c08b6e6e45ad18155ded7c0c49', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16f88adf870944ae5b6edb1a6d1e1c24be9968b5', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19222ff71b882f2d247c680078f5e01c1298c97b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e94e86a750dbcd2a1a8a2f7f3644251f477be6ff', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcc5b5641a2df7eabd3fd209a1471c384d6fae21', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b66131c64273627390894d677bde0cd66e63b074', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99252aad87babc58a604e395a6fc75da03b5e9c1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cda409c75bf4c03d9b6fed06b20c5824b989747', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f6a5a2f346089ea0ad1e4fda69500887c53a10f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2991f29ca91e7d8c8945178fd5e57c1733a6116', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5068e34398928f5c064e9ee8d414b460f10143e6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9620f91a7fc259e569b6d711f59ad391b3dae3a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c47fa01dc95bfd0dd937f1998715d5a3945a5c17', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '656537f73554525cd5e7ddd510960be26ed6bb2f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17bf6e88e8d6b900aaa4745f322ac51d0bfaf3e6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '877f7b0dccf7265fb62a4b4b31117a64ad9d33f5', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1554511390dff03ff2aa3b08320ba248838e1916', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47ac94ee08d6ab650e24ef7c3688a01a85e22565', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5ed461e4011c8ac3ed71542cd93b7c51974ba74', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1c04f385c5b2abd3d890812e961192ec4183d2f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7347ae5b895e3207272a248fe4f8de0db5d79958', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a89db2cc0710c1d559f641796c48749e24194d4d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13c227468818c7cda31356e2fa3166643c599e86', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6051bc3e4baa7b013d14fba161c5b48f215671a2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6429bd1c7aaa14db0784e4a94b1611cc8eac668f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdbabd1066e363e77693db723650b19c6861c8fa', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '365d9a9d60f6e0667ed782b08e74cebdccb09f25', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64fea582f10087a3bf42bc605d0510243cdcf60b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ccd94d148c509c1350f47ab0394e761fea476d7', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f569a1026678521f95c9c7665f42b7792fd356c6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88acb4a2669f0408795c5b26d2f01ab2d0a2ac8e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f85e886eb47788adf63657cf0bdcc64d54a6d7e1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f77fde971f8e827aefa57aed9b11c4eb4686508', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69050ec1519611c7417828797c1fc6fae4c3166a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71e8c1996cb65a7b5945a36a4a8a88221414dc94', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdd395d93c2696c1c1a2bda6e1c705cf5a301efd', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a72d108cb39e7e20908c9a023d82ba3baf4ccf6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '327cf502763dc197b17f6b81f11af59016389d4c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23af6638f86c29026b15a0268b1bdecaf63cd1b8', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccf40b6032c31d678f1cb61724f243e72f2e3c86', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e34f7c4126664a4e9f06cf42dd900438139b3e8', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5c77e39f2548729e17e78083182d63b5ce2172c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92cc488fd01f3757e5ceeef4f5f7392485308d63', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b22c6f869e266336114f34a8cf9660faad339e9', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9964cb54d4933da3d0ccf593a9e04d1b013ebde', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '733aafe72feb830d64a0d051027823af585692af', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f41ca60e97f83ba34fb601fc99c28b3f335ff30a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cde281006a847327fb96633f1f7990a47f58652d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de9d6279f92fa04c4cf0ed25e86bad25e783e79b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff0243697788559688a7e94a669dd7f3605c764b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7074b7812015cf4bcc02f216db771110a3867c56', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}]",Yash Raj,63469151,,User,,24,,4,14
692120176,Fix #3309 and #3311: Implement Force Network Type Feature,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Fixes #3309. Introduced UI for Force Network Type screen.
Fixes #3311. Implemented logic to force network type.
This PR also fixes #3379. cc: @rt4914

**Mock link:** https://xd.adobe.com/view/e8aa4198-3940-47f9-514a-f41cc54457f6-9e9b/screen/8ae1a60e-7f6d-4b7b-b741-469bb80007b9/specs/

**Screenshots**

- UI
  <img width=""250"" height=""500"" src=""https://user-images.githubusercontent.com/63469151/128396893-966b4136-f4d2-4dc1-a33a-7764682198c8.png"">

- Espresso tests passing for `DeveloperOptionsFragmentTest`
![Screenshot from 2021-07-31 20-04-10](https://user-images.githubusercontent.com/63469151/127743270-92783027-78e8-40e1-b8fd-4951174ef0cd.png)

- Espresso tests passing for `ForceNetworkTypeActivityTest`
![Screenshot from 2021-07-31 21-16-47](https://user-images.githubusercontent.com/63469151/127745340-08c3c294-05e8-40df-bb9b-742a0826e2af.png)

- Espresso tests passing for `ForceNetworkTypeFragmentTest`
![Screenshot from 2021-07-31 22-10-29](https://user-images.githubusercontent.com/63469151/127750337-6dd06cd9-dd99-4714-b63b-8d4d1bdc5b93.png)

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3502,https://api.github.com/repos/oppia/oppia-android/pulls/3502,https://github.com/oppia/oppia-android/pull/3502,closed,1468,143,141,91,5,25,1,1,[{'name': 'PR: LGTM'}],2021-07-18 17:09:15+00:00,2021-08-18 08:12:26+00:00,2646191.0,"30 days, 15:03:11","[{'comment_id': 681757295, 'comment_body': 'This launch command is different from the usually used one in all other test files (eg: MarkTopicsCompletedFragmentTest), any particular reason for this change? ', 'comment_created': datetime.datetime(2021, 8, 3, 13, 27, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 681940631, 'comment_body': ""Yes. Since the `ForceNetworkTypeActivity` doesn't take any arguments while creating the intent for the activity, we have used the class approach to launch the activity. This was suggested by @anandwana001 in one of my previous PRs."", 'comment_created': datetime.datetime(2021, 8, 3, 16, 57, 20, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 682274975, 'comment_body': 'Nit\r\n`   <string name=""network_selected"">Network is selected</string>`', 'comment_created': datetime.datetime(2021, 8, 4, 4, 20, 43, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 682924322, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 20, 9, 49, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 682924800, 'comment_body': 'Resolving comment as the nit is fixed.', 'comment_created': datetime.datetime(2021, 8, 4, 20, 10, 38, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 683186888, 'comment_body': 'I suggest either\r\n\r\n```suggestion\r\n * [ViewModel] for [ForceNetworkTypeFragment]. It populates the RecyclerView with a list of\r\n```\r\n\r\nor\r\n\r\n```suggestion\r\n * [ViewModel] for [ForceNetworkTypeFragment]. It populates the recycler view with a list of\r\n```\r\n\r\n(""recyclerview"" isn\'t a word, but ""RecyclerView"" is a proper noun versus ""recycler view"" which spells it out).\r\n\r\nDitto everywhere else.', 'comment_created': datetime.datetime(2021, 8, 5, 7, 9, 33, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683187555, 'comment_body': 'If this is being displayed to the user it ought to use strings instead of formatting the enum constant (to facilitate things like translations & to avoid refactors/enum renames changing the UI).', 'comment_created': datetime.datetime(2021, 8, 5, 7, 10, 38, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683188111, 'comment_body': '```suggestion\r\n/** Activity for forcing the network mode for the app. */\r\n```\r\n\r\nPrefer being more detailed (& to be judicious about capitalizing words). Ditto for other KDocs in this PR.', 'comment_created': datetime.datetime(2021, 8, 5, 7, 11, 30, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683188708, 'comment_body': ""I wonder if this should be 'Mode' instead of 'Type' since that might be a bit clearer, but I'm not sure.\r\n\r\n@rt4914 any thoughts?"", 'comment_created': datetime.datetime(2021, 8, 5, 7, 12, 28, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683188925, 'comment_body': 'This string name is too generic (keep in mind that these names are globals for the entire app). Can you please update this to be more specific to where the string is being used?\r\n\r\nFurther, the name should not reflect its exact English contents but rather its semantic meaning (consider ""all"" vs. ""developer_options_modify_lesson_progress_label""; the latter is more specific to the context than the actual contents of the string).', 'comment_created': datetime.datetime(2021, 8, 5, 7, 12, 53, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683190200, 'comment_body': ""This test should be in the same corresponding package as the component that it's testing. Ditto for all tests in this & future PRs."", 'comment_created': datetime.datetime(2021, 8, 5, 7, 14, 59, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683190551, 'comment_body': '```suggestion\r\n/** Fragment to provide functionality to force the network type of the app. */\r\n```\r\n\r\nSmall nit on grammar.', 'comment_created': datetime.datetime(2021, 8, 5, 7, 15, 33, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683637542, 'comment_body': 'Done. Followed the below one. Thanks.', 'comment_created': datetime.datetime(2021, 8, 5, 17, 7, 8, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 683637639, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 17, 7, 18, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 683637831, 'comment_body': 'Refactored. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 8, 5, 17, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 683638155, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 17, 7, 59, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 683642748, 'comment_body': 'Done. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 8, 5, 17, 14, 33, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 683664552, 'comment_body': 'I have modified the approach to use strings instead of enum names. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 8, 5, 17, 46, 2, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 686376976, 'comment_body': 'This looks much better--thanks!', 'comment_created': datetime.datetime(2021, 8, 10, 23, 2, 14, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686377223, 'comment_body': ""I don't have a strong opinion here; resolving to unblock the PR."", 'comment_created': datetime.datetime(2021, 8, 10, 23, 2, 52, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686377668, 'comment_body': 'Much better, thanks!', 'comment_created': datetime.datetime(2021, 8, 10, 23, 4, 4, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688157173, 'comment_body': ""This won't work on older versions of Android, and I'm not sure if this is covered under desugaring support. Suggest using the imperative if-check using ``isPresent()`` instead."", 'comment_created': datetime.datetime(2021, 8, 12, 23, 54, 53, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688620907, 'comment_body': ""I think Optional is covered under desugaring support [reference](https://developer.android.com/studio/write/java8-support#library-desugaring). But I think it requires building the app with Gradle plugin version 4.0.0+ and the current version is 3.6.1. And I'm not sure what are its requirements for Bazel. Also, Optional is introduced in API level 24 so all its methods are accessible in version > N only (even the get method), so we can't use an if statement here (correct me if I'm wrong). I have already had a TODO for it which I have added here. "", 'comment_created': datetime.datetime(2021, 8, 13, 15, 59, 39, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 688825010, 'comment_body': ""Let's use Guava's Optional, instead. That should let us avoid the issue."", 'comment_created': datetime.datetime(2021, 8, 13, 23, 27, 1, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688933681, 'comment_body': ""Thanks @BenHenning. This solved the issue. Updated the PR to use Guava's Optional instead of Java8."", 'comment_created': datetime.datetime(2021, 8, 14, 13, 56, 5, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}]","[{'commit_sha': '2777213709936762156be1467103809eb7e4af4b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8d634f0fddfd20f4f487c0682a2f75461139da4', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6555ed39f126c7694bf741c1b3ae8cde5597adf7', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '940775dea02ac8b44999188997740287abbab639', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6370d9190789e325fb3319180fa2e137de4d796', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0953cd95a7693c85fe26f30de0d3b211e59bfb3', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e52b27ffabc5ec1b7bd45f293aa633a6dfc8dda5', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a25fe84cb9b6d04c2cf40efcbba5c7aa088a9cff', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '721b765b0ddf1178501ba02b7d61115bb96e5970', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c63fdd4e2d6a45abcaad99ab6fcb34e1238f5ce', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd962e8a905a24361a610116f53823ddd7acca7b5', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3810da0bed9808c08b6e6e45ad18155ded7c0c49', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16f88adf870944ae5b6edb1a6d1e1c24be9968b5', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19222ff71b882f2d247c680078f5e01c1298c97b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e94e86a750dbcd2a1a8a2f7f3644251f477be6ff', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcc5b5641a2df7eabd3fd209a1471c384d6fae21', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b66131c64273627390894d677bde0cd66e63b074', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99252aad87babc58a604e395a6fc75da03b5e9c1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cda409c75bf4c03d9b6fed06b20c5824b989747', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f6a5a2f346089ea0ad1e4fda69500887c53a10f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59780d735cb79698d5e50419f8d9ead9bad8019f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2991f29ca91e7d8c8945178fd5e57c1733a6116', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a225827c2561b6b92613c9e08181bcae47e980c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd284908c795c475732db73369c5bc59e518e294c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5068e34398928f5c064e9ee8d414b460f10143e6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9620f91a7fc259e569b6d711f59ad391b3dae3a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c47fa01dc95bfd0dd937f1998715d5a3945a5c17', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '656537f73554525cd5e7ddd510960be26ed6bb2f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17bf6e88e8d6b900aaa4745f322ac51d0bfaf3e6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '877f7b0dccf7265fb62a4b4b31117a64ad9d33f5', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1554511390dff03ff2aa3b08320ba248838e1916', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47ac94ee08d6ab650e24ef7c3688a01a85e22565', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5ed461e4011c8ac3ed71542cd93b7c51974ba74', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b51e55ad8ec08fc190a650811a0ae6bef1f9ede', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7679276bf7cc2aa085ee8a6e9dad83eac08e2062', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a538f4a28afad3275e578ed067d68cafa128609', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5e931724a169153280d6a52b6ee670538cd4abd', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51f118f7953a3287ffadfedd104d11f79f9fa1f0', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd91361d60e65ea8da88ff1f027fe9847cf44b6a4', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1592d6c4f2e37f2d6f955f63ed1a08a3653e891f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcbf89f8e0c98f66944bb28252bf0b361dd9fb6f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4aaea819a0a518bd9f37f14c086d276331ad2a7e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '809e40eb757e99ee63c53588e26fa28b4969be05', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1c04f385c5b2abd3d890812e961192ec4183d2f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7347ae5b895e3207272a248fe4f8de0db5d79958', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a89db2cc0710c1d559f641796c48749e24194d4d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13c227468818c7cda31356e2fa3166643c599e86', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6051bc3e4baa7b013d14fba161c5b48f215671a2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6429bd1c7aaa14db0784e4a94b1611cc8eac668f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdbabd1066e363e77693db723650b19c6861c8fa', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '365d9a9d60f6e0667ed782b08e74cebdccb09f25', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64fea582f10087a3bf42bc605d0510243cdcf60b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ccd94d148c509c1350f47ab0394e761fea476d7', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d7ed44979737176ab0fa3300e4e09e8dacce3f2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e9cbda66eadf7524fd7a52a6499fdc8b5f01e71', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f569a1026678521f95c9c7665f42b7792fd356c6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88acb4a2669f0408795c5b26d2f01ab2d0a2ac8e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f85e886eb47788adf63657cf0bdcc64d54a6d7e1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f77fde971f8e827aefa57aed9b11c4eb4686508', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eef7e7036b1b712d3fa2e3a6d863b73118fe94d3', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b217d1b3ac16d06430c7c6dc10468eff11cafccf', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78d60a250068e88bb56ba923918c154437e710da', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '950430be130782016e7fdd9304e2f96fbe6c91a7', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69050ec1519611c7417828797c1fc6fae4c3166a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71e8c1996cb65a7b5945a36a4a8a88221414dc94', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdd395d93c2696c1c1a2bda6e1c705cf5a301efd', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a72d108cb39e7e20908c9a023d82ba3baf4ccf6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '327cf502763dc197b17f6b81f11af59016389d4c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f17f119fb975060825a8d90c37b47d147cb2d6e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23af6638f86c29026b15a0268b1bdecaf63cd1b8', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccf40b6032c31d678f1cb61724f243e72f2e3c86', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e34f7c4126664a4e9f06cf42dd900438139b3e8', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5c77e39f2548729e17e78083182d63b5ce2172c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92cc488fd01f3757e5ceeef4f5f7392485308d63', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b22c6f869e266336114f34a8cf9660faad339e9', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9964cb54d4933da3d0ccf593a9e04d1b013ebde', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '733aafe72feb830d64a0d051027823af585692af', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c280fc85fe05532bd271338968e828747d16f9b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db78a4da3366c4efcf397e141d0ff02ffc9fde03', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80a468bba6a0a56cf8e53172c84643fa6752ef70', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f41ca60e97f83ba34fb601fc99c28b3f335ff30a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cde281006a847327fb96633f1f7990a47f58652d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de9d6279f92fa04c4cf0ed25e86bad25e783e79b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff0243697788559688a7e94a669dd7f3605c764b', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17835e1a1ec7cb7d9b6c4654343683b5e2b44463', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71a0b98c33cdd9ebe94a1cad955fdbe82ed571d9', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9744186ca44adf49bf35b8edb4720eb24fbfbbc6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5146f29de688ca2bfe66b42401817a59e2e3b44c', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7074b7812015cf4bcc02f216db771110a3867c56', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b2c24a891bb14f998b708a8d44f6355cf737b37', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '671b2de11f94162a1cfe6599eb4ab204d807fe42', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}]",Yash Raj,63469151,,User,,24,,4,14
715495612,Fix #3396 and #3397: Implement Show All Hints and Solution Feature,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Fixes #3396.
Fixes #3397. 
Implemented feature to show all hints and solution.

**Screenshots**

- When the feature is disabled:

https://user-images.githubusercontent.com/63469151/129990302-f4e922f2-342c-4289-aa19-53075a5d7f47.mp4

- When the feature is enabled:

https://user-images.githubusercontent.com/63469151/129990420-1e543d21-3f8b-4bd7-8ca8-64a8cf2657f2.mp4

- Espresso tests passing for `DeveloperOptionsFragmentTest`
![Screenshot from 2021-08-19 06-26-59](https://user-images.githubusercontent.com/63469151/129990989-8d2c1a22-a855-4122-9eb7-0d8c904cd5a1.png)

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3705,https://api.github.com/repos/oppia/oppia-android/pulls/3705,https://github.com/oppia/oppia-android/pull/3705,closed,839,33,15,83,13,73,1,0,[{'name': 'PR: LGTM'}],2021-08-19 00:11:18+00:00,2021-08-22 05:11:55+00:00,277237.0,"3 days, 5:00:37","[{'comment_id': 691786027, 'comment_body': ""While I like the idea of being especially thorough when testing APIs, given it's a debug API I think we can reduce the complexity of these tests. Rather than duplicating the entirety of the prod implementation, could we maybe instead have a few select scenarios where we specifically want to test debug on/off? All other prod behaviors let's just rely on the prod implementation to be correct (i.e. I think it's okay to assume the debug impl is delegating to the prod impl for the sake of simplifying this testing surface)."", 'comment_created': datetime.datetime(2021, 8, 19, 5, 12, 50, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691969921, 'comment_body': 'I think this makes sense. I have now removed prod behaviour tests and kept a few of them which we are testing for on/off cases. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 8, 19, 10, 2, 58, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 692079872, 'comment_body': 'Update the Kdoc above as this module has to be replaced with its corresponding prod module in production build. ', 'comment_created': datetime.datetime(2021, 8, 19, 12, 50, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 692101352, 'comment_body': 'I think it was fine earlier. ', 'comment_created': datetime.datetime(2021, 8, 19, 13, 17, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 692103285, 'comment_body': '```suggestion\r\n  /** Returns the current [HelpIndex]. */\r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 13, 20, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 692104309, 'comment_body': 'small nit: Cancels instead of Cancel', 'comment_created': datetime.datetime(2021, 8, 19, 13, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 692106483, 'comment_body': 'nit: `DebugFactoryImpl`', 'comment_created': datetime.datetime(2021, 8, 19, 13, 23, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Sarthak2601', 'type': 'User'}, {'comment_id': 692393606, 'comment_body': 'I have renamed it to `FactoryDebugImpl` to be consistent with the naming of prod and debug implementations.', 'comment_created': datetime.datetime(2021, 8, 19, 18, 45, 4, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 692393680, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 19, 18, 45, 8, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 692393736, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 19, 18, 45, 13, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 692394281, 'comment_body': ""This is weird. I don't remember making this change. Anyways, I have changed it back."", 'comment_created': datetime.datetime(2021, 8, 19, 18, 46, 4, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 692394453, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 19, 18, 46, 16, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 692664669, 'comment_body': ""let's try to abbreviate the parts and no print the ktlint check. "", 'comment_created': datetime.datetime(2021, 8, 20, 5, 10, 52, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 692664690, 'comment_body': ""let's try to abbreviate the parts and no print the ktlint check. "", 'comment_created': datetime.datetime(2021, 8, 20, 5, 10, 58, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 692664713, 'comment_body': ""let's try to abbreviate the parts and no print the ktlint check. "", 'comment_created': datetime.datetime(2021, 8, 20, 5, 11, 2, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 692664732, 'comment_body': 'ditto for all', 'comment_created': datetime.datetime(2021, 8, 20, 5, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 692768423, 'comment_body': 'Renamed.', 'comment_created': datetime.datetime(2021, 8, 20, 8, 31, 5, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 692768544, 'comment_body': 'Renamed.', 'comment_created': datetime.datetime(2021, 8, 20, 8, 31, 14, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 692768754, 'comment_body': 'Renamed for all other instances as well. PTAL.', 'comment_created': datetime.datetime(2021, 8, 20, 8, 31, 34, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693247289, 'comment_body': ""This isn't a helper, more like a 'Controller' per our typical structure."", 'comment_created': datetime.datetime(2021, 8, 20, 22, 28, 4, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693247519, 'comment_body': ""Please detail in this KDoc that this controller is only expected to be interacted with on the main thread.\r\n\r\nFWIW if it isn't, then you update it to be threads safe & mention that in its KDoc."", 'comment_created': datetime.datetime(2021, 8, 20, 22, 28, 50, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693248107, 'comment_body': ""This variable isn't accessible to outside users, so this documentation comment may actually be confusing. Suggest isntead:\r\n\r\n```suggestion\r\n  /** Returns whether showing all hints and solutions should be shown by default. */\r\n```\r\n\r\nAlso, the way this was worded before was slightly confusing: this isn't gating hints & solutions, it's gating whether hints & solutions should be always shown. Please update variable names/method names/documentation in this PR accordingly to be clearer on this distinction."", 'comment_created': datetime.datetime(2021, 8, 20, 22, 30, 51, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693248140, 'comment_body': 'Ditto here (KDoc could be improved).', 'comment_created': datetime.datetime(2021, 8, 20, 22, 30, 59, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693248338, 'comment_body': ""Is it possible to access the dev options menu while within an exploration? If so, this doesn't actually notify the handler impl that the state has changed (meaning there will be a delayed update). Is that okay?"", 'comment_created': datetime.datetime(2021, 8, 20, 22, 31, 37, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693248646, 'comment_body': ""```suggestion\r\n * Debug implementation of [HintHandler] that conditionally always shows hints & solutions if 'Show all hints and solution' functionality is enabled in the developer options menu.\r\n * If this functionality is disabled then it will fall back to [HintHandlerProdImpl].\r\n```\r\n\r\n(Needs re-wrapping)\r\n\r\nSome suggested changes to make the documentation possibly a bit clearer."", 'comment_created': datetime.datetime(2021, 8, 20, 22, 32, 47, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693249214, 'comment_body': ""Should we maybe cache this value upon debug impl creation? Otherwise, we might have some whacky behavior if it's ever possible to change this state mid-exploration.\r\n\r\nIt also could largely simplify this implementation: consider querying for this state in the factory and providing either the debug or prod implementation (which would let you remove all the prod impl calls from the debug version & just perform the debug-only functionality)."", 'comment_created': datetime.datetime(2021, 8, 20, 22, 34, 36, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693249463, 'comment_body': ""Isn't this case invalid? I thought we were by default jumping straight to the EVERYTHING_REVEALED state?"", 'comment_created': datetime.datetime(2021, 8, 20, 22, 35, 28, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693249635, 'comment_body': ""Please don't expose the internal state of this class. I don't think you'll need to with the factory suggestion I made above, but we should otherwise try to design around punching holes into class implementations.\r\n\r\nDitto for other 'internal' visibility changes below."", 'comment_created': datetime.datetime(2021, 8, 20, 22, 36, 11, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693249891, 'comment_body': 'Why this change?', 'comment_created': datetime.datetime(2021, 8, 20, 22, 37, 2, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693250388, 'comment_body': ""Do we actually need all this? I'm wondering if we can just default the implementation to returning an EVERYTHING_REVEALED HelpIndex & calling the monitor callback just once when we initialize for a new state."", 'comment_created': datetime.datetime(2021, 8, 20, 22, 38, 54, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693250589, 'comment_body': '```suggestion\r\n/** Module for providing debug-only hints & solution related dependencies. */\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 22, 39, 45, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693250740, 'comment_body': 'Ditto here.', 'comment_created': datetime.datetime(2021, 8, 20, 22, 40, 9, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693251272, 'comment_body': ""One way you could significantly simplify your debug impl testing surface (if we go with the factory approach) is to actually do the factory selection in the module and test that here. Then, that becomes as simple as:\r\n- Test debug impl provided if setting is off\r\n- Test prod impl is provided if setting is on\r\n\r\nThen the debug testing surface is fairly trivial since it's just making sure each of the methods behave correctly in the debug setting. We can assume that the prod impl is correct when the setting is off since this module guarantees that scenario, so no new testing is needed."", 'comment_created': datetime.datetime(2021, 8, 20, 22, 42, 3, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693251446, 'comment_body': ""Worth adding tests for, even if they're trivial. (We may complicate the impl in the future, so having a place to force testing considerations is generally good practice)."", 'comment_created': datetime.datetime(2021, 8, 20, 22, 42, 42, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693251532, 'comment_body': 'Thanks. Going to hold off taking a pass on this until the latest changes are addressed since there may be further simplifications possible here.', 'comment_created': datetime.datetime(2021, 8, 20, 22, 43, 12, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693294655, 'comment_body': 'Renamed to `ShowAllHintsAndSolutionController`.', 'comment_created': datetime.datetime(2021, 8, 21, 3, 14, 43, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693294660, 'comment_body': 'Updated the Kdoc as this is expected to be called on the main thread only.', 'comment_created': datetime.datetime(2021, 8, 21, 3, 14, 53, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693294700, 'comment_body': 'Updated Kdocs. PTAL. Not sure what variables/methods are you referring to here.', 'comment_created': datetime.datetime(2021, 8, 21, 3, 15, 7, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693294726, 'comment_body': 'Updated KDoc. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 8, 21, 3, 15, 20, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693294733, 'comment_body': 'No, it is not possible to access the menu while within an exploration.', 'comment_created': datetime.datetime(2021, 8, 21, 3, 15, 34, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693294741, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 21, 3, 15, 39, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693294766, 'comment_body': ""We can't change the state mid-exploration as the developer options menu is not accessible while in an exploration. However, I think we can go with the factory approach you suggested. It will simplify the implementation even further."", 'comment_created': datetime.datetime(2021, 8, 21, 3, 16, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693294770, 'comment_body': 'Done. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 8, 21, 3, 16, 10, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693294813, 'comment_body': 'Following your suggestion to return EVERYTHING_REVEALED state, I have removed this case. Thanks for the suggestion.', 'comment_created': datetime.datetime(2021, 8, 21, 3, 16, 22, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693294857, 'comment_body': 'Replaced all internal with private visibility except for `State.offersHelp` (we are using it in debug handler) which I think is fine to use as it is more general rather than specific to prod handler. WDYT?', 'comment_created': datetime.datetime(2021, 8, 21, 3, 16, 39, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693294884, 'comment_body': ""Well, this is the second instance in this PR that there is a change that I didn't commit (at least not knowingly). I think this was changed when I formatted the code using Ctrl + Alt + L in Android Studio. Anyways, I have reverted this change."", 'comment_created': datetime.datetime(2021, 8, 21, 3, 16, 50, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693294938, 'comment_body': 'Ah! Thanks for this @BenHenning. This clarified a lot of misconceptions I had. I have updated the approach to return directly the EVERYTHING_REVEALED HelpIndex state and default instance if there is no help in the particular state. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 8, 21, 3, 17, 30, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693294941, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 21, 3, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693294945, 'comment_body': 'KDoc updated.', 'comment_created': datetime.datetime(2021, 8, 21, 3, 17, 45, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693294973, 'comment_body': ""I have gone with the factory approach but I wasn't able to simplify the tests as I had to create the handler in each test rather than creating it once in the `setUp` function. This is because now the handler implementation is selected based on the setting so first, we have to specify whether the setting is enabled or disabled and then create the hint handler. Is this correct or am I missing something here?"", 'comment_created': datetime.datetime(2021, 8, 21, 3, 18, 1, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693294981, 'comment_body': 'Added test for `ShowAllHintsAndSolutionController`. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 8, 21, 3, 18, 7, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693325619, 'comment_body': 'Is this case needed?', 'comment_created': datetime.datetime(2021, 8, 21, 8, 35, 38, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693325722, 'comment_body': '```suggestion\r\n  fun testGetShowAllHintsAndSolution_initalState_returnsFalse() {\r\n```\r\n\r\nThe condition under test is missing I think.', 'comment_created': datetime.datetime(2021, 8, 21, 8, 36, 46, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693325802, 'comment_body': '```suggestion\r\n  fun testGetShowAllHintsAndSolution_setToShowAll_returnsTrue() {\r\n```\r\n\r\nMight be a bit clearer framing from the perspective of testing the getter.', 'comment_created': datetime.datetime(2021, 8, 21, 8, 37, 24, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693326467, 'comment_body': ""I think that's reasonable--thanks."", 'comment_created': datetime.datetime(2021, 8, 21, 8, 43, 46, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693326620, 'comment_body': ""I think you can simplify it by:\r\n- Updating the debug module to do the if check & return either the debug or prod version\r\n- Updating these tests correspondingly to verify the correct impl is returned based on the controller state\r\n- Updating the hint handler debug impl tests to directly inject the impl factory (similar to what the prod version does) so that it doesn't even go through the module; This lets us focus those tests just on the debug impl behaviors.\r\n\r\nDoes that help clarify?"", 'comment_created': datetime.datetime(2021, 8, 21, 8, 45, 46, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693326662, 'comment_body': 'Going to defer partly until one more pass--see my other comment for a suggestion on how to further simplify. I think you can effectively remove all of the prod impl test cases if we go with the module approach (& effectively replace them with just a single module test to verify that the prod version is provided when we expect it to be).\r\n\r\nI took one pass on this test from the perspective of just the debug impl.', 'comment_created': datetime.datetime(2021, 8, 21, 8, 46, 13, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693326942, 'comment_body': ""Here & elsewhere: tests are generally organize into three distinct sections: arrange, act, assert. It often helps to keep code in each of these sections tightly together (new blank newlines) and each of the sections separate by 1 blank newline. For this reason you'll see in many of our tests a clear three sections in each test.\r\n\r\nI suggest following that structure here for clarity & consistency."", 'comment_created': datetime.datetime(2021, 8, 21, 8, 48, 48, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693327275, 'comment_body': '```suggestion\r\n  fun testGetCurrentHelpIndex_showAllHelpsEnabled_initialState_everythingIsRevealed() {\r\n```', 'comment_created': datetime.datetime(2021, 8, 21, 8, 52, 5, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693327354, 'comment_body': 'Suggest also adding a test for the other case: should be empty for an empty state.', 'comment_created': datetime.datetime(2021, 8, 21, 8, 52, 49, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693327746, 'comment_body': ""Well we are providing prod impl when the debug setting is disabled and debug impl when it is enabled. Isn't this correct?"", 'comment_created': datetime.datetime(2021, 8, 21, 8, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693327841, 'comment_body': 'Instead of passing prod impl in debug impl, I have checked in the factory itself that which impl we should be using based on this check.', 'comment_created': datetime.datetime(2021, 8, 21, 8, 57, 37, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693328699, 'comment_body': ""If we do the if check in module then wouldn't it provide the implementation on compile time which will always be prod impl. I think we need to do the if check in the debug factory to provide correct implementation at runtime? WDYT? Correct me if I'm wrong."", 'comment_created': datetime.datetime(2021, 8, 21, 9, 6, 16, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693329276, 'comment_body': ""However, I'll try this module approach and let you know if we get the desired result"", 'comment_created': datetime.datetime(2021, 8, 21, 9, 11, 51, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693332727, 'comment_body': ""Unfortunately, this didn't work. It is only providing prod impl as I said before. Is this the correct way to do it? I also tried injecting the controller but that was throwing errors.\r\n![Screenshot from 2021-08-21 15-15-56](https://user-images.githubusercontent.com/63469151/130317990-ac5eb49f-5e8e-494c-9375-466e3c8cca80.png)\r\nShould we go with the factory approach instead?\r\n"", 'comment_created': datetime.datetime(2021, 8, 21, 9, 46, 57, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693335933, 'comment_body': 'test renamed and new test added.', 'comment_created': datetime.datetime(2021, 8, 21, 10, 16, 57, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693335942, 'comment_body': 'Done. PTAL. Thanks.', 'comment_created': datetime.datetime(2021, 8, 21, 10, 17, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693335966, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 21, 10, 17, 6, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693335971, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 21, 10, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}, {'comment_id': 693406168, 'comment_body': 'Resolving since the latest test suite is fully reviewed.', 'comment_created': datetime.datetime(2021, 8, 21, 22, 0, 7, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693406360, 'comment_body': ""Dagger arranges the graph at compile time but the providers are actually called at runtime. Since the Factory isn't scoped as singleton, each time it's injected Dagger will re-call the provider.\r\n\r\nHowever, you do bring up a point: we inject the factory just once in the progress controllers which means they won't change without recreating the controllers. The factory approach will work better without broader changes, and your latest test changes seem well in-line with my thoughts on reducing PR complexity."", 'comment_created': datetime.datetime(2021, 8, 21, 22, 2, 2, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693406381, 'comment_body': 'Ah, I had a typo unfortunately. I meant to ask: is this cast* needed.', 'comment_created': datetime.datetime(2021, 8, 21, 22, 2, 22, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693411379, 'comment_body': 'Removed the unnecessary cast. Thanks.', 'comment_created': datetime.datetime(2021, 8, 21, 23, 0, 27, tzinfo=datetime.timezone.utc), 'commenter': 'yashraj-01', 'type': 'User'}]","[{'commit_sha': 'd66c0148b5974b6aab63f3712ed0f8af78c8422e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b0bfb6f034c5807545bb9d92fc71b41382548dc', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc7c5136d060bc1b7d0442a5d55d2930a09285d7', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a64024c235017b3ac6100e81e9815e7e3831514', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4aa847e5dc4dc770a37f852bc89218d4b6a3e12', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77c4fb70cd708641533adb951fcc96548186d227', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0deb6504ff1b3c2af069498edf0d231ae10e79a8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7b78d14db3265b9efe9290b4dacc4f68e260387', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1036c25dbade6dc1046210e84c708dde1257dbd0', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46e35f0370982377715ba65488b6391bc800b39e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '846d808dd65fbdd844f16e8dfe009c3aacec9196', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '863688f89a27ea6fe6ed5ec70b206981e468288f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c04252948c9bf64322bde4a893376c1cf5267676', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '218e07074abb479edaa2ac279c344662a8558fad', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebeb0e578ba7d9cc1ced9b9dd2d57033e04d3021', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ed23236c558653bcbee7d814534af391878fea8', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c41c23a9ef048dfa6cc1c6e4893569501aa0a91d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '496aff77fb3297c844f846b0e996cdaa1d51c9ca', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05ff96242f61cfcd7cadaf8f83816ea6d6add0c6', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84375611c272f48935aa2b50882a4602e3074af1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e264a0b766fbe8e8c3123577d3792f54718483a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c3f4321ed64dd731e29206e66deb427094cb939', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5738c09304d88886d93aca27551d252ab9d4251e', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '641e8ded0cd9024de1666a31439709cd5970bb76', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da6d06541e584d2b4a4d50d9f9b9429dd3ad011d', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2955c0cb67a52e538e64b405c082145e08b9a50b', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7071c0bddcb6f18ec88f7de02195f7f6df3500c2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b023759febbdc7fed699c9b6bc038d349d34be1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85c44071fa2ee1ef4dac11a87dacf24e82e1f1ec', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2a337368633efbe7f55a1f9913143561b22ecce', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c01d2ccd85a4ac57d1aa7419996f35fe4b29cde1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4aeb1b8a465b3588dfc786e349239bb6c58bffe1', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de49a312aaefc68672bca572fb79b664ad515d9a', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6659858f0b85a0bf0c51f23af600769eac64b938', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abecc74e175d28b77a625937f97f9bdc4ae59d5c', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '109c346345c98e0a94fc5348e2a340eb0a2ac2d4', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '994cdea9020b1e940c04d333bbb20fe4f5afcb90', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41294d08730004a45b4048532e0cee67b99400fd', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a905c704f100f6610cdae9a8db68ef794f3040e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff734094abd677b1143f677e8e51eece2895d0b0', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d4dcfc77857b0e6e87bbdde1e149400ad9124ee', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '465711d7b088494af26c4052cafa8ac46c690ba7', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15ea3683b30c436d3efaec7c8b7fa5f16f38ed07', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '028e4cef5dd0c9468a401a847fe21c1db3974b25', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '486cf5b4b4f1758cbfd97d216e844b5c96a90cb4', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f7beb3d04be406ee3b5d06cb2047ae1c449a655', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e5b94593b25fc361bc83800b3e535cafaa064bf', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2fea908a65af8c11b5ed135f59cec38e807f251', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1622c00d33f584ae727f0c9c4434ad773bc80a2', 'committer_username': 'MaskedCarrot', 'committer_name': 'Apoorv Srivastava', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 3, 9, 19, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd531024296282c281971255c48f118594ce440c7', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40f07baf519e971ff6e2c8aa7f63fce6449f0599', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a89640e7266d038e8c50f580af0cf1fa4c293502', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '958932ff1ae29b61f743a563d1bf8a4cf44cfb85', 'committer_username': 'BenHenning', 'committer_name': 'Ben Henning', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 21, 2, 28, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8616d93de018c14b0b12d95b1acd4164010b8b82', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b8a6bdb5166c73de2ab7270422bd88364dbfd60', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ac18b7eeb591fe349b5744e548684510961e85a', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '073863562c929e4a8630cb9e7c09bab861dca140', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd247ed13bc0e83c0732330d2c1e2b9b67c923f2', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae14019f6064463a1069a78cbd77d0f04d45cc1f', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc162e5b4bfb0ea4941e2d88536897244e9038b7', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9b6b6645c8ae96433e3e66e3d56e8e6e1df9e48', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67613612119e6dc74160e460e50599f10468b531', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4699a7a26691e48e55f248458c65f6881b95ef94', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99df8650a6f7cbca91a6f75db7acb269499ab2f1', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9393a9c6a6be7f9197058d0f191f542b3a9a5d32', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83740f624868144c9c8b034573768ce9c0cd10cf', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1e537727989733b6e5efe4c9ae2cbb72ef0b435', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd89e446e91cf45cbc98d78a9249335dc2694ed7e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a7da7eba4ade5ed77aa6be86528c4a6ef1ec654', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90d90c727615a1061033a042fd4c803326a4fd44', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52dfeeb524717914fdf3c5e90e3a605261f7da93', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1078b2edc5516a5c5a98b30bad96f2daadff303d', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8f2c4f171184b25e00d8f0d1803d29e1b36a987', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39b34221fd0c3486984e9821854e1303f007f074', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b53489c58143cd21b73fbe4ac82ce94a49c981c5', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a6270189ba7331a682b1daf090b443cd2d943b9', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf3fbb8e1a87c22d9a0932eac92cce753b67b7c3', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae1830a2931ba92158434260663f7a66ded8f710', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7384a21f7a416511dd6406f046f25aeec583192', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3dbb237d4c6ed0eefbfbbef1b46932a7ad50eb4', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd00fdf0685e532dbc60e9c4d45a0c92aba68d11e', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a2acdab298253ef0cd433caca2728bc54780bc6', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7099dd71ec60b4b22049d19618e4addeb253eb20', 'committer_username': 'yashraj-01', 'committer_name': 'Yash Raj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 10, 17, 29, 36, tzinfo=datetime.timezone.utc)}]",Yash Raj,63469151,,User,,24,,4,14

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
148093817,oppia-android,oppia/oppia-android,Kotlin,507,306,21,172,2042,502,138,17,"[{'id': 715495612, 'number': 3705, 'closed': datetime.datetime(2021, 8, 22, 5, 11, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 19, 0, 11, 18, tzinfo=datetime.timezone.utc), 'time_taken': 277237.0, 'time_delta': '3 days, 5:00:37', 'additions': 839, 'deletions': 33, 'state': 'closed'}, {'id': 700053778, 'number': 3614, 'closed': datetime.datetime(2021, 7, 30, 10, 30, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 30, 6, 56, 53, tzinfo=datetime.timezone.utc), 'time_taken': 12835.0, 'time_delta': '3:33:55', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 700048400, 'number': 3613, 'closed': datetime.datetime(2021, 8, 14, 10, 37, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 30, 6, 46, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1309865.0, 'time_delta': '15 days, 3:51:05', 'additions': 448, 'deletions': 231, 'state': 'closed'}, {'id': 697677453, 'number': 3531, 'closed': datetime.datetime(2021, 8, 14, 10, 36, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 9, 10, tzinfo=datetime.timezone.utc), 'time_taken': 1560372.0, 'time_delta': '18 days, 1:26:12', 'additions': 27, 'deletions': 41, 'state': 'closed'}, {'id': 695260256, 'number': 3516, 'closed': datetime.datetime(2021, 7, 30, 6, 54, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 22, 14, 59, 18, tzinfo=datetime.timezone.utc), 'time_taken': 662118.0, 'time_delta': '7 days, 15:55:18', 'additions': 629, 'deletions': 360, 'state': 'closed'}, {'id': 694348439, 'number': 3512, 'closed': datetime.datetime(2021, 8, 17, 10, 10, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 21, 12, 59, 37, tzinfo=datetime.timezone.utc), 'time_taken': 2322670.0, 'time_delta': '26 days, 21:11:10', 'additions': 1434, 'deletions': 292, 'state': 'closed'}, {'id': 692120176, 'number': 3502, 'closed': datetime.datetime(2021, 8, 18, 8, 12, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 18, 17, 9, 15, tzinfo=datetime.timezone.utc), 'time_taken': 2646191.0, 'time_delta': '30 days, 15:03:11', 'additions': 1468, 'deletions': 143, 'state': 'closed'}, {'id': 689085895, 'number': 3471, 'closed': datetime.datetime(2021, 7, 26, 16, 24, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 13, 14, 19, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1130708.0, 'time_delta': '13 days, 2:05:08', 'additions': 628, 'deletions': 394, 'state': 'closed'}, {'id': 689042394, 'number': 3470, 'closed': datetime.datetime(2021, 7, 30, 5, 17, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 13, 13, 48, 27, tzinfo=datetime.timezone.utc), 'time_taken': 1438147.0, 'time_delta': '16 days, 15:29:07', 'additions': 658, 'deletions': 424, 'state': 'closed'}, {'id': 689012586, 'number': 3469, 'closed': datetime.datetime(2021, 7, 30, 5, 15, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 13, 13, 26, 45, tzinfo=datetime.timezone.utc), 'time_taken': 1439344.0, 'time_delta': '16 days, 15:49:04', 'additions': 958, 'deletions': 721, 'state': 'closed'}, {'id': 688754546, 'number': 3468, 'closed': datetime.datetime(2021, 8, 5, 7, 5, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 13, 9, 52, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1977205.0, 'time_delta': '22 days, 21:13:25', 'additions': 703, 'deletions': 480, 'state': 'closed'}, {'id': 685979281, 'number': 3445, 'closed': datetime.datetime(2021, 7, 11, 6, 6, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 12, 41, 32, tzinfo=datetime.timezone.utc), 'time_taken': 235474.0, 'time_delta': '2 days, 17:24:34', 'additions': 375, 'deletions': 33, 'state': 'closed'}, {'id': 678507912, 'number': 3376, 'closed': datetime.datetime(2021, 7, 9, 5, 13, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 27, 12, 25, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1010874.0, 'time_delta': '11 days, 16:47:54', 'additions': 1233, 'deletions': 16, 'state': 'closed'}, {'id': 673934537, 'number': 3347, 'closed': datetime.datetime(2021, 7, 10, 14, 50, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 19, 21, 11, 51, tzinfo=datetime.timezone.utc), 'time_taken': 1791503.0, 'time_delta': '20 days, 17:38:23', 'additions': 4632, 'deletions': 8, 'state': 'closed'}, {'id': 673005663, 'number': 3339, 'closed': datetime.datetime(2021, 7, 7, 6, 27, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 17, 21, 31, 44, tzinfo=datetime.timezone.utc), 'time_taken': 1673758.0, 'time_delta': '19 days, 8:55:58', 'additions': 68, 'deletions': 4, 'state': 'closed'}, {'id': 671809259, 'number': 3331, 'closed': datetime.datetime(2021, 7, 6, 0, 26, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 16, 19, 18, 34, tzinfo=datetime.timezone.utc), 'time_taken': 1660067.0, 'time_delta': '19 days, 5:07:47', 'additions': 730, 'deletions': 40, 'state': 'closed'}, {'id': 668535054, 'number': 3314, 'closed': datetime.datetime(2021, 6, 30, 4, 53, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 20, 29, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1585453.0, 'time_delta': '18 days, 8:24:13', 'additions': 1141, 'deletions': 105, 'state': 'closed'}, {'id': 668386178, 'number': 3313, 'closed': datetime.datetime(2021, 6, 27, 16, 42, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 17, 33, 48, tzinfo=datetime.timezone.utc), 'time_taken': 1379301.0, 'time_delta': '15 days, 23:08:21', 'additions': 238, 'deletions': 4, 'state': 'closed'}, {'id': 665017440, 'number': 3281, 'closed': datetime.datetime(2021, 6, 11, 16, 44, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 15, 21, 7, tzinfo=datetime.timezone.utc), 'time_taken': 264219.0, 'time_delta': '3 days, 1:23:39', 'additions': 76, 'deletions': 0, 'state': 'closed'}, {'id': 619616332, 'number': 3105, 'closed': datetime.datetime(2021, 4, 26, 14, 15, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 20, 19, 28, 14, tzinfo=datetime.timezone.utc), 'time_taken': 499656.0, 'time_delta': '5 days, 18:47:36', 'additions': 71, 'deletions': 0, 'state': 'closed'}, {'id': 597941612, 'number': 2966, 'closed': datetime.datetime(2021, 3, 30, 4, 41, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 22, 11, 42, 53, tzinfo=datetime.timezone.utc), 'time_taken': 665889.0, 'time_delta': '7 days, 16:58:09', 'additions': 46, 'deletions': 1, 'state': 'closed'}, {'id': 596676815, 'number': 2948, 'closed': datetime.datetime(2021, 3, 30, 12, 36, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 19, 15, 30, 57, tzinfo=datetime.timezone.utc), 'time_taken': 939946.0, 'time_delta': '10 days, 21:05:46', 'additions': 167, 'deletions': 19, 'state': 'closed'}, {'id': 593626159, 'number': 2926, 'closed': datetime.datetime(2021, 3, 18, 12, 22, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 16, 6, 50, 23, tzinfo=datetime.timezone.utc), 'time_taken': 192727.0, 'time_delta': '2 days, 5:32:07', 'additions': 16, 'deletions': 3, 'state': 'closed'}, {'id': 590807693, 'number': 2885, 'closed': datetime.datetime(2021, 3, 19, 13, 25, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 11, 12, 0, 4, tzinfo=datetime.timezone.utc), 'time_taken': 696322.0, 'time_delta': '8 days, 1:25:22', 'additions': 159, 'deletions': 19, 'state': 'closed'}, {'id': 573077640, 'number': 2722, 'closed': datetime.datetime(2021, 2, 15, 4, 12, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 14, 11, 35, 4, tzinfo=datetime.timezone.utc), 'time_taken': 59849.0, 'time_delta': '16:37:29', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 572448313, 'number': 2702, 'closed': datetime.datetime(2021, 3, 15, 20, 4, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 12, 11, 17, 11, tzinfo=datetime.timezone.utc), 'time_taken': 2710031.0, 'time_delta': '31 days, 8:47:11', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 572429468, 'number': 2700, 'closed': datetime.datetime(2021, 2, 24, 12, 41, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 12, 10, 43, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1043902.0, 'time_delta': '12 days, 1:58:22', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 570921146, 'number': 2676, 'closed': datetime.datetime(2021, 2, 10, 21, 11, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 10, 8, 25, 26, tzinfo=datetime.timezone.utc), 'time_taken': 45962.0, 'time_delta': '12:46:02', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 569019047, 'number': 2653, 'closed': datetime.datetime(2021, 2, 9, 7, 14, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 7, 18, 3, 31, tzinfo=datetime.timezone.utc), 'time_taken': 133857.0, 'time_delta': '1 day, 13:10:57', 'additions': 20, 'deletions': 0, 'state': 'closed'}]"
