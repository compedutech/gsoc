pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1366004860,ci: add new maintainers.yaml file with tsc_members.json data,"<!--   Thank you for your contribution. Before you submit the pull request:
1. Follow our contribution guidelines
2. Test your changes and attach their results to the pull request.
3. Update the relevant documentation.
-->

**Description**

This PR adds a new YAML file named `MAINTAINERS.yaml`. The `MAINTAINERS.yaml` file includes the data from the existing `tsc_members.json` file, but in YAML format. It also includes an update to the `update-website-tsc.yaml` workflow to accept the new YAML file instead of the old JSON file.

Additionally, the conversion from YAML to JSON is being done using Python.

I have tested this locally to ensure that the conversion works correctly. Here is the link to the local test results: https://github.com/14Richa/testRepo/actions/runs/5421542255/jobs/9857107425

**Related issue(s)**
#210",True,720,https://api.github.com/repos/asyncapi/community/pulls/720,https://github.com/asyncapi/community/pull/720,closed,722,183,6,25,2,15,1,0,[{'name': 'ready-to-merge'}],2023-05-26 09:22:03+00:00,2023-07-05 12:39:43+00:00,3467860.0,"40 days, 3:17:40","[{'comment_id': 1250928687, 'comment_body': 'update it to have the maintainer you added it https://github.com/asyncapi/website/pull/1722/files#diff-baf8bd5171cf51fe8f826fb4bf4d110106465786b93a646e18645ba6f3697c1a so it is one-2-one the same', 'comment_created': datetime.datetime(2023, 7, 3, 13, 54, 7, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1250934066, 'comment_body': 'it is no longer tsc members file, please adjust and see also the rest of the workflow description', 'comment_created': datetime.datetime(2023, 7, 3, 13, 58, 44, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1250935634, 'comment_body': 'did you test how it behaves, when there is an error in yaml, will the action fail or silently pass\r\n\r\nalso, please extend this workflow with final step that throws a message to slack on failure', 'comment_created': datetime.datetime(2023, 7, 3, 14, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1251034445, 'comment_body': '> did you test how it behaves, when there is an error in yaml, will the action fail or silently pass\r\n\r\nYes, I have tested the behavior of the workflow when there is an error in the YAML file. In the case of an error, the action does not silently pass; it fails. \r\nHere are the logs : https://github.com/14Richa/testRepo/actions/runs/5446151475/jobs/9906463635', 'comment_created': datetime.datetime(2023, 7, 3, 15, 24, 14, tzinfo=datetime.timezone.utc), 'commenter': '14Richa', 'type': 'User'}, {'comment_id': 1252012136, 'comment_body': 'I guess we no longer can make it `required` ðŸ¤” \r\nthere is not 100% accurate way to automate getting the slack ID, so that is something that bot will not provide. So I guess we just need to ask maintainer to open a followup PR to add it? ðŸ¤” ', 'comment_created': datetime.datetime(2023, 7, 4, 13, 10, 11, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1252015415, 'comment_body': 'this is an old soon to be deprecated way of outputting, please use new, example -> https://github.com/asyncapi/.github/blob/master/.github/workflows/if-go-pr-testing.yml#L32', 'comment_created': datetime.datetime(2023, 7, 4, 13, 13, 10, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1252019485, 'comment_body': 'calculation needs to change a bit\r\n\r\nso now maintainers file has all maintainers, but limits are related to TSC members only, so `allowedMemberPerCompany` is not `members.length` but only members with `isTscMember` set to `true`\r\n\r\nsame with further calculation in `numberOfMemByCompany`', 'comment_created': datetime.datetime(2023, 7, 4, 13, 16, 55, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1252085297, 'comment_body': '> I guess we no longer can make it `required` thinking there is not 100% accurate way to automate getting the slack ID, so that is something that bot will not provide. So I guess we just need to ask maintainer to open a followup PR to add it? ðŸ¤”\r\n\r\n\r\nGot it. I\'ll remove ""slack"" from the required fields in `schema.json`.\r\n\r\n\r\n', 'comment_created': datetime.datetime(2023, 7, 4, 14, 14, 7, tzinfo=datetime.timezone.utc), 'commenter': '14Richa', 'type': 'User'}, {'comment_id': 1252724387, 'comment_body': '```suggestion\r\n    name: Calculate TSC members affiliation\r\n```', 'comment_created': datetime.datetime(2023, 7, 5, 8, 10, 44, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1252909958, 'comment_body': '@14Richa sorry but because we merged https://github.com/asyncapi/community/pull/772/files in, you need to add Thulie here as well (no need to replicate in website)', 'comment_created': datetime.datetime(2023, 7, 5, 10, 37, 48, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1252916071, 'comment_body': '@derberg , no worries! I have added Thulie', 'comment_created': datetime.datetime(2023, 7, 5, 10, 43, 16, tzinfo=datetime.timezone.utc), 'commenter': '14Richa', 'type': 'User'}, {'comment_id': 1252943497, 'comment_body': 'please update this in all workflows to follow the same approach we do with ajv installation: `npm install ajv@6.12.6`\r\nso please lock installation to a specific version you used to make the workflow work. If long term we rely on latest, we may have issues with incoming errors or breaking changes', 'comment_created': datetime.datetime(2023, 7, 5, 11, 7, 45, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1252980244, 'comment_body': ""@derberg, I understand the importance of locking the dependency versions to ensure stability. However, I'm not entirely sure which workflows you are referring to. Could you please specify the names of the workflow files?"", 'comment_created': datetime.datetime(2023, 7, 5, 11, 38, 45, tzinfo=datetime.timezone.utc), 'commenter': '14Richa', 'type': 'User'}, {'comment_id': 1253017799, 'comment_body': 'you have `npm install js-yaml` in few workflows, you need to change it to `npm install js-yaml@WHATEVER_VERSION_YOU_USE`', 'comment_created': datetime.datetime(2023, 7, 5, 12, 13, 56, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1253043112, 'comment_body': '```suggestion\r\n        run: npm install js-yaml@4.1.0\r\n```', 'comment_created': datetime.datetime(2023, 7, 5, 12, 35, 3, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}]","[{'commit_sha': 'adc4fae328e86569377872203809b1d661407267', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe788341f0a847913dfa0d37a7be39ea8717a322', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41b49b9d34accee269e36e239722d63ca73b4a97', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9357aadf2ced23907d204a4cab5bae73d56e9eba', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bcf445758dfd16f5ccbe8ce873fef14fe1b0b32', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bbc9f1d5907ee5ef023dbb53ecc43e2cb9ce1a0', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcae6910b6dcc7f4dbc471c7511972471df6c872', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd1d44d771bb8cbf70fd6501f7b9603ec9edfcd6', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a70e9b446c8965397b07230cf1de522cafc92a64', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23acd8f8fff09ea190fc4ba9b16fd1cb21f2c4cc', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e502fceb4640d3b0f7a0c4d371b74df81d83a91a', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6efca6d2d600fc717472d42bf207cfaee31fd3cc', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a8e4e8bad764fd85076fe7c58a7c6590337fc9d', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59c342e1db75e63f94c236044ddae764cb808bf6', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cba0b3f2a8764cecf6cbf71b7c4548498f3222da', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '593e41990455006e3fc185043cc84e741d6b2b74', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a6515f61bc2b7fef9a54a369547bc411a9967b4', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6e1b2c141c5834a52f89225e0832439d439468d', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b4d91d84af409c2cdf56465143619d669985623', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a9a0698b1299a7a4e6ab9d9b8a71dc7045ffe4e', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee3fa23d64ec2fa5cae4b3eed03dd0a20d94acdd', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '476ba18f976cad250366e333ad20bf70e21372d8', 'committer_username': 'derberg', 'committer_name': 'Lukasz Gornicki', 'committer_email': 'lpgornicki@gmail.com', 'commit_date': datetime.datetime(2014, 3, 19, 7, 47, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1147ec3013f158afc6cb944f5ecc3548c4722cf9', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5022884a65d5d268cd4eff7ebc6d4f5117ec5451', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a98dfda74e329db83d7967225b9c1c47c8f8203f', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}]",Richa,41283476,,User,,88,,7,45
1442591663,chore: add Emeritus.yaml file,"<!--   Thank you for your contribution. Before you submit the pull request:
1. Follow our contribution guidelines
2. Test your changes and attach their results to the pull request.
3. Update the relevant documentation.
-->

**Description**
This PR adds a new file named `Emeritus.yaml` that lists individuals who were previously maintainers but are no longer active. 
",True,806,https://api.github.com/repos/asyncapi/community/pulls/806,https://github.com/asyncapi/community/pull/806,closed,5,0,1,3,1,1,1,0,[{'name': 'ready-to-merge'}],2023-07-20 10:38:26+00:00,2023-07-27 08:13:16+00:00,596090.0,"6 days, 21:34:50","[{'comment_id': 1269316112, 'comment_body': '```suggestion\r\n# This file lists individuals who were previously TSC members but are no longer active.\r\n```', 'comment_created': datetime.datetime(2023, 7, 20, 11, 19, 5, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}]","[{'commit_sha': '010037d6f2aea3072d1f32f508055c3624805071', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '157a546c7b50ce2633745438862c8f15931ddcd4', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '504d4d46e771bf9df61ab07fb361c9d447a066a9', 'committer_username': 'derberg', 'committer_name': 'Lukasz Gornicki', 'committer_email': 'lpgornicki@gmail.com', 'commit_date': datetime.datetime(2014, 3, 19, 7, 47, 34, tzinfo=datetime.timezone.utc)}]",Richa,41283476,,User,,88,,7,45
1431466114,ci: update MAINTAINERS.yaml based on CODEOWNERS changes,"<!--   Thank you for your contribution. Before you submit the pull request:
1. Follow our contribution guidelines
2. Test your changes and attach their results to the pull request.
3. Update the relevant documentation.
-->

**Description**

This PR updates the MAINTAINERS.yaml file based on the changes made in the CODEOWNERS file. The workflow takes the repository name as input and adds it to the MAINTAINERS.yaml file.

When a new code owner is added, a corresponding maintainer object is created in the MAINTAINERS.yaml file with the repository name and the Twitter username of the code owner added to the object. It fetches the Twitter username using the GitHub API.

Similarly, when a code owner is removed, the corresponding maintainer object is removed from the MAINTAINERS.yaml file. The removal process checks if the maintainer has any other repositories before removing them from the MAINTAINERS.yaml file.

I have tested this workflow on my testRepo by adding a new code owner, and the MAINTAINERS.yaml file was updated with the new code owner object and repository name. Here are the logs from the workflow: https://github.com/14Richa/testRepo/actions/runs/5563061192/jobs/10161768757

Similarly, when a code owner is removed MAINTAINERS.yaml file was updated accordingly with the maintainer object removed from the file. Here are the logs from the workflow: https://github.com/14Richa/testRepo/actions/runs/5529277200/jobs/10087118152
",False,248,https://api.github.com/repos/asyncapi/.github/pulls/248,https://github.com/asyncapi/.github/pull/248,open,178,1,2,30,4,21,1,0,[{'name': 'do-not-merge'}],2023-07-12 15:03:27+00:00,,0.0,,"[{'comment_id': 1261343443, 'comment_body': ""```suggestion\r\n        uses: actions/setup-node@v3\r\n        with:\r\n          node-version: '16'\r\n```\r\n\r\nalways latest please"", 'comment_created': datetime.datetime(2023, 7, 12, 15, 20, 14, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1261347658, 'comment_body': 'sorry but why this, and also `Get repository name` step if you can do what you already did here: https://github.com/asyncapi/community/pull/750/files#diff-8ba49e6b37c137810bad8252fc74cb498dbeae5bc4650e947719905455ac7492R46\r\n\r\n`const repo = context.repo.repo;`', 'comment_created': datetime.datetime(2023, 7, 12, 15, 23, 35, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1261351943, 'comment_body': 'push alone will not work, you need to do the same as you did with this workflow: https://github.com/asyncapi/community/blob/master/.github/workflows/update-website-tsc.yml#L48-L51\r\n\r\ncreate PR, as changes in repos can be done only through PRs\r\n\r\nbtw also makes sense to add slack alert', 'comment_created': datetime.datetime(2023, 7, 12, 15, 26, 41, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1261354258, 'comment_body': 'version, consistency ðŸ˜› every time you copy/paste and do not check, a kitty dies ðŸ˜„ ', 'comment_created': datetime.datetime(2023, 7, 12, 15, 28, 5, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1261389366, 'comment_body': ""Thanks for the reminder! :p \r\nUnderstood, I'll make sure to maintain consistency and double-check all details in the future."", 'comment_created': datetime.datetime(2023, 7, 12, 15, 54, 26, tzinfo=datetime.timezone.utc), 'commenter': '14Richa', 'type': 'User'}, {'comment_id': 1266413892, 'comment_body': ""Insn't these variables names a little confusing? PR and MAIN are basically the same here. can't we name these just like the branches? something like `previousCodeowners` and `currentCodeowners`"", 'comment_created': datetime.datetime(2023, 7, 18, 8, 23, 54, tzinfo=datetime.timezone.utc), 'commenter': 'KhudaDad414', 'type': 'User'}, {'comment_id': 1266414165, 'comment_body': 'same here about naming...', 'comment_created': datetime.datetime(2023, 7, 18, 8, 24, 6, tzinfo=datetime.timezone.utc), 'commenter': 'KhudaDad414', 'type': 'User'}, {'comment_id': 1266416763, 'comment_body': '```suggestion\r\n              const maintainerExists = maintainers.find(maintainer => maintainer.github === username);\r\n              if (!maintainerExists) {\r\n```', 'comment_created': datetime.datetime(2023, 7, 18, 8, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'KhudaDad414', 'type': 'User'}, {'comment_id': 1266420189, 'comment_body': ""what about cases when maintainer does exists but they are being added as maintainer to another repo. shouldn't we add the current repo their repo list?"", 'comment_created': datetime.datetime(2023, 7, 18, 8, 28, 59, tzinfo=datetime.timezone.utc), 'commenter': 'KhudaDad414', 'type': 'User'}, {'comment_id': 1267035294, 'comment_body': '```suggestion\r\n          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}\r\n```', 'comment_created': datetime.datetime(2023, 7, 18, 16, 35, 55, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1267036482, 'comment_body': 'I think you can do `env` on job level and then just reuse the `env` like in like 91 instead what we have in line 166', 'comment_created': datetime.datetime(2023, 7, 18, 16, 37, 7, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1267038813, 'comment_body': 'why do you need to install it, it is for sure part of `actions/github-script@v6` action\r\n\r\n![Screenshot 2023-07-18 at 18 38 29](https://github.com/asyncapi/.github/assets/6995927/fe03d71f-32bb-420f-bf0b-7b6c487f67a0)\r\n\r\nand rest client there is already preauthenticated so you do not need code like\r\n\r\n```\r\nconst { Octokit } = require(""@octokit/rest"");\r\n\r\n            const octokit = new Octokit({\r\n              auth: process.env.GITHUB_TOKEN,\r\n              request: {\r\n                fetch: (url, options) => fetch(url, options)\r\n              }\r\n            });\r\n```\r\n', 'comment_created': datetime.datetime(2023, 7, 18, 16, 39, 25, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1267044142, 'comment_body': 'we need to make this regex ""comments""-proof\r\n\r\nsome codeowners files have comments likekhttps://github.com/asyncapi/spec/blob/master/CODEOWNERS and there can be a situation that in the comment there is also `@` and a github handle, but commented out', 'comment_created': datetime.datetime(2023, 7, 18, 16, 44, 34, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1267047232, 'comment_body': 'better first, early just exclude bots, no need to call for twitter info from GH API if we have bot-usecase', 'comment_created': datetime.datetime(2023, 7, 18, 16, 47, 41, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1267053455, 'comment_body': 'why you need different approach here, other than in case of addition, why `findIndex`', 'comment_created': datetime.datetime(2023, 7, 18, 16, 51, 31, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1269166607, 'comment_body': 'If you have to use a token, then please use the `GH_TOKEN` for consistency across this file.', 'comment_created': datetime.datetime(2023, 7, 20, 9, 2, 23, tzinfo=datetime.timezone.utc), 'commenter': 'KhudaDad414', 'type': 'User'}, {'comment_id': 1269188230, 'comment_body': '```suggestion\r\n                  console.log(`Maintainer ${username} already exists and already has the repo. Skipping addition.`);\r\n```', 'comment_created': datetime.datetime(2023, 7, 20, 9, 19, 32, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1269198403, 'comment_body': 'did you test it well and you sure it works fine\r\n\r\nI usually use indexOf for simple types, and for objects it is not that obvious -> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Strict_equality#comparing_objects\r\n\r\n@KhudaDad414 thoughts?', 'comment_created': datetime.datetime(2023, 7, 20, 9, 28, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1269288967, 'comment_body': '@derberg, I did test it. Here are the logs: https://github.com/14Richa/testRepo/actions/runs/5610049235/jobs/10264525094\r\nCodeowner was successfully removed from MAINTAINERS.yaml file. ', 'comment_created': datetime.datetime(2023, 7, 20, 10, 52, 1, tzinfo=datetime.timezone.utc), 'commenter': '14Richa', 'type': 'User'}, {'comment_id': 1269330053, 'comment_body': 'but it is risky, as `indexOf` do not actually check the content but references, super risky in any future refactoring. I recommend changing to `findIndex`', 'comment_created': datetime.datetime(2023, 7, 20, 11, 31, 16, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}, {'comment_id': 1273403896, 'comment_body': '```suggestion\r\nname: Update MAINTAINERS.yaml in community repo\r\n```', 'comment_created': datetime.datetime(2023, 7, 25, 11, 38, 32, tzinfo=datetime.timezone.utc), 'commenter': 'derberg', 'type': 'User'}]","[{'commit_sha': 'b69de5dae23e555e55561ec619a1e200334da02c', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e493d7bdcad90d35a06a0db558fa4cf61a2d09d', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70ffb1cdee7abe9eee3502d977e036fe00805808', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ae74dfb4da7ca0590fc403c10b758c75bb799ca', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcc83346fc40182cc20f1496ca99407fa4784222', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f60bfca6030ed1e818966d964a7f5f2dd001ac0', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cabea9efb3d4ee441b83ab74b65e9e123e1fd19', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7367b1f6139119b57a8fc06fafc51ed4684c7b4e', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4de0eb2a6c153a5505cc986d6fe8ddcb36a23e03', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f31a73d49382fcb645c9138bc19699cccbcfc8f', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fff0565434125831cd400e5cbab7b9a1cfbdccf', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcd504fbfbec5698322bc2b105999fafb5e229f2', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17dd441567a1569c0908579a4a4ee32d658e5a9c', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '073c252e9c9f20f07e3f0467975265e5058d9f3b', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78f41e615b8fefebba746c85d0d0290408657210', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b56e2f7340d376fc1b64248e454cc31103ec501', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e976135ff76824a217187bc8bc6a124650c6f36', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2acd8b3534e36fe9c800d9c21735b44fde32b1bc', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf8d9fde7f8ce0250a21b1a08f885e1fa47e7528', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30b0293fe5b907add7f8fa994fc3bd2c66162ab5', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a31564624197c2aa7a7de50304ae9df18e08d740', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc5b57b8488425c449c4f62320c026ec24d005e1', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '504fbfeb7e555b60413191b9ddb9f54e35d72518', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7528dfd9e8ad184eb543dffe97b9d1736aff8b7e', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19730526a0035a0f37a82fad7c39d02fa27a8819', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '573771db446ec1204fe4975381d38c9d8f1f9281', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd409dc58aa5c5f9419b1cd5d29d5b9636ffc423f', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '093d749f75b00358a22e51dcd78824dbf319bee9', 'committer_username': 'KhudaDad414', 'committer_name': 'Khuda Dad Nomani', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 4, 5, 14, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b1ab9e1dd6d1420f5381c7ec609f6e273ab1712', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84c9280da3763d4f47e0ec2020c010c138468282', 'committer_username': '14Richa', 'committer_name': 'Richa', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 16, 7, 31, 51, tzinfo=datetime.timezone.utc)}]",Richa,41283476,,User,,88,,7,45

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
347621559,community,asyncapi/community,,98,95,14,69,523,65,6,21,"[{'id': 1478886451, 'number': 849, 'closed': datetime.datetime(2023, 8, 22, 8, 38, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 17, 11, 35, 17, tzinfo=datetime.timezone.utc), 'time_taken': 421410.0, 'time_delta': '4 days, 21:03:30', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1471357053, 'number': 843, 'closed': datetime.datetime(2023, 8, 16, 19, 22, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 11, 7, 14, 40, tzinfo=datetime.timezone.utc), 'time_taken': 475646.0, 'time_delta': '5 days, 12:07:26', 'additions': 8, 'deletions': 4, 'state': 'closed'}, {'id': 1471279324, 'number': 840, 'closed': datetime.datetime(2023, 8, 11, 6, 36, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 11, 5, 52, 59, tzinfo=datetime.timezone.utc), 'time_taken': 2590.0, 'time_delta': '0:43:10', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 1470610912, 'number': 838, 'closed': datetime.datetime(2023, 8, 10, 19, 58, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 10, 16, 2, 9, tzinfo=datetime.timezone.utc), 'time_taken': 14171.0, 'time_delta': '3:56:11', 'additions': 52, 'deletions': 25, 'state': 'closed'}, {'id': 1470511360, 'number': 836, 'closed': datetime.datetime(2023, 8, 10, 15, 1, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 10, 14, 59, 21, tzinfo=datetime.timezone.utc), 'time_taken': 122.0, 'time_delta': '0:02:02', 'additions': 6, 'deletions': 5, 'state': 'closed'}, {'id': 1470484183, 'number': 834, 'closed': datetime.datetime(2023, 8, 10, 14, 47, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 10, 14, 45, 19, tzinfo=datetime.timezone.utc), 'time_taken': 140.0, 'time_delta': '0:02:20', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1470229126, 'number': 832, 'closed': datetime.datetime(2023, 8, 10, 13, 35, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 10, 12, 12, 8, tzinfo=datetime.timezone.utc), 'time_taken': 5001.0, 'time_delta': '1:23:21', 'additions': 8, 'deletions': 6, 'state': 'closed'}, {'id': 1470198641, 'number': 831, 'closed': datetime.datetime(2023, 8, 10, 12, 2, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 10, 11, 50, 37, tzinfo=datetime.timezone.utc), 'time_taken': 711.0, 'time_delta': '0:11:51', 'additions': 4, 'deletions': 5, 'state': 'closed'}, {'id': 1470190281, 'number': 830, 'closed': datetime.datetime(2023, 8, 10, 11, 47, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 10, 11, 44, 48, tzinfo=datetime.timezone.utc), 'time_taken': 140.0, 'time_delta': '0:02:20', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1470167719, 'number': 828, 'closed': datetime.datetime(2023, 8, 10, 11, 35, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 10, 11, 27, 28, tzinfo=datetime.timezone.utc), 'time_taken': 491.0, 'time_delta': '0:08:11', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 1470074533, 'number': 827, 'closed': datetime.datetime(2023, 8, 10, 10, 54, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 10, 10, 17, 35, tzinfo=datetime.timezone.utc), 'time_taken': 2223.0, 'time_delta': '0:37:03', 'additions': 16, 'deletions': 21, 'state': 'closed'}, {'id': 1457512412, 'number': 821, 'closed': datetime.datetime(2023, 8, 3, 8, 10, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 7, 3, 54, tzinfo=datetime.timezone.utc), 'time_taken': 176781.0, 'time_delta': '2 days, 1:06:21', 'additions': 72, 'deletions': 0, 'state': 'closed'}, {'id': 1444246982, 'number': 807, 'closed': datetime.datetime(2023, 8, 3, 8, 18, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 21, 10, 2, 18, tzinfo=datetime.timezone.utc), 'time_taken': 1116957.0, 'time_delta': '12 days, 22:15:57', 'additions': 259, 'deletions': 0, 'state': 'closed'}, {'id': 1442591663, 'number': 806, 'closed': datetime.datetime(2023, 7, 27, 8, 13, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 20, 10, 38, 26, tzinfo=datetime.timezone.utc), 'time_taken': 596090.0, 'time_delta': '6 days, 21:34:50', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 1434860379, 'number': 803, 'closed': datetime.datetime(2023, 7, 31, 9, 25, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 14, 14, 15, 41, tzinfo=datetime.timezone.utc), 'time_taken': 1451377.0, 'time_delta': '16 days, 19:09:37', 'additions': 270, 'deletions': 91, 'state': 'closed'}, {'id': 1427761189, 'number': 797, 'closed': datetime.datetime(2023, 7, 12, 15, 3, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 10, 15, 40, 27, tzinfo=datetime.timezone.utc), 'time_taken': 170602.0, 'time_delta': '1 day, 23:23:22', 'additions': 133, 'deletions': 0, 'state': 'closed'}, {'id': 1421210073, 'number': 786, 'closed': datetime.datetime(2023, 7, 5, 14, 42, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 14, 22, 11, tzinfo=datetime.timezone.utc), 'time_taken': 1229.0, 'time_delta': '0:20:29', 'additions': 9, 'deletions': 1, 'state': 'closed'}, {'id': 1421112812, 'number': 785, 'closed': datetime.datetime(2023, 7, 5, 14, 14, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 13, 29, 23, tzinfo=datetime.timezone.utc), 'time_taken': 2720.0, 'time_delta': '0:45:20', 'additions': 4, 'deletions': 8, 'state': 'closed'}, {'id': 1393910667, 'number': 750, 'closed': datetime.datetime(2023, 8, 9, 13, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 15, 11, 4, 45, tzinfo=datetime.timezone.utc), 'time_taken': 4760535.0, 'time_delta': '55 days, 2:22:15', 'additions': 154, 'deletions': 0, 'state': 'closed'}, {'id': 1366004860, 'number': 720, 'closed': datetime.datetime(2023, 7, 5, 12, 39, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 26, 9, 22, 3, tzinfo=datetime.timezone.utc), 'time_taken': 3467860.0, 'time_delta': '40 days, 3:17:40', 'additions': 722, 'deletions': 183, 'state': 'closed'}, {'id': 1364074971, 'number': 719, 'closed': datetime.datetime(2023, 7, 24, 14, 29, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 25, 4, 34, 26, tzinfo=datetime.timezone.utc), 'time_taken': 5219720.0, 'time_delta': '60 days, 9:55:20', 'additions': 259, 'deletions': 0, 'state': 'closed'}, {'id': 1363161121, 'number': 717, 'closed': datetime.datetime(2023, 5, 31, 11, 29, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 24, 13, 44, 41, tzinfo=datetime.timezone.utc), 'time_taken': 596675.0, 'time_delta': '6 days, 21:44:35', 'additions': 27, 'deletions': 11, 'state': 'closed'}, {'id': 1322888972, 'number': 686, 'closed': datetime.datetime(2023, 4, 24, 13, 20, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 21, 10, 35, 32, tzinfo=datetime.timezone.utc), 'time_taken': 269112.0, 'time_delta': '3 days, 2:45:12', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 1319281905, 'number': 674, 'closed': datetime.datetime(2023, 4, 19, 10, 24, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 19, 5, 29, 31, tzinfo=datetime.timezone.utc), 'time_taken': 17680.0, 'time_delta': '4:54:40', 'additions': 8, 'deletions': 11, 'state': 'closed'}, {'id': 1299968461, 'number': 657, 'closed': datetime.datetime(2023, 4, 5, 10, 7, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 3, 12, 16, 42, tzinfo=datetime.timezone.utc), 'time_taken': 165051.0, 'time_delta': '1 day, 21:50:51', 'additions': 13, 'deletions': 4, 'state': 'closed'}, {'id': 1299963581, 'number': 656, 'closed': datetime.datetime(2023, 4, 3, 12, 15, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 3, 12, 13, 15, tzinfo=datetime.timezone.utc), 'time_taken': 142.0, 'time_delta': '0:02:22', 'additions': 70, 'deletions': 0, 'state': 'closed'}, {'id': 1299934293, 'number': 655, 'closed': datetime.datetime(2023, 4, 3, 11, 57, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 3, 11, 55, 52, tzinfo=datetime.timezone.utc), 'time_taken': 73.0, 'time_delta': '0:01:13', 'additions': 70, 'deletions': 0, 'state': 'closed'}, {'id': 1278203320, 'number': 636, 'closed': datetime.datetime(2023, 4, 3, 10, 52, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 16, 9, 30, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1560174.0, 'time_delta': '18 days, 1:22:54', 'additions': 64, 'deletions': 0, 'state': 'closed'}]"
254598177,.github,asyncapi/.github,,62,29,9,41,163,25,1,8,"[{'id': 1431466114, 'number': 248, 'closed': None, 'created': datetime.datetime(2023, 7, 12, 15, 3, 27, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 178, 'deletions': 1, 'state': 'open'}, {'id': 1350180888, 'number': 238, 'closed': datetime.datetime(2023, 6, 8, 9, 27, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 15, 6, 24, 14, tzinfo=datetime.timezone.utc), 'time_taken': 2084568.0, 'time_delta': '24 days, 3:02:48', 'additions': 101, 'deletions': 1, 'state': 'closed'}, {'id': 1298643512, 'number': 225, 'closed': datetime.datetime(2023, 4, 4, 17, 18, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 1, 9, 46, 29, tzinfo=datetime.timezone.utc), 'time_taken': 286298.0, 'time_delta': '3 days, 7:31:38', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1292662290, 'number': 220, 'closed': datetime.datetime(2024, 2, 21, 14, 37, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 28, 9, 37, 49, tzinfo=datetime.timezone.utc), 'time_taken': 28529984.0, 'time_delta': '330 days, 4:59:44', 'additions': 57, 'deletions': 0, 'state': 'closed'}]"
