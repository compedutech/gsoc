pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
651466337,Added frontend tests for topic questions tab component,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of N/A
2. This PR does the following: Migrates `topic--questions-tab` from directive to component and increases frontend test coverage for the file to 100%.

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->
![image](https://user-images.githubusercontent.com/30050862/119377844-30f2a480-bcdb-11eb-87a9-62920313db21.png)

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,12893,https://api.github.com/repos/oppia/oppia/pulls/12893,https://github.com/oppia/oppia/pull/12893,closed,374,117,6,14,22,45,1,1,[{'name': 'PR: LGTM'}],2021-05-24 16:28:02+00:00,2021-06-06 07:19:48+00:00,1090306.0,"12 days, 14:51:46","[{'comment_id': 638496305, 'comment_body': 'Try not to use linter-bypasss comments. FYI, import statement can have more than 80 chars in a line*', 'comment_created': datetime.datetime(2021, 5, 25, 6, 39, 50, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 639322059, 'comment_body': 'The ""prechecks"" and ""postchecks"" seem identical here. Is this expected?', 'comment_created': datetime.datetime(2021, 5, 26, 0, 34, 2, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 639323072, 'comment_body': 'Perhaps you want to modify the scope variables (question, skillId etc) and then after `topicInitializedEventEmitter.emit()` expect that they are reset? Ditto for the next test.', 'comment_created': datetime.datetime(2021, 5, 26, 0, 37, 10, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 639323396, 'comment_body': 'Please see the comment above.', 'comment_created': datetime.datetime(2021, 5, 26, 0, 38, 6, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 639323545, 'comment_body': 'Is this description correct?', 'comment_created': datetime.datetime(2021, 5, 26, 0, 38, 38, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 639936508, 'comment_body': 'DONE', 'comment_created': datetime.datetime(2021, 5, 26, 17, 5, 53, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 639936605, 'comment_body': 'DONE', 'comment_created': datetime.datetime(2021, 5, 26, 17, 5, 58, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 639936730, 'comment_body': 'I changed the description to `should unsubscribe when onDestroy runs`. DONE', 'comment_created': datetime.datetime(2021, 5, 26, 17, 6, 4, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 642054188, 'comment_body': ""Are we only expecting to change the filename here? (If yes, can we use `git mv` so that it doesn't add this as a new file?)"", 'comment_created': datetime.datetime(2021, 5, 30, 10, 23, 29, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 642054662, 'comment_body': 'No, This was converted from an AngularJS directive to an AngularJS component. So, I had to change a couple of lines.', 'comment_created': datetime.datetime(2021, 5, 30, 10, 28, 4, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 642056649, 'comment_body': 'DONE', 'comment_created': datetime.datetime(2021, 5, 30, 10, 45, 12, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 642202679, 'comment_body': 'I think the PR overall looks good. Need to work a bit on the names of the specs. The names currently are very dependent on the code, lets not do that... For example, for this spec, I would say,\r\n\r\nShould initialize tab when topic is reinitialized', 'comment_created': datetime.datetime(2021, 5, 31, 4, 30, 1, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 642202797, 'comment_body': 'missing the action in the name.. When should it initialize the variables?', 'comment_created': datetime.datetime(2021, 5, 31, 4, 30, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 642709358, 'comment_body': ""When creating test data, try to have the test names communicate something so that it's easier for the reader and so that testing can make sure the correct value is being identified. E.g. testSkill or sampleSkill, testCategory, etc."", 'comment_created': datetime.datetime(2021, 5, 31, 23, 59, 47, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642709438, 'comment_body': ""Shouldn't this start with a lowercase letter?"", 'comment_created': datetime.datetime(2021, 6, 1, 0, 0, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642709467, 'comment_body': ""Shouldn't this start with a lowercase letter?"", 'comment_created': datetime.datetime(2021, 6, 1, 0, 0, 19, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642710001, 'comment_body': 'Please add pre-checks, always check both the ""before action"" and ""after action"" states.\r\n\r\nAlso maybe add some explanation about why various fields are null? Sounds like that should be a separate test if you\'re focusing on behaviours (the intended behaviour this is testing is not clear from the test name, see Nithesh\'s comment below).', 'comment_created': datetime.datetime(2021, 6, 1, 0, 3, 20, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642710217, 'comment_body': 'Better if you check that the list of directive subscriptions was nonempty before the call and empty after.\r\n\r\nIn general, prefer checking the actual states of things and not just that some method has been called, where possible.', 'comment_created': datetime.datetime(2021, 6, 1, 0, 4, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642710292, 'comment_body': ""This isn't a behaviour. What outcome are you expecting when the questions list is reinitialized? Test that."", 'comment_created': datetime.datetime(2021, 6, 1, 0, 5, 10, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642710359, 'comment_body': 'Here and elsewhere, add a newline above each function definition. Otherwise it ends up being quite hard to read.', 'comment_created': datetime.datetime(2021, 6, 1, 0, 5, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642710438, 'comment_body': ""Should this stuff be done in $onInit? Checking with @srijanreddy98 because I'm not sure."", 'comment_created': datetime.datetime(2021, 6, 1, 0, 6, 9, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 643624121, 'comment_body': ""I don't see this file having any angular code? I only see the filenames are changed* am I missing anything?"", 'comment_created': datetime.datetime(2021, 6, 2, 3, 22, 43, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 643624774, 'comment_body': 'This https://github.com/oppia/oppia/blob/ab6b1fb9b33c507dd51817acf267c1b3e0de6d78/core/templates/pages/topic-editor-page/questions-tab/topic-questions-tab.directive.ts#L32-L44\r\nChanges to this\r\nhttps://github.com/oppia/oppia/blob/f10fb5a9c4d2fd44cc8408e02ffa853e7a62f272/core/templates/pages/topic-editor-page/questions-tab/topic-questions-tab.component.ts#L32-L37', 'comment_created': datetime.datetime(2021, 6, 2, 3, 25, 10, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 645091661, 'comment_body': 'DONE', 'comment_created': datetime.datetime(2021, 6, 3, 20, 6, 25, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 645091704, 'comment_body': 'DONE', 'comment_created': datetime.datetime(2021, 6, 3, 20, 6, 30, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 645091891, 'comment_body': 'DONE', 'comment_created': datetime.datetime(2021, 6, 3, 20, 6, 50, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 645091963, 'comment_body': 'DONE', 'comment_created': datetime.datetime(2021, 6, 3, 20, 6, 58, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 645092247, 'comment_body': 'DONE', 'comment_created': datetime.datetime(2021, 6, 3, 20, 7, 26, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 645094498, 'comment_body': '`$scope.question` remains null and does not get updated. It is also not used in the `topic-questions-tab.component.html` file. Same for `$scope.skillId`', 'comment_created': datetime.datetime(2021, 6, 3, 20, 11, 18, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 645098226, 'comment_body': 'DONE', 'comment_created': datetime.datetime(2021, 6, 3, 20, 18, 2, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 645125936, 'comment_body': ""I'm not sure how to test that. Any tips?"", 'comment_created': datetime.datetime(2021, 6, 3, 21, 7, 18, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 645133321, 'comment_body': ""I'm testing this function here:\r\nhttps://github.com/oppia/oppia/blob/ddfab3665410c41e72d16256d77862e9373b5377/core/templates/pages/topic-editor-page/questions-tab/topic-questions-tab.component.ts#L75-L81\r\n\r\nThe outcomes I'm expecting are the functions `QuestionsListService.resetPageNumber()` \r\n and `QuestionsListService.getQuestionSummariesAsync` being called and the `$scope.selectedSkillId` being set."", 'comment_created': datetime.datetime(2021, 6, 3, 21, 21, 29, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 645201193, 'comment_body': 'Is it possible for these values to actually be null in practice?', 'comment_created': datetime.datetime(2021, 6, 3, 23, 52, 24, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645201256, 'comment_body': 'Is this a valid possible returned dict by the backend? (with null values all over the place)', 'comment_created': datetime.datetime(2021, 6, 3, 23, 52, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645201737, 'comment_body': 'OK, I\'m confused. Let\'s go back to the test description -- everything starts from there. In what way do the various null checks test ""the tab is initialized""?\r\n\r\nAlso, I still don\'t see the pre-checks for $scope.allSkillSummaries etc. Without those there is no proof that they were changed as a result of the action that\'s being tested.', 'comment_created': datetime.datetime(2021, 6, 3, 23, 54, 3, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645203025, 'comment_body': ""If you're not sure how to do something, always create a [debugging doc](https://github.com/oppia/oppia/wiki/Debugging-Docs) explaining what you tried and what you are thinking, and then I (or someone else) can suggest next steps. With this, I have too little to go on and can't really help you.\r\n\r\nMy first inclination would have been to see if I can introspect ctrl.directiveSubscriptions to see if I can get a list of subscriptions that are still active; this requires you to look into the API of the Subscription object etc."", 'comment_created': datetime.datetime(2021, 6, 3, 23, 57, 49, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645203246, 'comment_body': 'Try to check the final state instead, rather than that a function was called.\r\n\r\nRemember that you need a pre-check too in order to ensure that a change actually happened.', 'comment_created': datetime.datetime(2021, 6, 3, 23, 58, 29, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645240895, 'comment_body': 'Technically, yes. But in the previous code it was outside onInit too. When migrating we move these to the ngOnInit function. I think its fine since this is just a rename.', 'comment_created': datetime.datetime(2021, 6, 4, 2, 5, 39, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 645740934, 'comment_body': 'DONE', 'comment_created': datetime.datetime(2021, 6, 4, 17, 32, 14, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 645741068, 'comment_body': 'DONE', 'comment_created': datetime.datetime(2021, 6, 4, 17, 32, 30, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 645741428, 'comment_body': 'Made it a bit more clear', 'comment_created': datetime.datetime(2021, 6, 4, 17, 33, 11, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 645743384, 'comment_body': 'DONE', 'comment_created': datetime.datetime(2021, 6, 4, 17, 36, 54, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 645743423, 'comment_body': 'DONE', 'comment_created': datetime.datetime(2021, 6, 4, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 645800319, 'comment_body': 'Your baseline and endline verifications need to be reasonably similar to each other in order to count as baseline and endline verifications. In particular every baseline verification must have an endline counterpart.', 'comment_created': datetime.datetime(2021, 6, 4, 19, 21, 35, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645877033, 'comment_body': 'DONE', 'comment_created': datetime.datetime(2021, 6, 4, 21, 54, 54, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}]","[{'commit_sha': 'c5d1a5b216161c784bb9ba8f671002d9152715c9', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '849f42d978b6dcd68b8648a75cca487bcdebed96', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75be10bed6d70a277b8bb3033ec0661d30595ede', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f10fb5a9c4d2fd44cc8408e02ffa853e7a62f272', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'deb9be5d46cf83ebc514152bf5bf39550dac480b', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb8cc1a8c3e248c08975c6af805354ff25118603', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddfab3665410c41e72d16256d77862e9373b5377', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49bfb4c981168ca82904577eec56dbce21653716', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a8d994f92290af3d5d2ee598c0c57cccaf44113', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d9f865e994108e9749d93117c1d97e68dc936b0', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd54ab16528977961c1058189824ae781528871e6', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89c0703437defde1042587073238825db552bc46', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be70f053f06321f75a06d0d4dafcbd4008fd9a9f', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cbef723698e2b8cabe6d36688c7c68f5723500a', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}]",Praneeth,30050862,,User,,60,,0,0
662814301,Added frontend tests for unicode string editor component,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following:  increases frontend test coverage for the file `unicode-string-editor.component.ts` to 100%.

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

![image](https://user-images.githubusercontent.com/30050862/120915561-e7825c00-c6c1-11eb-8fc8-3bd0c4d12a5e.png)


## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,12996,https://api.github.com/repos/oppia/oppia/pulls/12996,https://github.com/oppia/oppia/pull/12996,closed,217,2,3,14,36,60,1,1,[{'name': 'PR: LGTM'}],2021-06-06 06:54:13+00:00,2021-06-20 16:00:13+00:00,1242360.0,"14 days, 9:06:00","[{'comment_id': 646373331, 'comment_body': ""I don't think you'll need this line"", 'comment_created': datetime.datetime(2021, 6, 7, 8, 24, 25, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 646519866, 'comment_body': 'what happens if this is true? the init block behaves differently right?', 'comment_created': datetime.datetime(2021, 6, 7, 11, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 646520041, 'comment_body': '```suggestion\r\n    // function.\r\n```', 'comment_created': datetime.datetime(2021, 6, 7, 11, 57, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 646520416, 'comment_body': 'Could you explain this? How is ""interaction rule"" linked to this?', 'comment_created': datetime.datetime(2021, 6, 7, 11, 57, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 646520751, 'comment_body': ""This feels weird... You set this 1 line above, and I don't know why you need to assert it here."", 'comment_created': datetime.datetime(2021, 6, 7, 11, 58, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 646520937, 'comment_body': ""```suggestion\r\n  it('should replace value when externalSave is emitted', () => {\r\n```"", 'comment_created': datetime.datetime(2021, 6, 7, 11, 58, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 646521440, 'comment_body': 'I see this line multiple times within the same block.. Why is it needed twice?', 'comment_created': datetime.datetime(2021, 6, 7, 11, 59, 14, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 646521543, 'comment_body': 'Same comment as above', 'comment_created': datetime.datetime(2021, 6, 7, 11, 59, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 646522128, 'comment_body': ""Hmm, what I don't understand is the purpose of the event and the code.... "", 'comment_created': datetime.datetime(2021, 6, 7, 12, 0, 15, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 646524944, 'comment_body': 'this is just testing 1 happy path for a lot of conditions. Would like to see more tests for that.', 'comment_created': datetime.datetime(2021, 6, 7, 12, 4, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 646570007, 'comment_body': 'Nothing happens if it is true.\r\nhttps://github.com/oppia/oppia/blob/819b5c2218e1b35b937212442ac1132d65cc517a/extensions/objects/templates/unicode-string-editor.component.ts#L41-L52', 'comment_created': datetime.datetime(2021, 6, 7, 13, 7, 16, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 646570471, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 7, 13, 7, 51, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 646570838, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 7, 13, 8, 17, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 646573248, 'comment_body': 'After execution of `component.ngOnInit();`, `component.active` is set to `false`. To test the subscribed observable. it needs to be set to `true` to make the code inside the run.\r\nhttps://github.com/oppia/oppia/blob/819b5c2218e1b35b937212442ac1132d65cc517a/extensions/objects/templates/unicode-string-editor.component.ts#L43-L49', 'comment_created': datetime.datetime(2021, 6, 7, 13, 11, 22, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 646574298, 'comment_body': 'PTAL at the reply above.', 'comment_created': datetime.datetime(2021, 6, 7, 13, 12, 45, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 646575564, 'comment_body': ""I'm asserting to make sure the value changes after `component.ngOnInit();` runs"", 'comment_created': datetime.datetime(2021, 6, 7, 13, 14, 12, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 646829313, 'comment_body': 'Added a test to check what happens if the condition fails', 'comment_created': datetime.datetime(2021, 6, 7, 18, 9, 38, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 646844819, 'comment_body': 'https://github.com/oppia/oppia/blob/d6e57564444c9d8ecd91a7553728c1ce5141da2f/extensions/interactions/rule_templates.json#L38-L40\r\n\r\nIf you see the code given above we can see that it has a variable `UnicodeString`.\r\nI tested this by putting a break point in the `component.ngOnInit();` function. Upon selection of the rule. It got triggered.', 'comment_created': datetime.datetime(2021, 6, 7, 18, 32, 2, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 646886042, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2021, 6, 7, 19, 37, 30, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 646894484, 'comment_body': 'This event is triggered by: https://github.com/oppia/oppia/blob/d6e57564444c9d8ecd91a7553728c1ce5141da2f/core/templates/components/state-editor/state-responses-editor/state-responses.directive.ts#L255-L260\r\n\r\nLine 256 to be specific.', 'comment_created': datetime.datetime(2021, 6, 7, 19, 51, 32, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 649420185, 'comment_body': 'Added a test for that', 'comment_created': datetime.datetime(2021, 6, 10, 18, 19, 37, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 651440016, 'comment_body': 'nothing happens is a different scenario.. So that needs a separate test... Thanks for adding one', 'comment_created': datetime.datetime(2021, 6, 15, 4, 32, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 651440785, 'comment_body': ""No, what I mean is what does the event achieve? It doesn't seem to assign anything new"", 'comment_created': datetime.datetime(2021, 6, 15, 4, 34, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 653614838, 'comment_body': 'But we can spy on ExternalSaveService.onExternalSave, right? and provide the service instance through `configureTestingModule`, right?', 'comment_created': datetime.datetime(2021, 6, 17, 14, 23, 11, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 654392705, 'comment_body': ""No, if we have to spy then we have to write `spyOn(component.externalSaveService, 'onExternalSave');`, but \r\n `externalSaveService` is a private variable so it cannot be spied upon."", 'comment_created': datetime.datetime(2021, 6, 18, 12, 34, 22, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654568136, 'comment_body': ""Sorry, I'm asking to spy on the `ExternalSaveService` and not on the `component.externalSaveService`.\r\n\r\ni.e, import `ExternalSaveService` and sypOn(ExternalSaveService,  'onExternalSave'), will that work?"", 'comment_created': datetime.datetime(2021, 6, 18, 16, 53, 51, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 654576573, 'comment_body': ""No, that won't work. We need to have `component.externalSaveService`.\r\nI also tried adding the spy, but the following error came.\r\n![image](https://user-images.githubusercontent.com/30050862/122595640-64301580-d086-11eb-97fd-08610d972f19.png)\r\n\r\nI had included the service in the `configureTestingModule`.\r\n``` typescript\r\nbeforeEach(async(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [FormsModule],\r\n      declarations: [UnicodeStringEditorComponent],\r\n      providers: [ExternalSaveService]\r\n    }).compileComponents();\r\n  }));\r\n```"", 'comment_created': datetime.datetime(2021, 6, 18, 17, 10, 10, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654623398, 'comment_body': ""`onExternalSave` is a getter, so have you tried spyOnProperty?\r\n\r\nSomething around:\r\n `sypOnProperty(ExternalSaveService, 'onExternalSave', 'get')`"", 'comment_created': datetime.datetime(2021, 6, 18, 18, 50, 56, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 654779070, 'comment_body': 'Done. Thanks for the tip!', 'comment_created': datetime.datetime(2021, 6, 19, 10, 24, 57, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654799126, 'comment_body': 'Is this still true?', 'comment_created': datetime.datetime(2021, 6, 19, 13, 54, 1, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 654799456, 'comment_body': ""Are we expecting to have some changes here? (Also, I think we should focus on testing the behavior instead of making sure that the function is getting called, so if we can test the behavior changes by this function call, we don't need to ensure that whether the function got called or not and we don't need to write a code-comment stating that we cannot assert the function call.)"", 'comment_created': datetime.datetime(2021, 6, 19, 13, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 654799815, 'comment_body': 'I have tested the behaviour in a separate test.\r\n\r\nhttps://github.com/oppia/oppia/blob/93c03aaabc98bb6ff7e4594f87a68e6135e60d0f/extensions/objects/templates/unicode-string-editor.component.spec.ts#L91-L109', 'comment_created': datetime.datetime(2021, 6, 19, 14, 0, 44, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654800066, 'comment_body': 'Yes, since we are still unable to test for `.toHaveBeenCalledWith()`', 'comment_created': datetime.datetime(2021, 6, 19, 14, 2, 54, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654830885, 'comment_body': 'Maybe add a comment above this line saying `// Pre-check.`, to clarify the intent. When I read this, I thought it was weird too.', 'comment_created': datetime.datetime(2021, 6, 19, 19, 23, 17, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 654830979, 'comment_body': 'All your post-checks should have corresponding pre-checks.', 'comment_created': datetime.datetime(2021, 6, 19, 19, 24, 27, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 654831059, 'comment_body': 'Each of your post-checks should have corresponding pre-checks (to verify that the change was caused as a result of the action being taken in the test).', 'comment_created': datetime.datetime(2021, 6, 19, 19, 25, 23, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 654831109, 'comment_body': ""@gp201 Please explain this in the code.\r\n\r\nAlso, typically -- when a reviewer leaves a comment saying they don't understand something, it means that other people reading the code won't understand it either. So, when you get such a comment, you might want to proactively leave comments within the code to explain what is going on. This will help preempt subsequent reviewers asking you to do exactly that.\r\n\r\n"", 'comment_created': datetime.datetime(2021, 6, 19, 19, 26, 38, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 654831270, 'comment_body': ""Same question as @nithusha21 from my end. A test needs to be testing a change; if you can't test that then the test can't claim to be testing that. So I don't understand what's going on either."", 'comment_created': datetime.datetime(2021, 6, 19, 19, 28, 13, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 654831352, 'comment_body': '... should become active\r\n\r\n(and below: should become inactive)', 'comment_created': datetime.datetime(2021, 6, 19, 19, 28, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 654831423, 'comment_body': 'All post-checks should have corresponding pre-checks.', 'comment_created': datetime.datetime(2021, 6, 19, 19, 29, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 654832193, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 19, 19, 36, 42, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654832198, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 19, 19, 36, 48, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654832276, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 19, 19, 37, 52, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654832391, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 19, 19, 38, 58, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654832396, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 19, 19, 39, 7, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654833136, 'comment_body': 'This test attempts to test the following code:\r\nhttps://github.com/oppia/oppia/blob/93c03aaabc98bb6ff7e4594f87a68e6135e60d0f/extensions/objects/templates/unicode-string-editor.component.ts#L42-L51\r\n\r\nIn line 46 we pass `this.value` to `this.replaceValue` function\r\n\r\nhttps://github.com/oppia/oppia/blob/93c03aaabc98bb6ff7e4594f87a68e6135e60d0f/extensions/objects/templates/unicode-string-editor.component.ts#L46\r\n\r\nand in `this.replaceValue` function we replace the `this.value` with the new value, .i.e, `this.value` in this case.\r\n\r\nhttps://github.com/oppia/oppia/blob/93c03aaabc98bb6ff7e4594f87a68e6135e60d0f/extensions/objects/templates/unicode-string-editor.component.ts#L66-L69\r\n\r\nHence, we cannot test for the change in `this.value`, but I have tested for the change in `this.active`.', 'comment_created': datetime.datetime(2021, 6, 19, 19, 47, 3, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654833344, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 19, 19, 49, 17, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654835972, 'comment_body': ""I don't see the corresponding pre-check for e.g. alwaysEditable.\r\n\r\nPlease double-check to make sure that everything is covered."", 'comment_created': datetime.datetime(2021, 6, 19, 20, 16, 41, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 654836004, 'comment_body': 'What does this last part mean (""to make the code inside the run"")? It doesn\'t scan.', 'comment_created': datetime.datetime(2021, 6, 19, 20, 17, 21, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 654836140, 'comment_body': ""Then why not update the code in line 46 to be this.closeEditor() instead, if some of it is a no-op? Writing tests for code often results in improving it if you find things that don't logically make sense.\r\n\r\n(Please still manually test to make sure it works correctly.)"", 'comment_created': datetime.datetime(2021, 6, 19, 20, 18, 55, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 654836332, 'comment_body': 'I had removed this line since it checks the same objective as line 63. The subscription is tested in a separate test.', 'comment_created': datetime.datetime(2021, 6, 19, 20, 21, 17, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654838360, 'comment_body': ""I don't follow -- https://github.com/oppia/oppia/pull/12996/files#diff-97532317345e77c56e41a813bb4f2ff9fce2f88ae76182f4d5ca91fab935de07R67 still has a missing pre-check.\r\n\r\nAh -- are you only doing it for this line? My comment was meant to apply to every line of every test, not just this one."", 'comment_created': datetime.datetime(2021, 6, 19, 20, 45, 8, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 654840191, 'comment_body': 'removed', 'comment_created': datetime.datetime(2021, 6, 19, 21, 6, 36, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654840193, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 19, 21, 6, 44, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654852646, 'comment_body': ""Hi @gp201, I don't understand this comment. If you are not expecting the state to change, why is it being tested?\r\n\r\nIf you need it as a precondition for subscription.add, that may be OK, but please explain the linkage more clearly. At first glance it is not clear what alwaysEditable has to do with subscription.add.\r\n\r\n(Also, nit: it's --> its)"", 'comment_created': datetime.datetime(2021, 6, 19, 23, 33, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 654875939, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 20, 4, 47, 15, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654876776, 'comment_body': ""Same note, still. Why is its being false a precondition for subscription.add? Don't just assert it, try to explain it."", 'comment_created': datetime.datetime(2021, 6, 20, 4, 57, 57, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 654877393, 'comment_body': 'Is the modified comment given below ok?\r\n```\r\n// subscription.add is called only if the text input is not always editable.\r\n// The alwaysEditable variable is tested since it is a pre-condition\r\n// for subscription.add. \r\n```', 'comment_created': datetime.datetime(2021, 6, 20, 5, 6, 38, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654879373, 'comment_body': ""It's closer, but establish the link:\r\n\r\n```\r\n// subscription.add is called only if the text input is not always editable.\r\n// Therefore, we verify that the value of alwaysEditable is false before checking\r\n// subscription.add. \r\n```"", 'comment_created': datetime.datetime(2021, 6, 20, 5, 30, 25, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 654880095, 'comment_body': 'Done. Thank you for your guidance!', 'comment_created': datetime.datetime(2021, 6, 20, 5, 39, 9, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}]","[{'commit_sha': '2c99f9c188cef95c2d037ac25324ca792f8164a7', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fe22171538a0f843a4e4bcfa272f03a51c5ceb8', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dff01bf8c9c5cef170edb639ec5e0412d2578264', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04f0ccc21cafacf15e5b469c7f7d66b80aaa8687', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93c03aaabc98bb6ff7e4594f87a68e6135e60d0f', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14301fb38af5485d84e2bd59c3e58ff2f7a94b29', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90314dc919cffe4a859399622eb881d24705906a', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b6ce60a6c758f837b25e259a14467cd2040b406', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e84e1ccb4c6aaa4135124c84feb698f32c95039', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8c5b315e625b80dbb277d41a9c245eff1eb0270', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41b9861478a81fda0e242123e85e182a76c9509c', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '432e0753b4c3fb5362f1d4e965353ddf5a6bb74a', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b160f4df04ab1e8949f0c6828ba791220419c68', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05a3a999b2f9f6471150dea59333f9375400d501', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}]",Praneeth,30050862,,User,,60,,0,0
673929886,Frontend Unit Tests: Cover multiple component files,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: Adds frontend unit tests for:

- `html-escaper.service.ts`
- `topic-editor-page.component.ts`
- `oppia-interactive-continue.component.ts`
- `oppia-response-continue.component.ts`
- `oppia-short-response-continue.component.ts`
- `oppia-interactive-fraction-input.component.ts`
- `oppia-response-fraction-input.component.ts`
- `oppia-short-response-fraction-input.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->
- `html-escaper.service.ts`
![image](https://user-images.githubusercontent.com/30050862/122654041-49cd6900-d166-11eb-8c50-a090093b39a5.png)
- `topic-editor-page.component.ts`
![image](https://user-images.githubusercontent.com/30050862/122654065-72556300-d166-11eb-876d-1f4bbddff556.png)
- `oppia-interactive-continue.component.ts`
![image](https://user-images.githubusercontent.com/30050862/122654083-8731f680-d166-11eb-9541-eb972e43439d.png)
- `oppia-response-continue.component.ts`
![image](https://user-images.githubusercontent.com/30050862/122654690-c5311980-d16a-11eb-8592-3ad15798ea7b.png)

- `oppia-short-response-continue.component.ts`

- `oppia-interactive-fraction-input.component.ts`

- `oppia-response-fraction-input.component.ts`

- `oppia-short-response-fraction-input.component.ts`


## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13137,https://api.github.com/repos/oppia/oppia/pulls/13137,https://github.com/oppia/oppia/pull/13137,closed,735,9,10,9,8,25,1,1,"[{'name': ""PR: don't merge - STALE BUILD""}]",2021-06-19 20:27:27+00:00,2021-06-23 18:14:02+00:00,337595.0,"3 days, 21:46:35","[{'comment_id': 654844965, 'comment_body': 'Add a space before `is` so that the description has a space between `action` and `is`', 'comment_created': datetime.datetime(2021, 6, 19, 22, 0, 50, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654845034, 'comment_body': 'Is the description complete here?', 'comment_created': datetime.datetime(2021, 6, 19, 22, 1, 50, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654845625, 'comment_body': 'it should create what? The description here can be changed to explain what you are testing.', 'comment_created': datetime.datetime(2021, 6, 19, 22, 9, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654845660, 'comment_body': 'ditto', 'comment_created': datetime.datetime(2021, 6, 19, 22, 9, 18, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654845704, 'comment_body': 'Add a space before `added`', 'comment_created': datetime.datetime(2021, 6, 19, 22, 9, 46, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654845729, 'comment_body': 'ditto', 'comment_created': datetime.datetime(2021, 6, 19, 22, 10, 11, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654846039, 'comment_body': 'How is this different from the one in line 176?', 'comment_created': datetime.datetime(2021, 6, 19, 22, 13, 49, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654846145, 'comment_body': 'Maybe `it should get placeholder text when interaction loads`', 'comment_created': datetime.datetime(2021, 6, 19, 22, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654846185, 'comment_body': 'Same as above, for here and other places', 'comment_created': datetime.datetime(2021, 6, 19, 22, 15, 16, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654846314, 'comment_body': 'How is this different from the tests above?', 'comment_created': datetime.datetime(2021, 6, 19, 22, 16, 45, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654846378, 'comment_body': 'Same comment as above', 'comment_created': datetime.datetime(2021, 6, 19, 22, 17, 47, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654846398, 'comment_body': 'ditto', 'comment_created': datetime.datetime(2021, 6, 19, 22, 18, 4, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654876001, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 20, 4, 48, 8, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654876097, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 20, 4, 49, 13, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654876255, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 20, 4, 51, 13, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654876273, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 20, 4, 51, 26, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654876412, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2021, 6, 20, 4, 53, 34, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654876597, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 20, 4, 55, 28, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654876600, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 20, 4, 55, 32, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654876827, 'comment_body': 'This is to test the isAnswerValid function which is passed to currentInteractionService.registerCurrentInteraction', 'comment_created': datetime.datetime(2021, 6, 20, 4, 58, 41, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654879063, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 20, 5, 26, 48, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654879087, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 20, 5, 26, 53, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654880355, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 20, 5, 41, 56, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 654880377, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 20, 5, 42, 2, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 657368412, 'comment_body': '`core/templates/services/html-escaper.service.spec.ts` was made strictly typed before merge of this PR. This import is making strict checks to fail. Is there any alternative for this ?', 'comment_created': datetime.datetime(2021, 6, 23, 18, 34, 48, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}]","[{'commit_sha': 'a28d9bd03141dc66d845545a2a54c07271c32aaa', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4946630615a81ff00fdf258e2a1e86c67c88c311', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '009e9175cecf7e09bbf4154dedb6bbe80b2c803a', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7365dadd7c41ef46eb582a0897de075e429e6748', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b71567085a7800065d5e4d442d982eaef06fa3c4', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0f5db286a765caf16759795ead5bfd0b7272db2', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b65954cf26fa313a26f2381a0d8055c1c99362f6', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1793fddabe46f4cebc816145e78c6561dffc64a', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a93f4218cc06132b80cd6cfaf4f40736447b8f5', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}]",Praneeth,30050862,,User,,60,,0,0
678189987,Frontend Unit Tests: Cover multiple component files,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of N/A.
2. This PR does the following: Adds frontend unit tests for:

- `entity-creation.service.ts`
- `subtopic-preview-tab.component.ts`
- `autogenerated-audio-player.service.ts`
- `graph-detail.service.ts`
- `graph-input-rules.service.ts`
- `oppia-interactive-image-click-input.component.ts`
- `oppia-noninteractive-video.component.ts`
- `csrf-token.service.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

- `entity-creation.service.ts`

![image](https://user-images.githubusercontent.com/30050862/123486484-beeae380-d629-11eb-9bac-58d4812ee830.png)
- `subtopic-preview-tab.component.ts`

![image](https://user-images.githubusercontent.com/30050862/123486538-daee8500-d629-11eb-996f-bd7720637db6.png)

- `autogenerated-audio-player.service.ts`

![image](https://user-images.githubusercontent.com/30050862/123486604-fd809e00-d629-11eb-8000-a4d54f520356.png)

- `graph-detail.service.ts`

![image](https://user-images.githubusercontent.com/30050862/123486655-138e5e80-d62a-11eb-8cc3-5f4978df19b6.png)

- `graph-input-rules.service.ts`

![image](https://user-images.githubusercontent.com/30050862/123486789-5a7c5400-d62a-11eb-907e-5af40a0294e1.png)

- `oppia-interactive-image-click-input.component.ts`
- 
![image](https://user-images.githubusercontent.com/30050862/123486829-6e27ba80-d62a-11eb-837b-d7fd9cd638b5.png)

- `oppia-noninteractive-video.component.ts`

![image](https://user-images.githubusercontent.com/30050862/123486919-99120e80-d62a-11eb-937c-681950335892.png)

- `csrf-token.service.ts`

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13213,https://api.github.com/repos/oppia/oppia/pulls/13213,https://github.com/oppia/oppia/pull/13213,closed,1229,22,10,15,13,14,2,1,"[{'name': 'PR: LGTM'}, {'name': ""PR: don't merge - STALE BUILD""}]",2021-06-25 21:26:22+00:00,2021-06-29 20:14:32+00:00,341290.0,"3 days, 22:48:10","[{'comment_id': 659053087, 'comment_body': 'Can we test the interface rather than implementation details?\r\n(Ex: `should display thumbnail when x is triggered`)\r\nMissing pre-checks', 'comment_created': datetime.datetime(2021, 6, 25, 21, 45, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 659053238, 'comment_body': 'Ditto as above.', 'comment_created': datetime.datetime(2021, 6, 25, 21, 45, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 659054385, 'comment_body': 'why do we need all these expectations?\r\n(we need to test whether the audio is started or not as per description right?)', 'comment_created': datetime.datetime(2021, 6, 25, 21, 49, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 659054685, 'comment_body': 'Missing pre-checks.', 'comment_created': datetime.datetime(2021, 6, 25, 21, 49, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 659054770, 'comment_body': 'Missing pre-checks.', 'comment_created': datetime.datetime(2021, 6, 25, 21, 50, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 659054931, 'comment_body': 'Missing pre-checks.', 'comment_created': datetime.datetime(2021, 6, 25, 21, 50, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 659055434, 'comment_body': 'Missing pre-checks.\r\nditto here and elsewhere', 'comment_created': datetime.datetime(2021, 6, 25, 21, 51, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 659123748, 'comment_body': 'Removed the function `changeContent`, since it is no longer being used in the codebase.', 'comment_created': datetime.datetime(2021, 6, 26, 5, 42, 13, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659123754, 'comment_body': 'Removed the function `changeContent`, since it is no longer being used in the codebase.', 'comment_created': datetime.datetime(2021, 6, 26, 5, 42, 16, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659124373, 'comment_body': 'Yes, all of these tests are required. Here we are testing not only if the audio has started, but also if it started with the correct settings, such as language, the text that is going to be converted to speech etc...', 'comment_created': datetime.datetime(2021, 6, 26, 5, 50, 6, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659124662, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 26, 5, 53, 14, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659124667, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 26, 5, 53, 16, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659125395, 'comment_body': 'Pre-checks cannot be used here since all the variables used within\r\nthe function are private. Here we attempt to test if the\r\nfunction returns the expected output for a specified input.', 'comment_created': datetime.datetime(2021, 6, 26, 5, 58, 56, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659125397, 'comment_body': 'Pre-checks cannot be used here since all the variables used within\r\nthe function are private. Here we attempt to test if the\r\nfunction returns the expected output for a specified input.', 'comment_created': datetime.datetime(2021, 6, 26, 5, 58, 57, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}]","[{'commit_sha': '38baf6e8cb1ab639b0165421ba345fd4f8e20883', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6a43138a847d66c88679882dbf9dc1eedea8250', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e1cb806b57f7a922ae498bb1b29a6ce50c20869', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '247513262e74ca48765589b8ebd3044273ab4ebc', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c80ee4e1e7fdf23d850959d2549d6ad5c84a8c09', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ece6a0d2a8eeb0de4fa6e5446d268f061d6010be', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '812ce407a8eaa2f49bf958fb417f872a2f6f6f99', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6da02dd7d091b405a794b693f4fbc1fd5c2be82a', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '902a536d49e57379117c670586df2612b4f1cec3', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfa563392ec2f53ec89c5983ecc509d93c9d51cd', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6ed14c5ee497bada5ed565c742ec7cd88905552', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f043d16891c9d768e00c0608478f8a24754a914e', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc3da2a8c9bdbe391a4c924982fd57524501da09', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ac64b20ec0ce042feff81316b796112243e1b5e', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20633d4842d009c4865f7161fdbfc9483b636282', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}]",Praneeth,30050862,,User,,60,,0,0
680115825,Frontend tests for graph-viz.component,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of N/A.
2. This PR does the following: Adds frontend tests for `graph-viz.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

![image](https://user-images.githubusercontent.com/30050862/123823525-eb994680-d91a-11eb-92c1-8f68dcd6271b.png)


## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13257,https://api.github.com/repos/oppia/oppia/pulls/13257,https://github.com/oppia/oppia/pull/13257,closed,1863,1,2,3,6,31,1,2,"[{'name': ""PR: don't merge - STALE BUILD""}]",2021-06-29 15:15:25+00:00,2021-07-02 21:43:54+00:00,282509.0,"3 days, 6:28:29","[{'comment_id': 661081520, 'comment_body': 'Can you explain the structure of this graph via comments, verbally or visually? Also, leave a comment about how the x and y coordinates of the vertices are taken, especially in line 73, 74.', 'comment_created': datetime.datetime(2021, 6, 30, 2, 17, 40, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 661082169, 'comment_body': 'The test description does not exactly portray what is happening inside the test block (`the graph is visualized part`). Can you modify the description or add a comment?', 'comment_created': datetime.datetime(2021, 6, 30, 2, 19, 53, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 661083246, 'comment_body': 'maybe `should set graph properties after the view is initialized`', 'comment_created': datetime.datetime(2021, 6, 30, 2, 23, 17, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 661083860, 'comment_body': ""Add space: `' vertices....`"", 'comment_created': datetime.datetime(2021, 6, 30, 2, 25, 31, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 661083967, 'comment_body': 'ditto here and other test descriptions', 'comment_created': datetime.datetime(2021, 6, 30, 2, 25, 52, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 661084277, 'comment_body': 'This test seems to be repeated ', 'comment_created': datetime.datetime(2021, 6, 30, 2, 26, 55, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 661085949, 'comment_body': 'Same comment as before -- please leave a comment if this is a random value or explanation if this is not random.', 'comment_created': datetime.datetime(2021, 6, 30, 2, 32, 8, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 661086238, 'comment_body': 'This expectation can be removed', 'comment_created': datetime.datetime(2021, 6, 30, 2, 33, 7, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 661086468, 'comment_body': 'ditto', 'comment_created': datetime.datetime(2021, 6, 30, 2, 33, 49, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 661088734, 'comment_body': ""`' weighted...`"", 'comment_created': datetime.datetime(2021, 6, 30, 2, 41, 11, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 661089254, 'comment_body': 'Are these values random? If not please add an explanation for selecting these', 'comment_created': datetime.datetime(2021, 6, 30, 2, 42, 33, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 661089305, 'comment_body': 'Here and elsewhere', 'comment_created': datetime.datetime(2021, 6, 30, 2, 42, 43, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 661089925, 'comment_body': ""`user's` or `user is`"", 'comment_created': datetime.datetime(2021, 6, 30, 2, 44, 43, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 661090350, 'comment_body': '`....user clicks....`', 'comment_created': datetime.datetime(2021, 6, 30, 2, 46, 14, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 661090888, 'comment_body': 'repeated words', 'comment_created': datetime.datetime(2021, 6, 30, 2, 47, 50, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 661092332, 'comment_body': 'Did you check [this](https://netbasal.com/create-and-test-decorators-in-javascript-85e8d5cf879c) out? It seems to explain how we can test decorators in jest, the method should be the same for jasmine. Can you confirm if this way works?', 'comment_created': datetime.datetime(2021, 6, 30, 2, 52, 30, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 661155770, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 30, 6, 5, 57, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 661164930, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 30, 6, 25, 45, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 661165116, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 30, 6, 26, 11, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 661165591, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 30, 6, 27, 5, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 661165827, 'comment_body': 'Done. Removed', 'comment_created': datetime.datetime(2021, 6, 30, 6, 27, 33, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 661166337, 'comment_body': 'The comment is present on the top of the file.', 'comment_created': datetime.datetime(2021, 6, 30, 6, 28, 29, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 661167096, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 30, 6, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 661167432, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 30, 6, 30, 39, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 661167601, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 30, 6, 30, 59, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 661176004, 'comment_body': 'Fixed, Done.', 'comment_created': datetime.datetime(2021, 6, 30, 6, 46, 29, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 661176937, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 30, 6, 48, 14, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 661177124, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 30, 6, 48, 34, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 661177349, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 30, 6, 48, 56, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 661183329, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 30, 6, 59, 7, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 661198865, 'comment_body': 'Done, Thanks for the help!', 'comment_created': datetime.datetime(2021, 6, 30, 7, 24, 14, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}]","[{'commit_sha': 'a6d665c70c9d9f2a4b869f427ee6ffef2d0aecc2', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8656e6cfd1f82b647ddf9605d12f380b6b0c5a4e', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5f7153061ac1d0c53a9d36be019e1d6831bf72b', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}]",Praneeth,30050862,,User,,60,,0,0
680125930,Frontend tests for image-with-regions-editor.component,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of N/A.
2. This PR does the following: Adds frontend tests for `image-with-regions-editor.component.ts`.

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

![image](https://user-images.githubusercontent.com/30050862/123825025-29e33580-d91c-11eb-9d1a-3bf8dd025336.png)


## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13258,https://api.github.com/repos/oppia/oppia/pulls/13258,https://github.com/oppia/oppia/pull/13258,closed,1310,1,2,3,5,4,0,3,[],2021-06-29 15:24:19+00:00,2021-07-02 17:49:13+00:00,267894.0,"3 days, 2:24:54","[{'comment_id': 661452744, 'comment_body': 'Can we add pre-checks?', 'comment_created': datetime.datetime(2021, 6, 30, 13, 4, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 661452995, 'comment_body': 'Can we add pre-checks?\r\nditto here and elsewhere.', 'comment_created': datetime.datetime(2021, 6, 30, 13, 4, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 661987799, 'comment_body': 'No, Pre-checks cannot be added here since there is no state change occurring. It just returns a value when called. like a getter function.', 'comment_created': datetime.datetime(2021, 7, 1, 5, 35, 29, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 661987821, 'comment_body': 'No, Pre-checks cannot be added here since there is no state change occurring. It just returns a value when called. like a getter function.', 'comment_created': datetime.datetime(2021, 7, 1, 5, 35, 32, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}]","[{'commit_sha': 'ac0746068ea2e6135ee350f82ae687f078423bb2', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6b05a3a05d782562ba69e4789208189dc4be17b', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '375a808e684fa2a842b5fa276b219d42259d5b67', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}]",Praneeth,30050862,,User,,60,,0,0
683092770,Frontend Unit Tests(3): Cover multiple component files,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[N/A].
2. This PR does the following: Adds frontend unit tests for:

- `oppia-interactive-graph-input.component.ts`
- `oppia-response-graph-input.component.ts`
- `oppia-short-response-graph-input.component.ts`
- `oppia-response-image-click-input.component.ts`
- `oppia-short-response-image-click-input.component.ts`
- `logic-error-category-editor.component.ts`
- `normalized-string-editor.directive.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

- `oppia-interactive-graph-input.component.ts`

![image](https://user-images.githubusercontent.com/30050862/124369523-29370000-dc8a-11eb-9b6e-efb514080a36.png)

- `oppia-response-graph-input.component.ts`
- `oppia-short-response-graph-input.component.ts`
- `oppia-response-image-click-input.component.ts`
- `oppia-short-response-image-click-input.component.ts`
- `logic-error-category-editor.component.ts`
- `normalized-string-editor.directive.ts`


## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13303,https://api.github.com/repos/oppia/oppia/pulls/13303,https://github.com/oppia/oppia/pull/13303,closed,1487,10,11,3,9,0,0,2,[],2021-07-04 00:09:19+00:00,2021-07-07 18:34:56+00:00,325537.0,"3 days, 18:25:37",[],"[{'commit_sha': 'df23657c90a984dd188e54807d86285ee4ecdd38', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9132c7f5552d00690d8266e182ec6dbd65a4692', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c33272e7ecb9c9b1ae2a9d08c8cea06c592e0fe', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}]",Praneeth,30050862,,User,,60,,0,0
684007775,Frontend Unit Tests(4): Cover multiple component files ,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[N/A].
2. This PR does the following: Adds frontend unit tests for:

- `oppia-interactive-text-input.component.ts`
- `oppia-response-text-input.component.ts`
- `oppia-short-response-text-input.component.ts`
- `boolean-editor.component.ts`
- `drag-and-drop-positive-int-editor.component.ts`
- `fraction-editor.component.ts`
- `graph-editor.component.ts`
- `html-editor.component.ts`
- `int-editor.component.ts`
- `list-of-tabs-editor.component.ts`
- `list-of-unicode-string-editor.component.ts`
- `math-expression-content-editor.component.ts`
- `nonnegative-int-editor.component.ts`
- `number-with-units-editor.component.ts`
- `sanitized-url-editor.component.ts`
- `subtitled-html-editor.component.ts`
- `oppia-noninteractive-collapsible.component.ts`
- `oppia-noninteractive-image.component.ts`
- `oppia-noninteractive-link.component.ts`
- `oppia-noninteractive-tabs.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->
- `oppia-interactive-text-input.component.ts`

![image](https://user-images.githubusercontent.com/30050862/124531628-866ab700-de2c-11eb-809d-52d6f07b7efb.png)

- `oppia-response-text-input.component.ts`

![image](https://user-images.githubusercontent.com/30050862/124531658-9b474a80-de2c-11eb-9b82-9e7a578adc03.png)

- `oppia-short-response-text-input.component.ts`
- `boolean-editor.component.ts`
- `drag-and-drop-positive-int-editor.component.ts`
- `fraction-editor.component.ts`
- `graph-editor.component.ts`
- `html-editor.component.ts`
- `int-editor.component.ts`
- `list-of-tabs-editor.component.ts`
- `list-of-unicode-string-editor.component.ts`
- `math-expression-content-editor.component.ts`
- `nonnegative-int-editor.component.ts`
- `number-with-units-editor.component.ts`
- `sanitized-url-editor.component.ts`
- `subtitled-html-editor.component.ts`
- `oppia-noninteractive-collapsible.component.ts`
- `oppia-noninteractive-image.component.ts`
- `oppia-noninteractive-link.component.ts`
- `oppia-noninteractive-tabs.component.ts`
## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13319,https://api.github.com/repos/oppia/oppia/pulls/13319,https://github.com/oppia/oppia/pull/13319,closed,2390,22,23,9,11,6,1,1,[{'name': 'PR: LGTM'}],2021-07-06 02:04:46+00:00,2021-07-09 14:45:41+00:00,304855.0,"3 days, 12:40:55","[{'comment_id': 664405720, 'comment_body': 'user*', 'comment_created': datetime.datetime(2021, 7, 6, 9, 46, 26, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 664417174, 'comment_body': 'math*', 'comment_created': datetime.datetime(2021, 7, 6, 10, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 664687870, 'comment_body': 'I added `!` since `https` should be added to the link provided by the user if the link does not start with `http` or `https`.\r\n\r\nThe current change checks if either `http` or `https` is present. If both are not then is `https` is added to the link provided by the user.', 'comment_created': datetime.datetime(2021, 7, 6, 16, 1, 2, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 664690039, 'comment_body': ""After setting the error message for an empty fraction it should stop running the function. Otherwise, it will check if the fraction has any errors in it's format"", 'comment_created': datetime.datetime(2021, 7, 6, 16, 3, 56, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 666026821, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 8, 9, 28, 12, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 666026833, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 8, 9, 28, 13, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}]","[{'commit_sha': 'cd60adca4949f03e4da444450a1ac3eb3c6debea', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2092d7e3cf22f8926d0e3c25d81b6e0be92ccc7', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39f02808fed0d48e84b195bdfa1e0c861817c66d', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65916e3e2250482596baf17f5efa10963a089dd7', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd795d0df269781a318ff4a09f98f52bcabcc04a7', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '640aa5b399b9e3eebf86b6ed5ad925091207b693', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04232829fb775f0a007483e23095312f4cf9fb96', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79e7e95bbe26c15f423d404575215a26e237339e', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4e08933ab3cf70d3461c7a23604733292f49799', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}]",Praneeth,30050862,,User,,60,,0,0
682999993,Added frontend tests for filepath-editor.component,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[N/A].
2. This PR does the following: Added frontends tests for 419/462 lines of the `filepath-editor.component`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

![image](https://user-images.githubusercontent.com/30050862/124350331-bf7b0f80-dc11-11eb-8bda-60bb67645307.png)


## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13297,https://api.github.com/repos/oppia/oppia/pulls/13297,https://github.com/oppia/oppia/pull/13297,closed,2317,0,1,4,5,10,0,2,[],2021-07-03 09:54:08+00:00,2021-07-05 17:51:04+00:00,201416.0,"2 days, 7:56:56","[{'comment_id': 663577562, 'comment_body': 'Why do we require this logic in the tests? Can you please leave a comment?', 'comment_created': datetime.datetime(2021, 7, 5, 0, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 663577768, 'comment_body': '`it should set component properties on initialization`', 'comment_created': datetime.datetime(2021, 7, 5, 0, 25, 35, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 663577864, 'comment_body': 'Maybe re word in this way - `it should change X on.....`', 'comment_created': datetime.datetime(2021, 7, 5, 0, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 663577982, 'comment_body': '`it should resent component on Y` format maybe better', 'comment_created': datetime.datetime(2021, 7, 5, 0, 27, 1, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 663578121, 'comment_body': 'ditto comment, for here and elsewhere -- try to follow the `should do X when Y happens`', 'comment_created': datetime.datetime(2021, 7, 5, 0, 27, 42, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 663663130, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 5, 6, 14, 49, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 663663330, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 5, 6, 15, 25, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 663663887, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 5, 6, 16, 39, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 663664597, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 5, 6, 18, 30, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 663665340, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 5, 6, 20, 37, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}]","[{'commit_sha': '4220a26834cfaca8f5eea5a472edb83f3d88fa3c', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc7a64c94f1fd9a2491df483d7f0ac12e11867ee', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a39e49b02673621c6b01521c74af27b93a178ca9', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3e2ad91aa4895a63a621189e3fbaf316ba112c7', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}]",Praneeth,30050862,,User,,60,,0,0
692130737,Frontend Unit Tests(5): Cover multiple component files,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[N/A].
2. This PR does the following: Adds frontend unit tests for:

- `translatable-html-content-id.component.ts`
- `ConceptCardObjectFactory.ts`
- `StoryContentsObjectFactory.ts`
- `TopicObjectFactory.ts`
- `messenger.service.ts`
- `promo-bar-backend-api.service.ts`
- `request-interceptor.service.ts`
- `state-top-answers-stats.service.ts`
- `utils.service.ts`
- `svm-prediction.service.ts`
- `base-interaction-validation.service.ts`
- `oppia-interactive-code-repl.component.ts`
- `oppia-response-code-repl.component.ts`
- `oppia-short-response-code-repl.component.ts`
- `fraction-input-validation.service.ts`
- `item-selection-input-validation.service.ts`
- `oppia-interactive-logic-proof.component.ts`
- `oppia-response-logic-proof.component.ts`
- `oppia-short-response-logic-proof.component.ts`
- `music-notes-input-rules.service.ts`
- `music-phrase-player.service.ts`
- `code-string-editor.component.ts`
- `coord-two-dim-editor.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

- `translatable-html-content-id.component.ts`

![image](https://user-images.githubusercontent.com/30050862/126078365-2bdd4061-93d4-44ec-bf89-cdf508bc6c28.png)

- `ConceptCardObjectFactory.ts`

![image](https://user-images.githubusercontent.com/30050862/126078376-8cc7fe53-f8df-4404-8ec2-eaf37420414a.png)

- StoryContentsObjectFactory.ts`

![image](https://user-images.githubusercontent.com/30050862/126078391-4c1e0448-af2a-43d3-8657-18668179f357.png)

- `TopicObjectFactory.ts`

![image](https://user-images.githubusercontent.com/30050862/126078402-7c841cbd-c5d8-47ea-b12b-bbd24cf72775.png)

- `messenger.service.ts`

![image](https://user-images.githubusercontent.com/30050862/126078416-b0707f4c-ad19-4d36-9677-151e53bf02c7.png)

- `promo-bar-backend-api.service.ts`
- `request-interceptor.service.ts`
- `state-top-answers-stats.service.ts`
- `utils.service.ts`
- `svm-prediction.service.ts`
- `base-interaction-validation.service.ts`
- `oppia-interactive-code-repl.component.ts`
- `oppia-response-code-repl.component.ts`
- `oppia-short-response-code-repl.component.ts`
- `fraction-input-validation.service.ts`
- `item-selection-input-validation.service.ts`
- `oppia-interactive-logic-proof.component.ts`
- `oppia-response-logic-proof.component.ts`
- `oppia-short-response-logic-proof.component.ts`
- `music-notes-input-rules.service.ts`
- `music-phrase-player.service.ts`
- `code-string-editor.component.ts`
- `coord-two-dim-editor.component.ts`

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13423,https://api.github.com/repos/oppia/oppia/pulls/13423,https://github.com/oppia/oppia/pull/13423,closed,3252,99,28,4,10,5,1,1,[{'name': 'PR: LGTM'}],2021-07-18 18:32:20+00:00,2021-07-22 16:29:10+00:00,338210.0,"3 days, 21:56:50","[{'comment_id': 671880836, 'comment_body': ""There is no Exception class in Typescript. Hence we cannot get an object of the exception class.\r\n\r\nPlease Note:\r\n`throw new Error('Error')` results in an object of Error class\r\n"", 'comment_created': datetime.datetime(2021, 7, 18, 18, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 671880951, 'comment_body': 'There is an **unexpected** `""` in code that resulted in errors while writing frontend tests. Hence it has been removed.', 'comment_created': datetime.datetime(2021, 7, 18, 18, 36, 31, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 671881574, 'comment_body': 'Please Note that `<table>` tag cannot be placed within the `<p>` tag.\r\n([Source](https://stackoverflow.com/a/4434111))', 'comment_created': datetime.datetime(2021, 7, 18, 18, 42, 15, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 672498738, 'comment_body': 'are the test description correct?', 'comment_created': datetime.datetime(2021, 7, 19, 17, 36, 58, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 672816765, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 20, 5, 30, 39, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}]","[{'commit_sha': 'c971c4625d457a7231cc79bb289bb51bdada786a', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bce66d14dff8b6e056f1d2c94175dd28508862f0', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '443103ad65bffd66a78411c4ce04c2700385cdc6', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76bfd8bc9e69fd5eb5d0cb4a9bf11297f63714e9', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}]",Praneeth,30050862,,User,,60,,0,0
696280615,Frontend Unit Tests(6): Cover multiple component files,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[N/A].
2. This PR does the following: Adds frontend unit tests for:

- `number-with-units-validation.service.ts`
- `logic-question-editor.component.ts`
- `music-phrase-editor.component.ts`
- `set-of-translatable-html-content-ids-editor.component.ts`
- `set-of-unicode-string-editor.component.ts`
- `oppia-noninteractive-math.component.ts`
- `oppia-noninteractive-skillreview.component.ts`
- `oppia-interactive-interactive-map.component.ts`
- `oppia-response-interactive-map.component.ts`
- `oppia-short-response-interactive-map.component.ts`
- `oppia-interactive-drag-and-drop-sort-input.directive.ts`
- `oppia-response-drag-and-drop-sort-input.directive.ts`
- `oppia-short-response-drag-and-drop-sort-input.directive.ts`
- `oppia-interactive-item-selection-input.directive.ts`
- `oppia-response-item-selection-input.directive.ts`
- `oppia-short-response-item-selection-input.directive.ts`
- `oppia-interactive-number-with-units.directive.ts`
- `oppia-response-number-with-units.directive.ts`
- `oppia-short-response-number-with-units.directive.ts`
- `oppia-interactive-numeric-input.component.ts`
- `oppia-response-numeric-input.component.ts`
- `oppia-short-response-numeric-input.component.ts`
- `oppia-interactive-set-input.component.ts`
- `oppia-response-set-input.component.ts`
- `oppia-short-response-set-input.component.ts`


## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

- `number-with-units-validation.service.ts`

![image](https://user-images.githubusercontent.com/30050862/126854996-cd3279ce-70a6-494d-89fb-e215a50abb4b.png)

- `logic-question-editor.component.ts`

![image](https://user-images.githubusercontent.com/30050862/126855004-d6a9639a-21c6-46b9-9ab7-e93387ef1865.png)

- `music-phrase-editor.component.ts`

![image](https://user-images.githubusercontent.com/30050862/126855010-4c92587c-736c-4b9f-9e89-516e2812e449.png)

- `set-of-translatable-html-content-ids-editor.component.ts`

![image](https://user-images.githubusercontent.com/30050862/126855016-b24758ba-9343-43b0-8ba9-10acac0eca10.png)

- `set-of-unicode-string-editor.component.ts`

![image](https://user-images.githubusercontent.com/30050862/126855044-da014e97-4f10-4a27-b87b-433e9c17d2bc.png)

- `oppia-noninteractive-math.component.ts`

![image](https://user-images.githubusercontent.com/30050862/126855027-316ed0d9-61e1-4703-8d46-066041e01f47.png)

- `oppia-noninteractive-skillreview.component.ts`
- `oppia-interactive-interactive-map.component.ts`
- `oppia-response-interactive-map.component.ts`
- `oppia-short-response-interactive-map.component.ts`
- `oppia-interactive-drag-and-drop-sort-input.directive.ts`
- `oppia-response-drag-and-drop-sort-input.directive.ts`
- `oppia-short-response-drag-and-drop-sort-input.directive.ts`
- `oppia-interactive-item-selection-input.directive.ts`
- `oppia-response-item-selection-input.directive.ts`
- `oppia-short-response-item-selection-input.directive.ts`
- `oppia-interactive-number-with-units.directive.ts`
- `oppia-response-number-with-units.directive.ts`
- `oppia-short-response-number-with-units.directive.ts`
- `oppia-interactive-numeric-input.component.ts`
- `oppia-response-numeric-input.component.ts`
- `oppia-short-response-numeric-input.component.ts`
- `oppia-interactive-set-input.component.ts`
- `oppia-response-set-input.component.ts`
- `oppia-short-response-set-input.component.ts`

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13476,https://api.github.com/repos/oppia/oppia/pulls/13476,https://github.com/oppia/oppia/pull/13476,closed,3838,647,55,10,11,25,0,2,[],2021-07-24 02:32:06+00:00,2021-07-29 21:04:38+00:00,498752.0,"5 days, 18:32:32","[{'comment_id': 675935383, 'comment_body': 'This part of the code does not execute because `this._localValue` must be a callable itself. That is, it must be a function object. But in this case, it is a variable.\r\nSource: [developer.mozilla.org](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/apply#invariants)', 'comment_created': datetime.datetime(2021, 7, 24, 2, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 676180208, 'comment_body': ""```suggestion\r\nrequire(\r\n  'interactions/interaction-attributes-extractor.service.ts');\r\nrequire(\r\n  'interactions/DragAndDropSortInput/directives/' +\r\n  'drag-and-drop-sort-input-rules.service.ts');\r\nrequire(\r\n  'pages/exploration-player-page/services/current-interaction.service.ts');\r\n```"", 'comment_created': datetime.datetime(2021, 7, 25, 17, 46, 40, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676180377, 'comment_body': '```suggestion\r\n          ctrl.savedSolution !== undefined ? ctrl.savedSolution : []\r\n```', 'comment_created': datetime.datetime(2021, 7, 25, 17, 48, 1, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676180729, 'comment_body': 'Why is this `return` needed?', 'comment_created': datetime.datetime(2021, 7, 25, 17, 50, 45, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676180760, 'comment_body': '```suggestion\r\n        ctrl.isAnswerLengthGreaterThanZero = ctrl.answer.length > 0;\r\n```', 'comment_created': datetime.datetime(2021, 7, 25, 17, 51, 3, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676180825, 'comment_body': 'ditto', 'comment_created': datetime.datetime(2021, 7, 25, 17, 51, 33, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676180869, 'comment_body': '```suggestion\r\n        ctrl.isAnswerLengthGreaterThanZero = ctrl.answer.length > 0;\r\n```', 'comment_created': datetime.datetime(2021, 7, 25, 17, 51, 52, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676190415, 'comment_body': ""```suggestion\r\n  controller: [\r\n    '$attrs', 'HtmlEscaperService', 'NumberWithUnitsObjectFactory',\r\n    function(\r\n        $attrs, HtmlEscaperService, NumberWithUnitsObjectFactory) {\r\n```"", 'comment_created': datetime.datetime(2021, 7, 25, 19, 17, 45, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676190707, 'comment_body': ""```suggestion\r\n    'NumberWithUnitsObjectFactory', 'NumberWithUnitsRulesService', \r\n    function(\r\n```"", 'comment_created': datetime.datetime(2021, 7, 25, 19, 20, 39, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676190745, 'comment_body': '```suggestion\r\n          var numberWithUnits = (\r\n            NumberWithUnitsObjectFactory.fromRawInputString(answer));\r\n```', 'comment_created': datetime.datetime(2021, 7, 25, 19, 21, 1, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676190915, 'comment_body': ""```suggestion\r\n  controller: [\r\n    '$attrs', 'HtmlEscaperService', 'NumberWithUnitsObjectFactory',\r\n    function(\r\n        $attrs, HtmlEscaperService, NumberWithUnitsObjectFactory) {\r\n```"", 'comment_created': datetime.datetime(2021, 7, 25, 19, 22, 15, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676191263, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 25, 19, 26, 18, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 676191395, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 25, 19, 27, 27, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 676191802, 'comment_body': 'It is being used in the `ng-if`\r\n\r\nhttps://github.com/oppia/oppia/blob/dd8de367c8784ccd9a1c2a14eaed15891b8794c4/extensions/interactions/DragAndDropSortInput/directives/drag-and-drop-sort-input-response.directive.html#L38-L41', 'comment_created': datetime.datetime(2021, 7, 25, 19, 30, 56, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 676191848, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 25, 19, 31, 18, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 676191960, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 25, 19, 32, 10, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 676192000, 'comment_body': 'responded: https://github.com/oppia/oppia/pull/13476/files#r676180729', 'comment_created': datetime.datetime(2021, 7, 25, 19, 32, 34, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 676192096, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 25, 19, 33, 24, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 676192179, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 25, 19, 34, 15, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 676192273, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 25, 19, 35, 3, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 676192423, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 25, 19, 36, 4, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 676207133, 'comment_body': 'Hmm, that is weird then, since the if will always be `true` right?', 'comment_created': datetime.datetime(2021, 7, 25, 21, 53, 47, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676210869, 'comment_body': 'Then do we refactor it to\r\n\r\n**html**\r\n```html\r\n<div ng-class=""$ctrl.chooseItemType($index)""> \r\n     <angular-html-bind html-data=""response""></angular-html-bind> \r\n   </div> \r\n```\r\n**component**\r\n```typescript\r\n      ctrl.chooseItemType = function(index) {\r\n        if (index === 0) {\r\n          itemtype = \'drag-and-drop-response-item\';\r\n        } else {\r\n          itemtype = \'drag-and-drop-response-subitem\';\r\n        }\r\n        return itemtype;\r\n      };\r\n```', 'comment_created': datetime.datetime(2021, 7, 25, 22, 29, 56, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 676213376, 'comment_body': ""Make sense but you can do\r\n```\r\nctrl.chooseItemType = (index) => {\r\n  return (\r\n    index === 0 ? \r\n    'drag-and-drop-response-item' : \r\n    'drag-and-drop-response-subitem'\r\n  )\r\n};\r\n```"", 'comment_created': datetime.datetime(2021, 7, 25, 22, 53, 14, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676232126, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 26, 1, 3, 35, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}]","[{'commit_sha': '112fae0570961ee0084cffc433fb47534de97f46', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e867f2d666715590de53723ccee70a32117fa5d7', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77406313aa9a62d6e2f2e113714d4e5db8c07cc8', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0731dba6e7cf6bec02d5c7db85783216f919b8e0', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '218a2c588ca5ae69a5fe416c47c6f84b1ae1725f', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd37f68a1c5a881c2bd16a37fcd967802f49b2288', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9efa5de884299b4d385c3e06796476f6191724ef', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c082c1a12dd2d70113b00c1d4f5b3b67094cd7b', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39f74b77c8fc74f0186501a1fad680b84351ab02', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ccd1e2693da92c89f04ef0cd72975d1d7ab37ed', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}]",Praneeth,30050862,,User,,60,,0,0
697490967,Frontend Unit Tests(7): Add frontend tests for multiple files,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[N/A].
2. This PR does the following: Adds frontend unit tests for:

- `skill-selector-editor.component.ts`
- `subtitled-unicode-editor.component.ts`
- `topic-editor-stories-list.directive.ts`
- `topic-editor-navbar-breadcrumb.directive.ts`
- `graph-property-editor.component.ts`
- `parameter-name-editor.directive.ts`
- `real-editor.directive.ts`
- `random-selector.directive.ts`
- `oppia-visualization-enumerated-frequency-table.directive.ts`
- `list-of-sets-of-translatable-html-content-ids-editor.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

- `skill-selector-editor.component.ts`

![image](https://user-images.githubusercontent.com/30050862/127087965-07b649cf-d36e-400a-bd3c-160a30ac403f.png)

- `subtitled-unicode-editor.component.ts`

![image](https://user-images.githubusercontent.com/30050862/127088032-fba3d759-5c4e-40e2-9877-03ed23e17292.png)

- `topic-editor-stories-list.directive.ts`
- `topic-editor-navbar-breadcrumb.directive.ts`
- `graph-property-editor.component.ts`
- `parameter-name-editor.directive.ts`
- `real-editor.directive.ts`
- `random-selector.directive.ts`
- `oppia-visualization-enumerated-frequency-table.directive.ts`
- `list-of-sets-of-translatable-html-content-ids-editor.component.ts`

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13503,https://api.github.com/repos/oppia/oppia/pulls/13503,https://github.com/oppia/oppia/pull/13503,closed,1675,197,19,16,14,15,1,1,[{'name': 'PR: LGTM'}],2021-07-27 02:56:35+00:00,2021-08-04 08:42:23+00:00,711948.0,"8 days, 5:45:48","[{'comment_id': 678106194, 'comment_body': '*enters', 'comment_created': datetime.datetime(2021, 7, 28, 8, 51, 35, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 678431802, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 28, 15, 47, 14, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 680133219, 'comment_body': '```suggestion\r\n        return !(ctrl.availableParamNames.length === 0);\r\n```', 'comment_created': datetime.datetime(2021, 7, 30, 18, 9, 25, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 680133677, 'comment_body': '```suggestion\r\n        ctrl.availableParamNames = (\r\n          ExplorationParamSpecsService.savedMemento.getParamNames());\r\n```\r\n\r\ncc @DubeySandeep Can we add a lint check for this? I encounter this a lot in PRs.', 'comment_created': datetime.datetime(2021, 7, 30, 18, 10, 11, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 680271974, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 30, 23, 57, 14, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 680271987, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 30, 23, 57, 20, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 680333212, 'comment_body': '*Component', 'comment_created': datetime.datetime(2021, 7, 31, 9, 6, 28, tzinfo=datetime.timezone.utc), 'commenter': 'iamprayush', 'type': 'User'}, {'comment_id': 680333464, 'comment_body': 'Can we please migrate this to Angular? All of the other components in this dir are in Angular.', 'comment_created': datetime.datetime(2021, 7, 31, 9, 8, 36, tzinfo=datetime.timezone.utc), 'commenter': 'iamprayush', 'type': 'User'}, {'comment_id': 680333563, 'comment_body': '```suggestion\r\n        return ctrl.availableParamNames.length !== 0;\r\n```', 'comment_created': datetime.datetime(2021, 7, 31, 9, 9, 13, tzinfo=datetime.timezone.utc), 'commenter': 'iamprayush', 'type': 'User'}, {'comment_id': 680343339, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 31, 10, 45, 50, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 680343389, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 31, 10, 46, 23, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 680343580, 'comment_body': ""I'm currently working on GSoC(Project: Write frontend tests.) so I'm pretty packed right now.\r\nI was informed that the angular migration team will take care of the migration."", 'comment_created': datetime.datetime(2021, 7, 31, 10, 48, 20, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 680354913, 'comment_body': 'lets be on the safe side here and do `ctrl.availableParamNames.length !== 0` or `ctrl.availableParamNames.length > 0`', 'comment_created': datetime.datetime(2021, 7, 31, 12, 42, 27, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 680363170, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 31, 14, 1, 41, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 682344938, 'comment_body': 'Okay, sg!', 'comment_created': datetime.datetime(2021, 8, 4, 7, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'iamprayush', 'type': 'User'}]","[{'commit_sha': '429fce74393cf33f83f13350e0868cdb8e1c802e', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31824fdc21587bf6cfb5b1c791538422129b72be', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8a02a826af28ea656532700d3f9d28c0ab7ad50', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d29f277ec762465357bbeeb3a744ed0ab599f5f', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '565ff6862d04af778577bf74bbfc0804849134fe', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1963b48d0fe629170803c69d86b4cfe625bc442f', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c2343aa549d27b0fa14773f86cd153da76c5a3a', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c87a5981ce9b06782bf04ab65dd9b67abf625e3f', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bfe7cd39337383fce128fa8c2f26626add4ae68', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94375a13c847da894a329b2e80ff0b070c0ffc38', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74f5549e1f0978aac8d4526e3a996078b11c6f11', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a95cbbe5682d5bde2b61c6e28cda95dc408142a8', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef6ffeca982fa57d168fcb0168d1863f6e1e4c2d', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fcb68a1618a372e818f0662d6c35aa2fc211f00', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f98ea34398e1b0cd9ebb9902af37bc7ac7f507f', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'beef70a254be3275f4ccd471c48eb9050c92dccc', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}]",Praneeth,30050862,,User,,60,,0,0
697476007,Frontend tests for topic-editor-navbar.component,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[N/A].
2. This PR does the following: Added frontend tests for `topic-editor-navbar.component`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->
![image](https://user-images.githubusercontent.com/30050862/127083953-3faa7034-9d65-4d65-b9f3-d01f74cb58f6.png)

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13501,https://api.github.com/repos/oppia/oppia/pulls/13501,https://github.com/oppia/oppia/pull/13501,closed,899,339,6,3,5,0,0,2,[],2021-07-27 02:10:23+00:00,2021-07-30 05:01:31+00:00,269468.0,"3 days, 2:51:08",[],"[{'commit_sha': '7b48bda00061cf306d905d765fc4695ce3e86c80', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97bb861d1436ea6ec8bf175ad75b4994050a3ff6', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84733031d3d15c8b92ed5508467ec34c85401577', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}]",Praneeth,30050862,,User,,60,,0,0
700692704,Frontend Unit Tests(8): Add frontend tests for multiple files,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following:  Adds frontend unit tests for:


- `skill-selector-editor.component.ts`
- `subtitled-unicode-editor.component.ts`
- `topic-editor-stories-list.directive.ts`
- `topic-editor-navbar-breadcrumb.directive.ts`
- `graph-property-editor.component.ts`
- `parameter-name-editor.directive.ts`
- `real-editor.directive.ts`
- `random-selector.directive.ts`
- `oppia-visualization-enumerated-frequency-table.directive.ts`
- `list-of-sets-of-translatable-html-content-ids-editor.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->



## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13535,https://api.github.com/repos/oppia/oppia/pulls/13535,https://github.com/oppia/oppia/pull/13535,closed,677,69,7,5,13,6,0,1,[],2021-07-31 10:54:20+00:00,2021-08-06 22:07:01+00:00,558761.0,"6 days, 11:12:41","[{'comment_id': 680503571, 'comment_body': 'Why is this added?', 'comment_created': datetime.datetime(2021, 8, 1, 12, 23, 12, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 680503607, 'comment_body': 'Why is this added?', 'comment_created': datetime.datetime(2021, 8, 1, 12, 23, 21, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 680503643, 'comment_body': 'Why is this added?', 'comment_created': datetime.datetime(2021, 8, 1, 12, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 680509118, 'comment_body': 'Unexpected change', 'comment_created': datetime.datetime(2021, 8, 1, 13, 8, 8, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 680509123, 'comment_body': 'Unexpected change', 'comment_created': datetime.datetime(2021, 8, 1, 13, 8, 11, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 680509126, 'comment_body': 'Unexpected change', 'comment_created': datetime.datetime(2021, 8, 1, 13, 8, 13, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}]","[{'commit_sha': 'b1bea555a5823cfab070006ace2a2317ac637fad', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd930d1ab03755f1945c0a4d941560a91ac851c06', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71a18d7a47d8fad11bfcbba9d697a9aad759f8fc', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc1ce9b1ad60ff2eb2bb1f68b10b069041702e06', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2fc1917650adb7801421c9b7191eaad9f279829', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}]",Praneeth,30050862,,User,,60,,0,0
706733445,Frontend Unit Tests(9): Add frontend tests for multiple files,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[N/A].
2. This PR does the following: Adds frontend unit tests for:

- `graph-input-validation.service.ts`
- `format-timer.pipe.ts`
- `remove-duplicates-in-array.pipe.ts`
- `convert-to-plain-text.pipe.ts`
- `truncate.pipe.ts`
- `exploration-footer.directive.ts`
- `coord-two-dim-editor.component.ts` (now 100% lines covered.)

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface in various display sizes (mainly phone, tablet, and desktop display size) to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

- `graph-input-validation.service.ts`

![image](https://user-images.githubusercontent.com/30050862/128753781-da40a37e-fa7b-4011-96b9-e8ad8aef0bfb.png)

- `format-timer.pipe.ts`
- `remove-duplicates-in-array.pipe.ts`
- `convert-to-plain-text.pipe.ts`
- `truncate.pipe.ts`
- `exploration-footer.directive.ts`

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13610,https://api.github.com/repos/oppia/oppia/pulls/13610,https://github.com/oppia/oppia/pull/13610,closed,382,7,8,8,7,2,0,2,[],2021-08-09 18:13:39+00:00,2021-08-13 15:15:30+00:00,334911.0,"3 days, 21:01:51","[{'comment_id': 686422996, 'comment_body': '*opens', 'comment_created': datetime.datetime(2021, 8, 11, 1, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 687437832, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 12, 6, 55, 3, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}]","[{'commit_sha': '85e9046c80dd78cdb684d496be7138c4fce481cb', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5988ffeff6abe1e7e8c89a53556ae860719e151e', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7083ebf1eb7aea7c3bbda3bd27d422b957951ce', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '043f6ab0fa6771aae441e3a2efc436b5e04873ec', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd25153372f78fdced75a09dd70afa7d2340addf', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdc3b453ed592d6b48bdd397651fb8b99a02b148', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db57e18b9d68cb47f7039d7d7240a8f7af99f4ab', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3187fa1958a6cfba91aa04e77586035b99e5479d', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}]",Praneeth,30050862,,User,,60,,0,0
712429844,Frontend Unit Tests(10): Add frontend tests for multiple files,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[N/A].
2. This PR does the following: Adds frontend unit tests for:

- `audio-player.service.ts`
- `skill-rubrics-editor.directive.ts`
- `story-editor-navbar-breadcrumb.directive.ts`
- `skill-editor-navbar-breadcrumb.component.ts`
- `image-editor.component.ts` (Fully covered 100%)

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface in various display sizes (mainly phone, tablet, and desktop display size) to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

- `audio-player.service.ts`

![image](https://user-images.githubusercontent.com/30050862/129377535-ae95d8af-43c5-4167-8cad-32c6eebfe4eb.png)

- `skill-rubrics-editor.directive.ts`

![image](https://user-images.githubusercontent.com/30050862/129377621-76af4c9f-431a-40fc-a9bb-2d2075d75789.png)

- `story-editor-navbar-breadcrumb.directive.ts`
- `skill-editor-navbar-breadcrumb.component.ts`

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13649,https://api.github.com/repos/oppia/oppia/pulls/13649,https://github.com/oppia/oppia/pull/13649,closed,1194,85,13,12,19,31,1,1,[{'name': 'PR: LGTM'}],2021-08-13 15:06:10+00:00,2021-08-16 17:21:58+00:00,267348.0,"3 days, 2:15:48","[{'comment_id': 688906016, 'comment_body': 'Why is this changed? I think the more direct imports makes more sense.', 'comment_created': datetime.datetime(2021, 8, 14, 9, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688907364, 'comment_body': 'This is done to make the file testable. Previously, since `gifFrames` was private and it could not be mocked.', 'comment_created': datetime.datetime(2021, 8, 14, 9, 30, 53, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 688913690, 'comment_body': 'Hmm, is this the only possible solution? \r\n\r\nBecause adding it to `window` is indirect and can lead to other issues, it can make string typing a bit harder and especially since we are slowly moving to imports instead of requires and these provide some advanced functionality this might make it actually even more complicated to move to import here.', 'comment_created': datetime.datetime(2021, 8, 14, 10, 34, 57, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688923428, 'comment_body': 'Currently using `require` returns a function rather than an object. Hence `spyOn` cannot be used since it requires an object as its first parameter. However, after converting to import if it can be imported as `<object>.gifFrames` then we can remove it from `window`.\r\n\r\n/cc @nithusha21 Since he recommended this appraoch.', 'comment_created': datetime.datetime(2021, 8, 14, 12, 13, 56, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 688926865, 'comment_body': ""If `import` would be possible for this library then it would be best I think. If it cannot be used I'm fine with the `window` approach but with a TODO issue to fix this later."", 'comment_created': datetime.datetime(2021, 8, 14, 12, 47, 26, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688927781, 'comment_body': ""I have attempted `import * alias from 'path'`. This should have resulted in `alias` being a wrapper object but it was a function instead. Shall I create an issue and comment it in the files image-editor.component.ts file?"", 'comment_created': datetime.datetime(2021, 8, 14, 12, 56, 4, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 688928682, 'comment_body': '@vojtechjelinek #13676 PTAL', 'comment_created': datetime.datetime(2021, 8, 14, 13, 6, 11, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 688932912, 'comment_body': ""```suggestion\r\n    it('should load track when user plays audio', fakeAsync(async() => {\r\n```"", 'comment_created': datetime.datetime(2021, 8, 14, 13, 48, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 688932923, 'comment_body': ""```suggestion\r\n    it('should not load track when a track has already been loaded',\r\n```"", 'comment_created': datetime.datetime(2021, 8, 14, 13, 48, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 688932972, 'comment_body': ""```suggestion\r\n    it('should play audio when user clicks the play button', fakeAsync(() => {\r\n```"", 'comment_created': datetime.datetime(2021, 8, 14, 13, 49, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 688933112, 'comment_body': ""```suggestion\r\n    it('should not play audio again when audio is already being played', fakeAsync(() => {\r\n```"", 'comment_created': datetime.datetime(2021, 8, 14, 13, 50, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 688933308, 'comment_body': 'Can we make descriptions more clear here and elsewhere?', 'comment_created': datetime.datetime(2021, 8, 14, 13, 52, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 688933502, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 14, 13, 54, 16, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 688933514, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 14, 13, 54, 29, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 688933571, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 14, 13, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 688933679, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 14, 13, 56, 2, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 688936452, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 14, 24, 26, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 688936580, 'comment_body': '```suggestion\r\n// Copyright 2021 The Oppia Authors. All Rights Reserved.\r\n```', 'comment_created': datetime.datetime(2021, 8, 14, 14, 25, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 688936601, 'comment_body': '```suggestion\r\n// Copyright 2021 The Oppia Authors. All Rights Reserved.\r\n```', 'comment_created': datetime.datetime(2021, 8, 14, 14, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 688936843, 'comment_body': '```suggestion\r\n// Copyright 2021 The Oppia Authors. All Rights Reserved.\r\n```', 'comment_created': datetime.datetime(2021, 8, 14, 14, 28, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 688936995, 'comment_body': ""I don't see any changes"", 'comment_created': datetime.datetime(2021, 8, 14, 14, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 688938013, 'comment_body': 'and who should I assign the issue to?', 'comment_created': datetime.datetime(2021, 8, 14, 14, 40, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 688938273, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 14, 14, 42, 5, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 688938277, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 14, 14, 42, 11, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 688938322, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 14, 14, 42, 29, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 688940469, 'comment_body': 'pushed it now', 'comment_created': datetime.datetime(2021, 8, 14, 15, 4, 11, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 689119544, 'comment_body': 'Why is this code removed, do we know why this was added in the first place? (not sure whether it handles any unexpected situation?)', 'comment_created': datetime.datetime(2021, 8, 15, 17, 27, 57, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 689120180, 'comment_body': ""`this._loadingTrack` will remain false and does not change it's value"", 'comment_created': datetime.datetime(2021, 8, 15, 17, 33, 54, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 689120451, 'comment_body': 'The variable value is set as false when the service is initialized.\r\nhttps://github.com/oppia/oppia/blob/a934619517eee3fc7ec787911a7afe2798b14cd5/core/templates/services/audio-player.service.ts#L42\r\nbut is never set to true anywhere else in the code. Hence the above code never gets executed.', 'comment_created': datetime.datetime(2021, 8, 15, 17, 36, 9, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 689560756, 'comment_body': 'Hm, if `this._loadingTrack` is not really used, should we remove all occurrences of it?', 'comment_created': datetime.datetime(2021, 8, 16, 13, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 689618519, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2021, 8, 16, 15, 4, 34, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}]","[{'commit_sha': '3de26070c23891dad9e537ce0ce7bdc22d6f6b23', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '857723acceafe8292811feaacc33c01f2e3dd578', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56ffeaa941e65188c77b8d117803a691072af10b', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9951ff6d31f0902c583398e6ea4c105a87ca1c4f', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b5966b0544b62a0b7d5abec4f8176a48c04a5ef', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd942df2b2fc192bbfd8b0e79ade5fec29cb78e50', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51a3f1db9010acf41337bb0592822ce32d2f4dc3', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f9d5d198569eae81f221c0f914359af0e499bd1', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b1433d1cdbd2a584a9ee27e12aedd877ba31417', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '663b0f1a07dc532324705b4e15c6a9534c51713f', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c024c822cf2d94f2381bf2cd2fa6b17375da0109', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ce46b8eb370e88e23dffa629d9158601230ae2b', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}]",Praneeth,30050862,,User,,60,,0,0
712773603,Fix part of #13467: This fixes the conversation-skin.directive frontend test flake,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes part of #13467 .
2. This PR does the following: The conversation-skin file uses jqueryUI to animate some of the HTML elements. When testing the "".animate"" function from jqueryUI generates `TypeError: S.easing[this.easing] is not a function` error. Therefore the call is stubbed there since changes made by animations to the HTML elements are not tested here.

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface in various display sizes (mainly phone, tablet, and desktop display size) to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13675,https://api.github.com/repos/oppia/oppia/pulls/13675,https://github.com/oppia/oppia/pull/13675,closed,6,0,1,1,2,0,0,1,[],2021-08-14 12:52:21+00:00,2021-08-15 10:58:38+00:00,79577.0,22:06:17,[],"[{'commit_sha': '71ba27c8014a64c71f14d5508ac47460cb346497', 'committer_username': 'gp201', 'committer_name': 'Praneeth', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 10, 15, 7, 17, tzinfo=datetime.timezone.utc)}]",Praneeth,30050862,,User,,60,,0,0

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
40687563,oppia,oppia/oppia,Python,3838,5715,240,775,15754,1418,418,24,"[{'id': 1891022234, 'number': 20368, 'closed': datetime.datetime(2024, 6, 3, 14, 29, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 28, 4, 28, 57, tzinfo=datetime.timezone.utc), 'time_taken': 554438.0, 'time_delta': '6 days, 10:00:38', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1775291513, 'number': 19963, 'closed': datetime.datetime(2024, 3, 24, 14, 9, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 16, 5, 32, 12, tzinfo=datetime.timezone.utc), 'time_taken': 722218.0, 'time_delta': '8 days, 8:36:58', 'additions': 17, 'deletions': 73, 'state': 'closed'}, {'id': 1775236250, 'number': 19962, 'closed': datetime.datetime(2024, 8, 22, 7, 26, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 16, 2, 51, 46, tzinfo=datetime.timezone.utc), 'time_taken': 13754055.0, 'time_delta': '159 days, 4:34:15', 'additions': 285, 'deletions': 770, 'state': 'closed'}, {'id': 1771304937, 'number': 19950, 'closed': datetime.datetime(2024, 3, 14, 7, 0, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 14, 3, 54, 1, tzinfo=datetime.timezone.utc), 'time_taken': 11167.0, 'time_delta': '3:06:07', 'additions': 0, 'deletions': 222, 'state': 'closed'}, {'id': 1768788320, 'number': 19932, 'closed': datetime.datetime(2024, 3, 13, 3, 34, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 12, 19, 42, 44, tzinfo=datetime.timezone.utc), 'time_taken': 28312.0, 'time_delta': '7:51:52', 'additions': 0, 'deletions': 11, 'state': 'closed'}, {'id': 1767154351, 'number': 19923, 'closed': datetime.datetime(2024, 3, 12, 8, 24, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 12, 5, 9, 59, tzinfo=datetime.timezone.utc), 'time_taken': 11649.0, 'time_delta': '3:14:09', 'additions': 202, 'deletions': 135, 'state': 'closed'}, {'id': 1705844230, 'number': 19658, 'closed': datetime.datetime(2024, 7, 28, 5, 48, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 1, 9, 55, 15, tzinfo=datetime.timezone.utc), 'time_taken': 15364367.0, 'time_delta': '177 days, 19:52:47', 'additions': 499, 'deletions': 892, 'state': 'closed'}, {'id': 1615432111, 'number': 19195, 'closed': datetime.datetime(2023, 12, 13, 20, 37, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 24, 8, 40, 37, tzinfo=datetime.timezone.utc), 'time_taken': 1684637.0, 'time_delta': '19 days, 11:57:17', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1336656668, 'number': 18183, 'closed': datetime.datetime(2023, 5, 12, 10, 34, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 3, 12, 52, 47, tzinfo=datetime.timezone.utc), 'time_taken': 769292.0, 'time_delta': '8 days, 21:41:32', 'additions': 49, 'deletions': 0, 'state': 'closed'}, {'id': 1328581165, 'number': 18152, 'closed': datetime.datetime(2023, 5, 26, 9, 20, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 26, 11, 12, 35, tzinfo=datetime.timezone.utc), 'time_taken': 2585257.0, 'time_delta': '29 days, 22:07:37', 'additions': 11, 'deletions': 0, 'state': 'closed'}, {'id': 1305843182, 'number': 17978, 'closed': datetime.datetime(2023, 4, 7, 15, 4, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 7, 12, 0, 4, tzinfo=datetime.timezone.utc), 'time_taken': 11079.0, 'time_delta': '3:04:39', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1293106667, 'number': 17852, 'closed': datetime.datetime(2023, 3, 29, 2, 37, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 28, 14, 18, 3, tzinfo=datetime.timezone.utc), 'time_taken': 44343.0, 'time_delta': '12:19:03', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1293056488, 'number': 17851, 'closed': datetime.datetime(2023, 3, 28, 17, 38, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 28, 13, 52, 56, tzinfo=datetime.timezone.utc), 'time_taken': 13563.0, 'time_delta': '3:46:03', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1278856098, 'number': 17737, 'closed': datetime.datetime(2023, 3, 17, 15, 40, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 16, 15, 44, 45, tzinfo=datetime.timezone.utc), 'time_taken': 86136.0, 'time_delta': '23:55:36', 'additions': 13, 'deletions': 13, 'state': 'closed'}, {'id': 1248880445, 'number': 17431, 'closed': datetime.datetime(2023, 2, 23, 4, 21, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 21, 15, 15, 8, tzinfo=datetime.timezone.utc), 'time_taken': 133567.0, 'time_delta': '1 day, 13:06:07', 'additions': 20, 'deletions': 0, 'state': 'closed'}, {'id': 1244027338, 'number': 17370, 'closed': datetime.datetime(2023, 2, 17, 18, 1, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 16, 16, 58, 13, tzinfo=datetime.timezone.utc), 'time_taken': 90199.0, 'time_delta': '1 day, 1:03:19', 'additions': 1, 'deletions': 43, 'state': 'closed'}, {'id': 1238410386, 'number': 17342, 'closed': datetime.datetime(2023, 2, 16, 3, 22, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 13, 5, 29, 47, tzinfo=datetime.timezone.utc), 'time_taken': 251534.0, 'time_delta': '2 days, 21:52:14', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1237974501, 'number': 17336, 'closed': datetime.datetime(2023, 2, 13, 3, 47, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 12, 8, 1, 19, tzinfo=datetime.timezone.utc), 'time_taken': 71168.0, 'time_delta': '19:46:08', 'additions': 33, 'deletions': 0, 'state': 'closed'}, {'id': 1235756640, 'number': 17296, 'closed': datetime.datetime(2023, 2, 11, 16, 33, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 9, 21, 6, 1, tzinfo=datetime.timezone.utc), 'time_taken': 156475.0, 'time_delta': '1 day, 19:27:55', 'additions': 47, 'deletions': 0, 'state': 'closed'}, {'id': 1198396949, 'number': 16958, 'closed': datetime.datetime(2023, 1, 17, 3, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 16, 4, 1, 48, tzinfo=datetime.timezone.utc), 'time_taken': 84312.0, 'time_delta': '23:25:12', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1194586822, 'number': 16902, 'closed': datetime.datetime(2023, 1, 25, 19, 50, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 12, 0, 11, 49, tzinfo=datetime.timezone.utc), 'time_taken': 1193895.0, 'time_delta': '13 days, 19:38:15', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1193255707, 'number': 16887, 'closed': datetime.datetime(2023, 1, 24, 19, 13, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 11, 4, 15, 55, tzinfo=datetime.timezone.utc), 'time_taken': 1177029.0, 'time_delta': '13 days, 14:57:09', 'additions': 34, 'deletions': 1, 'state': 'closed'}, {'id': 1173143271, 'number': 16757, 'closed': datetime.datetime(2023, 1, 11, 4, 13, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 21, 4, 8, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1814712.0, 'time_delta': '21 days, 0:05:12', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1155284163, 'number': 16686, 'closed': datetime.datetime(2022, 12, 10, 3, 8, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 9, 4, 2, 28, tzinfo=datetime.timezone.utc), 'time_taken': 83187.0, 'time_delta': '23:06:27', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1134098894, 'number': 16615, 'closed': datetime.datetime(2022, 11, 24, 1, 31, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 23, 21, 17, 49, tzinfo=datetime.timezone.utc), 'time_taken': 15249.0, 'time_delta': '4:14:09', 'additions': 173, 'deletions': 2023, 'state': 'closed'}, {'id': 1119682587, 'number': 16527, 'closed': datetime.datetime(2022, 11, 12, 17, 22, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 12, 0, 47, 49, tzinfo=datetime.timezone.utc), 'time_taken': 59697.0, 'time_delta': '16:34:57', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1113332516, 'number': 16508, 'closed': datetime.datetime(2022, 11, 8, 3, 45, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 7, 21, 18, 52, tzinfo=datetime.timezone.utc), 'time_taken': 23188.0, 'time_delta': '6:26:28', 'additions': 5, 'deletions': 61, 'state': 'closed'}, {'id': 1112447959, 'number': 16499, 'closed': datetime.datetime(2022, 11, 20, 19, 38, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 7, 8, 55, 48, tzinfo=datetime.timezone.utc), 'time_taken': 1161754.0, 'time_delta': '13 days, 10:42:34', 'additions': 7, 'deletions': 0, 'state': 'closed'}, {'id': 1105860599, 'number': 16455, 'closed': datetime.datetime(2022, 11, 19, 19, 0, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 31, 20, 4, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1637752.0, 'time_delta': '18 days, 22:55:52', 'additions': 183, 'deletions': 182, 'state': 'closed'}, {'id': 1104958058, 'number': 16452, 'closed': datetime.datetime(2022, 11, 1, 3, 49, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 31, 7, 35, tzinfo=datetime.timezone.utc), 'time_taken': 72867.0, 'time_delta': '20:14:27', 'additions': 53, 'deletions': 56, 'state': 'closed'}, {'id': 1103511030, 'number': 16434, 'closed': datetime.datetime(2022, 10, 30, 17, 31, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 28, 19, 24, 17, tzinfo=datetime.timezone.utc), 'time_taken': 166012.0, 'time_delta': '1 day, 22:06:52', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1100779227, 'number': 16414, 'closed': datetime.datetime(2022, 10, 27, 2, 53, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 26, 19, 27, 3, tzinfo=datetime.timezone.utc), 'time_taken': 26794.0, 'time_delta': '7:26:34', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 1089560789, 'number': 16336, 'closed': datetime.datetime(2022, 10, 19, 0, 16, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 17, 15, 50, 37, tzinfo=datetime.timezone.utc), 'time_taken': 116736.0, 'time_delta': '1 day, 8:25:36', 'additions': 2744, 'deletions': 2630, 'state': 'closed'}, {'id': 1088054728, 'number': 16315, 'closed': datetime.datetime(2022, 10, 15, 4, 54, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 15, 4, 41, 26, tzinfo=datetime.timezone.utc), 'time_taken': 811.0, 'time_delta': '0:13:31', 'additions': 146, 'deletions': 251, 'state': 'closed'}, {'id': 1088053857, 'number': 16314, 'closed': datetime.datetime(2022, 10, 15, 7, 22, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 15, 4, 35, 37, tzinfo=datetime.timezone.utc), 'time_taken': 10039.0, 'time_delta': '2:47:19', 'additions': 189, 'deletions': 5378, 'state': 'closed'}, {'id': 1084230567, 'number': 16280, 'closed': datetime.datetime(2022, 10, 12, 16, 37, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 12, 7, 11, 33, tzinfo=datetime.timezone.utc), 'time_taken': 33981.0, 'time_delta': '9:26:21', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 1082439072, 'number': 16253, 'closed': datetime.datetime(2022, 10, 11, 17, 40, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 10, 19, 44, 29, tzinfo=datetime.timezone.utc), 'time_taken': 78960.0, 'time_delta': '21:56:00', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 1081562089, 'number': 16244, 'closed': datetime.datetime(2022, 10, 10, 8, 58, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 10, 5, 34, 40, tzinfo=datetime.timezone.utc), 'time_taken': 12222.0, 'time_delta': '3:23:42', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1078245295, 'number': 16221, 'closed': datetime.datetime(2022, 10, 10, 14, 54, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 6, 5, 25, 14, tzinfo=datetime.timezone.utc), 'time_taken': 379762.0, 'time_delta': '4 days, 9:29:22', 'additions': 137, 'deletions': 0, 'state': 'closed'}, {'id': 1073484919, 'number': 16177, 'closed': datetime.datetime(2022, 10, 3, 10, 15, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 1, 9, 9, 42, tzinfo=datetime.timezone.utc), 'time_taken': 176733.0, 'time_delta': '2 days, 1:05:33', 'additions': 24, 'deletions': 0, 'state': 'closed'}, {'id': 1073371044, 'number': 16174, 'closed': datetime.datetime(2022, 10, 9, 6, 39, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 1, 2, 6, 59, tzinfo=datetime.timezone.utc), 'time_taken': 707523.0, 'time_delta': '8 days, 4:32:03', 'additions': 32, 'deletions': 4, 'state': 'closed'}, {'id': 1052127140, 'number': 16030, 'closed': datetime.datetime(2022, 9, 10, 9, 5, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 10, 2, 39, 1, tzinfo=datetime.timezone.utc), 'time_taken': 23209.0, 'time_delta': '6:26:49', 'additions': 20, 'deletions': 3, 'state': 'closed'}, {'id': 1025309203, 'number': 15879, 'closed': datetime.datetime(2022, 8, 14, 20, 31, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 12, 19, 9, 16, tzinfo=datetime.timezone.utc), 'time_taken': 177744.0, 'time_delta': '2 days, 1:22:24', 'additions': 32, 'deletions': 56, 'state': 'closed'}, {'id': 1022169045, 'number': 15866, 'closed': datetime.datetime(2022, 8, 12, 19, 5, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 10, 3, 16, 23, tzinfo=datetime.timezone.utc), 'time_taken': 229764.0, 'time_delta': '2 days, 15:49:24', 'additions': 44, 'deletions': 25, 'state': 'closed'}, {'id': 998359146, 'number': 15732, 'closed': datetime.datetime(2022, 7, 17, 17, 11, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 16, 5, 49, 29, tzinfo=datetime.timezone.utc), 'time_taken': 127328.0, 'time_delta': '1 day, 11:22:08', 'additions': 6793, 'deletions': 6406, 'state': 'closed'}, {'id': 998334938, 'number': 15731, 'closed': datetime.datetime(2022, 7, 16, 10, 5, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 16, 3, 6, 19, tzinfo=datetime.timezone.utc), 'time_taken': 25134.0, 'time_delta': '6:58:54', 'additions': 6, 'deletions': 3, 'state': 'closed'}, {'id': 997377739, 'number': 15722, 'closed': datetime.datetime(2022, 7, 16, 5, 49, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 15, 5, 44, 6, tzinfo=datetime.timezone.utc), 'time_taken': 86742.0, 'time_delta': '1 day, 0:05:42', 'additions': 6784, 'deletions': 6398, 'state': 'closed'}, {'id': 985999784, 'number': 15678, 'closed': datetime.datetime(2022, 7, 4, 6, 41, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 4, 5, 10, 42, tzinfo=datetime.timezone.utc), 'time_taken': 5466.0, 'time_delta': '1:31:06', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 979194717, 'number': 15635, 'closed': datetime.datetime(2022, 6, 29, 1, 50, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 26, 2, 47, 36, tzinfo=datetime.timezone.utc), 'time_taken': 255769.0, 'time_delta': '2 days, 23:02:49', 'additions': 34, 'deletions': 2, 'state': 'closed'}, {'id': 866418299, 'number': 15036, 'closed': datetime.datetime(2022, 2, 28, 5, 12, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 28, 5, 11, 21, tzinfo=datetime.timezone.utc), 'time_taken': 90.0, 'time_delta': '0:01:30', 'additions': 62, 'deletions': 9, 'state': 'closed'}, {'id': 829620751, 'number': 14745, 'closed': datetime.datetime(2022, 1, 23, 3, 42, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 22, 22, 23, 55, tzinfo=datetime.timezone.utc), 'time_taken': 19091.0, 'time_delta': '5:18:11', 'additions': 10, 'deletions': 2, 'state': 'closed'}, {'id': 818411478, 'number': 14613, 'closed': datetime.datetime(2022, 1, 11, 17, 41, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 11, 8, 8, 49, tzinfo=datetime.timezone.utc), 'time_taken': 34386.0, 'time_delta': '9:33:06', 'additions': 27, 'deletions': 121, 'state': 'closed'}, {'id': 818402845, 'number': 14612, 'closed': datetime.datetime(2022, 1, 11, 14, 8, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 11, 7, 56, 9, tzinfo=datetime.timezone.utc), 'time_taken': 22356.0, 'time_delta': '6:12:36', 'additions': 385, 'deletions': 444, 'state': 'closed'}, {'id': 818395656, 'number': 14611, 'closed': datetime.datetime(2022, 1, 11, 9, 20, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 11, 7, 44, 27, tzinfo=datetime.timezone.utc), 'time_taken': 5782.0, 'time_delta': '1:36:22', 'additions': 302, 'deletions': 447, 'state': 'closed'}, {'id': 818387861, 'number': 14609, 'closed': datetime.datetime(2022, 1, 11, 14, 8, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 11, 7, 31, 8, tzinfo=datetime.timezone.utc), 'time_taken': 23870.0, 'time_delta': '6:37:50', 'additions': 347, 'deletions': 327, 'state': 'closed'}, {'id': 783686323, 'number': 14275, 'closed': datetime.datetime(2021, 11, 22, 4, 48, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 18, 12, 18, 21, tzinfo=datetime.timezone.utc), 'time_taken': 318595.0, 'time_delta': '3 days, 16:29:55', 'additions': 7, 'deletions': 7, 'state': 'closed'}, {'id': 712773603, 'number': 13675, 'closed': datetime.datetime(2021, 8, 15, 10, 58, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 14, 12, 52, 21, tzinfo=datetime.timezone.utc), 'time_taken': 79577.0, 'time_delta': '22:06:17', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 712429844, 'number': 13649, 'closed': datetime.datetime(2021, 8, 16, 17, 21, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 13, 15, 6, 10, tzinfo=datetime.timezone.utc), 'time_taken': 267348.0, 'time_delta': '3 days, 2:15:48', 'additions': 1194, 'deletions': 85, 'state': 'closed'}, {'id': 706733445, 'number': 13610, 'closed': datetime.datetime(2021, 8, 13, 15, 15, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 18, 13, 39, tzinfo=datetime.timezone.utc), 'time_taken': 334911.0, 'time_delta': '3 days, 21:01:51', 'additions': 382, 'deletions': 7, 'state': 'closed'}, {'id': 700692704, 'number': 13535, 'closed': datetime.datetime(2021, 8, 6, 22, 7, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 31, 10, 54, 20, tzinfo=datetime.timezone.utc), 'time_taken': 558761.0, 'time_delta': '6 days, 11:12:41', 'additions': 677, 'deletions': 69, 'state': 'closed'}, {'id': 699941694, 'number': 13525, 'closed': datetime.datetime(2021, 8, 2, 20, 8, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 30, 1, 42, 23, tzinfo=datetime.timezone.utc), 'time_taken': 325593.0, 'time_delta': '3 days, 18:26:33', 'additions': 11, 'deletions': 4, 'state': 'closed'}, {'id': 697490967, 'number': 13503, 'closed': datetime.datetime(2021, 8, 4, 8, 42, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 2, 56, 35, tzinfo=datetime.timezone.utc), 'time_taken': 711948.0, 'time_delta': '8 days, 5:45:48', 'additions': 1675, 'deletions': 197, 'state': 'closed'}, {'id': 697476007, 'number': 13501, 'closed': datetime.datetime(2021, 7, 30, 5, 1, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 2, 10, 23, tzinfo=datetime.timezone.utc), 'time_taken': 269468.0, 'time_delta': '3 days, 2:51:08', 'additions': 899, 'deletions': 339, 'state': 'closed'}, {'id': 696280615, 'number': 13476, 'closed': datetime.datetime(2021, 7, 29, 21, 4, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 24, 2, 32, 6, tzinfo=datetime.timezone.utc), 'time_taken': 498752.0, 'time_delta': '5 days, 18:32:32', 'additions': 3838, 'deletions': 647, 'state': 'closed'}, {'id': 692130737, 'number': 13423, 'closed': datetime.datetime(2021, 7, 22, 16, 29, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 18, 18, 32, 20, tzinfo=datetime.timezone.utc), 'time_taken': 338210.0, 'time_delta': '3 days, 21:56:50', 'additions': 3252, 'deletions': 99, 'state': 'closed'}, {'id': 685451877, 'number': 13335, 'closed': datetime.datetime(2021, 7, 7, 22, 39, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 19, 23, 31, tzinfo=datetime.timezone.utc), 'time_taken': 11739.0, 'time_delta': '3:15:39', 'additions': 6, 'deletions': 5, 'state': 'closed'}, {'id': 684007775, 'number': 13319, 'closed': datetime.datetime(2021, 7, 9, 14, 45, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 2, 4, 46, tzinfo=datetime.timezone.utc), 'time_taken': 304855.0, 'time_delta': '3 days, 12:40:55', 'additions': 2390, 'deletions': 22, 'state': 'closed'}, {'id': 683092770, 'number': 13303, 'closed': datetime.datetime(2021, 7, 7, 18, 34, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 4, 0, 9, 19, tzinfo=datetime.timezone.utc), 'time_taken': 325537.0, 'time_delta': '3 days, 18:25:37', 'additions': 1487, 'deletions': 10, 'state': 'closed'}, {'id': 683042513, 'number': 13298, 'closed': datetime.datetime(2021, 7, 5, 17, 51, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 3, 15, 50, 52, tzinfo=datetime.timezone.utc), 'time_taken': 180059.0, 'time_delta': '2 days, 2:00:59', 'additions': 1850, 'deletions': 1, 'state': 'closed'}, {'id': 682999993, 'number': 13297, 'closed': datetime.datetime(2021, 7, 5, 17, 51, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 3, 9, 54, 8, tzinfo=datetime.timezone.utc), 'time_taken': 201416.0, 'time_delta': '2 days, 7:56:56', 'additions': 2317, 'deletions': 0, 'state': 'closed'}, {'id': 680555841, 'number': 13267, 'closed': datetime.datetime(2021, 7, 1, 9, 30, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 5, 58, 30, tzinfo=datetime.timezone.utc), 'time_taken': 99125.0, 'time_delta': '1 day, 3:32:05', 'additions': 6, 'deletions': 10, 'state': 'closed'}, {'id': 680125930, 'number': 13258, 'closed': datetime.datetime(2021, 7, 2, 17, 49, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 29, 15, 24, 19, tzinfo=datetime.timezone.utc), 'time_taken': 267894.0, 'time_delta': '3 days, 2:24:54', 'additions': 1310, 'deletions': 1, 'state': 'closed'}, {'id': 680115825, 'number': 13257, 'closed': datetime.datetime(2021, 7, 2, 21, 43, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 29, 15, 15, 25, tzinfo=datetime.timezone.utc), 'time_taken': 282509.0, 'time_delta': '3 days, 6:28:29', 'additions': 1863, 'deletions': 1, 'state': 'closed'}, {'id': 678189987, 'number': 13213, 'closed': datetime.datetime(2021, 6, 29, 20, 14, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 25, 21, 26, 22, tzinfo=datetime.timezone.utc), 'time_taken': 341290.0, 'time_delta': '3 days, 22:48:10', 'additions': 1229, 'deletions': 22, 'state': 'closed'}, {'id': 676906824, 'number': 13200, 'closed': datetime.datetime(2021, 6, 24, 10, 29, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 8, 36, 46, tzinfo=datetime.timezone.utc), 'time_taken': 6743.0, 'time_delta': '1:52:23', 'additions': 9, 'deletions': 0, 'state': 'closed'}, {'id': 673983686, 'number': 13141, 'closed': datetime.datetime(2021, 6, 23, 15, 13, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 20, 6, 40, 16, tzinfo=datetime.timezone.utc), 'time_taken': 289992.0, 'time_delta': '3 days, 8:33:12', 'additions': 10, 'deletions': 2, 'state': 'closed'}, {'id': 673981210, 'number': 13140, 'closed': datetime.datetime(2021, 6, 20, 6, 15, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 20, 6, 14, 5, tzinfo=datetime.timezone.utc), 'time_taken': 91.0, 'time_delta': '0:01:31', 'additions': 9, 'deletions': 2, 'state': 'closed'}, {'id': 673929886, 'number': 13137, 'closed': datetime.datetime(2021, 6, 23, 18, 14, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 19, 20, 27, 27, tzinfo=datetime.timezone.utc), 'time_taken': 337595.0, 'time_delta': '3 days, 21:46:35', 'additions': 735, 'deletions': 9, 'state': 'closed'}, {'id': 673923026, 'number': 13136, 'closed': datetime.datetime(2021, 6, 28, 22, 26, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 19, 19, 23, 53, tzinfo=datetime.timezone.utc), 'time_taken': 788539.0, 'time_delta': '9 days, 3:02:19', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 662814301, 'number': 12996, 'closed': datetime.datetime(2021, 6, 20, 16, 0, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 6, 6, 54, 13, tzinfo=datetime.timezone.utc), 'time_taken': 1242360.0, 'time_delta': '14 days, 9:06:00', 'additions': 217, 'deletions': 2, 'state': 'closed'}, {'id': 651466337, 'number': 12893, 'closed': datetime.datetime(2021, 6, 6, 7, 19, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 24, 16, 28, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1090306.0, 'time_delta': '12 days, 14:51:46', 'additions': 374, 'deletions': 117, 'state': 'closed'}, {'id': 650862933, 'number': 12879, 'closed': datetime.datetime(2021, 6, 2, 5, 30, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 23, 21, 51, 45, tzinfo=datetime.timezone.utc), 'time_taken': 805120.0, 'time_delta': '9 days, 7:38:40', 'additions': 121, 'deletions': 5, 'state': 'closed'}, {'id': 631481341, 'number': 12742, 'closed': datetime.datetime(2021, 5, 30, 12, 11, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 6, 14, 16, 57, tzinfo=datetime.timezone.utc), 'time_taken': 2066071.0, 'time_delta': '23 days, 21:54:31', 'additions': 121, 'deletions': 92, 'state': 'closed'}, {'id': 630785639, 'number': 12731, 'closed': datetime.datetime(2021, 6, 19, 19, 15, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 5, 17, 43, 56, tzinfo=datetime.timezone.utc), 'time_taken': 3893489.0, 'time_delta': '45 days, 1:31:29', 'additions': 9, 'deletions': 2, 'state': 'closed'}, {'id': 628483170, 'number': 12706, 'closed': datetime.datetime(2021, 5, 12, 5, 12, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 1, 19, 36, 22, tzinfo=datetime.timezone.utc), 'time_taken': 898581.0, 'time_delta': '10 days, 9:36:21', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 607639058, 'number': 12394, 'closed': datetime.datetime(2021, 4, 13, 10, 4, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 1, 20, 2, 15, tzinfo=datetime.timezone.utc), 'time_taken': 1000924.0, 'time_delta': '11 days, 14:02:04', 'additions': 100, 'deletions': 68, 'state': 'closed'}, {'id': 602236113, 'number': 12354, 'closed': datetime.datetime(2021, 4, 3, 17, 36, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 28, 12, 46, 16, tzinfo=datetime.timezone.utc), 'time_taken': 535812.0, 'time_delta': '6 days, 4:50:12', 'additions': 369, 'deletions': 152, 'state': 'closed'}, {'id': 595188160, 'number': 12251, 'closed': datetime.datetime(2021, 3, 19, 2, 38, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 18, 3, 34, 21, tzinfo=datetime.timezone.utc), 'time_taken': 83032.0, 'time_delta': '23:03:52', 'additions': 142, 'deletions': 0, 'state': 'closed'}, {'id': 583332324, 'number': 12077, 'closed': datetime.datetime(2021, 3, 28, 8, 41, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 2, 20, 46, 54, tzinfo=datetime.timezone.utc), 'time_taken': 2202864.0, 'time_delta': '25 days, 11:54:24', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 573717720, 'number': 11962, 'closed': datetime.datetime(2021, 2, 22, 13, 31, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 15, 17, 56, 2, tzinfo=datetime.timezone.utc), 'time_taken': 588928.0, 'time_delta': '6 days, 19:35:28', 'additions': 207, 'deletions': 4, 'state': 'closed'}, {'id': 572967576, 'number': 11941, 'closed': datetime.datetime(2021, 2, 15, 7, 55, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 13, 17, 33, 57, tzinfo=datetime.timezone.utc), 'time_taken': 138119.0, 'time_delta': '1 day, 14:21:59', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 572607956, 'number': 11931, 'closed': datetime.datetime(2021, 2, 20, 9, 34, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 12, 15, 51, 5, tzinfo=datetime.timezone.utc), 'time_taken': 668588.0, 'time_delta': '7 days, 17:43:08', 'additions': 21, 'deletions': 5, 'state': 'closed'}, {'id': 570987257, 'number': 11894, 'closed': datetime.datetime(2021, 2, 13, 14, 7, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 10, 10, 19, 55, tzinfo=datetime.timezone.utc), 'time_taken': 272834.0, 'time_delta': '3 days, 3:47:14', 'additions': 15, 'deletions': 3, 'state': 'closed'}, {'id': 555168692, 'number': 11697, 'closed': datetime.datetime(2021, 3, 12, 9, 35, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 14, 19, 54, 47, tzinfo=datetime.timezone.utc), 'time_taken': 4887621.0, 'time_delta': '56 days, 13:40:21', 'additions': 114, 'deletions': 113, 'state': 'closed'}, {'id': 554706456, 'number': 11690, 'closed': datetime.datetime(2021, 3, 28, 16, 41, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 14, 7, 7, 18, tzinfo=datetime.timezone.utc), 'time_taken': 6341674.0, 'time_delta': '73 days, 9:34:34', 'additions': 210, 'deletions': 26, 'state': 'closed'}, {'id': 552303780, 'number': 11654, 'closed': datetime.datetime(2021, 2, 4, 21, 4, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 10, 15, 49, 13, tzinfo=datetime.timezone.utc), 'time_taken': 2178909.0, 'time_delta': '25 days, 5:15:09', 'additions': 238, 'deletions': 12, 'state': 'closed'}, {'id': 552259308, 'number': 11651, 'closed': datetime.datetime(2021, 1, 17, 13, 43, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 10, 10, 8, 54, tzinfo=datetime.timezone.utc), 'time_taken': 617659.0, 'time_delta': '7 days, 3:34:19', 'additions': 0, 'deletions': 4, 'state': 'closed'}, {'id': 546556412, 'number': 11538, 'closed': datetime.datetime(2020, 12, 31, 7, 6, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 29, 16, 40, 44, tzinfo=datetime.timezone.utc), 'time_taken': 138366.0, 'time_delta': '1 day, 14:26:06', 'additions': 1, 'deletions': 3, 'state': 'closed'}, {'id': 525101055, 'number': 11239, 'closed': datetime.datetime(2020, 11, 23, 21, 51, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 21, 8, 49, 31, tzinfo=datetime.timezone.utc), 'time_taken': 219730.0, 'time_delta': '2 days, 13:02:10', 'additions': 16, 'deletions': 0, 'state': 'closed'}, {'id': 522369427, 'number': 11201, 'closed': datetime.datetime(2020, 11, 27, 22, 32, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 17, 12, 23, 41, tzinfo=datetime.timezone.utc), 'time_taken': 900533.0, 'time_delta': '10 days, 10:08:53', 'additions': 0, 'deletions': 106, 'state': 'closed'}]"
