pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
965723764,fix: added error svg's,"### What
<!-- description of the PR -->
- Add the error svg to more cards 

### Screenshot
![Screenshot_1655125925](https://user-images.githubusercontent.com/57723319/173362446-02d376a8-b308-4c3f-bf9f-bc5c916ec422.png)
![Screenshot_1655125950](https://user-images.githubusercontent.com/57723319/173362455-ef7efdc4-26dc-4e4e-b92a-9f7151a331a7.png)

### Fixes bug(s)
<!-- change by appropriate issues. -->
<!-- Please use a linking keyword https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword -->
- Fixes: #2049 

",True,2263,https://api.github.com/repos/openfoodfacts/smooth-app/pulls/2263,https://github.com/openfoodfacts/smooth-app/pull/2263,closed,24,10,2,1,0,0,0,1,[],2022-06-13 13:19:29+00:00,2022-06-13 14:34:34+00:00,4505.0,1:15:05,[],"[{'commit_sha': '6571127c874b3b87e0627ae62bf13cf3c17d57e3', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}]",Aman Raj,57723319,,User,,63,,23,90
983042725,fix: Background image upload,"### What
<!-- description of the PR -->
- An initial implementation of using` workmanager` to do image upload in the background
## **Benefits** 
 - Background image upload
 - upload completes whenever there is good internet  
 - once upload scheduled , will retry for five times before finally giving up
 - Task remains even when phone starts or app closed

## **Problems**
- can't easily manage app state when using `workmanager`  [WIP] alternate ways to let users know if the task is done(possibly other menus)
- ios setup is still not configured,(yet to be done,)



### Fixes bug(s)
<!-- change by appropriate issues. -->
<!-- Please use a linking keyword https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword -->
- Fixes: #1593 #2192  #2459 

### Part of 
- #1393 
",True,2433,https://api.github.com/repos/openfoodfacts/smooth-app/pulls/2433,https://github.com/openfoodfacts/smooth-app/pull/2433,closed,901,243,28,132,12,172,3,1,"[{'name': 'image upload'}, {'name': '🎯 P0'}, {'name': 'Offline - Contribution'}]",2022-06-29 19:47:05+00:00,2022-09-01 10:15:09+00:00,5495284.0,"63 days, 14:28:04","[{'comment_id': 911029648, 'comment_body': 'How come?', 'comment_created': datetime.datetime(2022, 6, 30, 13, 29, 59, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 911030627, 'comment_body': 'Just remove.', 'comment_created': datetime.datetime(2022, 6, 30, 13, 30, 53, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 911031413, 'comment_body': ""I don't think you need this guy here, there was no `await` just before."", 'comment_created': datetime.datetime(2022, 6, 30, 13, 31, 36, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 911031662, 'comment_body': 'Please remove.', 'comment_created': datetime.datetime(2022, 6, 30, 13, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 911034139, 'comment_body': 'Depends on what you mean with `_isRefreshed`.\r\nIn the previous version it could mean the picture was uploaded.', 'comment_created': datetime.datetime(2022, 6, 30, 13, 34, 6, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 911035970, 'comment_body': ""I guess you could embed that in `uploadCapturedPicture`, couldn't you?"", 'comment_created': datetime.datetime(2022, 6, 30, 13, 35, 45, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 911038701, 'comment_body': 'Suggestions:\r\n* nextInt(1000000000)\r\n* timestamp\r\n* both', 'comment_created': datetime.datetime(2022, 6, 30, 13, 38, 20, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 911046096, 'comment_body': '`const`?', 'comment_created': datetime.datetime(2022, 6, 30, 13, 44, 49, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 912363866, 'comment_body': '@AshAman999 I don\'t really understand why you ""await"" here.\r\nYou only have to show the Snackbar, isn\'t-it ?', 'comment_created': datetime.datetime(2022, 7, 2, 13, 37, 37, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 912363991, 'comment_body': 'That 6 should be a constant please', 'comment_created': datetime.datetime(2022, 7, 2, 13, 38, 46, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 912364029, 'comment_body': '`imageUri` should be a constant please', 'comment_created': datetime.datetime(2022, 7, 2, 13, 38, 59, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 912364051, 'comment_body': 'Since your method is `async`, just `return true`', 'comment_created': datetime.datetime(2022, 7, 2, 13, 39, 20, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 912364110, 'comment_body': '+ please make this a constant, so your ""6"", will actually be the length of this array', 'comment_created': datetime.datetime(2022, 7, 2, 13, 40, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 912364212, 'comment_body': 'Before starting the upload, you should check a network is available (or at least say it is not in airplane mode)', 'comment_created': datetime.datetime(2022, 7, 2, 13, 40, 48, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 912364240, 'comment_body': 'This Map should be serialized/deserialized in a class', 'comment_created': datetime.datetime(2022, 7, 2, 13, 41, 12, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 912364330, 'comment_body': 'I think you have to use `deleteSync` here instead', 'comment_created': datetime.datetime(2022, 7, 2, 13, 41, 54, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 912364381, 'comment_body': 'Following my comment, please wrap this content in a class, with serialize/deserialize operations', 'comment_created': datetime.datetime(2022, 7, 2, 13, 42, 32, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 912387766, 'comment_body': 'I guess i have to remove this _isRefreshed here  , after scheduling the task not sure if it will run just instantly here', 'comment_created': datetime.datetime(2022, 7, 2, 18, 17, 40, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 912387848, 'comment_body': 'I did, will push the code soon', 'comment_created': datetime.datetime(2022, 7, 2, 18, 18, 50, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 912387953, 'comment_body': ""is this necessary \r\n`final String uniqueId =   'ImageUploader_${barcode}_${imageField.value}${Random().nextInt(100)}';`\r\nIsn't it already unique here ? \r\n@monsieurtanuki  @g123k "", 'comment_created': datetime.datetime(2022, 7, 2, 18, 19, 51, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 912388000, 'comment_body': 'workmanager does uses await before initialization and scheduling task so ', 'comment_created': datetime.datetime(2022, 7, 2, 18, 21, 6, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 912388201, 'comment_body': 'marking these as resolved cuz done in the latest commit ', 'comment_created': datetime.datetime(2022, 7, 2, 18, 23, 38, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 912388291, 'comment_body': ""```dart\r\n await Workmanager().registerOneOffTask(\r\n          task,\r\n          'ImageUploadWorker',\r\n          constraints: Constraints(\r\n            networkType: NetworkType.connected,\r\n          ),\r\n          inputData: inputData,\r\n          initialDelay: duration[counter],\r\n        );\r\n```\r\n I belive this constraint is taking care of this "", 'comment_created': datetime.datetime(2022, 7, 2, 18, 24, 53, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 912391201, 'comment_body': ""@AshAman999 Not it's not. Just roll a dice twice: there's a 1/6 chance to roll the same number twice (I've just done it: 5-3-6-6)"", 'comment_created': datetime.datetime(2022, 7, 2, 19, 0, 48, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 912396451, 'comment_body': ""I mean, why do you have to wait here?\r\nSince this is async, we don't have to wait for a response we never read"", 'comment_created': datetime.datetime(2022, 7, 2, 20, 10, 12, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 912396563, 'comment_body': 'Yes I know, but the extra check would be better.\r\nInternet access != OFF server online (= basically try to ping the server)', 'comment_created': datetime.datetime(2022, 7, 2, 20, 11, 10, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 912433953, 'comment_body': 'I meant was barcode is alrady unique right, and i am just adding another random to it, anyways created a random class in the code ', 'comment_created': datetime.datetime(2022, 7, 3, 5, 44, 9, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 912434036, 'comment_body': ""crreated a seperate class in another file for it , I hope that's okay"", 'comment_created': datetime.datetime(2022, 7, 3, 5, 45, 5, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 912452916, 'comment_body': ""```dart\r\nimport 'dart:io';\r\n  \r\n\r\nFuture<void> main() async {\r\n  final HttpClient client = HttpClient();\r\n  try{\r\n    final HttpClientRequest request = await client.get(\r\n    'world.openfoodfacts.org' , 80 , '/'\r\n    );\r\n    \r\n    final HttpClientResponse response = await request.close();\r\n    print(response.statusCode);\r\n  }\r\n  catch(e){\r\n    print(e);\r\n  }\r\n}\r\n```\r\nok something like this ? but when it doesn't return 200 then what the retry method here shoud be  kinda confused ??? , like i should check ping again but after how much time , and won't it be bad for end user like even if it retries after every 30 seconds to check for ping again the work thread is still doing it's work ?? using sleep of 30s then sounds good ?\r\nSuggestions ?? @g123k "", 'comment_created': datetime.datetime(2022, 7, 3, 8, 46, 42, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 912455027, 'comment_body': 'Have you fully tested this code and ensured that the access to the DB works well?', 'comment_created': datetime.datetime(2022, 7, 3, 9, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 912455179, 'comment_body': 'If the ping fails, then the next window should be chosen, or the last one in the case where it is the last case', 'comment_created': datetime.datetime(2022, 7, 3, 9, 4, 7, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 912469361, 'comment_body': "">Have you fully tested this code and ensured that the access to the DB works well?\r\n\r\nDoes it mean if i able to update to the server ?  Cuz i am not updating the local database for now and the server query does run and it's working fine "", 'comment_created': datetime.datetime(2022, 7, 3, 11, 4, 14, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 912484105, 'comment_body': 'No, I just mean: are you able to update the DB from the WorkManager, because I guess you have to make some specific code for that', 'comment_created': datetime.datetime(2022, 7, 3, 13, 2, 54, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 912494278, 'comment_body': 'Currently i am **`just pushing the image`** to the server and not fetching or saving anything \r\n\r\nfor now user has to manually refresh the product to fetch the details from the server\r\nWas having troubles updating the DB from workmanager, seems like little tricky in that part(probably native android)\r\n', 'comment_created': datetime.datetime(2022, 7, 3, 14, 21, 10, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 912494872, 'comment_body': ""I am getting a bit confusing here what actually u are trying to say to me(not getting enough context),\r\n- Like if ping fails i still do the schedule of task for duration[tries] time ?\r\n- or i just sleep for duration[tries] time \r\nIf i go with the first one then it's not needed cuz it's already being handled ,scheduled if it fails to update anyhow\r\nif i go with the later on, won't it be that a task is there running which should rather be scheduled "", 'comment_created': datetime.datetime(2022, 7, 3, 14, 25, 43, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 917594026, 'comment_body': '`///`', 'comment_created': datetime.datetime(2022, 7, 11, 6, 50, 48, tzinfo=datetime.timezone.utc), 'commenter': 'M123-dev', 'type': 'User'}, {'comment_id': 917594144, 'comment_body': '```suggestion\n      required this.languageCode,\n});\n```\n', 'comment_created': datetime.datetime(2022, 7, 11, 6, 51, tzinfo=datetime.timezone.utc), 'commenter': 'M123-dev', 'type': 'User'}, {'comment_id': 917594378, 'comment_body': 'A space between 15 and 16', 'comment_created': datetime.datetime(2022, 7, 11, 6, 51, 22, tzinfo=datetime.timezone.utc), 'commenter': 'M123-dev', 'type': 'User'}, {'comment_id': 917594488, 'comment_body': 'Also a space before this method', 'comment_created': datetime.datetime(2022, 7, 11, 6, 51, 32, tzinfo=datetime.timezone.utc), 'commenter': 'M123-dev', 'type': 'User'}, {'comment_id': 917596843, 'comment_body': 'Just for clarity it my head is this `return true` stopping the background task', 'comment_created': datetime.datetime(2022, 7, 11, 6, 55, tzinfo=datetime.timezone.utc), 'commenter': 'M123-dev', 'type': 'User'}, {'comment_id': 917622415, 'comment_body': ""I agree here, doesn't care why it fails, no network connection or the server is down in both ways the next duration should be picked, no need for extra work"", 'comment_created': datetime.datetime(2022, 7, 11, 7, 30, 25, tzinfo=datetime.timezone.utc), 'commenter': 'M123-dev', 'type': 'User'}, {'comment_id': 917624658, 'comment_body': 'What is the initial Delay and why is it counter - 1', 'comment_created': datetime.datetime(2022, 7, 11, 7, 33, 10, tzinfo=datetime.timezone.utc), 'commenter': 'M123-dev', 'type': 'User'}, {'comment_id': 917625105, 'comment_body': 'Error seems too worse here is there maybe a warn or something ', 'comment_created': datetime.datetime(2022, 7, 11, 7, 33, 44, tzinfo=datetime.timezone.utc), 'commenter': 'M123-dev', 'type': 'User'}, {'comment_id': 917625753, 'comment_body': 'Better use the imageUri of the object here', 'comment_created': datetime.datetime(2022, 7, 11, 7, 34, 35, tzinfo=datetime.timezone.utc), 'commenter': 'M123-dev', 'type': 'User'}, {'comment_id': 917627217, 'comment_body': 'Maybe throw a error here so that we get to see it on Sentry to have a overview if and when it fails', 'comment_created': datetime.datetime(2022, 7, 11, 7, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'M123-dev', 'type': 'User'}, {'comment_id': 917631679, 'comment_body': 'The random string generator is nice but I think random numbers would do the job too\n\nBut also what purpose does this provide the barcode and image field should be unique right ', 'comment_created': datetime.datetime(2022, 7, 11, 7, 41, 48, tzinfo=datetime.timezone.utc), 'commenter': 'M123-dev', 'type': 'User'}, {'comment_id': 917648607, 'comment_body': 'Suggestion\n```suggestion\n    ""image_upload_queued"": ""Image upload queued,the image will be uploaded in the background"",\n```\n', 'comment_created': datetime.datetime(2022, 7, 11, 8, 2, 11, tzinfo=datetime.timezone.utc), 'commenter': 'M123-dev', 'type': 'User'}, {'comment_id': 917651308, 'comment_body': ""Shouldn't this be outside of the if and not overwrite the old product\n\nAlso what are the changes in this file for are the related to the background upload"", 'comment_created': datetime.datetime(2022, 7, 11, 8, 5, 31, tzinfo=datetime.timezone.utc), 'commenter': 'M123-dev', 'type': 'User'}, {'comment_id': 917671261, 'comment_body': ""yes, it's like I tried many times to upload and it failed maybe a server problem, and now I don't want to try again so I just return true, faking `workmanager` to believe that it completed the task successfully.\r\nI probably could throw an error here to let sentry know, but as said, `workmanager `works separately from the main app, so I have to look for compatibility. So leaving it as it is for now "", 'comment_created': datetime.datetime(2022, 7, 11, 8, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 917672026, 'comment_body': 'Not sure if the sentry will work with work manager, i will research it then i could do it later', 'comment_created': datetime.datetime(2022, 7, 11, 8, 28, 51, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 917672518, 'comment_body': 'Yeah, barcode and image field was unique already, still it was requested on the last preview so added it, \r\nand having `smoothrandom `library will help for more upcoming tasks ', 'comment_created': datetime.datetime(2022, 7, 11, 8, 29, 20, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 917675040, 'comment_body': 'oops!, I missed it there 😿 ', 'comment_created': datetime.datetime(2022, 7, 11, 8, 31, 57, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 917679423, 'comment_body': ""see, what I did is say I am still doing the work and say I uploaded an image then before I finish the button the product is already now in the local DB as it finished quickly. \r\nSo I check if it's already saved,if it is then i don't do anything , \r\nif the task is not completed so I just show a placeholder product there for now.\r\nI hope it clarified it a bit."", 'comment_created': datetime.datetime(2022, 7, 11, 8, 36, 55, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 917679629, 'comment_body': 'okay :)', 'comment_created': datetime.datetime(2022, 7, 11, 8, 37, 9, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 917688754, 'comment_body': ""the initial delay is zero, \r\nI start an upload there is internet it gets uploaded immediately, 30 seconds delay is if the server doesn't respond at the first try, I probably doubt that we will ever encounter that case. \r\nEven if I did try to upload something when there is no internet, then it will wait for the internet and as soon as the internet is there it will try to upload the image immediately, `with no 30-second delay` if it has not failed before.\r\n\r\nAnd why counter -1 as I incremented it before, so as to pass the input task JSON to another work manager call, and so for delay i subtracted 1, \r\nAll i could say is i checked about this -1 thing and it works and no problems regarding this "", 'comment_created': datetime.datetime(2022, 7, 11, 8, 47, 11, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 917689659, 'comment_body': 'No concerns for end users ', 'comment_created': datetime.datetime(2022, 7, 11, 8, 48, 7, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 920178459, 'comment_body': ""```suggestion\r\n          debugPrint('Error: $e,Updating to local database failed');\r\n```"", 'comment_created': datetime.datetime(2022, 7, 13, 14, 52, 42, tzinfo=datetime.timezone.utc), 'commenter': 'teolemon', 'type': 'User'}, {'comment_id': 920178823, 'comment_body': '```suggestion\r\n      // if task is greater than 6 , that means it has been executed 7 times\r\n```', 'comment_created': datetime.datetime(2022, 7, 13, 14, 53, 2, tzinfo=datetime.timezone.utc), 'commenter': 'teolemon', 'type': 'User'}, {'comment_id': 920179548, 'comment_body': ""```suggestion\r\n          // It's just that the task of updating the product in the local database has failed\r\n```"", 'comment_created': datetime.datetime(2022, 7, 13, 14, 53, 39, tzinfo=datetime.timezone.utc), 'commenter': 'teolemon', 'type': 'User'}, {'comment_id': 920235041, 'comment_body': 'what about ean_fieldname_language_code_timestamp ? @g123k @AshAman999 ', 'comment_created': datetime.datetime(2022, 7, 13, 15, 43, 17, tzinfo=datetime.timezone.utc), 'commenter': 'teolemon', 'type': 'User'}, {'comment_id': 920236271, 'comment_body': '```suggestion\r\n    ""image_upload_queued"": ""The image will be uploaded in the background as soon as possible."",\r\n```', 'comment_created': datetime.datetime(2022, 7, 13, 15, 44, 24, tzinfo=datetime.timezone.utc), 'commenter': 'teolemon', 'type': 'User'}, {'comment_id': 920397423, 'comment_body': '@g123k \r\nWe need to change  `ImageUploadWorker` to `BackgroundProcess` in the ios config ', 'comment_created': datetime.datetime(2022, 7, 13, 18, 45, 48, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 925820072, 'comment_body': '```suggestion\r\n       <string>BackgroundProcess</string>\r\n```\r\n?', 'comment_created': datetime.datetime(2022, 7, 20, 16, 27, 13, tzinfo=datetime.timezone.utc), 'commenter': 'teolemon', 'type': 'User'}, {'comment_id': 925821716, 'comment_body': '```suggestion\r\n    WorkmanagerPlugin.registerTask(withIdentifier: ""BackgroundProcess"")\r\n```', 'comment_created': datetime.datetime(2022, 7, 20, 16, 28, 49, tzinfo=datetime.timezone.utc), 'commenter': 'teolemon', 'type': 'User'}, {'comment_id': 925867850, 'comment_body': ""```suggestion\r\n      backgroundTaskName: 'BackgroundProcess',\r\n```"", 'comment_created': datetime.datetime(2022, 7, 20, 17, 21, 2, tzinfo=datetime.timezone.utc), 'commenter': 'teolemon', 'type': 'User'}, {'comment_id': 951166429, 'comment_body': ""You can remove this part, since we won't use it"", 'comment_created': datetime.datetime(2022, 8, 22, 8, 40, 5, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951166739, 'comment_body': ""You can remove this part, since we won't use it"", 'comment_created': datetime.datetime(2022, 8, 22, 8, 40, 23, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951167556, 'comment_body': 'I prefer sentences with `_`, but not mandatory', 'comment_created': datetime.datetime(2022, 8, 22, 8, 41, 10, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951167748, 'comment_body': 'Please add trailing commas', 'comment_created': datetime.datetime(2022, 8, 22, 8, 41, 20, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951168155, 'comment_body': 'Could you document this method, please?', 'comment_created': datetime.datetime(2022, 8, 22, 8, 41, 43, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951168694, 'comment_body': 'As the name of the method is not straightforward, could you document a little bit?', 'comment_created': datetime.datetime(2022, 8, 22, 8, 42, 16, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951169788, 'comment_body': 'What about errors? Do you only rely on the library?', 'comment_created': datetime.datetime(2022, 8, 22, 8, 43, 20, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951169923, 'comment_body': 'Trailing comma please', 'comment_created': datetime.datetime(2022, 8, 22, 8, 43, 28, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951170376, 'comment_body': 'Please use a constant for ""1"" and explain what it means', 'comment_created': datetime.datetime(2022, 8, 22, 8, 43, 56, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951171031, 'comment_body': 'Could you extract this do a method and add some documentation please', 'comment_created': datetime.datetime(2022, 8, 22, 8, 44, 36, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951171661, 'comment_body': 'product with a ""p"", please', 'comment_created': datetime.datetime(2022, 8, 22, 8, 45, 14, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951172207, 'comment_body': 'Please use directly Dart 2.17 syntax: `super.key`', 'comment_created': datetime.datetime(2022, 8, 22, 8, 45, 49, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951172613, 'comment_body': '`growable` for `toList` or not?', 'comment_created': datetime.datetime(2022, 8, 22, 8, 46, 13, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951172907, 'comment_body': 'Please extract this code to a method', 'comment_created': datetime.datetime(2022, 8, 22, 8, 46, 29, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951173226, 'comment_body': 'Please add constants for long/short… durations and check if we can use them in other places ', 'comment_created': datetime.datetime(2022, 8, 22, 8, 46, 46, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951174289, 'comment_body': 'Could you create a dedicated widget instead of this loooooooooong widget?', 'comment_created': datetime.datetime(2022, 8, 22, 8, 47, 45, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951175097, 'comment_body': ""To prevent one useless allocation, make this final.\r\nwrite 'cancelled' after cancelTask"", 'comment_created': datetime.datetime(2022, 8, 22, 8, 48, 36, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951175388, 'comment_body': 'Please replace by constant or enums', 'comment_created': datetime.datetime(2022, 8, 22, 8, 48, 53, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951175911, 'comment_body': ""You're generating ids in multiple places, please do in it in a single one"", 'comment_created': datetime.datetime(2022, 8, 22, 8, 49, 25, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951176587, 'comment_body': ""Don't hardcode colors.\r\nPlease use what's provided in the theme or add it in it, if necessary"", 'comment_created': datetime.datetime(2022, 8, 22, 8, 50, 5, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951176816, 'comment_body': 'The same goes here for the color', 'comment_created': datetime.datetime(2022, 8, 22, 8, 50, 20, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951177456, 'comment_body': 'The same for the id generation', 'comment_created': datetime.datetime(2022, 8, 22, 8, 50, 57, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951177843, 'comment_body': 'Please translate this', 'comment_created': datetime.datetime(2022, 8, 22, 8, 51, 14, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951178020, 'comment_body': 'The same', 'comment_created': datetime.datetime(2022, 8, 22, 8, 51, 21, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951179122, 'comment_body': 'Maybe call-it utils or something like, as random will only be used once.', 'comment_created': datetime.datetime(2022, 8, 22, 8, 52, 18, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951345120, 'comment_body': 'Since everytime i require a unique id with those parameters so I am creating at places where i need them ', 'comment_created': datetime.datetime(2022, 8, 22, 11, 52, 8, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 951345496, 'comment_body': 'Since everytime i require a unique id with those parameters so I am creating at places where i need them ', 'comment_created': datetime.datetime(2022, 8, 22, 11, 52, 31, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 951353102, 'comment_body': 'I found something similar in \r\nline 37 `lib\\query\\barcode_product_query.dart`\r\nSo just used the same block of code here', 'comment_created': datetime.datetime(2022, 8, 22, 12, 1, 16, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 951353759, 'comment_body': 'Yeah, Should I explicitly handle it here, \r\nI had done earlier but removed it since the task was already being handled with taskManager', 'comment_created': datetime.datetime(2022, 8, 22, 12, 2, 6, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 951354273, 'comment_body': 'Not having a mac, I avoided editing the ios specific files, ', 'comment_created': datetime.datetime(2022, 8, 22, 12, 2, 46, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 951354360, 'comment_body': 'Not having a mac, I avoided editing the ios specific files, ', 'comment_created': datetime.datetime(2022, 8, 22, 12, 2, 52, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 951366737, 'comment_body': ""This file isn't being used, maybe I should delete it instead. "", 'comment_created': datetime.datetime(2022, 8, 22, 12, 16, 35, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 951482512, 'comment_body': 'Ok, I will do it?\r\nIs-it ok if I commit in your PR?', 'comment_created': datetime.datetime(2022, 8, 22, 14, 4, 19, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951486430, 'comment_body': 'No problem for that, while i made some changes pushing them before you do more changes in it \r\nThanks for the rescue here :)', 'comment_created': datetime.datetime(2022, 8, 22, 14, 7, 40, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 951488093, 'comment_body': 'It seems to be sent by the server https://github.com/openfoodfacts/openfoodfacts-dart/blob/master/lib/model/ProductResult.dart\r\n\r\n0 seems to be an error\r\nAnd 1 is OK', 'comment_created': datetime.datetime(2022, 8, 22, 14, 9, 1, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951489062, 'comment_body': 'Yes, but a Id generator or something like would be better to understand.\r\nYour code is mixed along many things', 'comment_created': datetime.datetime(2022, 8, 22, 14, 9, 46, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 951840810, 'comment_body': 'Now you can do the commits @g123k , I am working on making the code more modular', 'comment_created': datetime.datetime(2022, 8, 22, 19, 36, 29, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 951864886, 'comment_body': 'Yeah, So thought leaving this as it is would be better', 'comment_created': datetime.datetime(2022, 8, 22, 20, 7, 20, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 952536510, 'comment_body': 'Done this as well !', 'comment_created': datetime.datetime(2022, 8, 23, 12, 14, 20, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 952608182, 'comment_body': 'I think you can remove this listener', 'comment_created': datetime.datetime(2022, 8, 23, 13, 10, 45, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952609143, 'comment_body': ""I'm not sure naming this variable `mp` helps to understand what it contains"", 'comment_created': datetime.datetime(2022, 8, 23, 13, 11, 38, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952609607, 'comment_body': 'When you refers to classes, methods… please use brackets.\r\nEg: `[Product]`', 'comment_created': datetime.datetime(2022, 8, 23, 13, 11, 59, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952610113, 'comment_body': 'Please add the constant stating that 1 is a success please', 'comment_created': datetime.datetime(2022, 8, 23, 13, 12, 24, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952611106, 'comment_body': ""Since you don't use this variable, you should call delete directly"", 'comment_created': datetime.datetime(2022, 8, 23, 13, 13, 18, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952611738, 'comment_body': 'Could you add an example of what it will generate please?', 'comment_created': datetime.datetime(2022, 8, 23, 13, 13, 52, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952612020, 'comment_body': 'Please make this constructor private', 'comment_created': datetime.datetime(2022, 8, 23, 13, 14, 4, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952612830, 'comment_body': ""Mmm that's weird to have a path… for an Uri.\r\nI think something is wrong in terms of naming"", 'comment_created': datetime.datetime(2022, 8, 23, 13, 14, 44, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952613356, 'comment_body': 'You can add a check if (monted) for the context', 'comment_created': datetime.datetime(2022, 8, 23, 13, 15, 12, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952613753, 'comment_body': 'Please add an exemple of a generated id', 'comment_created': datetime.datetime(2022, 8, 23, 13, 15, 30, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952614619, 'comment_body': 'It seems that this is a page/screen. Please call it `OfflineTaskPage` instead.', 'comment_created': datetime.datetime(2022, 8, 23, 13, 16, 15, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952614947, 'comment_body': 'A one line call would be better here', 'comment_created': datetime.datetime(2022, 8, 23, 13, 16, 32, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952615552, 'comment_body': ""Since you don't use the item, please replace the parameter by an underscore."", 'comment_created': datetime.datetime(2022, 8, 23, 13, 17, 5, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952615789, 'comment_body': 'What does 0 mean?', 'comment_created': datetime.datetime(2022, 8, 23, 13, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952616105, 'comment_body': 'Async is useless here', 'comment_created': datetime.datetime(2022, 8, 23, 13, 17, 33, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952616622, 'comment_body': 'Would be even better if this is also a separated Widget', 'comment_created': datetime.datetime(2022, 8, 23, 13, 18, 2, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952617116, 'comment_body': 'No, please create a dedicated Widget\r\n\r\nclass XXX extends Stateless/ful Widget', 'comment_created': datetime.datetime(2022, 8, 23, 13, 18, 30, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952617492, 'comment_body': ""You're doing anything async here"", 'comment_created': datetime.datetime(2022, 8, 23, 13, 18, 50, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952617903, 'comment_body': 'Please replace by the constant', 'comment_created': datetime.datetime(2022, 8, 23, 13, 19, 9, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952618023, 'comment_body': 'Small typo', 'comment_created': datetime.datetime(2022, 8, 23, 13, 19, 15, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952618338, 'comment_body': 'Usless async', 'comment_created': datetime.datetime(2022, 8, 23, 13, 19, 31, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952618681, 'comment_body': 'BASIC_DETAILS should be a constant', 'comment_created': datetime.datetime(2022, 8, 23, 13, 19, 49, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952618827, 'comment_body': 'PRODUCT_EDIT_TASK should be a constant', 'comment_created': datetime.datetime(2022, 8, 23, 13, 19, 57, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952620200, 'comment_body': 'Just for my understand, why do you update `product` in the `else` case and not here?', 'comment_created': datetime.datetime(2022, 8, 23, 13, 21, 5, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952620962, 'comment_body': ""You're calling Theme.of() twice, please store it in a variable, to prevent multiple calls"", 'comment_created': datetime.datetime(2022, 8, 23, 13, 21, 44, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952621311, 'comment_body': 'COnstant please', 'comment_created': datetime.datetime(2022, 8, 23, 13, 22, 3, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952621414, 'comment_body': 'COnstant please', 'comment_created': datetime.datetime(2022, 8, 23, 13, 22, 7, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952621910, 'comment_body': 'please make it static', 'comment_created': datetime.datetime(2022, 8, 23, 13, 22, 30, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952622299, 'comment_body': 'Constant please', 'comment_created': datetime.datetime(2022, 8, 23, 13, 22, 51, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952622397, 'comment_body': 'Constant please', 'comment_created': datetime.datetime(2022, 8, 23, 13, 22, 54, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952622681, 'comment_body': 'Constant please', 'comment_created': datetime.datetime(2022, 8, 23, 13, 23, 8, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 952709061, 'comment_body': 'It was already a constant here ', 'comment_created': datetime.datetime(2022, 8, 23, 14, 33, 32, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 952720451, 'comment_body': 'So what I am doing is, I am looking if the product is in the database,\r\n-  if it is not I just create a product and put it in the database so that the user immediately sees the product, \r\n-  if the product was already in the DB then I just update the changed details about the product and save to DB', 'comment_created': datetime.datetime(2022, 8, 23, 14, 42, 55, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 952749231, 'comment_body': ""Don't know but I can't seemingly use the `mounted` variable in this page"", 'comment_created': datetime.datetime(2022, 8, 23, 15, 6, 2, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 952760496, 'comment_body': 'I just recalled from the past code whatever it was, if you say could be changed for sure!', 'comment_created': datetime.datetime(2022, 8, 23, 15, 15, 32, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 952770655, 'comment_body': ""It's showing a warning here, can't remove as of now"", 'comment_created': datetime.datetime(2022, 8, 23, 15, 24, 17, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 952797756, 'comment_body': ""Honestly, I don't know the exact answer, got the boilerPlate from flutter docs,\r\nIt seems like it tries to associate the menu item with a unique <T>"", 'comment_created': datetime.datetime(2022, 8, 23, 15, 44, 22, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 954143661, 'comment_body': 'What the goal of this statement alone now?', 'comment_created': datetime.datetime(2022, 8, 24, 18, 22, 26, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 954144852, 'comment_body': 'Could you add a description for each please.\r\nAlso be consistent, some are in uppercase, other in lowercase', 'comment_created': datetime.datetime(2022, 8, 24, 18, 23, 33, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 954145954, 'comment_body': 'Maybe, you should change imageUri to imagePath', 'comment_created': datetime.datetime(2022, 8, 24, 18, 24, 42, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 954146813, 'comment_body': 'One way to fix, is to store the context in a local variable.\r\nIt will thus allow you to remove // ignore lines', 'comment_created': datetime.datetime(2022, 8, 24, 18, 25, 31, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 954147386, 'comment_body': 'If you are concatening String, please use StringBuffer instead.\r\nIt is way more efficient', 'comment_created': datetime.datetime(2022, 8, 24, 18, 26, 3, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 954148456, 'comment_body': 'Could replace 0 with a constent, like POPUP_MENU_FIRST_ITEM', 'comment_created': datetime.datetime(2022, 8, 24, 18, 27, 9, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 954149694, 'comment_body': ""You're a Future is expected here."", 'comment_created': datetime.datetime(2022, 8, 24, 18, 28, 23, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 954150232, 'comment_body': 'Please create a dedicated Widget.\r\nA method is really bad in terms of perf.', 'comment_created': datetime.datetime(2022, 8, 24, 18, 28, 56, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 954150583, 'comment_body': 'Could you also add some asserts please?', 'comment_created': datetime.datetime(2022, 8, 24, 18, 29, 14, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 954152066, 'comment_body': 'Could add this in the code?\r\nIf I have asked you this question, someone else will also have it ;)', 'comment_created': datetime.datetime(2022, 8, 24, 18, 30, 38, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 954581482, 'comment_body': 'I deleted that code from that file, \r\n\r\nThough what this code does was When cropping was done, it gives an output to a file in the cache memory, so once we are done with the image upload then we delete the file, so as to not accumulate cache,', 'comment_created': datetime.datetime(2022, 8, 25, 7, 10, 45, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 954983105, 'comment_body': 'okay done with that', 'comment_created': datetime.datetime(2022, 8, 25, 13, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 955199192, 'comment_body': ""I think you can remove it, it won't change anything"", 'comment_created': datetime.datetime(2022, 8, 25, 16, 39, 19, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 956735820, 'comment_body': 'Please be consistent with comments and use 3 dashes everywhere.\r\nAlso ensure to always have a space at beginning please', 'comment_created': datetime.datetime(2022, 8, 28, 14, 18, 39, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 956735876, 'comment_body': 'What is that comma at the beginning?', 'comment_created': datetime.datetime(2022, 8, 28, 14, 19, 5, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 956735882, 'comment_body': 'E in uppercase', 'comment_created': datetime.datetime(2022, 8, 28, 14, 19, 12, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 956735956, 'comment_body': 'You can use the spread operator here (`..`)', 'comment_created': datetime.datetime(2022, 8, 28, 14, 19, 33, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 956736042, 'comment_body': 'Please call setState after this statement', 'comment_created': datetime.datetime(2022, 8, 28, 14, 20, 11, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 956736071, 'comment_body': 'Please split on 3 asserts', 'comment_created': datetime.datetime(2022, 8, 28, 14, 20, 23, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 956736134, 'comment_body': 'Could your create a dedicated Widget please?', 'comment_created': datetime.datetime(2022, 8, 28, 14, 21, 9, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 956745391, 'comment_body': ""Hello @g123k \r\nThis block of code is not here anymore, I can't understand whether you want me to write it again here or what,? \r\n\r\nAlso, I looked into issue #2843. So, since we delete the cropped image from the cache when it's done uploading, the flutter engine doesn't find any file at that location to render that image , so if we don't remove that image explicitly, is it going to be removed on its own ???"", 'comment_created': datetime.datetime(2022, 8, 28, 15, 28, 3, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 956745435, 'comment_body': '`///` is for doc string, and `//` for standard comments, so I thought to use `///` only when necessary.', 'comment_created': datetime.datetime(2022, 8, 28, 15, 28, 37, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 956745640, 'comment_body': 'Two dashes is within the code. Here, these are constants', 'comment_created': datetime.datetime(2022, 8, 28, 15, 30, 20, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 956745704, 'comment_body': 'Ok then forget about this', 'comment_created': datetime.datetime(2022, 8, 28, 15, 30, 55, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 956746881, 'comment_body': ""Okay perfect :) \r\nBut also I was confused \r\n### **if we don't remove that image explicitly, is it going to be removed on its own ???**"", 'comment_created': datetime.datetime(2022, 8, 28, 15, 40, 10, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 956747044, 'comment_body': 'No you have to delete it manually ', 'comment_created': datetime.datetime(2022, 8, 28, 15, 41, 18, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 958163110, 'comment_body': 'Sorry to be that finicky, but please use an Uppercase here', 'comment_created': datetime.datetime(2022, 8, 30, 8, 19, 22, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 958164194, 'comment_body': 'conflict with an S please\r\nand please add a comma after conflict.', 'comment_created': datetime.datetime(2022, 8, 30, 8, 20, 25, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 958164487, 'comment_body': 'please remove the useless space before the comma', 'comment_created': datetime.datetime(2022, 8, 30, 8, 20, 44, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 958164969, 'comment_body': ""please remove the useless space before the comma\r\n+ Are you sure, you respect the 80 'characters'' limit here? You should add a line break"", 'comment_created': datetime.datetime(2022, 8, 30, 8, 21, 12, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 958165795, 'comment_body': 'Could you re-arrange the code, by just saying `if (mounted) { Navigator… }`', 'comment_created': datetime.datetime(2022, 8, 30, 8, 22, 1, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}]","[{'commit_sha': 'ae2c27b163fb21de8ca5bb082a948a62b858fe31', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0fc5ffbb599b195efd41086b37e123e70164099', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '624f1969f89aa97eeda118cbb6534764490ccc83', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '891cb5a15e8e88330828f13ce5501aeaa3baa19d', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16f1a90efa4f1445b6be4b4bdf505d387c9d7a76', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2777d85ddaf6d346979c302bf660c33df37e0fd0', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '885fddfb1085795a06e50c2648df1c0d1dcd1996', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a068bf5f2784b221bfeea3ebfd84d32d35411a6b', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b0972fa9d7cb418199285979495ecc3f07ef1d8', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69e5605052f2359c167f961b22b82f6334a66256', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b13cd93fa3284b63ed61505735f5fc77e835566d', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fc449c4c867257498a2ed91f6d47f6e82d4b85f', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea96e3a390c23fa7a3d8c41363ae3e0a6ddebf0c', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '982cfbba81f5848c17ad21a4a94f6b2916646452', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ee8ff94a00adea921a507ce02de891154cb3739', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edf420b37026ddac11a6abd8def4eccd8182ea76', 'committer_username': 'monsieurtanuki', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2015, 3, 20, 17, 53, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa037e7a1ee8944cbd70cfb8acf4af3a0d4be558', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8009449a3e806591fc66f6c9ac8d627316e076c9', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f19841130ca915706f4f408df7bd6836204f7f3c', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '514017a44b3885f1be5801c7f16f99787e45ae09', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ba142500d0833d7575cd5872da6171c6036571c', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6838ae7ecdb8bbeb8fdf769d69640782513a58b7', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ed2fc3b5990453fbfe7bf070450d77a2a3587cb', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '854bda864a90122680a3c7fc771f5b7eae29c5e7', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91de167124749be699dea59705061486c799fc12', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4fc18dd7c8f415530cca380b933fad0828f0310', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e2bf8125eeb91397b7363e3b0f2016e3cb26b50', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dcbf0c040bbee732fb5d446ffa36965b0f1c911', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51a7477026f5ad577c51592eba96abd0ef1519e5', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c141b9831795cca35ae1c3c25f488798c1a6e444', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69fdf1c05a6c36a85eb19bf3a66b7a1aba6e1f1f', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5e9c25d672a0347fa41f16a0e728ef9b0dbd4ad', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f495208b470950e3a0805fd66d013a0c2c75c31', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '655e2c2d67d5d89eea1bb872c77fba9b58bdf67b', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12cd639811b2dc86772faef51fad3d9b6339c0ab', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8b93b8a8f268038fdd5e871a47d71a5c7e3a0c5', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18f3467a76d0d0be058cba00275531edc6133ec4', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '996cc17f02af70bcfea69f354228f36936e80df8', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2cee7157cb3b148a3c0b11407a9d1923dd7cc6e', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '869686b2c01b701c4dbb70c9b421d35262d992b8', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d04195d80213601a27a08b999f3aaf47879ebcb', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2ee6ff283b09c80f2d413e70aac4baa47ea6c33', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '661320ea1e92bb921e3b249a78f0eb6a2ae7d2ed', 'committer_username': 'g123k', 'committer_name': 'Edouard Marquez', 'committer_email': None, 'commit_date': datetime.datetime(2010, 4, 18, 20, 58, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cae159aded81f2561c8a927e475ba71b1e802ba', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a948e0280cc2017eacce42189a79f6b3873613c7', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7b26cf7d6af9b688935ab55a528d7c9064381b4', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca7280f731e74bda048a0b6c2745c4d0b86fd8dc', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '906525f82183aa46871d26dd47f29b7f33e38f40', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd09957f5be41953d4829c8290914b3fc482e42da', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c5e031fd149db7ad5e0d551bdd2c3bf87972193', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0a1944ab856fa422662e7824428864ca214a277', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '871fbd8cbb8681654a609133f014dbc3892f81b9', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60ed80484beb11ef47e98624837ae591cdbd2459', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '598930edd65d424db9b1f1569372d45e0d4ff1a8', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f457c0efa2243a0a6db48037317af0b9c4761658', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ea112a3b4ca31acf5535c7ee18032c5ffd928bd', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdfd3d41791276100b6151a261da57f008287247', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a623512d312a8d3626c31f59e597066c4a2ac92', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6a12410ca8765ae1bfd25f960a1fdcfba420a92', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '732ef60647e9a8d2c1fa7d719205c30778af88f9', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ecd0e696b80b9733d07e6e6d8255a45fcfcaf036', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3da277b360a4807e89770044de500e733b3f2e1', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fed27f86eafe352d83742abf0d34dfffa20e06d7', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8aa6032f01a51976d276033b7c4d473ad1acbf1b', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f09f3cb1aef76ebd6959111ba3338bc7fd3c2097', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '200fd21e36fa08f2c420181deee8ce7931f75802', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fb3bcf730b0dd693b7f89fdc0e50d9e53f127c0', 'committer_username': 'teolemon', 'committer_name': 'Pierre Slamich', 'committer_email': 'pierre@openfoodfacts.org', 'commit_date': datetime.datetime(2012, 4, 29, 10, 48, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdae696b4df5dfff8a41b597194eeaf24689b7e5', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17f00073c9807de1d01cf9e83a727df791a8e748', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0297077c42da5cdc19eb66feadee932b3c55961e', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be94b128b4b7e60e555ab9617783cf55b7cbdc82', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3eca6f79874e553300dae3004d12b5f2c016c92b', 'committer_username': 'teolemon', 'committer_name': 'Pierre Slamich', 'committer_email': 'pierre@openfoodfacts.org', 'commit_date': datetime.datetime(2012, 4, 29, 10, 48, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e83c7b54319f54ca906736d6cb80bb0480cb3e97', 'committer_username': 'teolemon', 'committer_name': 'Pierre Slamich', 'committer_email': 'pierre@openfoodfacts.org', 'commit_date': datetime.datetime(2012, 4, 29, 10, 48, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64142d4bb51d3f49dbb982bd649b4778aaec1a17', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdcfd658cd63356e86a65446d56fff76713be249', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac2c1698295b78524c0ae52b97d7587605e3d847', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44a0b29ebee2dc42b9f6e2429a8ea36723904062', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81e28cbc7d374992aec3997724bb10a63ceb6b2d', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4b3a3e031adfe3825958b386280dedd0b5ea409', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d6115aa9d0d9c59abe5ae944ca70408dd1fa13b', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e615db761e67908f40bcc8893b66a4f7c63e1ff5', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cc45b5a0f508c006beead617f5242de5180d454', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67502b019998f82ae7d3feaa6fd473a00763b1ac', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae1f4fa3b94dba7fbcba5946f69b99066893f4da', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5565d638f48f3d1c434884d74ff67624a6474a1', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99c1df7bd29f451db146dafe39e0d7a561c3b2c2', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38fe02301296b6b035df9520bba2ad3f789bac13', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42b0237a4f7a91ed06d0ae964c5aedc2571c1608', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eec46f236ea8bfb1472c97715883b1c3894dc07d', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4bf4d13e1ec7d16b1867190b752e76dbf68f7b3', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed5a6cce26a2f481c4f9573002610e414c973243', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7236da1458af8294816fac71f86edd62eed7701c', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36b6b0875049150062044ef048e36caf078f46a5', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd61d9470dba3051a607aa55900fab439f81a338', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5441238dde2c0bcb863608726e40773e788cb578', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '078c1871cad5b8ba9bc442e0a34a5b1ac3bb5cb2', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c80d70cb0f2002bac571911e55627ee3aa532ecf', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '252cb77c01b310c7d877359f19e86bd5315cfa83', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1aef3a6c97015cbf8453af50c8eed6678255bf7', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1d5959fefb4b2fd054ae011f6af85d964338192', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f81081df59c2741cd7eb9f48cc3f506413cc71d', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '093971e8304343a61cbef60a908b75af770d9bc4', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36c7877b8efd9c85c98dd615aeace2dfcdde6fb4', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '453178558ab89655e8062ded8c32a986b08060ea', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5015bc74aaf50d61e6dc0be7ca6e2afcf734f94d', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bfc7be84e829ce2810aa117a20ccd8212a98660', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80152b14aaf32d55a74f231ba2ef29a07ac622f2', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e44fc4426f2b29408e5054efb5a40e138c80ba3d', 'committer_username': 'g123k', 'committer_name': 'Edouard Marquez', 'committer_email': None, 'commit_date': datetime.datetime(2010, 4, 18, 20, 58, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7ac588caa3d5d6a995a7f9170c07f8340bd54ce', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90b50aa4f007abed8c092208c21506d4539b22b6', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9b56105eeb7cfe8d8b6af4491025afb81bfe59d', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '910e025d20c91b511ae4f22ca2073d53d719f908', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77cf5bc60076d5ddf2d27e0dfc4eb5bd472626c9', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5389bcf40d34ccc898994550be5ca8b00e423ffd', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c848ff466707ffe88430992c2d5d16134d4a10f', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '315ec38b1759d8940fbff10a2e27e95df66b0e7d', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '764378d9df05ac91137bac63e22a052eaffc13db', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '839c9516ca4df6d7e685df4f17b84ea1503b0e62', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e7042bbb7ea7ccb93306b3c14d96589da94c0d3', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3e33f91b44b9434b343c9c5368957522c22c0b1', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84df712960926a6697a24bce7e25356255f9ba87', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17174b9863ac8887df77a70d6c68d1a09118e8e6', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4df79327efaf14c734efa11906ea094676b6a561', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0178c9912ca7191f750f8768f4b0fed03ee3a1ae', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a96dab44d30dafafb2971e1a622f3cefac92bd70', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b9d0bf026157fa0a84eab1764abedcada78105a', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a54b23447ca24ecc0261f8e507a6b83e4962d3fc', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cee993eaaae9facf0af53968605cc9959082c52', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20e3c7c5cbb9ea5a4b114bd4377182c9b6af2b3e', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76d0acb9b71dc752c269efd3ffe31984d7846e8b', 'committer_username': 'g123k', 'committer_name': 'Edouard Marquez', 'committer_email': None, 'commit_date': datetime.datetime(2010, 4, 18, 20, 58, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba788a9f2335a60c59101280ce1c195f2fb0bb38', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eba8d9671f8b33ed0a3c4defea02690cfe990f83', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}]",Aman Raj,57723319,,User,,63,,23,90
989255360,feat: use gzip to compress the json data for product,"### What
<!-- description of the PR -->
- Used gzip to compress the json before storing to sqf lite
-  Extra care taken to ensure that the `old uncompressed data` is still readable to the end user 
- More details here https://github.com/openfoodfacts/smooth-app/issues/2447#issuecomment-1174622060


### Fixes bug(s)
<!-- change by appropriate issues. -->
#2447 


### Part of 
- https://github.com/orgs/openfoodfacts/projects/33",False,2524,https://api.github.com/repos/openfoodfacts/smooth-app/pulls/2524,https://github.com/openfoodfacts/smooth-app/pull/2524,closed,20,5,1,2,6,5,2,1,"[{'name': 'database'}, {'name': 'Offline - Browsing'}]",2022-07-06 20:06:52+00:00,2022-07-07 14:55:44+00:00,67732.0,18:48:52,"[{'comment_id': 915240327, 'comment_body': 'I believe `///` is more for methods and `//` is more for ""internal"" comments.', 'comment_created': datetime.datetime(2022, 7, 6, 20, 44, 15, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 915241200, 'comment_body': ""I don't get the purpose of the `utf8` step."", 'comment_created': datetime.datetime(2022, 7, 6, 20, 45, 20, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 915249007, 'comment_body': ""Then your data type is more a `blob` than a `text` (cf. https://github.com/tekartik/sqflite/blob/master/sqflite/doc/supported_types.md).\r\nI know that [SQLite is flexible](https://www.sqlite.org/flextypegood.html), but that's a bit confusing and that means that for every insert there will be a 2-step operation (oh it's not a `text`, it's a `blob`) (or the other way around) (confusing, I said)."", 'comment_created': datetime.datetime(2022, 7, 6, 20, 56, 7, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 915435923, 'comment_body': ""``` dart\r\n    await db.execute('create table $TABLE_PRODUCT('\r\n          // cf. https://www.sqlite.org/lang_conflict.html\r\n          '$TABLE_PRODUCT_COLUMN_BARCODE TEXT PRIMARY KEY on conflict replace'\r\n          ',$_TABLE_PRODUCT_COLUMN_JSON BLOB NOT NULL'\r\n          ')');\r\n    }\r\n```\r\nSo something like this will work good as u said ryt?"", 'comment_created': datetime.datetime(2022, 7, 7, 3, 54, 34, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 915436360, 'comment_body': 'I am not really sure why just found these code over some artices \r\nProbably cuz gzip.encode requires `List<int>` so utf.encode is to convert so \r\n\r\n![image](https://user-images.githubusercontent.com/57723319/177687377-fd91b406-6243-4642-b1ef-fee632d31d08.png)\r\n', 'comment_created': datetime.datetime(2022, 7, 7, 3, 55, 43, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}]","[{'commit_sha': 'b3ddae0d53ca6adb1db56df89da4ebc09a886875', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57f9a13911ef660186efd253c53f9651fa2a5c17', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}]",Aman Raj,57723319,,User,,63,,23,90
989958908,feat: #2447 - gzipped product column - 6 times smaller database!,"New files:
* `dao_product_migration.dart`: Helpers around product data migration.
* `dao_unzipped_product.dart`: used to be `DaoProduct` - the old not zipped version; fixed `getAll` for big lists

Impacted files:
* `dao_hive_product.dart`: minor refactoring as `DaoProductMigrationSource`
* `dao_product.dart`: new table with zipped BLOB column as product and last update timestamp
* `local_database.dart`: now it's version 2 of sql database (new zipped product table); migration from old unzipped to new zipped product table; refactored around `DaoProductMigration`

### What
- Based on @AshAman999's #2524.
- No we store the product data in a gzipped BLOB field, in order to save space. We also maintain a ""database last update"" timestamp for each product.
- On the 251 products I had on my app, with the gzip operation we go from 44Kb to 7Kb per product, which is a factor similar to what was already found.
- We are talking about an old and a new product table, with automatic migration included. If the migration is successful the old table is emptied.

### Fixes bug(s)
- Closes: #2447",True,2527,https://api.github.com/repos/openfoodfacts/smooth-app/pulls/2527,https://github.com/openfoodfacts/smooth-app/pull/2527,closed,331,75,5,1,1,0,0,1,[],2022-07-07 10:01:30+00:00,2022-07-07 14:54:15+00:00,17565.0,4:52:45,[],"[{'commit_sha': '7fbe3c0a21118ce8fca2a8d787909f1b0e5e98d2', 'committer_username': 'monsieurtanuki', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2015, 3, 20, 17, 53, 49, tzinfo=datetime.timezone.utc)}]",,11576431,,User,,18,,0,28
991970541,fix: better place holder when no internet connection,"### What
<!-- description of the PR -->
- Better place holder for no internet cases

### Screenshot
<!-- Insert a screenshot to provide visual record of your changes, if visible -->
`Dark Mode`
![image](https://user-images.githubusercontent.com/57723319/178056724-cd81c4cd-e636-4b30-a617-0f654b192322.png)

`Light Mode`
![image](https://user-images.githubusercontent.com/57723319/178056821-abc087a3-591e-4d0a-97ac-7c4ce3d222fb.png)


### Fixes bug(s)
<!-- change by appropriate issues. -->
<!-- Please use a linking keyword https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword -->
- Fixes: #2552 


",True,2560,https://api.github.com/repos/openfoodfacts/smooth-app/pulls/2560,https://github.com/openfoodfacts/smooth-app/pull/2560,closed,14,3,2,2,1,0,0,1,[],2022-07-08 19:19:44+00:00,2022-07-09 17:19:24+00:00,79180.0,21:59:40,[],"[{'commit_sha': 'b50c57663ae5c5e327dbb54ac0a129c12027eab8', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48d9290c03d0e3f7556af4598c0f39f3439277a8', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}]",Aman Raj,57723319,,User,,63,,23,90
1001360141,fix: double-response mechanism in the scan screen,"### What
<!-- description of the PR -->
- Check for fresh copy of product while scanning whenever possible 

### Screenshot
<!-- Insert a screenshot to provide visual record of your changes, if visible -->

### Fixes bug(s)
<!-- change by appropriate issues. -->
<!-- Please use a linking keyword https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword -->
- Fixes: #2451 

### Part of 
- #2444 
",True,2632,https://api.github.com/repos/openfoodfacts/smooth-app/pulls/2632,https://github.com/openfoodfacts/smooth-app/pull/2632,closed,16,4,1,4,11,2,3,1,"[{'name': 'Offline'}, {'name': '🤳🥫 Scan'}, {'name': 'Offline - Browsing'}]",2022-07-19 23:01:08+00:00,2022-07-21 13:45:33+00:00,139465.0,"1 day, 14:44:25","[{'comment_id': 925049147, 'comment_body': 'I think you should specify the kind of expected exception here to only filter the one related to the network.\r\nSomething like on `MyNetworkException catch (e)`', 'comment_created': datetime.datetime(2022, 7, 19, 23, 58, 26, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 925186242, 'comment_body': 'Yeah changed to SockerException here \r\n```dart\r\n try {\r\n        final FetchedProduct fetchedProduct = await _queryBarcode(barcode);\r\n        if (fetchedProduct.product != null) {\r\n          product = fetchedProduct.product;\r\n        }\r\n      } on SocketException {\r\n        // Tried to refresh the product from server but failed maybe due to server error or internet connection issue\r\n        // Then it will show the cached product as it is\r\n      }\r\n   ```', 'comment_created': datetime.datetime(2022, 7, 20, 5, 26, 47, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}]","[{'commit_sha': '6851e34d3b59d1a30c66edef1d6f0699ac5b1cdc', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a338cff5a91dec081bdabf6d2d6df235c118f46d', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84ce80762239066dcf86c691f1430d25fea9041a', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e25c09c756b5e26e49b9835fb28c30ee4447358e', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}]",Aman Raj,57723319,,User,,63,,23,90
1008397503,feat: added feat in dev mode to preload 1k products,"### What
<!-- description of the PR -->
- Let the user prelod top 1000 products (Knowledge panels are excluded)
- Currently available only in dev mode
-  Will be moved further to onboarding when approved 
-  Translations to be added later

### Screenshot
![image](https://user-images.githubusercontent.com/57723319/180994601-a9317174-d4ec-4ea6-949d-d10c7e2b4826.png)

### Fixes bug(s)
<!-- change by appropriate issues. -->
<!-- Please use a linking keyword https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword -->


### Part of 
- [#6328](https://github.com/openfoodfacts/openfoodfacts-server/issues/6328)
",True,2661,https://api.github.com/repos/openfoodfacts/smooth-app/pulls/2661,https://github.com/openfoodfacts/smooth-app/pull/2661,closed,67,1,2,3,4,0,1,1,[{'name': 'Offline - Browsing'}],2022-07-26 11:24:17+00:00,2022-07-27 13:08:09+00:00,92632.0,"1 day, 1:43:52",[],"[{'commit_sha': '45e9df06097ecd67953ad63c12f4626faf56307a', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b65cfd16b243597dbccdf4c3feacc0fbaa436a76', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf0fe29deac387a8d734beaa8cd1fba651634ae8', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}]",Aman Raj,57723319,,User,,63,,23,90
1013089817,fix: Offline product knowledge panel issue,"### What
<!-- description of the PR -->
- Don't update the already available `products with KP` when preloading data 


### Fixes bug(s)
<!-- change by appropriate issues. -->
<!-- Please use a linking keyword https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword -->
- Fixes: #2667 

### Part of 
- https://github.com/orgs/openfoodfacts/projects/33
",True,2693,https://api.github.com/repos/openfoodfacts/smooth-app/pulls/2693,https://github.com/openfoodfacts/smooth-app/pull/2693,closed,38,18,2,18,7,25,0,1,[],2022-07-31 18:28:40+00:00,2022-08-11 14:04:29+00:00,934549.0,"10 days, 19:35:49","[{'comment_id': 934040769, 'comment_body': 'Maybe we could use `where` here', 'comment_created': datetime.datetime(2022, 7, 31, 21, 19, 54, tzinfo=datetime.timezone.utc), 'commenter': 'VaiTon', 'type': 'User'}, {'comment_id': 934040912, 'comment_body': 'We can skip this instead of forcing it to be not null. (= ?.)', 'comment_created': datetime.datetime(2022, 7, 31, 21, 21, 49, tzinfo=datetime.timezone.utc), 'commenter': 'VaiTon', 'type': 'User'}, {'comment_id': 934409421, 'comment_body': '```suggestion\r\n\r\n  final DaoProduct daoProduct;\r\n\r\n```', 'comment_created': datetime.datetime(2022, 8, 1, 11, 9, 5, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 934411653, 'comment_body': ""Actually that's not OK: you're also removing an item from the main `fields`.\r\nYou should copy all the fields you need instead, into your own list."", 'comment_created': datetime.datetime(2022, 8, 1, 11, 11, 57, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 934412985, 'comment_body': ""That means you're loading ALL the database.\r\nI know it's only for dev mode, but that's not something I would recommend.\r\nWhat about getting all the barcodes instead of barcodes AND products.\r\nFor the level of granularity we want that's good enough I think."", 'comment_created': datetime.datetime(2022, 8, 1, 11, 13, 45, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 934413805, 'comment_body': 'Magic number: please put that in a `const`, and possibly make it explicit in the button text ""Loading the top 100 products"".', 'comment_created': datetime.datetime(2022, 8, 1, 11, 14, 53, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 934445578, 'comment_body': '@monsieurtanuki \r\nJust to clarify, this is not always supposed to be in dev mode, after further fine-tuning and doing this task in background, we are probably thinking of showing a menu in onboarding screens to let preload data, but not just 100o, rather in numbers of 10k.\r\n\r\nAnd why I loaded the products as well is because there is no way where I can be sure that which barcodes will have knowledge panels or not. I tried thinking of alternate solutions even using `daoproductlist`, would be helpful for me to get an alternate idea to do the same without loading all the products but with just the barcode strings\r\n', 'comment_created': datetime.datetime(2022, 8, 1, 11, 56, 7, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 934445989, 'comment_body': 'My bad, I just wanted to relive the server when  I was testing, forgot to edit that later', 'comment_created': datetime.datetime(2022, 8, 1, 11, 56, 38, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 934451358, 'comment_body': ""I guess a SQL query for getting all the barcode with `Products having knowledge panel` could have probably helped here.\r\nBut since we already don't do much of magic with SQL, can't say what else we can do here "", 'comment_created': datetime.datetime(2022, 8, 1, 12, 3, 33, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 934455066, 'comment_body': 'Had done a `for each` iteration but as a left suggestion I changed it \r\n\r\nMight be something like this would work fine \r\n``` dart  \r\n  final List<String> allProductCodes = await daoProduct.getAllKeys();\r\n    final Map<String, Product> allProducts =\r\n        await daoProduct.getAll(allProductCodes);\r\n    allProducts.forEach((String code, Product product) {\r\n      if (product.knowledgePanels != null) {\r\n        allProductCodes.remove(code);\r\n      }\r\n    });\r\n```', 'comment_created': datetime.datetime(2022, 8, 1, 12, 8, 34, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 934461568, 'comment_body': '`DaoProduct.getAllKeys()`', 'comment_created': datetime.datetime(2022, 8, 1, 12, 16, 31, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 934465448, 'comment_body': ""Okay I get all the keys now I updated the database with top 1000 products\r\nNow, if I do again try to get the top 1000 products, just for sense of updating it,\r\nWhen I do `DaoProduct.getAllKeys()`, I will get the list of barcodes along with the top 1000 products, so now the list of barcodes will have more than 1000, and hence I can't update it. Ryt?\r\nI hope now you can understand the problem..."", 'comment_created': datetime.datetime(2022, 8, 1, 12, 21, 15, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 934475114, 'comment_body': 'No I don\'t understand the problem.\r\n\r\nWhat I suggest is OK if you want:\r\n* to get the top 1000 products, \r\n* to avoid to ""erase"" the KP of existing products\r\n\r\nWhat else do you want? To refresh the top 1000 products? To go beyond the first 1000 products?', 'comment_created': datetime.datetime(2022, 8, 1, 12, 32, 33, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 934490554, 'comment_body': 'Oops, I skipped that one:\r\n\r\n> Just to clarify, this is not always supposed to be in dev mode, after further fine-tuning and doing this task in background, we are probably thinking of showing a menu in onboarding screens to let preload data, but not just 100o, rather in numbers of 10k.\r\n\r\nBut now we\'re on dev mode, so let\'s focus on that. Background task later.\r\nRegarding putting that in onboarding, that\'s a bold move considering the current popularity of the onboarding among the users.\r\nRegarding 10K bulk load, I don\'t see how you can skip the ""download first, then refresh locally if relevant, then the next 10K"" for the whole server data.', 'comment_created': datetime.datetime(2022, 8, 1, 12, 50, 11, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 938530033, 'comment_body': '@monsieurtanuki \r\nAbout your query to not load all products to check if they have knowledge panels or not\r\nWhat I propose is we add another column in the table with name `""isHalfProduct""`, and we give it a default value of false \r\nAnd when pushing a product to db, we can say that it is not fully downloaded by just passing an argument as true.\r\n\r\nWould be best if you could suggest me if I should go ahead with this approach??', 'comment_created': datetime.datetime(2022, 8, 5, 7, 33, 5, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 938961402, 'comment_body': '> What I propose is we add another column in the table with name `""isHalfProduct""`, and we give it a default value of false\r\n\r\nI don\'t think it\'s a good idea to add computed columns to `sqflite`. In general that\'s a pain in the neck to add columns: not just adding them, but then initializing them, and keep the init script running forever, and then you add another column and you wind up with several scripts that run forever.\r\nEspecially in this case: there\'s not such thing as `isHalfProduct`. Unless that means ""null knowledge panels"" on August 5th, 2022. But what next?\r\n\r\nMy suggestion: you _only_ have to code a single method that will solve _all_ your problems. And luckily, that\'s easy to code, and to test as a background method:\r\n* 2 parameters, `DaoProduct` and `Product newProduct`\r\n* you try to get from `DaoProduct` a `Product` with `barcode = newProduct.barcode!`\r\n* if there\'s indeed already one product, you check its `knowledgePanels` field. If it\'s not null, you return `false` (that\'s data that you don\'t want to overwrite)\r\n* else you upsert your `newProduct` and return `true` (that\'s data that either did not exist locally, or that didn\'t include kwowledge panels so your new version is better)\r\n\r\nEt voilà.', 'comment_created': datetime.datetime(2022, 8, 5, 16, 6, 1, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 939558746, 'comment_body': 'Done that, plz re review', 'comment_created': datetime.datetime(2022, 8, 6, 18, 23, 21, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 942421781, 'comment_body': 'ping @monsieurtanuki ', 'comment_created': datetime.datetime(2022, 8, 10, 13, 1, 8, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 942426980, 'comment_body': ""You haven't implemented a fix, have you?"", 'comment_created': datetime.datetime(2022, 8, 10, 13, 6, 6, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 942438273, 'comment_body': '```suggestion\r\n    final Product? localProduct = await daoProduct.get(product.barcode!);\r\n    if (localProduct == null) {\r\n      return true;\r\n    }\r\n    return localProduct.knowledgePanels == null;\r\n```', 'comment_created': datetime.datetime(2022, 8, 10, 13, 16, 25, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 942442157, 'comment_body': '```suggestion\r\n        for (final Product product in searchResult.products!) {\r\n          if (await _isToBeUpdated(product)) {\r\n            await daoProduct.put(product);\r\n          }\r\n        }\r\n```', 'comment_created': datetime.datetime(2022, 8, 10, 13, 19, 51, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 942446651, 'comment_body': '* I would return an `int?` instead of a `String`, for localization\r\n* I would rename the method - here we download and save top products (""get"" is too ambiguous, could be a local field)\r\n* I would add a `///` comment', 'comment_created': datetime.datetime(2022, 8, 10, 13, 23, 57, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 942576541, 'comment_body': 'I agree string is kind of not okay for this, probably a better choice would be a status class here but continuing with int for now', 'comment_created': datetime.datetime(2022, 8, 10, 15, 10, 37, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 942579487, 'comment_body': 'I guess I did the changes that you asked about not loading all the products ', 'comment_created': datetime.datetime(2022, 8, 10, 15, 13, 12, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 942685546, 'comment_body': ""For the record you'll find here the correct way to write `///` comments: https://dart.dev/guides/language/effective-dart/documentation#do-start-doc-comments-with-a-single-sentence-summary"", 'comment_created': datetime.datetime(2022, 8, 10, 16, 51, 2, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}]","[{'commit_sha': '715e0e5fed9ed5d9b1d6036e8ccfcabd13aa7504', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c811d49dec0ebb39da05df45e6ab32ce8b2648f', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02a97e547b8f0ae0e9852e7645503fc21c36d01f', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8371a2f13c052594918aa7a2559df56158405113', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38174ec9d75de509fabe494227995b771194a6a3', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79241d0eea431f19cf89c34028bd1d1bd408386c', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5924dc54ca926b59644a7c0937168fcb60a458b1', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0781a472a03446b1fdb0c8d19301302b8e89b693', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c12643f753fb36f0880074abe6cb97cdfb6e85e8', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8300936d816b232c44b0ffa0ab3ffce2124a3bc9', 'committer_username': 'teolemon', 'committer_name': 'Pierre Slamich', 'committer_email': 'pierre@openfoodfacts.org', 'commit_date': datetime.datetime(2012, 4, 29, 10, 48, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e40f3f29ed71744d6ed068450adbfd1e38aa5e40', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8a6714c2eb71db8e96f6c208e1ccca7e6336dcc', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58565e14f93491d04d82dcec57531074953391c9', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff8eebd1e419ee114827c187079e4e6d550ca0cd', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c4128dcd21ec7f8833c97d5549a613b8fd9fbcf', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52808d48ac3d9aa643bf611fb2c90c83d2738735', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36dfe9875052ed6fa934cd34891a88c1b3355c52', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35e074e7e67715683ffbf66535eeda418312cf8d', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}]",Aman Raj,57723319,,User,,63,,23,90
1044223040,feat: Instant refresh views,"### What
Instantly update views on product edit 
<!-- description of the PR -->
## Steps
-  Go to the edit page of any product
-  Edit the basic details like name, brand name, etc ...
-  go back to the previous screen, then again to the same edit page
-  the changes have not been updated 

#### This pr would fix those problems 
- would immediately change the product state in the edit screen
-  works even when offline 
-  Immediate response compared to what was earlier after the offline pr merge

### Screen Recording


https://user-images.githubusercontent.com/57723319/188330807-ce4ea172-ea3d-4af3-9699-6ccac6c2abb1.mp4


### Part of 
- https://github.com/orgs/openfoodfacts/projects/33",True,2901,https://api.github.com/repos/openfoodfacts/smooth-app/pulls/2901,https://github.com/openfoodfacts/smooth-app/pull/2901,closed,100,98,7,11,11,12,3,1,"[{'name': '✏️ Editing'}, {'name': 'Offline'}, {'name': 'Offline - Contribution'}]",2022-09-01 20:57:37+00:00,2022-09-06 10:46:23+00:00,395326.0,"4 days, 13:48:46","[{'comment_id': 962732660, 'comment_body': 'I\'m not a big fan of that `_mergeProducts` method, to say the least.\r\n\r\nWith those ""simple input"" classes, we have a very powerful method called `getChangedProduct`, which ""transforms"" the input product according to the user changes.\r\n\r\nA clean way of coding this PR would be:\r\n* I land on a ""simple"" page.\r\n* I edit some fields.\r\n* I save the page\r\n  * I want the product to be instantly locally refreshed\r\n  * At the same time I queue a call to the server that changes the impacted fields\r\n* For that I need to call `getChangedProduct` twice\r\n  * First time from the product I fetch from the local database (get-product / change-product / save-product), and that I put in the `UpToDateProductProvider`\r\n  * Second time from an empty product (just the barcode) (create-empty-product-with-barcode, change-product, queue-product-server-update)\r\n* Et voilà!\r\n\r\nIf we agree on that, I suggest that you refactor the other input pages in order to include an `AbstractSimpleInputPageHelper`, in order to have the same process for all pages (basically, we always need a helper method that changes a product).', 'comment_created': datetime.datetime(2022, 9, 5, 10, 6, 22, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 962867915, 'comment_body': ""Hello @monsieurtanuki \r\n\r\nI guess i get you what i wanted but before i commit  the changes i wanted to make sure this what you wanted \r\n\r\n\r\n```dart\r\n    final Product changedProduct = Product(barcode: widget.product.barcode);\r\n    final LocalDatabase localDatabase = context.read<LocalDatabase>();\r\n    final AppLocalizations appLocalizations = AppLocalizations.of(context);\r\n    final UpToDateProductProvider provider =\r\n        context.read<UpToDateProductProvider>();\r\n    final DaoProduct daoProduct = DaoProduct(localDatabase);\r\n    final Product? cachedProduct = await daoProduct.get(\r\n      changedProduct.barcode!,\r\n    );\r\n    bool changed = false;\r\n    bool added = false;\r\n    String pageName = '';\r\n    for (int i = 0; i < widget.helpers.length; i++) {\r\n      if (widget.helpers[i].addItemsFromController(_controllers[i])) {\r\n        added = true;\r\n      }\r\n      if (widget.helpers[i].getChangedProduct(changedProduct)) {\r\n        changed = true;\r\n        if (cachedProduct != null) {\r\n          widget.helpers[i].getChangedProduct(cachedProduct);\r\n        }\r\n      }\r\n      pageName = widget.helpers[i].getTitle(appLocalizations);\r\n    }\r\n```\r\nFull code here at https://pastebin.com/M5vqa12z"", 'comment_created': datetime.datetime(2022, 9, 5, 12, 42, 21, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 962924024, 'comment_body': ""It's more or less what I meant, except that if you write your code directly in a commit it's MUCH easier to me to understand what you wrote: here I have to parse the whole thing instead of only the differences.\r\nSo please commit your code.\r\nAn alternate way would be to exchange in an issue about the best possible solutions BEFORE even creating a PR. Less trouble for the developer and the reviewer."", 'comment_created': datetime.datetime(2022, 9, 5, 13, 44, 49, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 962933510, 'comment_body': 'The code is now pushed, please review again', 'comment_created': datetime.datetime(2022, 9, 5, 13, 55, 19, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 962951561, 'comment_body': 'The comments are not 100% relevant anymore and the code is a bit clumsy here; perhaps a better naming (or comments) of `cachedProduct` and `changedProduct` would help too (what about `fullProduct` and `onlyCurrentChangeProduct`, or `localProduct` and `minimalistProduct`)?\r\n\r\n```dart\r\nfinal Product upToDateProduct = fullProduct ?? onlyCurrentChangeProduct;\r\nawait daoProduct.put(upToDateProduct);\r\nprovider.set(upToDateProduct);\r\n```\r\n```suggestion\r\n\r\n    final Product upToDateProduct = cachedProduct ?? changedProduct;\r\n    await daoProduct.put(upToDateProduct);\r\n    provider.set(upToDateProduct);\r\n```', 'comment_created': datetime.datetime(2022, 9, 5, 14, 15, 23, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 962952826, 'comment_body': 'Of course, the same process as in `SimpleInputPage` must be written there.\r\nBesides, you forgot to populate the `barcode`, which is evil ;)', 'comment_created': datetime.datetime(2022, 9, 5, 14, 16, 53, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 963024178, 'comment_body': ""### Update, \r\nMade the changes to `simpleInputPage `and `editIngredient `page\r\nFor the rest two pages, it was proving hard to implement something similar to this (Getting stuck in that), Besides the current method works. \r\nMaybe if you could have a look again, and see if it's good to go with.\r\n\r\nThanks :)"", 'comment_created': datetime.datetime(2022, 9, 5, 15, 52, 13, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 963047524, 'comment_body': 'Nothing is supposed to fail here: please get rid of the `try`.', 'comment_created': datetime.datetime(2022, 9, 5, 16, 38, 6, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 963048211, 'comment_body': ""Unfortunately the `getMinimalistProduct` method name is a bit confusing but that's not your fault, it pre-existed.\r\nAfter this PR, with a clear mind, we'll be able to add some coherence and refactor."", 'comment_created': datetime.datetime(2022, 9, 5, 16, 39, 38, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 963049042, 'comment_body': ""This I don't like: please create a method that populates the 3 fields, and call it twice. Same behavior as for the other pages."", 'comment_created': datetime.datetime(2022, 9, 5, 16, 41, 35, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 963049449, 'comment_body': 'Again, please create a private method that populate the product fields, and call it twice.', 'comment_created': datetime.datetime(2022, 9, 5, 16, 42, 37, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 963050763, 'comment_body': ""The other `getMinimalistProduct` (in `OcrPackagingHelper`) has a slightly different behavior, and that's very unfortunate. It should be exactly the same. Please have a look at it, and check that whatever you change has no impact on the other classes."", 'comment_created': datetime.datetime(2022, 9, 5, 16, 45, 52, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}]","[{'commit_sha': '1041e9f82890fca4c52297ed63a10002e59084e9', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bd101ae0e6c3b093110ac589203cde98a6165cf', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b525dbfa853eddc7bab2cd62f9ab9a714dd49b49', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e0e1e208f922327542df46090f03a4a4243b100', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82a79535a2d814f1233a4e543774958cda2e4c76', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7113ef3ac8b1b956369c2f700fc0c7ebdd7c9a23', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edcbd5aef34479b330bc1b8b8a449fea47d1487d', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6711ec589d816296c5fe8a20ffa571ae42251e3', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '039902f85c2c2f2876ffac0ed98abe1044aec571', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '888e5cb7474da4a0fd6f025cc995bdb25b15216c', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e73f7a9c66c4382ae3ba82147ec6c2e54b27fcdc', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}]",Aman Raj,57723319,,User,,63,,23,90
1050478335,feat: menu to manage offline data,"### What
<!-- description of the PR -->
- lets the user manage the cached data 
- ability to update the local database products 

### Screenshot
![image](https://user-images.githubusercontent.com/57723319/189152923-19ef96a1-012b-43c8-b309-157808dbe7e0.png)


### Fixes bug(s)
-  #2294 
-  #2446 

### Part of 
- #525 <!-- Add the most granular issue possible -->
",True,2971,https://api.github.com/repos/openfoodfacts/smooth-app/pulls/2971,https://github.com/openfoodfacts/smooth-app/pull/2971,closed,302,0,6,14,3,19,0,1,[],2022-09-08 15:36:40+00:00,2022-09-10 13:27:21+00:00,165041.0,"1 day, 21:50:41","[{'comment_id': 966197451, 'comment_body': 'Could you rename the method name to reflect that this is an estimation please?', 'comment_created': datetime.datetime(2022, 9, 8, 16, 52, 51, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 966197485, 'comment_body': 'Could you add what the int returns please?', 'comment_created': datetime.datetime(2022, 9, 8, 16, 52, 54, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 966197871, 'comment_body': ""It's weird that the comment is not well aligned with the code"", 'comment_created': datetime.datetime(2022, 9, 8, 16, 53, 22, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 966200330, 'comment_body': 'Could you add documentation to explain what the int is', 'comment_created': datetime.datetime(2022, 9, 8, 16, 56, 9, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 966200659, 'comment_body': 'Could you add it to the theme or reuse a Color?', 'comment_created': datetime.datetime(2022, 9, 8, 16, 56, 29, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 966201069, 'comment_body': 'Could you translate the screen also please?', 'comment_created': datetime.datetime(2022, 9, 8, 16, 56, 52, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 966201665, 'comment_body': 'Could you make this a real Widget, instead of a method please?', 'comment_created': datetime.datetime(2022, 9, 8, 16, 57, 33, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 966201815, 'comment_body': 'Could you make this a real Widget, instead of a method, please?', 'comment_created': datetime.datetime(2022, 9, 8, 16, 57, 42, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 967043392, 'comment_body': 'Normal comments should be inline', 'comment_created': datetime.datetime(2022, 9, 9, 12, 58, 22, tzinfo=datetime.timezone.utc), 'commenter': 'M123-dev', 'type': 'User'}, {'comment_id': 967044239, 'comment_body': 'Comments should be inline', 'comment_created': datetime.datetime(2022, 9, 9, 12, 59, 20, tzinfo=datetime.timezone.utc), 'commenter': 'M123-dev', 'type': 'User'}, {'comment_id': 967044510, 'comment_body': 'Comments should be inline', 'comment_created': datetime.datetime(2022, 9, 9, 12, 59, 37, tzinfo=datetime.timezone.utc), 'commenter': 'M123-dev', 'type': 'User'}, {'comment_id': 967046346, 'comment_body': 'We could add a own svg for offline mode, nothing to block though, you can add a todo comment if you want', 'comment_created': datetime.datetime(2022, 9, 9, 13, 1, 47, tzinfo=datetime.timezone.utc), 'commenter': 'M123-dev', 'type': 'User'}, {'comment_id': 967047615, 'comment_body': ""Please show something else while loading\r\n\r\n'Loading...' for example"", 'comment_created': datetime.datetime(2022, 9, 9, 13, 3, 16, tzinfo=datetime.timezone.utc), 'commenter': 'M123-dev', 'type': 'User'}, {'comment_id': 967048212, 'comment_body': 'We at some point should unify the settings but thats okay for now', 'comment_created': datetime.datetime(2022, 9, 9, 13, 3, 53, tzinfo=datetime.timezone.utc), 'commenter': 'M123-dev', 'type': 'User'}, {'comment_id': 967092981, 'comment_body': 'Yeah added a todo there', 'comment_created': datetime.datetime(2022, 9, 9, 13, 48, 5, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 967093142, 'comment_body': 'done that !', 'comment_created': datetime.datetime(2022, 9, 9, 13, 48, 16, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 967093678, 'comment_body': ""Yup and i might need to refactor it differently but I guess it's good for now"", 'comment_created': datetime.datetime(2022, 9, 9, 13, 48, 46, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 967101951, 'comment_body': 'Looked ahead into https://dart.dev/guides/language/effective-dart/documentation , `///`  to be used instead of `//`', 'comment_created': datetime.datetime(2022, 9, 9, 13, 56, 43, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 967102306, 'comment_body': '@M123-dev  ping !\r\n', 'comment_created': datetime.datetime(2022, 9, 9, 13, 57, 1, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}]","[{'commit_sha': 'af1d4c89728cb1a2fc18b884bfab468479d666d9', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd418e7f0aa1b625d08c45ba6982585b269caf9f3', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9454a4ba861e189af9f8ebbb8b3fb0645b8c7d80', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1b1716c84e58a3b036328786a76d2c28ff9e4e5', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05608e2559ad25f8369fb22d0a6feb6a01af66f6', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1a23d62a0631c10058ad21eec5a11a46a9b69b2', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd53a13f5bb7e26035ca7d45848c1888e0a036a3f', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2b725195afdf90fdc901e27f248be5e680e53bb', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb0ca46a768af771c18dbdf44486c5a2c693c1a2', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0554dd89f99c333636a03523af16e202b37c8bd0', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ec31a86845e6fb1e75861f689d8a3378dbe44e1', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd82cd1d768c379f71f1ae02aace2354b6e21bf3', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '576f0244a347087af24389eeb7a83fbe9d9a8864', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c44f8124b49622d5e39c89cf2e90fb0ac521ad9e', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}]",Aman Raj,57723319,,User,,63,,23,90
968439521,fix: Pick image from file too,"### What
<!-- description of the PR -->
- Let user use gallery image for photo uploads

### Screenshot
![image](https://user-images.githubusercontent.com/57723319/173888219-381292fb-75da-4f28-89f0-0ad420ff0b01.png)

### Fixes bug(s)
<!-- change by appropriate issues. -->
<!-- Please use a linking keyword https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword -->
- Fixes: #2284 


",True,2290,https://api.github.com/repos/openfoodfacts/smooth-app/pulls/2290,https://github.com/openfoodfacts/smooth-app/pull/2290,closed,138,51,9,10,4,1,0,1,[],2022-06-15 17:24:52+00:00,2022-06-19 11:40:55+00:00,324963.0,"3 days, 18:16:03","[{'comment_id': 901086415, 'comment_body': 'This can be removed', 'comment_created': datetime.datetime(2022, 6, 19, 10, 56, 18, tzinfo=datetime.timezone.utc), 'commenter': 'M123-dev', 'type': 'User'}]","[{'commit_sha': '8b78bf9daaffc4d2d04fb8cb6570dcc3f4ca9711', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c42ceff3c91b3e544f95bfa92197713f02355d1', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd00b4ac75a2282978cec103067425ddc970b10d', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '301d7ebd01a718de56ca2b9f038655dab22ccf9f', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6b286c273529a47d292724947355fcf5cb9c5c9', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12bf3b9b4ca271bf6184ca1f6b81e77122e06dd8', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d976f0659ca55b36f960bdeec89ea0aa0f01695', 'committer_username': 'M123-dev', 'committer_name': 'Marvin M', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 16, 16, 58, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7feb354052655544dc08a9d9165bc48e9b8bbd01', 'committer_username': 'M123-dev', 'committer_name': 'Marvin M', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 16, 16, 58, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cbe4c49da5bb09cbc3527dde15832e432863598', 'committer_username': 'M123-dev', 'committer_name': 'Marvin M', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 16, 16, 58, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ec65b51f19abffb7963eb4a731e777bfd7283db', 'committer_username': 'M123-dev', 'committer_name': 'Marvin M', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 16, 16, 58, 27, tzinfo=datetime.timezone.utc)}]",Aman Raj,57723319,,User,,63,,23,90
985741046,fix: make textfield more visible in darkmode,"### What
<!-- description of the PR -->
- Changed the background color of the texfield to white with 0.5 opacity, won't have any effect in light mode as the backgrround is already white 

### Screenshot
![image](https://user-images.githubusercontent.com/57723319/177045125-043b631f-0a3f-48f7-ba42-fe78fb5e143b.png)

### Fixes bug(s)
<!-- change by appropriate issues. -->
<!-- Please use a linking keyword https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword -->
- Fixes: #2473 
",True,2487,https://api.github.com/repos/openfoodfacts/smooth-app/pulls/2487,https://github.com/openfoodfacts/smooth-app/pull/2487,closed,4,2,1,1,1,0,0,1,[],2022-07-03 14:50:48+00:00,2022-07-04 04:39:34+00:00,49726.0,13:48:46,[],"[{'commit_sha': '5dd338d31b622b36e46abd2c53dbe8ecf75b85b2', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}]",Aman Raj,57723319,,User,,63,,23,90
1013052899,fix: localized title for email,"### What
<!-- description of the PR -->
- localized the title for email 

### Fixes bug(s)
<!-- change by appropriate issues. -->
<!-- Please use a linking keyword https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword -->
- Fixes: #2680 


",True,2691,https://api.github.com/repos/openfoodfacts/smooth-app/pulls/2691,https://github.com/openfoodfacts/smooth-app/pull/2691,closed,10,1,3,3,1,7,0,1,[],2022-07-31 15:39:52+00:00,2022-08-01 13:20:44+00:00,78052.0,21:40:52,"[{'comment_id': 934007850, 'comment_body': 'Perhaps that would make sense to add here the hard-coded string ` (Help with Open Food Facts)` for email rule.', 'comment_created': datetime.datetime(2022, 7, 31, 16, 9, 44, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 934008553, 'comment_body': 'There was this suggestion left by pierre, so did the changes accordingly ', 'comment_created': datetime.datetime(2022, 7, 31, 16, 15, 21, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 934012046, 'comment_body': 'yes, my idea was that we should keep the original hardcoded to avoid having to set 150 email rules', 'comment_created': datetime.datetime(2022, 7, 31, 16, 45, 22, tzinfo=datetime.timezone.utc), 'commenter': 'teolemon', 'type': 'User'}, {'comment_id': 934017117, 'comment_body': '> yes, my idea was that we should keep the original hardcoded to avoid having to set 150 email rules\r\n\r\nSo is it to leave the string untranslated here? ', 'comment_created': datetime.datetime(2022, 7, 31, 17, 29, 8, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 934019595, 'comment_body': 'Translated string (Untranslated source string)', 'comment_created': datetime.datetime(2022, 7, 31, 17, 53, 24, tzinfo=datetime.timezone.utc), 'commenter': 'teolemon', 'type': 'User'}, {'comment_id': 934020431, 'comment_body': ""I'm getting confused what exactly to do, \nShould i leave the pr as it is now ? \n- [] "", 'comment_created': datetime.datetime(2022, 7, 31, 18, 1, 37, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}, {'comment_id': 934020580, 'comment_body': ""```suggestion\r\n              subject: '${appLocalizations.help_with_openfoodfacts} (Help with Open Food Facts)',\r\n```"", 'comment_created': datetime.datetime(2022, 7, 31, 18, 3, 5, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}]","[{'commit_sha': '934635a9c555f579fd57f5d2fc0e2d74594346b5', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04d1c807f25d9e7f40a83536048349b67526042c', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e7382d0d3ed80d34a2210f1e90c484436fd499b', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}]",Aman Raj,57723319,,User,,63,,23,90
1015096033,fix:  loop loading when scanning #2669,"### What
<!-- description of the PR -->
- Did the research, the bug arrived with this pr #2609 
- IDK why the constructor `ScanProductCardLoader` is always called even when there is no other product in scan range, tried looking into past codes, the code was everywhere the same, so doing this small change fixed the problem
-  The loading indicator is already there, so I guess no need to do extra work here, and this fixed the visual issue now

### Screenshot
https://user-images.githubusercontent.com/57723319/182381141-32ebf7b3-93eb-4630-b5c0-918b7dd9dff7.mp4



### Fixes bug(s)
<!-- change by appropriate issues. -->
<!-- Please use a linking keyword https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword -->
- Fixes: #2669 ",True,2713,https://api.github.com/repos/openfoodfacts/smooth-app/pulls/2713,https://github.com/openfoodfacts/smooth-app/pull/2713,closed,0,4,1,1,2,2,0,1,[],2022-08-02 13:09:28+00:00,2022-08-04 15:55:41+00:00,182773.0,"2 days, 2:46:13","[{'comment_id': 935862748, 'comment_body': 'Just to be sure @AshAman999, is the loading card still visible while the content is loading?', 'comment_created': datetime.datetime(2022, 8, 2, 17, 42, 1, tzinfo=datetime.timezone.utc), 'commenter': 'g123k', 'type': 'User'}, {'comment_id': 935864772, 'comment_body': ""It's still showing up, Is this what you meant to ask @g123k ??\r\n\r\nhttps://vimeo.com/736043687"", 'comment_created': datetime.datetime(2022, 8, 2, 17, 44, 33, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}]","[{'commit_sha': 'ba7b7cb3ed0b9a571cfdb073a4cc1a009a97a5aa', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}]",Aman Raj,57723319,,User,,63,,23,90
1017005417,fix: added loading indicator while sign-in in process,"### What
<!-- description of the PR -->
- Show loading indicator when the query is running

### Screenshot
<!-- Insert a screenshot to provide a visual record of your changes, if visible -->
![image](https://user-images.githubusercontent.com/57723319/182757283-c0655213-a5ad-475b-aec6-27b9f1a9c47d.png)


### Fixes bug(s)
<!-- change by appropriate issues. -->
<!-- Please use a linking keyword https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword -->
- Fixes: #2726 

",True,2727,https://api.github.com/repos/openfoodfacts/smooth-app/pulls/2727,https://github.com/openfoodfacts/smooth-app/pull/2727,closed,50,43,2,3,1,0,0,1,[],2022-08-04 03:33:18+00:00,2022-08-04 08:13:31+00:00,16813.0,4:40:13,[],"[{'commit_sha': '20c2130ef0784b3bc781ed268958e5c6bf88ffed', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '735c70d9ebd1fb5b6405d771616e8900074df91c', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb79e23494266097cb52357d7ba88956e642183b', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}]",Aman Raj,57723319,,User,,63,,23,90
1033307787,feat: use adaptive progress Indicator,"### What
<!-- description of the PR -->
- Used adaptive progress Indicators 

### Screenshot
<!-- Insert a screenshot to provide a visual record of your changes, if visible -->

### Fixes bug(s)
- Fixes: #2830 

",True,2831,https://api.github.com/repos/openfoodfacts/smooth-app/pulls/2831,https://github.com/openfoodfacts/smooth-app/pull/2831,closed,16,16,15,1,3,0,1,1,[{'name': '🎨 UI / UX'}],2022-08-22 20:25:30+00:00,2022-08-23 09:18:59+00:00,46409.0,12:53:29,[],"[{'commit_sha': '39112dd03ac46e42d7cb8e122400608b7f24e5ac', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}]",Aman Raj,57723319,,User,,63,,23,90
1038913100,fix: Placeholder image in case of image not loading,"### What
<!-- description of the PR -->
- Show placeholder image in case of no internet or error while loading image 

### Screenshot
![image](https://user-images.githubusercontent.com/57723319/187083811-421e59f1-fa56-4068-8105-3b0a45507ee3.png)


### Fixes bug(s)
<!-- change by appropriate issues. -->
<!-- Please use a linking keyword https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword -->
- Fixes: #2851 

### Part of 
- https://github.com/openfoodfacts/smooth-app/issues/863",True,2857,https://api.github.com/repos/openfoodfacts/smooth-app/pulls/2857,https://github.com/openfoodfacts/smooth-app/pull/2857,closed,8,0,1,2,6,2,0,1,[],2022-08-28 16:13:51+00:00,2022-08-29 13:07:40+00:00,75229.0,20:53:49,"[{'comment_id': 956757077, 'comment_body': ""Looks strange to see a `SmoothProductImageContainer` inside another `SmoothProductImageContainer`. Wouldn't it be enough to put just `Center(SvgPicture.asset(...)` in the `errorBuilder`?"", 'comment_created': datetime.datetime(2022, 8, 28, 17, 10, 52, tzinfo=datetime.timezone.utc), 'commenter': 'monsieurtanuki', 'type': 'User'}, {'comment_id': 956758106, 'comment_body': 'Yeah that works , thanks for the suggestion', 'comment_created': datetime.datetime(2022, 8, 28, 17, 20, 44, tzinfo=datetime.timezone.utc), 'commenter': 'AshAman999', 'type': 'User'}]","[{'commit_sha': '86b0e3ae61c2345d5a01c1cf830b5d0e7b1c8796', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3909138272ad038762bb35148d8c7888ad93c2c', 'committer_username': 'AshAman999', 'committer_name': 'Aman Raj', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 13, 16, 55, 41, tzinfo=datetime.timezone.utc)}]",Aman Raj,57723319,,User,,63,,23,90

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
258191576,smooth-app,openfoodfacts/smooth-app,Dart,267,774,20,87,4127,515,47,12,"[{'id': 1731667375, 'number': 5074, 'closed': datetime.datetime(2024, 2, 19, 16, 49, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 18, 13, 7, 10, tzinfo=datetime.timezone.utc), 'time_taken': 99748.0, 'time_delta': '1 day, 3:42:28', 'additions': 13, 'deletions': 0, 'state': 'closed'}, {'id': 1690261251, 'number': 5004, 'closed': datetime.datetime(2024, 1, 25, 16, 2, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 22, 17, 24, 2, tzinfo=datetime.timezone.utc), 'time_taken': 254329.0, 'time_delta': '2 days, 22:38:49', 'additions': 14, 'deletions': 3, 'state': 'closed'}, {'id': 1372445450, 'number': 4055, 'closed': datetime.datetime(2023, 6, 1, 8, 23, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 31, 15, 26, 33, tzinfo=datetime.timezone.utc), 'time_taken': 61021.0, 'time_delta': '16:57:01', 'additions': 94, 'deletions': 19, 'state': 'closed'}, {'id': 1260709792, 'number': 3755, 'closed': datetime.datetime(2023, 3, 16, 17, 36, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 2, 16, 11, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1214736.0, 'time_delta': '14 days, 1:25:36', 'additions': 203, 'deletions': 33, 'state': 'closed'}, {'id': 1188188685, 'number': 3540, 'closed': datetime.datetime(2023, 1, 6, 13, 57, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 6, 13, 41, 1, tzinfo=datetime.timezone.utc), 'time_taken': 996.0, 'time_delta': '0:16:36', 'additions': 24, 'deletions': 40, 'state': 'closed'}, {'id': 1182797572, 'number': 3499, 'closed': datetime.datetime(2023, 1, 2, 19, 5, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 2, 17, 57, 42, tzinfo=datetime.timezone.utc), 'time_taken': 4056.0, 'time_delta': '1:07:36', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 1180329234, 'number': 3489, 'closed': datetime.datetime(2022, 12, 31, 10, 55, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 29, 15, 11, 44, tzinfo=datetime.timezone.utc), 'time_taken': 157435.0, 'time_delta': '1 day, 19:43:55', 'additions': 13, 'deletions': 7, 'state': 'closed'}, {'id': 1136507971, 'number': 3356, 'closed': datetime.datetime(2022, 11, 27, 15, 30, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 26, 17, 2, 33, tzinfo=datetime.timezone.utc), 'time_taken': 80899.0, 'time_delta': '22:28:19', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 1111041361, 'number': 3265, 'closed': datetime.datetime(2022, 11, 5, 12, 33, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 4, 16, 13, 5, tzinfo=datetime.timezone.utc), 'time_taken': 73224.0, 'time_delta': '20:20:24', 'additions': 47, 'deletions': 41, 'state': 'closed'}, {'id': 1103903725, 'number': 3230, 'closed': datetime.datetime(2022, 10, 29, 13, 52, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 29, 9, 43, 8, tzinfo=datetime.timezone.utc), 'time_taken': 14960.0, 'time_delta': '4:09:20', 'additions': 2, 'deletions': 3, 'state': 'closed'}, {'id': 1095969939, 'number': 3190, 'closed': datetime.datetime(2022, 10, 25, 15, 59, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 22, 4, 19, 31, tzinfo=datetime.timezone.utc), 'time_taken': 301205.0, 'time_delta': '3 days, 11:40:05', 'additions': 82, 'deletions': 0, 'state': 'closed'}, {'id': 1094223745, 'number': 3182, 'closed': datetime.datetime(2022, 10, 21, 5, 45, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 20, 18, 46, 40, tzinfo=datetime.timezone.utc), 'time_taken': 39514.0, 'time_delta': '10:58:34', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1081005206, 'number': 3106, 'closed': datetime.datetime(2022, 10, 8, 15, 46, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 8, 12, 34, 17, tzinfo=datetime.timezone.utc), 'time_taken': 11532.0, 'time_delta': '3:12:12', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 1074728342, 'number': 3085, 'closed': datetime.datetime(2022, 10, 4, 7, 15, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 3, 14, 0, 10, tzinfo=datetime.timezone.utc), 'time_taken': 62148.0, 'time_delta': '17:15:48', 'additions': 20, 'deletions': 19, 'state': 'closed'}, {'id': 1073642732, 'number': 3083, 'closed': datetime.datetime(2022, 10, 2, 11, 25, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 1, 19, 0, 39, tzinfo=datetime.timezone.utc), 'time_taken': 59084.0, 'time_delta': '16:24:44', 'additions': 10, 'deletions': 1, 'state': 'closed'}, {'id': 1070271362, 'number': 3077, 'closed': datetime.datetime(2022, 10, 1, 12, 5, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 28, 16, 21, 31, tzinfo=datetime.timezone.utc), 'time_taken': 243811.0, 'time_delta': '2 days, 19:43:31', 'additions': 27, 'deletions': 0, 'state': 'closed'}, {'id': 1061858689, 'number': 3051, 'closed': datetime.datetime(2022, 9, 21, 18, 49, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 20, 17, 8, 11, tzinfo=datetime.timezone.utc), 'time_taken': 92460.0, 'time_delta': '1 day, 1:41:00', 'additions': 77, 'deletions': 55, 'state': 'closed'}, {'id': 1060527375, 'number': 3040, 'closed': datetime.datetime(2022, 9, 19, 18, 20, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 19, 16, 18, 31, tzinfo=datetime.timezone.utc), 'time_taken': 7327.0, 'time_delta': '2:02:07', 'additions': 140, 'deletions': 118, 'state': 'closed'}, {'id': 1058273146, 'number': 3023, 'closed': datetime.datetime(2022, 9, 16, 9, 55, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 16, 7, 19, 23, tzinfo=datetime.timezone.utc), 'time_taken': 9368.0, 'time_delta': '2:36:08', 'additions': 138, 'deletions': 97, 'state': 'closed'}, {'id': 1050478335, 'number': 2971, 'closed': datetime.datetime(2022, 9, 10, 13, 27, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 8, 15, 36, 40, tzinfo=datetime.timezone.utc), 'time_taken': 165041.0, 'time_delta': '1 day, 21:50:41', 'additions': 302, 'deletions': 0, 'state': 'closed'}, {'id': 1047650452, 'number': 2950, 'closed': datetime.datetime(2022, 9, 6, 15, 28, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 6, 14, 30, 8, tzinfo=datetime.timezone.utc), 'time_taken': 3502.0, 'time_delta': '0:58:22', 'additions': 19, 'deletions': 11, 'state': 'closed'}, {'id': 1044223040, 'number': 2901, 'closed': datetime.datetime(2022, 9, 6, 10, 46, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 1, 20, 57, 37, tzinfo=datetime.timezone.utc), 'time_taken': 395326.0, 'time_delta': '4 days, 13:48:46', 'additions': 100, 'deletions': 98, 'state': 'closed'}, {'id': 1038913100, 'number': 2857, 'closed': datetime.datetime(2022, 8, 29, 13, 7, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 28, 16, 13, 51, tzinfo=datetime.timezone.utc), 'time_taken': 75229.0, 'time_delta': '20:53:49', 'additions': 8, 'deletions': 0, 'state': 'closed'}, {'id': 1033307787, 'number': 2831, 'closed': datetime.datetime(2022, 8, 23, 9, 18, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 22, 20, 25, 30, tzinfo=datetime.timezone.utc), 'time_taken': 46409.0, 'time_delta': '12:53:29', 'additions': 16, 'deletions': 16, 'state': 'closed'}, {'id': 1030942278, 'number': 2808, 'closed': datetime.datetime(2022, 8, 20, 12, 6, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 19, 9, 27, 29, tzinfo=datetime.timezone.utc), 'time_taken': 95917.0, 'time_delta': '1 day, 2:38:37', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1017005417, 'number': 2727, 'closed': datetime.datetime(2022, 8, 4, 8, 13, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 4, 3, 33, 18, tzinfo=datetime.timezone.utc), 'time_taken': 16813.0, 'time_delta': '4:40:13', 'additions': 50, 'deletions': 43, 'state': 'closed'}, {'id': 1015096033, 'number': 2713, 'closed': datetime.datetime(2022, 8, 4, 15, 55, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 2, 13, 9, 28, tzinfo=datetime.timezone.utc), 'time_taken': 182773.0, 'time_delta': '2 days, 2:46:13', 'additions': 0, 'deletions': 4, 'state': 'closed'}, {'id': 1013089817, 'number': 2693, 'closed': datetime.datetime(2022, 8, 11, 14, 4, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 31, 18, 28, 40, tzinfo=datetime.timezone.utc), 'time_taken': 934549.0, 'time_delta': '10 days, 19:35:49', 'additions': 38, 'deletions': 18, 'state': 'closed'}, {'id': 1013052899, 'number': 2691, 'closed': datetime.datetime(2022, 8, 1, 13, 20, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 31, 15, 39, 52, tzinfo=datetime.timezone.utc), 'time_taken': 78052.0, 'time_delta': '21:40:52', 'additions': 10, 'deletions': 1, 'state': 'closed'}, {'id': 1008397503, 'number': 2661, 'closed': datetime.datetime(2022, 7, 27, 13, 8, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 26, 11, 24, 17, tzinfo=datetime.timezone.utc), 'time_taken': 92632.0, 'time_delta': '1 day, 1:43:52', 'additions': 67, 'deletions': 1, 'state': 'closed'}, {'id': 1001360141, 'number': 2632, 'closed': datetime.datetime(2022, 7, 21, 13, 45, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 19, 23, 1, 8, tzinfo=datetime.timezone.utc), 'time_taken': 139465.0, 'time_delta': '1 day, 14:44:25', 'additions': 16, 'deletions': 4, 'state': 'closed'}, {'id': 991970541, 'number': 2560, 'closed': datetime.datetime(2022, 7, 9, 17, 19, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 8, 19, 19, 44, tzinfo=datetime.timezone.utc), 'time_taken': 79180.0, 'time_delta': '21:59:40', 'additions': 14, 'deletions': 3, 'state': 'closed'}, {'id': 989255360, 'number': 2524, 'closed': datetime.datetime(2022, 7, 7, 14, 55, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 6, 20, 6, 52, tzinfo=datetime.timezone.utc), 'time_taken': 67732.0, 'time_delta': '18:48:52', 'additions': 20, 'deletions': 5, 'state': 'closed'}, {'id': 985741046, 'number': 2487, 'closed': datetime.datetime(2022, 7, 4, 4, 39, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 3, 14, 50, 48, tzinfo=datetime.timezone.utc), 'time_taken': 49726.0, 'time_delta': '13:48:46', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 983042725, 'number': 2433, 'closed': datetime.datetime(2022, 9, 1, 10, 15, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 29, 19, 47, 5, tzinfo=datetime.timezone.utc), 'time_taken': 5495284.0, 'time_delta': '63 days, 14:28:04', 'additions': 901, 'deletions': 243, 'state': 'closed'}, {'id': 971514647, 'number': 2322, 'closed': datetime.datetime(2022, 9, 8, 14, 44, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 19, 15, 50, 15, tzinfo=datetime.timezone.utc), 'time_taken': 6994468.0, 'time_delta': '80 days, 22:54:28', 'additions': 412, 'deletions': 9, 'state': 'closed'}, {'id': 968439521, 'number': 2290, 'closed': datetime.datetime(2022, 6, 19, 11, 40, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 15, 17, 24, 52, tzinfo=datetime.timezone.utc), 'time_taken': 324963.0, 'time_delta': '3 days, 18:16:03', 'additions': 138, 'deletions': 51, 'state': 'closed'}, {'id': 965723764, 'number': 2263, 'closed': datetime.datetime(2022, 6, 13, 14, 34, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 13, 13, 19, 29, tzinfo=datetime.timezone.utc), 'time_taken': 4505.0, 'time_delta': '1:15:05', 'additions': 24, 'deletions': 10, 'state': 'closed'}, {'id': 960675209, 'number': 2208, 'closed': datetime.datetime(2022, 6, 7, 19, 29, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 7, 17, 12, 41, tzinfo=datetime.timezone.utc), 'time_taken': 8221.0, 'time_delta': '2:17:01', 'additions': 141, 'deletions': 52, 'state': 'closed'}, {'id': 958333650, 'number': 2163, 'closed': datetime.datetime(2022, 6, 5, 11, 22, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 5, 2, 48, 47, tzinfo=datetime.timezone.utc), 'time_taken': 30840.0, 'time_delta': '8:34:00', 'additions': 15, 'deletions': 2, 'state': 'closed'}, {'id': 958333068, 'number': 2162, 'closed': datetime.datetime(2022, 6, 5, 11, 21, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 5, 2, 43, 13, tzinfo=datetime.timezone.utc), 'time_taken': 31099.0, 'time_delta': '8:38:19', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 952408696, 'number': 2106, 'closed': datetime.datetime(2022, 6, 1, 8, 42, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 31, 20, 32, 6, tzinfo=datetime.timezone.utc), 'time_taken': 43831.0, 'time_delta': '12:10:31', 'additions': 29, 'deletions': 18, 'state': 'closed'}, {'id': 952219852, 'number': 2095, 'closed': datetime.datetime(2022, 6, 1, 13, 33, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 31, 17, 7, 45, tzinfo=datetime.timezone.utc), 'time_taken': 73531.0, 'time_delta': '20:25:31', 'additions': 141, 'deletions': 82, 'state': 'closed'}, {'id': 950092750, 'number': 2052, 'closed': datetime.datetime(2022, 5, 28, 16, 22, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 28, 16, 17, 13, tzinfo=datetime.timezone.utc), 'time_taken': 343.0, 'time_delta': '0:05:43', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 949970366, 'number': 2044, 'closed': datetime.datetime(2022, 5, 28, 10, 44, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 28, 7, 54, 56, tzinfo=datetime.timezone.utc), 'time_taken': 10146.0, 'time_delta': '2:49:06', 'additions': 6, 'deletions': 9, 'state': 'closed'}, {'id': 949953716, 'number': 2043, 'closed': datetime.datetime(2022, 5, 28, 13, 13, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 28, 7, 10, 50, tzinfo=datetime.timezone.utc), 'time_taken': 21734.0, 'time_delta': '6:02:14', 'additions': 23, 'deletions': 16, 'state': 'closed'}, {'id': 946775772, 'number': 1980, 'closed': datetime.datetime(2022, 5, 25, 12, 51, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 25, 9, 48, 40, tzinfo=datetime.timezone.utc), 'time_taken': 10983.0, 'time_delta': '3:03:03', 'additions': 1, 'deletions': 36, 'state': 'closed'}, {'id': 931879325, 'number': 1801, 'closed': datetime.datetime(2022, 5, 10, 17, 43, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 10, 2, 38, 10, tzinfo=datetime.timezone.utc), 'time_taken': 54291.0, 'time_delta': '15:04:51', 'additions': 12, 'deletions': 4, 'state': 'closed'}, {'id': 928994258, 'number': 1758, 'closed': datetime.datetime(2022, 5, 5, 18, 30, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 5, 18, 24, 5, tzinfo=datetime.timezone.utc), 'time_taken': 361.0, 'time_delta': '0:06:01', 'additions': 8, 'deletions': 7, 'state': 'closed'}, {'id': 928323763, 'number': 1746, 'closed': datetime.datetime(2022, 5, 5, 16, 14, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 5, 6, 15, 5, tzinfo=datetime.timezone.utc), 'time_taken': 35939.0, 'time_delta': '9:58:59', 'additions': 33, 'deletions': 3, 'state': 'closed'}, {'id': 928301545, 'number': 1745, 'closed': datetime.datetime(2022, 5, 5, 5, 37, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 5, 5, 34, 30, tzinfo=datetime.timezone.utc), 'time_taken': 209.0, 'time_delta': '0:03:29', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 924903500, 'number': 1728, 'closed': datetime.datetime(2022, 5, 2, 6, 6, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 1, 11, 51, 43, tzinfo=datetime.timezone.utc), 'time_taken': 65686.0, 'time_delta': '18:14:46', 'additions': 136, 'deletions': 119, 'state': 'closed'}, {'id': 923459425, 'number': 1695, 'closed': datetime.datetime(2022, 4, 29, 16, 4, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 29, 10, 33, 23, tzinfo=datetime.timezone.utc), 'time_taken': 19872.0, 'time_delta': '5:31:12', 'additions': 35, 'deletions': 18, 'state': 'closed'}, {'id': 920046852, 'number': 1664, 'closed': datetime.datetime(2022, 4, 27, 5, 39, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 27, 1, 39, 33, tzinfo=datetime.timezone.utc), 'time_taken': 14374.0, 'time_delta': '3:59:34', 'additions': 63, 'deletions': 59, 'state': 'closed'}, {'id': 918418059, 'number': 1648, 'closed': datetime.datetime(2022, 4, 26, 8, 37, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 25, 17, 12, 22, tzinfo=datetime.timezone.utc), 'time_taken': 55516.0, 'time_delta': '15:25:16', 'additions': 50, 'deletions': 21, 'state': 'closed'}, {'id': 917063140, 'number': 1627, 'closed': datetime.datetime(2022, 4, 24, 16, 58, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 23, 2, 14, 5, tzinfo=datetime.timezone.utc), 'time_taken': 139476.0, 'time_delta': '1 day, 14:44:36', 'additions': 58, 'deletions': 25, 'state': 'closed'}, {'id': 916419974, 'number': 1611, 'closed': datetime.datetime(2022, 4, 22, 17, 20, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 22, 12, 55, 22, tzinfo=datetime.timezone.utc), 'time_taken': 15905.0, 'time_delta': '4:25:05', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 898375653, 'number': 1488, 'closed': datetime.datetime(2022, 4, 19, 19, 48, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 3, 20, 44, 21, tzinfo=datetime.timezone.utc), 'time_taken': 1379075.0, 'time_delta': '15 days, 23:04:35', 'additions': 13, 'deletions': 10, 'state': 'closed'}, {'id': 898298771, 'number': 1476, 'closed': datetime.datetime(2022, 4, 3, 16, 39, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 3, 14, 10, 26, tzinfo=datetime.timezone.utc), 'time_taken': 8965.0, 'time_delta': '2:29:25', 'additions': 14, 'deletions': 1, 'state': 'closed'}, {'id': 897589405, 'number': 1442, 'closed': datetime.datetime(2022, 4, 2, 9, 57, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 1, 16, 14, 15, tzinfo=datetime.timezone.utc), 'time_taken': 63813.0, 'time_delta': '17:43:33', 'additions': 20, 'deletions': 6, 'state': 'closed'}, {'id': 895463545, 'number': 1422, 'closed': datetime.datetime(2022, 4, 1, 16, 15, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 31, 6, 56, 8, tzinfo=datetime.timezone.utc), 'time_taken': 119954.0, 'time_delta': '1 day, 9:19:14', 'additions': 43, 'deletions': 105, 'state': 'closed'}, {'id': 893294907, 'number': 1402, 'closed': datetime.datetime(2022, 3, 30, 6, 18, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 29, 16, 48, 7, tzinfo=datetime.timezone.utc), 'time_taken': 48616.0, 'time_delta': '13:30:16', 'additions': 6, 'deletions': 11, 'state': 'closed'}, {'id': 891934809, 'number': 1368, 'closed': datetime.datetime(2022, 3, 28, 16, 40, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 28, 15, 9, 31, tzinfo=datetime.timezone.utc), 'time_taken': 5460.0, 'time_delta': '1:31:00', 'additions': 163, 'deletions': 158, 'state': 'closed'}, {'id': 891397213, 'number': 1357, 'closed': datetime.datetime(2022, 3, 28, 14, 42, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 28, 6, 32, 48, tzinfo=datetime.timezone.utc), 'time_taken': 29385.0, 'time_delta': '8:09:45', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 891312222, 'number': 1355, 'closed': datetime.datetime(2022, 3, 28, 15, 2, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 28, 4, 28, 38, tzinfo=datetime.timezone.utc), 'time_taken': 38055.0, 'time_delta': '10:34:15', 'additions': 164, 'deletions': 159, 'state': 'closed'}, {'id': 890194953, 'number': 1336, 'closed': datetime.datetime(2022, 3, 26, 13, 31, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 26, 8, 46, 44, tzinfo=datetime.timezone.utc), 'time_taken': 17073.0, 'time_delta': '4:44:33', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 884181753, 'number': 1276, 'closed': datetime.datetime(2022, 3, 30, 16, 52, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 20, 14, 14, 43, tzinfo=datetime.timezone.utc), 'time_taken': 873445.0, 'time_delta': '10 days, 2:37:25', 'additions': 71, 'deletions': 69, 'state': 'closed'}, {'id': 884011111, 'number': 1269, 'closed': datetime.datetime(2022, 3, 20, 14, 11, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 19, 17, 1, 49, tzinfo=datetime.timezone.utc), 'time_taken': 76174.0, 'time_delta': '21:09:34', 'additions': 38, 'deletions': 19, 'state': 'closed'}]"
