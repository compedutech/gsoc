pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
416509587,Milestone 1.1: Creation of .lighthouserc.js file and scripts/lighthouse_checks.py file,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR creates a lighthouse check python script that can be done locally and a lighthouse configuration file.
2. This PR does the following: [Creates a script to run lighthouse checks on 8 Oppia webpages]

To run the checks locally type: `python -m scripts.lighthouse_checks` in the terminal

Sample Output: https://gist.github.com/jimbyo/5193fd74fcbf6b32cbbd3040385e3b41

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.
",True,9295,https://api.github.com/repos/oppia/oppia/pulls/9295,https://github.com/oppia/oppia/pull/9295,closed,1613,24,5,29,20,87,0,1,[],2020-05-12 06:14:11+00:00,2020-05-26 08:30:15+00:00,1217764.0,"14 days, 2:16:04","[{'comment_id': 424033278, 'comment_body': 'Remove extra whitespace?', 'comment_created': datetime.datetime(2020, 5, 12, 21, 5, 38, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 424033624, 'comment_body': 'Remove extra whitespace?', 'comment_created': datetime.datetime(2020, 5, 12, 21, 6, 16, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 424353050, 'comment_body': 'Remove this newline.', 'comment_created': datetime.datetime(2020, 5, 13, 11, 4, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 424353578, 'comment_body': 'Could this be a `.ts` file?', 'comment_created': datetime.datetime(2020, 5, 13, 11, 5, 4, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 424353872, 'comment_body': 'Is this needed? We run the server in the Python anyway?', 'comment_created': datetime.datetime(2020, 5, 13, 11, 5, 45, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 424355086, 'comment_body': 'Add empty line at the end of the file.', 'comment_created': datetime.datetime(2020, 5, 13, 11, 8, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 424355189, 'comment_body': 'Could you remove these?', 'comment_created': datetime.datetime(2020, 5, 13, 11, 8, 33, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 424356135, 'comment_body': 'Remove these commented rules from this file.', 'comment_created': datetime.datetime(2020, 5, 13, 11, 10, 42, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 424356475, 'comment_body': 'Why are these two failing?', 'comment_created': datetime.datetime(2020, 5, 13, 11, 11, 20, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 424357069, 'comment_body': 'Add `^` before the version number so that it gets updated automatically.', 'comment_created': datetime.datetime(2020, 5, 13, 11, 12, 35, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 424357403, 'comment_body': 'This belongs under line 28', 'comment_created': datetime.datetime(2020, 5, 13, 11, 13, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 424357595, 'comment_body': '```suggestion\r\nfrom script import common\r\nfrom script import install_third_party_libs\r\nfrom script import setup\r\nfrom script import setup_gae\r\n```', 'comment_created': datetime.datetime(2020, 5, 13, 11, 13, 42, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 424358974, 'comment_body': 'Do not do it this way, use the binary file of `lhci` directly as in [run_frontend_tests.py](https://github.com/oppia/oppia/blob/develop/scripts/run_frontend_tests.py#L88) with `karma`.', 'comment_created': datetime.datetime(2020, 5, 13, 11, 16, 44, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 424359324, 'comment_body': 'Why print this by line?', 'comment_created': datetime.datetime(2020, 5, 13, 11, 17, 26, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 424359813, 'comment_body': 'Rename this file to `run_lighthouse_tests.py`.', 'comment_created': datetime.datetime(2020, 5, 13, 11, 18, 23, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 424360274, 'comment_body': 'Delete the files by Python methods from the `os` stdlib and not by command.', 'comment_created': datetime.datetime(2020, 5, 13, 11, 19, 29, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 424557120, 'comment_body': ""I'm not sure if there is a binary file for @lhci, at least I'm having some trouble finding it. I did find an \u2068autorun.js in node_modules\u2069/@lhci\u2069/\u2068cli\u2069/src\u2069/\u2068autorun\u2069 , however. I'm curious why we shouldn't use the `lhci autorun `command?"", 'comment_created': datetime.datetime(2020, 5, 13, 16, 6, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 424561360, 'comment_body': 'The lighthouse output would only be shown after it completed the tests. This is bad because the tests take some time and people might not know if there was an error or the tests crashed until the very end of the tests. \r\n\r\nI used this fix\r\nhttps://stackoverflow.com/questions/2804543/read-subprocess-stdout-line-by-line', 'comment_created': datetime.datetime(2020, 5, 13, 16, 12, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 424563635, 'comment_body': 'Yes, I can, I left them there in case we want to add server or wizard options in the future. Should I remove them?', 'comment_created': datetime.datetime(2020, 5, 13, 16, 15, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 424564793, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 13, 16, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 424565811, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 13, 16, 19, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 424567903, 'comment_body': 'I chose to comment ""failing"" on tests that aren\'t at minscore: 1, and we remove the comments once they are no longer failing? Maybe this is unnecessary, ', 'comment_created': datetime.datetime(2020, 5, 13, 16, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 424569060, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 13, 16, 24, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 424570265, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 13, 16, 25, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 424572954, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 13, 16, 29, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 424584102, 'comment_body': '`lhci autorun` might not be available everywhere, and in most of the codebase we access the binary/js files directly. There should be either binary file or you should be able to run the `.js` file using the node binary file (as in [html_linter.py](https://github.com/oppia/oppia/blob/develop/scripts/linters/html_linter.py#L356))', 'comment_created': datetime.datetime(2020, 5, 13, 16, 47, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 424614456, 'comment_body': ""Hmm in the documentation, it shows that lhci autorun command is available once you install lhci, but I guess it makes sense to follow what the rest of the codebase does. \r\n\r\nhttps://github.com/GoogleChrome/lighthouse-ci/blob/master/docs/cli.md\r\n\r\nDo you know what the `'--rc = htmllintc' `arg is for in html_linter.py\r\n\r\n```\r\n        node_path = os.path.join(common.NODE_PATH, 'bin', 'node')\r\n        htmllint_path = os.path.join(\r\n            'node_modules', 'htmllint-cli', 'bin', 'cli.js')\r\n\r\n        error_summary = []\r\n        total_error_count = 0\r\n        summary_messages = []\r\n        stdout = sys.stdout\r\n        htmllint_cmd_args = [node_path, htmllint_path, '--rc=.htmllintrc']\r\n```\r\n"", 'comment_created': datetime.datetime(2020, 5, 13, 17, 36, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 424676495, 'comment_body': ""You don't need to care about that, just the part how node and htmllint paths work here."", 'comment_created': datetime.datetime(2020, 5, 13, 19, 22, 34, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 424683185, 'comment_body': '> Hmm in the documentation, it shows that lhci autorun command is available once you install lhci\r\n\r\nI think it will be available only if you run it from the npm context or if you install it globally.\r\nThere should be a binary for it at `node_modules/.bin`', 'comment_created': datetime.datetime(2020, 5, 13, 19, 35, 3, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 424836761, 'comment_body': 'Hmm. I still see the commented lines?', 'comment_created': datetime.datetime(2020, 5, 14, 2, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 424839440, 'comment_body': ""Is any of the server related code necessary here? It doesn't seem like they're getting used."", 'comment_created': datetime.datetime(2020, 5, 14, 2, 42, 59, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 424840493, 'comment_body': 'Can you add a comment detailing why removing the reports is necessary?', 'comment_created': datetime.datetime(2020, 5, 14, 2, 47, 25, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 424841033, 'comment_body': 'Is this line necessary, or can we assume all third party libraries would be installed before running this script?', 'comment_created': datetime.datetime(2020, 5, 14, 2, 49, 33, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 425662303, 'comment_body': 'No, but we can change it to JSON if we want', 'comment_created': datetime.datetime(2020, 5, 15, 8, 57, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 425662979, 'comment_body': 'Done\r\n\r\nEdit actually the lint checks force me to move my import order. is it okay?\r\n<img width=""898"" alt=""Screen Shot 2020-05-15 at 2 22 19 AM"" src=""https://user-images.githubusercontent.com/35385366/82037239-b66a6000-9656-11ea-83df-6ae4f82fc19a.png"">\r\n', 'comment_created': datetime.datetime(2020, 5, 15, 8, 58, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 425663053, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 15, 8, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 425663285, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 15, 8, 58, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 425668055, 'comment_body': 'I think it is necessary just to ensure they have it\r\n @jameesjohn Hey you could you take a look at this?', 'comment_created': datetime.datetime(2020, 5, 15, 9, 7, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 425669249, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 15, 9, 9, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 425669289, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 15, 9, 9, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 425672811, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 15, 9, 15, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 425673390, 'comment_body': ""No, it isn't necessary I removed it.\r\nDone!"", 'comment_created': datetime.datetime(2020, 5, 15, 9, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 425674436, 'comment_body': 'I did it because I was facing a similar issue to https://github.com/oppia/oppia/pull/9295#discussion_r424561360 \r\nand decided to move it to the config. I think I can move it back by using the fix I did\r\nin `run_lighthouse_checks()`', 'comment_created': datetime.datetime(2020, 5, 15, 9, 18, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 425696640, 'comment_body': 'It could be removed actually. \r\nI added it initially so that we could use it in the GitHub action, but we could run the third party script independently of this.', 'comment_created': datetime.datetime(2020, 5, 15, 9, 59, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 425757679, 'comment_body': ""Let's do that then."", 'comment_created': datetime.datetime(2020, 5, 15, 12, 9, 29, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 425758325, 'comment_body': 'So can you remove it then?', 'comment_created': datetime.datetime(2020, 5, 15, 12, 10, 50, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 425759653, 'comment_body': ""I'm asking why these two assertions don't pass, are there some errors in the console, if yes what errors? And I assume the HTTP2 is not used on the dev server that is why the assertion is failing."", 'comment_created': datetime.datetime(2020, 5, 15, 12, 13, 43, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 425760107, 'comment_body': 'Yep, maybe add some explanation what wizard has as options, but remove it anyway, we can always add them later.', 'comment_created': datetime.datetime(2020, 5, 15, 12, 14, 42, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 425760690, 'comment_body': 'Also, if they fail in all pages, you can probably move them to the ""default"" config part.', 'comment_created': datetime.datetime(2020, 5, 15, 12, 15, 55, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 425761272, 'comment_body': ""Can you please remove all the compy related code from this file? I don't think we will be using it."", 'comment_created': datetime.datetime(2020, 5, 15, 12, 17, 3, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 425761599, 'comment_body': 'Please run `yarn install` so that the yarn.lock file is updated.', 'comment_created': datetime.datetime(2020, 5, 15, 12, 17, 44, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 426468519, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 18, 8, 52, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 426471702, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 18, 8, 57, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 426471946, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 18, 8, 57, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 426472123, 'comment_body': ""I actually think it's better to run the `python -m scripts. start` it in the config. Running it in the `run_lighthouse_tests` script generates a lot of unnecessary logs and also forces me to terminate the server afterward as well."", 'comment_created': datetime.datetime(2020, 5, 18, 8, 58, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 426744950, 'comment_body': 'Add me (@vojtechjelinek) here too.', 'comment_created': datetime.datetime(2020, 5, 18, 16, 18, 30, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 426750917, 'comment_body': 'Install the third party libs before these (there should be a method for this in the codebase).', 'comment_created': datetime.datetime(2020, 5, 18, 16, 28, 1, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 426888064, 'comment_body': 'I have prepared the config here https://gist.github.com/vojtechjelinek/072054e99cd8ec5c57fa0e076cfc02e4 please use that one as there were a lot of changes and we need to get this in quickly. We can talk about the changes in the Speed team call.', 'comment_created': datetime.datetime(2020, 5, 18, 20, 54, 56, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 426971325, 'comment_body': 'Done! I made increased the time for startServerReadyTimeout"": to 250000, I was having issues with timing out when running the server script with only 150000.\r\n\r\nAlso running `python -m scripts.start --no_browser --prod_env` changes the   ""DEV_MODE"": to false in the  `constant.ts`\r\nfile for me. How should I handle this?', 'comment_created': datetime.datetime(2020, 5, 19, 1, 0, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 426971374, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 19, 1, 1, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 426971402, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 19, 1, 1, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 427089062, 'comment_body': ""Let's not care about this for now, I assume that @jameesjohn will change the script a bit when adding nginx anyway so he might tacle this in his PR."", 'comment_created': datetime.datetime(2020, 5, 19, 7, 33, 55, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 427090116, 'comment_body': 'Could you please move this part by 2 spaces to the left and add newline at the end of the file?', 'comment_created': datetime.datetime(2020, 5, 19, 7, 35, 50, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 427115575, 'comment_body': 'Done! although the end now looks a little weird. Maybe move it just one space?\r\nhttps://gist.github.com/jimbyo/d4c6117de98c6530a244fa7dd189da41\r\n', 'comment_created': datetime.datetime(2020, 5, 19, 8, 18, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 427147229, 'comment_body': 'This part should actually be shifted 2 spaces to right.', 'comment_created': datetime.datetime(2020, 5, 19, 9, 6, 15, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 427147518, 'comment_body': 'Now you have two empty lines at the end of the file.', 'comment_created': datetime.datetime(2020, 5, 19, 9, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 427157464, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 19, 9, 22, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 427175804, 'comment_body': 'Two spaces to left, please try to preserve that each level is shifted by 2 spaces.', 'comment_created': datetime.datetime(2020, 5, 19, 9, 52, 19, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 427528823, 'comment_body': 'What is meant by ""store reports""? Maybe it would be clearer if it was something like ""Script for performing Lighthouse checks and...""', 'comment_created': datetime.datetime(2020, 5, 19, 18, 55, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 427529093, 'comment_body': 'Capitalize* and use descriptive style.', 'comment_created': datetime.datetime(2020, 5, 19, 18, 56, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 427531527, 'comment_body': 'Runs* to be consistent with verb tense (descriptive style, see [here](http://google.github.io/styleguide/pyguide.html#383-functions-and-methods) for more information\r\n). Generally for methods, you can imagine that there was a ""This method"" at the beginning of the sentence to get the descriptive style tense.', 'comment_created': datetime.datetime(2020, 5, 19, 19, 0, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 427577422, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 5, 19, 20, 24, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 427578442, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 5, 19, 20, 25, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 427578495, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 5, 19, 20, 25, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 427744422, 'comment_body': ""There's no need to add lighthouse here since we are only using lighthouse CI."", 'comment_created': datetime.datetime(2020, 5, 20, 5, 10, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 427746475, 'comment_body': 'Oh ok, Umm so I ran yarn install. Should I also uninstall it from the yarn.lock?\r\n\r\nActually, when I use `yarn remove lighthouse`, It breaks the code for some reason, maybe we do need it. \r\n\r\nedit* nvm got it working by running `yarn install` again after removing the dependencies.\r\n', 'comment_created': datetime.datetime(2020, 5, 20, 5, 17, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 427747717, 'comment_body': 'You could use `yarn remove <packagename>` to uninstall packages and that will update `package.json` and `yarn.lock`.', 'comment_created': datetime.datetime(2020, 5, 20, 5, 21, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 427792217, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 20, 7, 19, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 429245690, 'comment_body': '@vojtechjelinek, I was thinking that you should alone own this, wanted to check whether there is any specific reason for adding three-person for this (and below) file?', 'comment_created': datetime.datetime(2020, 5, 22, 13, 29, 6, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 429267528, 'comment_body': 'Why we are deleting this file, any specific reason? If this file stores the report maybe move this to the gitignore (and maybe delete this folder before run_lighthouse_checks). This can be helpful in many terms like accessing report through ssh on CI build or accessing reports later. ', 'comment_created': datetime.datetime(2020, 5, 22, 14, 6, 44, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 429654128, 'comment_body': 'Add unit test for this script', 'comment_created': datetime.datetime(2020, 5, 24, 16, 40, 55, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 429654351, 'comment_body': ""@vojtechjelinek, are we expecting this test to only run manually, right? We don't expect any CI integration for this test? [I'm not sure how this work, so sorry if this question seems silly :p] "", 'comment_created': datetime.datetime(2020, 5, 24, 16, 43, 39, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 429658931, 'comment_body': 'Only manually, for now, there will be a GitHub Action for this but @jameesjohn will do a lot of changes to this script anyway so I think it is okay to megre it as is for now.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 41, 57, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 429678467, 'comment_body': ""Currently in lighthouse ci, there is a bug where Html reports are never deleted. So it keeps piling up. Once lighthouse ci  0.40 releases this bug should be resolved and we can delete this function [ and won't need to move this to gitignore ]"", 'comment_created': datetime.datetime(2020, 5, 24, 21, 49, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 429678656, 'comment_body': '@DubeySandeep I will be modifying this config further in my GSOC project so I should be a code owner. However the speed team members @vojtechjelinek @jameesjohn  also need to use lighthouse checks to set up performance checks to improve Oppia. So we thought we should all have an ownership claim on the script and config for lighthouse checks. ', 'comment_created': datetime.datetime(2020, 5, 24, 21, 52, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 430123274, 'comment_body': 'Please read the notes written on the top of this file (around line 10) for assigning code owners for new files.', 'comment_created': datetime.datetime(2020, 5, 26, 2, 14, 18, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 430124411, 'comment_body': ""I have a few thoughts:\r\n1. Why don't we want to keep the report? (Considering as of now this is for manual use)\r\n2. What if someone stopped (or script failed) in between? Contributors will be left with an unexpected dir in the repo, so maybe gitignore will help avoid such cases (In this case you'll have to remove this dir before running the script as well.)\r\n3. Following the existing structure for the frontend test report, I would suggest you generate this report in ../oppia dir."", 'comment_created': datetime.datetime(2020, 5, 26, 2, 19, 47, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}]","[{'commit_sha': '29b35a575c6e0dfe2cff7a01e9494f4e16c93c4b', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d203f255d0944bb773d1f735c0151f0fec8cc4a', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65f43087b55933115c30d8feb958302b2e1205e0', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebee565b92c2acd2d25ab9b59ee3d64a24874551', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97f08aa1915a94541a247436fa80f51e841e85b8', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ed975586053fe2916636493dad73856a06d48d7', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f4d5eda721aad43853bdd8e59250e1af0ae0593', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2ea486986ab85a3598d34248be7b1af13da343d', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a4d9baa2e27797cf6b8d2c090ff4b627331bf7e', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0cab8491679c265493e34f1826d1a29c76509d5', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb95960ac547572670fec19bc4a64b3dd3e5741d', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3c16b29fbd4bb579f7a0ac07229d0a056d5448e', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b59d1bf20cfb6242223637f2bee0e6a3895a155', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09f553fa79a2c91c523153f5e6729996b9ee21bb', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcd36ebb97e87533831a6323ac4eacbfd261961e', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c49859cc473ccbb4aa077a98eb672f3bd082314f', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '557f3b0564efd2710c9600bee672b344848f36c6', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdb722f7dd390ce083fca5f1ab530542a21f3b8c', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bcd227b9c1b96252b808121d04e84090b5f0e9f', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b43979355ce0144048a89b7bb8aee7b73cb62c0c', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81f49bc8d6069ef3c5e9cef40586b7482185a450', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '825e23c5114f6670b2be20ab38186f3a1078a745', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fcb477a0053d5fdebdacb6bf74fde1ffa50ea73', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e565a6d897b08114021dd38afa92bd2277b16453', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35e46d6755f4994b72d4b0d975d1a6ead2f5f2fa', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6053e685f60ef5c78fd6b6f495545fe9146838a1', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64688fa5a568c1076d66f6fc3a63968c5ed632ad', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0561f7e579746c873ed71ad2f71a912e5c8f8798', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8b4946d38030238d83315f1fdb052364b305a6e', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}]",,35385366,,User,,4,,0,0
433056483,"Milestone 1.2: Score 100% in Chrome audits Admin, Classroom, About, Collection_Editor pages","## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes accessibility issues in Oppia. The issues in each HTML file are described below

**top-navigation-bar.directive.html**

- [[role]s are not contained by their required parent element](https://web.dev/aria-required-parent/?utm_source=lighthouse&utm_medium=devtools)
- [Lists do not contain only `<li>` elements and script supporting elements (`<script>` and `<template>`)](https://web.dev/list/?utm_source=lighthouse&utm_medium=devtools)

**i18n-footer.directive.html**
- [Lists do not contain only `<li>` elements and script supporting elements (`<script>` and `<template>`)](https://web.dev/list/?utm_source=lighthouse&utm_medium=devtools)

**admin-dev-mode-activities-tab.directive.html**
- [Form elements do not have associated labels](https://web.dev/label/?utm_source=lighthouse&utm_medium=devtools)

**admin-page.mainpage.html**
- [`<html>` element does not have a `[lang]` attribute](https://web.dev/html-has-lang/?utm_source=lighthouse&utm_medium=devtools

**admin-navbar.directive.html**
- [Image elements do not have `[alt] `attributes](https://web.dev/image-alt/?utm_source=lighthouse&utm_medium=devtools)

Updated Navbar and Admin-Navbar
<img width=""1440"" alt=""Screen Shot 2020-06-15 at 11 39 07 PM"" src=""https://user-images.githubusercontent.com/35385366/84740285-f5dfe100-af61-11ea-87e0-12828d65f0e2.png"">
<img width=""1440"" alt=""Screen Shot 2020-06-15 at 11 29 08 PM"" src=""https://user-images.githubusercontent.com/35385366/84740294-f8dad180-af61-11ea-82a2-ad301c5d9fe6.png"">


## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.
",True,9490,https://api.github.com/repos/oppia/oppia/pulls/9490,https://github.com/oppia/oppia/pull/9490,closed,309,231,5,14,11,26,1,1,[{'name': 'frontend'}],2020-06-11 12:54:45+00:00,2020-06-19 09:07:28+00:00,677563.0,"7 days, 20:12:43","[{'comment_id': 438960137, 'comment_body': 'Why do we need an id here? (Also, remove the space before and after `=`)', 'comment_created': datetime.datetime(2020, 6, 11, 17, 43, 45, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 438961057, 'comment_body': 'The alt should explain the image, right? Should we use ""Oppia logo""?', 'comment_created': datetime.datetime(2020, 6, 11, 17, 44, 48, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 438962139, 'comment_body': ""I'm not sure about this change (from line 51 - 219), can you please explain?"", 'comment_created': datetime.datetime(2020, 6, 11, 17, 46, 1, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 439029931, 'comment_body': 'Remove extra whitespace surrounding `=`. Here and below.', 'comment_created': datetime.datetime(2020, 6, 11, 19, 49, 17, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 439030971, 'comment_body': ""Can you format these lines to have each of the attributes on a new line? There's a lot going on here, so it would be easier to read."", 'comment_created': datetime.datetime(2020, 6, 11, 19, 51, 33, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 439031251, 'comment_body': 'Can you re-format these lines to have the `a` tags on a new line? ', 'comment_created': datetime.datetime(2020, 6, 11, 19, 52, 14, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 439032113, 'comment_body': 'This line is really long: can you place the `a` tag on a new line and maybe put each of the attributes for the `a` tag on a separate line as well.', 'comment_created': datetime.datetime(2020, 6, 11, 19, 53, 57, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 439032767, 'comment_body': 'Why is the alt an empty string here? Also remove extra whitespace.', 'comment_created': datetime.datetime(2020, 6, 11, 19, 55, 16, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 439148600, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 6, 12, 0, 42, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 439150549, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 6, 12, 0, 50, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 439151079, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 6, 12, 0, 52, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 439151405, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 6, 12, 0, 53, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 439154599, 'comment_body': 'We need the id attribute because we need to connect form elements to labels. \r\nhttps://web.dev/label/?utm_source=lighthouse&utm_medium=devtools\r\n\r\nthe `id` attribute in the `input` tag connects to the `for` attribute in the `label` tag. When a screen reader goes over the input box, the label will be announced to them. In this case, the screen reader will read ""Number of explorations to publish"". ', 'comment_created': datetime.datetime(2020, 6, 12, 1, 6, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 439155638, 'comment_body': 'According to the Lighthouse Audits, Lists should only contain `<li> `elements and script supporting elements (`<script>` and `<template>`)\r\n\r\n[Link to Issue](https://web.dev/list/?utm_source=lighthouse&utm_medium=devtool)\r\n\r\nFor example, In line 52, the nested `<ul>` element was not inside a `<li>` element, So I put them in a `<li>` element. \r\n\r\nDoes that make sense? I will update my PR with a high level overview of the fixes I made soon ', 'comment_created': datetime.datetime(2020, 6, 12, 1, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 439159268, 'comment_body': 'So I wasn\'t sure if describing this image would be useful to the user. And according the audit documentation, \r\n\r\n>  If the image acts as decoration and does not provide any useful content, give it an empty alt="""" attribute to remove it from the accessibility tree:\r\n\r\nhttps://web.dev/image-alt/?utm_source=lighthouse&utm_medium=devtools', 'comment_created': datetime.datetime(2020, 6, 12, 1, 26, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 439159851, 'comment_body': 'Good Idea! Done. ', 'comment_created': datetime.datetime(2020, 6, 12, 1, 28, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 439160682, 'comment_body': 'Done, White space removed', 'comment_created': datetime.datetime(2020, 6, 12, 1, 32, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 439560199, 'comment_body': 'Ah, I see! Thanks for the info and the ref link! \r\nCan you please share the screenshot of the UI after this change?', 'comment_created': datetime.datetime(2020, 6, 12, 17, 46, 22, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 439650226, 'comment_body': 'Maybe add a comment explaining the need for an empty alt tag and link the doc at https://web.dev/image-alt/?utm_source=lighthouse&utm_medium=devtools#how-to-add-alternative-text-to-images.', 'comment_created': datetime.datetime(2020, 6, 12, 21, 30, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 440620181, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 6, 16, 6, 44, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 440620405, 'comment_body': 'Yes, Just updated the PR description', 'comment_created': datetime.datetime(2020, 6, 16, 6, 44, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 441012539, 'comment_body': 'Ah, I see. I misunderstood the usage there! Thanks for the explanation!', 'comment_created': datetime.datetime(2020, 6, 16, 17, 13, 38, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 441019260, 'comment_body': 'Thanks. Can you move the comment above the `img` tag? Typically a comment is placed above the thing they are explaining.', 'comment_created': datetime.datetime(2020, 6, 16, 17, 24, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 483880425, 'comment_body': 'Id used here @seanlip ', 'comment_created': datetime.datetime(2020, 9, 4, 23, 31, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 483880451, 'comment_body': 'ditto', 'comment_created': datetime.datetime(2020, 9, 4, 23, 31, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 483881737, 'comment_body': 'Ah, I see, thanks.\r\n\r\nWould it be possible to make all these have a standard format: id=""label-target-...""? That will help ensure that we don\'t drop them in the future by accident.\r\n\r\nDo we also have an automated test to ensure that every label tag is properly annotated?', 'comment_created': datetime.datetime(2020, 9, 4, 23, 39, 27, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}]","[{'commit_sha': 'cc9099383a78d6d486567f593e0f2f525e3105fa', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68f1ebfc56c19f1546b2f8530b2dfb17efe75099', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5b0f63db931ee6ce723e96fccb5b946ba169985', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffa03d14ef3c7e4e87db8cc694185b34552662da', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9557fa3ebb1d5618a34530ff88e710ed54f8289', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6aedd9e163d8357e3c550a8bde46608081be7e31', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9eb874e837f5307c9ed4a1ee00305ded69f3369b', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b05eb04a18568c07ad72be3d3b976ffdae99b1c8', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '425b5f92a236933d47790e01f604888ca6e34aa8', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9eada8c0fdc052e267a3871127789ef5fe60735c', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa1cbe0b8e67fddbff41d520514b3b4c9c979cfc', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e38850a40aa0cee2acf0e3069bd4c014b762b4b7', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5731fc357f3d95d852fc991dd34f13daa62f86ff', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '769a1481f91e6053ffb0b9e3de8cd7bac2fd4d57', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}]",,35385366,,User,,4,,0,0
437688240,"Milestone 1.3 and Milestone 1.4: Score 100% in Chrome audits on Collection-Player, Contact, Community-Dashboard, Creator-Dashboard, and Delete-Account Pages","## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

This PR does the following: This PR fixes accessibility issues in Oppia. The issues in each HTML file are described below

 **.lighthouserc.json**

1. Added Accessibility Audits to lighthouse config
2. Changed min score of Failing Assertions to zero


**top-navigation-bar.directive.html**
1. Reverted Change where the role=""menu"" is added to the navbar-header
2. Fixed issue where the AboutMenu was given the ARIA label menuitem, but is not part of a menu.
https://web.dev/aria-required-children/?utm_source=lighthouse&utm_medium=devtools 

**admin-navbar.directive.html**
1. Fixed issue where Image elements do not have [alt] attributes
2. Added a description to a link back to the library page


**role-graph.directive.html**
1. Connected Input Elements to their Labels
[Form elements do not have associated labels](https://web.dev/label/?utm_source=lighthouse&utm_medium=devtools)

**collection-footer.directive.html** 
1. Provided aria-label to the collection-players sharing links
<img width=""916"" alt=""Screen Shot 2020-06-22 at 10 54 58 AM"" src=""https://user-images.githubusercontent.com/35385366/85319801-f18e5900-b476-11ea-8b3b-f85effc587b4.png"">

**creator-dashboard-page.component.html**
1. labeled the sort arrow button ""Change Sort Order""
<img width=""1440"" alt=""Screen Shot 2020-06-22 at 10 41 27 AM"" src=""https://user-images.githubusercontent.com/35385366/85318713-50eb6980-b475-11ea-961e-3f7224f97c34.png"">

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.
",True,9613,https://api.github.com/repos/oppia/oppia/pulls/9613,https://github.com/oppia/oppia/pull/9613,closed,31,24,6,15,9,30,1,0,[{'name': 'frontend'}],2020-06-22 05:20:23+00:00,2020-07-01 23:00:32+00:00,841209.0,"9 days, 17:40:09","[{'comment_id': 443773601, 'comment_body': 'Why this change?', 'comment_created': datetime.datetime(2020, 6, 22, 19, 18, 54, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 443773689, 'comment_body': 'Why these changes?', 'comment_created': datetime.datetime(2020, 6, 22, 19, 19, 3, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 443774391, 'comment_body': ""Don't do this, simply add a requirement for the overall accessibility score to be 100 in the pages where you have fixed it."", 'comment_created': datetime.datetime(2020, 6, 22, 19, 20, 36, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 443863940, 'comment_body': 'Remove extra whitespace.', 'comment_created': datetime.datetime(2020, 6, 22, 22, 39, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 444654374, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 6, 24, 5, 35, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 444666581, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 6, 24, 6, 14, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 444667075, 'comment_body': 'Same as above', 'comment_created': datetime.datetime(2020, 6, 24, 6, 15, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 444667089, 'comment_body': 'These tests were failing on the audits for some reason so I chose to make their min scores zero. ', 'comment_created': datetime.datetime(2020, 6, 24, 6, 15, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 444839479, 'comment_body': 'Let\'s not modify these for now, just have the `""categories:accessibility"": [""error"", {""minScore"": 1}],` change in this for now and we can resolve the other issues alter.', 'comment_created': datetime.datetime(2020, 6, 24, 11, 53, 40, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 447185743, 'comment_body': 'Add a proper alt, maybe ""Oppia logo""?', 'comment_created': datetime.datetime(2020, 6, 29, 18, 57, 45, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 447185916, 'comment_body': ""Where is this text shown? Also why it wasn't there earlier?"", 'comment_created': datetime.datetime(2020, 6, 29, 18, 58, 5, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 447188670, 'comment_body': 'username-input', 'comment_created': datetime.datetime(2020, 6, 29, 19, 2, 56, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 447190259, 'comment_body': 'username-input (Will it be fine to have two same for value in one page?)', 'comment_created': datetime.datetime(2020, 6, 29, 19, 5, 47, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 447190416, 'comment_body': 'Ditto  `username-input`', 'comment_created': datetime.datetime(2020, 6, 29, 19, 6, 8, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 447680391, 'comment_body': ""They need to be slightly different but I'll change it a little"", 'comment_created': datetime.datetime(2020, 6, 30, 13, 26, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 447682031, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 6, 30, 13, 28, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 447682875, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 6, 30, 13, 29, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 447690979, 'comment_body': 'So the text is never shown, it\'s to provide information about the link to screen readers to see. You can see where it is in the screenshots below\r\n<img width=""432"" alt=""Screen Shot 2020-06-30 at 6 33 45 AM"" src=""https://user-images.githubusercontent.com/35385366/86132429-b81fa400-ba9b-11ea-93f3-b7a62a4bc7d0.png"">\r\n<img width=""429"" alt=""Screen Shot 2020-06-30 at 6 33 53 AM"" src=""https://user-images.githubusercontent.com/35385366/86132432-b950d100-ba9b-11ea-8f22-3ffa5f66aeb1.png"">\r\n', 'comment_created': datetime.datetime(2020, 6, 30, 13, 40, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 483881728, 'comment_body': 'ID here', 'comment_created': datetime.datetime(2020, 9, 4, 23, 39, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 483881757, 'comment_body': 'here', 'comment_created': datetime.datetime(2020, 9, 4, 23, 39, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 483881778, 'comment_body': 'here', 'comment_created': datetime.datetime(2020, 9, 4, 23, 39, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 483881799, 'comment_body': 'here', 'comment_created': datetime.datetime(2020, 9, 4, 23, 39, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 483881824, 'comment_body': 'here', 'comment_created': datetime.datetime(2020, 9, 4, 23, 39, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 483881851, 'comment_body': 'here', 'comment_created': datetime.datetime(2020, 9, 4, 23, 40, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 483881858, 'comment_body': 'here', 'comment_created': datetime.datetime(2020, 9, 4, 23, 40, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 483881870, 'comment_body': 'here', 'comment_created': datetime.datetime(2020, 9, 4, 23, 40, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 483881906, 'comment_body': 'here', 'comment_created': datetime.datetime(2020, 9, 4, 23, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 483881928, 'comment_body': 'here', 'comment_created': datetime.datetime(2020, 9, 4, 23, 40, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 483881957, 'comment_body': ""I don't understand this one. Why do you need the id here?"", 'comment_created': datetime.datetime(2020, 9, 4, 23, 40, 38, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 483882427, 'comment_body': 'Oh it doesn\'t show in github but the `<label>` tag above has the attribute `for=""$ctrl.formData.viewUserRoles.filterCriterion""` and the labels are linked through the` <label>` for attribute, and the interactive control\'s ID', 'comment_created': datetime.datetime(2020, 9, 4, 23, 43, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}]","[{'commit_sha': '7fdedff53857177b6491355777b0e1c964dd0faa', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '847eb71db27944dc194e5eecc2353cc2f619f6b3', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80f70e339a2baee25c7eb4bff7564e4c28269a88', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1857e71abf1d4bd00720a55d629d15b47b3d12e6', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3767cd21c46a2c2623ad7aac625ef3ced6a4d22', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb4a9a343400e9de69c1d9b374a48af366c84443', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11ddffa989c3de33925355247af666b32f912828', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f88e98acf9d75a6c638cec900ea1f025f8b23389', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a11b21c559887d2d8a40b40af0d6f379789168e1', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9605d6e6b27451c5c6805b6936cf483c00c227b4', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35b2da5c218f76b61e8ea1077a489811fe9ba83a', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8860bd3709f01546fb52588fa3f09cc20e055937', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50ace8c3b5dc09a73b3be927cc64ea5d782780ab', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83093bf7de1aae025b3197e6e0e548f3b50061ba', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc44e128289fb454f729ca91ed50c369374a1caa', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}]",,35385366,,User,,4,,0,0
440933733,Create Login Puppeteer Script and connect to lighthouserc.json,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

This PR does the following: 
1. Connects puppeteer to Oppia with `yarn add puppeteer `
2. Creates login script to enable lighthouse access to pages behind authentication.

Note this PR is a branch of another currently opened PR #9613 Please review the changes in files that are in commit cd12702 and 4cc14089e2baf70affa379c10c093f803ee7dce5.

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.
",True,9692,https://api.github.com/repos/oppia/oppia/pulls/9692,https://github.com/oppia/oppia/pull/9692,closed,290,14,8,40,9,30,1,1,[{'name': 'frontend'}],2020-06-27 16:35:54+00:00,2020-07-06 18:35:25+00:00,784771.0,"9 days, 1:59:31","[{'comment_id': 446587847, 'comment_body': 'Should handle an exception?', 'comment_created': datetime.datetime(2020, 6, 28, 1, 41, 58, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 446618670, 'comment_body': 'This should be in the `devDependencies`.', 'comment_created': datetime.datetime(2020, 6, 28, 8, 23, 39, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 447134580, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 29, 17, 27, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 448025417, 'comment_body': 'Why is this modified?', 'comment_created': datetime.datetime(2020, 6, 30, 23, 0, 33, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 448104388, 'comment_body': ""Oh yes, I modified it just for testing. It's much faster. Before I merge I will change it back\r\n"", 'comment_created': datetime.datetime(2020, 7, 1, 4, 11, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 448104454, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 1, 4, 12, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 448587560, 'comment_body': ""@jimbyo  Seems like I've reviewed this PR earlier! is this an expected change for this PR?"", 'comment_created': datetime.datetime(2020, 7, 1, 20, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 448590202, 'comment_body': ""@DubeySandeep Oh yes sorry. This PR is a branch from https://github.com/oppia/oppia/pull/9613 and once that PR merges, I'll fix the merge conflicts in this PR."", 'comment_created': datetime.datetime(2020, 7, 1, 20, 8, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 448590364, 'comment_body': 'I found [this comment ](https://github.com/oppia/oppia/pull/9692#issuecomment-651271559) which explains why I see a similar code here. @jimbyo I would suggest you add these kinds of general comments related to PR which is useful for reviewers in the PR header (before the checklist).', 'comment_created': datetime.datetime(2020, 7, 1, 20, 9, 14, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 448591376, 'comment_body': ""I think it's best that you don't push it as a part of the changes. You might forget to update it before the merge."", 'comment_created': datetime.datetime(2020, 7, 1, 20, 11, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 448592489, 'comment_body': 'Go it', 'comment_created': datetime.datetime(2020, 7, 1, 20, 14, 3, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 448599943, 'comment_body': ""Can you log/print that the user is already logged into Oppia here? In general, we don't want to have empty catch clauses."", 'comment_created': datetime.datetime(2020, 7, 1, 20, 30, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 448612620, 'comment_body': 'Can you extract the logic in each of the conditional clauses (within the try block here, and within the if blocks below) to separate methods?', 'comment_created': datetime.datetime(2020, 7, 1, 20, 57, 57, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 448714836, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 2, 2, 34, 19, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 448758930, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 2, 5, 37, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 448999154, 'comment_body': 'As @jameesjohn said, remove this please.', 'comment_created': datetime.datetime(2020, 7, 2, 13, 24, 50, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 449010186, 'comment_body': 'Please run register this as `atexit` function, you can look into `run_e2e_tests.py` line 443, (`atexit.register(cleanup)`).', 'comment_created': datetime.datetime(2020, 7, 2, 13, 41, 39, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 449010713, 'comment_body': ""Don't forget to register it before the `run_lighthouse_checks()`."", 'comment_created': datetime.datetime(2020, 7, 2, 13, 42, 26, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 449146879, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 2, 16, 49, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 449153241, 'comment_body': 'Why is this changed?', 'comment_created': datetime.datetime(2020, 7, 2, 17, 0, 59, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 449157425, 'comment_body': ""Lighthouse performance scores will change due to inherent variability in web and network technologies, even if there hasn't been a code change. When we implement Github actions we should run Lighthouse multiple times and beware of variability before drawing conclusions about a performance-impacting change. You can see here in the lighthouse-ci-documentation https://github.com/GoogleChrome/lighthouse/blob/v6.0.0-beta.0/docs/variability.md"", 'comment_created': datetime.datetime(2020, 7, 2, 17, 9, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 449161992, 'comment_body': ""Understood but still, I wouldn't modify it in this PR."", 'comment_created': datetime.datetime(2020, 7, 2, 17, 16, 25, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 449164508, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 2, 17, 21, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 449172813, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 2, 17, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 449196451, 'comment_body': 'Why is this commented?', 'comment_created': datetime.datetime(2020, 7, 2, 18, 25, 28, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 449233558, 'comment_body': 'Why this change?', 'comment_created': datetime.datetime(2020, 7, 2, 19, 47, 54, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 449247424, 'comment_body': 'Oh the command `python -m scripts.start --no_browser --prod_env` changes it to false ill change it back', 'comment_created': datetime.datetime(2020, 7, 2, 20, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 449248201, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 2, 20, 22, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 449248548, 'comment_body': 'It should not be changed', 'comment_created': datetime.datetime(2020, 7, 2, 20, 23, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 449248571, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 2, 20, 23, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}]","[{'commit_sha': '7fdedff53857177b6491355777b0e1c964dd0faa', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '847eb71db27944dc194e5eecc2353cc2f619f6b3', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80f70e339a2baee25c7eb4bff7564e4c28269a88', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1857e71abf1d4bd00720a55d629d15b47b3d12e6', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3767cd21c46a2c2623ad7aac625ef3ced6a4d22', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb4a9a343400e9de69c1d9b374a48af366c84443', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11ddffa989c3de33925355247af666b32f912828', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd1270232d824500ef3f97a8596bc3973d6ee916', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '598a63b9037b92e27e8264ff2defbbf61df4e86f', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3eeaeaf3b36d3a7b8c59e7d92fa1693f23743d13', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e34e94ecd35413064266e385b2193bd4274c9513', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bef268a4881230819b587e544614691813c9fd6b', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a55f044c3f8a52e8cf9dda5bfd06de6ae4a5be1', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bed176b1286a614bbf3720cf4960a8958a13d010', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'beeca3956e817a3e89a843e9f82a0258f20ca5b4', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e82fef6a3d1525648d5ee245659b2e079026d43f', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68575b2cd9d2703cf33372fe33c4aa517c029287', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d1a6416ba7ab6861ad7287069037535a0206141', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cc14089e2baf70affa379c10c093f803ee7dce5', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bda26d0028ddb77fd4fcb1650d9d708c35df1531', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f841beccdee6b041e3c2fdbe8b2f98120779ae81', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4bbd642172980f82e1ac8322d635e3acaeba8b1', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e305ce55b3af4276df859c764cfb4d82e7d29b4', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '173397ed51fd3e3927d053bb7de255579e3471f2', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd33d99ad0f2802f9cb48def1e3fc0a09ccefc4ba', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a28abefa8d56f77108e52a775b8015a3f401f710', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09aea5d9079b6b6b0b26399df7416841612752fb', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '986de5fb6bfc19042cb3bad8fb65229be4b4dda7', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '075f3bb313ae8565171516a445392f522630ddd8', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc6b98c403c4eebc85286bb2b8912488f181beb1', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b08d783f22da8ea281606e930032a3433c8bad0d', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16ce4e8bccfe69a7db4ce5eda93046119ee0ac75', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84a7ea116b561896e01956cd6b6dcf18c54b0810', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a67947fbdc56605fbdd4ccc36aed7f07f37c2627', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0303985db54c847a9b9f9041e5f17c96ba37e83', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4033f3963e30e73b3f6bb283e43eaacc26f4cd75', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac1821ed3603d76400a4ade04dae8f998e92ca0d', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5893b6ea5ee266acdd2d0495eeac62d240f15062', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbd5af8c9c74c3f6c1546a8de3b2abb1213acb4c', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5dafc22dc8e620f8a63eb1d106a73b23d718c09', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}]",,35385366,,User,,4,,0,0
441100603,"Milestone 1.5: Score 100% in Chrome audits on Donate, Email Dashboard, And Email Dashboard results Webpages","## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->


This PR Properly Labels all form elements in the Email Dashboard Webpages and increases the font-size of the heading for the Donate page.

Visual Changes to Webpages

**Before Changes**

<img width=""507"" alt=""Screen Shot 2020-06-28 at 12 22 32 PM"" src=""https://user-images.githubusercontent.com/35385366/85956348-277d8280-b93a-11ea-953a-6bbf83f25a9b.png"">
<img width=""1439"" alt=""Screen Shot 2020-06-28 at 12 21 31 PM"" src=""https://user-images.githubusercontent.com/35385366/85956349-2a787300-b93a-11ea-9a88-f6c41a1509a7.png"">

**After Changes**
<img width=""530"" alt=""Screen Shot 2020-06-28 at 12 15 55 PM"" src=""https://user-images.githubusercontent.com/35385366/85956356-3106ea80-b93a-11ea-8de7-4c11e85b0051.png"">
<img width=""1440"" alt=""Screen Shot 2020-06-28 at 12 15 30 PM"" src=""https://user-images.githubusercontent.com/35385366/85956359-33694480-b93a-11ea-9726-9a50891c1a81.png"">


## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.
",True,9705,https://api.github.com/repos/oppia/oppia/pulls/9705,https://github.com/oppia/oppia/pull/9705,closed,13,7,2,4,7,1,1,1,[{'name': 'frontend'}],2020-06-28 19:10:31+00:00,2020-07-02 01:19:28+00:00,281337.0,"3 days, 6:08:57","[{'comment_id': 483882662, 'comment_body': 'From lines 4-20', 'comment_created': datetime.datetime(2020, 9, 4, 23, 45, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}]","[{'commit_sha': 'e6a63c6dc319a6fc01f7d6bcd7e0a037805918fd', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3eb1e20262f0c9e331ed9b818d307cdc35f2bfd', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65d68356e82789278946a48941f08529de259c19', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef70e56b4536d4cfb880a12371f1999b707bebc7', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}]",,35385366,,User,,4,,0,0
448403896,"Milestone 2.1: Achieve scores of 100% in lighthouse audits on the Error, Exploration_Editor, Exploration_Player, Get_Started, Landing pages","## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

Changes made in PR

**.lighthouserc.json**
1. Alphabetized the order of the webpages
2. Added Landing Pages and Exploration Pages
3. Modified server start script so that it no longer runs in the production environment. (running the server in the production environment prevents the puppeteer script from loading in explorations and collections

**core/templates/components/common-layout-directives/navigation-bars/top-navigation-bar.directive.htm**l
1.  Removed role of the menu on various HTML tags that caused broken aria menus. 
https://blog.pope.tech/2020/03/27/broken-aria-menu-example/
2. Added an `alt` attribute describing the google sign in image in the sign-in button.

**core/templates/components/state-editor/state-interaction-editor/state-interaction-editor.directive.html**
1. Added a `label`element  to the solicit-answer-details `input`element

**core/templates/css/oppia.css**
1. Change oppia-placeholder text to a darker gray to fix color contrast issues. 
**Original**
![Screen Shot 2020-07-13 at 12 09 44 PM](https://user-images.githubusercontent.com/35385366/87343558-e53f6e00-c501-11ea-9758-c40824d72450.png)

**Current**
![Screen Shot 2020-07-13 at 12 14 27 PM](https://user-images.githubusercontent.com/35385366/87343960-7c0c2a80-c502-11ea-8ed7-a22b5d6e0765.png)


**core/templates/pages/exploration-editor-page/editor-navigation/editor-navbar-breadcrumb.directive.html**
1. The exploration editor's edit title button is too transparent so the opacity was changed from .6 to .8

**core/templates/pages/exploration-editor-page/editor-navigation/editor-navigation.directive.html**
1. Added aria labels to the buttons in the exploration editor top navigation bar
2. Fixed minor issue where a `ul` element contained an element that was not an `li` or `script`

**core/templates/pages/exploration-editor-page/editor-tab/graph-directives/state-graph-visualization.directive.html**

1. Added aria labels to buttons in the exploration overview
2. Added aria labels to the delete card button in exploration overview
3. Added aria labels to warning buttons in exploration overview

**core/templates/pages/exploration-editor-page/exploration-save-and-publish-buttons/exploration-save-and-publish-buttons.directive.html**
1. Fixed Broken Aria Menus by removing the menu's as roles
2. Added an Arialabel to the savedraft button toggle in the exploration editor page

**core/templates/pages/exploration-editor-page/modal-templates/exploration-metadata-modal.template.html**
1.  Add labels to the exploration publish modal

**core/templates/pages/landing-pages/stewards-landing-page/stewards-landing-page.component.html**
1. Fixes color contrast issues in the .oppia-stewards-sidebar 
2. Adds an `alt` element describing the sidebar

**puppeteer-login-script.js**
1. Adds a Create exploration function in the puppeteer script




## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.
",True,9898,https://api.github.com/repos/oppia/oppia/pulls/9898,https://github.com/oppia/oppia/pull/9898,closed,105,63,12,20,7,39,1,1,[{'name': 'frontend'}],2020-07-13 17:55:32+00:00,2020-07-26 08:11:56+00:00,1088184.0,"12 days, 14:16:24","[{'comment_id': 453932792, 'comment_body': 'Nit: Capitalize ""how"" as the clause after the colon is independent.', 'comment_created': datetime.datetime(2020, 7, 13, 21, 6, 16, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 453932976, 'comment_body': 'Nit: Capitalize ""is"".', 'comment_created': datetime.datetime(2020, 7, 13, 21, 6, 37, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 453933318, 'comment_body': 'Maybe just put each of the tags on their own line to be consistent with the width tag.', 'comment_created': datetime.datetime(2020, 7, 13, 21, 7, 19, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 453933896, 'comment_body': 'How was this color chosen?', 'comment_created': datetime.datetime(2020, 7, 13, 21, 8, 28, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 453934448, 'comment_body': 'Can this be rewritten to use [template literals](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals)?', 'comment_created': datetime.datetime(2020, 7, 13, 21, 9, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 453945628, 'comment_body': 'How do you navigate to this page?', 'comment_created': datetime.datetime(2020, 7, 13, 21, 31, 57, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 453945830, 'comment_body': 'This is a duplicate of the one on line 12 right?', 'comment_created': datetime.datetime(2020, 7, 13, 21, 32, 29, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 456500234, 'comment_body': 'You need to reload the exploration welcome.yaml and you can either search for it in the library or type the URL http://127.0.0.1:8181/explore/0.', 'comment_created': datetime.datetime(2020, 7, 17, 15, 4, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 456500432, 'comment_body': 'Yes will be deleted', 'comment_created': datetime.datetime(2020, 7, 17, 15, 4, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 456504657, 'comment_body': ""I used the online tool [WebAim: Contrast Checker](https://webaim.org/resources/contrastchecker/) to change the darken or lighten the existing colors until they passed the WCAG guidelines. I'm not a hundred percent if this is okay or we need to use an existing color scheme. I'll ask @mschanteltc about this. "", 'comment_created': datetime.datetime(2020, 7, 17, 15, 11, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 456509914, 'comment_body': 'I shortened it as per our discussion', 'comment_created': datetime.datetime(2020, 7, 17, 15, 20, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 456557991, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 17, 16, 49, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 456558240, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 17, 16, 50, 20, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 456558350, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 17, 16, 50, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 456558425, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 17, 16, 50, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 456691130, 'comment_body': ""Let's just have each attribute on its own line."", 'comment_created': datetime.datetime(2020, 7, 17, 21, 57, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 456691631, 'comment_body': 'FYI inline style tags will be disallowed after [#9589](https://github.com/oppia/oppia/pull/9589).', 'comment_created': datetime.datetime(2020, 7, 17, 21, 59, 8, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 456709535, 'comment_body': 'ng-style seems to be okay', 'comment_created': datetime.datetime(2020, 7, 17, 23, 8, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 456712631, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 17, 23, 23, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 456781796, 'comment_body': 'Instead of using inline style, can we use the bootstrap class `font-weight-normal` here and below (see [example](https://getbootstrap.com/docs/4.0/utilities/text/#font-weight-and-italics))?', 'comment_created': datetime.datetime(2020, 7, 18, 11, 44, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 456784070, 'comment_body': 'Why this change?', 'comment_created': datetime.datetime(2020, 7, 18, 12, 13, 44, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 456784131, 'comment_body': '```suggestion\r\n                <img ng-src=""<[$ctrl.googleSignInIconUrl]>"" alt=""Google sign in icon"">\r\n```', 'comment_created': datetime.datetime(2020, 7, 18, 12, 14, 32, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 456784376, 'comment_body': 'What does this mean, could you point to this element in some other way?', 'comment_created': datetime.datetime(2020, 7, 18, 12, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 458362275, 'comment_body': 'I think he meant this section: `style=""min-width: 125px; right: inherit;""`.', 'comment_created': datetime.datetime(2020, 7, 21, 20, 17, 39, tzinfo=datetime.timezone.utc), 'commenter': 'aks681', 'type': 'User'}, {'comment_id': 458362460, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2020, 7, 21, 20, 18, tzinfo=datetime.timezone.utc), 'commenter': 'aks681', 'type': 'User'}, {'comment_id': 458362967, 'comment_body': 'Why `ng-style` here? Seems to be a constant style?', 'comment_created': datetime.datetime(2020, 7, 21, 20, 19, tzinfo=datetime.timezone.utc), 'commenter': 'aks681', 'type': 'User'}, {'comment_id': 458363024, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2020, 7, 21, 20, 19, 6, tzinfo=datetime.timezone.utc), 'commenter': 'aks681', 'type': 'User'}, {'comment_id': 458877467, 'comment_body': '@jimbyo ping', 'comment_created': datetime.datetime(2020, 7, 22, 15, 25, 3, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 458940342, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 22, 16, 53, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 459510008, 'comment_body': ""The production environment deactivates the admin activities tab, and I needed it to reload the explorations. I'll revert this change because I changed the way I reload the explorations in Milestone 2.4"", 'comment_created': datetime.datetime(2020, 7, 23, 14, 52, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 459512728, 'comment_body': 'Yes we can. Done', 'comment_created': datetime.datetime(2020, 7, 23, 14, 55, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 459514653, 'comment_body': 'I\'ve changed them to `class=""font-weight-normal""` as @kevintab95 suggested. I changed the style because typically` <label>` tags are bolded but I wanted unbolded text for these three labels label. ', 'comment_created': datetime.datetime(2020, 7, 23, 14, 58, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 459514729, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2020, 7, 23, 14, 58, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 459521458, 'comment_body': 'This is supposed to point to the reload exploration button in the admin activities tab. I think I found a better way to point with the class ""protractor-test-reload-exploration-button"". ', 'comment_created': datetime.datetime(2020, 7, 23, 15, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 459747650, 'comment_body': ""This isn't done?"", 'comment_created': datetime.datetime(2020, 7, 23, 21, 49, 34, tzinfo=datetime.timezone.utc), 'commenter': 'aks681', 'type': 'User'}, {'comment_id': 459747731, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2020, 7, 23, 21, 49, 48, tzinfo=datetime.timezone.utc), 'commenter': 'aks681', 'type': 'User'}, {'comment_id': 459752849, 'comment_body': ""@aks681 Should I just delete It? I didn't write the style attribute, I just deleted the ARIA role. I know that #9589 will fix it. "", 'comment_created': datetime.datetime(2020, 7, 23, 22, 1, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 459762499, 'comment_body': '@aks681 Okay I just deleted it now PTAL!', 'comment_created': datetime.datetime(2020, 7, 23, 22, 26, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}]","[{'commit_sha': 'f9b001361b967da3d78dc2fc26f8e9e915d67e78', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c760c136f0d843a1886a1e61de6c094639255dc6', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c149cc0e58e45377d1d93f425cc273fde900dc9', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89c1bc4a703e5672cbaed9008e381259d247b5eb', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad9928d46587392916d6dce58c9b49b861c3bc19', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bb1a37d44b824176b79eb50fc1aa0a70b2543f5', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd94cb6f8d2291bcc6cee7d9fa741e2b0ba71088', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae3f3e1a24ebf15c1f9e387ace00d4109a56a2d8', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd331f551b89b978c6dbc40d69a4e36543fc7fa65', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e76ab87e98a41b50203120e1681efdb89fe48429', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c02c3c187cfa8340ddb7e651ec634c18beaf7a3e', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69a3f062258795695876e1b04f3d47a69256a9fe', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb3a2e73f9e321c0a276b3c770adb8cb44762875', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f0e5706422ac403b629f4ad8a8a7e74b942a056', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9811d51c73cfb6db008d985cd059f49e83e11d94', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '364c6d620671a2a64a8ea74d4dcc7c3fd316139c', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f73f8107a6428991121d891d22be9772c8eb851', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f37a085a753c659b186ddcc21b1f05578a266d5', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a15cadcd0a2e82aad169b007f4b1d6a817e6b42b', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83ea466967cf39fe18e0c9990696c6a7381511c2', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}]",,35385366,,User,,4,,0,0
448417020,"Milestone 2.2: Achieve scores of 100% in lighthouse audits on the Learner_Dashboard, Library, Maintenance, Moderator pages.","## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

This PR does the following:

**.lighthouserc.json**
1. Add learner-dashboard and moderator page to the automated tests

**core/templates/pages/learner-dashboard-page/learner-dashboard-page.component.html**

Note: In the screenshots below the red icons mark the texts with insufficient color contrast in the library page

**Before**

1. Text: Collections [Foreground color]  # 8c8c8c 
2. Text: In Progress[Background color]   # 009688
3. Text: In Progress[Foreground color]    # 009688
4. Text: Explorations[Foreground color]  # 009688

![Screen Shot 2020-07-13 at 11 42 13 AM](https://user-images.githubusercontent.com/35385366/87341369-639a1100-c4fe-11ea-9863-a8fbfcec5979.png)

**After**

1. Text: Collections [Foreground color]  # 757575
2. Text: In Progress[Background color]   # 018477
3. Text: In Progress[Foreground color]    # 076962
4. Text: Explorations[Foreground color]  # 018477

![Screen Shot 2020-07-13 at 11 53 53 AM](https://user-images.githubusercontent.com/35385366/87342166-a90b0e00-c4ff-11ea-9bed-d8d4a1e11fae.png)

**core/templates/pages/library-page/library-page.directive.html**

Note: In the screenshots below the red icons mark the text with insufficient color contrast in the library page

**Before**

1. Text: Begin your adventure by browsing our explorations [Foreground color]  # 04857c

![Screen Shot 2020-07-13 at 11 43 36 AM](https://user-images.githubusercontent.com/35385366/87341515-9ba15400-c4fe-11ea-851c-c049a272536b.png)

**After**

1. Text: Begin your adventure by browsing our explorations [Foreground color]  # 047C74

![Screen Shot 2020-07-13 at 11 51 11 AM](https://user-images.githubusercontent.com/35385366/87341949-40239600-c4ff-11ea-8dd6-b2b887d75fad.png)


## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.
",True,9899,https://api.github.com/repos/oppia/oppia/pulls/9899,https://github.com/oppia/oppia/pull/9899,closed,7,5,3,2,11,0,0,1,[],2020-07-13 18:24:30+00:00,2020-07-21 00:51:53+00:00,628043.0,"7 days, 6:27:23",[],"[{'commit_sha': 'a41d14e1ffd9bc7e3de7802a2618aff06c3ecae7', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13394f78e534cc0f424a9399eb66a79d6c47b06c', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}]",,35385366,,User,,4,,0,0
451520407,"Milestone 2.3: Achieve scores of 100% in lighthouse audits on the Notification_dashboard, Privacy-policy, and Practice_session pages","## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

To access each webpage follow the instructions below

**Notifications Dashboard**

1. Click on notification link in the profile menu on the top right corner 

**Privacy-policy**

1. Go to the url localhost:8181/privacy-policy

**Practice_Session**

1. Login to Oppia. (as admin, if locally).
2. (if done locally) Assign yourself the admin role on the admin page.
3. Select the topics and skills dashboard button.
4. Create a skill, with at least 5 questions.
5. Create a topic and assign the skill to the topic.
6. Edit the question and assign the skill to a subtopic.
7. Navigate to the topic page (using the preview button in the topic editor or going to the URL directly (/topic/<topicName>))
8. Click the practice tab and get redirected the practice_session page

**This PR does the following:**

1. Adds labels to controls that aren't labeled
2. Provides empty alt attributes to decorative images to ensure that they are ignored by assistive technologies [decorative images documentation](https://www.w3.org/WAI/tutorials/images/decorative/)
3. Uses `tabindex` tag to fix an issue where certain interactive elements in the topic editor and skill editor were not keyboarded focusable. [tabindex documentation](https://webaim.org/techniques/keyboard/tabindex)


## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.
",True,9950,https://api.github.com/repos/oppia/oppia/pulls/9950,https://github.com/oppia/oppia/pull/9950,closed,20,13,9,9,9,9,1,2,[{'name': 'frontend'}],2020-07-17 22:44:45+00:00,2020-07-26 18:50:12+00:00,763527.0,"8 days, 20:05:27","[{'comment_id': 457650177, 'comment_body': 'Why are the class and src tags quoted together like this? Also, can you align the tags with the alt tag?', 'comment_created': datetime.datetime(2020, 7, 20, 19, 45, 5, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 458912376, 'comment_body': 'Done, I think they are generating HTML based on what button is passed into the function. I think it is quoted like this to avoid going over the 80 character limit in the linter.', 'comment_created': datetime.datetime(2020, 7, 22, 16, 14, 23, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 458924960, 'comment_body': '@jimbyo I think we need to remove the extra quote before class.\r\n```suggestion\r\n              class=""action-button-icon"" src=""\r\n```', 'comment_created': datetime.datetime(2020, 7, 22, 16, 30, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 459102135, 'comment_body': 'extra double quote?', 'comment_created': datetime.datetime(2020, 7, 22, 21, 45, 36, tzinfo=datetime.timezone.utc), 'commenter': 'aks681', 'type': 'User'}, {'comment_id': 459311842, 'comment_body': 'Maybe fill in something like ""empty profile picture""?', 'comment_created': datetime.datetime(2020, 7, 23, 9, 5, 29, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 459313452, 'comment_body': 'Not sure how decorative it is.', 'comment_created': datetime.datetime(2020, 7, 23, 9, 8, 42, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 459550148, 'comment_body': 'Yes. Removed', 'comment_created': datetime.datetime(2020, 7, 23, 15, 47, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 459550865, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 23, 15, 48, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 459768832, 'comment_body': 'nit:\r\n```suggestion\r\n                   src=""${getStaticImageUrl(\'/icons/rocket@2x.png\')}""/>\r\n```', 'comment_created': datetime.datetime(2020, 7, 23, 22, 44, 56, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}]","[{'commit_sha': 'f62cba4c7c7c058c2daa59c42ba23fb8083f3eec', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99a88cc8d6110f0ccfb6e9698c8121330770168f', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '930a9d919793e3796dccc1436b367bcc2a2950f6', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71d7c2e62b9d6f32d26d0cd43b0c053655561f0e', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98044c196699814924c90de9ebf35a894be3b244', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78a5122694e635ce77362eb2e81b6b7933f607fe', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '453aa9c23f89c7acff2f24f2588efa6bf2bcff46', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c5fd79d7a281e1c700b99770b04b43242dd6e6d', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe8f38fad0e6f04981d97167f7653ab48d4dd0e5', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}]",,35385366,,User,,4,,0,0
454895817, Milestone 2.4: All action keyboard shortcuts for the Library Page and Exploration Player and their e2e test are added.,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR does the following: Adds action keyboard shortcuts for the Library and Exploration Player Pages. It also adds E2E tests for them in the accessibility suite.

**New Keyboard Shortcuts**

[Keyboard shortcuts design doc link](https://docs.google.com/document/d/1y6opc2FCS9fkSDT5hdjXCNksVfc9ioEmpKysbtJdhRo/edit#bookmark=id.16ldmzy0tu1)

**Library Page**

S - Move focus to Skip to Main Content button
/ - Move focus to search bar in the library page
C - Move focus to category bar in library page## Essential Checklist

**Exploration Viewer**

S - Move focus to Skip to Main Content button
J - Move focus to next card button
K - Move focus to the “previous card” button

**E2E tests for keyboard shortcuts**
Library Page

1.) E2E test for keyboard shortcut S

1.  Press S on Library page
2.  Check if focus is on skip to main content button
3.  Move the focus away with tab
4.  Check if focus is not on skip to main content button
5.  Press S on Library page
6.  Check if focus is on skip to main content button

2.) E2E test for keyboard shortcut /

1.  Press / on Library page
2.  Check if focus is on search bar
3.  Move the focus away with tab. 
5. Check if focus is not on search bar
6.  Press / on Library page
7.  Check if focus is on search bar

3.) E2E test for keyboard shortcut C

1.  Press C on Library page
2.  Check if focus is on category bar
3.  Move the focus away with tab
4.  Check if focus is not on category bar
5.  Press C on Library page
6.  Check if focus is on category bar 

Library Page

1.) E2E test for keyboard shortcut S

1.  Press S on ExplorationPlayer page
2.  Check if the focus is on skip to main content button
3.  Move the focus away with tab
4.  Check if the focus is not on skip to main content button
5.  Press S on ExplorationPlayer page
6.  Check if the focus is on skip to main content button

2.) E2E test for keyboard shortcut K

1. Press K on ExplorationPlayer page
2. Check if focus is on the back button
3. Move the focus away with tab 
4. Press K on ExplorationPlayer page
5. Check if focus is on the back button
6. Press Enter to go to the previous card


3.) E2E test for keyboard shortcut J

1.  Press J on ExplorationPlayer page
2.  Check if the focus is on next button
3.  Move the focus away with tab
5.  Press J on ExplorationPlayer page
2.  Check if the focus is on next button
6. Press Enter to go to next card

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.
",True,10002,https://api.github.com/repos/oppia/oppia/pulls/10002,https://github.com/oppia/oppia/pull/10002,closed,282,12,11,42,25,67,1,2,[{'name': 'PR: LGTM'}],2020-07-22 05:48:11+00:00,2020-07-29 22:02:27+00:00,663256.0,"7 days, 16:14:16","[{'comment_id': 459068197, 'comment_body': 'Is this just to test that there are no errors when triggering the shortcuts?', 'comment_created': datetime.datetime(2020, 7, 22, 20, 37, 40, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 459077651, 'comment_body': ""Why do you have to TAB twice here and below? If it's absolutely necessary, then please add a comment explaining why."", 'comment_created': datetime.datetime(2020, 7, 22, 20, 55, 43, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 459527845, 'comment_body': ""It's actually to ensure 100 percent coverage for front end coverage checks. In this case, it creates a dummyElement for the mousetrap scripts to act upon."", 'comment_created': datetime.datetime(2020, 7, 23, 15, 16, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 459528914, 'comment_body': ""It's step 3 of the E2E tests: Move the focus away with tab \r\n\r\nI will add comments"", 'comment_created': datetime.datetime(2020, 7, 23, 15, 17, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 459716209, 'comment_body': 'Per our offline discussion, please remove duplicate line.', 'comment_created': datetime.datetime(2020, 7, 23, 20, 42, 20, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 459717097, 'comment_body': 'Alternatively, maybe you could create the elements, e.g. like what is done [here](https://github.com/oppia/oppia/blob/develop/core/templates/components/ck-editor-helpers/ck-editor-copy-toolbar/ck-editor-copy-toolbar.component.spec.ts#L52). Maybe the other reviewers can comment on this as well.', 'comment_created': datetime.datetime(2020, 7, 23, 20, 44, 8, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 459809714, 'comment_body': ""Why are we changing this? Unless there's a reason let's avoid messing with licensing comments"", 'comment_created': datetime.datetime(2020, 7, 24, 1, 15, 30, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 459810137, 'comment_body': ""Could you move these to above the `describe(...` line? Technically here's fine too, but by convention we put the utility functions and selectors at the top of the file after the imports"", 'comment_created': datetime.datetime(2020, 7, 24, 1, 17, 33, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 459810343, 'comment_body': 'Just a heads up that you can use our actions utilities to handle the waitFor statements for you: https://github.com/oppia/oppia/blob/develop/core/tests/protractor_utils/action.js', 'comment_created': datetime.datetime(2020, 7, 24, 1, 18, 37, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 459810644, 'comment_body': ""`waitFor.pageToFullyLoad` only waits for the loading indicator to disappear, so it doesn't work for pages that don't show that UI element.  I'm not sure, but my guess is that there isn't always a loading indicator when you call this function."", 'comment_created': datetime.datetime(2020, 7, 24, 1, 19, 52, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 459812040, 'comment_body': 'Can you move this selector to the top of the file? Ditto for the rest of the selectors', 'comment_created': datetime.datetime(2020, 7, 24, 1, 26, 25, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 459812387, 'comment_body': 'You repeat this pattern a lot. Maybe make this a function to reduce the repetition?', 'comment_created': datetime.datetime(2020, 7, 24, 1, 28, 9, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 459812563, 'comment_body': 'This pattern also seems common enough to make into a function', 'comment_created': datetime.datetime(2020, 7, 24, 1, 29, 4, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 459812729, 'comment_body': 'why the double TAB? Ditto below', 'comment_created': datetime.datetime(2020, 7, 24, 1, 29, 47, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 459813296, 'comment_body': ""Can you add waitFor statements to check that the elements on this page have loaded? Elements can still be loading when the loading indicator disappears, so it's probably better to check for the specific elements you need. Ditto throughout this file."", 'comment_created': datetime.datetime(2020, 7, 24, 1, 32, 22, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 459813561, 'comment_body': 'These tests often seem to follow the same basic pattern: send a key and then check that the focus has moved to or from an element. This seems like it could be made into a function you reuse across these tests?', 'comment_created': datetime.datetime(2020, 7, 24, 1, 33, 49, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 459813726, 'comment_body': ""Make sure a loading indicator is actually shown here, otherwise this won't do what you expect"", 'comment_created': datetime.datetime(2020, 7, 24, 1, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 460166038, 'comment_body': 'How big is this library? Gziped and minified.', 'comment_created': datetime.datetime(2020, 7, 24, 16, 40, 25, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 460167679, 'comment_body': 'Could you have one function where will you bind all three buttons?', 'comment_created': datetime.datetime(2020, 7, 24, 16, 43, 23, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 460168493, 'comment_body': 'Ditto in library', 'comment_created': datetime.datetime(2020, 7, 24, 16, 44, 56, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 460386002, 'comment_body': 'In my Milestone 2.5 PR I create a keyboard-shortcut.service and have a function to bind all three functions. Do you think its okay to leave as is in this milestone?', 'comment_created': datetime.datetime(2020, 7, 25, 9, 25, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460386107, 'comment_body': 'My mistake. Will be reverting the quotes from single quote to double quote', 'comment_created': datetime.datetime(2020, 7, 25, 9, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460386364, 'comment_body': 'It is around 2kb minified and gzipped and 4.5kb minified', 'comment_created': datetime.datetime(2020, 7, 25, 9, 29, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460397606, 'comment_body': 'https://github.com/oppia/oppia/pull/10036/files', 'comment_created': datetime.datetime(2020, 7, 25, 11, 53, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460397694, 'comment_body': ""I removed the relevant code so it isn't needed for now. "", 'comment_created': datetime.datetime(2020, 7, 25, 11, 54, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460397732, 'comment_body': 'Done. Switched to elementToBeClickable', 'comment_created': datetime.datetime(2020, 7, 25, 11, 55, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460397769, 'comment_body': 'Okay, I will move it.', 'comment_created': datetime.datetime(2020, 7, 25, 11, 55, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460397808, 'comment_body': 'Ok I will move all the selectors', 'comment_created': datetime.datetime(2020, 7, 25, 11, 56, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460397834, 'comment_body': 'Ok I will go make the function', 'comment_created': datetime.datetime(2020, 7, 25, 11, 56, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460397840, 'comment_body': 'I will remove the duplicate tabs', 'comment_created': datetime.datetime(2020, 7, 25, 11, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460397862, 'comment_body': 'Done. See checkActionShortcuts function', 'comment_created': datetime.datetime(2020, 7, 25, 11, 56, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460397870, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 25, 11, 56, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460397889, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 25, 11, 57, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460397900, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 25, 11, 57, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460397942, 'comment_body': 'I will remove pageToFullyLoad here ', 'comment_created': datetime.datetime(2020, 7, 25, 11, 57, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460454879, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 25, 22, 59, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460455319, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 25, 23, 6, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460455386, 'comment_body': 'I will remove the double tabs', 'comment_created': datetime.datetime(2020, 7, 25, 23, 7, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460455393, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 25, 23, 7, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460468575, 'comment_body': 'Done, made function checkActionShortcuts', 'comment_created': datetime.datetime(2020, 7, 26, 2, 24, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460468579, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 26, 2, 24, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460468824, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 26, 2, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460477507, 'comment_body': ""I don't think I can approve an addition here. But you don't seem to use it in any case?"", 'comment_created': datetime.datetime(2020, 7, 26, 4, 41, 20, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 460517284, 'comment_body': 'Sure, okay.', 'comment_created': datetime.datetime(2020, 7, 26, 11, 48, 15, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 460529325, 'comment_body': 'Should we check if the expected behaviour after triggering these keys work? Unit tests are usually structured such that an action is perform and then the data / result of that action is asserted against some test data -- this helps catch regressions. If we simply cover the lines, without really checking the logic of the method being tested, we will fail to catch regressions and bugs.', 'comment_created': datetime.datetime(2020, 7, 26, 13, 41, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 460529606, 'comment_body': 'Please give it a better and more descriptive name. eg. contineToNextCardButton\r\nDitto below.', 'comment_created': datetime.datetime(2020, 7, 26, 13, 43, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 460529820, 'comment_body': 'Do we use camelCase for id in other files?', 'comment_created': datetime.datetime(2020, 7, 26, 13, 46, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 460568151, 'comment_body': 'That example looks nice, I have switched to using the method instead', 'comment_created': datetime.datetime(2020, 7, 26, 20, 10, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460568173, 'comment_body': 'Got it, Done', 'comment_created': datetime.datetime(2020, 7, 26, 20, 10, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460568202, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 26, 20, 10, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460568231, 'comment_body': 'Yes we do', 'comment_created': datetime.datetime(2020, 7, 26, 20, 11, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460568485, 'comment_body': ""Oh, yes I no longer use `browser.sleep() ` I will remove the file exception from 'general_purpose_linter.py'. "", 'comment_created': datetime.datetime(2020, 7, 26, 20, 14, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460630268, 'comment_body': 'In creating the function, we seem to have lost the check that the IDs of the active element and `elementToFocus` are different after switching focus away. Could we put that check back?', 'comment_created': datetime.datetime(2020, 7, 27, 3, 39, 53, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 460630561, 'comment_body': 'Can you add a waitFor to make sure the element has loaded first?', 'comment_created': datetime.datetime(2020, 7, 27, 3, 41, 1, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 460630908, 'comment_body': 'Can you check that the continue action actually gets triggered? Maybe check that the next page in the exploration appears. Ditto for the previous and next buttons below.', 'comment_created': datetime.datetime(2020, 7, 27, 3, 42, 35, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 460631110, 'comment_body': 'These tests are all so small, they can probably be combined into one block', 'comment_created': datetime.datetime(2020, 7, 27, 3, 43, 42, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 460640692, 'comment_body': ""I'm not sure which waitFor I'm supposed to use to make sure the element is loaded. Normally I would use waitFor.visibilityof() but the skiptomaincontent button is invisible so it doesn't work with that. Do you have any recommendations? @U8NWXD "", 'comment_created': datetime.datetime(2020, 7, 27, 4, 29, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 461186846, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 27, 21, 40, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 461217447, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 27, 22, 58, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 461217790, 'comment_body': ""It already implicitly checks that the continue action gets triggered because if it doesn't  \r\n`await waitFor.elementToBeClickable(backButton);` will timeout because it isn't available until the next card loads in.\r\n\r\nDitto for the rest."", 'comment_created': datetime.datetime(2020, 7, 27, 22, 59, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 461247140, 'comment_body': ""@jimbyo it looks like we don't have a `waitFor` function for it yet, but you can add one to wait for the presence of an element. You should be able to just make a copy of the [`visibilityOf`](https://github.com/oppia/oppia/blob/a959629496ccf5213ca182e5bec8944218d6641f/core/tests/protractor_utils/waitFor.js#L86) function, but replace `until.visibilityOf` with `until.presenceOf`, which is documented here: https://www.protractortest.org/#/api?view=ProtractorExpectedConditions.prototype.presenceOf"", 'comment_created': datetime.datetime(2020, 7, 28, 0, 30, 7, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 461261862, 'comment_body': 'I actually found a pretty good one that exists. `waitFor.elementAttributeToBe() `works quite well. I used it for the skip to main content link.', 'comment_created': datetime.datetime(2020, 7, 28, 1, 22, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 461919606, 'comment_body': 'Why are the duplicate tabs back?', 'comment_created': datetime.datetime(2020, 7, 28, 22, 10, 23, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 461922895, 'comment_body': 'Great! Why only for the skip to main content link? Why not add a waitFor in `checkActionShortcuts` to make sure we wait for all the elements, not just the main content link?', 'comment_created': datetime.datetime(2020, 7, 28, 22, 14, 49, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 461926138, 'comment_body': 'Could you add a comment explaining this? We\'re assuming that we start at the beginning of the exploration, then click ""continue"", ""back"", and ""next"", in that order. It would be really easy for someone to add a step in-between those (e.g. a ""next"" to the start) and not realize they\'re breaking your assumptions (because then the card where you click ""continue"" would have a ""back"" button).', 'comment_created': datetime.datetime(2020, 7, 28, 22, 20, 14, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 461958673, 'comment_body': 'Sorry removed', 'comment_created': datetime.datetime(2020, 7, 28, 23, 53, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 461958743, 'comment_body': 'I have added the comment', 'comment_created': datetime.datetime(2020, 7, 28, 23, 53, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}]","[{'commit_sha': '618ace0099df07bb1b6009d9e09575d38e9a65d5', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aef2d466920811317d4c2e624dbd962047992fa3', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00dc8cf5aa60f8f87f04184b56b2d93c75b98771', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '379c1ba8ba32cb9cfbb6f77701df4d3a1506a83d', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34c91e46417e110ae0dd233ea6d2267d4113ebc9', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b91c427213ee0d2f90c1749419135e78ad05b09', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f584f307d3b335cd70980b755ace9a660e5ac87d', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b9b43ce6a1eb9e587f96da100c310c952b8d90f', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ec0f267ef23226adb8de501515fb3a6203aa734', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c9f0d7aae28195f80cb6da779e3fb2f4c0ecd03', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1a663048a9d6a01bc9d61c3f0edcee8c6d9f575', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2f0c22d041850a898eb0a2f8ba0027efd2e3ef3', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d6abc1651b866a4c97736022817963c713ef3ba', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70e0418d74379552d0b326d4772f5006a381e9ef', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adbbf4112fcccf7f4ba013f8aac7a6fe6cd55039', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69282919a66dc851d9a93d28846761b3921032bc', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68f9d5b24d0ff8c5ff472ce1638091d7be636d83', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0719d1397f430e6838e716ca462589c1347ca30', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '017a5b11b0477088c749f15c0711ec3146627858', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a06bfda40f50e5c95919857adc826d1fc0a8d3e8', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bb094896af6bea3d5c377886be4bebadc545cfb', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc78ddc62db10fb7facde136384a5ba557871134', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4401e042ec013e377f555fcaf066970e496675e', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ba7cf374cbfd517b0b4f632dbfd0eff9034f9d8', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d15252f94bd1c1dbf650c8bd238f53c2a84e8e2', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c682e1ba6f5b0e4941ff24fe7f7a9db718044db6', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c3ae7aa6bbfd7a03df0d2bf81edc7fbe81c1b87', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6b32aa43aa0cb81ef8e016d452f95bf98dc8992', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '467ec41467a48f6e298aea8fbabb54b13773549a', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef40411d51e3ceac94f57442337d1752073d34a7', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05f2e55c6fbca89697b01153eb326cd6b5afa5a2', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49d6e00fadefd276997b67740247a23f1525ed16', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d42f3e7571eb40b5e775473f2e85db534caedb9', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c63cbb3a42a9b55cb8c52bff32b5c308e99dcd8', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a52e6cc2e20992fcc2658cffeace021e864790f', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '016ba8c881015b84c8b18f11910a9e3e703ad208', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37d8ae105b48c3288e41126c2599642feda1d821', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d2c2cc20f657c5b51672349a1cb023351030529', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f88bdd6bbe75fa78d9a463c93b60ed27aed9454', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7affd504a99d22ca00bb4ce9bc0f77227b907ee', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e1581ae6a1fbcbc6a88bbf317910bdbc6960eea', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8646f960e141c5fb632144a44789d10062d93262', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}]",,35385366,,User,,4,,0,0
456593611,Milestone 2.5: All navigation keyboard shortcuts and their e2e test are added.,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

This PR adds navigation keyboard shortcuts and their E2E tests

Design Doc: Product Design [link](https://docs.google.com/document/d/1y6opc2FCS9fkSDT5hdjXCNksVfc9ioEmpKysbtJdhRo/edit#bookmark=id.fsw7vzbx6t12)

These navigation shortcuts are global and can be accessed through 

ctrl + 0 - Get Started page
ctrl + 1 - Library page 
ctrl + 2 - Creator Dashboard
ctrl + 3 - Learner Dashboard
ctrl + 4 - About page 
ctrl + 5 - Notification page
ctrl + 6 - Preferences page


## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.
",True,10036,https://api.github.com/repos/oppia/oppia/pulls/10036,https://github.com/oppia/oppia/pull/10036,closed,697,12,12,43,17,77,1,1,[{'name': 'PR: LGTM'}],2020-07-25 09:41:12+00:00,2020-07-30 21:07:35+00:00,473183.0,"5 days, 11:26:23","[{'comment_id': 460388594, 'comment_body': ""Hi @jimbyo, one question -- would you still like to contribute to the Oppia project after GSoC?\r\n\r\nIf so, I think this is OK, but if not, perhaps we should assign it to someone else.\r\n\r\nAlso, shouldn't the convention be keyboard-shortcut.service.ts? "", 'comment_created': datetime.datetime(2020, 7, 25, 9, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 460393626, 'comment_body': 'Yes, I would like to continue to contribute, and I have changed the file names.', 'comment_created': datetime.datetime(2020, 7, 25, 11, 1, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460454269, 'comment_body': 'Nit: Uncapitalize Href here (in the argument)? ', 'comment_created': datetime.datetime(2020, 7, 25, 22, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 460454312, 'comment_body': 'What exactly is this testing (here and below)? That no errors occur while triggering the shortcuts? Each test should be asserting something. In this case we want to be verifying that each keyboard shortcut performs its corresponding action.', 'comment_created': datetime.datetime(2020, 7, 25, 22, 50, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 460455320, 'comment_body': ""I know that you're trying to minimize code duplication, but in tests, it's okay to be a bit redundant for clarity. Let's have a separate test case for each page and not hide the actual test details in a helper function. The reader should be able to look at a test case and understand what is happening without looking at the helper functions. \r\n"", 'comment_created': datetime.datetime(2020, 7, 25, 23, 6, 7, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 460455332, 'comment_body': 'Can this be placed in a `beforeEach`?', 'comment_created': datetime.datetime(2020, 7, 25, 23, 6, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 460455404, 'comment_body': ""Shouldn't you first navigate to some starter page that's different from the shortcut URLs?"", 'comment_created': datetime.datetime(2020, 7, 25, 23, 7, 19, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 460477397, 'comment_body': 'Yes it is the argument and done', 'comment_created': datetime.datetime(2020, 7, 26, 4, 39, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460477658, 'comment_body': ""I think it already does with the lines    \r\n```\r\nawait browser.get(url);\r\nawait waitForUrlRedirection(url);\r\n```\r\nIn this case `await testNavigationShortcuts('community-library');` It would first load to the community-library webpage"", 'comment_created': datetime.datetime(2020, 7, 26, 4, 43, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460478584, 'comment_body': 'I put it in a `beforeall `instead as we discussed offline', 'comment_created': datetime.datetime(2020, 7, 26, 4, 57, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460480463, 'comment_body': ""I am testing whether the keyboard shortcuts can successfully be bound and can properly be triggered. Is that too limited? I mostly do the verification in the E2E testing. I guess I'm a little confused about the purpose of unit tests vs E2E tests."", 'comment_created': datetime.datetime(2020, 7, 26, 5, 24, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460480726, 'comment_body': 'Got it, made some unique tests', 'comment_created': datetime.datetime(2020, 7, 26, 5, 28, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460498518, 'comment_body': 'Unit tests should verify the behavior of individual pieces of an API, e.g. checking a function returns an expected value. E2E tests should verify some user flow ""end to end"" (start to finish), which may interact with multiple APIs across a system.\r\n\r\nSince each of the functions you created bind keys to some kind of action, the unit tests need to verify that after calling each new function, each key performs the expected action. Here the trigger functions are being called, but nothing is being asserted. How do we know that the trigger calls are doing anything?', 'comment_created': datetime.datetime(2020, 7, 26, 8, 39, 54, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 460500200, 'comment_body': ""Right, but since you're passing in each page URL, you're navigating to one page at least twice, right? For example, when you call this function for 'get-started', wouldn't you navigate to the 'get-started' page first? Just seems odd that you would navigate to the page under test first, when you're trying to test that pressing a key navigates to that same page (the test may be passing because you already started off at a certain page)."", 'comment_created': datetime.datetime(2020, 7, 26, 8, 56, 20, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 460500878, 'comment_body': ""Sorry if I wasn't clear, but what I meant by [this](https://github.com/oppia/oppia/pull/10036#discussion_r460455320) comment was to get rid of the `testNavigationShortcuts` function as it is obscuring what actions are being taken and what assertions are being made. In each unit test you can repeat the same lines, e.g. for the get started test:\r\n\r\n```\r\nawait browser.get('some url not related to the url under test, maybe the home page?');\r\nawait waitForUrlRedirection('some url not related to the url under test, maybe the home page?');\r\n\r\nawait triggerKeys('0');\r\nawait waitForUrlRedirection(getStartedUrl);\r\n\r\nexpect(await browser.getCurrentUrl()).toEqual(getStartedUrl);\r\n```\r\n\r\nIn test code, it's okay to have some code duplication for readability/clarity."", 'comment_created': datetime.datetime(2020, 7, 26, 9, 3, 4, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 460516506, 'comment_body': 'Sort these alphabetically please.', 'comment_created': datetime.datetime(2020, 7, 26, 11, 41, 7, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 460564860, 'comment_body': '@jimbyo ping.', 'comment_created': datetime.datetime(2020, 7, 26, 19, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460564897, 'comment_body': 'Sort these alphabetically as well.', 'comment_created': datetime.datetime(2020, 7, 26, 19, 35, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460578619, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 26, 22, 1, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460578622, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 26, 22, 1, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460581403, 'comment_body': ""I still don't see the point of navigating to a random URL. Let's say if I wanted to test the 'get-started' page shortcuts. If I navigated to a random page like the splash page first, and then started testing from there. I wouldn't be testing if navigation shortcuts work for the 'get-started' page, I would be testing if they work for the splash page."", 'comment_created': datetime.datetime(2020, 7, 26, 22, 29, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460582751, 'comment_body': ""Ok added assertions to unit tests for the action shortcuts. They assert that the focus has changed once the key is pressed. \r\n\r\nThere isn't a way to assert that the navigation shortcuts successfully redirect, because jasmine does not allow page redirection in its testing environment. "", 'comment_created': datetime.datetime(2020, 7, 26, 22, 44, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460583338, 'comment_body': 'Ok got it!', 'comment_created': datetime.datetime(2020, 7, 26, 22, 51, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460593820, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 27, 0, 29, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 460632189, 'comment_body': 'Since these are constants, please make them all-caps', 'comment_created': datetime.datetime(2020, 7, 27, 3, 48, 52, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 460632317, 'comment_body': ""This name doesn't suggest that we're holding down CTRL along with the key"", 'comment_created': datetime.datetime(2020, 7, 27, 3, 49, 31, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 460632437, 'comment_body': 'Could you add this to the `waitFor.js` file?', 'comment_created': datetime.datetime(2020, 7, 27, 3, 49, 59, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 460632926, 'comment_body': 'Can you wait for the URL to match exactly (and not just contain) the expected URL? Then the `expect(...` would be unnecessary', 'comment_created': datetime.datetime(2020, 7, 27, 3, 52, 15, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 460633114, 'comment_body': ""The fact that the correct URL has loaded does not necessarily mean the page has loaded. It'd be more reliable to wait for elements on the page. Ditto for the rest of these tests"", 'comment_created': datetime.datetime(2020, 7, 27, 3, 53, 18, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 460646106, 'comment_body': ""@U8NWXD Are you suggesting I don't use `waitForUrlRedirection('community-library'); ` and instead use some sort of `waitForElementsToLoad` function on the page.\r\n\r\nIf so should I disregard these two comments above:\r\nhttps://github.com/oppia/oppia/pull/10036#discussion_r460632437\r\nhttps://github.com/oppia/oppia/pull/10036#discussion_r460632926\r\n\r\nand just delete the `waitForUrlRedirection()` function\r\n\r\n"", 'comment_created': datetime.datetime(2020, 7, 27, 4, 54, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 461055773, 'comment_body': ""I see. Then, how about we use the spy on the `setHref` function to record which URLs have been set after calling the function. You can then at least assert that `setHref` has been called for the expected URLs. Otherwise, this test isn't really doing anything."", 'comment_created': datetime.datetime(2020, 7, 27, 17, 34, 39, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 461061738, 'comment_body': 'Does `await waitFor.pageToFullyLoad();` work here?', 'comment_created': datetime.datetime(2020, 7, 27, 17, 45, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 461126951, 'comment_body': ""@sagangwee No It only works on pages with the loading indicator \r\n\r\nHmm... I actually think waitingForUrlRedirection should be okay here. The navigation shortcuts tests don't need the elements of the page to load in. The navigation shortcuts don't interact with any of the loaded elements, and the test just need to know that the keyboard shortcuts triggered a URL redirection from the previous page. I think it should be sufficient to use \r\n`waitFor.urlRedirection`\r\n\r\nWhat do you think? @U8NWXD "", 'comment_created': datetime.datetime(2020, 7, 27, 19, 44, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 461169412, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 27, 21, 5, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 461169617, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 27, 21, 5, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 461169678, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 27, 21, 5, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 461170929, 'comment_body': 'done and removed the unnecessary expects', 'comment_created': datetime.datetime(2020, 7, 27, 21, 8, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 461247998, 'comment_body': 'Is this needed anymore?', 'comment_created': datetime.datetime(2020, 7, 28, 0, 33, 9, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 461248156, 'comment_body': 'Does the `DEFAULT_WAIT_TIME_MSECS` not work here? Why?', 'comment_created': datetime.datetime(2020, 7, 28, 0, 33, 49, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 461248730, 'comment_body': ""Why don't we use the constant `GET_STARTED_URL` here? Ditto for the other URLs below"", 'comment_created': datetime.datetime(2020, 7, 28, 0, 35, 34, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 461249369, 'comment_body': 'That makes sense. I now agree that `waitFor.urlRedirection` is fine here', 'comment_created': datetime.datetime(2020, 7, 28, 0, 37, 55, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 461251579, 'comment_body': ""@jimbyo Actually, `waitFor.urlRedirection` works only when we are waiting for the destination page to load after you use the shortcut. When we are waiting for the page from which the shortcut will be triggered, though, we need the page to have loaded so that the code that handles the shortcut is available. To see why this could be problematic, imagine that at the start of the tests we navigate to the getting started page. Now let's say the URL has loaded but the page hasn't. Then we would send the keyboard shortcut, but since the page hasn't loaded, it won't be handled properly. Does that make sense?"", 'comment_created': datetime.datetime(2020, 7, 28, 0, 45, 51, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 461264709, 'comment_body': 'Hmm, I think that makes sense. I can actually test it out. The admin page should not have navigation shortcuts enabled. If I can use the keyboard shortcuts in the admin page. Then it means that I am not properly testing the keyboard shortcuts on the page I am going to.', 'comment_created': datetime.datetime(2020, 7, 28, 1, 32, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 461273176, 'comment_body': ""@U8NWXD Hmm so in your example are you saying \r\n1.) That there is a chance the keyboard shortcuts wouldn't do anything \r\n2.) Or that the previous page's navigation shortcuts would be tested instead of the one we want?\r\n\r\nBecause regarding the first point, it's been handling the keyboard shortcuts very consistently so far, so I don't think that should be an issue.\r\n\r\nRegarding the second possibility, I investigated a little and I did a manual test where I attempted to use the keyboard shortcuts while the page was redirecting, and it could not redirect them at all. \r\n\r\nI also ran a protractor test where I attempted to use keyboard shortcuts on the admin page (where the keyboard shortcuts are disabled).  If the previous page's shortcuts were still working, protractor would pass this test.\r\n\r\n```\r\n    await browser.get(GET_STARTED_URL);\r\n    await waitFor.urlRedirection('http://localhost:9001/get-started');\r\n\r\n    await holdCtrlAndPressKey('0');\r\n    await waitFor.urlRedirection(GET_STARTED_URL);\r\n\r\n    **await browser.get('admin');\r\n    await waitFor.urlRedirection('http://localhost:9001/admin');**\r\n\r\n    await holdCtrlAndPressKey('0');\r\n    await waitFor.urlRedirection(GET_STARTED_URL);\r\n```\r\n\r\nAnd it correctly got stuck on that page with the output\r\n\r\n```\r\n1) screenreader and keyboard user accessibility features should test the navigation shortcut ctrl+0\r\n  - Failed: URL redirection took too long\r\n  Wait timed out after 15010ms\r\n```"", 'comment_created': datetime.datetime(2020, 7, 28, 2, 3, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 461321804, 'comment_body': 'Typically the `it` string parameter should make sense if it was part of a phrase with the parent `describe` block. Here, the phrase ""screenreader and keyboard user accessibility features should test the navigation shortcut ctrl+0"", doesn\'t really make sense. The `it` string should also include the expected outcome of each test. Here we know that ctrl+0 is the subject of the test, but we don\'t know what is expected to occur from the name.\r\n\r\nMaybe the `describe` string should be something along the lines of \'keyboard shortcuts\' and each `it` string should be something like \'should navigate to X page when Y is pressed\'', 'comment_created': datetime.datetime(2020, 7, 28, 5, 10, 59, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 461329787, 'comment_body': ""Instead of setting boolean flags, what if we just record the href argument string in a variable. Then the test would look like the following:\r\n\r\n```\r\n...\r\n\r\nMousetrap.trigger('ctrl+0');\r\nexpect(href).toEqual('/get-started');\r\n\r\nMousetrap.trigger('ctrl+1');\r\nexpect(href).toEqual('/community-library');\r\n\r\n...\r\n```"", 'comment_created': datetime.datetime(2020, 7, 28, 5, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 461330251, 'comment_body': 'Ditto my `it` string comment below here as well.', 'comment_created': datetime.datetime(2020, 7, 28, 5, 39, 10, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 461352978, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 28, 6, 42, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 461353098, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 28, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 461353228, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 28, 6, 43, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 461473531, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 28, 10, 15, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 461473805, 'comment_body': 'It does work actually. I have changed it', 'comment_created': datetime.datetime(2020, 7, 28, 10, 15, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 461474441, 'comment_body': 'No it is not. Removed', 'comment_created': datetime.datetime(2020, 7, 28, 10, 17, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 461899429, 'comment_body': ""@jimbyo I am concerned about (1). As I understand it, the tests now are assuming that after the URL has loaded, the page's redirect-handling code loads before the next line in the test executes. This is a race condition that we should avoid if at all possible, even if in practice the test looks reliable. My reasoning here is that this test is going to be run dozens if not hundreds of times a month, so even if it only flakes 1% of the time, those will be flakes that block people's PRs from going in.\r\n\r\nRight now our e2e tests are so flaky that merging this PR probably wouldn't make much of a difference, but race conditions like this are hard to find (aside: this is why it's taking us so long to fix the e2e tests). Eventually we'll get the flakiness down far enough where we're trying to fix race conditions like this one, at which point we'll wish we had fixed it before the PR merged. It's so much easier to make sure the code is robust at the start than try to find the race condition later that I think it's worth being really careful about it. That's why I'm being so nit-picky.\r\n\r\nSince we just care that the page has loaded and not that any particular elements are available, you could wait for an element that's present on all Oppia pages. A cursory glance suggests that the `div` with class `oppia-content-container` might work? Then this change is just pasting the same `waitFor` statement over and over, so it shouldn't be too complicated I hope?"", 'comment_created': datetime.datetime(2020, 7, 28, 21, 44, 36, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 461987511, 'comment_body': 'Can you make this more specific? For example, `Content container taking too long to load`?', 'comment_created': datetime.datetime(2020, 7, 29, 1, 38, 54, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 461987959, 'comment_body': ""Can you add an HTML class that begins with `protractor-test-` and use that here instead? It looks like you'll only need to change three lines where `oppia-content-container` is used: https://github.com/oppia/oppia/search?q=oppia-content-container&unscoped_q=oppia-content-container"", 'comment_created': datetime.datetime(2020, 7, 29, 1, 40, 35, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 462003426, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 29, 2, 38, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 462003460, 'comment_body': 'done\r\n', 'comment_created': datetime.datetime(2020, 7, 29, 2, 38, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 462902563, 'comment_body': 'service*.ts (and remove the next line)', 'comment_created': datetime.datetime(2020, 7, 30, 10, 27, 55, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 462903364, 'comment_body': 'Use DOCUMENT maybe? (a wrapper for the document in angular)', 'comment_created': datetime.datetime(2020, 7, 30, 10, 29, 32, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 462903728, 'comment_body': 'Are we expecting a space after `>`? (not sure!)', 'comment_created': datetime.datetime(2020, 7, 30, 10, 30, 11, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 462904358, 'comment_body': 'Why we need this method in `keyboard shortcut service`?', 'comment_created': datetime.datetime(2020, 7, 30, 10, 31, 28, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 462904729, 'comment_body': 'Will it work for guest users? if yes, then will we allow them to navigate to the creator/learner dashboard?', 'comment_created': datetime.datetime(2020, 7, 30, 10, 32, 14, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 462906448, 'comment_body': 'Do we need `await` for `until.urlIs(url)`?', 'comment_created': datetime.datetime(2020, 7, 30, 10, 35, 43, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 462906963, 'comment_body': 'Why this change? I see a similar code on line 167.', 'comment_created': datetime.datetime(2020, 7, 30, 10, 36, 48, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 462913369, 'comment_body': 'Are we going to have a separate PR to use these methods?', 'comment_created': datetime.datetime(2020, 7, 30, 10, 50, 28, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 463885046, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 31, 23, 25, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 463885111, 'comment_body': 'Yes, and Done', 'comment_created': datetime.datetime(2020, 7, 31, 23, 25, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 465006425, 'comment_body': 'We need to wrap window.location.href in order to successfully mock the function for the frontend test. \r\nhttps://stackoverflow.com/questions/4792281/mocking-window-location-href-in-javascript', 'comment_created': datetime.datetime(2020, 8, 4, 12, 16, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 465006523, 'comment_body': 'No, it just sends them to the login page', 'comment_created': datetime.datetime(2020, 8, 4, 12, 16, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 465006903, 'comment_body': 'Yes, I believe it is needed because it is an async function and would raise a promise error otherwise.', 'comment_created': datetime.datetime(2020, 8, 4, 12, 17, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 465007266, 'comment_body': ""That was a duplicate I didn't catch earlier. Removed it "", 'comment_created': datetime.datetime(2020, 8, 4, 12, 17, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 465012271, 'comment_body': ""I don't think so. You can take a look in https://dzone.com/articles/using-casting-typescript"", 'comment_created': datetime.datetime(2020, 8, 4, 12, 26, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 465014976, 'comment_body': 'Is it important to use wrapper? It seems in other files they just use the base document. see core/templates/services/search.service.spec.ts. ', 'comment_created': datetime.datetime(2020, 8, 4, 12, 32, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 469575550, 'comment_body': 'I see, thanks for the link! :)', 'comment_created': datetime.datetime(2020, 8, 12, 22, 11, 51, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 469613582, 'comment_body': 'Should we use window-ref.service.ts in test? ', 'comment_created': datetime.datetime(2020, 8, 13, 0, 3, 58, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 469614413, 'comment_body': 'I see, thanks for the explanation!', 'comment_created': datetime.datetime(2020, 8, 13, 0, 6, 48, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}]","[{'commit_sha': 'a5a953b8eb3bf79022dc412c0c5a826cb3932279', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d1f0bb71aef4d8ef5879724cb556a9ab2c358b8', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1bbff621aeaf71eaa37e4a89cf169474d7faab5', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7aee76a2dd7d3490681a81b921f32dc7b045367a', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18ddd47ee9a1ceceec8d68ee000a8c46f2149bd5', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb28320ad70e597b75bcf527ce8bb39b2646ff1d', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '555a6407cb29098025e46c5ac0e6f8a08c849d09', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c4312387abbb53fe74bbe28e647394667c34783', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4936970720d247e80916ece21c341fbcc94088df', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9126375b0ee02715e9f904f7735861ac9e369006', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fbe227196af931cc854f15040fcf6a88fb007de', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7efe9d11979d0bbd4620d4346061010e1abe95b5', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b5f7af4e55ac5c4733e25b3ae8aec48cfe02fec', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e060e8c1d4be536c39275499004ad4d6372b73e1', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5965ac40688a5c3fa0baea76dbbae7d18778e99c', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e8f5c68c2a7eb637f2fa393bca6e411d2d6fdac', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd66009df89051091feeea3753442416fe9d00a07', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41b6621fe29229ad00cdb2d34be8cd7b86bf8386', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed557699df340f7176e06fc910e74a4656800402', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f65c2ce4fb73898ce1a065e6eda030a85a54143', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9743912616ab90aa52c8d4277044515f06829a15', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b2b40e03402f09fc07dc18e30e191799c9c505c', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '504bcfa171088d821bc00d8162e8b5d997dd283b', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12e72c485506b36d37b19a97a5b1bb0d5848fe8e', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1751761c3a9db3698aade0be6d9ea1e64c50ff83', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1701324df7da646fbd5440b4b081fc07df7b964b', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6c899737f1760bf7cdb74b519d8619786d03532', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aea0fdcb7d4e4ce7992075862eddc164e8e111f6', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '635c83304317a2f137dc46c51f7d9d42434028b4', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e8cb277f50f7f2f510e8e2680435cdd87d78e54', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3117986aaf4284eeb6024bcc0dd03fc9dfe913c9', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd99531497d53c29779ff92b9e434578d52368b97', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb79b860fe6e18e21eb187896a193b1b0dde1734', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b7dc7828718c5280a66464c4f9fc5ef0fa4d16e', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cda668ae32889fdb0419b415b4261680c5aaf300', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4710944db25beca0d33b86e55c76615a76992a09', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a4e9fb7ad0f81ccd3d7e77b6d5cf3ea7d6e520d', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82612c27352515ce03a752ce1f15fefb3418c542', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c37c41705891455d9e6ff8b1987011e510c6c1b8', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0194c0d834b7ea37911f332ca0dd91cfbedd3972', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9360330b3840d40ba2b620e2d94c95c9895bcffc', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '999bc04f2bac7294d98eccbda833a0e18fc4cf09', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4659e850c9b2a388067ae80cca371c4e069a307e', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}]",,35385366,,User,,4,,0,0
462700364,Milestone 2: Deferred Changes and miscellaneous fixes,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

This PR does the following:

1. Resolves issue https://github.com/oppia/oppia/issues/10125 and makes the changes @DubeySandeep requested for PR: https://github.com/oppia/oppia/pull/10036
2. Fixes a flaky issue in lighthouse checks where the role is not properly updated to admin. https://github.com/oppia/oppia/pull/10088/checks?check_run_id=925507566
3. Adds oppia-root to donate and console error pages

- **Changed from using** 

```
await Promise.all([	         
      page.waitForNavigation(),	 
      page.click('#submit-login'),	
    ]);

```
`await page.waitForSelector('#submit-login');`
This change should improve reliability and resolve the issue mentioned in comment: https://github.com/puppeteer/puppeteer/issues/1637#issuecomment-355223428

- **Added a waitFor statement to wait until the text '' appears in the body** 

3. Fixes color contrast issues found in the community library page The search bars on the top don't have sufficient color contrast. The fix was to increase the opacity

Before:


![Screen Shot 2020-08-11 at 4 00 12 PM](https://user-images.githubusercontent.com/35385366/89957760-18524b80-dbed-11ea-91a9-5d99f320df5c.png)

After:

H1(""What are you curious about"") (#FFFFFF,  .7) -> (#FFFFFF, .95)
H2(""All categories"") (#FFFFFF,  .7) -> (#FFFFFF, .95)
H3(""English"") (#FFFFFF,  .7) -> (#FFFFFF, .95)

Color remains the same: opacity increased from .7 to .95

![Screen Shot 2020-08-11 at 4 08 23 PM](https://user-images.githubusercontent.com/35385366/89957703-f0fb7e80-dbec-11ea-9660-8dc644a49e73.png)


4. Fixes duplicate id issue in the community library page. 

5. Fixes issue where E2E tests for accessibility was not properly testing the category bar shortcut because the language bar was the next element that would be tabbed to. 

The class of the category bar is the same as the language bar (`.protractor-test-search-bar-dropdown-toggle`). 

Once the hotkey moves the focus to the category bar, we verify that it does by checking if the focus is on an HTML element that contains the class (`.protractor-test-search-bar-dropdown-toggle`). However, when we only tab once from the category bar, it moves the focus to the language bar, which shares the same class as the category bar. This makes the expect statement below think the focus does not change because the class is the same. 

**Fixed by pressing an additional tab when moving the focus off of the element in accessibility.js**



## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [ ] The linter/Karma presubmit checks have passed locally on your machine.
- [ ] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [ ] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.",True,10152,https://api.github.com/repos/oppia/oppia/pulls/10152,https://github.com/oppia/oppia/pull/10152,closed,178,274,22,63,48,61,1,2,[{'name': 'PR: LGTM'}],2020-08-04 11:17:30+00:00,2020-08-26 21:51:49+00:00,1938859.0,"22 days, 10:34:19","[{'comment_id': 465082214, 'comment_body': ""Could you explain in your comment why you need to tab twice here? Right now it's a little confusing because it seems like a single tab should be enough to shift the focus away. Ditto below"", 'comment_created': datetime.datetime(2020, 8, 4, 14, 14, 44, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 466585079, 'comment_body': 'Edit* Disregard previous comment. I have updated the PR description and comments and will post the 5 E2E tests shortly.\r\n ', 'comment_created': datetime.datetime(2020, 8, 6, 17, 50, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 469570011, 'comment_body': ""Do we still need `import 'mousetrap';`?"", 'comment_created': datetime.datetime(2020, 8, 12, 21, 57, 53, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 469571573, 'comment_body': 'Ditto*', 'comment_created': datetime.datetime(2020, 8, 12, 22, 1, 38, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 469571767, 'comment_body': 'Do we need to import this service (Ditto in other files)', 'comment_created': datetime.datetime(2020, 8, 12, 22, 2, 7, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 469573995, 'comment_body': ""I don't think we should use protractor test class for main functionality. Either use any existing `oppia-` class or create a new one!\r\n\r\n[Ditto for other places]"", 'comment_created': datetime.datetime(2020, 8, 12, 22, 7, 45, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 469613224, 'comment_body': '> > Why we need setHref method in keyboard shortcut service?\r\n>\r\n> We need to wrap window.location.href in order to successfully mock the function for the frontend test.\r\nhttps://stackoverflow.com/questions/4792281/mocking-window-location-href-in-javascript\r\n\r\nShould we use window-ref.service.ts in test/spec file? ', 'comment_created': datetime.datetime(2020, 8, 13, 0, 3, 1, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 469613532, 'comment_body': 'Do we need this change?', 'comment_created': datetime.datetime(2020, 8, 13, 0, 3, 47, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 469615805, 'comment_body': 'Add this in sorted order*', 'comment_created': datetime.datetime(2020, 8, 13, 0, 11, 29, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 470122679, 'comment_body': ""@DubeySandeep It seems the other files aren't sorted either. I'm assuming you mean alphabetically? I have sorted them if so. "", 'comment_created': datetime.datetime(2020, 8, 13, 17, 31, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 470138129, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 13, 17, 50, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 470383712, 'comment_body': 'No we do not removed.', 'comment_created': datetime.datetime(2020, 8, 14, 3, 3, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 470383721, 'comment_body': 'Yes we do at the bottom of the file we bind the shortcuts with the function `KeyboardShortcutService.bindExplorationPlayerShortcuts();`', 'comment_created': datetime.datetime(2020, 8, 14, 3, 3, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 470383992, 'comment_body': 'We do not I removed the extra space', 'comment_created': datetime.datetime(2020, 8, 14, 3, 4, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 470400739, 'comment_body': ""I don't think we need to use it in the spec file, because I can already spyOn the setHref function. However, with a recommendation from @sagangwee I switched to using 'window-ref.service.ts'  in the 'keyboard-shortcuts.service' file just now."", 'comment_created': datetime.datetime(2020, 8, 14, 4, 15, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 470401245, 'comment_body': ""Could you check if I am importing windows-ref.service.ts properly? I couldn't follow the convention used in 'core/templates/services/contextual/url.service.ts' because it would make navigation shortcuts not work at all.\r\n\r\nThanks! "", 'comment_created': datetime.datetime(2020, 8, 14, 4, 18, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 470828679, 'comment_body': 'Thanks! (I think we should add a lint test for this!)', 'comment_created': datetime.datetime(2020, 8, 14, 19, 34, 4, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 470828985, 'comment_body': 'Sorry, I mean do you need to import the KeyboardShortcutService.ts file on the top? ', 'comment_created': datetime.datetime(2020, 8, 14, 19, 34, 52, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 470830086, 'comment_body': 'Can you do similar to this file: core/templates/components/entity-creation-services/collection-creation.service.ts\r\n\r\n\r\n', 'comment_created': datetime.datetime(2020, 8, 14, 19, 37, 29, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 470831551, 'comment_body': 'Do we still need this random wait?', 'comment_created': datetime.datetime(2020, 8, 14, 19, 40, 54, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 470831639, 'comment_body': 'Do we still need this? (Ditto else where!)', 'comment_created': datetime.datetime(2020, 8, 14, 19, 41, 10, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 470832210, 'comment_body': 'This will check the text of the entire window? If yes, can you please scope it to `.protractor-test-status-message`?', 'comment_created': datetime.datetime(2020, 8, 14, 19, 42, 27, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 470917617, 'comment_body': ""Oh! That's weird it seems to work without importing the file. Hmm, should I just import it anyway?"", 'comment_created': datetime.datetime(2020, 8, 15, 0, 56, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 471031665, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2020, 8, 15, 20, 37, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 471031674, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 15, 20, 37, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 471031684, 'comment_body': 'no we do not removed', 'comment_created': datetime.datetime(2020, 8, 15, 20, 37, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 471041981, 'comment_body': 'is it resolved?', 'comment_created': datetime.datetime(2020, 8, 15, 23, 0, 18, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 471042358, 'comment_body': 'Removing `return false` expectedly?', 'comment_created': datetime.datetime(2020, 8, 15, 23, 5, 49, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 471074230, 'comment_body': 'Hi @jimbyo, can you use the angular\'s dependency injection mechanism here. All this means is you have to provide the class name and you will get a class instance.\r\nInstead of having to instantiate yourself, you can make angular do it by providing this in the constructor. Something like:\r\n```\r\nconstructor(private windowRef: WindowRef){}\r\n```\r\nThis constructor will come at line number 30 (After `export class KeyboardShortcutService` and before `bindExplorationPlayerShortcuts() {`).\r\n Then you can access the windowRef by using the ""this"" keyword. So something like\r\n```\r\nwindowRef.nativeWindow.location.href = href;\r\n```\r\n will become:\r\n```\r\nthis.windowRef.nativeWindow.location.href = href;\r\n```', 'comment_created': datetime.datetime(2020, 8, 16, 6, 49, 43, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 471075783, 'comment_body': ""Sorry!I didn't notice this comment. Hmm, Isn't that the same way as url.service.ts?"", 'comment_created': datetime.datetime(2020, 8, 16, 7, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 471075937, 'comment_body': ""Hey thanks for the suggestion. I actually originally did this I believe, I followed url.service.ts way of injecting the WindowRef, but it made it so that the keyboard shortcuts would not redirect to a new page. So I switched to doing it the current way. I'll investigate this further "", 'comment_created': datetime.datetime(2020, 8, 16, 7, 9, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 471171190, 'comment_body': 'Why do we need this function as a part of a shortcut service? I would suggest removing it and use `windowRef` in the service/directive/test which need to set href.', 'comment_created': datetime.datetime(2020, 8, 16, 23, 13, 6, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 471173536, 'comment_body': ""As it's already imported in `core/templates/base-components/base-content.directive.ts`, do we need this in the base directive?\r\n\r\n> Hmm, should I just import it anyway?\r\n\r\nyes!"", 'comment_created': datetime.datetime(2020, 8, 16, 23, 35, 24, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 471173719, 'comment_body': 'Why these changes?', 'comment_created': datetime.datetime(2020, 8, 16, 23, 36, 46, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 471173850, 'comment_body': 'Can we move this to the line above? (Check this in other places as well)', 'comment_created': datetime.datetime(2020, 8, 16, 23, 38, 1, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 471174113, 'comment_body': '@srijanreddy98, Thanks for helping out! \r\n\r\n@jimbyo, Do let us know if you need any further help. Thanks!  ', 'comment_created': datetime.datetime(2020, 8, 16, 23, 40, 21, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 471661798, 'comment_body': 'These are color contrast changes to the community library. You can see it in the screen shots. ', 'comment_created': datetime.datetime(2020, 8, 17, 17, 54, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 471717808, 'comment_body': 'Yes, we need it to bind the navigation shortcuts.           `KeyboardShortcutService.bindNavigationShortcuts();`', 'comment_created': datetime.datetime(2020, 8, 17, 19, 7, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 471736129, 'comment_body': 'Yes, removing expectedly, Only need to return false for the search bar', 'comment_created': datetime.datetime(2020, 8, 17, 19, 45, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 471765514, 'comment_body': ""So the reason I create this function is that jasmine does not allow page reloads in the testing environment. I can't \r\nspyOn the command window.location.href, So I created a wrapper function around it and used spyOn   setHref(href) in the test file. I think \r\nwindowRef.nativewindow.location.href would have a similar issue? So a wrapper function is necessary unless there is a way to fake a page reload. "", 'comment_created': datetime.datetime(2020, 8, 17, 20, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 471765670, 'comment_body': 'Um sorry what lines are you talking about? 38-40?', 'comment_created': datetime.datetime(2020, 8, 17, 20, 46, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 472009801, 'comment_body': ""Maybe Angular migration team can help here? @srijanreddy98 Do you have any thoughts/suggestions on @jimbyo issue?\r\n\r\nEDIT: The expected behaviour is to not have this function in this file (As it's not related to keyboard shortcut!)"", 'comment_created': datetime.datetime(2020, 8, 18, 8, 33, 2, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 472011055, 'comment_body': 'Use this in other places like line 83/87 etc. to make this file independent of this function.', 'comment_created': datetime.datetime(2020, 8, 18, 8, 35, 2, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 472078182, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 18, 10, 30, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 472167717, 'comment_body': 'Import angular lib on top, then a newline, and finally the oppia libs. (You can check `core/templates/components/button-directives/exploration-embed-button-modal.component.spec.ts` for ref!)', 'comment_created': datetime.datetime(2020, 8, 18, 13, 0, 3, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 472167993, 'comment_body': 'Ditto*\r\n', 'comment_created': datetime.datetime(2020, 8, 18, 13, 0, 18, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 472170316, 'comment_body': 'Break line after `(` [Following ""There should be a line break after `(` if the params are spread in multi-lines""]', 'comment_created': datetime.datetime(2020, 8, 18, 13, 2, 38, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 472171172, 'comment_body': 'optional: Use `0.95` for consistency', 'comment_created': datetime.datetime(2020, 8, 18, 13, 3, 31, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 472172861, 'comment_body': 'optional: `constructor(private windowRef: WindowRef) {}`', 'comment_created': datetime.datetime(2020, 8, 18, 13, 5, 19, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 472173644, 'comment_body': 'is this resolved?', 'comment_created': datetime.datetime(2020, 8, 18, 13, 6, 6, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 472274615, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 18, 15, 14, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 472277277, 'comment_body': ""This is related to https://github.com/oppia/oppia/pull/10152/files#r471171190 and can't do this without breaking the keyboard-shortcuts.spec file"", 'comment_created': datetime.datetime(2020, 8, 18, 15, 18, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 472288695, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 18, 15, 33, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 472289139, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 18, 15, 34, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 472290760, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 18, 15, 36, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 472291617, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 18, 15, 37, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 472291946, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 18, 15, 38, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 472345524, 'comment_body': 'Done, with further information in the comment chain linked above', 'comment_created': datetime.datetime(2020, 8, 18, 17, 0, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 472346420, 'comment_body': ""Done I was able to remove the setHref() by instead spying on \r\n\r\n```\r\n    spyOnProperty(windowRef, 'nativeWindow').and.returnValue({\r\n      location: {\r\n        href: ''\r\n      }\r\n    });\r\n```\r\nThis does come with some tradeoffs from the previous approach, however.\r\n```\r\n    spyOn(keyboardShortcutService, 'setHref').and.callFake(function(href) {\r\n      hrefValue = href;\r\n    });\r\n```\r\nIn the previous approach, I was able to create expect statements like.\r\n`    expect(hrefValue).toEqual('/get-started');`\r\n\r\nI'm not exactly sure how to create similar expect statements with the current approach. Is it fine to have unit tests that don't assert against any condition and instead rely on the E2E tests to handle testing the page redirection?"", 'comment_created': datetime.datetime(2020, 8, 18, 17, 1, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 474082071, 'comment_body': ""maybe we can do this:\r\n\r\n```\r\ndescribe:\r\n    mockWindow = {\r\n      location: {\r\n        href: ''\r\n      }\r\n    }\r\n    \r\n    beforeEach:\r\n        spyOnProperty(windowRef, 'nativeWindow').and.returnValue(mockWindow);\r\n\r\n    it:\r\n        // Setup.\r\n        mockWindow.location.href = ''\r\n        \r\n        // Baseline verification.\r\n        expect(windowRefwindowRef).toBe('')\r\n\r\n        // Action.\r\n        KeyboardShortcutService....\r\n\r\n        // Endline verification.\r\n\r\n        Check the spyFunction get called.\r\n        Check the href value through windowRef.\r\n```\r\n\r\nor something around this?"", 'comment_created': datetime.datetime(2020, 8, 20, 15, 40, 10, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 474625995, 'comment_body': 'Wow that worked very well. Thanks @DubeySandeep ', 'comment_created': datetime.datetime(2020, 8, 21, 10, 56, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}]","[{'commit_sha': '895180e05d3b93b173e3a48b93030830bbf9bdb0', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0be436abb1d4aa31ee1abe7c3ed21da51bc411c8', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'babe399fe255b1ed2e511fe67602234e87fd6ac3', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00c5793cee529038c2b9d3a0c7a5bf463e3e011f', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19bff31842ecdaea93b6452ec332362a3f64a6a6', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '097ebb01490b944e91424aa9d4edbb3816bfc6d1', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f14b47b8f843319204d3fc76b0171802ba028225', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfcbcb26658d1939113066c70bfaf39ba3bf933e', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cf68f4a99f2cff62104afd79c22288727a95df8', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f47272af3c57c7c648bbbac0a050b06959bc6140', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92c1a2d09734ec7d5e68c4990d16402bf40b636e', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1faa312a35b0fb1c453bad3551031dc32d54be23', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19b8c442480341678041fd31cd849c4ac9761aa9', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ace58c5182e6c6f0b9d2d59000300c3ac397223', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a14cf8bc5796671f4d97108287d35935afa83efa', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45790ddc8bbf0ec8174d766d75b81439228d5c02', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9984067ba15388d97c4075dac71f87cc4a20e335', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '450c42ac8e0ca0fb2005f8ff5710e37617ce9270', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ad9b14826ceb15fcd58c864be34f94bc0686d6f', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1db5e2946388d9977e1166256bd17b35306eda8d', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0905273938018f846cf69b5e0ac8bce7b885c148', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '737e48e5b32744f7b5888a8dfc71850dcc1c56c2', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f07944f70bbf416e9b4bbc778c718947f47be2c', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a31613e3b12283401f06271e7155268ee25343b4', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33f1a8d80e86f4b1adf83876775db4253438387f', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb0073008456b4c257d6e57ced4fcadac7fee0a1', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88cdec47a41066454cb44bde7206b5b2cf946da6', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb2133d4aefb9b4e493e9ddedda269848c0e826e', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e1c1c5b3c82daafe17d64cc346d06cdc7990372', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '169fc8e9aa868c09aae4b283e3d755f5513f3445', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a75f6c64242bd22844633013039651590d6114c8', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3484ae98e92fd78aad651dce3baa5c03a04a1c4', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79a356bbe65cae267d10fc39598eb02d8bfe1ae2', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adac337cd3c4a22364bb382cc8fe03eca38742f6', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5343c358e1073f14b5e0af3dd994eae0320cabf8', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53496af9d2904ee2790f10ebdc942ba2e0e00ff9', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be261dd7ad01fda9424fc0581bc89a2236d30ced', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd835f7e4de8115431dc60f66275bdf5dfbb100e2', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5705625c6ab250a1d3eaa35fa9791584f8f594b', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fccfe286defd428c76f726cf2b1773c9ae83d149', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08dd5656e636ac3e709f6e4817a068075cb04f4e', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05f1086fa74c078a8ee45336c7fbbbd9af4b019a', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '313a09908bdc6c5715b9785f6877a9c484cd9661', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f891d940c57b102b6663822be3623eb116cd2f5b', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09b5b904c69d9350ca0aeaff77deeda27c6e05ad', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e18def77c4dcee6b3b49adc1cfbfe637e811ac9e', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed7533fc0a9eb9aab7ee8a5bbd134fe9bcd67744', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6a81c2437d98a4f7d2a384491b9523757957b1e', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8138a0088b45b5f42404695dfc2810be5e133886', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c686ee0ffaaad3617bf0d4f7acab4f64fddc8a0a', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '984f3173463a57305b6fa513439bb9fef43a15e3', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42036d1dc976af9566be08c2647254c3e96478e1', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fbd5c30b0824c94468b5b61b9ef46b0d2c33952', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03e692dd51f84b3039c94104f4127ee1a0bde175', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df121b1bd037aec79b60baef4b161e7961e9fd70', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '485e38b4345f7fa76d02f46776cea468b44b66f2', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd50013e4409a12cc658784647e7589803519f009', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd19df5cb3c5438233bc80731d0297297a5851442', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dc664ffe39262d6ba9fbfbeecf340851b1e2f27', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd7a3418ac0c48524fa4a2fd1be21cc53430ba03', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '435c02418a4eddb81caee00d1023ece3486ed1c2', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36ec2bb9686df389acab1ea954a2b7a57c64a1cd', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7beffd337618e0da1438f89209a4d4dc58fc83d5', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}]",,35385366,,User,,4,,0,0
463280378,Lighthouse: Removing tests requiring admin authentication,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR reverts part of https://github.com/oppia/oppia/pull/9705 and temporarily fixes the flake in the lighthouse tests.

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [ ] The linter/Karma presubmit checks have passed locally on your machine.
- [ ] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [ ] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.
",True,10164,https://api.github.com/repos/oppia/oppia/pulls/10164,https://github.com/oppia/oppia/pull/10164,closed,0,2,1,1,4,0,0,0,[],2020-08-05 10:02:06+00:00,2020-08-05 10:34:35+00:00,1949.0,0:32:29,[],"[{'commit_sha': '74fa343e82a7e54065b0d89e6921c04e1e0a0c57', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}]",,35385366,,User,,4,,0,0
463864020,"Milestone 3.1: Score 100% in both Chrome and manual accessibility audits on Preferences, Profile, Splash, Signup pages.","## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR provides better descriptions to the preference page, ads lang attribute to sign up page, and adds signup, preference, and profile pages to lighthouse checks.

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [ ] The linter/Karma presubmit checks have passed locally on your machine.
- [ ] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [ ] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.
",True,10174,https://api.github.com/repos/oppia/oppia/pulls/10174,https://github.com/oppia/oppia/pull/10174,closed,17,9,3,5,8,2,0,1,[],2020-08-06 08:14:57+00:00,2020-08-12 15:08:09+00:00,543192.0,"6 days, 6:53:12","[{'comment_id': 483883644, 'comment_body': 'here', 'comment_created': datetime.datetime(2020, 9, 4, 23, 51, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 483883658, 'comment_body': 'https://github.com/oppia/oppia/pull/10174/files', 'comment_created': datetime.datetime(2020, 9, 4, 23, 51, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}]","[{'commit_sha': '0218aa7fd46cbdcdf57815690880d5f0892b8de3', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2d66ff3a235835dbfef86aa125bac64ee3c89c4', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a10107754d280a2711df5900822bbe4b2d748a10', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09686de9e4c2c9061e3e4915d20723940db76522', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31592efbe7e1f3eaa5c5278c50a3ca051b3325ee', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}]",,35385366,,User,,4,,0,0
466429034,"Milestone 3.2:   Score 100% in Chrome accessibility audits on Skill_Editor, Stewards, Story_Editor, Review_tests pages","## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->


**This PR does the following:** 

1. Labels unlabeled buttons and form elements in the Skill_Editor, Stewards, Story_Editor page
2. Moved ng-click=""$ctrl.selectPreviewTab() from `<a>` tag to `<li> `tag
3. Review_tests loads the question-player-component which was already fixed in practice sessions.

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.
",True,10276,https://api.github.com/repos/oppia/oppia/pulls/10276,https://github.com/oppia/oppia/pull/10276,closed,11,10,7,2,8,0,0,2,[],2020-08-12 00:32:10+00:00,2020-08-15 01:13:52+00:00,261702.0,"3 days, 0:41:42",[],"[{'commit_sha': 'fab888e9cc46c1c23a80f37d813bd819cafd1a21', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fc6cf6ff8dd7f8d4a2975a3a7317e963c53253e', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}]",,35385366,,User,,4,,0,0
466750784,Add  { waitUntil: 'networkidle0' } to the puppeteer script,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. Adds the argument { waitUntil: 'networkidle0' } in every `goto() `function. This will ensure that the puppeteer script wll wait until a page is fully loaded by pausing the script until there are zero network connections. See more details in the [puppeteer documentation]( https://pptr.dev/#?product=Puppeteer&version=v2.1.1&show=api-pagewaitfornavigationoptions)

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.
",True,10293,https://api.github.com/repos/oppia/oppia/pulls/10293,https://github.com/oppia/oppia/pull/10293,closed,4,4,1,2,3,3,1,2,[{'name': 'PR: LGTM'}],2020-08-12 12:51:06+00:00,2020-08-13 09:28:24+00:00,74238.0,20:37:18,"[{'comment_id': 469300928, 'comment_body': 'Do we still need this? Or should we add longer wait times to be sure? Ditto in other places', 'comment_created': datetime.datetime(2020, 8, 12, 14, 27, 21, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 469495034, 'comment_body': ""I think it should be okay to remove the wait times. However, I would prefer limiting this PR in scope to just adding the  `{ waitUntil: 'networkidle0' }` arg. I have another PR that will modify the puppeteer script more extensively https://github.com/oppia/oppia/pull/10152/files"", 'comment_created': datetime.datetime(2020, 8, 12, 19, 38, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 469807969, 'comment_body': 'Okay', 'comment_created': datetime.datetime(2020, 8, 13, 9, 7, 2, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}]","[{'commit_sha': 'c44c8d8e3e73bda30226abbd5756d82acb652a32', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9447fbc662183ba834881304f7db1ebec8ea56ea', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}]",,35385366,,User,,4,,0,0
471281105,"Milestone 3.3: Achieve Lighthouse scores of 100 on Story editor, Story player, Teach, and Terms pages","## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->


This PR does the following: 
1. Adds Aria labels to unlabeled interactive elements. 
2. Removed unnecessary Aria Roles

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.
",True,10403,https://api.github.com/repos/oppia/oppia/pulls/10403,https://github.com/oppia/oppia/pull/10403,closed,10,10,5,4,6,0,1,1,[{'name': 'PR: LGTM'}],2020-08-20 22:56:16+00:00,2020-08-25 00:09:20+00:00,349984.0,"4 days, 1:13:04",[],"[{'commit_sha': '1934728722c2b73eccadc564b6195720fe9df997', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cbcc4fce9eb72e6bb56e1af6f63be3e11da152f', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2fc7196fb920440195780c6a6612df4891552b4', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d0d81b090bcba97ba228334c37196ed4bcac939', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}]",,35385366,,User,,4,,0,0
474623901,"Milestone 3.4: Achieve Lighthouse scores of 100 in topic and skill dashboard, topic editor, topic_viewer, and thanks page","## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. Fixes accessibility issues in the topic skill dashboard, topic editor, and topic viewer. 
- Adds aria-labels to unlabeled form elements
- Restructures some ng-clicks so the can be accessible through the keyboard

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.
",True,10461,https://api.github.com/repos/oppia/oppia/pulls/10461,https://github.com/oppia/oppia/pull/10461,closed,11,8,3,3,6,0,1,1,[{'name': 'PR: LGTM'}],2020-08-27 11:05:18+00:00,2020-09-01 17:23:09+00:00,454671.0,"5 days, 6:17:51",[],"[{'commit_sha': '94b5ee16e4be73c8cfb966ae6e0c94a31ee96a14', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e642a012dafd315141c99fbca00359dec812dd0', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e74d06bf4e236fb4cbd0bc2cfb6a90a4c201276', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}]",,35385366,,User,,4,,0,0
475847761,Create keyboard shortcut discovery modal,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR creates a keyboard shortcut discovery modal
2. Press ? key to trigger the discovery modal. (Only works in library and exploration player context)

**Library Page**
<img width=""602"" alt=""Screen Shot 2020-08-29 at 12 24 20 AM"" src=""https://user-images.githubusercontent.com/35385366/91649009-bafb2e80-ea23-11ea-8bd9-8ea3e868de48.png"">


**Exploration player context**
<img width=""670"" alt=""Screen Shot 2020-08-28 at 11 54 05 PM"" src=""https://user-images.githubusercontent.com/35385366/91649007-b59de400-ea23-11ea-9a5e-1d1fc183a6d1.png"">



## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [ ] The linter/Karma presubmit checks have passed locally on your machine.
- [ ] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [ ] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.
",True,10487,https://api.github.com/repos/oppia/oppia/pulls/10487,https://github.com/oppia/oppia/pull/10487,closed,277,14,7,28,7,12,1,1,[{'name': 'PR: LGTM'}],2020-08-30 01:17:17+00:00,2020-09-02 19:13:00+00:00,323743.0,"3 days, 17:55:43","[{'comment_id': 480287313, 'comment_body': 'Prefer `const` here.', 'comment_created': datetime.datetime(2020, 8, 31, 17, 45, 59, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 480288433, 'comment_body': ""Since it's not a simple 3-liner, can you break up the lines up by setup, action, and assertion (using new lines). \r\n\r\nCan also use `const` for `closeButtonDE`."", 'comment_created': datetime.datetime(2020, 8, 31, 17, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 480289447, 'comment_body': 'Can we extract the strings into variable constants?', 'comment_created': datetime.datetime(2020, 8, 31, 17, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 480289993, 'comment_body': 'Can we convert all the `var` to `let` in this file?', 'comment_created': datetime.datetime(2020, 8, 31, 17, 50, 58, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 481345857, 'comment_body': 'yes, done', 'comment_created': datetime.datetime(2020, 9, 1, 18, 27, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 481345897, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 9, 1, 18, 27, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 481346151, 'comment_body': ""It doesn't work, it raises an error when I change let to const"", 'comment_created': datetime.datetime(2020, 9, 1, 18, 27, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 481346262, 'comment_body': 'yes, done', 'comment_created': datetime.datetime(2020, 9, 1, 18, 28, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 481347690, 'comment_body': '<img width=""403"" alt=""Screen Shot 2020-09-01 at 11 29 51 AM"" src=""https://user-images.githubusercontent.com/35385366/91891854-8f0bc300-ec46-11ea-9cc1-c417ecd7a890.png"">\r\n', 'comment_created': datetime.datetime(2020, 9, 1, 18, 30, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}, {'comment_id': 481415294, 'comment_body': ""Sorry I meant to declare variables for the description strings, e.g. 'Show this help dialog'."", 'comment_created': datetime.datetime(2020, 9, 1, 20, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 481449112, 'comment_body': ""Oh, strange. Guess AngularJS doesn't play nicely."", 'comment_created': datetime.datetime(2020, 9, 1, 21, 43, 43, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 481462298, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 9, 1, 22, 15, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jimbyo', 'type': 'User'}]","[{'commit_sha': '7a2f78b0dd4c5b6b85911d67acf78fc651e73441', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20a81f1d4ff3658cfc81af8dced156ca943bbe6b', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87b482f6b49a1451a1053c446e86fbd329810681', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a884cbb66262b2b159972abb069d7cd0e1958dd', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '617c7c2ad6cae0dca7fc1b4bccb52219eb502bab', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dab21fa02e9e226332dbb0d6d87f6581c11736e1', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bc298b0669c5f51ccce00aae2145cb172d4a340', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70ec6cba48058cc7b68aeda0d0a7555e51ae7894', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc411b7a117cf719ac67ba232218351f0933920b', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b14be0e4392f9084eeaa094d39fe5de94940196', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5c5acc0c472fe398b8394827bf9f24c7e297485', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '348435ab08e095146f2f8cea3e4a003afabda658', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0efff59dcb6c8f6bf40ebc26d21667f5e1ad6c3f', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ad5c3310f8baa98772bb27514c2c5dea53c61ac', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '277a191b590b8c8dc0b1cc2c53b2ac1614aec09b', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a29190824af307372be0ba9a1ebdf0d467c1359b', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a6bf0f8e8931cdf8c869a9db806bc2192fa0f3f', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '879cc5dec9609144453e6a8e47b817aaf8b8e422', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '478aac1ac62a7faef3b64de5944ea51781b8e065', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6bc267afabca7b75aa2d3a8752bd3f4b8860915', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '794a0e755426e424cf3e0ee1e2c9a01ba021bff5', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb239dfa9bc39ab6db457799fc8cfbc0836dd1bf', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4514a97df14def7bf0179ed8ebe6dcd3d851f66a', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3013a76fa578f6588fd50518ccf9a42b5f9e298', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74416c68f61a9e74ce4d6b2440b170038032361e', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '466707c60a6f7e431e93f999be178a35cdd8c7bd', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78d256591a822c9dbfbb0c104a0eb1392f61bdc9', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3926e48dd04e96b9c94b7a3a05fe4309963b278', 'committer_username': 'jimbyo', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 1, 12, 23, 16, 46, tzinfo=datetime.timezone.utc)}]",,35385366,,User,,4,,0,0

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
40687563,oppia,oppia/oppia,Python,3839,5715,240,775,15753,1416,418,24,"[{'id': 871049179, 'number': 15074, 'closed': datetime.datetime(2022, 3, 11, 22, 11, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 3, 21, 56, 19, tzinfo=datetime.timezone.utc), 'time_taken': 692115.0, 'time_delta': '8 days, 0:15:15', 'additions': 103, 'deletions': 40, 'state': 'closed'}, {'id': 868213122, 'number': 15053, 'closed': datetime.datetime(2022, 3, 16, 15, 37, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 1, 19, 41, 42, tzinfo=datetime.timezone.utc), 'time_taken': 1281352.0, 'time_delta': '14 days, 19:55:52', 'additions': 24, 'deletions': 1, 'state': 'closed'}, {'id': 843661670, 'number': 14889, 'closed': datetime.datetime(2022, 4, 5, 15, 55, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 9, 9, 11, 54, tzinfo=datetime.timezone.utc), 'time_taken': 4776232.0, 'time_delta': '55 days, 6:43:52', 'additions': 756, 'deletions': 36, 'state': 'closed'}, {'id': 793095634, 'number': 14357, 'closed': datetime.datetime(2021, 12, 3, 22, 21, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 1, 20, 43, 3, tzinfo=datetime.timezone.utc), 'time_taken': 178690.0, 'time_delta': '2 days, 1:38:10', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 784321839, 'number': 14283, 'closed': datetime.datetime(2021, 11, 23, 2, 45, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 19, 3, 13, 43, tzinfo=datetime.timezone.utc), 'time_taken': 343916.0, 'time_delta': '3 days, 23:31:56', 'additions': 101, 'deletions': 0, 'state': 'closed'}, {'id': 761202687, 'number': 14097, 'closed': datetime.datetime(2021, 11, 8, 1, 11, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 19, 8, 49, tzinfo=datetime.timezone.utc), 'time_taken': 1700555.0, 'time_delta': '19 days, 16:22:35', 'additions': 553, 'deletions': 23, 'state': 'closed'}, {'id': 742340869, 'number': 13916, 'closed': datetime.datetime(2021, 10, 1, 18, 44, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 24, 16, 7, 50, tzinfo=datetime.timezone.utc), 'time_taken': 614184.0, 'time_delta': '7 days, 2:36:24', 'additions': 79, 'deletions': 13, 'state': 'closed'}, {'id': 647801510, 'number': 12845, 'closed': datetime.datetime(2021, 5, 31, 17, 57, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 19, 15, 40, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1045059.0, 'time_delta': '12 days, 2:17:39', 'additions': 56, 'deletions': 22, 'state': 'closed'}, {'id': 624264756, 'number': 12650, 'closed': datetime.datetime(2021, 5, 17, 22, 59, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 27, 12, 31, 29, tzinfo=datetime.timezone.utc), 'time_taken': 1765689.0, 'time_delta': '20 days, 10:28:09', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 615343079, 'number': 12514, 'closed': datetime.datetime(2021, 4, 14, 16, 50, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 14, 15, 35, 44, tzinfo=datetime.timezone.utc), 'time_taken': 4465.0, 'time_delta': '1:14:25', 'additions': 317, 'deletions': 356, 'state': 'closed'}, {'id': 610522959, 'number': 12457, 'closed': datetime.datetime(2021, 5, 3, 21, 19, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 7, 9, 56, 17, tzinfo=datetime.timezone.utc), 'time_taken': 2287405.0, 'time_delta': '26 days, 11:23:25', 'additions': 116, 'deletions': 60, 'state': 'closed'}, {'id': 601877700, 'number': 12339, 'closed': datetime.datetime(2021, 4, 3, 3, 42, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 26, 20, 11, 1, tzinfo=datetime.timezone.utc), 'time_taken': 631901.0, 'time_delta': '7 days, 7:31:41', 'additions': 69, 'deletions': 2, 'state': 'closed'}, {'id': 581048135, 'number': 12047, 'closed': datetime.datetime(2021, 3, 7, 7, 49, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 26, 18, 40, 2, tzinfo=datetime.timezone.utc), 'time_taken': 738545.0, 'time_delta': '8 days, 13:09:05', 'additions': 23, 'deletions': 4, 'state': 'closed'}, {'id': 575020763, 'number': 11970, 'closed': datetime.datetime(2021, 2, 23, 16, 58, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 17, 15, 53, 18, tzinfo=datetime.timezone.utc), 'time_taken': 522293.0, 'time_delta': '6 days, 1:04:53', 'additions': 11, 'deletions': 11, 'state': 'closed'}, {'id': 573713711, 'number': 11961, 'closed': datetime.datetime(2021, 2, 15, 17, 47, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 15, 17, 46, 50, tzinfo=datetime.timezone.utc), 'time_taken': 30.0, 'time_delta': '0:00:30', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 560064568, 'number': 11757, 'closed': datetime.datetime(2021, 3, 8, 2, 7, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 22, 16, 12, 50, tzinfo=datetime.timezone.utc), 'time_taken': 3837270.0, 'time_delta': '44 days, 9:54:30', 'additions': 133, 'deletions': 40, 'state': 'closed'}, {'id': 530795731, 'number': 11301, 'closed': datetime.datetime(2020, 12, 9, 0, 21, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 2, 6, 52, 27, tzinfo=datetime.timezone.utc), 'time_taken': 581347.0, 'time_delta': '6 days, 17:29:07', 'additions': 39, 'deletions': 67, 'state': 'closed'}, {'id': 519628305, 'number': 11172, 'closed': datetime.datetime(2020, 11, 24, 19, 9, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 12, 5, 22, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1086417.0, 'time_delta': '12 days, 13:46:57', 'additions': 9, 'deletions': 3, 'state': 'closed'}, {'id': 490655266, 'number': 10745, 'closed': datetime.datetime(2020, 9, 24, 1, 37, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 22, 2, 32, 56, tzinfo=datetime.timezone.utc), 'time_taken': 169495.0, 'time_delta': '1 day, 23:04:55', 'additions': 77, 'deletions': 5, 'state': 'closed'}, {'id': 480557459, 'number': 10571, 'closed': datetime.datetime(2020, 9, 10, 0, 57, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 5, 17, 51, 9, tzinfo=datetime.timezone.utc), 'time_taken': 371183.0, 'time_delta': '4 days, 7:06:23', 'additions': 262, 'deletions': 40, 'state': 'closed'}, {'id': 480494343, 'number': 10570, 'closed': datetime.datetime(2020, 9, 7, 4, 51, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 5, 10, 10, 56, tzinfo=datetime.timezone.utc), 'time_taken': 153641.0, 'time_delta': '1 day, 18:40:41', 'additions': 144, 'deletions': 118, 'state': 'closed'}, {'id': 480185978, 'number': 10568, 'closed': datetime.datetime(2020, 9, 5, 1, 5, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 4, 22, 7, 33, tzinfo=datetime.timezone.utc), 'time_taken': 10675.0, 'time_delta': '2:57:55', 'additions': 0, 'deletions': 42, 'state': 'closed'}, {'id': 477720524, 'number': 10537, 'closed': datetime.datetime(2020, 9, 4, 20, 36, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 2, 10, 21, 44, tzinfo=datetime.timezone.utc), 'time_taken': 209687.0, 'time_delta': '2 days, 10:14:47', 'additions': 495, 'deletions': 70, 'state': 'closed'}, {'id': 475847761, 'number': 10487, 'closed': datetime.datetime(2020, 9, 2, 19, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 30, 1, 17, 17, tzinfo=datetime.timezone.utc), 'time_taken': 323743.0, 'time_delta': '3 days, 17:55:43', 'additions': 277, 'deletions': 14, 'state': 'closed'}, {'id': 474623901, 'number': 10461, 'closed': datetime.datetime(2020, 9, 1, 17, 23, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 27, 11, 5, 18, tzinfo=datetime.timezone.utc), 'time_taken': 454671.0, 'time_delta': '5 days, 6:17:51', 'additions': 11, 'deletions': 8, 'state': 'closed'}, {'id': 471281105, 'number': 10403, 'closed': datetime.datetime(2020, 8, 25, 0, 9, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 20, 22, 56, 16, tzinfo=datetime.timezone.utc), 'time_taken': 349984.0, 'time_delta': '4 days, 1:13:04', 'additions': 10, 'deletions': 10, 'state': 'closed'}, {'id': 469933195, 'number': 10382, 'closed': datetime.datetime(2020, 8, 19, 19, 54, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 19, 5, 38, 59, tzinfo=datetime.timezone.utc), 'time_taken': 51348.0, 'time_delta': '14:15:48', 'additions': 6, 'deletions': 12, 'state': 'closed'}, {'id': 466750784, 'number': 10293, 'closed': datetime.datetime(2020, 8, 13, 9, 28, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 12, 12, 51, 6, tzinfo=datetime.timezone.utc), 'time_taken': 74238.0, 'time_delta': '20:37:18', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 466429034, 'number': 10276, 'closed': datetime.datetime(2020, 8, 15, 1, 13, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 12, 0, 32, 10, tzinfo=datetime.timezone.utc), 'time_taken': 261702.0, 'time_delta': '3 days, 0:41:42', 'additions': 11, 'deletions': 10, 'state': 'closed'}, {'id': 463864020, 'number': 10174, 'closed': datetime.datetime(2020, 8, 12, 15, 8, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 6, 8, 14, 57, tzinfo=datetime.timezone.utc), 'time_taken': 543192.0, 'time_delta': '6 days, 6:53:12', 'additions': 17, 'deletions': 9, 'state': 'closed'}, {'id': 463280378, 'number': 10164, 'closed': datetime.datetime(2020, 8, 5, 10, 34, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 5, 10, 2, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1949.0, 'time_delta': '0:32:29', 'additions': 0, 'deletions': 2, 'state': 'closed'}, {'id': 462700364, 'number': 10152, 'closed': datetime.datetime(2020, 8, 26, 21, 51, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 4, 11, 17, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1938859.0, 'time_delta': '22 days, 10:34:19', 'additions': 178, 'deletions': 274, 'state': 'closed'}, {'id': 456593611, 'number': 10036, 'closed': datetime.datetime(2020, 7, 30, 21, 7, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 25, 9, 41, 12, tzinfo=datetime.timezone.utc), 'time_taken': 473183.0, 'time_delta': '5 days, 11:26:23', 'additions': 697, 'deletions': 12, 'state': 'closed'}, {'id': 454895817, 'number': 10002, 'closed': datetime.datetime(2020, 7, 29, 22, 2, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 5, 48, 11, tzinfo=datetime.timezone.utc), 'time_taken': 663256.0, 'time_delta': '7 days, 16:14:16', 'additions': 282, 'deletions': 12, 'state': 'closed'}, {'id': 451520407, 'number': 9950, 'closed': datetime.datetime(2020, 7, 26, 18, 50, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 17, 22, 44, 45, tzinfo=datetime.timezone.utc), 'time_taken': 763527.0, 'time_delta': '8 days, 20:05:27', 'additions': 20, 'deletions': 13, 'state': 'closed'}, {'id': 448417020, 'number': 9899, 'closed': datetime.datetime(2020, 7, 21, 0, 51, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 18, 24, 30, tzinfo=datetime.timezone.utc), 'time_taken': 628043.0, 'time_delta': '7 days, 6:27:23', 'additions': 7, 'deletions': 5, 'state': 'closed'}, {'id': 448403896, 'number': 9898, 'closed': datetime.datetime(2020, 7, 26, 8, 11, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 17, 55, 32, tzinfo=datetime.timezone.utc), 'time_taken': 1088184.0, 'time_delta': '12 days, 14:16:24', 'additions': 105, 'deletions': 63, 'state': 'closed'}, {'id': 441100603, 'number': 9705, 'closed': datetime.datetime(2020, 7, 2, 1, 19, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 28, 19, 10, 31, tzinfo=datetime.timezone.utc), 'time_taken': 281337.0, 'time_delta': '3 days, 6:08:57', 'additions': 13, 'deletions': 7, 'state': 'closed'}, {'id': 440933733, 'number': 9692, 'closed': datetime.datetime(2020, 7, 6, 18, 35, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 27, 16, 35, 54, tzinfo=datetime.timezone.utc), 'time_taken': 784771.0, 'time_delta': '9 days, 1:59:31', 'additions': 290, 'deletions': 14, 'state': 'closed'}, {'id': 437688240, 'number': 9613, 'closed': datetime.datetime(2020, 7, 1, 23, 0, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 5, 20, 23, tzinfo=datetime.timezone.utc), 'time_taken': 841209.0, 'time_delta': '9 days, 17:40:09', 'additions': 31, 'deletions': 24, 'state': 'closed'}, {'id': 433056483, 'number': 9490, 'closed': datetime.datetime(2020, 6, 19, 9, 7, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 11, 12, 54, 45, tzinfo=datetime.timezone.utc), 'time_taken': 677563.0, 'time_delta': '7 days, 20:12:43', 'additions': 309, 'deletions': 231, 'state': 'closed'}, {'id': 416509587, 'number': 9295, 'closed': datetime.datetime(2020, 5, 26, 8, 30, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 12, 6, 14, 11, tzinfo=datetime.timezone.utc), 'time_taken': 1217764.0, 'time_delta': '14 days, 2:16:04', 'additions': 1613, 'deletions': 24, 'state': 'closed'}, {'id': 403610248, 'number': 9092, 'closed': datetime.datetime(2020, 5, 18, 16, 53, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 15, 8, 16, 54, tzinfo=datetime.timezone.utc), 'time_taken': 2882168.0, 'time_delta': '33 days, 8:36:08', 'additions': 179, 'deletions': 24, 'state': 'closed'}, {'id': 395027173, 'number': 8934, 'closed': datetime.datetime(2020, 3, 30, 8, 45, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 28, 1, 21, 34, tzinfo=datetime.timezone.utc), 'time_taken': 199410.0, 'time_delta': '2 days, 7:23:30', 'additions': 45, 'deletions': 15, 'state': 'closed'}, {'id': 392796264, 'number': 8916, 'closed': datetime.datetime(2020, 3, 26, 3, 33, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 24, 6, 8, 3, tzinfo=datetime.timezone.utc), 'time_taken': 163552.0, 'time_delta': '1 day, 21:25:52', 'additions': 40, 'deletions': 0, 'state': 'closed'}]"
