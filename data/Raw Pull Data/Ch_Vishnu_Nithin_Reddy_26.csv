pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
968006333,(Celebrating learners' accomplishments) Milestone 1.1: Add end chapter check-mark and confetti,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #N/A.
2. This PR does the following: Adds end chapter check-mark and confetti components as part of milestone 1.

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

Triggered when feature is enabled and exploration is played in story mode: [Video](https://drive.google.com/file/d/1t9OJW7nAe4vvQtWAD2Xl2lMLa5euIkUo/view?usp=sharing)

Not triggered when exploration ISN'T played in story mode:

https://user-images.githubusercontent.com/78612244/173840137-c0f1b5a0-465b-4c33-85da-8bce45e66ac1.mp4

Mobile view:

https://user-images.githubusercontent.com/78612244/174051461-a3bc02c2-7f3f-4517-b70d-4f2cfcdbe87e.mp4

Fades away when skipped:

https://user-images.githubusercontent.com/78612244/173840243-9fba9c80-d3c3-4625-b719-d6bc50c4c6fb.mp4

When 'prefers-reduced-motion' is active:

https://user-images.githubusercontent.com/78612244/173840417-8589c3a9-6d33-4b64-a327-f900bc24144d.mp4


## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,15589,https://api.github.com/repos/oppia/oppia/pulls/15589,https://github.com/oppia/oppia/pull/15589,closed,892,12,25,23,16,16,0,1,[],2022-06-15 10:47:05+00:00,2022-06-21 22:07:18+00:00,559213.0,"6 days, 11:20:13","[{'comment_id': 898700195, 'comment_body': 'Few questions regarding the use of HostListener:\r\n\r\n1. When is this listener attached to the DOM and when is it removed?\r\n2. Are there any performance concerns in using HostListener? It seems like we only want to detect click events when the animation is shown. Seems excessive to add an event listener on the document because it can lead to unintended side effects. (Might be an interesting thread https://github.com/angular/angular/issues/7626.)\r\n\r\n/cc @srijanreddy98 @ashutoshc8101 in case they have any thoughts', 'comment_created': datetime.datetime(2022, 6, 16, 5, 17, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 898702830, 'comment_body': 'FWICT `flac` format is relatively larger than other audio formats. Please check with the speed team if the asset size is reasonable.\r\n\r\n/cc @vojtechjelinek', 'comment_created': datetime.datetime(2022, 6, 16, 5, 23, 19, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 898707081, 'comment_body': 'This seems a bit odd, is it possible to use media queries in the CSS to detect this and do the needful? In general, it is good practice to separate template / styling specific code from core logic.', 'comment_created': datetime.datetime(2022, 6, 16, 5, 32, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 898708219, 'comment_body': 'The variable name here does not seem to convey that it is refering to an audio file. Also, in the future may change the audio file and it might not have a ""tadaa"" effect. Can we rename it?', 'comment_created': datetime.datetime(2022, 6, 16, 5, 34, 54, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 898709842, 'comment_body': 'Is there a way to implement this in the CSS?', 'comment_created': datetime.datetime(2022, 6, 16, 5, 38, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 898913969, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 16, 9, 58, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 898917769, 'comment_body': ""Actually, I _could_ use the media query in CSS to prevent the confetti from being animated, but that still doesn't stop the audio clip from being played. The only way to prevent the audio from played is to prevent the function call in the first place, which is why I need to access the media query in the main function."", 'comment_created': datetime.datetime(2022, 6, 16, 10, 2, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 898918122, 'comment_body': 'Replaced it with an mp3 file (file size reduced to 27 KB).', 'comment_created': datetime.datetime(2022, 6, 16, 10, 3, 10, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 898918994, 'comment_body': 'Used Renderer2 to add the event listener only once the animation begins, and remove it as soon as the animation ends.', 'comment_created': datetime.datetime(2022, 6, 16, 10, 4, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 898925673, 'comment_body': ""I'm sorry but I don't think I understand. Right now, setting these variables to true/false causes the required CSS class to be applied/removed to the SVGs in the template, which triggers the corresponding transitions.\r\n\r\nCould you please explain the alternative you're suggesting in a bit more detail? Thanks!"", 'comment_created': datetime.datetime(2022, 6, 16, 10, 12, 14, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 899971519, 'comment_body': 'As discussed offline, can we use keyframes or transitions to implement this animation in the CSS?', 'comment_created': datetime.datetime(2022, 6, 17, 10, 1, 54, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 899973045, 'comment_body': 'Here and below, for the msec values, can we use named constants?', 'comment_created': datetime.datetime(2022, 6, 17, 10, 3, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 900086007, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2022, 6, 17, 12, 49, 57, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 900086107, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2022, 6, 17, 12, 50, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 901945464, 'comment_body': 'Please test `endChapterCelebratoryAudio` also', 'comment_created': datetime.datetime(2022, 6, 20, 19, 7, 22, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 902180055, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2022, 6, 21, 5, 37, 44, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}]","[{'commit_sha': '708b993f13e5327ca2329cb37b8bc0aa3e03fcb7', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a4a891422bc493f8288ad047adf3fdc6819f6bc', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c574eab63d9716bd32ed14681600cd6f379d3a61', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd84237ff39a743f6ebf10aed7232c7eead12877', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08c621bc357ae83506c8934b4cc55ce4e6cf9215', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c53b3c375aad012a10128e28b101953587a4ff3', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d78ee41b3330cbc680a11fdecab81b0110f5e8d', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f72daf8b2bfb1e202f810600efd6492394e6a292', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dc29e8a167e5c4bb17d41b1853fc7cc91e4a77e', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '023405b12f08149a9b0b1f8894cf2f5e6ec67eae', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45009d1a55a68efded814b531cfca265495c96f1', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25b7f4db211cf71f1775a8d6714ea9c97cae4c24', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b6614104ad890ba80c689709ffd039d83d19ba3', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd2bd6b2cb56a006bb33a10381c5d549fe5fdca8', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ae4f97283672a72640cbdc05f687eff7254f750', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bb9a757b7b5928d3edac74d51bbc2289fde055a', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e0ce0287547902b0999f5e7927cfc70e794e420', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97e9b9e469e1a93813ffeb06e88ec68e50d505b9', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87c11d4a99209d6d5a355aeff02aa910f843bf61', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bada1df2873f3c293c511ce45138784beda38c36', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ce18b597ec7aaf81f85cc19de5fc12f8efa280e', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '248e8a0a453661a97d5a3479ed77edf767863b8d', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa087000a2cec9d44b9aae3f8b52808e33681b2b', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}]",,78612244,,User,,16,,0,0
973858401,(Celebrating learners' accomplishments) Milestone 1.2: Modify the ratings-and-recommendations component and make sign up section dismissable,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #N/A.
2. This PR does the following: Modify the ratings and recommendations component to set it up for the next PR, and also make the sign up section dismissable.

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct\

![Exploration recommendations](https://user-images.githubusercontent.com/78612244/174861150-2d6b47b0-3411-4323-9f02-adafc566f459.png)

Dismissing the sign-up section.

https://user-images.githubusercontent.com/78612244/174861165-c92daa58-cb6c-43b5-b10f-fc19dc6da9b7.mp4


#### Proof of changes on desktop with slow/throttled network

https://user-images.githubusercontent.com/78612244/174861057-d0301863-b012-432d-ad9d-c55bd729c636.mp4


#### Proof of changes on mobile phone

End exploration recommendations.

![Exploration recommendations mobile](https://user-images.githubusercontent.com/78612244/174861102-8cf18b5e-63b5-446a-9b38-903df82d0fa9.png)

Sign up section.

![sign up section on mobile](https://user-images.githubusercontent.com/78612244/174861117-ec0e5446-59d8-4ee0-a43c-e2126ba07d31.png)

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI in any of the files listed in rtl_css.py (i.e, those that have
a separate .rtl.css file for styling), make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,15611,https://api.github.com/repos/oppia/oppia/pulls/15611,https://github.com/oppia/oppia/pull/15611,closed,311,68,13,20,37,29,0,0,[],2022-06-21 17:31:06+00:00,2022-07-09 21:10:59+00:00,1568393.0,"18 days, 3:39:53","[{'comment_id': 904911514, 'comment_body': ""Thanks for removing this, it seems odd that we added style to a protractor specific class -- these classes are just meant for e2e tests. It may be a good idea to have a lint rule to prevent adding of styles to protractor classes so things like this don't slip through, what do you think?"", 'comment_created': datetime.datetime(2022, 6, 23, 11, 34, 18, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 904915154, 'comment_body': 'Do we need a precheck for this?', 'comment_created': datetime.datetime(2022, 6, 23, 11, 39, 5, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 904918588, 'comment_body': 'Here and below, prefer const when the variable is not reassigned.', 'comment_created': datetime.datetime(2022, 6, 23, 11, 43, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 904919305, 'comment_body': 'Also, remember to wrap statements in parenthesis when it spans multiple lines (see [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide#javascript).)', 'comment_created': datetime.datetime(2022, 6, 23, 11, 44, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 904919511, 'comment_body': 'Ditto: wrap inside `(..)`', 'comment_created': datetime.datetime(2022, 6, 23, 11, 44, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 904920902, 'comment_body': 'Why do we need the non-null assertion? Please explain in a comment.', 'comment_created': datetime.datetime(2022, 6, 23, 11, 46, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 904923593, 'comment_body': 'We have a localStorageService, can we use that where localStorage related functionality is required?', 'comment_created': datetime.datetime(2022, 6, 23, 11, 49, 37, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 904924223, 'comment_body': 'ditto: use `(..)`. Here and elsewhere.', 'comment_created': datetime.datetime(2022, 6, 23, 11, 50, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 904927177, 'comment_body': 'Align these with the `*ngIf`.', 'comment_created': datetime.datetime(2022, 6, 23, 11, 53, 56, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 904927445, 'comment_body': 'Missing type definition?', 'comment_created': datetime.datetime(2022, 6, 23, 11, 54, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 905965973, 'comment_body': ""That sounds like a good idea, although I'm not sure how we should proceed (perhaps I should open an issue to track it)?"", 'comment_created': datetime.datetime(2022, 6, 24, 11, 14, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 905966164, 'comment_body': 'Added a precheck for inStoryMode and storyViewerUrl', 'comment_created': datetime.datetime(2022, 6, 24, 11, 15, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 905966266, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 24, 11, 15, 20, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 905966362, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 24, 11, 15, 28, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 905967059, 'comment_body': 'Sorry, this was a mistake. storyViewerUrl will only be defined if the exploration is being played on story mode, i.e. if inStoryMode is true (it will remain undefined otherwise).', 'comment_created': datetime.datetime(2022, 6, 24, 11, 16, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 905971650, 'comment_body': ""I think the localStorageService is meant for storing exploration draft changes. I think so because:\r\n - The fileoverview of the service says so,\r\n - In other places, (for example, in the i18n service for storing the language code in local storage) this service isn't used. It uses its own instance of localStorage (like above, i.e. first testing if localStorage is accessible, and then using it to store data)."", 'comment_created': datetime.datetime(2022, 6, 24, 11, 24, 1, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 905971731, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 24, 11, 24, 9, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 905971828, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 24, 11, 24, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 905972210, 'comment_body': 'Exported the type definition present in the ratings and recommendations component and used it here.', 'comment_created': datetime.datetime(2022, 6, 24, 11, 24, 52, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 906771390, 'comment_body': ""I think the description is outdated and is now incorrect. We use this service in the Contributor Dashboard for filtering topic and in few editor pages where we want to detect stale tabs (see #13539 and #15100.)\r\n\r\nWe should not be having a localStorage implementation in several parts of the codebase, it is just repeated code and is not maintainable.\r\n\r\nSo I'd suggest reusing the service here. Feel free to make necessary changes to the description and add relevant methods there."", 'comment_created': datetime.datetime(2022, 6, 26, 7, 40, 1, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 906771766, 'comment_body': 'Yes, please create an issue.', 'comment_created': datetime.datetime(2022, 6, 26, 7, 42, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 906824748, 'comment_body': '[Done.](https://github.com/oppia/oppia/issues/15636)', 'comment_created': datetime.datetime(2022, 6, 26, 14, 11, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 906824771, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2022, 6, 26, 14, 12, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 907729400, 'comment_body': ""```suggestion\r\n      spyOn(localStorageService, 'isStorageAvailable').and.returnValue(false);\r\n\r\n      localStorageService.updateEndChapterSignUpSectionHiddenPreference('true');\r\n\r\n      expect(localStorageService.getEndChapterSignUpSectionHiddenPreference())\r\n        .toBeNull();\r\n```"", 'comment_created': datetime.datetime(2022, 6, 27, 19, 32, 5, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 907729605, 'comment_body': ""```suggestion\r\n      localStorageService.updateEndChapterSignUpSectionHiddenPreference('true');\r\n\r\n      expect(localStorageService.getEndChapterSignUpSectionHiddenPreference())\r\n        .toBe('true');\r\n```"", 'comment_created': datetime.datetime(2022, 6, 27, 19, 32, 21, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 907729880, 'comment_body': 'Is it possible to have a pre-check for this?', 'comment_created': datetime.datetime(2022, 6, 27, 19, 32, 41, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 907797225, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 27, 21, 5, 43, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 912536796, 'comment_body': ""This looks like it doesn't have any html tags in the translation. Can you use the translate directive instead of the innerHTML + pipe."", 'comment_created': datetime.datetime(2022, 7, 3, 21, 8, 10, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 912861900, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 7, 4, 10, 25, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}]","[{'commit_sha': '9a2d0819e1d162994aa16865b8cd50d9f8182f53', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eded11f6ccf216e9c695aefe42953ade837b0e94', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76cc7f26f31ffd5a32dd8da98f17d92941698f09', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49d41ce26c29154be0af2d4b0e29e5b7686e32b3', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eae65f715cede2f13ce03a777dc3491660e5be21', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d7a6496bd2e072cc6ceef3dda29e252649c7fec', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db263bfe890e192f5228d20a265660f218037263', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36abd79f3705ec1a4c4c9bcdca27e08edaf640b3', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad5609b426d96708efe618ba8e09e07e333363c5', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9665c0a4c9e0d317df90f7467ff465822a01c15c', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79d431f83e930712e837ab873ef7d4703b7e74f8', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '323b1c8e11c54d6d249614d9737b5c6e4bdf5ee0', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd68b03e77e6f3e44023baaa9cbb4d782fb26b3dc', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5faacd9d6fb224fc931343272f853cc9cefea105', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56abb195db0e97b0a80c322ff12953c1bfa0c914', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e033aa2bae957a54bf57f3c333fafcb3c3037cb3', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a9308d1a6aff18fe46fff9144f0c179485fb1ac', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d8505525ef09561a47e5e21754e5f06e731445a', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe9a2157b2c0f8cb25ebb467949d56f3c00f4295', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c08f497d4c73733a556c46a3e3533e6e1788c46', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}]",,78612244,,User,,16,,0,0
979129186,(Celebrating learners' accomplishments) Milestone 1.3: Add milestone message and post chapter recommendations,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #N/A.
2. This PR does the following: Add the completed chapters milestone message and the post-chapter recommendations section.

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

![Screenshot](https://user-images.githubusercontent.com/78612244/176997496-21b4b18a-686d-4187-a40a-742c35778fc8.png)

To next story node

https://user-images.githubusercontent.com/78612244/176997505-48478276-ee1d-46ef-9d65-bb131ea04544.mp4


To practice tab

https://user-images.githubusercontent.com/78612244/176997509-cf01c619-ba3d-484f-8ac6-5804e05de055.mp4

On the last chapter of a story

![image](https://user-images.githubusercontent.com/78612244/176998061-a56b8ade-ff88-447e-83bd-3c52e3721dfd.png)


#### Proof of changes on desktop with slow/throttled network

https://user-images.githubusercontent.com/78612244/176998974-f381a17a-4ee9-4261-9f43-20dd2cfc3690.mp4

#### Proof of changes on mobile phone

[in-mobile-view.webm](https://user-images.githubusercontent.com/78612244/176997488-21029a70-a73b-437d-91c1-b9e52ab5e189.webm)



#### Proof of changes in Arabic language

![image](https://user-images.githubusercontent.com/78612244/176998024-d8f8c0fc-deb4-4af4-8995-4357e897aa0a.png)


## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,15634,https://api.github.com/repos/oppia/oppia/pulls/15634,https://github.com/oppia/oppia/pull/15634,closed,1011,42,27,34,44,43,0,0,[],2022-06-25 20:05:37+00:00,2022-07-19 16:45:07+00:00,2061570.0,"23 days, 20:39:30","[{'comment_id': 912925159, 'comment_body': 'It may not be clear to the user what a ""node card"" refers to. Can we rename it such that it is clearer? Note that screen readers will announce SVG titles.', 'comment_created': datetime.datetime(2022, 7, 4, 11, 49, 46, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 913280243, 'comment_body': ""Yes, I actually added the title tags to allows screen readers to read out the recommendation cards -- you're right, I've renamed it to 'chapter' instead of 'story node'."", 'comment_created': datetime.datetime(2022, 7, 4, 22, 8, 54, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 918029918, 'comment_body': 'Please maintain alphabetical order here and elsewhere in this file.', 'comment_created': datetime.datetime(2022, 7, 11, 14, 51, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ashutoshc8101', 'type': 'User'}, {'comment_id': 918293156, 'comment_body': 'Done.\r\n\r\n(While re-arranging, I noticed some duplicate elements in the `declarations`, `entryComponents`, and the `exports` arrays of the module -- for example `AddHintModalComponent` appeared twice in the `declarations` array.\r\n\r\nI removed such duplicate elements. Please let me know if there is a particular reason these duplicate elements were added so I can add them back. I launched the local server after removing the duplicate from the array and tested the component. It was working fine.)', 'comment_created': datetime.datetime(2022, 7, 11, 19, 47, 54, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 918872749, 'comment_body': '```suggestion\r\n        learner_progress_in_topics_and_stories = (\r\n            learner_progress_services.get_topics_and_stories_progress(\r\n                self.user_id)[0])\r\n```', 'comment_created': datetime.datetime(2022, 7, 12, 11, 46, 8, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 918873770, 'comment_body': ""```suggestion\r\n                completed_chapters_count += (\r\n                    len(story_fetchers.get_completed_nodes_in_story(\r\n                        self.user_id, story['id'])))\r\n```"", 'comment_created': datetime.datetime(2022, 7, 12, 11, 47, 23, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 918882955, 'comment_body': 'Is this even possible?', 'comment_created': datetime.datetime(2022, 7, 12, 11, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 918883678, 'comment_body': '```suggestion\r\n  <p class=""post-chapter-recommendation-text"">\r\n    {{ \'I18N_END_EXPLORATION_RECOMMENDATION_MESSAGE\' | translate }}\r\n  </p>\r\n```', 'comment_created': datetime.datetime(2022, 7, 12, 11, 59, 30, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 918883892, 'comment_body': 'ditto below', 'comment_created': datetime.datetime(2022, 7, 12, 11, 59, 46, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 918885971, 'comment_body': 'Why can this be undefined?', 'comment_created': datetime.datetime(2022, 7, 12, 12, 2, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 918888075, 'comment_body': '```suggestion\r\n  nextStoryNode: ReadOnlyStoryNode | null = null;\r\n```', 'comment_created': datetime.datetime(2022, 7, 12, 12, 4, 46, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 918888394, 'comment_body': '```suggestion\r\n        storyUrlFragment\r\n      ).then(\r\n```', 'comment_created': datetime.datetime(2022, 7, 12, 12, 5, 8, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 918888859, 'comment_body': '```suggestion\r\n            if (\r\n              res.nodes[i].id === nodeId && (i + 1) < res.nodes.length\r\n            ) {\r\n```', 'comment_created': datetime.datetime(2022, 7, 12, 12, 5, 42, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 918889846, 'comment_body': 'Should we put this into a svg file?', 'comment_created': datetime.datetime(2022, 7, 12, 12, 6, 58, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 918890319, 'comment_body': 'Why can this be undefined?', 'comment_created': datetime.datetime(2022, 7, 12, 12, 7, 38, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 919054874, 'comment_body': 'The value of completed chapters count is fetched via a HTTP call. Until the response object is received, the value remains undefined (added a comment).', 'comment_created': datetime.datetime(2022, 7, 12, 14, 38, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 919055069, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 12, 14, 38, 34, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 919055240, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 12, 14, 38, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 919055443, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 12, 14, 38, 52, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 919055562, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 12, 14, 38, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 919057382, 'comment_body': 'It will be undefined when the current chapter is the last chapter of a story (added a comment).', 'comment_created': datetime.datetime(2022, 7, 12, 14, 40, 34, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 919058087, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 7, 12, 14, 41, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 919064452, 'comment_body': ""I added this check to prevent the message from displaying if the learner replays a chapter. For example if a learner completes 5 chapters, they see the milestone message on completing the 5th chapter. However, if they now replay a completed chapter, they'll again see the message because the total number of completed chapters is still 5.\r\n\r\nWith this check, even if the completed chapters count is 5, the check will determine if the chapter was completed for the first time or not by checking whether the completed chapter count has changed or remained the same."", 'comment_created': datetime.datetime(2022, 7, 12, 14, 46, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 919064672, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 7, 12, 14, 46, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 919064796, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 7, 12, 14, 46, 47, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 921397787, 'comment_body': 'Please make sure that all CSS rules are scoped so that they only apply to this component.', 'comment_created': datetime.datetime(2022, 7, 14, 17, 19, 9, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 921399799, 'comment_body': 'Ahhh, okay. I only now noticed that for one it is `data.completedChaptersCount` (starting with `data`) and for the other it is `this.completedChaptersCount` (starting with `this`). Can we maybe somehow make these a bit different? I think just changing the name of `data` to smth like `fetchedData` would help with differentiation.', 'comment_created': datetime.datetime(2022, 7, 14, 17, 21, 43, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 921401994, 'comment_body': 'Why can this be undefined, ditto below.', 'comment_created': datetime.datetime(2022, 7, 14, 17, 23, 11, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 921403024, 'comment_body': '```suggestion\r\n      ).then((storyData) => {\r\n```', 'comment_created': datetime.datetime(2022, 7, 14, 17, 23, 43, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 921440786, 'comment_body': ""Why is this component added here? I see that the file is present in pages/exploration-player-page. Let's not pollute the shared components with files not in the components folder."", 'comment_created': datetime.datetime(2022, 7, 14, 18, 9, 1, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 921442752, 'comment_body': 'Sort the imports based on the module it is imported from and not what is being imported here. From the diff it is a but difficult for me to judge the new components added here. Will it be possible for you reply with the new components you added to this file?', 'comment_created': datetime.datetime(2022, 7, 14, 18, 11, 20, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 921444534, 'comment_body': 'The only new component I added to this file is the PostChapterRecommendationsComponent', 'comment_created': datetime.datetime(2022, 7, 14, 18, 13, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 921623211, 'comment_body': 'Actually, when adding this component to the exploration player page module, it results in the following console error:\r\n\r\n```\r\nUnhandled Promise rejection: Template parse errors:\r\nCan\'t bind to \'nextStoryNodeLink\' since it isn\'t a known property of \'oppia-post-chapter-recommendations\'.\r\n1. If \'oppia-post-chapter-recommendations\' is an Angular component and it has \'nextStoryNodeLink\' input, then verify that it is part of this module.\r\n2. If \'oppia-post-chapter-recommendations\' is a Web Component then add \'CUSTOM_ELEMENTS_SCHEMA\' to the \'@NgModule.schemas\' of this component to suppress this message.\r\n3. To allow any property add \'NO_ERRORS_SCHEMA\' to the \'@NgModule.schemas\' of this component. (""f=""inStoryMode && isEndChapterFeatureEnabled() && storyId"">\r\n    <oppia-post-chapter-recommendations [ERROR ->][nextStoryNodeLink]=""nextLessonLink"" [nextStoryNodeThumbnailUrl]=""nextStoryNodeIconUrl ? nextStoryNod""): ng:///SharedComponentsModule/RatingsAndRecommendationsComponent.html@45:40\r\n```\r\n\r\n`PostChapterRecommendationsComponent` is used inside the ratings-and-recommendations component, which is registered in the shared-components module. I\'m not sure, but maybe that\'s the reason adding the`PostChapterRecommendationsComponent` to the exploration player page module causes the error? I\'d like some help figuring out this error.\r\n\r\n(I haven\'t made any changes yet, apart from reverting the commit which re-arranged the imports in alphabetical order).', 'comment_created': datetime.datetime(2022, 7, 14, 22, 24, 19, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 921639133, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 14, 23, 1, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 921639210, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 14, 23, 1, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 921639285, 'comment_body': 'Added comments.', 'comment_created': datetime.datetime(2022, 7, 14, 23, 1, 52, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 921639797, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 14, 23, 3, 3, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 922347677, 'comment_body': ""Wasn't `+ 1` here before?"", 'comment_created': datetime.datetime(2022, 7, 15, 16, 57, 1, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 922362551, 'comment_body': ""Yes, but I changed it because of the 80 character limit.\n\nAdditionally, as a side-effect, this now covers a highly unlikely, but possible case:\n\nIf a learner, who completed 3 chapters, begins a new chapter A, and in the middle of this, begins and completes a different chapter B in a different tab, and then comes back to A and completes it, they have now completed 5 chapters and should see the message.\n\nBut the completed chapters count when chapter A was initially loaded was 3, and because the new completed count is 5, the old condition ( of +1) would not have worked and the message wouldn't have been displayed.\n\nThe inequality condition doesn't suffer from that issue."", 'comment_created': datetime.datetime(2022, 7, 15, 17, 10, 15, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 923336508, 'comment_body': 'From the offline discussion:\r\n\r\nPostChapterRecommendationsComponent is used in ratings and recommendation. This component is used in a lot of pages. So we have decided to create a new module called recommendations in the core/templates/components folder for the recommendations related code.', 'comment_created': datetime.datetime(2022, 7, 18, 12, 51, 10, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 923491638, 'comment_body': ""I've moved the new `PostChapterRecommendationsComponent` into a separate folder in the components directory, and created a new module to register the component in and finally imported this module into the shared-components module.\r\n\r\nHowever, I have two queries.\r\n\r\n - I also tried moving the `ratings-and-recommendations` component like we discussed, but I faced an issue. The component uses the `exploration-summary-tile` component in its template. This requirement was initially satisfied because both the components were in the `shared-components` module. However, after moving the `ratings-and-recommendations` component into its own module, the summary tile component now needs to be provided in this module as well for the functioning of the `ratings-and-recommendations` component.\r\n \r\n -- Since declaring the `summary-tile` component it in two places is not an option, I think the ideal solution is to package all summary tile components (`exploration-summary-tile`, `collection-summary-tile`, etc.) into a discrete module and use this module instead. However, that could take a while and I unfortunately do not have the bandwidth to do so at the moment; I may be able to take up this issue (moving the ratings-and-recommendations into the new module) at a later date (sorry about that!).\r\n \r\n  - Also, I need to add codeowners for the newly created recommendations folder in the components directory. Who should I be adding as a codeowner here? (I've added lace-frontend-reviewers to push the changes for now)"", 'comment_created': datetime.datetime(2022, 7, 18, 15, 11, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 924393787, 'comment_body': 'Approved. Can you create an issue so that it is being tracked?', 'comment_created': datetime.datetime(2022, 7, 19, 11, 43, 18, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 924467599, 'comment_body': '[Done!](https://github.com/oppia/oppia/issues/15765)', 'comment_created': datetime.datetime(2022, 7, 19, 12, 55, 54, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}]","[{'commit_sha': '77e848d2a5f1120315b3b47b39b32fc377a6b6d5', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57d6c1d298012b3e57970765f1305848ecebfd18', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '092e51f6b3f90f5da1621851c0a0670b304bfff9', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b16c8ad23c22a74f8961b87581dfe6c4afd0542', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbdbb04b3b4eb500aeba2839dd1a613c280ac130', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1b74a37db0659d4cf348cabb12742c172393a0a', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97f8ea05d73ab628a07a9f6adc43e714fe79383a', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '440921f40f4723357ccd5e9564f52cddb43e07f4', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32de4f1edac811d920a1bcbc0974284e01a6206a', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2d38ca7763b14b8b8df9ba720e02d506309e24c', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a5423011a34378ec4c4feaf320e95fcec2edf93', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e3a36c0f205436c2d639b80e0dfeee5d59dbcaf', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b415533c0a0db07f1e06b8476596899a85ad84a8', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfdbda5bd57bd59f488ca2a8a3b3f14e0dd8dbe1', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd751ded896c08491da3c6eeef09ed5016d9511a5', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76a083cded123c2e24cbc1fdf4c21a2fff2840b4', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f755b598290e1af0538c2fce17460b6b9aef6c7', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aea201ac9c049000a5295e59d6cd0a5b5a9cb10a', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd31512898a4837290f79b265a483e52aae60bb04', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '205caf41b299a35699ce0a4182661b563c2806f0', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c17e2f433750c44578d3e671512d94417111908b', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a4d0d85e100e7a68cb66a60298a7203628040a0', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5e5c7a62004c6815cbe8309b554ef132ef6f3f6', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ec8eca23fa60933935b925351bb60cc9c43dce5', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd785b606eb1fb46207fcf3e15744004621962b8', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46494e3f582dd57bb84e867b5ea0ff6b60f5a973', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e5b873e537120ca6f7d852aa3ed5e7259e29fdd', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15e528db122eaa28a44abd29c84f58810ce8373c', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eaec1df5df26520b659748ab83bfb52ad07fd201', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1c975d15ba69432f9916f36e156c4c6fe7b979f', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2944c628d1624782c5176d27fe33e6f2a4efc25', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b9fd10371cf7eebdbfa36173d2661e454ed0f0e', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fdc0354dd84e2bd80aaa35ee0f9e2bd35bb1524', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce637428f857dd8f24f6e3bf86c186a420e92ad4', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}]",,78612244,,User,,16,,0,0
997790542,(Celebrating learners' accomplishments) Milestone 1.4: Add E2E tests,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #N/A.
2. This PR does the following: Add E2E tests.

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

Standard check-mark animation:

https://user-images.githubusercontent.com/78612244/180043197-4893e968-006c-408e-b30c-580561a7ce7f.mp4

[[With audio](https://drive.google.com/file/d/1lbJaWwnavaqCVCvsdt5HTc5JoBe7BiD1/view?usp=sharing)]

When animations are disabled:

https://user-images.githubusercontent.com/78612244/180043525-03f9560e-c2e2-4672-b457-990e5147cae2.mp4

Check-mark skipped on click, and the result of clicking the next chapter card:

https://user-images.githubusercontent.com/78612244/180043272-cc3b0639-4b16-44c0-9520-cb9c79c97cf3.mp4

The result of clicking the Practice button:

https://user-images.githubusercontent.com/78612244/180043378-7ebb1575-cbfc-4a7f-aa43-b0e48960857b.mp4

Dismissing the sign-up section:

https://user-images.githubusercontent.com/78612244/180043600-194efe5e-942c-4cfd-a46e-f177cc35b212.mp4

The milestone message (shown on completing the first chapter in this case):
![Screenshot from 2022-07-20 22-43-15](https://user-images.githubusercontent.com/78612244/180043700-a1284650-978c-40bf-ab61-4df727293334.png)

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,15725,https://api.github.com/repos/oppia/oppia/pulls/15725,https://github.com/oppia/oppia/pull/15725,closed,205,6,8,37,32,14,0,1,[],2022-07-15 13:59:51+00:00,2022-07-23 19:15:50+00:00,710159.0,"8 days, 5:15:59","[{'comment_id': 924309428, 'comment_body': ""Instead of creating and using the `waitForSignUpSection` function, why don't we just use the already-available `waitFor.visibilityOf()` function? The same goes for all other `waitFor...` functions created in this PR."", 'comment_created': datetime.datetime(2022, 7, 19, 10, 4, 12, tzinfo=datetime.timezone.utc), 'commenter': 'krishnarao22', 'type': 'User'}, {'comment_id': 924330701, 'comment_body': ""@krishnarao22 however to do it that way, wouldn't I need to interact directly with the page (i.e. use an element selector in the suite file).\r\n\r\nI had the second point of the ['Writing the tests' section](https://github.com/oppia/oppia/wiki/WebdriverIO#writing-the-tests) in my mind when I created these `waitForXYZ` functions, i.e. to avoid using element selectors in the suite file.\r\n\r\nPlease let me know if I'm missing something/misunderstood your point."", 'comment_created': datetime.datetime(2022, 7, 19, 10, 28, 27, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 926120158, 'comment_body': 'Replaced the functions with the visibilityOf() and invisibilityOf() `waitFor` methods.\r\n\r\nDone.', 'comment_created': datetime.datetime(2022, 7, 20, 23, 5, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 926160802, 'comment_body': ""Hi @nithinrdy, I checked with Ben on how platform params are supposed to work and got more clarification on this.\r\n\r\nFirstly, in terms of workflow: what seems ideal is that there's a way for a feature to be on in develop and off in production, and turned on in production later when Diana (or the PM team) have approved it. (The idea of gating this PR on PM review seems counter to this ideal, so I checked with Ben to see if I was thinking about this workflow correctly.)\r\n\r\nPer @BenHenning, this workflow is exactly what is intended and how things should work today if the code is gated by the platform parameter's boolean value. It will only default on for the current build environment of the server (i.e. if it's in 'dev' stage then it's automatically on for the dev environment, but will be off for test & production). If we want to follow that in this case, we would not want to remove the platform parameter in this PR as that will result in the feature being enabled automatically in the next deployment that PR is included in.\r\n\r\nFor integration tests, https://github.com/oppia/oppia/blob/develop/core/tests/protractor/featureGatingFlow.js is the demo test for showing how to set this up in the protractor environment (it's basically just adding a step to navigate to the admin panel to enable the test, and then running the specific test). Might this help?\r\n\r\nAlso adding @BenHenning to clarify anything I've missed, or for further follow-ups."", 'comment_created': datetime.datetime(2022, 7, 21, 0, 51, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 926293000, 'comment_body': ""Hi Sean, thanks for taking a look. \r\n\r\n> It will only default on for the current build environment of the server (i.e. if it's in 'dev' stage then it's automatically on for the dev environment, but will be off for test & production).\r\n\r\nCould you maybe define 'on' and 'off' in this context? Because the way that I noticed the flags function on my local server was a little different.\r\n\r\nFrom what I've noticed on my local dev server (and based on the code in the `create_platform_parameter` method in `platform_parameter_registry.py`), the features are disabled by default regardless of feature stage (i.e. whether the feature flag is labeled to be in the DEV, TEST, or PROD stages, it is disabled on all of them by default; DEPRECATED is different from these of course).\r\n\r\nThe feature stages don't define the environment in which the featues are turned on, [they define the environments where the features COULD be turned on in](https://github.com/oppia/oppia/wiki/Developing-new-features-with-feature-gating#feature-stage-explanation).\r\n\r\nA feature in the DEV stage is disabled by default on all environments, but can be turned on in the DEV environment by an admin. It cannot be turned on in testing and production environments by said admin (this is the stage I put the flag in in [the first PR](https://github.com/oppia/oppia/pull/15589/files), because the feature was incomplete and there was no reason to turn it on in prod).\r\n\r\nA feature in the PROD stage is, again, disabled by default in all environments, but can be turned on in dev, test and prod enviromnents by an admin. (this is the stage I put the flag in in [the third PR](https://github.com/oppia/oppia/pull/15634/files), because the feature was now complete and it may now be turned on in prod/test environments for testing).\r\n\r\nI found the above behaviour to be consistent across both modes of my local server (i.e. in dev mode and in prod mode).\r\n\r\nUnless I'm doing something wrong/feature flags function differently on _oppiatestserver.org_ and _oppia.org_, the above description and rules should apply there too.\r\n\r\n(I'd be happy to know if I'm missing something/got something wrong in this comment @seanlip @BenHenning).\r\n\r\nHowever, like you stated, removing the flag will indeed enable the features on the next deployment which includes this PR, but I assumed this _was_ the intention, i.e. to remove the flag and enable the features once we get an approval from Diana (This PR is meant to be merged after Diana tests these features on the test server (which Kevin said should be done in a day or so))?\r\n\r\nIs the flag to be removed at some later date i.e. after the evaluation?\r\nPlease confirm if you'd like me to leave the flag in PROD stage and I'll rewrite the E2E tests accordingly. Thanks!"", 'comment_created': datetime.datetime(2022, 7, 21, 6, 19, 32, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 926295261, 'comment_body': ""Thanks @nithinrdy -- great analysis. It is possible that the system is not working as intended, and if that's the case, this PR is indeed blocked on Diana's approval.\r\n\r\nBut in order to figure out whether this is the case, I think we need confirmation from @BenHenning since he was the one who oversaw platform parameters (and I have limited knowledge about the system, so I'm currently playing messenger). Could you discuss this with him directly, please?\r\n\r\nThanks!"", 'comment_created': datetime.datetime(2022, 7, 21, 6, 23, 32, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 926300170, 'comment_body': ""Got it @seanlip, I'll talk to Ben regarding this.\r\n\r\nCould you please confirm this part of the comment, as it is concerned more with my project and not the gating system, and I'm a little unclear about it?\r\n\r\n> However, like you stated, removing the flag will indeed enable the features on the next deployment which includes this PR, but I assumed this _was_ the intention, i.e. to remove the flag and enable the features once we get an approval from Diana (This PR is meant to be merged after Diana tests these features on the test server (which Kevin said should be done in a day or so))?\r\n> \r\n> Is the flag to be removed at some later date i.e. after the evaluation?\r\n\r\nThanks!"", 'comment_created': datetime.datetime(2022, 7, 21, 6, 31, 15, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 926304466, 'comment_body': 'Yup you can totally get the rest of the reviews done in the meantime.\r\n\r\nRe the quoted comment, what I stated was based on my (incorrect? correct?) understanding of how the feature gating system is supposed to function. My take is that overall, I would prefer if we could merge the e2e tests to develop without being worried about having to tweak the platform parameters; these things should really be independent and what that would mean is that the platform parameter tweaking wouldn\'t be in this PR. But it seems like these are currently a bit intertwined.\r\n\r\nSo: if they are intertwined and this isn\'t easily resolvable, then my earlier comment applies (i.e. Diana approves, I approve removal of the flag, we merge).\r\n\r\nAnd if they are not intertwined, then it would be better if this PR just had the e2e tests and the feature turned on in dev (but not prod), and then we can turn on the feature in prod whenever we want (and there is less time pressure on the feature review due to the ""blocking code merging"" side effect).\r\n\r\nDoes that help clarify?', 'comment_created': datetime.datetime(2022, 7, 21, 6, 37, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 926316145, 'comment_body': 'Yes, that clears things up thank you', 'comment_created': datetime.datetime(2022, 7, 21, 6, 53, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 926338215, 'comment_body': ""Hi @nithinrdy,\r\n\r\nI think I misread this file name when I did this review and thought it was a `util` file. \r\n\r\nYour original file was correct. Can you restore the old versions of `topicAndStoryViewer.js` and its corresponding `util` file (with the `waitFor...` functions you wrote)? I'm really sorry about this.\r\n\r\nPlease ping me when you're done and I'll approve it straight away. Apologies again.\r\n\r\n"", 'comment_created': datetime.datetime(2022, 7, 21, 7, 21, 39, tzinfo=datetime.timezone.utc), 'commenter': 'krishnarao22', 'type': 'User'}, {'comment_id': 926349736, 'comment_body': ""No worries! I've pushed a revert commit, PTAL."", 'comment_created': datetime.datetime(2022, 7, 21, 7, 34, 27, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 927178260, 'comment_body': ""Hi. I think I was wrong yesterday when I was providing context to you @seanlip. @nithinrdy's description above sounds correct--the stage defines *which* environments the parameter is allowed to be enabled in.\r\n\r\nRegarding the question of when to enable this, I think that's up to you @seanlip. The intention would be that once this feature is finished, it's promoted to testing stage for QA verification. After it's approved by QA, it can enabled for production and enabled after the next release goes out. We would only deprecate the feature once we're confident we would not want to ever roll it back."", 'comment_created': datetime.datetime(2022, 7, 21, 23, 38, 53, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 927258397, 'comment_body': ""OK, thanks @BenHenning!\r\n\r\nIn that case, @nithinrdy, let's leave the flag in PROD stage and turn it on after the deployment is made. I think we should start practising the use of this flow for feature flags in general, and this is a good feature to do that for. Would that be OK?"", 'comment_created': datetime.datetime(2022, 7, 22, 3, 30, 22, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 927566163, 'comment_body': ""Thanks @BenHenning!\r\n\r\n@seanlip Okay so I've reverted the changes which correspond to deprecating the flag, and moved it back to the PROD stage.\r\nI've now modified the E2E tests to first enable the feature flag in prod mode before running the topic and story viewer tests."", 'comment_created': datetime.datetime(2022, 7, 22, 11, 36, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}]","[{'commit_sha': '77e848d2a5f1120315b3b47b39b32fc377a6b6d5', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57d6c1d298012b3e57970765f1305848ecebfd18', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '092e51f6b3f90f5da1621851c0a0670b304bfff9', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b16c8ad23c22a74f8961b87581dfe6c4afd0542', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbdbb04b3b4eb500aeba2839dd1a613c280ac130', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1b74a37db0659d4cf348cabb12742c172393a0a', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97f8ea05d73ab628a07a9f6adc43e714fe79383a', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '440921f40f4723357ccd5e9564f52cddb43e07f4', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32de4f1edac811d920a1bcbc0974284e01a6206a', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2d38ca7763b14b8b8df9ba720e02d506309e24c', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a5423011a34378ec4c4feaf320e95fcec2edf93', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e3a36c0f205436c2d639b80e0dfeee5d59dbcaf', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b415533c0a0db07f1e06b8476596899a85ad84a8', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfdbda5bd57bd59f488ca2a8a3b3f14e0dd8dbe1', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd751ded896c08491da3c6eeef09ed5016d9511a5', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76a083cded123c2e24cbc1fdf4c21a2fff2840b4', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f755b598290e1af0538c2fce17460b6b9aef6c7', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aea201ac9c049000a5295e59d6cd0a5b5a9cb10a', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd31512898a4837290f79b265a483e52aae60bb04', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '205caf41b299a35699ce0a4182661b563c2806f0', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c17e2f433750c44578d3e671512d94417111908b', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a4d0d85e100e7a68cb66a60298a7203628040a0', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5e5c7a62004c6815cbe8309b554ef132ef6f3f6', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ec8eca23fa60933935b925351bb60cc9c43dce5', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd785b606eb1fb46207fcf3e15744004621962b8', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46494e3f582dd57bb84e867b5ea0ff6b60f5a973', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61bea8674f14debd2076ecbadc44bca27a65fb00', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1d898d688237fe598a671eeb996812e4faa69da', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee1e0437ff8a4980ebafa7da86493381d915253a', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41281f878e98978cb6fc5dc37006a17939e0dca5', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c937eae8258fd3d1e168310f4faec7bd0c0801f', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e6667cfc8373e07afc80d29e227a85a8baaf4c4', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab87c7e11f83c8b9c4898f647633f22f9e1e6051', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad047a607aaf43cd2aa87bb759592b3fcf88b96d', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7234f0b6632cd567214acbe96fff2514cbd88679', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '964139e70a8779250b70e17d34acf809694ac170', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2937b7124090715f0a75bb805f8998d64ae65ee', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}]",,78612244,,User,,16,,0,0
1006219115,(Celebrating learners' accomplishments) Make changes based on Web PMs' feedback,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #N/A.
2. This PR does the following: Add revision card as an option if practice questions are disabled; Add a milestone progress bar on the last card of a chapter.

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

Diana's suggestions:

![Screenshot from 2022-07-24 21-16-32](https://user-images.githubusercontent.com/78612244/180655485-2dc999db-6e11-4ddc-b357-cbfbecd74e99.png)

Om's suggestions:
![Screenshot from 2022-07-27 22-53-21](https://user-images.githubusercontent.com/78612244/181343800-f11bf449-a223-407c-96e8-381b4a43b6fc.png)


<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

https://user-images.githubusercontent.com/78612244/180655500-358d631e-67a9-406f-8324-6df5d3cc5603.mp4



#### Proof of changes on mobile phone

![image](https://user-images.githubusercontent.com/78612244/181345271-a3a5b8f2-e5fd-427c-9842-4227aab49e54.png)


![image](https://user-images.githubusercontent.com/78612244/181345159-73e060ed-0c97-45e2-8b7a-28e1b10766b1.png)


<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->
![image](https://user-images.githubusercontent.com/78612244/181345066-ad3f8e06-1be9-42a8-8c27-2c0e33784e45.png)


![image](https://user-images.githubusercontent.com/78612244/181344998-6dc179a7-30b7-498d-bf1a-4843812424d2.png)



## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,15780,https://api.github.com/repos/oppia/oppia/pulls/15780,https://github.com/oppia/oppia/pull/15780,closed,321,19,12,12,17,26,1,1,[{'name': 'PR: LGTM'}],2022-07-22 23:34:11+00:00,2022-07-29 02:00:14+00:00,527163.0,"6 days, 2:26:03","[{'comment_id': 931982505, 'comment_body': '```suggestion\r\n                   class=""post-chapter-recommendations-revision-icon""\r\n```', 'comment_created': datetime.datetime(2022, 7, 28, 9, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 931982686, 'comment_body': 'Prefer using a class.', 'comment_created': datetime.datetime(2022, 7, 28, 9, 17, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 931983634, 'comment_body': 'Can we use the bootstrap class `font-italic`?', 'comment_created': datetime.datetime(2022, 7, 28, 9, 18, 28, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 931992440, 'comment_body': 'It seems like the method name does not completely capture the operations done. The current name seems to just suggest that some checks are performed and a boolean is returned, but looking at the implementation, it looks like we modify a component variable. A developer may use this method incorrectly (e.g. not knowing there is a side effect) in the future and can result in bugs. Can we rename this?', 'comment_created': datetime.datetime(2022, 7, 28, 9, 27, 27, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 932041005, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 7, 28, 10, 19, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932041055, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 7, 28, 10, 19, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932041130, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 7, 28, 10, 19, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932083519, 'comment_body': 'This seems a bit too complicated to put into a translate string. Can we make this simpler, probably by splitting ""Complete 1 more chapter to reach your next milestone!"" and ""Complete # more chapters to reach your next milestone!"" into two translate strings.', 'comment_created': datetime.datetime(2022, 7, 28, 11, 5, 33, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 932086529, 'comment_body': 'I will remain `false`, right?', 'comment_created': datetime.datetime(2022, 7, 28, 11, 9, 28, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 932089499, 'comment_body': '```suggestion\r\n            <div class=""milestone-progress-bar-inner"" \r\n                       [style.width.%]=""(completedChaptersCount / nextMilestoneChapterCount) * 100"">\r\n            </div>\r\n```', 'comment_created': datetime.datetime(2022, 7, 28, 11, 13, 12, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 932089753, 'comment_body': '```suggestion\r\n            <img [src]=""getStaticImageUrl(\'/general/milestone-message-star-icon.svg\')"" \r\n                 class=""star-icon"">\r\n```', 'comment_created': datetime.datetime(2022, 7, 28, 11, 13, 32, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 932091084, 'comment_body': 'Can you put this condition into a function with some name for better readability.', 'comment_created': datetime.datetime(2022, 7, 28, 11, 15, 20, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 932091754, 'comment_body': 'There is a missing return at the end of this function.', 'comment_created': datetime.datetime(2022, 7, 28, 11, 16, 15, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 932311060, 'comment_body': 'Actually, based on all of the prior `if` conditions in the function, control will never reach the end of function, past the `for` loop. How do I handle this, i.e does there still need to be a return at the end?', 'comment_created': datetime.datetime(2022, 7, 28, 14, 39, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932337482, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 28, 14, 55, 30, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932337609, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 28, 14, 55, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932337731, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 28, 14, 55, 41, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932338163, 'comment_body': 'My bad, I made some changes and forgot to remove the comment. Done.', 'comment_created': datetime.datetime(2022, 7, 28, 14, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932346337, 'comment_body': ""This is actually [the recommended way](https://github.com/oppia/oppia/wiki/How-to-develop-for-i18n#plurals-and-gender) of handling texts which change based on the plurality of one of the objects in the sentence. There are other examples of this too, like [this](https://github.com/oppia/oppia/blob/8f04c4b559eab93f28c155606106e9e86501cb5f/assets/i18n/en.json#L557) and [this](https://github.com/oppia/oppia/blob/8f04c4b559eab93f28c155606106e9e86501cb5f/assets/i18n/en.json#L469), which already have correct translations present in the codebase, so I don't think this string will cause any issues either."", 'comment_created': datetime.datetime(2022, 7, 28, 15, 0, 3, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932351574, 'comment_body': ""Moreover, I won't be able to write a Frontend test for it too (because control will never reach that part of the function no matter the combination of conditions), unless I change the function itself."", 'comment_created': datetime.datetime(2022, 7, 28, 15, 3, 9, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932383798, 'comment_body': 'I guess return false, in the tests you can mock `MILESTONE_SPECIFIC_COMPLETED_CHAPTER_COUNTS` so that the loop does finish.', 'comment_created': datetime.datetime(2022, 7, 28, 15, 23, 24, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 932384772, 'comment_body': 'Got it', 'comment_created': datetime.datetime(2022, 7, 28, 15, 24, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932385069, 'comment_body': '```suggestion\r\n    return (\r\n      this.milestoneMessageIsToBeDisplayed &&\r\n      MILESTONE_SPECIFIC_COMPLETED_CHAPTER_COUNTS.includes(\r\n        this.completedChaptersCount\r\n      )\r\n    );\r\n```', 'comment_created': datetime.datetime(2022, 7, 28, 15, 24, 36, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 932529723, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 28, 18, 1, 25, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932529841, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 28, 18, 1, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932735312, 'comment_body': 'Interesting, okay.', 'comment_created': datetime.datetime(2022, 7, 28, 22, 47, 25, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}]","[{'commit_sha': '3616a7b00f3ca92200c83cafc6647cdd32021421', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45e150216e6c858d5f5f6dc2f4bbe4a3976de5f5', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad52eca4475cb1baa5a29c92904f14bb3ed26d4d', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20c9dd549104bc355d4ce12a5546b01fc97338b9', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22d52c8ba50e5881ea15ece9ddda0130db145e7b', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8626d5d927c37a44ef9b45f99c882dd3f2ef575', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14700a81b2923a02d62a8719fd5b0504982cc237', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55666d89503bb58a65ba17918791b784f00b57d3', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'beeb74b365c5e121a9cd87983e31386cc0a58acc', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d42e473a95997daa97b9efdb61fa7e535f41d88', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6aa6e68bc7a37eaa575c437e30b9d9011712ee43', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '458c2e716266637cfd1d04acf910d3d93a010b7f', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}]",,78612244,,User,,16,,0,0
1006219929,Merge the Lesson information modal on the top-navbar with the one on the footer,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #N/A.
2. This PR does the following: Merges both the modals and adds redesigned progress bar.

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

![Screenshot from 2022-07-25 16-09-23](https://user-images.githubusercontent.com/78612244/180759405-eac28dc1-176f-4353-a7a4-fc98317e8e11.png)

Contributor icons in case of multiple contributors:
![image](https://user-images.githubusercontent.com/78612244/180788597-9cda795d-d9db-4292-9fcd-18ba7aa2cd07.png)

https://user-images.githubusercontent.com/78612244/180788637-0189cbb5-cb55-44a9-85ed-2554a707a510.mp4



#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

https://user-images.githubusercontent.com/78612244/180759486-447cfd38-9382-4c2d-a907-befb94be4a38.mp4

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

![image](https://user-images.githubusercontent.com/78612244/181500165-00371972-51d8-45ca-9d06-3d0f4d6a563d.png)


#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

![image](https://user-images.githubusercontent.com/78612244/180759639-a18739b3-787e-4a28-8c9e-731cf87ecc33.png)



## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,15781,https://api.github.com/repos/oppia/oppia/pulls/15781,https://github.com/oppia/oppia/pull/15781,closed,1478,1307,38,45,40,52,0,0,[],2022-07-22 23:37:13+00:00,2022-08-02 18:40:57+00:00,932624.0,"10 days, 19:03:44","[{'comment_id': 932348159, 'comment_body': 'Can you wait to make sure the element has loaded before you try and set its value?', 'comment_created': datetime.datetime(2022, 7, 28, 15, 1, 24, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 932395763, 'comment_body': ""Hi @U8NWXD, actually, the function responsible for saving a config [does wait for the element](https://github.com/oppia/oppia/blob/8f04c4b559eab93f28c155606106e9e86501cb5f/core/tests/protractor_utils/AdminPage.js#L151), so I couldn't quite understand what you meant. I've added an await for the element whose value is being set, please lmk if this is what you meant."", 'comment_created': datetime.datetime(2022, 7, 28, 15, 33, 13, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932521898, 'comment_body': 'Ahh I missed the `waitFor.visibilityOf` here:\r\n\r\nhttps://github.com/oppia/oppia/blob/8f04c4b559eab93f28c155606106e9e86501cb5f/core/tests/protractor_utils/AdminPage.js#L145\r\n\r\nLGTM!', 'comment_created': datetime.datetime(2022, 7, 28, 17, 52, 2, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 932749584, 'comment_body': ""Let's use a constant for the different statuses."", 'comment_created': datetime.datetime(2022, 7, 28, 23, 21, 59, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 932750869, 'comment_body': ""In general, we try to separate styling from component logic i.e. styling belongs in the template file and logic belongs in the component TS file (controller). So I'd like to understand why this needs to be done here.   "", 'comment_created': datetime.datetime(2022, 7, 28, 23, 25, 5, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 932751476, 'comment_body': ""Prefer a constant for 'private'"", 'comment_created': datetime.datetime(2022, 7, 28, 23, 26, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 932751980, 'comment_body': ""```suggestion\r\n      i++\r\n    ) {\r\n      this.checkpointStatusArray[i] = 'incomplete';\r\n```"", 'comment_created': datetime.datetime(2022, 7, 28, 23, 27, 54, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 932752122, 'comment_body': 'Ditto: prefer a constant', 'comment_created': datetime.datetime(2022, 7, 28, 23, 28, 15, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 932752346, 'comment_body': 'Here and below, if the variable is not reassigned, prefer `const` over `let`.', 'comment_created': datetime.datetime(2022, 7, 28, 23, 28, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 932753302, 'comment_body': 'Can we keep this in the previous line?', 'comment_created': datetime.datetime(2022, 7, 28, 23, 31, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 932759527, 'comment_body': 'Considering the image is used for decorative purposes, it is fine to either leave the alt field blank or perhaps add role=""presentation"" to let screen readers know it is purely for presentation purpose. Found this to be handy in deciding what to do with `alt` in different scenarios: https://www.w3.org/WAI/tutorials/images/decision-tree/', 'comment_created': datetime.datetime(2022, 7, 28, 23, 48, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 932760017, 'comment_body': ""I can't find the definition for `oppia-lesson-info-header`. Can we just define and use this class name instead of `oppia-lesson-info-h1` above?"", 'comment_created': datetime.datetime(2022, 7, 28, 23, 49, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 932760705, 'comment_body': 'Please use HEX / RGB values for colors (see [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide#css)).', 'comment_created': datetime.datetime(2022, 7, 28, 23, 51, 27, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 932760886, 'comment_body': 'Please use HEX / RGB values for colors (see [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide#css)).', 'comment_created': datetime.datetime(2022, 7, 28, 23, 52, 1, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 932760928, 'comment_body': 'Please use HEX / RGB values for colors (see [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide#css)).', 'comment_created': datetime.datetime(2022, 7, 28, 23, 52, 7, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 932762174, 'comment_body': 'Would it be better to avoid referring to third-party class names in CSS definitions here and prefer custom defined class names? It could be problematic if we upgrade the CSS library (or swap it out) and the rule is no longer applied properly.', 'comment_created': datetime.datetime(2022, 7, 28, 23, 55, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 932762834, 'comment_body': 'Can we append a component specific top-level class (see [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide#css))? e.g. `.oppia-lesson-info-card`', 'comment_created': datetime.datetime(2022, 7, 28, 23, 57, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 932763751, 'comment_body': 'Can we avoid referring to `mat-card`? We may choose to replace the `mat-` component with something else in the future and it might break the CSS rule. Prefer creating a custom class for specificity. ', 'comment_created': datetime.datetime(2022, 7, 28, 23, 59, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 932816011, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 29, 2, 29, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932817301, 'comment_body': ""I think this function is no longer needed. I moved the word-wrap property into a class and applied that instead. As for the width property, I tested the title on the modal with and without it and was unable to find a difference. I think it was meant to limit the title div width based on the padding on the thumbnail, but it isn't necessary as the div is enclosed within the div bounding the thumbnail, and has the same padding applied to itself."", 'comment_created': datetime.datetime(2022, 7, 29, 2, 33, 9, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932817365, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 29, 2, 33, 19, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932817430, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 29, 2, 33, 28, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932817981, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 7, 29, 2, 35, 14, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932818069, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 7, 29, 2, 35, 30, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932818116, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 7, 29, 2, 35, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932818175, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 7, 29, 2, 35, 50, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932818238, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 29, 2, 35, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932818277, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 29, 2, 36, 3, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932818548, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 29, 2, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932819147, 'comment_body': ""I removed this CSS rule because, upon inspecting the bottom-row div and the elements enclosed within it (e.g. the ngbTooltip, etc.), I couldn't find any md-chips elements. After removing the rule, I couldn't find a difference either."", 'comment_created': datetime.datetime(2022, 7, 29, 2, 38, 34, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932819550, 'comment_body': ""Removed mat-card as part of the selector (however 'oppia-lesson-info-card' itself is the outermost class that can be used as a selector)"", 'comment_created': datetime.datetime(2022, 7, 29, 2, 39, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 932821637, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 29, 2, 45, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 933886317, 'comment_body': 'Is it normal to put HTML in the translation strings?', 'comment_created': datetime.datetime(2022, 7, 30, 20, 44, 3, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 933886489, 'comment_body': '```suggestion\r\n        <img [src]=""getStaticImageUrl(\'/general/apple.svg\')"" \r\n        class=""exploration-footer-img"" \r\n        alt=""Illustration of an apple"">\r\n```', 'comment_created': datetime.datetime(2022, 7, 30, 20, 45, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 933886606, 'comment_body': 'Please use absolute path.', 'comment_created': datetime.datetime(2022, 7, 30, 20, 47, 2, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 933887128, 'comment_body': 'Can we do this without using `!important` somehow?', 'comment_created': datetime.datetime(2022, 7, 30, 20, 53, 22, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 933902092, 'comment_body': 'Why so many empty lines?', 'comment_created': datetime.datetime(2022, 7, 30, 23, 3, 7, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 933902247, 'comment_body': '```suggestion\r\n            <i class=""material-icons oppia-contributors-icon"" \r\n               [ngbTooltip]=""\'I18N_PLAYER_CONTRIBUTORS_TOOLTIP\' | translate"" \r\n               placement=""top"">&#xE7EF;</i>\r\n            <span class=""oppia-icon-accessibility-label"">\r\n              {{ \'I18N_PLAYER_CONTRIBUTORS_TOOLTIP\' | translate }}\r\n            </span>\r\n```', 'comment_created': datetime.datetime(2022, 7, 30, 23, 5, 4, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 933902255, 'comment_body': 'ditto above', 'comment_created': datetime.datetime(2022, 7, 30, 23, 5, 14, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 933951909, 'comment_body': 'Question for Vojta: We seem to be using relative paths in few other components, is this something we should enforce as part of review (and possibly a lint check)?', 'comment_created': datetime.datetime(2022, 7, 31, 8, 54, 42, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 933963189, 'comment_body': 'Yes, as long as the i18n key is used in the `innerHTML` attribute of the required element, using HTML elements in the translation strings works correctly.', 'comment_created': datetime.datetime(2022, 7, 31, 10, 24, 15, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 933963202, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 31, 10, 24, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 933963407, 'comment_body': ""(I didn't add an alt string as the image is for decorative purposes, and [adding an alt for such images is discouraged](https://github.com/oppia/oppia/pull/15781#discussion_r932759527))"", 'comment_created': datetime.datetime(2022, 7, 31, 10, 25, 46, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 933963432, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 31, 10, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 933963445, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 31, 10, 25, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 933963490, 'comment_body': 'Sorry about that, removed excess lines.', 'comment_created': datetime.datetime(2022, 7, 31, 10, 26, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 933963501, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 31, 10, 26, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 934320699, 'comment_body': '@kevintab95 I think yes, I remember there was an issue for this but cannot find it now.', 'comment_created': datetime.datetime(2022, 8, 1, 9, 23, 34, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 934323183, 'comment_body': 'Okay, but do we already use translation strings that contain HTML?', 'comment_created': datetime.datetime(2022, 8, 1, 9, 26, 5, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 934324138, 'comment_body': 'Interesting, can we add the `role=""presentation""` then? I think it is better to add it as that way we can clearly know that the alt text was committed on purpose.', 'comment_created': datetime.datetime(2022, 8, 1, 9, 26, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 934345310, 'comment_body': ""Yep, [here's an example](https://github.com/oppia/oppia/blob/67910ebcd5806df4033443a927b99dd7f4dadb68/assets/i18n/en.json#L139).\r\n\r\nAnd [here's where that key is used](https://github.com/oppia/oppia/blob/67910ebcd5806df4033443a927b99dd7f4dadb68/core/templates/pages/contact-page/contact-page.component.html#L46) (bound to the innerHTML attribute).\r\n\r\nFinally, here's what it looks like when rendered on-screen (underneath the '**Press**' subheading).\r\n\r\n![image](https://user-images.githubusercontent.com/78612244/182122140-c2720eb8-eb74-47cc-8144-bf7ab8c90bd1.png)\r\n"", 'comment_created': datetime.datetime(2022, 8, 1, 9, 49, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 934345491, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2022, 8, 1, 9, 49, 50, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}]","[{'commit_sha': 'a76288962d12f9087c4560cbf43ef3e4174d11d2', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '936fd4d414f83cbb80703308218aa5f6c559e851', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ecf463245f4ef3ad6f1e34953d958f7045ac2691', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d28833620a61e5b900735a5b4c12a976a2e578c', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcfb4780182e092b81ee99c1d9ddc6a731ae82d4', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '477c3500457f4e252cc43d5c39ed6d4aafeee7aa', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab71d6ff765e6d555d284053a364d342f097162e', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a3f38c39aab8847767a27712c58a3bbabe2da95', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4806fb61f27749d060d95dd3d3532f67554e15f6', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed5d20e6a1f9a5f3379296a3d0f3424ca5b8b5f1', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2362f20c4dbb6e9443f9632a1dd08ecf7f5e2e4', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '177e5f23269b9f4b5ecf5d040d05251df17f1c27', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be9c908df0354ee4c45b1a1883ebad2fb64e9eb2', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '815329a84e28c3cc27ff1de6d2a2c3ee0a01f592', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ef637568fd4d3228f13224166860f785f860764', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06bd174e1d28cfeaef14e6c142a05723af641386', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35bdca3b60eb224981004d6118f1c0897e96f050', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7343dcc17e7cb54fd729dba829625e6a118b7eb3', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '617929c2245a2d53002e00b37d52b6ec7fc554f1', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14464e4e419a911b97e14423f0ebeb6f998457c6', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4aa765d671f817b8c0037b632ca09b9038c7a60b', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd049b918cd7fc6701be93bfb63eafa9e4ebae843', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1feb2fcbf1761fbde10976f188e8c0fdf8e8b4f1', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1dcb73e03eec5680a2b91a43f53aa7ace3b78822', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ff13e615edaccd3fc8fa4d2b2e80ce922a87928', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bea83ac9ddc731449ab81da455b757c85e74a99c', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43cf7c7886e6d202e8ac4a3b0be40db2b9324d04', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42bde4bd46b4f86e8579b65f75d8adfcac595c44', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '037ca0e6da4b4684520e848615a697255a802699', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a69d3927e2277a3529da4aba1a470cf2d36bf77', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a016b27450fe66e781cc1af34852739fa0a7c720', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb0ca5096a874967d09c5ebd77f145079301d2e1', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4adf2c85628ca76274d0c712a9926e56ed8e44c1', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a271e0b9147f5b805e239f58c1484d0b1c4d3d43', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cad318f70534802f4bacb27c59fd3b7329df94e', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2dc51ba170c3f9010c848ebf507737f18613f9a', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94a1077aecdb5d628aa82de4fa03afe81a598562', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46a07ec889f8b26fe8242ee9dfa4b8dfd2bdc256', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2c71930954ece4be84ec259346dfd4690117bed', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cff730ac408d0adc98c2ec6e4fcf92bd0a91817e', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51192073bfd2b56459a69e1c5ae9c15a730a9c7e', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f951e79fe9108f36f94a9d7d7462f5f78202fb29', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76c3e58378a86ebcea22b06c9746fe9de8deeba5', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19edd2466b791e67822772c222db61677f022f16', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc6a83e9b8a754eccb9068d8b350c5f14ce4f8eb', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}]",,78612244,,User,,16,,0,0
1018604192,(Celebrating learners' accomplishments) Milestone 2.1: Add a utility service for checkpoint celebration,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #N/A.
2. This PR does the following: Adds a service with methods to be used for the checkpoint celebration messages, etc.

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
",True,15849,https://api.github.com/repos/oppia/oppia/pulls/15849,https://github.com/oppia/oppia/pull/15849,closed,442,0,5,11,19,20,1,1,[{'name': 'PR: LGTM'}],2022-08-05 12:02:57+00:00,2022-08-11 20:03:45+00:00,547248.0,"6 days, 8:00:48","[{'comment_id': 940302278, 'comment_body': 'Why `?`?', 'comment_created': datetime.datetime(2022, 8, 8, 14, 22, 55, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 940303559, 'comment_body': 'Why `?`?', 'comment_created': datetime.datetime(2022, 8, 8, 14, 24, 3, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 940306595, 'comment_body': ""Instead of using letters of the alphabet can you use something more descriptive? like 'first', 'second', 'midway', 'last', 'any', etc."", 'comment_created': datetime.datetime(2022, 8, 8, 14, 26, 39, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 940560429, 'comment_body': ""That input is optional. It is provided when a string needs to be interpolated into a translation string. If the translation string isn't written to support interpolation, this value isn't provided in the function call."", 'comment_created': datetime.datetime(2022, 8, 8, 18, 53, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 940562503, 'comment_body': ""I'm using this function to retrieve the i18n keys for both the checkpoint message and the checkpoint title. In case of checkpoint title, all the keys are of the same kind, so this value isn't provided. In case of checkpoint messages, the keys are of 6 different kinds and one of them is provided as input when the function is called. Since it is only needed when fetching checkpoint messages and not checkpoint titles, I've set it to be optional."", 'comment_created': datetime.datetime(2022, 8, 8, 18, 56, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 940562569, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 8, 8, 18, 56, 9, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 942375080, 'comment_body': 'Please use constants/enums for the messageKind strings.', 'comment_created': datetime.datetime(2022, 8, 10, 12, 13, 38, tzinfo=datetime.timezone.utc), 'commenter': 'iamprayush', 'type': 'User'}, {'comment_id': 942375700, 'comment_body': 'What does `(completedCheckpointCount - 1) / totalCheckpointCount` represent? Also an overall explanatory comment for this function would be helpful.', 'comment_created': datetime.datetime(2022, 8, 10, 12, 14, 19, tzinfo=datetime.timezone.utc), 'commenter': 'iamprayush', 'type': 'User'}, {'comment_id': 942404766, 'comment_body': 'Hmm, in that case do not use `?` but mention `undefined` or `null` explicitly in the type. Also in that case cannot we rather pass empty object?', 'comment_created': datetime.datetime(2022, 8, 10, 12, 45, 31, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 942405647, 'comment_body': 'Please do the same as in the above comment.', 'comment_created': datetime.datetime(2022, 8, 10, 12, 46, 26, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 942632313, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 8, 10, 16, 1, 13, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 942632542, 'comment_body': 'Added a couple comments, PTAL', 'comment_created': datetime.datetime(2022, 8, 10, 16, 1, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 942632775, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 8, 10, 16, 1, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 942645508, 'comment_body': ""Done. As for passing an empty object, I didn't do that because in most (if not all) other instances of obtaining translations using this service/method, if the string doesn't support interpolation the `interpolateParams` value is simply not supplied."", 'comment_created': datetime.datetime(2022, 8, 10, 16, 8, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 942689669, 'comment_body': ""Thanks for the comment!\r\nI'm still a bit confused about how the 2nd check. Just for my understanding, can you please give an example with actual values for a case where the 2nd check helps?"", 'comment_created': datetime.datetime(2022, 8, 10, 16, 55, 31, tzinfo=datetime.timezone.utc), 'commenter': 'iamprayush', 'type': 'User'}, {'comment_id': 942695154, 'comment_body': ""Sure!\r\n\r\nSay there are a total of 6 checkpoints. When the third checkpoint is completed, the learner should receive the midway message. This works fine regardless of whether the second check is present or not.\r\n\r\nHowever, if the learner completes, say, the 5th checkpoint, then the first check is satisfied (5 / 6 > 0.5), but the second checks fails (4/6 is not < 0.5) which prevents the midway message from being returned. If not for the second check, the midway message would have been displayed even though the learner completed the 5th checkpoint (which isn't the middle checkpoint)."", 'comment_created': datetime.datetime(2022, 8, 10, 17, 1, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 942773563, 'comment_body': ""I understand what you're trying to do now, thanks!\r\n\r\nI'm wondering if a single check like this one work:\r\n`Math.ceil(totalCheckpointCount / 2) == completedCheckpointCount`\r\n"", 'comment_created': datetime.datetime(2022, 8, 10, 18, 32, 27, tzinfo=datetime.timezone.utc), 'commenter': 'iamprayush', 'type': 'User'}, {'comment_id': 943201174, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 8, 11, 7, 59, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 943204928, 'comment_body': 'Please also add checks with an odd total count.', 'comment_created': datetime.datetime(2022, 8, 11, 8, 3, 36, tzinfo=datetime.timezone.utc), 'commenter': 'iamprayush', 'type': 'User'}, {'comment_id': 943226400, 'comment_body': 'Done. @iamprayush PTAL', 'comment_created': datetime.datetime(2022, 8, 11, 8, 27, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}]","[{'commit_sha': 'cf7ae391a5f8cd57efa0db58c0d2cd68f16c3049', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd815967870bd5d2c4fb1f5cea4d5966b7e99f267', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '085e522b9de2c0226a0fcbfc799c30e5166b414a', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01d1190b6f7b03dcbfac8e4f85456fbdc020f9f4', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa185d1c527e0ac351716587502d9acdce67973e', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70b4ab578d1283a7a0fe7e02f8c38136987d9edc', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16a572dc279ab861bba6f9930198ab55b9421850', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '205fef13a708c9d4adde29b2d91c47df8989d320', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9ec054569a6e6d2e2488e8412d2f9bd9b02526b', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1d0dab1d96736bd0f3ed9a436d5478360630237', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8aaee1bb355ae9db7abbff285e497dd80582d00c', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}]",,78612244,,User,,16,,0,0
1029138788,(Celebrating learners' accomplishments) Milestones 2.2 & 2.3: Add a congratulatory checkpoint message modal which is linked to the lesson info modal,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #N/A.
2. This PR does the following: Adds a modal that congratulates the learner for completing a checkpoint whenever they do so.

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

Modal appears, then is auto-dismissed after 10 seconds. The modal is then manually dismissed. The modal is then used to open the lesson info modal (which displays a checkpoint message when on a checkpointed state).

https://user-images.githubusercontent.com/78612244/185209472-069c63a1-c4e1-4878-b60d-c0b900444669.mp4

#### Proof of changes on mobile phone

The tooltip stays on screen for a much shorter duration.

https://user-images.githubusercontent.com/78612244/185209676-64d079d0-6af3-4dc2-aa99-044dabe4df07.mp4

#### Proof of changes in Arabic language

Timer, the progress bar and the positions of the buttons at the bottom are mirrored.

![Screenshot from 2022-08-17 23-05-49](https://user-images.githubusercontent.com/78612244/185209905-3e130179-477b-47a0-bf0c-b96058cbcbe5.png)

![Screenshot from 2022-08-17 23-04-57](https://user-images.githubusercontent.com/78612244/185210045-621610fb-4c1c-482a-a35d-5f4c2c540274.png)

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
",True,15916,https://api.github.com/repos/oppia/oppia/pulls/15916,https://github.com/oppia/oppia/pull/15916,closed,1741,21,21,28,19,8,0,1,[],2022-08-17 18:02:30+00:00,2022-08-24 07:33:51+00:00,567081.0,"6 days, 13:31:21","[{'comment_id': 950540077, 'comment_body': 'Should we use a constant for the number?', 'comment_created': datetime.datetime(2022, 8, 19, 20, 31, 52, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 950544035, 'comment_body': 'Ideally, we should not be using a document wide query like this in a component. What would happen if we have multiple elements with the same class name or multiple checkpoint-celebration-modal components on the page? Can we use ngStyle or similar in the SVG element change the values directly here?', 'comment_created': datetime.datetime(2022, 8, 19, 20, 39, 18, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 950675506, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 20, 9, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 950675815, 'comment_body': ""I actually need to access the element in the component to be able to trigger a reflow. I've modified it so instead of fetching the element by its class, I'm now using a template reference variable. PTAL!"", 'comment_created': datetime.datetime(2022, 8, 20, 9, 43, 20, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 953431772, 'comment_body': ""@nithinrdy, @BenHenning has a question. Is this ready to be turned on in prod? Enabling it for prod means that the feature is ready to be turned on in the next prod release of the app (i.e. it's dev complete and has been fully feature tested) -- is this the case?\r\n\r\nAlso since Ben is quite busy I'll probably take over this review, I'll put a review hold and he'll approve."", 'comment_created': datetime.datetime(2022, 8, 24, 7, 11, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 953443314, 'comment_body': ""> @nithinrdy, @BenHenning has a question. Is this ready to be turned on in prod?\r\n\r\nNo, the feature is yet to be tested.\r\n\r\n> Enabling it for prod means that the feature is ready to be turned on in the next prod release of the app (i.e. it's dev complete and has been fully feature tested) -- is this the case?\r\n\r\nNo this is not the case, the feature can't be enabled for PROD yet as it is yet to undergo a feature review.\r\n\r\nHowever, the feature isn't really enabled for PROD -- it _**can**_ be enabled for PROD because I've put it in the PROD FeatureStage.\r\n\r\nThe reason I've had to put it in the PROD FeatureStage instead of the DEV FeatureStage is simply because the test server runs in PROD mode. If I place the feature in DEV stage, it can only be enabled in DEV mode, meaning it can't be feature tested on the test server, because the instance of Oppia running on [oppiatestserver.org](oppiatestserver.org) is in PROD mode. For the feature to be 'enable-able' on the test server (oppiatestserver.org), it needs to be in the PROD FeatureStage, following which an admin can enable the feature via the admin page.\r\n\r\n> Also since Ben is quite busy I'll probably take over this review, I'll put a review hold and he'll approve.\r\n\r\nGot it!"", 'comment_created': datetime.datetime(2022, 8, 24, 7, 24, 28, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 953451021, 'comment_body': ""Here is @BenHenning's response:\r\n\r\n> That's not something I was aware of, and is a good point. Whichever environment QA uses for testing should be set up such that feature flags can be enabled on them when set for the testing environment. It's possible we just never did this last step when implementing feature flags (in which case, PROD is the only current option but this is something you may want to fix for cleaner feature staging).\r\n \r\nSo I think this looks good, @nithinrdy, thanks! I'll approve, and will talk to the release team re fixing this in the future. "", 'comment_created': datetime.datetime(2022, 8, 24, 7, 32, 42, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 953475337, 'comment_body': '@seanlip [PTAL](https://docs.google.com/document/d/1FjbG2Cb0OnDVuE36jzux2Sn0sybMQozkk3hjkfeMoC0/edit?pli=1&disco=AAAAacnOBN0) (possibly relevant to this conversation)', 'comment_created': datetime.datetime(2022, 8, 24, 7, 58, 16, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}]","[{'commit_sha': 'cf7ae391a5f8cd57efa0db58c0d2cd68f16c3049', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd815967870bd5d2c4fb1f5cea4d5966b7e99f267', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '085e522b9de2c0226a0fcbfc799c30e5166b414a', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a36801ef9a26409d8b384fb9a8aa88b87b0c9ca8', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '514cbc4649eadceafa33b84dc7dcbd8ba383d305', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfcd9ea9aeb12c063a5352f39b30325886854428', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee6e8ad74a6e785974e7bdcec336983929161c88', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e1ebe24d68c51be0a7db16067d5b16837269574', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67fe62a60fc9711da1593a4349bc7c21febf7ca7', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77a063d77132aebca290bd44f4be2b1a3cfdbb01', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe5ca70d028cf08ac740001aa0f162ebb9b5bcca', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba00608e074be8f578b1129eba5b7b395ce5727e', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a687605538e41c09949c47ddd9dd07ef228e964b', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c335e7e15d47eb8a8fc9b3ea3aa5c9d48cf942c', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '029f03120c021553f90b978601049dc84e0725c8', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2df46683c742446597308665f3b7b4321c512950', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eae5b08e919bd5d32eaa3965a57dda2ffc579852', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3256463ba5eecf0a48eaa469f03d17e908a41344', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7352599fbc5f1e50c441677a403666e3c260ec50', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df7a2d3ea40bdc9ed81eb8a509efbd5a43c94781', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a17bfab0e266605b544e019f47a38b7f477da132', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec3dfad34ac93833d96568fa8d845072d6c75ec1', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d665af01b9f5981a0746fbe8e4238e488c53767', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5775dea29bcb8ffdbe7a05601baf3394d163a455', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f8018040e9fe6ace8f691f9c98882ce52456825', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b74659fa1a638d135382b7b3b537efd68ab2796', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5008afb289e1abc41c5e2030c860eb554c904d1d', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd11a0ce4a64caae59521e57ed0b9918bf2773f6', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}]",,78612244,,User,,16,,0,0
1036766369,(Celebrating learners' accomplishments) Milestone 2.4: Add E2E tests,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #N/A.
2. This PR does the following: Adds E2E tests for milestone 2 of the project 'Celebrating learners' accomplishments'. The tests are added as part of a new suite. This was done because of the following two reasons:
 - I was originally planning to add the tests to the Topic and Story Viewer suite, but the `e2e_topic_tests` shard/workflow (the workflow which contains the TASV suite) is already one of the larger workflows in terms of time taken to complete.
 - Adding these E2E tests to a new suite allows me to place the suite in the `e2e_other_tests` workflow. Additionally, this `checkpointFeatures` suite can be later used for the User checkpoints features' E2E tests.

I discussed the above with @kevintab95 and he agreed that adding these E2E tests to a new separate suite was a better idea.

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
",True,15946,https://api.github.com/repos/oppia/oppia/pulls/15946,https://github.com/oppia/oppia/pull/15946,closed,313,4,11,6,17,8,1,1,[{'name': 'PR: LGTM'}],2022-08-25 13:30:34+00:00,2022-08-29 05:53:17+00:00,318163.0,"3 days, 16:22:43","[{'comment_id': 954973925, 'comment_body': ""I added the file here because of the other E2E files being present here, and I assumed this was the standard procedure -- I'm not really sure if it belongs here, PTAL."", 'comment_created': datetime.datetime(2022, 8, 25, 13, 32, 34, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 954978026, 'comment_body': ""The function mentioned in this comment is one I added as part of M1 of the project. The need was to have a function that can flip a feature flag to 'ON' to allow for E2E tests to test gated features. This would allow for the feature to be tested without having to remove the feature flag.\r\n\r\nBack then, I assumed this was a one-time thing, but I now realize that this function could be used for any gated feature in general, hence the comment change (i.e. this function doesn't need to be removed and can be used for future projects too)."", 'comment_created': datetime.datetime(2022, 8, 25, 13, 36, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 955486062, 'comment_body': ""Please don't exclude this file. Instead, you should make sure your file passes the e2e lint checks"", 'comment_created': datetime.datetime(2022, 8, 25, 23, 3, 9, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 955486857, 'comment_body': ""`action.js` functions wait automatically, so this isn't needed. Ditto elsewhere"", 'comment_created': datetime.datetime(2022, 8, 25, 23, 5, 10, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 956210719, 'comment_body': '@ShivamJhaa do we need to pass `expectFadeIn=true` here (and elsewhere in this file)?', 'comment_created': datetime.datetime(2022, 8, 26, 16, 26, 52, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 956351650, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 8, 26, 18, 58, 19, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 956351748, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 8, 26, 18, 58, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nithinrdy', 'type': 'User'}, {'comment_id': 956578023, 'comment_body': 'No. We pass `expectFadeIn=true` when we first set the statename and after that we set content in the next step.', 'comment_created': datetime.datetime(2022, 8, 27, 12, 40, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ShivamJhaa', 'type': 'User'}]","[{'commit_sha': '359563be74e6656919bbc48992fc2109f84a6bde', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '895cd3507737fc8166c72a6660826d31ffaf3a74', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9318f43be94d0ce5bf8a7cd4def0f0265dab908d', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1764bff71949d5719a6a6ea2a0abb765835ec09', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2ba38d055383f211008b5c8b2096cb2b0f2bc7e', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4f9672bb66e060267be2fcc3a04efaf144b02a7', 'committer_username': 'nithinrdy', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 5, 17, 2, 9, tzinfo=datetime.timezone.utc)}]",,78612244,,User,,16,,0,0

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
40687563,oppia,oppia/oppia,Python,3842,5716,240,775,15755,1423,418,27,"[{'id': 1036766369, 'number': 15946, 'closed': datetime.datetime(2022, 8, 29, 5, 53, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 25, 13, 30, 34, tzinfo=datetime.timezone.utc), 'time_taken': 318163.0, 'time_delta': '3 days, 16:22:43', 'additions': 313, 'deletions': 4, 'state': 'closed'}, {'id': 1029138788, 'number': 15916, 'closed': datetime.datetime(2022, 8, 24, 7, 33, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 17, 18, 2, 30, tzinfo=datetime.timezone.utc), 'time_taken': 567081.0, 'time_delta': '6 days, 13:31:21', 'additions': 1741, 'deletions': 21, 'state': 'closed'}, {'id': 1018604192, 'number': 15849, 'closed': datetime.datetime(2022, 8, 11, 20, 3, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 5, 12, 2, 57, tzinfo=datetime.timezone.utc), 'time_taken': 547248.0, 'time_delta': '6 days, 8:00:48', 'additions': 442, 'deletions': 0, 'state': 'closed'}, {'id': 1006219929, 'number': 15781, 'closed': datetime.datetime(2022, 8, 2, 18, 40, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 22, 23, 37, 13, tzinfo=datetime.timezone.utc), 'time_taken': 932624.0, 'time_delta': '10 days, 19:03:44', 'additions': 1478, 'deletions': 1307, 'state': 'closed'}, {'id': 1006219115, 'number': 15780, 'closed': datetime.datetime(2022, 7, 29, 2, 0, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 22, 23, 34, 11, tzinfo=datetime.timezone.utc), 'time_taken': 527163.0, 'time_delta': '6 days, 2:26:03', 'additions': 321, 'deletions': 19, 'state': 'closed'}, {'id': 997790542, 'number': 15725, 'closed': datetime.datetime(2022, 7, 23, 19, 15, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 15, 13, 59, 51, tzinfo=datetime.timezone.utc), 'time_taken': 710159.0, 'time_delta': '8 days, 5:15:59', 'additions': 205, 'deletions': 6, 'state': 'closed'}, {'id': 996514016, 'number': 15712, 'closed': datetime.datetime(2022, 7, 14, 16, 32, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 14, 10, 44, 44, tzinfo=datetime.timezone.utc), 'time_taken': 20875.0, 'time_delta': '5:47:55', 'additions': 1217, 'deletions': 373, 'state': 'closed'}, {'id': 979129186, 'number': 15634, 'closed': datetime.datetime(2022, 7, 19, 16, 45, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 25, 20, 5, 37, tzinfo=datetime.timezone.utc), 'time_taken': 2061570.0, 'time_delta': '23 days, 20:39:30', 'additions': 1011, 'deletions': 42, 'state': 'closed'}, {'id': 973858401, 'number': 15611, 'closed': datetime.datetime(2022, 7, 9, 21, 10, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 21, 17, 31, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1568393.0, 'time_delta': '18 days, 3:39:53', 'additions': 311, 'deletions': 68, 'state': 'closed'}, {'id': 968006333, 'number': 15589, 'closed': datetime.datetime(2022, 6, 21, 22, 7, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 15, 10, 47, 5, tzinfo=datetime.timezone.utc), 'time_taken': 559213.0, 'time_delta': '6 days, 11:20:13', 'additions': 892, 'deletions': 12, 'state': 'closed'}, {'id': 947995278, 'number': 15496, 'closed': datetime.datetime(2022, 6, 9, 9, 14, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 26, 8, 13, 42, tzinfo=datetime.timezone.utc), 'time_taken': 1213253.0, 'time_delta': '14 days, 1:00:53', 'additions': 161, 'deletions': 31, 'state': 'closed'}, {'id': 939864227, 'number': 15481, 'closed': datetime.datetime(2022, 6, 2, 8, 49, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 18, 11, 51, 18, tzinfo=datetime.timezone.utc), 'time_taken': 1285089.0, 'time_delta': '14 days, 20:58:09', 'additions': 154, 'deletions': 11, 'state': 'closed'}, {'id': 931411314, 'number': 15448, 'closed': datetime.datetime(2022, 5, 12, 5, 47, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 9, 16, 40, 12, tzinfo=datetime.timezone.utc), 'time_taken': 220026.0, 'time_delta': '2 days, 13:07:06', 'additions': 45, 'deletions': 7, 'state': 'closed'}, {'id': 931026977, 'number': 15445, 'closed': datetime.datetime(2022, 5, 23, 9, 2, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 9, 11, 6, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1202175.0, 'time_delta': '13 days, 21:56:15', 'additions': 1851, 'deletions': 264, 'state': 'closed'}, {'id': 914869044, 'number': 15361, 'closed': datetime.datetime(2022, 5, 1, 12, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 21, 3, 44, 28, tzinfo=datetime.timezone.utc), 'time_taken': 893792.0, 'time_delta': '10 days, 8:16:32', 'additions': 119, 'deletions': 34, 'state': 'closed'}, {'id': 911232007, 'number': 15323, 'closed': datetime.datetime(2022, 4, 22, 12, 52, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 16, 8, 55, 18, tzinfo=datetime.timezone.utc), 'time_taken': 532641.0, 'time_delta': '6 days, 3:57:21', 'additions': 18, 'deletions': 8, 'state': 'closed'}, {'id': 909118775, 'number': 15305, 'closed': datetime.datetime(2022, 4, 24, 11, 9, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 13, 16, 15, 5, tzinfo=datetime.timezone.utc), 'time_taken': 932063.0, 'time_delta': '10 days, 18:54:23', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 908914314, 'number': 15304, 'closed': datetime.datetime(2022, 5, 10, 14, 44, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 13, 13, 9, 24, tzinfo=datetime.timezone.utc), 'time_taken': 2338486.0, 'time_delta': '27 days, 1:34:46', 'additions': 1384, 'deletions': 166, 'state': 'closed'}, {'id': 888673907, 'number': 15211, 'closed': datetime.datetime(2022, 3, 28, 8, 19, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 24, 18, 9, 27, tzinfo=datetime.timezone.utc), 'time_taken': 310184.0, 'time_delta': '3 days, 14:09:44', 'additions': 73, 'deletions': 22, 'state': 'closed'}, {'id': 884036744, 'number': 15165, 'closed': datetime.datetime(2022, 4, 14, 16, 54, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 19, 19, 50, 29, tzinfo=datetime.timezone.utc), 'time_taken': 2235822.0, 'time_delta': '25 days, 21:03:42', 'additions': 241, 'deletions': 10, 'state': 'closed'}, {'id': 879022275, 'number': 15128, 'closed': datetime.datetime(2022, 3, 25, 15, 32, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 14, 12, 56, 12, tzinfo=datetime.timezone.utc), 'time_taken': 959767.0, 'time_delta': '11 days, 2:36:07', 'additions': 22, 'deletions': 24, 'state': 'closed'}, {'id': 853322969, 'number': 14940, 'closed': datetime.datetime(2022, 2, 16, 22, 8, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 15, 14, 18, 38, tzinfo=datetime.timezone.utc), 'time_taken': 114590.0, 'time_delta': '1 day, 7:49:50', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 852369756, 'number': 14938, 'closed': datetime.datetime(2022, 2, 20, 4, 59, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 14, 18, 14, 53, tzinfo=datetime.timezone.utc), 'time_taken': 470695.0, 'time_delta': '5 days, 10:44:55', 'additions': 28, 'deletions': 2, 'state': 'closed'}, {'id': 848892177, 'number': 14926, 'closed': datetime.datetime(2022, 2, 17, 20, 36, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 12, 12, 8, 30, tzinfo=datetime.timezone.utc), 'time_taken': 462456.0, 'time_delta': '5 days, 8:27:36', 'additions': 32, 'deletions': 3, 'state': 'closed'}, {'id': 839444326, 'number': 14852, 'closed': datetime.datetime(2022, 2, 11, 17, 26, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 3, 15, 52, 2, tzinfo=datetime.timezone.utc), 'time_taken': 696896.0, 'time_delta': '8 days, 1:34:56', 'additions': 8, 'deletions': 4, 'state': 'closed'}, {'id': 829729641, 'number': 14747, 'closed': datetime.datetime(2022, 2, 11, 17, 24, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 23, 11, 39, 17, tzinfo=datetime.timezone.utc), 'time_taken': 1662295.0, 'time_delta': '19 days, 5:44:55', 'additions': 202, 'deletions': 63, 'state': 'closed'}, {'id': 827193205, 'number': 14716, 'closed': datetime.datetime(2022, 1, 26, 21, 59, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 20, 6, 12, 53, tzinfo=datetime.timezone.utc), 'time_taken': 575212.0, 'time_delta': '6 days, 15:46:52', 'additions': 16, 'deletions': 2, 'state': 'closed'}, {'id': 823876502, 'number': 14670, 'closed': datetime.datetime(2022, 1, 19, 9, 54, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 16, 10, 24, 42, tzinfo=datetime.timezone.utc), 'time_taken': 257389.0, 'time_delta': '2 days, 23:29:49', 'additions': 19, 'deletions': 0, 'state': 'closed'}, {'id': 820945101, 'number': 14638, 'closed': datetime.datetime(2022, 1, 13, 15, 35, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 13, 13, 44, 52, tzinfo=datetime.timezone.utc), 'time_taken': 6626.0, 'time_delta': '1:50:26', 'additions': 23, 'deletions': 3, 'state': 'closed'}, {'id': 816896445, 'number': 14591, 'closed': datetime.datetime(2022, 2, 11, 17, 23, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 8, 17, 33, 6, tzinfo=datetime.timezone.utc), 'time_taken': 2937050.0, 'time_delta': '33 days, 23:50:50', 'additions': 14, 'deletions': 13, 'state': 'closed'}, {'id': 813253786, 'number': 14535, 'closed': datetime.datetime(2022, 1, 8, 15, 28, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 3, 16, 14, 35, tzinfo=datetime.timezone.utc), 'time_taken': 429262.0, 'time_delta': '4 days, 23:14:22', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 812445621, 'number': 14527, 'closed': datetime.datetime(2022, 1, 20, 16, 24, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 31, 20, 17, 16, tzinfo=datetime.timezone.utc), 'time_taken': 1714012.0, 'time_delta': '19 days, 20:06:52', 'additions': 737, 'deletions': 176, 'state': 'closed'}, {'id': 809769758, 'number': 14486, 'closed': datetime.datetime(2022, 1, 12, 22, 31, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 24, 15, 50, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1665696.0, 'time_delta': '19 days, 6:41:36', 'additions': 131, 'deletions': 55, 'state': 'closed'}, {'id': 804818464, 'number': 14452, 'closed': datetime.datetime(2022, 1, 5, 10, 33, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 16, 20, 34, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1691927.0, 'time_delta': '19 days, 13:58:47', 'additions': 85, 'deletions': 32, 'state': 'closed'}, {'id': 803170340, 'number': 14436, 'closed': datetime.datetime(2022, 1, 8, 10, 14, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 15, 7, 55, 10, tzinfo=datetime.timezone.utc), 'time_taken': 2081949.0, 'time_delta': '24 days, 2:19:09', 'additions': 27, 'deletions': 15, 'state': 'closed'}, {'id': 790958484, 'number': 14342, 'closed': datetime.datetime(2022, 1, 12, 15, 52, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 29, 18, 40, 53, tzinfo=datetime.timezone.utc), 'time_taken': 3791523.0, 'time_delta': '43 days, 21:12:03', 'additions': 312, 'deletions': 30, 'state': 'closed'}, {'id': 779875636, 'number': 14244, 'closed': datetime.datetime(2021, 11, 18, 6, 32, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 13, 10, 41, 32, tzinfo=datetime.timezone.utc), 'time_taken': 417085.0, 'time_delta': '4 days, 19:51:25', 'additions': 505, 'deletions': 496, 'state': 'closed'}, {'id': 770339276, 'number': 14162, 'closed': datetime.datetime(2021, 11, 10, 3, 58, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 1, 9, 26, 24, tzinfo=datetime.timezone.utc), 'time_taken': 757939.0, 'time_delta': '8 days, 18:32:19', 'additions': 29, 'deletions': 17, 'state': 'closed'}, {'id': 761989417, 'number': 14106, 'closed': datetime.datetime(2021, 11, 15, 12, 7, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 20, 5, 14, 53, tzinfo=datetime.timezone.utc), 'time_taken': 2271134.0, 'time_delta': '26 days, 6:52:14', 'additions': 78, 'deletions': 46, 'state': 'closed'}]"
