pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
979511068,Sample model,Sample models and factories from wagtail-factories that can be used for testing.,True,3,https://api.github.com/repos/wagtail/wagtail-streamfield-migration-toolkit/pulls/3,https://github.com/wagtail/wagtail-streamfield-migration-toolkit/pull/3,closed,120,1,5,6,0,2,0,0,[],2022-06-27 03:14:19+00:00,2022-06-27 12:10:10+00:00,32151.0,8:55:51,"[{'comment_id': 907140561, 'comment_body': ""Do you need this? This seems to be for factory_boy <3.0 - but 3.0 dropped support for Django 2.1 (which Wagtail no longer supports either) and adds support for 2.2 and 3.0 (which the versions of Wagtail you're working with need versions greater than at this point - see https://docs.wagtail.org/en/stable/releases/upgrading.html)."", 'comment_created': datetime.datetime(2022, 6, 27, 8, 53, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 907311695, 'comment_body': 'right', 'comment_created': datetime.datetime(2022, 6, 27, 12, 8, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sandilsranasinghe', 'type': 'User'}]","[{'commit_sha': '10b53230f47d3e48d6b698f6b3b59c706e5d9c46', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51c8e6ccfab7545994e1294fd8d0374f1ccf3945', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da6fa2d9b2556d9490eddd40718115d7746275d7', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1981408027a07159a31ee225ec6b6f6766d78e69', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b6e89f40a9645c0a61337e151a64115c636140c', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54c62145a0ae81ee95768d2ea5549ab65da9dc60', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}]",Sandil Ranasinghe,55044163,,User,,16,,31,44
984545422,Tests for division by structures,"Tests by structure

- streamfield -> child
- streamfield -> structblock -> child
- streamfield -> streamblock -> child
- streamfield -> structblock -> streamblock -> child
- streamfield -> structblock -> structblock -> child
- streamfield -> streamblock -> streamblock -> child (not added yet)
- streamfield -> streamblock -> structblock -> child (not added yet)
- streamfield -> listblock -> streamblock -> child (not added yet)
- streamfield -> listblock -> structblock -> child

operations tested 

- rename
- remove

Wagtail factories used where supported for setting up data, rest with json like data.

Added empty `apply_changes_to_raw_data` and operation classes so that they can be called in tests.",True,5,https://api.github.com/repos/wagtail/wagtail-streamfield-migration-toolkit/pulls/5,https://github.com/wagtail/wagtail-streamfield-migration-toolkit/pull/5,closed,441,1,3,4,0,1,0,0,[],2022-07-01 05:34:51+00:00,2022-07-05 11:30:42+00:00,366951.0,"4 days, 5:55:51","[{'comment_id': 912760201, 'comment_body': ""I think it would probably be best to remove classes if they're completely empty - just put TODOs in for them"", 'comment_created': datetime.datetime(2022, 7, 4, 8, 34, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}]","[{'commit_sha': '9e247b6245f3dd47dd4defce73968b49dc17a712', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ca411b3569d5168a7c8d5a5d1327bbcb1f6625b', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b44e94c5fc9201d94645ca4c543ca86034db734', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9a509e6b0d32dd773d0afe3a99ef3f8a8facb5e', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}]",Sandil Ranasinghe,55044163,,User,,16,,31,44
986143195,Iteration and operations,,True,6,https://api.github.com/repos/wagtail/wagtail-streamfield-migration-toolkit/pulls/6,https://github.com/wagtail/wagtail-streamfield-migration-toolkit/pull/6,closed,708,86,5,12,0,17,0,0,[],2022-07-04 08:13:11+00:00,2022-07-26 10:37:44+00:00,1909473.0,"22 days, 2:24:33","[{'comment_id': 925308433, 'comment_body': ""Nitpick: since you're accessing the value anyway here, why not iterate through both key and value simultaneously using `.items()` instead?"", 'comment_created': datetime.datetime(2022, 7, 20, 8, 12, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 925309785, 'comment_body': 'Why have you changed away from `setUpTestData` here?', 'comment_created': datetime.datetime(2022, 7, 20, 8, 13, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 925312432, 'comment_body': 'Are you using this any more? We should consider adding a linter like flake8 to the CI pipeline so things like this get caught', 'comment_created': datetime.datetime(2022, 7, 20, 8, 16, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 925313851, 'comment_body': ""Nitpick: should be `its` rather than `it's` here"", 'comment_created': datetime.datetime(2022, 7, 20, 8, 17, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 925314400, 'comment_body': 'Could we get a docstring for this function (and the others below)?', 'comment_created': datetime.datetime(2022, 7, 20, 8, 18, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 925315150, 'comment_body': ""Since you're always accessing the value, why not just use `.items()` to get key and value at once?"", 'comment_created': datetime.datetime(2022, 7, 20, 8, 19, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 925315469, 'comment_body': 'Nitpick: should be `its` here too', 'comment_created': datetime.datetime(2022, 7, 20, 8, 19, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 925317490, 'comment_body': 'Maybe we should use an empty string for this, rather than `None`? That feels like it could indicate ""top of the streamfield"" pretty intuitively too', 'comment_created': datetime.datetime(2022, 7, 20, 8, 21, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 925353866, 'comment_body': 'At some point I had a problem with data getting changed between testcases. I think it should work fine now though, I could add a commit for it if it does', 'comment_created': datetime.datetime(2022, 7, 20, 8, 56, 59, tzinfo=datetime.timezone.utc), 'commenter': 'sandilsranasinghe', 'type': 'User'}, {'comment_id': 926665616, 'comment_body': 'Very small detail, it would be more idiomatic to drop the parentheses here:\r\n\r\n```suggestion\r\n    for key, child_value in struct_block_value.items():\r\n```', 'comment_created': datetime.datetime(2022, 7, 21, 13, 19, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 926673194, 'comment_body': 'This comment is duplicated in the other location we call this function, maybe the function could have a better name? I would name it like `should_alter_block` or `should_alter_subtree`, and move the comment explaining ""why"" to the function itself.', 'comment_created': datetime.datetime(2022, 7, 21, 13, 25, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 926682899, 'comment_body': '```suggestion\r\n        raise ValueError(""Unexpected Structural Block: {}"".format(block_value))\r\n```\r\n\r\nThe plus sign is a little confusing', 'comment_created': datetime.datetime(2022, 7, 21, 13, 34, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 926684341, 'comment_body': 'Up to you whether you keep it or not, but for me this comment is unnecessary - the code itself is very self-explanatory', 'comment_created': datetime.datetime(2022, 7, 21, 13, 35, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 926685767, 'comment_body': '```suggestion\r\n        return operation.apply(block_value)\r\n```\r\n\r\nUp to you, I would do this in one line', 'comment_created': datetime.datetime(2022, 7, 21, 13, 36, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 926687774, 'comment_body': ""```suggestion\r\n        return map_stream_block_value(\r\n```\r\n\r\nAnother one that's up to you, but I would return the value directly here (and same with the other `elif` clauses) - then when reading the code it's clear that nothing else happens to the `mapped_value` in this context"", 'comment_created': datetime.datetime(2022, 7, 21, 13, 38, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 926691103, 'comment_body': '```suggestion\r\n        return {\r\n            k: v\r\n            for k, v in block_value.items()\r\n            if k != self.name\r\n        }\r\n```\r\n\r\nSuggestion: a dict comprehension might be nice here', 'comment_created': datetime.datetime(2022, 7, 21, 13, 41, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 926693227, 'comment_body': '```suggestion\r\n        return [x for x in block_value if x[""type""] != self.name]\r\n```\r\n\r\nSuggestion: a list comprehension might be nice here', 'comment_created': datetime.datetime(2022, 7, 21, 13, 43, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}]","[{'commit_sha': '0094583211091c11e263241a6c69113584109b29', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1997d812d3f5af9827831d078372ecdb6ae08127', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41a52be879c0adf3a810435a4648bbbd07226ccb', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '019e3c36108199926d8f1a08ded5130b061e200a', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '041d086c260acea81288083a04f03006d2163e08', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '845d3b53ad31bbb06d8bf1ca8b4e9ebc63bc1f4c', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6b2b1a192fe533dbadc4904885630b3e79938a3', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d78b88571925882dd5fe809f49c24baf7f3cdd9', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fe1778044752f023862bf4ede56dfe89b2b688a', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a99a1f7880f89ba597faab4227069cf9179f1c5', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c35bbb4cabe998cd3fbbbbbe468d61baea4e684', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e69d7c322f4036067b3850ce0be32ecb431aa271', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}]",Sandil Ranasinghe,55044163,,User,,16,,31,44
989789676,Migrate Stream Data,,True,7,https://api.github.com/repos/wagtail/wagtail-streamfield-migration-toolkit/pulls/7,https://github.com/wagtail/wagtail-streamfield-migration-toolkit/pull/7,closed,168,0,1,11,0,8,0,0,[],2022-07-07 07:14:46+00:00,2022-08-11 16:02:52+00:00,3055686.0,"35 days, 8:48:06","[{'comment_id': 918690394, 'comment_body': 'Two things we might consider here for performance reasons:\r\n- use [QuerySet.iterator](https://docs.djangoproject.com/en/4.0/ref/models/querysets/#iterator); and\r\n- adding the modified pages to a list and saving them back to the database in batches - this will be faster than having a transaction in every iteration of the loop.', 'comment_created': datetime.datetime(2022, 7, 12, 8, 24, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 918696510, 'comment_body': 'We should delete unused code rather than commenting it out', 'comment_created': datetime.datetime(2022, 7, 12, 8, 30, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 918743287, 'comment_body': 'Suggestion: I would remove this, and just check the type of `block_def` in the clauses below, like `elif isinstance(block_def, ListBlock):` ', 'comment_created': datetime.datetime(2022, 7, 12, 9, 17, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 918749568, 'comment_body': ""It seems like we're creating a copy here and doing nothing with it other than iterating over its keys - below we go on to mutate the original `struct_value`"", 'comment_created': datetime.datetime(2022, 7, 12, 9, 23, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 918750901, 'comment_body': 'I think this function could be inlined - the extra indirection of having to look up another function that just calls `str.split` makes this harder to read.', 'comment_created': datetime.datetime(2022, 7, 12, 9, 25, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 918756260, 'comment_body': 'I think we should try to come up with a naming convention for these functions that does a better job of describing what they do. For example, something like `map_block_operation`', 'comment_created': datetime.datetime(2022, 7, 12, 9, 30, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 932045905, 'comment_body': ""I don't think this is quite clear - I think we should be clearer that even with this in play, the latest revision will be updated, and additionally that this limit specifies revisions from the current date back until this date should be updated (not revisions from the beginning of time until this date)"", 'comment_created': datetime.datetime(2022, 7, 28, 10, 25, 3, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 943221077, 'comment_body': ""Nitpick: this still isn't 100% clear that live and latest revisions will always be updated even if they're created before this date."", 'comment_created': datetime.datetime(2022, 8, 11, 8, 22, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}]","[{'commit_sha': '86ce6bd020ecc5e7e9cabb3facf77905ecfa74e4', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '272f4da75750157c5cfaf796d352688fb39e6f8d', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85057946c1b005f7556b9b90138c761414af0086', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0290ab8699bce3eaa75adf671e693696e50ac599', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a593485e3da9182fb826c17593b73efcbf086494', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bae3eb8d599147309c2c2c7cbf4f0131316d8f71', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc07b5f71ec46f2f4b6b52825c8203d19303303e', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92e141da6d008aa06157daadb55813eec06454a0', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a361ebf8567c9151b3053e51d3a27346db019180', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6121c6751700cd8d99270e485796c904b70a404', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f19fa1f3438c62b99b325dc7aa80204cb78992e', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}]",Sandil Ranasinghe,55044163,,User,,16,,31,44
1010626791,Operations and tests,"Changes to operations:

- New operations added
- Descriptions added for operations

Changes to tests:

- Split tests into 2 files for simple structures and more nested structures
- Added basic test for each new operation
- Updated to wagtail-factories 3.1.0 and rewrote tests previously written without factories
- Separated testing whether blocks and data not passed to operation are intact
- Refactoring test code
- Added Descriptions to tests",True,9,https://api.github.com/repos/wagtail/wagtail-streamfield-migration-toolkit/pulls/9,https://github.com/wagtail/wagtail-streamfield-migration-toolkit/pull/9,closed,1504,798,7,8,0,0,0,0,[],2022-07-28 10:12:52+00:00,2022-08-11 15:35:41+00:00,1228969.0,"14 days, 5:22:49",[],"[{'commit_sha': '7747403c26a052d863aad996f7091e500b20698b', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '232cdbcd30ff92449f577008d120d916a752a610', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34cf6a438846fc15d280668330f54cf1a4fddba0', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd7be1661943f89faf4e70f8e7c2264f7fea19df', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36c6e1824bf96f717864c324d7a2cfd5cf08b1f3', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '026eac8966c989a6aad491f314bdef7d99f1cd12', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2dfd4b9eccb130c072770200887fcdbcd02e97cd', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24530e6146b20995fd264ec334aba0c850e1b951', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}]",Sandil Ranasinghe,55044163,,User,,16,,31,44
1014572976,Migration testing,,True,11,https://api.github.com/repos/wagtail/wagtail-streamfield-migration-toolkit/pulls/11,https://github.com/wagtail/wagtail-streamfield-migration-toolkit/pull/11,closed,471,113,11,17,0,20,0,0,[],2022-08-02 03:33:20+00:00,2022-08-24 13:20:08+00:00,1936008.0,"22 days, 9:46:48","[{'comment_id': 944239899, 'comment_body': 'Why is this added? You set this above using `dj_database_url`', 'comment_created': datetime.datetime(2022, 8, 12, 8, 36, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 944243053, 'comment_body': ""Why not build up the list as you create each instance? Creating a list with `None`s first feels slightly confusing.\r\n\r\nAdditionally, what is this/`cls.instances` used for? It doesn't look like it's used any more."", 'comment_created': datetime.datetime(2022, 8, 12, 8, 40, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 944244035, 'comment_body': 'Is this used?', 'comment_created': datetime.datetime(2022, 8, 12, 8, 41, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 944244683, 'comment_body': 'If this is going to be used as the standard assertion for all these tests, could we make it a method of the base class rather than making you write it out each time?', 'comment_created': datetime.datetime(2022, 8, 12, 8, 42, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 944246726, 'comment_body': ""Given that all your test data seems to be identical, it's just the factory that changes, could you make the factory a class attribute and put the creation of instances in the base class? Ie create them using `cls.factory(my_args_here)` instead?"", 'comment_created': datetime.datetime(2022, 8, 12, 8, 45, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 944247885, 'comment_body': ""Maybe break out revision creation to its own method or utility function, as you're writing this out a couple of times (unless there's something different going on each time)?"", 'comment_created': datetime.datetime(2022, 8, 12, 8, 46, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 945624610, 'comment_body': 'oops that was not supposed to be committed', 'comment_created': datetime.datetime(2022, 8, 15, 11, 11, 46, tzinfo=datetime.timezone.utc), 'commenter': 'sandilsranasinghe', 'type': 'User'}, {'comment_id': 945627837, 'comment_body': 'yeah that is used in one of the test methods to get the data from before applying the migration\r\n\r\n```\r\n    for instance in instances:\r\n        prev_content = self.instances[instance.id]\r\n```', 'comment_created': datetime.datetime(2022, 8, 15, 11, 17, 33, tzinfo=datetime.timezone.utc), 'commenter': 'sandilsranasinghe', 'type': 'User'}, {'comment_id': 945798849, 'comment_body': '`self.instances` used here to get data the way it was before applying the migration', 'comment_created': datetime.datetime(2022, 8, 15, 14, 24, 45, tzinfo=datetime.timezone.utc), 'commenter': 'sandilsranasinghe', 'type': 'User'}, {'comment_id': 948762404, 'comment_body': ""We should add 3.10, it's been out long enough that I'm starting to see it in projects."", 'comment_created': datetime.datetime(2022, 8, 18, 7, 44, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 948769529, 'comment_body': 'Do we include the `dj_database_url` dependency just for this? We would drop it without much overhead:\r\n\r\n```\r\nDATABASES = {\r\n  ""default"": {\r\n    ""ENGINE"": ""django.db.backends.sqlite3"",\r\n    ""NAME"": ""test_wagtail_streamfield_migration_toolkit.db"",\r\n  }\r\n}\r\n```', 'comment_created': datetime.datetime(2022, 8, 18, 7, 52, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 948771755, 'comment_body': ""If this base class is intended to be abstract, I think you should define these as `None`.\r\n\r\nAnother alternative would be to define `get_model` and `get_factory` methods which raise `NotImplemented` in the base class so it's clear they need to be provided in the subclasses."", 'comment_created': datetime.datetime(2022, 8, 18, 7, 54, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 948773701, 'comment_body': ""`cls.instances` isn't a dictionary of model instances. It would be good to make it clear that this is the data _before_ applying the migration, so maybe a name like `original_raw_data` would be better"", 'comment_created': datetime.datetime(2022, 8, 18, 7, 56, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 948775700, 'comment_body': 'Same here, maybe `original_revisions` or `unaltered_revisions`', 'comment_created': datetime.datetime(2022, 8, 18, 7, 58, 23, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 948776898, 'comment_body': 'It would make things a little more readable to use keywords for all of these arguments', 'comment_created': datetime.datetime(2022, 8, 18, 7, 59, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 948778740, 'comment_body': ""Docstrings explaining what we're testing for here would be helpful"", 'comment_created': datetime.datetime(2022, 8, 18, 8, 1, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 948783992, 'comment_body': 'Are these are both `datetime` instances? If so they can be compared directly without casting them to a timestamp', 'comment_created': datetime.datetime(2022, 8, 18, 8, 7, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 949316919, 'comment_body': ""I think this was because one was tz aware and the other wasn't and hence couldnt compare directly. Anyway I changed it to tz aware values now. (also got rid of some warnings)"", 'comment_created': datetime.datetime(2022, 8, 18, 15, 43, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sandilsranasinghe', 'type': 'User'}, {'comment_id': 953498968, 'comment_body': ""You still repeat this loop over old blocks and new blocks, asserting they're identical many times. Could this become its own method - eg `def assertBlocksRenamed(old_content, new_content)` that handles the sub-assertions itself and avoids you rewriting this loop of assertions several times?"", 'comment_created': datetime.datetime(2022, 8, 24, 8, 21, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 953720157, 'comment_body': 'Ah right, I thought you were referring to something else earlier :sweat_smile: ', 'comment_created': datetime.datetime(2022, 8, 24, 12, 14, 1, tzinfo=datetime.timezone.utc), 'commenter': 'sandilsranasinghe', 'type': 'User'}]","[{'commit_sha': 'd7f1608860757768c54148533d9583882c08c3f9', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eaa06376cbaa6854ba1986ae457cfe8855f69b16', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd62c96bce927e5ea754def3c59654c0433bd69ab', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2adc83d2a27883f7d02e24523ccb126eb786675e', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '200a680a2b71614b5067807ef10402d02596d807', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64b114d5695ee6098bac1c74b9dd4634bb078501', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ae5202c3645d75bb91938aba1eabb10ee8d8b64', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4aca52354b4ea26e011badde1faa5a43e7ff5b9b', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86f98228387a1c74d2dd05185e5c1f833247beac', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'afd2aaf19d8dbe4384b3278a3a2f7263a9b54d7a', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94ede579490db630afa9d7052aade76c6a76308a', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac87cd572087e1cdd72d833287a0ce095fc514e3', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aec5d54b1d2899477f29e6f3bc1f0b0c50a5c686', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4324ddb37b1c5a176933598b37f0a03632930ffe', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '282649709e2391fd5190a4c076e62b28af6c0f25', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e48e818729fb0de0b677c4c34958712ac01069ae', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '075b5c67efb7350f6adfb17bec0ff3b5152413ba', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}]",Sandil Ranasinghe,55044163,,User,,16,,31,44
1022982517,Old list format,"
- generator for converting format if in old list format
- convert old list format to new format in recursion process
- convert old list format to new format in ListChildrenToStructBlockOperation
- tests for above",True,13,https://api.github.com/repos/wagtail/wagtail-streamfield-migration-toolkit/pulls/13,https://github.com/wagtail/wagtail-streamfield-migration-toolkit/pull/13,closed,288,14,3,5,0,2,0,0,[],2022-08-10 17:21:55+00:00,2022-08-15 05:07:02+00:00,387907.0,"4 days, 11:45:07","[{'comment_id': 944226025, 'comment_body': 'Could you add an explanatory comment here as to what these represent? Is it just the indices of blocks where the type should have changed?', 'comment_created': datetime.datetime(2022, 8, 12, 8, 19, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 944227475, 'comment_body': 'Can you remove this TODO now?', 'comment_created': datetime.datetime(2022, 8, 12, 8, 21, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}]","[{'commit_sha': 'e99fd47482e495f98d09b4f111519543f7d8d22d', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ea8e69cf11375dcd6ea8dd7a29cf710bcc2570b', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02d141a80358b0b43996b86b162b1a9300755889', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d24ad523d91026118741358bf13d45ff668d538', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5242c6cdc31094cbb5dc61069817f6fa907bec5d', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}]",Sandil Ranasinghe,55044163,,User,,16,,31,44
1036542363,Bad data,Raise a custom exception when the block definitions don't match the given block path and data in the recursion process,True,16,https://api.github.com/repos/wagtail/wagtail-streamfield-migration-toolkit/pulls/16,https://github.com/wagtail/wagtail-streamfield-migration-toolkit/pull/16,closed,383,59,6,12,0,17,0,0,[],2022-08-25 10:06:30+00:00,2022-09-08 15:19:17+00:00,1228367.0,"14 days, 5:12:47","[{'comment_id': 962623618, 'comment_body': ""This name is a little confusing as the data hasn't been altered yet"", 'comment_created': datetime.datetime(2022, 9, 5, 8, 22, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 962644942, 'comment_body': 'Suggestion - you can add the data in a single call. Not an issue, your call.\r\n\r\n```suggestion\r\n        raw_data.extend([\r\n            {\r\n                ""type"": ""invalid_name1"",\r\n                ""id"": ""0001"",\r\n                ""value"": {""char1"": ""foo"", ""char2"": ""foo""},\r\n            },\r\n            {\r\n                ""type"": ""invalid_name1"",\r\n                ""id"": ""0002"",\r\n                ""value"": {""char1"": ""foo"", ""char2"": ""foo""},\r\n            }\r\n        ])\r\n```', 'comment_created': datetime.datetime(2022, 9, 5, 8, 43, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 962655255, 'comment_body': 'Suggestion: this common set-up code could be moved out to a super class', 'comment_created': datetime.datetime(2022, 9, 5, 8, 51, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 962663014, 'comment_body': 'It looks like we have some duplicated code here too. Perhaps  `RevisionMigrationTestCase` and `BadDataMigrationTestCase` classes are in order.', 'comment_created': datetime.datetime(2022, 9, 5, 8, 55, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 962665432, 'comment_body': 'Is this TODO incomplete?', 'comment_created': datetime.datetime(2022, 9, 5, 8, 57, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 962667190, 'comment_body': ""I think some additional context would be useful for the user, for example:\r\n- is it the instance or a revision that caused the error?\r\n- if it's an instance, what's the model and primary key?\r\n- if it's a revision, what's its ID / contenttype / timestamp?"", 'comment_created': datetime.datetime(2022, 9, 5, 8, 59, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 962820204, 'comment_body': 'I agree, this would be really useful.', 'comment_created': datetime.datetime(2022, 9, 5, 11, 51, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 962824879, 'comment_body': 'Why TODO?', 'comment_created': datetime.datetime(2022, 9, 5, 11, 55, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 962825546, 'comment_body': ""Again, what's the TODO remaining?"", 'comment_created': datetime.datetime(2022, 9, 5, 11, 55, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 962826661, 'comment_body': ""Yep, I agree here, you've got some pretty similar setups that are testing slight modifications - feels like a good case for inheriting"", 'comment_created': datetime.datetime(2022, 9, 5, 11, 57, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 962833069, 'comment_body': 'Similarly, is this one done?', 'comment_created': datetime.datetime(2022, 9, 5, 12, 4, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 962879849, 'comment_body': 'oops I think I forgot to write some description line', 'comment_created': datetime.datetime(2022, 9, 5, 12, 55, 59, tzinfo=datetime.timezone.utc), 'commenter': 'sandilsranasinghe', 'type': 'User'}, {'comment_id': 965881099, 'comment_body': 'Why not just `= super().__str__()`, and skip the original blank string declaration?\r\n```', 'comment_created': datetime.datetime(2022, 9, 8, 12, 13, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 965881934, 'comment_body': ""This will always be `Revision` - should we not say what model it's a revision of instead?"", 'comment_created': datetime.datetime(2022, 9, 8, 12, 14, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 965911066, 'comment_body': 'I think it would be useful to have the user-supplied message as the last line in the string. That way the most specific information can be in the most prominent position. Any preference @jacobtoppm ?', 'comment_created': datetime.datetime(2022, 9, 8, 12, 36, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 965979925, 'comment_body': ""Yep, I think that's slightly nicer too."", 'comment_created': datetime.datetime(2022, 9, 8, 13, 35, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 965980382, 'comment_body': ""This doesn't seem to be resolved yet - are we missing a commit?"", 'comment_created': datetime.datetime(2022, 9, 8, 13, 36, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}]","[{'commit_sha': '66bc72f4cb50a67a61ff6a30b65cb8e7578a63b0', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cddc4a2c96b06ad9e2d9393c11b8f64a75802546', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e83e9e9f6a45d98f658292fb385c75598061f70c', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c408a00894efd6895b631497f99934d1258c453e', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd57fbeb396be3e3cd59ece380ccc74e4d3167b03', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0046cf185335fe9997f413bb18120637a4217efd', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b2807c6ad770be769294043fc168be2363d0f4c', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c7137b05e5ec61b2cc06e93a1685efbe58fdd72', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd93cb1a978eaed2de118b0418dc9d8b1b287d9f6', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '067f6cb2e82dbe55d83d980bb12c5221ae60932a', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1236e0d5602d375e704c984e438f2b48233c717d', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5fa4ae0b2a80f5542b7ba095d4fbb9ac7bd6a5f', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}]",Sandil Ranasinghe,55044163,,User,,16,,31,44
998577578,Documentation,,True,8,https://api.github.com/repos/wagtail/wagtail-streamfield-migration-toolkit/pulls/8,https://github.com/wagtail/wagtail-streamfield-migration-toolkit/pull/8,closed,984,151,11,20,1,11,0,0,[],2022-07-17 07:10:37+00:00,2022-09-12 12:48:18+00:00,4945061.0,"57 days, 5:37:41","[{'comment_id': 966910751, 'comment_body': 'I think worth a link to the usage docs since this is pretty lightweight?', 'comment_created': datetime.datetime(2022, 9, 9, 10, 46, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 966919437, 'comment_body': ""I think you could do with an example of basic usage before you start diving into exact definitions of block path etc. It's not very clear that you need to make a streamfield change, create a new migration file with a new `MigrateStreamData` operation before you move on to the next step. Also, we're not dependent on all wagtailcore migrations - maybe worth just noting which one we need!"", 'comment_created': datetime.datetime(2022, 9, 9, 10, 52, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 967195136, 'comment_body': ""A short description of the problem the package addresses would be good here - imagine you're a new Wagtail developer and don't know the internals well yet. In other words, _why_ does a developer need to write data migrations, and what is the cost?"", 'comment_created': datetime.datetime(2022, 9, 9, 15, 16, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 967199093, 'comment_body': 'A short example could be helpful here', 'comment_created': datetime.datetime(2022, 9, 9, 15, 20, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 967201001, 'comment_body': 'A more concrete example would be helpful here, for example an operation that truncates strings in a `CharBlock` to a certain length', 'comment_created': datetime.datetime(2022, 9, 9, 15, 22, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 967201739, 'comment_body': 'A small example would be useful here (e.g. `(for example, in the case of a CharBlock, the value will be the string value)`)', 'comment_created': datetime.datetime(2022, 9, 9, 15, 23, 23, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 968218087, 'comment_body': ""They're closer to utility classes. Might be better to be more specific here - we're exposing a custom `Operation` class (`MigrateStreamData`?) for migrations, which iterates/recurses through a streamfield to apply chosen sub-operations to each block. With it, we supply a set of streamfield operations to perform the most common changes, but you can also write your own."", 'comment_created': datetime.datetime(2022, 9, 12, 9, 57, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 968224493, 'comment_body': 'Maybe just: ""A StreamField is stored as a single column of JSON data in the database. Blocks are stored as structures within the JSON, and can be nested` - to avoid the slightly convoluted first sentence', 'comment_created': datetime.datetime(2022, 9, 12, 10, 4, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 968227453, 'comment_body': 'Also, maybe make clear what the consequences of not migrating data are - eg even a simple change like renaming a block can result in old data being lost', 'comment_created': datetime.datetime(2022, 9, 12, 10, 7, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 968228599, 'comment_body': 'Might be worth adding the wagtailcore dependency in here as an example', 'comment_created': datetime.datetime(2022, 9, 12, 10, 9, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 968294122, 'comment_body': 'This is a little hard to follow. Perhaps we could just write the code?\r\n\r\n```suggestion\r\nAssume we have a model `BlogPage` in app `blog`, defined as follows:\r\n\r\n```python\r\nclass BlogPage(Page):\r\n    content = StreamField([(""field1"", blocks.CharBlock())])```\r\n\r\nIf we want to rename ""field1"" to ""block1"", we would use the following migration\r\n```', 'comment_created': datetime.datetime(2022, 9, 12, 11, 22, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}]","[{'commit_sha': '6905404244324169c1d4d8ec6bb4f4512af70f43', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a18757e20e98a1df7e00ebaf7c5dc5022ea5ea0', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdd1a87cbd1c342d516344792ad28c7861cbfc5a', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '073bc160e928cc3c6f81f2a7af407d6a4db2cc6b', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa2a9d3e960fd4a4e883af069cc5b7046bed4e9a', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43674b8513a98f68b9e106dccb2b5dd05c2ea8db', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f343f219be9eefdf282acab29a2daa183bf5e3e6', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7694399f8a9ac49d9bc685d4717db087a6b99526', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ee25d18c0584e2b4d9b7c8074574d7cdd69f7b9', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '034fe65a5f7c3493b6aff90a6b5cad9b58735f06', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffdfe07ff5552763c09942b2c8e4137e038f3a4e', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b53d3082ce5a148151618bebb589a99b0fa56b6', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a4b9b1bc6c376a5f1290968c508e544e3468fb5', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4383b03520eb7d97dfd1d309c39b17f5cb3791f6', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80219e2d2e47b47cef2031aac69b9d649d5bcb9f', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3d4e042cf3850b7c627729f750391e66fb5fbfc', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13dd95b6fd775e7995dc1a0c98f58fdd1e4f3cb5', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce3c60e80731dd8963c3dbceeb7685ef9cc32f29', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a018ad0c0b0a7897c4dc5836b53a100a41721e0', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be9623f542202045724235e9daa3da2a13bdbb20', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}]",Sandil Ranasinghe,55044163,,User,,16,,31,44
1033055040,V3 support,"support for wagtail 3

- different query for wagtail 3 in `MigrateStreamData`
- changed tests to work with wagtail 3 (moved classes not relevant to wagtail 3 behind if conditions)",True,15,https://api.github.com/repos/wagtail/wagtail-streamfield-migration-toolkit/pulls/15,https://github.com/wagtail/wagtail-streamfield-migration-toolkit/pull/15,closed,305,140,23,17,1,9,0,0,[],2022-08-22 16:10:17+00:00,2022-09-12 13:13:52+00:00,1803815.0,"20 days, 21:03:35","[{'comment_id': 962834401, 'comment_body': 'Wagtail 4 is out now', 'comment_created': datetime.datetime(2022, 9, 5, 12, 6, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 962836241, 'comment_body': 'as above, should be 4 not rc1', 'comment_created': datetime.datetime(2022, 9, 5, 12, 6, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 962838191, 'comment_body': 'Could we get the `revision_query_maker` just to return the queryset? Getting its `RevisionModel` and then using it with its `query` feels like something that requires a bit too much internal knowledge of the class - it would be clearer just to return a queryset I think', 'comment_created': datetime.datetime(2022, 9, 5, 12, 8, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 962867510, 'comment_body': 'Would it be fine to get both the `RevisionModel` and the revision query/or queryset then? Since I will need access to the `RevisionModel` for the `bulk_update` further down.', 'comment_created': datetime.datetime(2022, 9, 5, 12, 41, 53, tzinfo=datetime.timezone.utc), 'commenter': 'sandilsranasinghe', 'type': 'User'}, {'comment_id': 962907199, 'comment_body': ""I think that's okay. (or you could give it a bulk_update method directly, either works)"", 'comment_created': datetime.datetime(2022, 9, 5, 13, 25, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 966917903, 'comment_body': ""Hang on. We don't need the current wagtail version when we run this - we need the version that was used to generate this migration, the version at this point in the migration history. We need to use the `apps.get_model` to test which models we have to work this out."", 'comment_created': datetime.datetime(2022, 9, 9, 10, 51, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 968210581, 'comment_body': 'Why is rewriting `cached_property` necessary here?', 'comment_created': datetime.datetime(2022, 9, 12, 9, 49, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 968216337, 'comment_body': ""uh it doesn't seem to work with python 3.7 (the one I used, functools.cached_property seems to be there in 3.8) "", 'comment_created': datetime.datetime(2022, 9, 12, 9, 55, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sandilsranasinghe', 'type': 'User'}, {'comment_id': 968221871, 'comment_body': 'Import `cached_property` from Django then, should still work', 'comment_created': datetime.datetime(2022, 9, 12, 10, 1, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}]","[{'commit_sha': 'a2f5a0ed3130028be2d62ca75345779d231f95f4', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c206968c163a69bcb538044936dd616a998e882', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b7c936335d369740971168a093ce902624e2c44', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fb289a0559cce31897539161ed1ffa866a90949', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6df47205cf7604f222cfbdabe44ac482d0ced98c', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d0ec464930435ebd63d57c2912991fdaeb92e98', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5e8be931ebb6c28e9c9e890a60d8148ca82d710', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b51835fc2442a2f6e3d439c2b62b3cd312d4b03a', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f1a0c98214b0ca5051d8d92a3b0b10b4bdc8f3c', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e1739fc271071ad01d8c34cc9b91112ef08dfcf', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '341d614583c0fd3187682fc45e141841d24df791', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be3bbb46e74aff0e2d7104c2ade998f0dcbfa6ad', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd8d230264dd4e0fb83a098792808b59d819dbb6', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31677fcd855393ea2d1f829fd507c09242ebdbfb', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8d3d031ba53ebf8386f990d8d66cd0bb2e01934', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4432b0634eacf70d01bbd38bac87c84ba13ba63', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d20e2635eebe5fcbba25b408a46c466f90ef26a', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}]",Sandil Ranasinghe,55044163,,User,,16,,31,44
1017265997,Generate command,,True,12,https://api.github.com/repos/wagtail/wagtail-streamfield-migration-toolkit/pulls/12,https://github.com/wagtail/wagtail-streamfield-migration-toolkit/pull/12,closed,286,1,4,11,0,26,0,0,[],2022-08-04 09:19:01+00:00,2022-09-12 14:40:14+00:00,3388873.0,"39 days, 5:21:13","[{'comment_id': 962846412, 'comment_body': ""Currently we only support remove and delete here, right? Do you think we could extend this command to support others, given autodetect will cover those two? (I don't think this needs to be part of this PR, but would be nice to make this command a bit more useful in the future)"", 'comment_created': datetime.datetime(2022, 9, 5, 12, 18, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 962902059, 'comment_body': 'I think it might be handy to specify the format here, like you do in the error on line 49. Could you also call it something more descriptive than `args`? Eg `path`?', 'comment_created': datetime.datetime(2022, 9, 5, 13, 20, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 962910172, 'comment_body': 'This bit is the same between all operations we may support - could we get these individual `make_x_operation` methods to return just the intra-streamfield operation, and put the return values into a `MigrateStreamData` operation in the calling function?', 'comment_created': datetime.datetime(2022, 9, 5, 13, 29, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 962950287, 'comment_body': ""What's the issue here? Is this resolved?"", 'comment_created': datetime.datetime(2022, 9, 5, 14, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 962950590, 'comment_body': 'Should we preserve any args here?', 'comment_created': datetime.datetime(2022, 9, 5, 14, 14, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 966888694, 'comment_body': 'What if you have the same rename for multiple paths? You might end up with repeated names in the title. Why not use a set here, or similar, so you only get distinct names?', 'comment_created': datetime.datetime(2022, 9, 9, 10, 22, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 966890481, 'comment_body': ""Shouldn't this be on the main parser, if it's required for both?"", 'comment_created': datetime.datetime(2022, 9, 9, 10, 24, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 966891527, 'comment_body': ""Similarly, could arguments like paths, block_name, etc be on the main parser since they don't differ between the subparsers? Or does that make the help text confusing?"", 'comment_created': datetime.datetime(2022, 9, 9, 10, 26, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 966892464, 'comment_body': 'Maybe we should include the app label here so you can operate across apps? `app_label.model_name` is a pretty standard way to reference a model in Django after all', 'comment_created': datetime.datetime(2022, 9, 9, 10, 27, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 966990727, 'comment_body': ""It kind of looked weird with the help stuff. If I put it as a positional argument then I have to always type it even when getting help like `mycommand applabel rename --help`. If I put it as an optional argument it says optional and is buried in the middle of other option things. And the -- gives it a kind of optional feeling anyway. There was something called a parent parser, I'll take a look at that and see if I can kind of inherit all the common stuff"", 'comment_created': datetime.datetime(2022, 9, 9, 11, 57, 37, tzinfo=datetime.timezone.utc), 'commenter': 'sandilsranasinghe', 'type': 'User'}, {'comment_id': 966992224, 'comment_body': ""The block name kind of differs. Like it's not exactly supposed to be part of the path, but an argument used when renaming. If we add alter value for example it'll take a new value instead of a block name argument. "", 'comment_created': datetime.datetime(2022, 9, 9, 11, 59, 34, tzinfo=datetime.timezone.utc), 'commenter': 'sandilsranasinghe', 'type': 'User'}, {'comment_id': 966994097, 'comment_body': ""For now I was under the impression that this would work only for a single app at a time (single migration file). I wasn't sure if that wouldn't be clear when applabel is also part of the path. Otherwise yeah having it as part of the path would be more convenient too. "", 'comment_created': datetime.datetime(2022, 9, 9, 12, 2, 14, tzinfo=datetime.timezone.utc), 'commenter': 'sandilsranasinghe', 'type': 'User'}, {'comment_id': 967011813, 'comment_body': 'I think we should give the user a short description of the subcommand rather than tell them they can use the `--help` option. For example `help=""rename a block""`', 'comment_created': datetime.datetime(2022, 9, 9, 12, 24, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 967012410, 'comment_body': ""Actually, that's a good point. In the future it would be nice to get it to generate multiple files in that case (one per app), but let's leave it as is for now then."", 'comment_created': datetime.datetime(2022, 9, 9, 12, 25, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 967016221, 'comment_body': ""Ah, I see, this is because of alter value then? I see what you mean, but even there, it might be a bit weird for users to have to specify a path to a parent block for rename, and a path to the child block for alter value - feels a bit unintuitive. Maybe we should revisit how we define block path in the future.. Still, this is fine as is for now - let's leave it."", 'comment_created': datetime.datetime(2022, 9, 9, 12, 29, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 967016560, 'comment_body': ""Ah, I see. Makes sense with the help then. If this is clearer, let's leave it."", 'comment_created': datetime.datetime(2022, 9, 9, 12, 29, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 967022120, 'comment_body': 'This is correct, but a bit wasteful to create a dict just to index into it once. Given that we only have two options for now, I would suggest doing:\r\n\r\n```\r\nif options[""operation_type""] == ""rename"":\r\n    ...\r\nelif ...\r\n```\r\n\r\nIt could go into a `get_operation_maker` method to keep `handle` clean.\r\n\r\nIf the number of operations grows greatly, in future you could `getattr(self, f""make_{operation_type}_operation"")`.\r\n\r\nWould be a nice with Python 3.10\'s structural pattern matching.', 'comment_created': datetime.datetime(2022, 9, 9, 12, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 967031500, 'comment_body': ""Django's `makemigrations` has the following for checking the migration name - this could be good for making sure we generate consistent names\r\n```\r\n       if self.migration_name and not self.migration_name.isidentifier():\r\n            raise CommandError('The migration name must be a valid Python identifier.')\r\n ```"", 'comment_created': datetime.datetime(2022, 9, 9, 12, 47, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 967033399, 'comment_body': '`Migration` has a `suggest_name` method. Could we use that here? The entrypoint from `makemigrations` is here: https://github.com/django/django/blob/main/django/db/migrations/autodetector.py#L1679', 'comment_created': datetime.datetime(2022, 9, 9, 12, 49, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 967470625, 'comment_body': ""This uses a property which is not available on `RunPython` class. If we use it we will have to define the method in our `MigrateStreamData` class like here https://github.com/django/django/blob/f3cd252cfc46c0c7d66e765818dd3dadf60d4d0e/django/db/migrations/operations/fields.py#L127 .  It feels like it'll be easier to do it here for now?"", 'comment_created': datetime.datetime(2022, 9, 9, 20, 58, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sandilsranasinghe', 'type': 'User'}, {'comment_id': 968237264, 'comment_body': ""I don't think you need `elif` and `self.migration_name`, since your `if` condition is `not self.migration_name`"", 'comment_created': datetime.datetime(2022, 9, 12, 10, 17, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 968443960, 'comment_body': 'Is this missing the model and field names?', 'comment_created': datetime.datetime(2022, 9, 12, 13, 47, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 968446932, 'comment_body': 'I think that\'s included in the `path` in this case (""where `<path>` would look like `<model_name>.<streamfield_name>....<parent_block_name>`"")', 'comment_created': datetime.datetime(2022, 9, 12, 13, 50, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 968462671, 'comment_body': 'Yep, I see you are correct :+1: ', 'comment_created': datetime.datetime(2022, 9, 12, 14, 3, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 968466365, 'comment_body': '```suggestion\r\n            help=""path/s to the block/s which is being operated on: \'<model_name>.<field_name>[.<block_path>]\' \\\r\n```\r\n\r\nSmall suggestion - this might be clearer. The existing way suggests that you could have `<field_name><non_empty_block_path>` (without the delimiting `.`)', 'comment_created': datetime.datetime(2022, 9, 12, 14, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jams2', 'type': 'User'}, {'comment_id': 968471620, 'comment_body': ""they're all part of the `<path>`, I mentioned what the path looks like below cuz otherwise it's very long for a line :sweat_smile: \r\nwould it be better to put everything in one line?"", 'comment_created': datetime.datetime(2022, 9, 12, 14, 10, 57, tzinfo=datetime.timezone.utc), 'commenter': 'sandilsranasinghe', 'type': 'User'}]","[{'commit_sha': '5a32ed714cd862346f368ecc40ce6726a9fd107e', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c099b54b22f839d17b3a226387ac105c392bbbc0', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdedc211e1038476d70f4e8ab4c3ba3c53468f6f', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '751e4df6d65a05682562b3c528eeda701d0bd2ca', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2800e589743a3bb2213a541b70481db164bf4caf', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '476f832df4eae8e9321c51cf53d24956b4dc788f', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20015a0acd7e67d0e8f011c883fdb4669d4c2f86', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01984d7a485527f1c561f40cf89c136e3ef32b72', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3aea5b54686da0ba5798c27f7ee6581f2af7ffd8', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '321f8f5a180958cf41b32ff123c0c58ebfda1fcf', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12e142a58965624f4672630bb35db5f5d1d4482b', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}]",Sandil Ranasinghe,55044163,,User,,16,,31,44
1027762070,Autodetect,,True,14,https://api.github.com/repos/wagtail/wagtail-streamfield-migration-toolkit/pulls/14,https://github.com/wagtail/wagtail-streamfield-migration-toolkit/pull/14,closed,822,0,10,16,1,5,0,0,[],2022-08-16 15:15:47+00:00,2022-09-12 17:05:20+00:00,2339373.0,"27 days, 1:49:33","[{'comment_id': 968590594, 'comment_body': 'Maybe rather than indexing/slicing here, you could destructure ie `operation_1, block_path_1 = operation_and_block_path_1`. Though tbh, it may be easier just to compare operations here, and compare the block paths elsewhere', 'comment_created': datetime.datetime(2022, 9, 12, 15, 54, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 968591795, 'comment_body': ""Similarly, maybe worth splitting up operations and block paths into separate variables in this assertion so you're not always looking at indexes?"", 'comment_created': datetime.datetime(2022, 9, 12, 15, 55, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 968592509, 'comment_body': 'Test that the same block definition... does what? Maybe worth explicitly saying ""produces no operations when compared"", or similar', 'comment_created': datetime.datetime(2022, 9, 12, 15, 55, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 968595124, 'comment_body': ""I think this deserves a higher profile! Could we add a little more about when you use it - before running `makemigrations` for your changes for example? Can we make it clear that it doesn't just detect changes, it generates the migrations too? Also, I think this is important enough to deserve adding to the readme"", 'comment_created': datetime.datetime(2022, 9, 12, 15, 58, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}, {'comment_id': 968658177, 'comment_body': ""it's -> its"", 'comment_created': datetime.datetime(2022, 9, 12, 16, 56, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jacobtoppm', 'type': 'User'}]","[{'commit_sha': '54a6c211d1b4142af001c8131f9ee37468d5e2d2', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3c1079f87ab27b265f23887917eaeee876c5fb1', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2f024b9d7c60d381af8a2b3d0749390ed38a4b3', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e9fcc4c2b364db4c78eb231e91e49f81d26b569', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a98e1178d179eb18dca13cb637cdade12ba2c58c', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca2867fa75668e851b131fee79cb26ac6fbb436d', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '100ac17c42c5590764422981234caf0252cc0abf', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f69441777089295b444421aa3b1886361de2e3b5', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d692757ddae8750d215df8fc8e543666f815869', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c6af9c91afacc54f5f7dd8b1e9950bbd7e3389d', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd02ea43be8f1555a7dd3bfe6cf319a459cb65411', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb92cca53e24aebee2cb2f1c67a96a63fb1b54e5', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66dd1e36bfd04991181a905ead066d1714132c15', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bef0ee35969732c58fc948a783c6ac3ccfe3a2e', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39eb979e558692823f23ed9b46f4043c4dbb37cb', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fc55809ac51416c596b2c64c2208284570999e1', 'committer_username': 'sandilsranasinghe', 'committer_name': 'Sandil Ranasinghe', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 8, 6, 38, 11, tzinfo=datetime.timezone.utc)}]",Sandil Ranasinghe,55044163,,User,,16,,31,44

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
501584368,wagtail-streamfield-migration-toolkit,wagtail/wagtail-streamfield-migration-toolkit,Python,4,25,2,2,214,7,14,2,"[{'id': 1462765206, 'number': 34, 'closed': None, 'created': datetime.datetime(2023, 8, 4, 11, 17, 7, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 18, 'deletions': 3, 'state': 'open'}, {'id': 1386081731, 'number': 33, 'closed': datetime.datetime(2023, 6, 20, 15, 32, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 9, 12, 4, 59, tzinfo=datetime.timezone.utc), 'time_taken': 962827.0, 'time_delta': '11 days, 3:27:07', 'additions': 49, 'deletions': 15, 'state': 'closed'}, {'id': 1348619310, 'number': 31, 'closed': datetime.datetime(2023, 8, 4, 8, 10, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 12, 12, 30, 9, tzinfo=datetime.timezone.utc), 'time_taken': 7242014.0, 'time_delta': '83 days, 19:40:14', 'additions': 228, 'deletions': 127, 'state': 'closed'}, {'id': 1198292894, 'number': 28, 'closed': datetime.datetime(2023, 1, 17, 1, 6, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 16, 2, 0, 32, tzinfo=datetime.timezone.utc), 'time_taken': 83137.0, 'time_delta': '23:05:37', 'additions': 11, 'deletions': 8, 'state': 'closed'}, {'id': 1167847203, 'number': 27, 'closed': datetime.datetime(2023, 1, 6, 9, 19, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 16, 5, 19, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1828807.0, 'time_delta': '21 days, 4:00:07', 'additions': 148, 'deletions': 11, 'state': 'closed'}, {'id': 1167841794, 'number': 26, 'closed': datetime.datetime(2023, 5, 6, 13, 59, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 16, 5, 14, 55, tzinfo=datetime.timezone.utc), 'time_taken': 12213882.0, 'time_delta': '141 days, 8:44:42', 'additions': 349, 'deletions': 169, 'state': 'closed'}, {'id': 1087375174, 'number': 22, 'closed': datetime.datetime(2022, 12, 13, 10, 45, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 14, 12, 17, 55, tzinfo=datetime.timezone.utc), 'time_taken': 5178467.0, 'time_delta': '59 days, 22:27:47', 'additions': 421, 'deletions': 189, 'state': 'closed'}, {'id': 1070994048, 'number': 19, 'closed': datetime.datetime(2022, 9, 29, 10, 43, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 29, 8, 28, 36, tzinfo=datetime.timezone.utc), 'time_taken': 8078.0, 'time_delta': '2:14:38', 'additions': 12, 'deletions': 9, 'state': 'closed'}, {'id': 1036542363, 'number': 16, 'closed': datetime.datetime(2022, 9, 8, 15, 19, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 25, 10, 6, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1228367.0, 'time_delta': '14 days, 5:12:47', 'additions': 383, 'deletions': 59, 'state': 'closed'}, {'id': 1033055040, 'number': 15, 'closed': datetime.datetime(2022, 9, 12, 13, 13, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 22, 16, 10, 17, tzinfo=datetime.timezone.utc), 'time_taken': 1803815.0, 'time_delta': '20 days, 21:03:35', 'additions': 305, 'deletions': 140, 'state': 'closed'}, {'id': 1027762070, 'number': 14, 'closed': datetime.datetime(2022, 9, 12, 17, 5, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 16, 15, 15, 47, tzinfo=datetime.timezone.utc), 'time_taken': 2339373.0, 'time_delta': '27 days, 1:49:33', 'additions': 822, 'deletions': 0, 'state': 'closed'}, {'id': 1022982517, 'number': 13, 'closed': datetime.datetime(2022, 8, 15, 5, 7, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 10, 17, 21, 55, tzinfo=datetime.timezone.utc), 'time_taken': 387907.0, 'time_delta': '4 days, 11:45:07', 'additions': 288, 'deletions': 14, 'state': 'closed'}, {'id': 1017265997, 'number': 12, 'closed': datetime.datetime(2022, 9, 12, 14, 40, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 4, 9, 19, 1, tzinfo=datetime.timezone.utc), 'time_taken': 3388873.0, 'time_delta': '39 days, 5:21:13', 'additions': 286, 'deletions': 1, 'state': 'closed'}, {'id': 1014572976, 'number': 11, 'closed': datetime.datetime(2022, 8, 24, 13, 20, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 2, 3, 33, 20, tzinfo=datetime.timezone.utc), 'time_taken': 1936008.0, 'time_delta': '22 days, 9:46:48', 'additions': 471, 'deletions': 113, 'state': 'closed'}, {'id': 1010626791, 'number': 9, 'closed': datetime.datetime(2022, 8, 11, 15, 35, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 28, 10, 12, 52, tzinfo=datetime.timezone.utc), 'time_taken': 1228969.0, 'time_delta': '14 days, 5:22:49', 'additions': 1504, 'deletions': 798, 'state': 'closed'}, {'id': 998577578, 'number': 8, 'closed': datetime.datetime(2022, 9, 12, 12, 48, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 17, 7, 10, 37, tzinfo=datetime.timezone.utc), 'time_taken': 4945061.0, 'time_delta': '57 days, 5:37:41', 'additions': 984, 'deletions': 151, 'state': 'closed'}, {'id': 989789676, 'number': 7, 'closed': datetime.datetime(2022, 8, 11, 16, 2, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 7, 7, 14, 46, tzinfo=datetime.timezone.utc), 'time_taken': 3055686.0, 'time_delta': '35 days, 8:48:06', 'additions': 168, 'deletions': 0, 'state': 'closed'}, {'id': 986143195, 'number': 6, 'closed': datetime.datetime(2022, 7, 26, 10, 37, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 4, 8, 13, 11, tzinfo=datetime.timezone.utc), 'time_taken': 1909473.0, 'time_delta': '22 days, 2:24:33', 'additions': 708, 'deletions': 86, 'state': 'closed'}, {'id': 984545422, 'number': 5, 'closed': datetime.datetime(2022, 7, 5, 11, 30, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 1, 5, 34, 51, tzinfo=datetime.timezone.utc), 'time_taken': 366951.0, 'time_delta': '4 days, 5:55:51', 'additions': 441, 'deletions': 1, 'state': 'closed'}, {'id': 980466625, 'number': 4, 'closed': datetime.datetime(2022, 7, 1, 5, 15, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 19, 50, 17, tzinfo=datetime.timezone.utc), 'time_taken': 293106.0, 'time_delta': '3 days, 9:25:06', 'additions': 193, 'deletions': 0, 'state': 'closed'}, {'id': 979511068, 'number': 3, 'closed': datetime.datetime(2022, 6, 27, 12, 10, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 3, 14, 19, tzinfo=datetime.timezone.utc), 'time_taken': 32151.0, 'time_delta': '8:55:51', 'additions': 120, 'deletions': 1, 'state': 'closed'}, {'id': 978019118, 'number': 2, 'closed': datetime.datetime(2022, 7, 1, 5, 15, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 24, 7, 56, 5, tzinfo=datetime.timezone.utc), 'time_taken': 595183.0, 'time_delta': '6 days, 21:19:43', 'additions': 231, 'deletions': 0, 'state': 'closed'}, {'id': 971932048, 'number': 1, 'closed': datetime.datetime(2022, 6, 24, 14, 52, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 20, 8, 52, 21, tzinfo=datetime.timezone.utc), 'time_taken': 367216.0, 'time_delta': '4 days, 6:00:16', 'additions': 518, 'deletions': 4, 'state': 'closed'}]"
