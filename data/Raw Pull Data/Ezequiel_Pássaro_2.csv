pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
442280905,Re-write hash signatures,"## Motivation
As described in #166 the database signature system needed refactoring.

## Changes
- [x] Fix general MD5 signatures.
- [x] Store individual MD5 hashes in `meta` key for every Pandas object stored in the HDF5 file. 
- [x] Store data sources versions in `meta` key.
- [x] Store relevant package versions in `meta` key.
- [x] Lot of improvements to the log output.
- [x] Write tests for some of the new features.

## Description

The first important change was introducing `pyarrow` as dependency. Using `pyarrow` to serialize (and later hash) objects is the Pandas's recommended way to do it since `to_msgpack` method deprecation. It proved to be reliable in returning consistents checksums in different trials. Also, it allows us to pin `pyarrow` as agressively as we want without compromising Pandas.

Once the MD5 signatures were consistent, my goal was to store a new `meta` dataframe with all the information necessary to reproduce the atomic file: MD5 sums (cut down to 20 characters) for every already stored key (levels, lines, etc.), data sources and package versions. 

Versions of the databases are shipped in many ways:

- ChiantiPy includes the code necessary to retrieve the current database version.
- Versions of NIST databases are obtained parsing the websites with BeautifulSoup.
- Versioning of GFALL is made through MD5 hashes.

This last item leads to important changes in the code. Since Pandas is capable to handle URLs (and we currently are making use of that) I needed to implement a way to hash `gfall.dat` on-the-fly without compromising this feature. So I introduced a step in `gfall_raw` to make a binary buffer suitable to work with local files or over `http`. Also, this hash is exactly equal to the one obtained through the command line.

Finally, I stored the creation date as root attribute.

## Examples

```
>>> store = pd.HDFStore('test.h5')
>>> store.root._v_attrs['md5']
44a5120294743bda40860f52c0048ab7

>>> store.root._v_attrs['uuid']
aaf0d29cbd5511ea9a62c83dd46c2c53

>>> store.root._v_attrs['date']
Jul 03, 2020 17:38:00 UTC

>>> store['meta']
                                               value
field    key                                        
md5sum   atom_data              634785f05c4868f929c8
         ionization_data        a67202b809dd669c1916
         levels                 863da26ebaf4e322a0f0
         lines                  9999956edd0dcfb7c023
         macro_atom_data        dd196c9cb454bd287585
         macro_atom_references  9025251912c8aadfecd2
         zeta_data              f2496cec5c219dfb6d63
datasets nist_weights                            4.1
         nist_spectra                          5.7.1
         gfall.dat              2704fbda0b8cba61bb70
         chianti_data                          9.0.1
software python                               3.6.10
         carsus                           0.1.dev656
         astropy                               3.2.3
         numpy                                1.15.4
         pandas                                1.0.5
         pyarrow                              0.14.1
         tables                                3.6.1
         ChiantiPy                             0.8.4
```",True,183,https://api.github.com/repos/tardis-sn/carsus/pulls/183,https://github.com/tardis-sn/carsus/pull/183,closed,340,101,16,33,1,6,1,2,[{'name': 'feature'}],2020-06-30 20:40:19+00:00,2020-07-16 16:00:37+00:00,1365618.0,"15 days, 19:20:18","[{'comment_id': 449132979, 'comment_body': 'Aligned all the logging outputs, looks nice.', 'comment_created': datetime.datetime(2020, 7, 2, 16, 24, 43, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 449136456, 'comment_body': 'Autoformatted by mistake when introduced `pyarrow` as dependency.', 'comment_created': datetime.datetime(2020, 7, 2, 16, 30, 38, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 451832218, 'comment_body': 'Get Chianti Database version.', 'comment_created': datetime.datetime(2020, 7, 8, 21, 20, 56, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 451832689, 'comment_body': 'Get MD5 from local or remote files (http). Returns the same checksum than `md5sum` in the command line!', 'comment_created': datetime.datetime(2020, 7, 8, 21, 22, 6, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 451833324, 'comment_body': 'Add pyarrow to dependencies.', 'comment_created': datetime.datetime(2020, 7, 8, 21, 23, 34, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 451834677, 'comment_body': ""I don't like this test so much. I don't know if with future versions of pyarrow and pandas the hash will remain the same."", 'comment_created': datetime.datetime(2020, 7, 8, 21, 26, 24, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}]","[{'commit_sha': '0d08791fd92670041536c6b1b2278c451ab74cf8', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '794af3414d14d798b8e07b3200c1e182754f1e89', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f4d47c369d93a31796e6d10161af1333a3a9bf4', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ae2da5ce83016e425e51f2d2df70dd1ebb567c9', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8331d3580f9e0e41184e793fcbf45c93da48cdf2', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71ab4271cc58c30cb2aa7d857ba95397362a19c1', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86c8d7b17af69683c923471972cb1122c89304ad', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa12dae72aa7b1a226debcd0b6cc1c8d224a607d', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '272824e3d636014b410eaf9e461a8f2e767d4d8a', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ab8a08c2e973ab2fdc089c0e741911067d8b526', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81db67da00f0b21922d75f09145105739b98ceea', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1dc7d7e114f12fade63f2396ad23e690eee1037', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbe27b816941e3f07626486d2ee849578906295a', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b5fe34470abcc8002cc02904d6fc7b81ee7e36e', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58e4b0f5a45a602d12f51586bc9710dab96ac519', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f9a98db5d186f63f30c4a296bd37f3a5a43079f', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78f626c023319a6a97553dba3e9be480c6421c4a', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ee97de3a7d2985b9d963b2e13c15e87ef201c82', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff35f0fa4d8022e631f0286744b3850ab9221f64', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e52e384382ebb72b9e8aebf4d9ea90a3b31cee0', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49a2cb34139d86cced1c6793de994135cb6114c8', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9131c56581ff2c29b471ec356b18cc1b9cd317d', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b425054409adf63cb4b7d647d0f16e61d2a23a08', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0a3eeae69d803bc04fa21cfb254ec3ca360bf6f', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c3ef7c9aa9d7af63b2781ad0889e36e99e1d2ef', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e060367116ffffcd80d2d20cb81ecefa30ade6b', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17e2e88e5344e7becff7abf083886cf815b7ced5', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35630c71d7aff2340d48d5e8f9d4730dd8abf9a7', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5277dad36f5c02a2479552209e5e82097d217fd', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89c44c2c318f68d7fa3b16609088e1f138e852ea', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e1556c3ae030052346c42fbd56912c43ae09e3d', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b85e2ce815172808bb08376e7a3c17cff9190350', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a85190a51eac13028cf0966565e359c060ac993', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}]",Ezequiel Pássaro,22769314,,User,,82,,39,24
450368017,Higher zs,"## Motivation
Trying to make minor ""fudge"" to Carsus to accommodate higher Z elements. Issue is that NIST source for ground state J-values was returning NaNs.

See also: #168.

## Changes
Added a catch in the NIST ionization code to insert ""J=0"" in place of NaNs - i.e. adopt ground state stat. weight of 1 if it has not been able to inject a value from NIST.

Also minor edit associated with the setting of matching criteria.

## Description
Changes made in nist/ionization.py
(uses NaN check and replaced NaN with 0)
and in gfall.py 
(included ""else"" condition for the ""unique_level_identifier"")
",True,189,https://api.github.com/repos/tardis-sn/carsus/pulls/189,https://github.com/tardis-sn/carsus/pull/189,closed,31,4,3,8,2,8,0,3,[],2020-07-16 17:26:39+00:00,2020-07-24 13:34:22+00:00,677263.0,"7 days, 20:07:43","[{'comment_id': 455980419, 'comment_body': 'I would try to use:\r\n\r\n`if lvl[""J""].isna():`\r\n\r\nto keep the code most Pandas-friendly.', 'comment_created': datetime.datetime(2020, 7, 16, 18, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 456344336, 'comment_body': 'Hello - I tried replacing line 160 from the above with\r\n\r\nif (lvl[""J""].isna()):\r\n\r\ninstead in my local copy but then it complains as follows:\r\n\r\nAttributeError: \'numpy.float64\' object has no attribute \'isna\'\r\n\r\nI guess this is some Pandas thing (I don\'t know Pandas well). Is there some syntax thing wrong here?\r\n\r\n\r\n', 'comment_created': datetime.datetime(2020, 7, 17, 9, 57, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ssim', 'type': 'User'}, {'comment_id': 456411353, 'comment_body': ""Ok! Then don't worry. I'm approving these changes right now."", 'comment_created': datetime.datetime(2020, 7, 17, 12, 31, 6, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 456477114, 'comment_body': 'I think adding a warning message would be a really good idea. Maybe something along these lines could work:\r\n```\r\nprint(f""Set J=0 for ground state of species ({row[\'atomic_number\']}, {row[\'ion_charge\']})."")\r\n```', 'comment_created': datetime.datetime(2020, 7, 17, 14, 27, 4, tzinfo=datetime.timezone.utc), 'commenter': 'chvogl', 'type': 'User'}, {'comment_id': 456482245, 'comment_body': ""I forgot about this. IIRC there are 147 missing `J`'s between `Pr` and `U`, so the logging would be very long. But I don't see a better solution."", 'comment_created': datetime.datetime(2020, 7, 17, 14, 35, 30, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 456538829, 'comment_body': ""Shall I go ahead and add Christian's suggested line, then? I can do that easily enough."", 'comment_created': datetime.datetime(2020, 7, 17, 16, 11, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ssim', 'type': 'User'}, {'comment_id': 456645034, 'comment_body': 'Yes, do it.', 'comment_created': datetime.datetime(2020, 7, 17, 19, 53, 48, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 457331351, 'comment_body': 'Ok - I\'ve added that now - and it seems to work ok! Have re""pushed"" - so hopefully that shows up properly here now too! Thanks!', 'comment_created': datetime.datetime(2020, 7, 20, 12, 19, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ssim', 'type': 'User'}]","[{'commit_sha': '7cf9b09c78747348433658a4286ceaf6e1be3308', 'committer_username': 'ssim', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2011, 5, 16, 5, 58, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb3583a2c08b5e944ee1803cd6aaf69f9e8fbbf9', 'committer_username': 'ssim', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2011, 5, 16, 5, 58, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a9b3bc674d0edca5aa3d172b3d2514ed1400f9b', 'committer_username': 'ssim', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2011, 5, 16, 5, 58, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fa3d50f378b89e25efde37e81f0de0b11ed31db', 'committer_username': 'ssim', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2011, 5, 16, 5, 58, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72960a0b44e2ca95b1ddd8226eda4a074d4b5503', 'committer_username': 'ssim', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2011, 5, 16, 5, 58, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eaaad572fd80f36c72d14fb0fe1dcbd37b873ea2', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2690ecce40d67e832cb912a06803c1a4d3c899cf', 'committer_username': 'ssim', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2011, 5, 16, 5, 58, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5e49851aa279a5931a45d4a6d967e2893b08347', 'committer_username': 'ssim', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2011, 5, 16, 5, 58, 37, tzinfo=datetime.timezone.utc)}]",,790317,,User,,5,,0,4
442280905,Re-write hash signatures,"## Motivation
As described in #166 the database signature system needed refactoring.

## Changes
- [x] Fix general MD5 signatures.
- [x] Store individual MD5 hashes in `meta` key for every Pandas object stored in the HDF5 file. 
- [x] Store data sources versions in `meta` key.
- [x] Store relevant package versions in `meta` key.
- [x] Lot of improvements to the log output.
- [x] Write tests for some of the new features.

## Description

The first important change was introducing `pyarrow` as dependency. Using `pyarrow` to serialize (and later hash) objects is the Pandas's recommended way to do it since `to_msgpack` method deprecation. It proved to be reliable in returning consistents checksums in different trials. Also, it allows us to pin `pyarrow` as agressively as we want without compromising Pandas.

Once the MD5 signatures were consistent, my goal was to store a new `meta` dataframe with all the information necessary to reproduce the atomic file: MD5 sums (cut down to 20 characters) for every already stored key (levels, lines, etc.), data sources and package versions. 

Versions of the databases are shipped in many ways:

- ChiantiPy includes the code necessary to retrieve the current database version.
- Versions of NIST databases are obtained parsing the websites with BeautifulSoup.
- Versioning of GFALL is made through MD5 hashes.

This last item leads to important changes in the code. Since Pandas is capable to handle URLs (and we currently are making use of that) I needed to implement a way to hash `gfall.dat` on-the-fly without compromising this feature. So I introduced a step in `gfall_raw` to make a binary buffer suitable to work with local files or over `http`. Also, this hash is exactly equal to the one obtained through the command line.

Finally, I stored the creation date as root attribute.

## Examples

```
>>> store = pd.HDFStore('test.h5')
>>> store.root._v_attrs['md5']
44a5120294743bda40860f52c0048ab7

>>> store.root._v_attrs['uuid']
aaf0d29cbd5511ea9a62c83dd46c2c53

>>> store.root._v_attrs['date']
Jul 03, 2020 17:38:00 UTC

>>> store['meta']
                                               value
field    key                                        
md5sum   atom_data              634785f05c4868f929c8
         ionization_data        a67202b809dd669c1916
         levels                 863da26ebaf4e322a0f0
         lines                  9999956edd0dcfb7c023
         macro_atom_data        dd196c9cb454bd287585
         macro_atom_references  9025251912c8aadfecd2
         zeta_data              f2496cec5c219dfb6d63
datasets nist_weights                            4.1
         nist_spectra                          5.7.1
         gfall.dat              2704fbda0b8cba61bb70
         chianti_data                          9.0.1
software python                               3.6.10
         carsus                           0.1.dev656
         astropy                               3.2.3
         numpy                                1.15.4
         pandas                                1.0.5
         pyarrow                              0.14.1
         tables                                3.6.1
         ChiantiPy                             0.8.4
```",True,183,https://api.github.com/repos/tardis-sn/carsus/pulls/183,https://github.com/tardis-sn/carsus/pull/183,closed,340,101,16,33,1,6,1,2,[{'name': 'feature'}],2020-06-30 20:40:19+00:00,2020-07-16 16:00:37+00:00,1365618.0,"15 days, 19:20:18","[{'comment_id': 449132979, 'comment_body': 'Aligned all the logging outputs, looks nice.', 'comment_created': datetime.datetime(2020, 7, 2, 16, 24, 43, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 449136456, 'comment_body': 'Autoformatted by mistake when introduced `pyarrow` as dependency.', 'comment_created': datetime.datetime(2020, 7, 2, 16, 30, 38, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 451832218, 'comment_body': 'Get Chianti Database version.', 'comment_created': datetime.datetime(2020, 7, 8, 21, 20, 56, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 451832689, 'comment_body': 'Get MD5 from local or remote files (http). Returns the same checksum than `md5sum` in the command line!', 'comment_created': datetime.datetime(2020, 7, 8, 21, 22, 6, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 451833324, 'comment_body': 'Add pyarrow to dependencies.', 'comment_created': datetime.datetime(2020, 7, 8, 21, 23, 34, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 451834677, 'comment_body': ""I don't like this test so much. I don't know if with future versions of pyarrow and pandas the hash will remain the same."", 'comment_created': datetime.datetime(2020, 7, 8, 21, 26, 24, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}]","[{'commit_sha': '0d08791fd92670041536c6b1b2278c451ab74cf8', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '794af3414d14d798b8e07b3200c1e182754f1e89', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f4d47c369d93a31796e6d10161af1333a3a9bf4', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ae2da5ce83016e425e51f2d2df70dd1ebb567c9', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8331d3580f9e0e41184e793fcbf45c93da48cdf2', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71ab4271cc58c30cb2aa7d857ba95397362a19c1', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86c8d7b17af69683c923471972cb1122c89304ad', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa12dae72aa7b1a226debcd0b6cc1c8d224a607d', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '272824e3d636014b410eaf9e461a8f2e767d4d8a', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ab8a08c2e973ab2fdc089c0e741911067d8b526', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81db67da00f0b21922d75f09145105739b98ceea', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1dc7d7e114f12fade63f2396ad23e690eee1037', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbe27b816941e3f07626486d2ee849578906295a', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b5fe34470abcc8002cc02904d6fc7b81ee7e36e', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58e4b0f5a45a602d12f51586bc9710dab96ac519', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f9a98db5d186f63f30c4a296bd37f3a5a43079f', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78f626c023319a6a97553dba3e9be480c6421c4a', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ee97de3a7d2985b9d963b2e13c15e87ef201c82', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff35f0fa4d8022e631f0286744b3850ab9221f64', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e52e384382ebb72b9e8aebf4d9ea90a3b31cee0', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49a2cb34139d86cced1c6793de994135cb6114c8', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9131c56581ff2c29b471ec356b18cc1b9cd317d', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b425054409adf63cb4b7d647d0f16e61d2a23a08', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0a3eeae69d803bc04fa21cfb254ec3ca360bf6f', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c3ef7c9aa9d7af63b2781ad0889e36e99e1d2ef', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e060367116ffffcd80d2d20cb81ecefa30ade6b', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17e2e88e5344e7becff7abf083886cf815b7ced5', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35630c71d7aff2340d48d5e8f9d4730dd8abf9a7', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5277dad36f5c02a2479552209e5e82097d217fd', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89c44c2c318f68d7fa3b16609088e1f138e852ea', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e1556c3ae030052346c42fbd56912c43ae09e3d', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b85e2ce815172808bb08376e7a3c17cff9190350', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a85190a51eac13028cf0966565e359c060ac993', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}]",Ezequiel Pássaro,22769314,,User,,82,,39,24
453911486,Add CMFGEN as source of levels and lines,"## :bulb: Motivation
This PR will add CMFGEN as a new source of energy levels and transition lines. 

## :memo: Changes
<!--- List of changes, features and tasks -->
- [x] Write `CMFGENReader` class
- [x] Fixed bugs introduced in #190 
- [x] Re-write the priority management
- [x] Refactor the `TARDISAtomData` class
- [x] Ingest CMFGEN levels and lines into HDF5
- [x] Fixed all warnings

## :writing_hand: Description
The implementation of the `CMFGENReader` class was widely discussed and can be found in the [Examples](#Examples) section.

A big piece of the `TARDISAtomData` class needed to be refactored to make this PR possible. This action makes the code extremely more simple and maintainable, but could result confusing for reviewers. A ""sanity check"" was performed between the output of ""new"" `TARDISAtomData` code and the output produced by the legacy `AtomData` class, and can be found in the Examples section.

Also some simple bugs related to the ingest of Chianti collisions were found and fixed during the process. These two bugs appeared when *not* creating a `ChiantiReader` class or when the class was initialized with `collisions=False` flag.

## :books: Examples
- [Notes on CMFGENReader implementation](https://nbviewer.jupyter.org/gist/epassaro/e4e9c4ad4014622a345c84d5425d06ed)
- [Sanity check against Carsus legacy (SQL)](https://nbviewer.jupyter.org/gist/epassaro/f486ab744770528dca901d38fba67c00)

## :information_source: References",True,191,https://api.github.com/repos/tardis-sn/carsus/pulls/191,https://github.com/tardis-sn/carsus/pull/191,closed,563,363,5,68,3,82,0,4,[],2020-07-20 22:50:15+00:00,2021-04-14 14:27:33+00:00,23125038.0,"267 days, 15:37:18","[{'comment_id': 471232150, 'comment_body': '(bugfix) If Chianti collisions were not created the `to_hdf` method fails.', 'comment_created': datetime.datetime(2020, 8, 17, 4, 59, 45, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 471232432, 'comment_body': '(bugfix) Do not create collisions if `chianti_reader` is None.', 'comment_created': datetime.datetime(2020, 8, 17, 5, 1, 9, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 475941351, 'comment_body': 'Moved this method', 'comment_created': datetime.datetime(2020, 8, 24, 23, 3, 48, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 475941431, 'comment_body': 'Moved this method', 'comment_created': datetime.datetime(2020, 8, 24, 23, 4, 2, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 497445735, 'comment_body': 'needs to be flush with the triple quotes', 'comment_created': datetime.datetime(2020, 9, 30, 11, 47, 10, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497446112, 'comment_body': '```suggestion\r\n            Dictionary containing one dictionary per species with \r\n```', 'comment_created': datetime.datetime(2020, 9, 30, 11, 47, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497450583, 'comment_body': 'We should look at this https://pandas.pydata.org/pandas-docs/stable/user_guide/categorical.html - for now we can leave it as is. ', 'comment_created': datetime.datetime(2020, 9, 30, 11, 56, 19, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497450842, 'comment_body': ""what's the definition here `Si I` is what `ion_charge` - can you put this in a comment"", 'comment_created': datetime.datetime(2020, 9, 30, 11, 56, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497451093, 'comment_body': ""maybe - `np.abs(lvl['ID'])`"", 'comment_created': datetime.datetime(2020, 9, 30, 11, 57, 24, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497451686, 'comment_body': 'why are the lines above not covered by tests?', 'comment_created': datetime.datetime(2020, 9, 30, 11, 58, 30, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497452041, 'comment_body': ""```suggestion\r\n        levels['j'] = (levels['g'] - 1) / 2\r\n```"", 'comment_created': datetime.datetime(2020, 9, 30, 11, 59, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497452558, 'comment_body': 'why do we need a `reset_index` - as you set it later.?', 'comment_created': datetime.datetime(2020, 9, 30, 12, 0, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497453145, 'comment_body': ""is this `ion_charge` consistent with the TARDIS maincode. I like this better than in TARDIS - it's clearer. "", 'comment_created': datetime.datetime(2020, 9, 30, 12, 1, 14, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497453654, 'comment_body': 'after merging we should run `black`', 'comment_created': datetime.datetime(2020, 9, 30, 12, 2, 8, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497454277, 'comment_body': 'why do we do `nm` instead of `angstrom`?', 'comment_created': datetime.datetime(2020, 9, 30, 12, 3, 10, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497455988, 'comment_body': ""if we decide to go with nm - we should do that\r\n```suggestion\r\n        lines['wavelength'] = lines['wavelength'] * u.AA.to(u.nm)\r\n```"", 'comment_created': datetime.datetime(2020, 9, 30, 12, 6, 5, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497456089, 'comment_body': ""```suggestion\r\n        lines['gf'] = lines['f'] * lines['g_lower']\r\n```"", 'comment_created': datetime.datetime(2020, 9, 30, 12, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497456516, 'comment_body': 'what columns do you drop - maybe there is an easier way to drop columns?', 'comment_created': datetime.datetime(2020, 9, 30, 12, 7, 11, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497456768, 'comment_body': 'That should be a constant at least - or best in a YAML file somewhere. ', 'comment_created': datetime.datetime(2020, 9, 30, 12, 7, 40, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497457900, 'comment_body': 'can you make an issue about the staticmethod?', 'comment_created': datetime.datetime(2020, 9, 30, 12, 9, 46, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497458002, 'comment_body': 'that could be labeled easy. ', 'comment_created': datetime.datetime(2020, 9, 30, 12, 9, 56, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497458580, 'comment_body': 'these are constants - we might want to capitalize them in general. Issue? ', 'comment_created': datetime.datetime(2020, 9, 30, 12, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497458786, 'comment_body': '```suggestion\r\nGFALL_AIR_THRESHOLD = 2000 * u.AA\r\n```\r\nPEP8!!!', 'comment_created': datetime.datetime(2020, 9, 30, 12, 11, 20, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497458955, 'comment_body': 'and we are in angstrom - not sure if we should switch back and forth? ', 'comment_created': datetime.datetime(2020, 9, 30, 12, 11, 38, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497459106, 'comment_body': 'this could be an enum - make an issue? ', 'comment_created': datetime.datetime(2020, 9, 30, 12, 11, 55, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497462132, 'comment_body': 'think about dependencies of levels, lines, ions - networkx.', 'comment_created': datetime.datetime(2020, 9, 30, 12, 17, 14, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497464446, 'comment_body': 'what happens if they have the same priority? raise exception?', 'comment_created': datetime.datetime(2020, 9, 30, 12, 21, 12, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497466218, 'comment_body': 'add `Parameters`', 'comment_created': datetime.datetime(2020, 9, 30, 12, 24, 22, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497466573, 'comment_body': 'Parameters missing. Description should include latex? ', 'comment_created': datetime.datetime(2020, 9, 30, 12, 24, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497466680, 'comment_body': 'also link to rybicki page', 'comment_created': datetime.datetime(2020, 9, 30, 12, 25, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497468906, 'comment_body': 'issue of optimized grid maker - label it as undergrad project. ', 'comment_created': datetime.datetime(2020, 9, 30, 12, 28, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497470037, 'comment_body': 'what is a `ds_id`?', 'comment_created': datetime.datetime(2020, 9, 30, 12, 30, 38, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497470632, 'comment_body': 'maybe this should be a categorical as well. ', 'comment_created': datetime.datetime(2020, 9, 30, 12, 31, 40, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497470801, 'comment_body': ""that is `data_source_id` - let's use this. "", 'comment_created': datetime.datetime(2020, 9, 30, 12, 31, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497471680, 'comment_body': ""now it's `ion_number` - `ion_charge`?"", 'comment_created': datetime.datetime(2020, 9, 30, 12, 33, 28, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497473713, 'comment_body': 'questionable - we need to do this differently. Raise issue. ', 'comment_created': datetime.datetime(2020, 9, 30, 12, 36, 38, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497474603, 'comment_body': 'this should be done in one step. ', 'comment_created': datetime.datetime(2020, 9, 30, 12, 37, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497475061, 'comment_body': 'we should not have objects in pandas DataFrames. ', 'comment_created': datetime.datetime(2020, 9, 30, 12, 38, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497475152, 'comment_body': 'same here. ', 'comment_created': datetime.datetime(2020, 9, 30, 12, 38, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497475421, 'comment_body': 'convert beforehand. ', 'comment_created': datetime.datetime(2020, 9, 30, 12, 39, 7, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497475581, 'comment_body': 'data_source_id', 'comment_created': datetime.datetime(2020, 9, 30, 12, 39, 22, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497477416, 'comment_body': 'is that a sensible temperature range? This should be somewhere better documented. ', 'comment_created': datetime.datetime(2020, 9, 30, 12, 42, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497478112, 'comment_body': 'can you write `chianti_collisions`?', 'comment_created': datetime.datetime(2020, 9, 30, 12, 43, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497478567, 'comment_body': '`collision_list` or `column_list` - the reviewers were debating?', 'comment_created': datetime.datetime(2020, 9, 30, 12, 44, 12, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497479221, 'comment_body': 'what does -1 stand for - why are they -1. ', 'comment_created': datetime.datetime(2020, 9, 30, 12, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497479822, 'comment_body': 'we should think about changing them . ', 'comment_created': datetime.datetime(2020, 9, 30, 12, 45, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497480243, 'comment_body': 'only thing should be `enum`', 'comment_created': datetime.datetime(2020, 9, 30, 12, 46, 30, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497480736, 'comment_body': 'for loop - make an issue? ', 'comment_created': datetime.datetime(2020, 9, 30, 12, 47, 18, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497483237, 'comment_body': 'a comment why an `AttributeError` is fine would be nice. ', 'comment_created': datetime.datetime(2020, 9, 30, 12, 51, 1, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 497483663, 'comment_body': 'why a `return`', 'comment_created': datetime.datetime(2020, 9, 30, 12, 51, 38, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 507994135, 'comment_body': ""Didn't know about this, I'll take a look."", 'comment_created': datetime.datetime(2020, 10, 19, 19, 1, 59, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 541555695, 'comment_body': '`Si I` is (14, 0) so `ion_charge` is 0.\r\n\r\nThe `ion_charge` is later renamed to `ion_number` before output without any change. This happens also for GFALL and Chianti but seems a bit different for NIST (where `ion_number =  ion_charge +1`).\r\n\r\nI did not implemented any of this, it was there before I arrived. Summarizing:\r\n\r\n- All the readers have a column named `ion_charge` in their output DataFrame.\r\n- Then, the `ion_charge` is renamed to `ion_number` in the `output` module.', 'comment_created': datetime.datetime(2020, 12, 12, 11, 10, 58, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 541556285, 'comment_body': 'Carsus needs a lot of new tests.', 'comment_created': datetime.datetime(2020, 12, 12, 11, 14, 49, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 541556413, 'comment_body': 'To rename `index` in line `541`.', 'comment_created': datetime.datetime(2020, 12, 12, 11, 16, 9, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 541556787, 'comment_body': 'As I wrote in another comment, seems all readers were designed (not by me) to include the `ion_charge` column, and before exporting the HDF5 atomic data the column is renamed to `ion_number`, probably just to please TARDIS. \r\n\r\n', 'comment_created': datetime.datetime(2020, 12, 12, 11, 18, 35, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 541557735, 'comment_body': ""- Yes, please, we need `black`.\r\n- It's done because GFALL and Chianti readers returns `nm` in their DataFrames, it's just for consistency. Units are managed with the highest possible care and consistency, but there are still some things to fix."", 'comment_created': datetime.datetime(2020, 12, 12, 11, 25, 1, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 541558310, 'comment_body': ""I found selecting a subset of columns easier to debug. I don't know..."", 'comment_created': datetime.datetime(2020, 12, 12, 11, 28, 57, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 541560236, 'comment_body': ""As I said before, readers return values in `nm` and the `output` module in `AA`.\r\n\r\nSwitching back and forth seems complicated, but it's necessary for comparing against legacy code. Remember this part of the code does not have tests (should be an integration test?) so the only way to check we are not breaking anything is to make a small database (i.e. `H-Be`) and compare dataframe by dataframe."", 'comment_created': datetime.datetime(2020, 12, 12, 11, 42, 14, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 541561811, 'comment_body': 'No, in case of same priority `gfall` > `chianti` > `cmfgen` is assumed, I should put this in docs.', 'comment_created': datetime.datetime(2020, 12, 12, 11, 53, 17, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 541563559, 'comment_body': 'Probably is better to write something in Carsus docs and put the link in the docstring.', 'comment_created': datetime.datetime(2020, 12, 12, 12, 5, 19, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 541565565, 'comment_body': ""I'll open an issue."", 'comment_created': datetime.datetime(2020, 12, 12, 12, 19, 23, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 541565884, 'comment_body': 'Always has been\r\n\r\n![img](https://imgflip.com/s/meme/Always-Has-Been.png)', 'comment_created': datetime.datetime(2020, 12, 12, 12, 21, 25, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 541566991, 'comment_body': ""I think it's too sensitive to change this before merging. Unit conversions were made with a LOT of care, it can be improved for sure, in the future."", 'comment_created': datetime.datetime(2020, 12, 12, 12, 28, 32, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 541567041, 'comment_body': ""I don't know. It was used in legacy code."", 'comment_created': datetime.datetime(2020, 12, 12, 12, 28, 50, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 541567242, 'comment_body': 'Artificial levels, I think you wrote that.', 'comment_created': datetime.datetime(2020, 12, 12, 12, 30, 10, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 541567309, 'comment_body': ""```\r\n        # Reset indexes because `level_id` cannot be an index once we\r\n        # add artificial levels for fully ionized ions that don't have ids (-1)\r\n```"", 'comment_created': datetime.datetime(2020, 12, 12, 12, 30, 36, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 567948087, 'comment_body': 'Thanks for the detailed explanation. We should make sure that this is consistent throughout all of the code. @wkerzendorf, @afloers and myself like ion_charge better than ion_number (since it is easier to interpret). Can you make an issue that we want to change to ""ion_charge"" also in the rest of the code?\r\n', 'comment_created': datetime.datetime(2021, 2, 1, 16, 12, 56, tzinfo=datetime.timezone.utc), 'commenter': 'chvogl', 'type': 'User'}, {'comment_id': 567950771, 'comment_body': ""```suggestion\r\n            lvl['ion_charge'] =  ion_charge  # ion_charge is renamed to ion_number later in the code - we are trying to unify this\r\n```"", 'comment_created': datetime.datetime(2021, 2, 1, 16, 16, 5, tzinfo=datetime.timezone.utc), 'commenter': 'chvogl', 'type': 'User'}, {'comment_id': 567956648, 'comment_body': ""We should use @wkerzendorf's suggestion for the unit conversion."", 'comment_created': datetime.datetime(2021, 2, 1, 16, 23, 32, tzinfo=datetime.timezone.utc), 'commenter': 'chvogl', 'type': 'User'}, {'comment_id': 567963259, 'comment_body': 'Is this in the docs now? This is important information.', 'comment_created': datetime.datetime(2021, 2, 1, 16, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'chvogl', 'type': 'User'}, {'comment_id': 567965269, 'comment_body': ""Let's put it here and (later) in the docs."", 'comment_created': datetime.datetime(2021, 2, 1, 16, 34, 18, tzinfo=datetime.timezone.utc), 'commenter': 'chvogl', 'type': 'User'}, {'comment_id': 567973829, 'comment_body': 'We should simplify this. Just multiply by u.nm.to(u.AA) at the beginning to do the unit conversion. There is no need for a lambda function here.', 'comment_created': datetime.datetime(2021, 2, 1, 16, 45, 12, tzinfo=datetime.timezone.utc), 'commenter': 'chvogl', 'type': 'User'}, {'comment_id': 567976053, 'comment_body': 'I think this would be worth putting in the documentation. Maybe open an issue.', 'comment_created': datetime.datetime(2021, 2, 1, 16, 47, 57, tzinfo=datetime.timezone.utc), 'commenter': 'chvogl', 'type': 'User'}, {'comment_id': 567978127, 'comment_body': ""Add a comment here that artificial levels for fully ionized ions that don't have ids have level_id = -1."", 'comment_created': datetime.datetime(2021, 2, 1, 16, 50, 34, tzinfo=datetime.timezone.utc), 'commenter': 'chvogl', 'type': 'User'}, {'comment_id': 567978862, 'comment_body': 'I agree.', 'comment_created': datetime.datetime(2021, 2, 1, 16, 51, 33, tzinfo=datetime.timezone.utc), 'commenter': 'chvogl', 'type': 'User'}, {'comment_id': 568001559, 'comment_body': 'Documented in #206.', 'comment_created': datetime.datetime(2021, 2, 1, 17, 21, 29, tzinfo=datetime.timezone.utc), 'commenter': 'chvogl', 'type': 'User'}, {'comment_id': 568003414, 'comment_body': 'Documented at https://github.com/tardis-sn/carsus/issues/215. Before this I want to merge the tests for the `output` module in the upcoming PR.', 'comment_created': datetime.datetime(2021, 2, 1, 17, 24, 13, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 568006514, 'comment_body': ""No, I'll update the documentation in another PR"", 'comment_created': datetime.datetime(2021, 2, 1, 17, 28, 46, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 568012508, 'comment_body': 'added here https://github.com/tardis-sn/carsus/issues/207', 'comment_created': datetime.datetime(2021, 2, 1, 17, 37, 33, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 568020396, 'comment_body': 'The comment is already there, are you sure you fetched the changes from September?', 'comment_created': datetime.datetime(2021, 2, 1, 17, 49, 8, tzinfo=datetime.timezone.utc), 'commenter': 'epassaro', 'type': 'User'}, {'comment_id': 570619730, 'comment_body': 'sounds good!', 'comment_created': datetime.datetime(2021, 2, 4, 23, 39, 10, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}]","[{'commit_sha': 'bb1a9634c35e346326a6c706f8f8904d2ef7ca21', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70763f9ae186f19f1ca6e5d71544dab39883b152', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f2a3a09ed70f370b12a71b5342b49cb4366fdcb', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ab8c5de42c630d740eb267a01f1ca41ce5d3bf3', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0157e10b42ad05e21fa463f6cc95ce05e6d75ce5', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '823731264949a19dc7160dfc9df162ddc80952b6', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46f218a453fcb5ab400aa0bfe2a03f5bad41397d', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37c7a1cdd109eaa274d0c1f53c40df5291aff6c7', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1d0cd4df8f93cecf389def74451a4fedaa849ea', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8743ae242882dad2143cd1d2a26118978c2c9194', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07fd184567d3832d2f95b7e00b3b99ae493d93a6', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '786fbb1c3fa47d68c9724808602c8ab40e236ea1', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b73a98e65789601495956409f1b652158bbb5788', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f828e60ecd5923c199684b539d5824a59cf28c2f', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f55df92e3843835d8e75d3bc93f866100b2db069', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91f4b76e9050a39a0b42d596ca296d25e9c665e6', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a046ef5c9bafa43d873871855554703c0d1032e2', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba4baed62e7583f557db754c984b33db1914f5e0', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '574196084f43e817b26b79a41a14c3898bb55b44', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '612b2514bc4949bb7ddaee6a2f22d3b60d880ebd', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daa451708ac31bfa325207d27dea0ffe2daccab1', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b796288ed8592a3d79071427b14e47952f9b200', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54717ba64d93fd2afa4b1cca2e9cd3eda275a55a', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a20e7af15e8e57b53c209ff7c03ca53a8a561d76', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0b0733976cf4ca3435aa7a6e026e835e8bdc3c2', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '219fd13ebd6d11dde010eebaa8c0a0c49ab99d68', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e02320a0fbed10017717c7e1d32cb82ec223c44', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0906c463267b67d489746fbe5eeb5d8090c7b788', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d20a8d07fd46a270326031f524ebcd7ab1b5d55', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37442e98f42408c13e6e15dc5a822e9e0055f75d', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6d0d3bf6e315359aada2e52d5ee44311cfe3156', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1fff23b32293ed41a5db4fee60bbbfc59f8d78e', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a7a07f71680ae20a24a8ffcc94ed3813af86019', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f9218074ed1721c2707e274595f1ef4df46ffb6', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d77de6c909f859f82e6ed8ad5e20a863be01a32', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95d44d83e402779c43a6f43f62dc27aaaf282490', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5115dc021c4e256170e57676a352f7b5798ceb3', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '541a2324b3aba4b44a3002a0e4f4464a9a1bc5b9', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8df5a28c7f50257698dbe09770e1404a1836ff39', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65e18fa295d61b015f86ab1dda8d45bb3f6166ca', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cd6f507c1494da4c29351f55c86114250858ace', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67ac5e8d3857bbdeedad295b9bedf47992ec356f', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1119a04602455d86ca4118864cee15f7e8806fbc', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31c7e1c498953dbe0778635e53ec7a7d3913d68b', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38c44215982a1b51a7d795ac625a9ad2d931f251', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0897831bc2f0c765ed6eefdfd5cbbf27a29cd997', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49113b4257dea4397eb7772f8244dfe0a0c706ec', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a82e48a61828a87225ee9a69cb3f73797965785e', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85a1bf05c6c74626b87a6bc2e03a715e0a34c335', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cfcb41dfc4ea9867171bcf5572ffc153e65519c', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '637aaffea6684e72878a7366faff4951d1abc135', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '429027a69d27f48925f2634ba332772d0b0a91cf', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb58e29262f5ac055c661ef6b6712b166284a0bc', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb197ca3a5d811ed3ab2a40733dd5bce46e58b9c', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '219062719db60623dbf8bbba1b31c70ab190937b', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71a3369e2c9037ae70fc9edaadc3395936125636', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65edde047a34914ec31611e8fb2e0ad56ae8300a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e01873c430eda05df9cf164b355fea74204e8073', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8b0bc94d1f159e086e006642f1e2004dbca6151a', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75c0880d506fdcbefadd048dbf9ae7b9addb73d8', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b44d92d78c28f7be6691834cbc55735ba1ef9b5', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d50f664364e9f70a528d8f288deea4e7864e00c', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd408586abd12f80a3a10e230b0e79dc821ca9c72', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73b860ade69fad165438ce43eccc3fb84afc59a2', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8abac4df682ed5b72392da1499612cac75f12d7a', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3a9bb62fe44e8a6091f18d788679f2386ef7afa', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc7db8481605bfc59a2179fea9fb19f325c8c7c1', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8eb730a0b7d0714e9d747e096a721a0eeab62c51', 'committer_username': 'epassaro', 'committer_name': 'Ezequiel Pássaro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 11, 12, 19, 28, tzinfo=datetime.timezone.utc)}]",Ezequiel Pássaro,22769314,,User,,82,,39,24

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
53023332,carsus,tardis-sn/carsus,Python,43,21,11,19,747,48,15,1,"[{'id': 963290268, 'number': 310, 'closed': datetime.datetime(2022, 6, 30, 15, 15, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 9, 20, 6, 52, tzinfo=datetime.timezone.utc), 'time_taken': 1796907.0, 'time_delta': '20 days, 19:08:27', 'additions': 12, 'deletions': 16, 'state': 'closed'}, {'id': 937817089, 'number': 297, 'closed': datetime.datetime(2022, 5, 19, 18, 8, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 16, 18, 8, 32, tzinfo=datetime.timezone.utc), 'time_taken': 259206.0, 'time_delta': '3 days, 0:00:06', 'additions': 88, 'deletions': 53, 'state': 'closed'}, {'id': 932618399, 'number': 295, 'closed': datetime.datetime(2022, 5, 16, 18, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 10, 15, 59, 59, tzinfo=datetime.timezone.utc), 'time_taken': 526501.0, 'time_delta': '6 days, 2:15:01', 'additions': 139, 'deletions': 94, 'state': 'closed'}, {'id': 919851947, 'number': 292, 'closed': datetime.datetime(2022, 4, 28, 15, 21, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 26, 20, 33, 36, tzinfo=datetime.timezone.utc), 'time_taken': 154088.0, 'time_delta': '1 day, 18:48:08', 'additions': 5, 'deletions': 40, 'state': 'closed'}, {'id': 916952927, 'number': 291, 'closed': datetime.datetime(2022, 4, 22, 23, 12, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 22, 23, 9, 51, tzinfo=datetime.timezone.utc), 'time_taken': 172.0, 'time_delta': '0:02:52', 'additions': 28, 'deletions': 29, 'state': 'closed'}, {'id': 916866924, 'number': 289, 'closed': datetime.datetime(2022, 4, 28, 15, 21, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 22, 21, 58, tzinfo=datetime.timezone.utc), 'time_taken': 494636.0, 'time_delta': '5 days, 17:23:56', 'additions': 98, 'deletions': 137, 'state': 'closed'}, {'id': 916833863, 'number': 288, 'closed': datetime.datetime(2022, 4, 22, 21, 46, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 22, 21, 25, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1237.0, 'time_delta': '0:20:37', 'additions': 11, 'deletions': 6, 'state': 'closed'}, {'id': 916747506, 'number': 287, 'closed': datetime.datetime(2022, 4, 22, 21, 8, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 22, 19, 33, 47, tzinfo=datetime.timezone.utc), 'time_taken': 5711.0, 'time_delta': '1:35:11', 'additions': 11, 'deletions': 11, 'state': 'closed'}, {'id': 876663313, 'number': 278, 'closed': datetime.datetime(2022, 3, 14, 14, 13, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 10, 17, 31, 21, tzinfo=datetime.timezone.utc), 'time_taken': 333704.0, 'time_delta': '3 days, 20:41:44', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 875362033, 'number': 276, 'closed': datetime.datetime(2022, 3, 14, 15, 22, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 9, 14, 22, 48, tzinfo=datetime.timezone.utc), 'time_taken': 435590.0, 'time_delta': '5 days, 0:59:50', 'additions': 55, 'deletions': 28, 'state': 'closed'}, {'id': 775053436, 'number': 257, 'closed': datetime.datetime(2021, 11, 7, 21, 43, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 7, 21, 32, 50, tzinfo=datetime.timezone.utc), 'time_taken': 668.0, 'time_delta': '0:11:08', 'additions': 81, 'deletions': 21, 'state': 'closed'}, {'id': 774853298, 'number': 256, 'closed': datetime.datetime(2021, 11, 7, 2, 22, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 6, 20, 9, 40, tzinfo=datetime.timezone.utc), 'time_taken': 22382.0, 'time_delta': '6:13:02', 'additions': 109, 'deletions': 93, 'state': 'closed'}, {'id': 774641322, 'number': 255, 'closed': datetime.datetime(2021, 11, 6, 6, 13, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 5, 23, 32, 8, tzinfo=datetime.timezone.utc), 'time_taken': 24087.0, 'time_delta': '6:41:27', 'additions': 112, 'deletions': 137, 'state': 'closed'}, {'id': 753574182, 'number': 254, 'closed': datetime.datetime(2021, 10, 14, 15, 11, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 7, 22, 21, 7, tzinfo=datetime.timezone.utc), 'time_taken': 579000.0, 'time_delta': '6 days, 16:50:00', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 682163433, 'number': 253, 'closed': datetime.datetime(2021, 9, 23, 15, 11, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 1, 21, 0, 6, tzinfo=datetime.timezone.utc), 'time_taken': 7236700.0, 'time_delta': '83 days, 18:11:40', 'additions': 61, 'deletions': 65, 'state': 'closed'}, {'id': 677327132, 'number': 251, 'closed': datetime.datetime(2022, 1, 21, 16, 19, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 18, 5, 2, tzinfo=datetime.timezone.utc), 'time_taken': 18224068.0, 'time_delta': '210 days, 22:14:28', 'additions': 1242, 'deletions': 594, 'state': 'closed'}, {'id': 677306126, 'number': 250, 'closed': datetime.datetime(2021, 6, 24, 17, 36, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 17, 36, 15, tzinfo=datetime.timezone.utc), 'time_taken': 14.0, 'time_delta': '0:00:14', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 666347145, 'number': 246, 'closed': datetime.datetime(2021, 6, 18, 20, 23, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 9, 22, 11, 47, tzinfo=datetime.timezone.utc), 'time_taken': 771120.0, 'time_delta': '8 days, 22:12:00', 'additions': 11, 'deletions': 3, 'state': 'closed'}, {'id': 654349800, 'number': 244, 'closed': datetime.datetime(2021, 6, 18, 20, 23, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 27, 0, 18, 4, tzinfo=datetime.timezone.utc), 'time_taken': 1973107.0, 'time_delta': '22 days, 20:05:07', 'additions': 1049, 'deletions': 544, 'state': 'closed'}, {'id': 652650957, 'number': 243, 'closed': datetime.datetime(2021, 5, 25, 21, 25, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 25, 18, 0, 6, tzinfo=datetime.timezone.utc), 'time_taken': 12308.0, 'time_delta': '3:25:08', 'additions': 34, 'deletions': 31, 'state': 'closed'}, {'id': 651659075, 'number': 242, 'closed': datetime.datetime(2021, 6, 1, 21, 38, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 24, 21, 53, 57, tzinfo=datetime.timezone.utc), 'time_taken': 690255.0, 'time_delta': '7 days, 23:44:15', 'additions': 73, 'deletions': 0, 'state': 'closed'}, {'id': 651615012, 'number': 241, 'closed': datetime.datetime(2021, 6, 1, 21, 34, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 24, 20, 48, 11, tzinfo=datetime.timezone.utc), 'time_taken': 694002.0, 'time_delta': '8 days, 0:46:42', 'additions': 571, 'deletions': 1803, 'state': 'closed'}, {'id': 651581311, 'number': 239, 'closed': datetime.datetime(2021, 5, 25, 21, 26, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 24, 19, 51, 2, tzinfo=datetime.timezone.utc), 'time_taken': 92133.0, 'time_delta': '1 day, 1:35:33', 'additions': 10, 'deletions': 6, 'state': 'closed'}, {'id': 631884167, 'number': 238, 'closed': datetime.datetime(2021, 5, 24, 22, 4, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 6, 20, 42, 27, tzinfo=datetime.timezone.utc), 'time_taken': 1560152.0, 'time_delta': '18 days, 1:22:32', 'additions': 21, 'deletions': 2, 'state': 'closed'}, {'id': 620578141, 'number': 236, 'closed': datetime.datetime(2021, 7, 1, 19, 18, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 21, 21, 34, 41, tzinfo=datetime.timezone.utc), 'time_taken': 6126225.0, 'time_delta': '70 days, 21:43:45', 'additions': 1112, 'deletions': 129, 'state': 'closed'}, {'id': 616031149, 'number': 235, 'closed': datetime.datetime(2021, 4, 21, 21, 28, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 15, 13, 0, 37, tzinfo=datetime.timezone.utc), 'time_taken': 548881.0, 'time_delta': '6 days, 8:28:01', 'additions': 34, 'deletions': 53, 'state': 'closed'}, {'id': 615613485, 'number': 234, 'closed': datetime.datetime(2021, 4, 21, 20, 7, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 14, 23, 40, 27, tzinfo=datetime.timezone.utc), 'time_taken': 591997.0, 'time_delta': '6 days, 20:26:37', 'additions': 64, 'deletions': 145, 'state': 'closed'}, {'id': 615509923, 'number': 233, 'closed': datetime.datetime(2021, 5, 25, 21, 25, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 14, 19, 59, 2, tzinfo=datetime.timezone.utc), 'time_taken': 3547605.0, 'time_delta': '41 days, 1:26:45', 'additions': 0, 'deletions': 41, 'state': 'closed'}, {'id': 595148949, 'number': 221, 'closed': datetime.datetime(2021, 4, 14, 19, 53, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 18, 1, 24, 41, tzinfo=datetime.timezone.utc), 'time_taken': 2399348.0, 'time_delta': '27 days, 18:29:08', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 594518973, 'number': 220, 'closed': datetime.datetime(2021, 3, 17, 15, 44, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 17, 8, 44, 43, tzinfo=datetime.timezone.utc), 'time_taken': 25192.0, 'time_delta': '6:59:52', 'additions': 11, 'deletions': 8, 'state': 'closed'}, {'id': 476353903, 'number': 199, 'closed': datetime.datetime(2020, 8, 31, 18, 19, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 31, 14, 59, 53, tzinfo=datetime.timezone.utc), 'time_taken': 11950.0, 'time_delta': '3:19:10', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 474878640, 'number': 198, 'closed': datetime.datetime(2020, 8, 31, 8, 57, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 27, 18, 37, 4, tzinfo=datetime.timezone.utc), 'time_taken': 310837.0, 'time_delta': '3 days, 14:20:37', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 464259722, 'number': 196, 'closed': datetime.datetime(2020, 8, 27, 18, 9, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 6, 20, 56, 17, tzinfo=datetime.timezone.utc), 'time_taken': 1804422.0, 'time_delta': '20 days, 21:13:42', 'additions': 859, 'deletions': 26798, 'state': 'closed'}, {'id': 453911486, 'number': 191, 'closed': datetime.datetime(2021, 4, 14, 14, 27, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 20, 22, 50, 15, tzinfo=datetime.timezone.utc), 'time_taken': 23125038.0, 'time_delta': '267 days, 15:37:18', 'additions': 563, 'deletions': 363, 'state': 'closed'}, {'id': 451128675, 'number': 190, 'closed': datetime.datetime(2020, 8, 10, 15, 37, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 17, 13, 33, 57, tzinfo=datetime.timezone.utc), 'time_taken': 2080992.0, 'time_delta': '24 days, 2:03:12', 'additions': 341, 'deletions': 160, 'state': 'closed'}, {'id': 445719061, 'number': 188, 'closed': datetime.datetime(2020, 8, 3, 15, 46, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 7, 22, 14, 1, tzinfo=datetime.timezone.utc), 'time_taken': 2309569.0, 'time_delta': '26 days, 17:32:49', 'additions': 166, 'deletions': 159, 'state': 'closed'}, {'id': 445039385, 'number': 187, 'closed': datetime.datetime(2020, 7, 16, 21, 0, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 6, 22, 48, 50, tzinfo=datetime.timezone.utc), 'time_taken': 857529.0, 'time_delta': '9 days, 22:12:09', 'additions': 268, 'deletions': 81, 'state': 'closed'}, {'id': 443700569, 'number': 185, 'closed': datetime.datetime(2020, 7, 6, 18, 0, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 2, 19, 21, 31, tzinfo=datetime.timezone.utc), 'time_taken': 340745.0, 'time_delta': '3 days, 22:39:05', 'additions': 36, 'deletions': 6, 'state': 'closed'}, {'id': 442280905, 'number': 183, 'closed': datetime.datetime(2020, 7, 16, 16, 0, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 30, 20, 40, 19, tzinfo=datetime.timezone.utc), 'time_taken': 1365618.0, 'time_delta': '15 days, 19:20:18', 'additions': 340, 'deletions': 101, 'state': 'closed'}, {'id': 439571739, 'number': 181, 'closed': datetime.datetime(2020, 6, 29, 18, 45, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 24, 23, 31, 8, tzinfo=datetime.timezone.utc), 'time_taken': 414850.0, 'time_delta': '4 days, 19:14:10', 'additions': 0, 'deletions': 191, 'state': 'closed'}, {'id': 439320691, 'number': 178, 'closed': datetime.datetime(2020, 6, 29, 15, 50, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 24, 16, 35, 31, tzinfo=datetime.timezone.utc), 'time_taken': 429309.0, 'time_delta': '4 days, 23:15:09', 'additions': 93, 'deletions': 44, 'state': 'closed'}, {'id': 438202470, 'number': 175, 'closed': datetime.datetime(2020, 7, 16, 16, 4, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 22, 9, 36, tzinfo=datetime.timezone.utc), 'time_taken': 2051679.0, 'time_delta': '23 days, 17:54:39', 'additions': 845, 'deletions': 470, 'state': 'closed'}, {'id': 438130827, 'number': 173, 'closed': datetime.datetime(2020, 6, 26, 20, 8, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 19, 19, 19, tzinfo=datetime.timezone.utc), 'time_taken': 348538.0, 'time_delta': '4 days, 0:48:58', 'additions': 10, 'deletions': 0, 'state': 'closed'}, {'id': 427415101, 'number': 170, 'closed': datetime.datetime(2020, 6, 22, 15, 45, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 3, 19, 44, 10, tzinfo=datetime.timezone.utc), 'time_taken': 1627271.0, 'time_delta': '18 days, 20:01:11', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 427319911, 'number': 169, 'closed': datetime.datetime(2020, 6, 22, 22, 0, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 3, 16, 28, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1661487.0, 'time_delta': '19 days, 5:31:27', 'additions': 7, 'deletions': 0, 'state': 'closed'}, {'id': 405670744, 'number': 167, 'closed': datetime.datetime(2020, 4, 24, 15, 6, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 19, 14, 10, 29, tzinfo=datetime.timezone.utc), 'time_taken': 435367.0, 'time_delta': '5 days, 0:56:07', 'additions': 16845, 'deletions': 1312, 'state': 'closed'}, {'id': 379822453, 'number': 156, 'closed': datetime.datetime(2020, 4, 19, 9, 10, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 25, 21, 51, 25, tzinfo=datetime.timezone.utc), 'time_taken': 4619937.0, 'time_delta': '53 days, 11:18:57', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 379810777, 'number': 155, 'closed': datetime.datetime(2020, 2, 25, 21, 47, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 25, 21, 27, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1244.0, 'time_delta': '0:20:44', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 361124051, 'number': 153, 'closed': datetime.datetime(2020, 1, 14, 20, 1, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 9, 19, 38, 43, tzinfo=datetime.timezone.utc), 'time_taken': 433377.0, 'time_delta': '5 days, 0:22:57', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 335990156, 'number': 152, 'closed': datetime.datetime(2020, 6, 29, 20, 24, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 11, 3, 4, 3, 20, tzinfo=datetime.timezone.utc), 'time_taken': 20708453.0, 'time_delta': '239 days, 16:20:53', 'additions': 417, 'deletions': 116, 'state': 'closed'}, {'id': 333993440, 'number': 150, 'closed': datetime.datetime(2019, 11, 6, 15, 36, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 30, 2, 53, 51, tzinfo=datetime.timezone.utc), 'time_taken': 650534.0, 'time_delta': '7 days, 12:42:14', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 309097756, 'number': 149, 'closed': datetime.datetime(2019, 8, 21, 16, 56, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 20, 15, 4, 57, tzinfo=datetime.timezone.utc), 'time_taken': 93074.0, 'time_delta': '1 day, 1:51:14', 'additions': 53, 'deletions': 41, 'state': 'closed'}, {'id': 308380805, 'number': 148, 'closed': datetime.datetime(2019, 10, 23, 15, 6, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 18, 17, 34, 24, tzinfo=datetime.timezone.utc), 'time_taken': 5693544.0, 'time_delta': '65 days, 21:32:24', 'additions': 815, 'deletions': 698, 'state': 'closed'}, {'id': 306730627, 'number': 147, 'closed': datetime.datetime(2019, 8, 26, 20, 56, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 13, 3, 18, 20, tzinfo=datetime.timezone.utc), 'time_taken': 1186679.0, 'time_delta': '13 days, 17:37:59', 'additions': 754, 'deletions': 4301, 'state': 'closed'}, {'id': 301693922, 'number': 146, 'closed': datetime.datetime(2019, 8, 14, 19, 2, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 26, 21, 42, 4, tzinfo=datetime.timezone.utc), 'time_taken': 1632037.0, 'time_delta': '18 days, 21:20:37', 'additions': 301, 'deletions': 4, 'state': 'closed'}, {'id': 299659036, 'number': 145, 'closed': datetime.datetime(2019, 8, 12, 15, 3, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 21, 19, 23, 58, tzinfo=datetime.timezone.utc), 'time_taken': 1885181.0, 'time_delta': '21 days, 19:39:41', 'additions': 1908, 'deletions': 0, 'state': 'closed'}, {'id': 298194809, 'number': 144, 'closed': datetime.datetime(2019, 8, 16, 16, 47, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 16, 20, 16, 38, tzinfo=datetime.timezone.utc), 'time_taken': 2665839.0, 'time_delta': '30 days, 20:30:39', 'additions': 368, 'deletions': 103, 'state': 'closed'}, {'id': 298107127, 'number': 143, 'closed': datetime.datetime(2019, 7, 23, 17, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 16, 15, 54, 16, tzinfo=datetime.timezone.utc), 'time_taken': 612104.0, 'time_delta': '7 days, 2:01:44', 'additions': 3100, 'deletions': 2, 'state': 'closed'}, {'id': 297764336, 'number': 142, 'closed': datetime.datetime(2019, 7, 19, 15, 17, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 15, 19, 55, 23, tzinfo=datetime.timezone.utc), 'time_taken': 328900.0, 'time_delta': '3 days, 19:21:40', 'additions': 20, 'deletions': 17, 'state': 'closed'}, {'id': 297268275, 'number': 140, 'closed': datetime.datetime(2019, 7, 16, 20, 21, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 13, 1, 56, 57, tzinfo=datetime.timezone.utc), 'time_taken': 325479.0, 'time_delta': '3 days, 18:24:39', 'additions': 95, 'deletions': 0, 'state': 'closed'}, {'id': 296868190, 'number': 137, 'closed': datetime.datetime(2019, 7, 16, 18, 32, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 12, 0, 1, 25, tzinfo=datetime.timezone.utc), 'time_taken': 412255.0, 'time_delta': '4 days, 18:30:55', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 296453884, 'number': 135, 'closed': datetime.datetime(2019, 7, 12, 16, 5, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 11, 4, 6, 16, tzinfo=datetime.timezone.utc), 'time_taken': 129528.0, 'time_delta': '1 day, 11:58:48', 'additions': 206, 'deletions': 134, 'state': 'closed'}, {'id': 295956656, 'number': 133, 'closed': datetime.datetime(2019, 7, 10, 15, 33, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 9, 23, 40, 53, tzinfo=datetime.timezone.utc), 'time_taken': 57147.0, 'time_delta': '15:52:27', 'additions': 11, 'deletions': 0, 'state': 'closed'}, {'id': 295914323, 'number': 132, 'closed': datetime.datetime(2019, 7, 10, 15, 28, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 9, 20, 50, 11, tzinfo=datetime.timezone.utc), 'time_taken': 67103.0, 'time_delta': '18:38:23', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 295711244, 'number': 131, 'closed': datetime.datetime(2019, 7, 10, 15, 28, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 9, 11, 31, 13, tzinfo=datetime.timezone.utc), 'time_taken': 100611.0, 'time_delta': '1 day, 3:56:51', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 294000293, 'number': 125, 'closed': datetime.datetime(2019, 7, 9, 15, 36, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 3, 4, 45, 46, tzinfo=datetime.timezone.utc), 'time_taken': 557425.0, 'time_delta': '6 days, 10:50:25', 'additions': 4153, 'deletions': 2, 'state': 'closed'}, {'id': 289701296, 'number': 124, 'closed': datetime.datetime(2019, 7, 9, 15, 33, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 19, 13, 17, 59, tzinfo=datetime.timezone.utc), 'time_taken': 1736158.0, 'time_delta': '20 days, 2:15:58', 'additions': 584, 'deletions': 2, 'state': 'closed'}, {'id': 288917283, 'number': 123, 'closed': datetime.datetime(2019, 6, 18, 12, 2, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 17, 16, 14, 15, tzinfo=datetime.timezone.utc), 'time_taken': 71308.0, 'time_delta': '19:48:28', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 288913513, 'number': 122, 'closed': datetime.datetime(2019, 6, 17, 16, 8, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 17, 16, 3, 49, tzinfo=datetime.timezone.utc), 'time_taken': 276.0, 'time_delta': '0:04:36', 'additions': 118, 'deletions': 80, 'state': 'closed'}, {'id': 285954661, 'number': 121, 'closed': datetime.datetime(2019, 6, 27, 21, 12, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 6, 20, 19, 17, tzinfo=datetime.timezone.utc), 'time_taken': 1817610.0, 'time_delta': '21 days, 0:53:30', 'additions': 447, 'deletions': 81, 'state': 'closed'}, {'id': 281822869, 'number': 120, 'closed': datetime.datetime(2019, 6, 14, 15, 13, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 5, 23, 23, 56, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1869431.0, 'time_delta': '21 days, 15:17:11', 'additions': 118, 'deletions': 80, 'state': 'closed'}, {'id': 280133470, 'number': 119, 'closed': datetime.datetime(2019, 5, 24, 11, 57, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 5, 18, 23, 51, 59, tzinfo=datetime.timezone.utc), 'time_taken': 475520.0, 'time_delta': '5 days, 12:05:20', 'additions': 53, 'deletions': 13, 'state': 'closed'}, {'id': 279237496, 'number': 118, 'closed': datetime.datetime(2019, 5, 20, 22, 13, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 5, 15, 19, 44, 7, tzinfo=datetime.timezone.utc), 'time_taken': 440990.0, 'time_delta': '5 days, 2:29:50', 'additions': 98, 'deletions': 48, 'state': 'closed'}]"
