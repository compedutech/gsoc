pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
678079448,MBS-11391: Show changes made to external link when editing URL relationship,"# Problem

MBS-11391: Show changes made to external link when editing URL relationship

# Solution

Implemented a popover for URL editing, which contains two fields - raw URL and clean URL.

Links aren't added to list automatically, users will have to press enter or let the input box blurred.
",True,2151,https://api.github.com/repos/metabrainz/musicbrainz-server/pulls/2151,https://github.com/metabrainz/musicbrainz-server/pull/2151,closed,413,66,5,20,11,9,0,0,[],2021-06-25 17:39:46+00:00,2021-07-20 12:02:17+00:00,2139751.0,"24 days, 18:22:31","[{'comment_id': 664586410, 'comment_body': ""```suggestion\r\n              {addColonText(l('URL'))}\r\n```"", 'comment_created': datetime.datetime(2021, 7, 6, 14, 4, 35, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 664587117, 'comment_body': ""```suggestion\r\n              {addColonText(l('Cleaned up to'))}\r\n```"", 'comment_created': datetime.datetime(2021, 7, 6, 14, 5, 23, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 666209798, 'comment_body': 'Does it still “duplicate the first URL”?', 'comment_created': datetime.datetime(2021, 7, 8, 13, 48, 12, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 666223033, 'comment_body': 'I think so, please see the latest total diff. This comment is for the next action to edit an exising link to duplicate the deleted first URL.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 2, 53, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 666247784, 'comment_body': 'Oh ok, you restored it, thanks.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 29, 35, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 666423854, 'comment_body': 'Maybe we should hide this row if there\'s no URL entered or no clean URL?  It looks a bit strange as ""Cleaned up to: \\<nothing\\>"".', 'comment_created': datetime.datetime(2021, 7, 8, 18, 22, 17, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 667120464, 'comment_body': 'There\'s a slight performance issue with this implementation: editing the link here updates the state on the parent component on every keystroke, causing the entire list to render again even though nothing changes.  (If you have the React Developer Tools extension, you can see this by enabling the option ""Highlight updates when components render."")  To be fair, we a have a similar issue in the existing code when editing a link, but I think we can easily avoid it here.\r\n\r\nThe way to do that is probably just to add another `React.useState` call inside `URLInputPopover` to store the popover\'s URL, and then only call `props.onChange` in `onConfirm` (passing the new URL from our local state).  You can probably remove the whole `originalProps` thing too this way, unless I\'m missing something.', 'comment_created': datetime.datetime(2021, 7, 9, 17, 54, 18, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 667236664, 'comment_body': ""You're right, but the point here is to get instant error message while editing. The error is determined in ExternalLinkEditor and passed into ExternalLink, if we want to get error message directly in the popover, it would require a large refactoring."", 'comment_created': datetime.datetime(2021, 7, 9, 22, 19, 15, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 672792867, 'comment_body': '(This should have target=""_blank"" so people don\'t lose their editing progress by clicking on it.)\r\n```suggestion\r\n                <a className=""clean-url"" href={props.url} target=""_blank"">{props.url}</a>\r\n```', 'comment_created': datetime.datetime(2021, 7, 20, 4, 16, 10, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}]","[{'commit_sha': '2674330384f681884696b65e29d6e76c50c946ef', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcd1020323e83289c24560cf42f2d1353192c423', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cdd61af7afac9ea6c738e6df830676e2736c7a2', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04751ebe37fcf0f923f9f49349c75c3d25114bc9', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c1b84c5383a2443f989e773f842817bc9190536', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cdf93ecbbc630a488c7d07a7bdb6a79636d22b6', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e077088492b672088940d9348f88ed67690c5a24', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77e1a72ffa973770e79cf65c8c4bc06aa5940ddc', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65ccea99e3b379db90ded2db5b6b1688b08aff5f', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a983f67b0efa14be105142d46965151a85bc494f', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bcc4d0f19c35e36405a5db75d83cd3db8019965', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89284b78b0fb28bc454b41ffaff53a9e77eff157', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f14b1706ad8b63eb82d191e46c2fd865ee944d9', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8c937acb21ba7c40ad26e6c111e4081ad38945b', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eac6c53dc4ec5ebce312afa8c192f7309b7ac7a4', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c54e8ef4edf090ae072471a9f68373c181c0c7cf', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1601c072d77836c4db8b0a2d21bff58637e0c0b3', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25617f97f03d46262d511661929be1a44cca8731', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5940cd0cd2c92f89901c425763241f0e1539964c', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35b671b6177a3e5e73e2c95c3627728bf23b9214', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}]",Googleplex,17172063,i@gpx.moe,User,,43,,43,77
650974076,MBS-11680: Group editing URL relationships by external link,"# Problem

The current external links editor has the following drawbacks:

* It does not make obvious a URL can be pasted a second time to add another relationship type
* It is not easy to find if a URL has been pasted already (except when using the same relationship type)
* It requires double editing to change a URL having two relationships
* Error’s position is the same for both relationship type and URL, it isn’t always obvious which field must be edited to fix the error.

# Solution

MBS-11680: Group editing URL relationships by external link

Implement a new UI for external links editor, where links with the same URL are grouped together, relationship types are shown under the URL as a list, and URLs are numbered for reference in error messages.

## Details

* Additional relationship can be added in two different ways:
  * Either by pasting the same URL a second time (as before);
  * Or by clicking the 'Add another relationship' button.


* Additional input elements are shown only when needed:
  * 'Add another relationship' button only if permitted, (auto-selected relationship types currently don’t allow for a second relationship);
  * 'Remove relationship' button is displayed only if there are several relationships as at least one relationship is required per URL.

* Linked URL is highlighted when focused to ease keyboard navigation.

* Reference the position of the original URL through a notice when the pasted URL is a duplicate.  Users can then press enter or select a different type to confirm merging with the existing one.

* Improve layout to prevent relationship type description `?` button to hide other controls and to be unintentionally triggered.

* Improve workflow with links that have error by instantly appending new input boxes and not freezing them.

* Enable validating URLs in URL editing popover and display URL-related errors only (without re-rendering the whole list).

* Fix opening links in a new tab (to prevent editing data loss)

* Fix error target of restricted link types (to `RELATIONSHIP`)",True,2114,https://api.github.com/repos/metabrainz/musicbrainz-server/pulls/2114,https://github.com/metabrainz/musicbrainz-server/pull/2114,closed,1082,421,8,39,17,14,0,0,[],2021-05-24 05:07:08+00:00,2021-08-12 14:15:15+00:00,6944887.0,"80 days, 9:08:07","[{'comment_id': 638916669, 'comment_body': 'The indenting needs fixing here :) Also, we generally do `isEmpty(props) ? null : component` - both ways should work, but it seems more consistent to stick with that.', 'comment_created': datetime.datetime(2021, 5, 25, 15, 37, 8, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 638917581, 'comment_body': ""I'm not sure this is useful - it doesn't really say anything about the link, and people can see it's the first in the list or whatever :) If we have nothing good to show, do we need to show anything at all?"", 'comment_created': datetime.datetime(2021, 5, 25, 15, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 638927772, 'comment_body': ""This is generally good, but: \r\n![Screenshot from 2021-05-25 18-48-26](https://user-images.githubusercontent.com/1069224/119528432-d6fce800-bd89-11eb-8f9c-a237d036bc04.png)\r\nThis use case shows a situation where it feels off - it seems like the required field would be the (already filled in) type, but what it means is the actual URL. Can we add the error to the appropriate input (type if it fails a validation, text if it's an error unrelated to the type) instead, and have both options possible? :) "", 'comment_created': datetime.datetime(2021, 5, 25, 15, 49, 47, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 638982573, 'comment_body': 'In fact I was referring to the original code on line 431 for consistency, it is not my usual way, too. If we agree that this could be better we could change both lines. :)', 'comment_created': datetime.datetime(2021, 5, 25, 16, 48, 2, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 638983998, 'comment_body': ""Oh, I see. Unless @yvanzo or @mwiencek see a reason to have it like this, I'd do the usual. But wait until they confirm :) "", 'comment_created': datetime.datetime(2021, 5, 25, 16, 49, 58, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 638984217, 'comment_body': ""It is intended to show the index of a link in a list, since originally there're indentation in each table row, so to align with the fieldset above I kept this indentation, we can still discuss and optimize it."", 'comment_created': datetime.datetime(2021, 5, 25, 16, 50, 17, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 638985550, 'comment_body': ""Makes sense, I'll dig into the code later to see if we can realize it."", 'comment_created': datetime.datetime(2021, 5, 25, 16, 51, 58, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 638989668, 'comment_body': 'Yeah, I understand the reasoning, it just seems kinda... not useful to have ""1"", ""2"" etc :) But I also understand it might feel weird to just have nothing at all there as a label. Since the move is intended to eventually allow selecting more than one type here, showing the favicon or something to that effect is probably not ideal, so I\'m not sure what would be a good solution that still keeps a label. @mwiencek, @yvanzo: any ideas? ', 'comment_created': datetime.datetime(2021, 5, 25, 16, 57, 28, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 639246349, 'comment_body': 'I find it useful to see the total number of links in the list. Numbers also help with not getting lost in long lists of external links. And we don’t have anything better to show at the moment.', 'comment_created': datetime.datetime(2021, 5, 25, 22, 21, 10, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 639248368, 'comment_body': 'It used to be the usual. @mwiencek can better explain why it changed. That is related to Flow IIRC.', 'comment_created': datetime.datetime(2021, 5, 25, 22, 25, 47, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 639249704, 'comment_body': 'This would be nice to have but can probably be added later on.\r\nIt requires a lot of rework to make errors be more specific about which input(s) is (are) in cause.\r\nThis is probably worth a separate ticket.', 'comment_created': datetime.datetime(2021, 5, 25, 22, 28, 56, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 682503536, 'comment_body': 'I\'m still not a fan of the 1/2/3 labels, I still feel they don\'t give any benefit over having nothing at all (I don\'t generally have a reason to care about the number of links). I notice that the favicon is now displayed by the relationship type, but that\'s actually not that connected to the relationship, it\'s connected to the URL itself. What about showing the favicon instead of the 1/2/3 label, and just showing the type name under Type? It would look more like on the sidebar, and we can use the generic ""no favicon"" link for URLs that do not match any of our favicons :) Something like:\r\n\r\n![Screenshot from 2021-08-04 13-36-19](https://user-images.githubusercontent.com/1069224/128167162-e2e4b2cf-93ed-4829-9147-4dd03ee38449.png)\r\n\r\nNotice that also would show the favicon for Apple Music, which we have but were not showing at all right now :) ', 'comment_created': datetime.datetime(2021, 8, 4, 10, 47, 14, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 682536743, 'comment_body': '1. About external favicons:\r\n   1. Icons match either the external website (e.g. Spotify) or the relationship type (e.g. official homepage) - sometimes it is the same (e.g. Wikidata),\r\n   2. most of icons match external websites,\r\n   3. there is currently no icon for many websites (there is a generic icon though) and most of relationship types.\r\n\r\n   Thus icon should be displayed at the right place indeed which is most of the time ahead of the link rather than the relationship type.\r\n\r\n2. About icons vs numbers:\r\n   1. It can be used in error message as a reference to point to when grouping items together (e.g. to address the below issue <https://github.com/metabrainz/musicbrainz-server/pull/2114#issuecomment-892546511>),\r\n   2. it can be useful to navigate through very long lists of links (e.g. the Beatles have 56 links, test example taken from the forum),\r\n   3. it can help with distinguishing between similar links (e.g. MB artist matching 3 Discogs entries) if provided in addition to icon.\r\n\r\n   So numbers can have some benefit and can also be used along with icons which look much nicer indeed. But my main concern about numbers is: It might let editors think numbers are actual data (likewise track numbers) which is not the case. It would probably be less confusing to find another way to refer to other list items from error messages.\r\n\r\nP.S. The 1. is a just list a statements, while the 2. is more thinking out loud.', 'comment_created': datetime.datetime(2021, 8, 4, 11, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 684752670, 'comment_body': '<img width=""413"" alt=""screenshot"" src=""https://user-images.githubusercontent.com/17172063/128629006-959ff895-a973-4d25-bb0e-3d3bb029b60b.png"">\r\nHere\'s the new layout, put favicon before index numbers for better alignment (when there\'s no favicon).', 'comment_created': datetime.datetime(2021, 8, 8, 10, 32, 44, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}]","[{'commit_sha': '7604e8253f9350b29a9cc505852b9b00da83c69d', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bae30e3212e9c663da400d9540a2c7bea67cd9e', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fdd90e988ce11591017a965d510e518d9e1dbb9', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b74fcc96955d4fbdea7ba69b23ae8af95ba4e10a', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8f853507e397eee89aa4f1b2b05f0e7d6eefcac', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '895801415253eebb55a72e6f0d046495c5a5bb0d', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51aa7c1bee2fc32f333aee16354e798de27827e2', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55574c282bf07f72c4ec1084e9978c302a748b4b', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '688384dfbc3f4ff52c81d5a705632302e8e2037d', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e41348928608b683309c77c62dad9288a0620aa', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba4508151bf6913b80f79daa66a7a71b42e15690', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '415367c89d838cdde933775a564d70261f9021d3', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '101c57f3cd334a8dc0e624aac07bdd054892a544', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99b3431ed1a75e0ba07d35abb57bd749f429c5ef', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc533d08cba5880d26ee9f27742e4daf1302efe5', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fac8676f6d6267aadf39c5a8ae3f3bae8ae32b28', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03e22f1822a3a80d111967108fcb955921882db0', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ea6353ae4bdf9b54832ba57b45e25a6db01cc24', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '347f5419db6ea25acb6b86ee30fbca607dacc392', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3666bd6133cd41b6023dc24dc0c1d91a4b099005', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f98920a60e783577b23df722dcbe70667b18e660', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd76a57d112083676558343afeb56db4dfc108a3d', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a3ad3219b0e020e76059236d2f82ed75c404be0', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fccf4fa2911a700993cf115a9277190222acf6ea', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07b4cd7ae80e924dda89a0707dce38969bee7188', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce8e74dee8d0e4a76d647eac4cbe6b2fc5dc3590', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd49e7f4c054da29428e0fbba5fa8f9fa9b526cf4', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d5117eedfcc12d9de7114757d9f1a4259e1013c', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4cc129334b36d00139c89b72ce36594ab562d6b', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1464ab0bb2651fcff06ad36e77c28b79b5fa3a7', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05a58f66469fbae4ed48408d9e3d4d6593c2ca51', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91fbfed72cd9500463af2c9a19dbd62fc20253b5', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64e83eb45f088a5265be8e730185f7d98a055b60', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a641f4e355133fd94ef089ca916d3a0252c0868b', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '486f7178819c2d7f966499505e6795d1113a3062', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb4465c7fe7223bcd7990089e7ead0e0ce77b972', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0814b0d2daa9ddbdfd116dbd88070186379f5623', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e7977ad59dff7a13df6fdbadd9fe9d01302cafc', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '739ef94537a538a8eddb266fc648fc9cb974e59d', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}]",Googleplex,17172063,i@gpx.moe,User,,43,,43,77
662500206,MBS-11698: More specific target of external link error messages,"# Problem

MBS-11698: More specific target of external link error messages


# Solution

Add an extra property `target` to the validation result, possible values are none, url, relationship and entity. The default error message ""This URL is not allowed for the selected link type, or is incorrectly formatted."" is splitted according to error target.

I noticed that we're only performing a rough check on the validity of URL, and since ""This URL is incorrectly formatted."" states a quite serious issue and would confuse users, we should fallback to ""This URL is not allowed for the selected link type."" if the URL passed the check or didn't go through any check. But meanwhile, as said by CatQuest in IRC, this message may be annoying sometimes because there's likely no valid relationship type for this combination of URL and entity, so it's a waste of time trying other options.

",True,2128,https://api.github.com/repos/metabrainz/musicbrainz-server/pulls/2128,https://github.com/metabrainz/musicbrainz-server/pull/2128,closed,1091,318,2,5,4,12,0,0,[],2021-06-05 16:13:43+00:00,2021-06-22 07:54:56+00:00,1438873.0,"16 days, 15:41:13","[{'comment_id': 646020313, 'comment_body': ""I'm a bit confused about why we would print this :) Is it just temporary until this is put on top of code that actually has separate error fields for each? :) "", 'comment_created': datetime.datetime(2021, 6, 5, 18, 17, 26, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 646020719, 'comment_body': ""There's a ton of `target: ERROR_TARGETS.RELATIONSHIP` additions - would it maybe make sense to have this one as default, and only add a target if it should be a different one?"", 'comment_created': datetime.datetime(2021, 6, 5, 18, 21, 32, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 646020960, 'comment_body': 'As you mentioned in your PR, ""incorrectly formatted"" can be confusing since it kinda sounds like the user can fix it by editing the formatting, which often won\'t be the case (otherwise, we would do it ourselves with a cleanup). Not that I\'m sure what would be better, though. @mwiencek?', 'comment_created': datetime.datetime(2021, 6, 5, 18, 24, 10, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 646061145, 'comment_body': 'Yes, it is just a temporary solution.', 'comment_created': datetime.datetime(2021, 6, 6, 2, 16, 52, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 646061259, 'comment_body': 'Indeed. But @yvanzo said:\r\n> The default should probably be no value though as it might affect either URL or relationship or both.\r\n\r\n', 'comment_created': datetime.datetime(2021, 6, 6, 2, 18, 55, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 647276849, 'comment_body': 'It would better fit as a label by displaying it in front of the error message with a colon `:` as separator.', 'comment_created': datetime.datetime(2021, 6, 8, 9, 28, 6, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 647277637, 'comment_body': 'This is where the default case I mentioned should be used for ambiguous situations.', 'comment_created': datetime.datetime(2021, 6, 8, 9, 29, 7, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 647279354, 'comment_body': 'Having a catch-all for default value is unfortunately more verbose but safer than having the most common value.', 'comment_created': datetime.datetime(2021, 6, 8, 9, 31, 19, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 647954893, 'comment_body': ""Maybe something saying that the domain is valid, but the page it points to isn't?  What other situations do we show this in?"", 'comment_created': datetime.datetime(2021, 6, 9, 4, 23, 56, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 647957596, 'comment_body': ""I assume we'll want to merge this so you can base other PRs (adding the separate error fields) on top of it, since basing PRs on top of other PRs is not a good development or code review experience. :)  If so, you'll have to remove this temporary display so that the UI doesn't appear broken or incoherent after we merge it."", 'comment_created': datetime.datetime(2021, 6, 9, 4, 32, 52, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 655923141, 'comment_body': 'This temporary display has been replaced with a div class in commit https://github.com/metabrainz/musicbrainz-server/pull/2128/commits/ad4fcbeb73f1e8bc9be965f222beed21b85761da.', 'comment_created': datetime.datetime(2021, 6, 22, 6, 47, 49, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 655936259, 'comment_body': 'This message has been changed back to the old one as for now.', 'comment_created': datetime.datetime(2021, 6, 22, 7, 9, 12, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}]","[{'commit_sha': '372daa0bac5e2bc030f9f891cf0aecc27fbfa91d', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d8acfd623d3f6952fa6ff3ce22f0dde15cb67d8', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df5ec4a7bf5d870bd3ba5c6d0e7dbae5667895be', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9135638547717b7cd199d4f9dd23a7b60c235aea', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53ade6681266cf21c39d6886e8b88feb39c9307c', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}]",Googleplex,17172063,i@gpx.moe,User,,43,,43,77
650974076,MBS-11680: Group editing URL relationships by external link,"# Problem

The current external links editor has the following drawbacks:

* It does not make obvious a URL can be pasted a second time to add another relationship type
* It is not easy to find if a URL has been pasted already (except when using the same relationship type)
* It requires double editing to change a URL having two relationships
* Error’s position is the same for both relationship type and URL, it isn’t always obvious which field must be edited to fix the error.

# Solution

MBS-11680: Group editing URL relationships by external link

Implement a new UI for external links editor, where links with the same URL are grouped together, relationship types are shown under the URL as a list, and URLs are numbered for reference in error messages.

## Details

* Additional relationship can be added in two different ways:
  * Either by pasting the same URL a second time (as before);
  * Or by clicking the 'Add another relationship' button.


* Additional input elements are shown only when needed:
  * 'Add another relationship' button only if permitted, (auto-selected relationship types currently don’t allow for a second relationship);
  * 'Remove relationship' button is displayed only if there are several relationships as at least one relationship is required per URL.

* Linked URL is highlighted when focused to ease keyboard navigation.

* Reference the position of the original URL through a notice when the pasted URL is a duplicate.  Users can then press enter or select a different type to confirm merging with the existing one.

* Improve layout to prevent relationship type description `?` button to hide other controls and to be unintentionally triggered.

* Improve workflow with links that have error by instantly appending new input boxes and not freezing them.

* Enable validating URLs in URL editing popover and display URL-related errors only (without re-rendering the whole list).

* Fix opening links in a new tab (to prevent editing data loss)

* Fix error target of restricted link types (to `RELATIONSHIP`)",True,2114,https://api.github.com/repos/metabrainz/musicbrainz-server/pulls/2114,https://github.com/metabrainz/musicbrainz-server/pull/2114,closed,1082,421,8,39,17,14,0,0,[],2021-05-24 05:07:08+00:00,2021-08-12 14:15:15+00:00,6944887.0,"80 days, 9:08:07","[{'comment_id': 638916669, 'comment_body': 'The indenting needs fixing here :) Also, we generally do `isEmpty(props) ? null : component` - both ways should work, but it seems more consistent to stick with that.', 'comment_created': datetime.datetime(2021, 5, 25, 15, 37, 8, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 638917581, 'comment_body': ""I'm not sure this is useful - it doesn't really say anything about the link, and people can see it's the first in the list or whatever :) If we have nothing good to show, do we need to show anything at all?"", 'comment_created': datetime.datetime(2021, 5, 25, 15, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 638927772, 'comment_body': ""This is generally good, but: \r\n![Screenshot from 2021-05-25 18-48-26](https://user-images.githubusercontent.com/1069224/119528432-d6fce800-bd89-11eb-8f9c-a237d036bc04.png)\r\nThis use case shows a situation where it feels off - it seems like the required field would be the (already filled in) type, but what it means is the actual URL. Can we add the error to the appropriate input (type if it fails a validation, text if it's an error unrelated to the type) instead, and have both options possible? :) "", 'comment_created': datetime.datetime(2021, 5, 25, 15, 49, 47, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 638982573, 'comment_body': 'In fact I was referring to the original code on line 431 for consistency, it is not my usual way, too. If we agree that this could be better we could change both lines. :)', 'comment_created': datetime.datetime(2021, 5, 25, 16, 48, 2, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 638983998, 'comment_body': ""Oh, I see. Unless @yvanzo or @mwiencek see a reason to have it like this, I'd do the usual. But wait until they confirm :) "", 'comment_created': datetime.datetime(2021, 5, 25, 16, 49, 58, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 638984217, 'comment_body': ""It is intended to show the index of a link in a list, since originally there're indentation in each table row, so to align with the fieldset above I kept this indentation, we can still discuss and optimize it."", 'comment_created': datetime.datetime(2021, 5, 25, 16, 50, 17, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 638985550, 'comment_body': ""Makes sense, I'll dig into the code later to see if we can realize it."", 'comment_created': datetime.datetime(2021, 5, 25, 16, 51, 58, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 638989668, 'comment_body': 'Yeah, I understand the reasoning, it just seems kinda... not useful to have ""1"", ""2"" etc :) But I also understand it might feel weird to just have nothing at all there as a label. Since the move is intended to eventually allow selecting more than one type here, showing the favicon or something to that effect is probably not ideal, so I\'m not sure what would be a good solution that still keeps a label. @mwiencek, @yvanzo: any ideas? ', 'comment_created': datetime.datetime(2021, 5, 25, 16, 57, 28, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 639246349, 'comment_body': 'I find it useful to see the total number of links in the list. Numbers also help with not getting lost in long lists of external links. And we don’t have anything better to show at the moment.', 'comment_created': datetime.datetime(2021, 5, 25, 22, 21, 10, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 639248368, 'comment_body': 'It used to be the usual. @mwiencek can better explain why it changed. That is related to Flow IIRC.', 'comment_created': datetime.datetime(2021, 5, 25, 22, 25, 47, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 639249704, 'comment_body': 'This would be nice to have but can probably be added later on.\r\nIt requires a lot of rework to make errors be more specific about which input(s) is (are) in cause.\r\nThis is probably worth a separate ticket.', 'comment_created': datetime.datetime(2021, 5, 25, 22, 28, 56, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 682503536, 'comment_body': 'I\'m still not a fan of the 1/2/3 labels, I still feel they don\'t give any benefit over having nothing at all (I don\'t generally have a reason to care about the number of links). I notice that the favicon is now displayed by the relationship type, but that\'s actually not that connected to the relationship, it\'s connected to the URL itself. What about showing the favicon instead of the 1/2/3 label, and just showing the type name under Type? It would look more like on the sidebar, and we can use the generic ""no favicon"" link for URLs that do not match any of our favicons :) Something like:\r\n\r\n![Screenshot from 2021-08-04 13-36-19](https://user-images.githubusercontent.com/1069224/128167162-e2e4b2cf-93ed-4829-9147-4dd03ee38449.png)\r\n\r\nNotice that also would show the favicon for Apple Music, which we have but were not showing at all right now :) ', 'comment_created': datetime.datetime(2021, 8, 4, 10, 47, 14, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 682536743, 'comment_body': '1. About external favicons:\r\n   1. Icons match either the external website (e.g. Spotify) or the relationship type (e.g. official homepage) - sometimes it is the same (e.g. Wikidata),\r\n   2. most of icons match external websites,\r\n   3. there is currently no icon for many websites (there is a generic icon though) and most of relationship types.\r\n\r\n   Thus icon should be displayed at the right place indeed which is most of the time ahead of the link rather than the relationship type.\r\n\r\n2. About icons vs numbers:\r\n   1. It can be used in error message as a reference to point to when grouping items together (e.g. to address the below issue <https://github.com/metabrainz/musicbrainz-server/pull/2114#issuecomment-892546511>),\r\n   2. it can be useful to navigate through very long lists of links (e.g. the Beatles have 56 links, test example taken from the forum),\r\n   3. it can help with distinguishing between similar links (e.g. MB artist matching 3 Discogs entries) if provided in addition to icon.\r\n\r\n   So numbers can have some benefit and can also be used along with icons which look much nicer indeed. But my main concern about numbers is: It might let editors think numbers are actual data (likewise track numbers) which is not the case. It would probably be less confusing to find another way to refer to other list items from error messages.\r\n\r\nP.S. The 1. is a just list a statements, while the 2. is more thinking out loud.', 'comment_created': datetime.datetime(2021, 8, 4, 11, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 684752670, 'comment_body': '<img width=""413"" alt=""screenshot"" src=""https://user-images.githubusercontent.com/17172063/128629006-959ff895-a973-4d25-bb0e-3d3bb029b60b.png"">\r\nHere\'s the new layout, put favicon before index numbers for better alignment (when there\'s no favicon).', 'comment_created': datetime.datetime(2021, 8, 8, 10, 32, 44, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}]","[{'commit_sha': '7604e8253f9350b29a9cc505852b9b00da83c69d', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bae30e3212e9c663da400d9540a2c7bea67cd9e', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fdd90e988ce11591017a965d510e518d9e1dbb9', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b74fcc96955d4fbdea7ba69b23ae8af95ba4e10a', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8f853507e397eee89aa4f1b2b05f0e7d6eefcac', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '895801415253eebb55a72e6f0d046495c5a5bb0d', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51aa7c1bee2fc32f333aee16354e798de27827e2', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55574c282bf07f72c4ec1084e9978c302a748b4b', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '688384dfbc3f4ff52c81d5a705632302e8e2037d', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e41348928608b683309c77c62dad9288a0620aa', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba4508151bf6913b80f79daa66a7a71b42e15690', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '415367c89d838cdde933775a564d70261f9021d3', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '101c57f3cd334a8dc0e624aac07bdd054892a544', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99b3431ed1a75e0ba07d35abb57bd749f429c5ef', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc533d08cba5880d26ee9f27742e4daf1302efe5', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fac8676f6d6267aadf39c5a8ae3f3bae8ae32b28', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03e22f1822a3a80d111967108fcb955921882db0', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ea6353ae4bdf9b54832ba57b45e25a6db01cc24', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '347f5419db6ea25acb6b86ee30fbca607dacc392', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3666bd6133cd41b6023dc24dc0c1d91a4b099005', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f98920a60e783577b23df722dcbe70667b18e660', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd76a57d112083676558343afeb56db4dfc108a3d', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a3ad3219b0e020e76059236d2f82ed75c404be0', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fccf4fa2911a700993cf115a9277190222acf6ea', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07b4cd7ae80e924dda89a0707dce38969bee7188', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce8e74dee8d0e4a76d647eac4cbe6b2fc5dc3590', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd49e7f4c054da29428e0fbba5fa8f9fa9b526cf4', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d5117eedfcc12d9de7114757d9f1a4259e1013c', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4cc129334b36d00139c89b72ce36594ab562d6b', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1464ab0bb2651fcff06ad36e77c28b79b5fa3a7', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05a58f66469fbae4ed48408d9e3d4d6593c2ca51', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91fbfed72cd9500463af2c9a19dbd62fc20253b5', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64e83eb45f088a5265be8e730185f7d98a055b60', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a641f4e355133fd94ef089ca916d3a0252c0868b', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '486f7178819c2d7f966499505e6795d1113a3062', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb4465c7fe7223bcd7990089e7ead0e0ce77b972', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0814b0d2daa9ddbdfd116dbd88070186379f5623', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e7977ad59dff7a13df6fdbadd9fe9d01302cafc', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '739ef94537a538a8eddb266fc648fc9cb974e59d', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}]",Googleplex,17172063,i@gpx.moe,User,,43,,43,77
713980058,MBS-3774: Add URL with begin and end dates,"### Implement MBS-3774

Display date period next to relationship name, add a popover for setting begin and end dates of URL, enabling date period editing for entity edit pages other than URL.

<img width=""803"" alt=""Screenshot"" src=""https://user-images.githubusercontent.com/17172063/129680951-5145badc-6c3a-4a09-a86d-0c90150fd3e1.png"">
",True,2219,https://api.github.com/repos/metabrainz/musicbrainz-server/pulls/2219,https://github.com/metabrainz/musicbrainz-server/pull/2219,closed,464,39,8,5,2,9,1,0,[{'name': 'New feature'}],2021-08-17 07:17:17+00:00,2021-08-21 13:36:34+00:00,368357.0,"4 days, 6:19:17","[{'comment_id': 692211303, 'comment_body': ""Usually Flow requires an annotated return type for exported functions (not sure why it doesn't complain here -- maybe it can infer void ones).  But better to be explicit anyway.\r\n```suggestion\r\nexport function copyPartialDateField(\r\n  sourceField: PartialDateFieldT,\r\n  targetField: WritablePartialDateFieldT,\r\n): void {\r\n```"", 'comment_created': datetime.datetime(2021, 8, 19, 15, 14, 52, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 692211551, 'comment_body': '```suggestion\r\n): void {\r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 15, 15, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 692219705, 'comment_body': ""```suggestion\r\nimport ExternalLinkAttributeDialog\r\n  from './components/ExternalLinkAttributeDialog';\r\n```"", 'comment_created': datetime.datetime(2021, 8, 19, 15, 21, 9, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 692223646, 'comment_body': 'I would store props.relationship in state and move these functions outside the component so each render can reuse them.', 'comment_created': datetime.datetime(2021, 8, 19, 15, 24, 1, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 692224739, 'comment_body': ""can remove this once the relationship is stored in state, since you can access it from 'reset' that way\r\n```suggestion\r\n```"", 'comment_created': datetime.datetime(2021, 8, 19, 15, 24, 49, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 692225575, 'comment_body': ""```suggestion\r\n  | {\r\n      +action: DateRangeFieldsetActionT,\r\n      +type: 'update-date-period',\r\n    }\r\n  | {+type: 'reset'}\r\n  | {+type: 'show-all-pending-errors'};\r\n```"", 'comment_created': datetime.datetime(2021, 8, 19, 15, 25, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 692226256, 'comment_body': '(this is auto-imported by our webpack ProvidePlugin config)\r\n```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 15, 25, 57, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 692228131, 'comment_body': ""you'll have to import bracketedText, but\r\n```suggestion\r\n                  {' '}\r\n                  {bracketedText(formatDatePeriod(link))}\r\n```"", 'comment_created': datetime.datetime(2021, 8, 19, 15, 27, 16, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 692287840, 'comment_body': 'Break http://localhost:5000/artist/b7ffd2af-418f-4be2-bdd1-22f8b48613da/edit (using sample data) with\r\n```\r\nUncaught ReferenceError: bracketedText is not defined\r\nExternalLinkRelationship externalLinks.js:781\r\n[...]\r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 16, 20, 27, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}]","[{'commit_sha': '2e1744b08922a46974c474deb0dc251c8d1b845b', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22afae52eaed94f6d67b973812826cccbca42c11', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d212307e2a13e188ddc0e2b727ac53c7d31202f', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62266c981d4c489f1f55f2b500b1489450a4bef8', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7d6d5de3b273bdf7114cd47d709816e03eef681', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}]",Googleplex,17172063,i@gpx.moe,User,,43,,43,77
696347839,"MBS-9902, MBS-11912, MBS-11913: Support auto-select & validation of multiple relationships for external links","# Problem
MBS-9902: Support auto-select/cleanup/validation of more than one relationship type for external links

# Solution
- Change `cleanup.type` to `cleanup.restrict: []`, which may contain items like `{release: '9896ecd0-6d29-482d-a21e-bd5d1b5e3425'}` or `{release: ['9896ecd0-6d29-482d-a21e-bd5d1b5e3425', '98e08c20-8402-4163-8970-53504bb6a1e4']}`, the former indicates a single type, the latter indicates a type combination
- Allow a custom `select` function for custom auto-selection logic, returns a single type, a type combination or `false` if can't determine
- Eliminate `validationRules` by implementing a wrapped `Checker` class
- Add a new `getPossibleTypes` function for restricting type options
- Update `handleUrlChange` in `externalLinks.js` to support auto-selecting multiple types, implemented Jamendo auto-selection (MBS-11913) as an example
- Add `checkRelationship` and `checkRelationships` functions for validating single type and type combinations respectively
- Update the mechanism of `urlMatchesType` to adapt to new layout and allow appending relationships after auto-selection, implemented Mainly Norfolk works lyrics support (MBS-11912) as an example

See commit messages for further details.",True,2184,https://api.github.com/repos/metabrainz/musicbrainz-server/pulls/2184,https://github.com/metabrainz/musicbrainz-server/pull/2184,closed,932,450,9,6,13,62,0,0,[],2021-07-24 12:57:52+00:00,2021-08-27 08:35:44+00:00,2921872.0,"33 days, 19:37:52","[{'comment_id': 678100582, 'comment_body': ""I'd suggest to just use `CoreEntityTypeT`. We don't currently have url-url relationships, but we could choose to have them, and we are hoping to add genre-url relationships eventually, so it makes sense to not disallow those either IMO, and it simplifies this."", 'comment_created': datetime.datetime(2021, 7, 28, 8, 44, 32, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 685895522, 'comment_body': 'Are these really needed and why?', 'comment_created': datetime.datetime(2021, 8, 10, 10, 31, 12, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 685911150, 'comment_body': 'Please add a description for `select` in the above comment block, and update the one for `type`too.', 'comment_created': datetime.datetime(2021, 8, 10, 10, 56, 1, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 685917667, 'comment_body': 'Now that there is another entry about relationship types (`select`), this entry needs a more descriptive name than `type` (was a verb too) or `types`, maybe `restrict` or something? Or rename `select` too if needed.', 'comment_created': datetime.datetime(2021, 8, 10, 11, 7, 14, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 686018373, 'comment_body': ""Just a note: Neither the returned `null` (since eslint) nor the `''` replacement makes sense to me. It should probably return the untouched `url` instead. I will investigate this potential bug and push a fix if needed."", 'comment_created': datetime.datetime(2021, 8, 10, 13, 28, 6, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 686021801, 'comment_body': 'Coding style only: All other functions use `if(m) {` instead and `url` is already returned at the end of the function, so it seems worth following the same code organization here.', 'comment_created': datetime.datetime(2021, 8, 10, 13, 31, 34, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 686023255, 'comment_body': 'It would be nice to have some tests for this new feature.', 'comment_created': datetime.datetime(2021, 8, 10, 13, 33, 17, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 686042121, 'comment_body': 'Is that field still needed for `mainlynorfolk` now that it has a `select` function?', 'comment_created': datetime.datetime(2021, 8, 10, 13, 53, 48, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 686044742, 'comment_body': 'How does this work? `LINK_TYPES.lyrics.release` is available from neither `types` nor `select`.', 'comment_created': datetime.datetime(2021, 8, 10, 13, 56, 28, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 686056503, 'comment_body': 'These types are correctly auto-selected, but auto-select is supposed to be achieved using `select` field.', 'comment_created': datetime.datetime(2021, 8, 10, 14, 9, 5, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 686075785, 'comment_body': ""It's for the type annotation on https://github.com/metabrainz/musicbrainz-server/pull/2184/files#diff-a808bbcd17cb3e956e9ac0fce554d75f6e9db02e020bc03ca543c198ac8f8e06R4752, is there a better approach?\r\nReact is also for the type annotation on line 378 (`React.Node`)"", 'comment_created': datetime.datetime(2021, 8, 10, 14, 29, 17, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 686081867, 'comment_body': 'Do you mean limiting possible type options?', 'comment_created': datetime.datetime(2021, 8, 10, 14, 35, 52, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 686083748, 'comment_body': 'Do you mean that `types` should only be used to limit type options, and `select` function takes full charge of auto-selection?', 'comment_created': datetime.datetime(2021, 8, 10, 14, 37, 55, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 686084471, 'comment_body': 'We need it so that these 2 options are shown in the type selector.', 'comment_created': datetime.datetime(2021, 8, 10, 14, 38, 40, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 686089651, 'comment_body': 'Yes', 'comment_created': datetime.datetime(2021, 8, 10, 14, 44, 24, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 686093089, 'comment_body': 'Is a type selector needed here? I understood that all Mainly Norfolk song pages have lyrics. Am I missing something?\r\n\r\nOr do you mean `types` values will always be redundant with `select`results?', 'comment_created': datetime.datetime(2021, 8, 10, 14, 48, 2, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 686097566, 'comment_body': 'I mean that restricting options up to two possible relationship types is not the same as auto-selecting two relationship types.', 'comment_created': datetime.datetime(2021, 8, 10, 14, 52, 43, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 686099109, 'comment_body': ""It's related to the UI, since `types` controls what options are shown in the select dropdown, otherwise the type select will show nothing after auto-selection. And yes, `types` values will always be redundant with `select` results."", 'comment_created': datetime.datetime(2021, 8, 10, 14, 54, 28, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 686103146, 'comment_body': 'I didn’t notice this piece of UI code at the bottom of this file implementing mostly logic otherwise. It should probably be split later on. Definitely not an issue of this PR.\r\n\r\n@mwiencek: Would there be a way not to import these just for Flow definitions?', 'comment_created': datetime.datetime(2021, 8, 10, 14, 58, 50, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 686176784, 'comment_body': 'Flow provides global references to the React types if you replace `.` with `$`, so `React$Node` is usable without importing anything.', 'comment_created': datetime.datetime(2021, 8, 10, 17, 25, 18, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 692310189, 'comment_body': 'Your commit https://github.com/metabrainz/musicbrainz-server/pull/2184/commits/4fed82e7fe908cf87902361c1ed05543004f4d6f removes auto-selecting “other databases” too. From comments https://github.com/metabrainz/musicbrainz-server/pull/2184#issuecomment-901833627 and https://github.com/metabrainz/musicbrainz-server/pull/2184#issuecomment-901888214 it should just not auto-select “lyrics” instead.\r\n\r\nWhen adding `https://mainlynorfolk.info/folk/songs/acrossthewesternocean.html` to http://localhost:5000/work/aaaab3b7-b743-4bf4-978c-bb3c02cf9913/edit no type is currently selected, while it seems “other databases” should be auto-selected and “lyrics” should be selectable.', 'comment_created': datetime.datetime(2021, 8, 19, 16, 42, 54, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 692312263, 'comment_body': 'https://github.com/metabrainz/musicbrainz-server/pull/2184#issuecomment-891475945 suggests neither of the two to be autoselected if there\'s more than one - if that\'s the easiest implementation and it would need heavy refactoring to have ""always"" vs ""optional"", then I\'d rather keep it as all optional. After all, most cases (bandcamp for example) can be one of the possible options, several at the same time, or rarely none of them even.', 'comment_created': datetime.datetime(2021, 8, 19, 16, 45, 55, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 692317596, 'comment_body': 'Auto-selecting only one relationship type (edit: and allowing for more optional relationships) is implemented already, “select” is for “always” and “types” for “allowed” if I recall correctly.', 'comment_created': datetime.datetime(2021, 8, 19, 16, 53, 24, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 692329175, 'comment_body': ""The current logic is whether we use auto-selection and block user from adding other relationships, or we don't auto-select at all, as [discussed](https://chatlogs.metabrainz.org/libera/metabrainz/2021-08-10/?msg=4845345&page=2) before."", 'comment_created': datetime.datetime(2021, 8, 19, 17, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 693454884, 'comment_body': 'For example, when selecting the optional “lyrics” relationship type for a Mainly Norfolk URL, it returns “This type must be used with ‘other databases’.” just under the URL.\r\n\r\n1. The actual cause of the error is not the selected relationship, it is the missing relationship. So the error target should not be `TARGET_ERRORS.RELATIONSHIP` and the error message should probably be something like “The relationship type ‘other databases’ is missing for this URL.”.\r\n2. Maybe the error message could be displayed under the set of relationships, and even under the button “Add a new relationship” which can be used by the user to address this error. It seems it could be worth creating a new error target: `TARGET_ERRORS.RELATIONSHIP_SET`.\r\n\r\nThe 1. is a bug to be fixed, but the 2. is just a suggested improvement that can wait for further refactoring as [discussed on IRC](https://chatlogs.metabrainz.org/libera/metabrainz/msg/4850037/).\r\n\r\n', 'comment_created': datetime.datetime(2021, 8, 22, 7, 8, 44, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 693457485, 'comment_body': 'Implemented in commit <https://github.com/metabrainz/musicbrainz-server/pull/2184/commits/448ea12d62103fb5fb808d600f33143b6e7f0650>, thanks.\r\n\r\nNote: The above linked discussion mentioned both approaches, and auto-selecting multiple relationship types was also part of the final roadmap. Not having selected any type in this case would have require editors to manually select the mandatory relationship type each time. Now editors just have to select the optional relationship type if needed.', 'comment_created': datetime.datetime(2021, 8, 22, 7, 29, 21, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 693465258, 'comment_body': 'After having discussed this further on IRC (a few days ago?), no change is required here. When `types` contains only one possible combination of types, this combination is auto-selected. It requires less code (no duplication from `types` to `select`) even though it makes the code slightly more complicated to follow.', 'comment_created': datetime.datetime(2021, 8, 22, 8, 30, 55, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 693468809, 'comment_body': 'Actually not all Mainly Norfolk song pages have lyrics, so “lyrics” relationship is allowed as an additional relationship to “other databases”. This has been fixed with commits https://github.com/metabrainz/musicbrainz-server/pull/2184/commits/895dd1183d1cb35dd75a52f392f6251509cd8233 and <https://github.com/metabrainz/musicbrainz-server/pull/2184/commits/b436019f728aee0a0e1f52f3b971c7c420809194>.', 'comment_created': datetime.datetime(2021, 8, 22, 8, 59, 40, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 693469099, 'comment_body': 'This has been fixed in commit <https://github.com/metabrainz/musicbrainz-server/pull/2184/commits/e85dfecb0e2bc39c67c4762accb4b6bb4b9359d3>.', 'comment_created': datetime.datetime(2021, 8, 22, 9, 1, 52, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 693781801, 'comment_body': 'Bug 1. is now fixed in commit <https://github.com/metabrainz/musicbrainz-server/pull/2184/commits/231b6c481e72e0e328901cc6183ec6698c6fb1fd>.', 'comment_created': datetime.datetime(2021, 8, 23, 8, 48, 48, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 693825560, 'comment_body': 'Suggestion 2. was twofold: updating the error message will be part of MBS-11899, renaming `types` (and/or other properties of `CLEANUPS`?) will be decided at the same time as the larger renaming of `URLCleanup` and `ERROR_TARGETS` that was planned anyway.', 'comment_created': datetime.datetime(2021, 8, 23, 9, 48, 31, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 694994775, 'comment_body': ""Now renamed to 'restrict'."", 'comment_created': datetime.datetime(2021, 8, 24, 16, 4, 54, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 695487934, 'comment_body': 'Please indent lines to align with “Array…”', 'comment_created': datetime.datetime(2021, 8, 25, 7, 43, 25, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 695496089, 'comment_body': 'Should this change be part of the second commit about Flow types (instead of the first commit currently)?', 'comment_created': datetime.datetime(2021, 8, 25, 7, 51, 46, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 695498314, 'comment_body': 'Typo in comment. It is unclear what is “entity rule” too.', 'comment_created': datetime.datetime(2021, 8, 25, 7, 54, 44, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 695504769, 'comment_body': 'Did you replace this example to trigger a different error message? Just asking because I’m not sure.', 'comment_created': datetime.datetime(2021, 8, 25, 8, 3, 12, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 695506983, 'comment_body': 'Please fix indent for this commit too as suggested in earlier comment to the first commit.', 'comment_created': datetime.datetime(2021, 8, 25, 8, 6, 18, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 695516192, 'comment_body': 'There is no `LINK_TYPES.lyrics.release`. Please provide a full real example.', 'comment_created': datetime.datetime(2021, 8, 25, 8, 18, 28, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 695517090, 'comment_body': 'That should be documented in `CLEANUPS` comment instead.', 'comment_created': datetime.datetime(2021, 8, 25, 8, 19, 40, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 695520289, 'comment_body': 'Please use `commaOnlyList` instead, as it supports localization.', 'comment_created': datetime.datetime(2021, 8, 25, 8, 23, 43, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}, {'comment_id': 695657819, 'comment_body': ""No, it's just because there's no ASIN option after restricting type options, it'll only appear when an Amazon link is entered."", 'comment_created': datetime.datetime(2021, 8, 25, 11, 23, 53, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 695927770, 'comment_body': 'I don\'t quite understand this message.  It doesn\'t seem I can override this behavior at all, so I\'m not sure why it\'s telling me this instead of just selecting every type.  The ""when submitting"" part is also confusing, since ""submit"" to me is when I submit the form, but these are just selected when I move focus.', 'comment_created': datetime.datetime(2021, 8, 25, 16, 40, 12, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 695933408, 'comment_body': 'It might be simpler to just sort the arrays and use `arraysEqual`.', 'comment_created': datetime.datetime(2021, 8, 25, 16, 47, 49, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 695933849, 'comment_body': '```suggestion\r\nexport function haveSameContent<T>(a: $ReadOnlyArray<T>, b: $ReadOnlyArray<T>): boolean {\r\n```', 'comment_created': datetime.datetime(2021, 8, 25, 16, 48, 27, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 695934858, 'comment_body': ""AFAICT this shouldn't be needed, since Flow will check the types.  (root/static/scripts/tests/Control/URLCleanup.js is untyped to be fair, but I'd think the tests would die anyway if you're not calling it correctly.)"", 'comment_created': datetime.datetime(2021, 8, 25, 16, 49, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 695937156, 'comment_body': ""Prefer `$ReadOnlyArray` if they aren't meant to be mutated. `+` makes the properties covariant, i.e. read-only.\r\n```suggestion\r\ntype EntityTypesMap = {\r\n  +[entityType: CoreEntityTypeT]: string | $ReadOnlyArray<string>,\r\n};\r\n\r\ntype EntityTypeMap = {\r\n  +[entityType: CoreEntityTypeT]: string,\r\n};\r\n\r\ntype LinkTypeMap = {\r\n  +[type: string]: EntityTypeMap,\r\n};\r\n\r\nexport type RelationshipTypeT =\r\n  | string // Single type\r\n  | $ReadOnlyArray<string>; // A type combination\r\n```"", 'comment_created': datetime.datetime(2021, 8, 25, 16, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 695938199, 'comment_body': '```suggestion\r\nexport const RESTRICTED_LINK_TYPES: $ReadOnlyArray<string> = [\r\n```', 'comment_created': datetime.datetime(2021, 8, 25, 16, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 695939391, 'comment_body': '```suggestion\r\ntype ValidationResult = {\r\n  +error?: React$Node,\r\n  result: boolean,\r\n  +target?: $Values<typeof ERROR_TARGETS>,\r\n};\r\n\r\ntype CleanupEntry = {\r\n  +clean?: (url: string) => string,\r\n  +match: $ReadOnlyArray<RegExp>,\r\n  +restrict?: $ReadOnlyArray<EntityTypesMap>,\r\n  +select?:\r\n    (url: string, sourceType: CoreEntityTypeT) =>\r\n    | RelationshipTypeT\r\n    | false, // No match\r\n  +validate?: (url: string, id: string) => ValidationResult,\r\n};\r\n\r\ntype CleanupEntries = {\r\n  +[type: string]: CleanupEntry,\r\n};\r\n```', 'comment_created': datetime.datetime(2021, 8, 25, 16, 55, 59, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 695940086, 'comment_body': '```suggestion\r\n    selectedTypes: $ReadOnlyArray<string>,\r\n    allowedTypes: $ReadOnlyArray<RelationshipTypeT> | false,\r\n```', 'comment_created': datetime.datetime(2021, 8, 25, 16, 56, 56, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 695941434, 'comment_body': ""`Object` is actually just an alias for `any` (it doesn't actually match objects).  We'd like to avoid `any` since it's less safe.  Can we use a more accurate type here?"", 'comment_created': datetime.datetime(2021, 8, 25, 16, 58, 50, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 695942225, 'comment_body': 'Same here re: `any`.', 'comment_created': datetime.datetime(2021, 8, 25, 16, 59, 47, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 695942501, 'comment_body': 'Same here re: `any`.', 'comment_created': datetime.datetime(2021, 8, 25, 17, 0, 8, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 695942835, 'comment_body': 'Maybe just ctrl+f `Object` and fix all of them. :)', 'comment_created': datetime.datetime(2021, 8, 25, 17, 0, 37, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 695942851, 'comment_body': 'Agreed - if you want to autoselect anyway, just autoselect :) ', 'comment_created': datetime.datetime(2021, 8, 25, 17, 0, 38, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 695948301, 'comment_body': ""Actually this is due to the mechanism of grouping links, auto-selecting multiple types requires adding an extra link, while links that haven't been submitted are not grouped. Maybe we can display it as a fake relationship item here."", 'comment_created': datetime.datetime(2021, 8, 25, 17, 8, 32, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 695950347, 'comment_body': ""That requires the same order of items in both arrays, while this doesn't."", 'comment_created': datetime.datetime(2021, 8, 25, 17, 11, 30, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 695951025, 'comment_body': ""That's why he said sort them before you compare, then all you check is that they have the same items :) "", 'comment_created': datetime.datetime(2021, 8, 25, 17, 12, 30, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 695951983, 'comment_body': 'It is because `MB.forms.linkTypeOptions` is not typed.', 'comment_created': datetime.datetime(2021, 8, 25, 17, 13, 54, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 695952881, 'comment_body': 'Sorry I missed that, then it makes sense indeed.', 'comment_created': datetime.datetime(2021, 8, 25, 17, 15, 12, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 695963399, 'comment_body': 'We could use a `$FlowFixMe` where it assigns them, and then whatever uses `typeOptions` would still benefit from the types at least.', 'comment_created': datetime.datetime(2021, 8, 25, 17, 26, 53, tzinfo=datetime.timezone.utc), 'commenter': 'mwiencek', 'type': 'User'}, {'comment_id': 696355104, 'comment_body': 'The current change is a lot better. Ideally we\'d also be able to edit this relationship and the system would save the edits and apply them when creating the ""real"" one, but it\'s probably relatively minor and not something that should block this.', 'comment_created': datetime.datetime(2021, 8, 26, 7, 14, 19, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 696355606, 'comment_body': 'I added a type for LinkTypeOptionT that I think should be fine.', 'comment_created': datetime.datetime(2021, 8, 26, 7, 15, 5, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}]","[{'commit_sha': 'e76265cf8f9ba37093f4c283e184e31f4ee37ce8', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ae833dedf661c7a358b0ed85b7a78d7717bdcb9', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83b1817da896a3abefe3f33dd054f4fde8978633', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1af7c0738745ec6876b344b173471b8deb418f1', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5addb751b55fac6262807bde4693c87bc704e5f6', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb1088bbac8d44c2ac10c2bf8816487d47364354', 'committer_username': 'mwiencek', 'committer_name': 'Michael Wiencek', 'committer_email': 'bitmap@metabrainz.org', 'commit_date': datetime.datetime(2011, 9, 16, 17, 3, 54, tzinfo=datetime.timezone.utc)}]",Googleplex,17172063,i@gpx.moe,User,,43,,43,77
607454854,MBS-9833: Link relationship style guide within release edit relationships tool,"<!--
    Hello! Thanks for submitting a pull request to MusicBrainz Server.
    We appreciate your time and interest in helping our project!

    Please use this template to help us review your change.

    Depending on your change, some sections may be unneeded, just remove these.
    For example, small pull requests usually don’t need the section “Action”.

    Remember that the more helpful info your pull request includes,
    the easier it is for us to understand and review your changes.

    Ensure that you’ve read through and followed the Contributing Guidelines, at
    https://github.com/metabrainz/musicbrainz-server/blob/master/CONTRIBUTING.md
-->

# Problem
<!--
    Anything that helps us understand why you are making this change goes here.
    What problem are you trying to fix? What does this change address?
-->

[MBS-9833](https://tickets.metabrainz.org/browse/MBS-9833): Link relationship style guide within release edit relationships tool


# Solution
<!--
    Talk about technical details, considerations, or other interesting points.
-->

Add relationship style guide link to edit relationships tool 


# Checklist for author
<!--
    The tasks you have to do to get your change ready for review. Use this if
    you draft a pull request. Mark done tasks with an [x] as you progress. See
    https://github.blog/2019-02-14-introducing-draft-pull-requests/
-->

* [x] Read the [Contributing Guidelines](https://github.com/metabrainz/musicbrainz-server/blob/master/CONTRIBUTING.md)


# Action
<!--
    Other than merging your change, do you want / need us to do anything else
    with your change? This could include reviewing a specific part of your PR.
-->

1. Should we update the corresponding .po file for translation?
2. I'm sure if this message is the best choice, so please let me know if it can be better :)
",True,2026,https://api.github.com/repos/metabrainz/musicbrainz-server/pulls/2026,https://github.com/metabrainz/musicbrainz-server/pull/2026,closed,2,0,1,2,5,1,0,0,[],2021-04-01 14:41:57+00:00,2021-04-13 16:41:25+00:00,1043968.0,"12 days, 1:59:28","[{'comment_id': 605729320, 'comment_body': ""```suggestion\r\n      <p>[% l('Please read {relationships_doc|our guidelines for relationships} if you haven’t already.', { relationships_doc => { href => doc_link('Style/Relationships'), target => '_blank' } }) %]</p>\r\n```\r\n\r\ncsg => classical (music) style guide, it probably applied wherever you copied this from but not here :) \r\nChanged the text a bit to make it more clear that we expect people to follow those guidelines - let me know what you think :) "", 'comment_created': datetime.datetime(2021, 4, 1, 15, 2, 19, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}]","[{'commit_sha': 'e17e618d7b6223455c8ee3793b92b474c6b5479e', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cb245e9af26d37eb09afd68d2b9b2d22d8927cf', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}]",Googleplex,17172063,i@gpx.moe,User,,43,,43,77
607927668,MBS-10534: Cleanup DNB search link,"<!--
    Hello! Thanks for submitting a pull request to MusicBrainz Server.
    We appreciate your time and interest in helping our project!

    Please use this template to help us review your change.

    Depending on your change, some sections may be unneeded, just remove these.
    For example, small pull requests usually don’t need the section “Action”.

    Remember that the more helpful info your pull request includes,
    the easier it is for us to understand and review your changes.

    Ensure that you’ve read through and followed the Contributing Guidelines, at
    https://github.com/metabrainz/musicbrainz-server/blob/master/CONTRIBUTING.md
-->

# Problem
<!--
    Anything that helps us understand why you are making this change goes here.
    What problem are you trying to fix? What does this change address?
-->

[MBS-10534](https://tickets.metabrainz.org/browse/MBS-10534): Automatically turn DNB search link into permalink


# Solution
<!--
    Talk about technical details, considerations, or other interesting points.
-->

Update `URLCleanup.js` to cleanup DNB search link

# Checklist for author
<!--
    The tasks you have to do to get your change ready for review. Use this if
    you draft a pull request. Mark done tasks with an [x] as you progress. See
    https://github.blog/2019-02-14-introducing-draft-pull-requests/
-->

* [x] Read the [Contributing Guidelines](https://github.com/metabrainz/musicbrainz-server/blob/master/CONTRIBUTING.md)
",True,2030,https://api.github.com/repos/metabrainz/musicbrainz-server/pulls/2030,https://github.com/metabrainz/musicbrainz-server/pull/2030,closed,50,1,2,8,2,10,0,0,[],2021-04-02 09:07:03+00:00,2021-04-13 16:28:56+00:00,976913.0,"11 days, 7:21:53","[{'comment_id': 606165708, 'comment_body': ""Actually, it makes sense to test that these are also getting matched when entered as-is (rather than only matched as portal.dnb.de and then cleaned up) so I wouldn't remove it."", 'comment_created': datetime.datetime(2021, 4, 2, 9, 51, 14, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 606166426, 'comment_body': ""This is still being matched under `'otherdatabases'` as well - you should remove it from there :) "", 'comment_created': datetime.datetime(2021, 4, 2, 9, 53, 25, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 606172879, 'comment_body': ""`/gnd` links (`nid` queries) seem to be exclusively for artists, so we should probably validate that it's only used for artists. See how we do it elsewhere on this file :) You'll also want to change the test to use `only_valid_entity_types: ['artist']`\r\n\r\nAlso, they also have `idn` queries (https://portal.dnb.de/opac.htm?method=simpleSearch&cqlMode=true&query=idn%3D1227621485), that can be cleaned up to links like http://d-nb.info/1227621485 and which work now, but this would make invalid (https://musicbrainz.org/url/a4eaabd0-55ba-4918-970f-6eeb48aa91d7 for example). Can you make this so that it cleans those up too and allows them for releases? Add a test for them too :)"", 'comment_created': datetime.datetime(2021, 4, 2, 10, 11, 6, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 606176464, 'comment_body': 'This is my first thought, but it seems to cause [test failure](https://app.circleci.com/pipelines/github/metabrainz/musicbrainz-server/5184/workflows/07b8b5d0-7b5d-4276-9351-1d7ab20af4d6/jobs/12041). Could you please tell me how should I fix it?', 'comment_created': datetime.datetime(2021, 4, 2, 10, 22, 23, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 606204149, 'comment_body': ""I don't understand, it seems that we need this line to retrict link type to artists. Could you explain further?"", 'comment_created': datetime.datetime(2021, 4, 2, 11, 55, 31, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 606395927, 'comment_body': ""There's a separate rule in the same file, just named otherdatabases, that also matches d-nb.info. Since you're moving this to be its own rule, it shouldn't also be matched there :) "", 'comment_created': datetime.datetime(2021, 4, 2, 19, 58, 31, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 606635763, 'comment_body': 'This is not for an artist, but for a release :) ', 'comment_created': datetime.datetime(2021, 4, 3, 8, 11, 56, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 606635782, 'comment_body': 'Also for a release. Same issue with the repeated URL, try http://d-nb.info/1181136512 for example', 'comment_created': datetime.datetime(2021, 4, 3, 8, 12, 9, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 606635944, 'comment_body': ""You added the `idn` matching for releases, but this still only allows these links on artists :) You should have two checks:\r\nIf it matches `http://d-nb.info/gnd/(id)` then it's allowed for artist, otherwise not.\r\nIf it matches `http://d-nb.info/(id)` then it's allowed for release, otherwise not.\r\n"", 'comment_created': datetime.datetime(2021, 4, 3, 8, 14, 21, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 606637108, 'comment_body': 'The test issue here is because it expects the same clean URL. Just give it a separate one that is also valid. For example, http://d-nb.info/gnd/2026867-1 is a valid artist link :) \r\n\r\n\r\n', 'comment_created': datetime.datetime(2021, 4, 3, 8, 27, 13, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}]","[{'commit_sha': 'ac7baff04f71ca58c0017b2d432938feaf248063', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1c424ac50879ff60ea871205c24cfd719fc3abb', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb80d7a0bbb01b922bed799c2d8ed8e87a476208', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca08588bedffd2e69cd3d771fb9d10c1bff02d68', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b83cafb11774d3d446db439df8b9b591b05f9cb5', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41b6ccdeee3bb03fc9e78ef089fd13cc19bd880e', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54293a50d0da0663b0cdc832a46f396b8963cc0b', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2a29f3db253da75f8b5b390c432aea51d8b02b9', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}]",Googleplex,17172063,i@gpx.moe,User,,43,,43,77
612160415,MBS-11524: Disallow https://*.bandcamp.com/ URLs at release and recording level,"<!--
    Hello! Thanks for submitting a pull request to MusicBrainz Server.
    We appreciate your time and interest in helping our project!

    Please use this template to help us review your change.

    Depending on your change, some sections may be unneeded, just remove these.
    For example, small pull requests usually don’t need the section “Action”.

    Remember that the more helpful info your pull request includes,
    the easier it is for us to understand and review your changes.

    Ensure that you’ve read through and followed the Contributing Guidelines, at
    https://github.com/metabrainz/musicbrainz-server/blob/master/CONTRIBUTING.md
-->

# Problem
<!--
    Anything that helps us understand why you are making this change goes here.
    What problem are you trying to fix? What does this change address?
-->

MBS-11524: Disallow https://*.bandcamp.com/ URLs at release and recording level


# Solution
<!--
    Talk about technical details, considerations, or other interesting points.
-->

Restrict Bandcamp artist links

# Checklist for author
<!--
    The tasks you have to do to get your change ready for review. Use this if
    you draft a pull request. Mark done tasks with an [x] as you progress. See
    https://github.blog/2019-02-14-introducing-draft-pull-requests/
-->

* [x] Read the [Contributing Guidelines](https://github.com/metabrainz/musicbrainz-server/blob/master/CONTRIBUTING.md)

# Action
<!--
    Other than merging your change, do you want / need us to do anything else
    with your change? This could include reviewing a specific part of your PR.
-->",True,2050,https://api.github.com/repos/metabrainz/musicbrainz-server/pulls/2050,https://github.com/metabrainz/musicbrainz-server/pull/2050,closed,74,1,2,6,3,6,1,0,[{'name': 'New feature'}],2021-04-09 05:27:36+00:00,2021-04-12 07:45:48+00:00,267492.0,"3 days, 2:18:12","[{'comment_id': 610359732, 'comment_body': 'A page like https://gaerea.bandcamp.com/ *looks* like an album page, so we should be more explicit. What about something like:\r\n\r\n```suggestion\r\n        error: exp.l(\r\n          `This is a Bandcamp profile, not a page for a specific\r\n           release. Even if it shows this release right now,\r\n           that can change when the artist releases another.\r\n           Please find and add the appropriate release page\r\n           (“{album_url_pattern}” or “{single_url_pattern}”)\r\n           instead, and feel free to add this profile link\r\n           to the appropriate artist or label.`,\r\n          {\r\n            album_url_pattern: (\r\n              <span className=""url-quote"">{\'/album\'}</span>\r\n            ),\r\n            single_url_pattern: (\r\n              <span className=""url-quote"">{\'/track\'}</span>\r\n            ),\r\n          },\r\n        ),\r\n```\r\n\r\n@yvanzo might have more comments on this though, so let\'s maybe wait to see what he thinks :)', 'comment_created': datetime.datetime(2021, 4, 9, 5, 42, 45, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 610359958, 'comment_body': 'Similar to the release comment, but mentioning release groups instead I guess?', 'comment_created': datetime.datetime(2021, 4, 9, 5, 43, 27, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 610372444, 'comment_body': ""There're no release group pages but review pages, should we mention reviews instead?"", 'comment_created': datetime.datetime(2021, 4, 9, 6, 17, 23, tzinfo=datetime.timezone.utc), 'commenter': 'y-young', 'type': 'User'}, {'comment_id': 610379786, 'comment_body': ""Oh, actually, this is *already* disallowed for RGs, because it auto-selects to review and this is not a review. We could update the validation there to be more specific and say that profiles should be added to artists/labels and album/track pages to releases or recordings, but I'm also ok with just not touching RGs."", 'comment_created': datetime.datetime(2021, 4, 9, 6, 34, 42, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 611351691, 'comment_body': 'I might still keep parenthesis around this, it reads better IMO.', 'comment_created': datetime.datetime(2021, 4, 12, 6, 14, 34, tzinfo=datetime.timezone.utc), 'commenter': 'reosarevok', 'type': 'User'}, {'comment_id': 611361669, 'comment_body': '@y-young: yes to parenthesis, please.', 'comment_created': datetime.datetime(2021, 4, 12, 6, 37, 38, tzinfo=datetime.timezone.utc), 'commenter': 'yvanzo', 'type': 'User'}]","[{'commit_sha': 'ee96aff41a7d5fdf070190e1a728bfdf37843c16', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7e83d96a5deaeba684d1f3ce868cf729cb51529', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efff46209b7b263d03fe024ef91b8b7e7f7280de', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '053c8d0325937bf0eaae25e619ee5cba0ad7b660', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50bac0ea1ab66cd6f9e186638d869a864faf437f', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e25fbf2da215691d42ce3edd36706279a901c2c', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}]",Googleplex,17172063,i@gpx.moe,User,,43,,43,77
658946058,MBS-11688: The external link section will disappear once any link starts with //,"# Problem

MBS-11688: The external link section will disappear once any link starts with //


# Solution

Fix `isValidURL` to correctly validate links starting with ""//""

",True,2125,https://api.github.com/repos/metabrainz/musicbrainz-server/pulls/2125,https://github.com/metabrainz/musicbrainz-server/pull/2125,closed,28,2,2,1,0,0,0,0,[],2021-06-01 12:05:49+00:00,2021-06-06 20:19:13+00:00,461604.0,"5 days, 8:13:24",[],"[{'commit_sha': '30858475a3f8ae96423333b9b1aef2182b843c88', 'committer_username': 'y-young', 'committer_name': 'Googleplex', 'committer_email': 'i@gpx.moe', 'commit_date': datetime.datetime(2016, 2, 11, 4, 39, 25, tzinfo=datetime.timezone.utc)}]",Googleplex,17172063,i@gpx.moe,User,,43,,43,77

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
697520,musicbrainz-server,metabrainz/musicbrainz-server,Perl,278,831,43,226,37197,83,102,83,"[{'id': 808931057, 'number': 2376, 'closed': datetime.datetime(2022, 2, 7, 17, 8, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 23, 7, 20, 47, tzinfo=datetime.timezone.utc), 'time_taken': 4009690.0, 'time_delta': '46 days, 9:48:10', 'additions': 55, 'deletions': 5, 'state': 'closed'}, {'id': 748692808, 'number': 2296, 'closed': datetime.datetime(2021, 10, 19, 8, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 4, 8, 28, 49, tzinfo=datetime.timezone.utc), 'time_taken': 1294691.0, 'time_delta': '14 days, 23:38:11', 'additions': 84, 'deletions': 0, 'state': 'closed'}, {'id': 748547328, 'number': 2295, 'closed': datetime.datetime(2021, 10, 4, 9, 2, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 4, 4, 8, 34, tzinfo=datetime.timezone.utc), 'time_taken': 17662.0, 'time_delta': '4:54:22', 'additions': 11, 'deletions': 0, 'state': 'closed'}, {'id': 743147405, 'number': 2288, 'closed': datetime.datetime(2021, 10, 14, 5, 8, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 27, 6, 46, 54, tzinfo=datetime.timezone.utc), 'time_taken': 1462902.0, 'time_delta': '16 days, 22:21:42', 'additions': 24, 'deletions': 18, 'state': 'closed'}, {'id': 742861808, 'number': 2287, 'closed': datetime.datetime(2021, 10, 14, 14, 35, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 26, 11, 52, 13, tzinfo=datetime.timezone.utc), 'time_taken': 1564989.0, 'time_delta': '18 days, 2:43:09', 'additions': 184, 'deletions': 51, 'state': 'closed'}, {'id': 737591422, 'number': 2275, 'closed': datetime.datetime(2021, 10, 13, 16, 46, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 20, 13, 40, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1998358.0, 'time_delta': '23 days, 3:05:58', 'additions': 49, 'deletions': 31, 'state': 'closed'}, {'id': 737541123, 'number': 2273, 'closed': datetime.datetime(2021, 9, 20, 13, 40, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 20, 12, 42, 34, tzinfo=datetime.timezone.utc), 'time_taken': 3469.0, 'time_delta': '0:57:49', 'additions': 48, 'deletions': 45, 'state': 'closed'}, {'id': 736098925, 'number': 2267, 'closed': datetime.datetime(2021, 9, 20, 12, 51, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 17, 6, 27, 37, tzinfo=datetime.timezone.utc), 'time_taken': 282260.0, 'time_delta': '3 days, 6:24:20', 'additions': 68, 'deletions': 73, 'state': 'closed'}, {'id': 724334536, 'number': 2247, 'closed': datetime.datetime(2021, 9, 3, 10, 28, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 1, 10, 7, 31, tzinfo=datetime.timezone.utc), 'time_taken': 174063.0, 'time_delta': '2 days, 0:21:03', 'additions': 63, 'deletions': 33, 'state': 'closed'}, {'id': 717297316, 'number': 2232, 'closed': datetime.datetime(2021, 8, 23, 6, 41, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 22, 11, 55, 7, tzinfo=datetime.timezone.utc), 'time_taken': 67569.0, 'time_delta': '18:46:09', 'additions': 4, 'deletions': 6, 'state': 'closed'}, {'id': 717263031, 'number': 2231, 'closed': datetime.datetime(2021, 8, 23, 15, 25, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 22, 7, 12, 57, tzinfo=datetime.timezone.utc), 'time_taken': 115952.0, 'time_delta': '1 day, 8:12:32', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 713980058, 'number': 2219, 'closed': datetime.datetime(2021, 8, 21, 13, 36, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 17, 7, 17, 17, tzinfo=datetime.timezone.utc), 'time_taken': 368357.0, 'time_delta': '4 days, 6:19:17', 'additions': 464, 'deletions': 39, 'state': 'closed'}, {'id': 712903173, 'number': 2216, 'closed': datetime.datetime(2021, 8, 18, 17, 30, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 15, 9, 15, 55, tzinfo=datetime.timezone.utc), 'time_taken': 288862.0, 'time_delta': '3 days, 8:14:22', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 712147908, 'number': 2215, 'closed': datetime.datetime(2021, 8, 14, 12, 43, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 13, 7, 57, 11, tzinfo=datetime.timezone.utc), 'time_taken': 103591.0, 'time_delta': '1 day, 4:46:31', 'additions': 26, 'deletions': 8, 'state': 'closed'}, {'id': 696347839, 'number': 2184, 'closed': datetime.datetime(2021, 8, 27, 8, 35, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 24, 12, 57, 52, tzinfo=datetime.timezone.utc), 'time_taken': 2921872.0, 'time_delta': '33 days, 19:37:52', 'additions': 932, 'deletions': 450, 'state': 'closed'}, {'id': 678079448, 'number': 2151, 'closed': datetime.datetime(2021, 7, 20, 12, 2, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 25, 17, 39, 46, tzinfo=datetime.timezone.utc), 'time_taken': 2139751.0, 'time_delta': '24 days, 18:22:31', 'additions': 413, 'deletions': 66, 'state': 'closed'}, {'id': 662500206, 'number': 2128, 'closed': datetime.datetime(2021, 6, 22, 7, 54, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 5, 16, 13, 43, tzinfo=datetime.timezone.utc), 'time_taken': 1438873.0, 'time_delta': '16 days, 15:41:13', 'additions': 1091, 'deletions': 318, 'state': 'closed'}, {'id': 658946058, 'number': 2125, 'closed': datetime.datetime(2021, 6, 6, 20, 19, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 1, 12, 5, 49, tzinfo=datetime.timezone.utc), 'time_taken': 461604.0, 'time_delta': '5 days, 8:13:24', 'additions': 28, 'deletions': 2, 'state': 'closed'}, {'id': 650974076, 'number': 2114, 'closed': datetime.datetime(2021, 8, 12, 14, 15, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 24, 5, 7, 8, tzinfo=datetime.timezone.utc), 'time_taken': 6944887.0, 'time_delta': '80 days, 9:08:07', 'additions': 1082, 'deletions': 421, 'state': 'closed'}, {'id': 628415886, 'number': 2081, 'closed': datetime.datetime(2021, 7, 8, 14, 19, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 1, 11, 23, 13, tzinfo=datetime.timezone.utc), 'time_taken': 5885775.0, 'time_delta': '68 days, 2:56:15', 'additions': 20, 'deletions': 5, 'state': 'closed'}, {'id': 612160415, 'number': 2050, 'closed': datetime.datetime(2021, 4, 12, 7, 45, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 9, 5, 27, 36, tzinfo=datetime.timezone.utc), 'time_taken': 267492.0, 'time_delta': '3 days, 2:18:12', 'additions': 74, 'deletions': 1, 'state': 'closed'}, {'id': 607927668, 'number': 2030, 'closed': datetime.datetime(2021, 4, 13, 16, 28, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 2, 9, 7, 3, tzinfo=datetime.timezone.utc), 'time_taken': 976913.0, 'time_delta': '11 days, 7:21:53', 'additions': 50, 'deletions': 1, 'state': 'closed'}, {'id': 607454854, 'number': 2026, 'closed': datetime.datetime(2021, 4, 13, 16, 41, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 1, 14, 41, 57, tzinfo=datetime.timezone.utc), 'time_taken': 1043968.0, 'time_delta': '12 days, 1:59:28', 'additions': 2, 'deletions': 0, 'state': 'closed'}]"
