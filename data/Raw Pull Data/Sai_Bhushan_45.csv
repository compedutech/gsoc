pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
668066936,(Gsoc'21) (Week-1) Fixes broken tests,"This PR fixes the broken tests in the library.
Many of these fixes are small, like adding a timeout.
I've corrected all the tests which were broken in chrome, will add more commits if any of the tests fail in other browsers in the future.",True,626,https://api.github.com/repos/processing/p5.js-sound/pulls/626,https://github.com/processing/p5.js-sound/pull/626,closed,869,509,12,5,3,22,0,0,[],2021-06-11 12:03:25+00:00,2021-07-16 20:19:29+00:00,3053764.0,"35 days, 8:16:04","[{'comment_id': 652328750, 'comment_body': 'is `this.bufferSize` used anywhere?', 'comment_created': datetime.datetime(2021, 6, 16, 3, 48, 43, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 652329125, 'comment_body': 'any reason to pick 100ms for the setTimeout? Would 0ms work?', 'comment_created': datetime.datetime(2021, 6, 16, 3, 49, 58, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 652329679, 'comment_body': ""nice idea to use `approximately` ! Do you think it'd be worth shortening this to `approximately(2637, 0.1)` just so that we don't need to think about all of those decimals?"", 'comment_created': datetime.datetime(2021, 6, 16, 3, 52, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 652330847, 'comment_body': ""does `play` return a Promise that we are able to `await` on? Otherwise, I don't think this `await` operator is doing anything?"", 'comment_created': datetime.datetime(2021, 6, 16, 3, 55, 47, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 652332157, 'comment_body': ""I have the same question about all of these `await` operators - I don't think these methods return a Promise and I haven't seen `await` used on methods that don't return a Promise before so I'm not sure the await operator is helping us here. Let me know if I'm missing something though!"", 'comment_created': datetime.datetime(2021, 6, 16, 4, 0, 18, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 652332699, 'comment_body': 'why do we need this setTimeout?', 'comment_created': datetime.datetime(2021, 6, 16, 4, 2, 3, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 652332979, 'comment_body': ""same question as above, it seems there is a reason you've wrapped the `recorder.record` function in a setTimeout, I wouldn't think that'd be necessary but maybe it is!"", 'comment_created': datetime.datetime(2021, 6, 16, 4, 2, 59, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 652513007, 'comment_body': 'Yes, it is being used in [this](https://github.com/processing/p5.js-sound/blob/1b60962f84a3eb68223edf7e74c446cce40399ed/test/tests/p5.SoundRecorder.js#L78) line which is undefined before adding this statement, thus causing the test to fail.', 'comment_created': datetime.datetime(2021, 6, 16, 9, 23, 30, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 652516087, 'comment_body': 'Yeah that works too. I was just going with the flow and kept it precise. Do you want me to change it? I can add it in my next upcoming commit to this PR.', 'comment_created': datetime.datetime(2021, 6, 16, 9, 27, 26, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 652525180, 'comment_body': ""no reason to pick 100ms exactly, but it is taking some to set the frequency. so 0ms would not work. I wanted to be sure that the test runs every time, so I've chosen 100ms"", 'comment_created': datetime.datetime(2021, 6, 16, 9, 39, 26, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 652535018, 'comment_body': ""I don't have an exact idea why it does so, but i am fairly confident [this](https://github.com/processing/p5.js-sound/blob/a74dd7eadba27a1e27c46cc7b523faf1b2867dc5/src/filter.js#L165) line may be a reason"", 'comment_created': datetime.datetime(2021, 6, 16, 9, 52, 14, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 652544454, 'comment_body': ""This time, the mic is taking some time to connect to the recorder in [this](https://github.com/processing/p5.js-sound/pull/626/files/1b60962f84a3eb68223edf7e74c446cce40399ed#diff-14453cfad7e58ed0e24d64543f6ff750b682d7965d960ff7c8acf40130f19d46R56) line(line 56). If we don't use the timeout, the `outputChannel` is returning all 0's, failing the test."", 'comment_created': datetime.datetime(2021, 6, 16, 10, 5, 3, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 652551530, 'comment_body': 'this situation is similar to the above one. But the Time out here is set to be 10ms as the `outputChannel` without timeout is being all zeros in the returned Float32Array (size 1024) until 287th position and non-zero values after that. The weird part is that the number 287 is being constant no matter how many times I run the code. No idea why this is happening, but the timeout fixes it', 'comment_created': datetime.datetime(2021, 6, 16, 10, 15, 9, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 652595804, 'comment_body': ""Sorry, this is a mistake on my side. I'll add another commit resolving this."", 'comment_created': datetime.datetime(2021, 6, 16, 11, 24, 1, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 652616413, 'comment_body': 'Hey @therewasaguy, I agree that using await here has no effect. But the problem is that sometimes(like 1 in 4/5) these tests fail as the code is not synchronous. For example,\r\n<img width=""489"" alt=""Screenshot 2021-06-16 at 5 21 35 PM"" src=""https://user-images.githubusercontent.com/40578313/122214083-4f595380-cec7-11eb-98f4-434253e2d1e2.png"">\r\nA quick fix that I can think of is that we layer every statement here with a setTimeout, which would work but will not look good and is inefficient. Can you suggest any other approach or a workaround?', 'comment_created': datetime.datetime(2021, 6, 16, 11, 55, 33, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 671292851, 'comment_body': 'this is a tough one, because [the Web Audio clock is separate (and more precise) than the JS clock](https://www.html5rocks.com/en/tutorials/audio/scheduling/).\r\n\r\nI think using `getValueAtTime` (which is not built into the Web Audio API, but comes from using a [Tone.JS](https://tonejs.github.io/docs/14.7.77/Signal#getValueAtTime) Signal and is based on the Web Audio clock) is a good approach. But it only works for parameters that utilize the Tone.JS Signal.\r\n\r\nI wonder if the reason it fails sometimes is that we don\'t pass a raw AudioContext time to PolySynth.play (or to any methods). Instead, we pass a ""time from now"" of zero. ""now"" is calculated within the play method here\r\nhttps://github.com/processing/p5.js-sound/blob/a74dd7eadba27a1e27c46cc7b523faf1b2867dc5/src/polysynth.js#L254 and I wonder how different it is from the ""now"" that we use in the test?', 'comment_created': datetime.datetime(2021, 7, 16, 14, 20, 4, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 671293380, 'comment_body': ""for parameters that don't have `getValueAtTime` I think `setTimeout` is reasonable"", 'comment_created': datetime.datetime(2021, 7, 16, 14, 20, 43, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 671294129, 'comment_body': 'got it. It would sure be useful if that method returned a Promise or had a callback', 'comment_created': datetime.datetime(2021, 7, 16, 14, 21, 42, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 671295163, 'comment_body': 'ah, that would definitely add some latency!', 'comment_created': datetime.datetime(2021, 7, 16, 14, 23, 4, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 671295543, 'comment_body': 'up to you!', 'comment_created': datetime.datetime(2021, 7, 16, 14, 23, 35, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 671417426, 'comment_body': 'Yeah, \r\nwhile exploring that ""now"" can be different in different cases, I found out that\r\nthe ""now"" in polysyth.js(noteAttack) and the ""now"" in the test cases is actually coming out to be same as the function is being called while tests are being executed.\r\nBut, the time is being different in between the running of tests sometimes, hence sometimes failing the test.\r\nI am adding a commit to this PR which fixes this bug :)\r\n', 'comment_created': datetime.datetime(2021, 7, 16, 17, 29, 22, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 671490314, 'comment_body': 'yes @satyasaibhushan , interesting solution there in part-4! :shipit: ', 'comment_created': datetime.datetime(2021, 7, 16, 19, 49, 29, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}]","[{'commit_sha': '54c45663e93546120fc2c379810ab1260b4e2449', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b60962f84a3eb68223edf7e74c446cce40399ed', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f2d824fb87f1900aa5e86cd0517218c1629cabb', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04265ea1fb2a305a5bfcd67dee7b9eb4db13b37f', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45773687e9d735795b95b42ddfd9ed3f49c611bf', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}]",Sai Bhushan,40578313,,User,,30,,1,4
671682522,(Gsoc'21) (Week-2) Fixes mic issues in recorder example,"Fixes #627,
Fixed the example in both the examples folder's file and also the inline code.

To make sure that the mic is called only after the user's interaction with the example, I've moved the mic setup code to the first click.
Also disposed the mic after the recording is completed.

##### Also adjusted the comments in the inline code accordingly and verified it by building locally.",True,628,https://api.github.com/repos/processing/p5.js-sound/pulls/628,https://github.com/processing/p5.js-sound/pull/628,closed,42,43,4,4,0,6,1,1,[{'name': 'enhancement'}],2021-06-16 16:56:15+00:00,2021-07-02 13:09:01+00:00,1368766.0,"15 days, 20:12:46","[{'comment_id': 654286101, 'comment_body': 'Converting vars to let would be a good improvement in code style.\r\nAlso the variable name state =0 is not so semantic about what it is doing ,\r\nMaybe a string like \r\nlet recordingStarted = true/false \r\nWould make sense or smth like that ', 'comment_created': datetime.datetime(2021, 6, 18, 9, 31, 4, tzinfo=datetime.timezone.utc), 'commenter': 'endurance21', 'type': 'User'}, {'comment_id': 654343184, 'comment_body': 'Agree with the vars to let part\r\n\r\nBut regarding the renaming of state, we need to cover a total of 3 cases. Hence, it cannot be bool.\r\nWe can overcome this in two ways\r\n1. we can maintain 2 booleans like isRecordingStarted and isResultPlayed and use them both to get 3 cases\r\n2. We can use something like a string, but we should set the value of the string after each conditional and use it as a condition for next step\r\n\r\nI think 2nd case would not be better than the current situation.It would be better if we change it to case 2, which can be debatable\r\nPlease share your thoughts/opinions on this :)\r\n\r\n', 'comment_created': datetime.datetime(2021, 6, 18, 11, 6, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 654364423, 'comment_body': ""I think using multiple books would be good instead of using string .\r\nLet's just keep in sleak and intuitive with bools \r\n:) "", 'comment_created': datetime.datetime(2021, 6, 18, 11, 44, 48, tzinfo=datetime.timezone.utc), 'commenter': 'endurance21', 'type': 'User'}, {'comment_id': 656344911, 'comment_body': 'I agree with @endurance21 on updating `var` to `let`.\r\nRegarding the `state` variable, since it was originally defined that way I would touch the logic of the example. What I definitely suggest is to make the comment after the definition of `state` more explicit, like:\r\n\r\n```js\r\n// mousePress will increment from state = 0 (Record), to state = 1 (Stop), to statue = 2 (Play)\r\n```', 'comment_created': datetime.datetime(2021, 6, 22, 15, 38, 29, tzinfo=datetime.timezone.utc), 'commenter': 'guillemontecinos', 'type': 'User'}, {'comment_id': 657131739, 'comment_body': ""Hey I've implemented the 2 bools in a separate commit.\r\nIf you like that approach better, you can include while merging or else you can leave it out "", 'comment_created': datetime.datetime(2021, 6, 23, 14, 0, 53, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 657133841, 'comment_body': ""Yeah,\r\nI've implemented it in the 2nd commit,\r\nif the 2 boolean approach is not merged and we are left with a state variable, it will be retained in the code\r\n"", 'comment_created': datetime.datetime(2021, 6, 23, 14, 3, 5, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}]","[{'commit_sha': 'a4affd2347149311d8f3d3c6a86da27e462d0a20', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cdf255125efc29a61c16ac9aa0be677cd0962d4', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '989ffa9f76283a8defd23e0fa7581cf0bc5d8080', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '594f8eae7518d0b729c74d1f1c4ec219006832f5', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}]",Sai Bhushan,40578313,,User,,30,,1,4
687413228,"(Gsoc'21) (Week-3,4) Adding new tests for uncovered files","Added new unit tests for all the uncovered 16 files.

I left some tasks/ tests to be written as a todo in some files, which I will get back to in a future PR.

###### I also made some small corrections to some examples in two commits.
",True,632,https://api.github.com/repos/processing/p5.js-sound/pulls/632,https://github.com/processing/p5.js-sound/pull/632,closed,1335,4,17,16,0,25,1,1,[{'name': 'enhancement'}],2021-07-11 23:44:51+00:00,2021-08-19 15:43:34+00:00,3340723.0,"38 days, 15:58:43","[{'comment_id': 689983208, 'comment_body': ""```suggestion\r\n      it('connects to p5.soundOut when no arguments are provided', function () {\r\n```\r\n\r\njust observing that this is what happens when no arguments are provided\r\n\r\nhttps://github.com/processing/p5.js-sound/blob/17987e714cf5bce6904e31912603a0d640e8d0c9/src/gain.js#L106-L107"", 'comment_created': datetime.datetime(2021, 8, 17, 2, 14, 22, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 689984318, 'comment_body': ""these look like the same `expect`'s that were part of the AudioContext test. I wonder if they could be abstracted to a method wherever we need to verify that there is an AudioContext."", 'comment_created': datetime.datetime(2021, 8, 17, 2, 17, 33, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 689986027, 'comment_body': ""```suggestion\r\n  it('can be started and stopped with delay', function (done) {"", 'comment_created': datetime.datetime(2021, 8, 17, 2, 22, 38, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 689988427, 'comment_body': '```suggestion\r\n        expect(metro.metroTicks).to.be.above(ticks);\r\n```\r\n\r\nIn an ideal world we would test that the value is equal to an exact value. But since we are using the JS clock\'s setTimeout, which is not in sync or as precise as the AudioContext time, we can\'t really know what that value will be, but ""greater than"" feels more specific than ""not equal"" which could mean lower or higher.', 'comment_created': datetime.datetime(2021, 8, 17, 2, 29, 56, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 689991115, 'comment_body': 'it might help with garbage collection to add an `afterEach` to call the ""dispose"" method which removes references to the Web Audio nodes freeing up those resources for garbage collection.\r\n\r\nBut if things are running just fine so far, maybe that\'s not necessary.', 'comment_created': datetime.datetime(2021, 8, 17, 2, 37, 59, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 689992064, 'comment_body': ""```suggestion\r\n  it('can be initialized without any arguments', function () {"", 'comment_created': datetime.datetime(2021, 8, 17, 2, 40, 51, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 689992658, 'comment_body': ""```suggestion\r\n  it('can be initialized with arguments', function () {"", 'comment_created': datetime.datetime(2021, 8, 17, 2, 42, 40, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 689994427, 'comment_body': 'Big +1 to this TODO!\r\n\r\nThis test is really just testing that the method can be called without throwing an error, which is useful, but not nearly as useful as testing the behavior of the method, which is easier said than done!', 'comment_created': datetime.datetime(2021, 8, 17, 2, 48, 10, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 689994868, 'comment_body': '```suggestion\r\n', 'comment_created': datetime.datetime(2021, 8, 17, 2, 49, 23, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 689999519, 'comment_body': 'really appreciate the detailed unit tests for this class, you dug deep here!', 'comment_created': datetime.datetime(2021, 8, 17, 3, 4, 23, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 690000919, 'comment_body': 'probably out of scope for the summer, but this could be a fun project', 'comment_created': datetime.datetime(2021, 8, 17, 3, 9, 7, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 690001090, 'comment_body': '```suggestion', 'comment_created': datetime.datetime(2021, 8, 17, 3, 9, 37, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 690001787, 'comment_body': ""```suggestion\r\n      pulse.stop()\r\n```\r\nit doesn't seem worth testing with delay if the `.started` property that we are testing with below doesn't respect the delay"", 'comment_created': datetime.datetime(2021, 8, 17, 3, 11, 48, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 690002208, 'comment_body': ""```suggestion\r\n    it('can be started and stopped with delay', function (done) {\r\n```"", 'comment_created': datetime.datetime(2021, 8, 17, 3, 13, 19, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 690004595, 'comment_body': 'good idea to utilize the `getValueAtTime` method where possible here!', 'comment_created': datetime.datetime(2021, 8, 17, 3, 21, 9, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 690064664, 'comment_body': 'Yep, looks good', 'comment_created': datetime.datetime(2021, 8, 17, 6, 13, 57, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 690075633, 'comment_body': 'I am surprised to find out that metro does not have a dispose function. What should I do?\r\nmay be clear out the variable?', 'comment_created': datetime.datetime(2021, 8, 17, 6, 35, 47, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 690077072, 'comment_body': 'Sorry for the spelling mistakes :}', 'comment_created': datetime.datetime(2021, 8, 17, 6, 38, 28, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 690083424, 'comment_body': 'Agreed', 'comment_created': datetime.datetime(2021, 8, 17, 6, 50, 8, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 690083637, 'comment_body': 'Opps ', 'comment_created': datetime.datetime(2021, 8, 17, 6, 50, 32, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 691607955, 'comment_body': 'ah, that sounds like an issue that should be handled in a separate PR, then!', 'comment_created': datetime.datetime(2021, 8, 18, 21, 12, 59, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 691608835, 'comment_body': ""no worries, I'm also prone to typos in strings/comments. It might help to add a spell check plugin for your IDE"", 'comment_created': datetime.datetime(2021, 8, 18, 21, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 692183183, 'comment_body': ""Yeah, I didn't know how to test them."", 'comment_created': datetime.datetime(2021, 8, 19, 14, 48, 57, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 692242802, 'comment_body': 'Yeah, I tried but the function setValueAtTime is difficult to test as the value is set at that particular time.', 'comment_created': datetime.datetime(2021, 8, 19, 15, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 692245979, 'comment_body': 'Yes, actually. We would use that very often. also we can add similar functions for checking gain nodes and etc.\r\n\r\nWill add it if I got time or will at least add a issue/TODO regarding this.', 'comment_created': datetime.datetime(2021, 8, 19, 15, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}]","[{'commit_sha': 'eef4ce5f763ec2e8251186b59b616dd70fb4ca83', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '329ad99b742a53ddb60b743e4c30e54ec272c9ea', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed98f4c81584f86a29b6115fc3e207bf287828be', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '493639c44b359ac0ad76ec83b227c8054227a6cc', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50c6fadd4100040104b494285eba1a278471b029', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa5eb96660f4818127c77ca2c638e07b8f364a35', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bb37012191b05b2e5cd306aa2a8b190b714f904', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70997552ac3685a828badecea05641c06095163c', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68014bda4cb506c893f6f9beb5fe768ba0a0cc17', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8f58f089689a185582fd83f8d2ddde986c580e0', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ed68eb69911702f13b86ae2d9831688e1f43e7e', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c8f5ff791adcd728e1532cb54483dff159ede1d', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cc8dda4489cf2804e03410e5cf7555d0323fd54', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd60ed97701c0c37648bf30f60a10abec4a6f9cf', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08b6e313e89eb24972527c8ec0bad5aeee48a226', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a062a88638633041d82e84078ea41f2eaf4dfb6b', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}]",Sai Bhushan,40578313,,User,,30,,1,4
699110298,"(Gsoc'21) (Week-6,7)Adding tests for covered files ","Added unit tests for all the 18 files which are partially covered 

This PR is built upon the [previous](https://github.com/processing/p5.js-sound/pull/632) PR.

I also fixed some potential bugs in some commits.

I followed a particular style (hierarchy ) for all the tests written in this period, which can be changed according to the suggestions.",True,636,https://api.github.com/repos/processing/p5.js-sound/pulls/636,https://github.com/processing/p5.js-sound/pull/636,closed,3268,436,26,24,3,5,1,1,[{'name': 'enhancement'}],2021-07-29 01:11:37+00:00,2021-08-23 12:38:19+00:00,2201202.0,"25 days, 11:26:42","[{'comment_id': 693260935, 'comment_body': ""it's not clear to me why this was commented out. It looks like this is meant to be the default behavior of the `connect` method when no arguments are passed in, and I don't see that in the unit tests so it's not clear to me why this would be commented out (and better to delete it if it is meant to be commented out!)"", 'comment_created': datetime.datetime(2021, 8, 20, 23, 17, 24, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 693262331, 'comment_body': 'nice improvement here, since `this.bins` has a setter that also updates `this.analyser.fftSize` 💯 \r\nhttps://github.com/processing/p5.js-sound/blob/17987e714cf5bce6904e31912603a0d640e8d0c9/src/fft.js#L92-L98', 'comment_created': datetime.datetime(2021, 8, 20, 23, 22, 51, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 693262500, 'comment_body': '```suggestion\r\n```\r\n\r\nsome repos have a linting rule to remove console.logs which I always find helpful to clean up my own 😄 ', 'comment_created': datetime.datetime(2021, 8, 20, 23, 23, 34, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 693709333, 'comment_body': ""Yeah, I agree that it is the default behaviour. But it's just that there is no panner node for amplitude(may be removed). To remove the error, I just commented it\r\n\r\nDo you want me to remove the lines or just post an issue?"", 'comment_created': datetime.datetime(2021, 8, 23, 6, 59, 3, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 693990643, 'comment_body': 'ah, good catch!\r\n\r\nThis sounds like a separate issue then, ""Amplitude connect method with no arguments should connect to main output."" \r\n\r\nIn general, it\'s best not to leave commented-out code in the code base.', 'comment_created': datetime.datetime(2021, 8, 23, 13, 50, 44, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}]","[{'commit_sha': '29faa8e7a117c962284bdcda6be4b3ca6d3550db', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '620ef5f71e46d7ef2c0bec90793b03be61fb4bdb', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '969778218a0ebef90ab6090e6e6fc14affe2da20', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72e5eebc4c45522018c9fc78ff9de795d2c53e56', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ba7eca2b8bd110d6f98567ac9ef8d659ad3ab78', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6b159156e1cb91a4b4329355217009c0eac65dd', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b05fe708f1a3fd2daca81deaf64a5b9972cda22', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57baa73020c229ca9b3ec764f531b9141a24fbc2', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f3f0b64dde091ed373ae510d76ff04058b3d579', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f26085f929559525cd9f30fc5d3f3f14d309e4c', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '835730560e67d6410c7b29cce76605385d1b0904', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab6caccd4a061dd9517ce0e58fc487a738f61874', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f95c67860abf6ff87450ea5795b2989cccbb9c80', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6738c2cc9c48f710691fb88236e6ead852b89f8b', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff5d4c971a43382353d2bff727c66e523e1fde6f', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99f3eb27f23e800a09e4bb7384811c0ba9027b6c', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ca621a79e671a9084691eb30724757999e22598', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f690db40357de03060fbfa902a76bcd250b14059', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e87433cbff9b2c8d1d1583831a6b9e00f069807', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '861714458924cf6bb1cb0026da894b45cf7471ae', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '275adc5466bd8c402b932027343d5ab5df6cb174', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a66aa0ebd36cdf05f10a8781cd196fac5ac2673c', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84122e70e385a18b7c51086202a0359013193375', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '216427fd4934d2896226c1cb56018c8fc9e782a7', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}]",Sai Bhushan,40578313,,User,,30,,1,4
706618952,Bug fixing,"I isolated the commits from my previous 2 PRs(week-3,4 week-6,7) that consists of various bug fixing that I felt are potential bugs.",True,639,https://api.github.com/repos/processing/p5.js-sound/pulls/639,https://github.com/processing/p5.js-sound/pull/639,closed,23,37,7,7,2,7,1,1,[{'name': 'enhancement'}],2021-08-09 15:24:14+00:00,2021-08-16 12:35:50+00:00,594696.0,"6 days, 21:11:36","[{'comment_id': 685642485, 'comment_body': ""I'm curious what bug this fixes? It would be helpful to see the corresponding test that helped you identify this as a solution.\r\n\r\nIn any case, good call to re-use the method rather than duplicate code!"", 'comment_created': datetime.datetime(2021, 8, 10, 2, 22, 3, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 685645781, 'comment_body': 'yikes, great catch here!', 'comment_created': datetime.datetime(2021, 8, 10, 2, 31, 53, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 685646727, 'comment_body': ""```suggestion\r\n      if (i > 0) {\r\n        this.parts[i - 1].nextPart = this.parts[i];\r\n      }\r\n```\r\n\r\nnice solution/bug fix here!\r\n\r\nI prefer to use brackets but that's just my personal preference for if statements"", 'comment_created': datetime.datetime(2021, 8, 10, 2, 34, 46, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 685648181, 'comment_body': ""I'm curious what test that you added to uncover this bug (I can take a look at your other PR to find out! But in hindsight / next time, it would've been useful to include the unit tests and bug fixes in the same PR)"", 'comment_created': datetime.datetime(2021, 8, 10, 2, 39, 20, tzinfo=datetime.timezone.utc), 'commenter': 'therewasaguy', 'type': 'User'}, {'comment_id': 686543491, 'comment_body': 'Yeah, Sorry for that. It does not fix any bug. Just rearranged the code\r\n', 'comment_created': datetime.datetime(2021, 8, 11, 6, 44, 56, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 686576335, 'comment_body': 'I do not think a particular test uncovered this. While testing the function to include a case that if a note is not provided, it should reset all the notes. It seemed logical to reset the newest value as all the notes are being erased', 'comment_created': datetime.datetime(2021, 8, 11, 7, 37, 3, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}, {'comment_id': 686577030, 'comment_body': 'Actually, I think we should also reset the oldest value also right?', 'comment_created': datetime.datetime(2021, 8, 11, 7, 38, 4, tzinfo=datetime.timezone.utc), 'commenter': 'satyasaibhushan', 'type': 'User'}]","[{'commit_sha': 'ecf049e36e6e3de1cae3a7dce12768a3678d23de', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90920701a9b58303cf0c5fb262c44eba57aaa7c4', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1db3db8666f86bb2e88aa98a3261e00f5a9f7ef9', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5002d0a74bcfa64c78cc3c85813302c5cbfc8548', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5afe2c089e0d5e9880c37693dbd8c785d416f93', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '588da6b1e910a4f8cda65badc99d81a9315261b9', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2a3c715deedc6f87127f42ccdeb98f51636c49c', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}]",Sai Bhushan,40578313,,User,,30,,1,4
717945245,"(Gsoc'21) (Week-8,9,10) Adding headless testing","* Added mocha-chrome as a grunt task, which is borrowed from p5.js.
* I changed the test filing architecture and the initialisation of expect in all test files so that all the files goes to one `spec` array.
* Added karma-js as it seems more consistent with tests.
* We currently, cannot use it in github automations as it is still not 100 % reliable. Some tests are still failing in some cases.
* We can add retry functionality to some tests which can be identified as failing and maybe one day in future, we can add it to github actions.",False,641,https://api.github.com/repos/processing/p5.js-sound/pulls/641,https://github.com/processing/p5.js-sound/pull/641,open,4233,547,44,12,2,0,1,1,[{'name': 'enhancement'}],2021-08-23 15:34:40+00:00,,0.0,,[],"[{'commit_sha': 'c0aea015b06e22f1dafa44310d371be61a5b31b0', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2677bec08dc0adbef114f73c20c0c3936926ce53', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fed80f7fa465a602040856e96e962f6d33979442', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dffca87a2beac54ccaaee7c26c96d3000685d541', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b27c16244506a2ed1f8a2a5ef2644f71d8438337', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '945a2d16466989d2bba0253b2e25cc89e49d04d9', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02baf28d4224086322dd92a9ae2070ba1d07be8b', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '194485a55d8ff5e747a00c18152b8efe7d198540', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7137dff6b59e67182a0a47392206245e31712b2b', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc50494cb18aa920aa89066495bf14c80426349a', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2377cf4a1403ee63e971f581aff2cd0b30b90992', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '074d8f140a52445d47c21a09d130bc5d10db72d7', 'committer_username': 'satyasaibhushan', 'committer_name': 'Sai Bhushan', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 25, 18, 53, 22, tzinfo=datetime.timezone.utc)}]",Sai Bhushan,40578313,,User,,30,,1,4

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
21714677,p5.js-sound,processing/p5.js-sound,JavaScript,682,868,85,74,1217,10,7,10,"[{'id': 722630494, 'number': 643, 'closed': datetime.datetime(2021, 8, 30, 16, 30, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 30, 16, 21, 20, tzinfo=datetime.timezone.utc), 'time_taken': 559.0, 'time_delta': '0:09:19', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 717945245, 'number': 641, 'closed': None, 'created': datetime.datetime(2021, 8, 23, 15, 34, 40, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 4233, 'deletions': 547, 'state': 'open'}, {'id': 706618952, 'number': 639, 'closed': datetime.datetime(2021, 8, 16, 12, 35, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 15, 24, 14, tzinfo=datetime.timezone.utc), 'time_taken': 594696.0, 'time_delta': '6 days, 21:11:36', 'additions': 23, 'deletions': 37, 'state': 'closed'}, {'id': 699110298, 'number': 636, 'closed': datetime.datetime(2021, 8, 23, 12, 38, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 29, 1, 11, 37, tzinfo=datetime.timezone.utc), 'time_taken': 2201202.0, 'time_delta': '25 days, 11:26:42', 'additions': 3268, 'deletions': 436, 'state': 'closed'}, {'id': 687413228, 'number': 632, 'closed': datetime.datetime(2021, 8, 19, 15, 43, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 11, 23, 44, 51, tzinfo=datetime.timezone.utc), 'time_taken': 3340723.0, 'time_delta': '38 days, 15:58:43', 'additions': 1335, 'deletions': 4, 'state': 'closed'}, {'id': 671682522, 'number': 628, 'closed': datetime.datetime(2021, 7, 2, 13, 9, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 16, 16, 56, 15, tzinfo=datetime.timezone.utc), 'time_taken': 1368766.0, 'time_delta': '15 days, 20:12:46', 'additions': 42, 'deletions': 43, 'state': 'closed'}, {'id': 668066936, 'number': 626, 'closed': datetime.datetime(2021, 7, 16, 20, 19, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 12, 3, 25, tzinfo=datetime.timezone.utc), 'time_taken': 3053764.0, 'time_delta': '35 days, 8:16:04', 'additions': 869, 'deletions': 509, 'state': 'closed'}, {'id': 667186866, 'number': 625, 'closed': datetime.datetime(2021, 6, 16, 4, 10, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 10, 18, 32, 21, tzinfo=datetime.timezone.utc), 'time_taken': 466693.0, 'time_delta': '5 days, 9:38:13', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 611820701, 'number': 597, 'closed': datetime.datetime(2021, 4, 8, 19, 49, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 8, 19, 19, 11, tzinfo=datetime.timezone.utc), 'time_taken': 1822.0, 'time_delta': '0:30:22', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 572743606, 'number': 580, 'closed': datetime.datetime(2021, 2, 12, 19, 55, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 12, 19, 49, 4, tzinfo=datetime.timezone.utc), 'time_taken': 364.0, 'time_delta': '0:06:04', 'additions': 0, 'deletions': 163, 'state': 'closed'}, {'id': 572720441, 'number': 579, 'closed': datetime.datetime(2021, 2, 12, 19, 8, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 12, 19, 3, 52, tzinfo=datetime.timezone.utc), 'time_taken': 302.0, 'time_delta': '0:05:02', 'additions': 0, 'deletions': 10, 'state': 'closed'}, {'id': 572712425, 'number': 578, 'closed': datetime.datetime(2021, 2, 12, 18, 56, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 12, 18, 46, 34, tzinfo=datetime.timezone.utc), 'time_taken': 571.0, 'time_delta': '0:09:31', 'additions': 0, 'deletions': 10, 'state': 'closed'}]"
