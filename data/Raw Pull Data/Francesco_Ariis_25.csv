pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
975299968,`cabal check` testuite: add sanity checks,"`cabal check` testsuite: sanity checks (i.e.: [this bit](https://github.com/haskell/cabal/blob/master/Cabal/src/Distribution/PackageDescription/Check.hs#L167)).

Missing:
- “no internal unnamed library” (see #8247)
- unsupported benchmark/unsupported testsuite (cabal correctly chokes on parsing)
- missing main from testsuite/benchmark (see #8246)

---
Please include the following checklist in your PR:

* [X] Patches conform to the [coding conventions](https://github.com/haskell/cabal/blob/master/CONTRIBUTING.md#conventions).
* [X] Any changes that could be relevant to users [have been recorded in the changelog](https://github.com/haskell/cabal/blob/master/CONTRIBUTING.md#changelog).
* [X] The documentation has been updated, if necessary.

Please also shortly describe how you tested your change. Bonus points for added tests!
",True,8248,https://api.github.com/repos/haskell/cabal/pulls/8248,https://github.com/haskell/cabal/pull/8248,closed,499,0,72,22,8,0,3,0,"[{'name': 'attention: needs-review'}, {'name': 'cabal-install: cmd/check'}, {'name': 'merge me'}]",2022-06-22 15:26:54+00:00,2022-06-28 14:37:37+00:00,515443.0,"5 days, 23:10:43",[],"[{'commit_sha': '73e655aeb5c2b74bcdb4295d89a9438d56a93635', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4fb931e05f6c8ee8d5642dc781d4b5cf0a4c4c1', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55beba2e656a0af983446822b1bbbd2509c7fe08', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '464ea041d843d0e3cd75e9cf49967fc64481dae6', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b93f3b63a26a1382cad4908a75bbfd2d768a6595', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'caf2da1e720d225abc3368da9af6d12b003e8763', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a95843032881da17a99d507579d435e67a6c926', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3106faeeefa66aaf3ef215d43984d92bb97b6277', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35fcb0eb121407626807f1928f85f35d8f80b977', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '395f94dbd3f294a528d8e8c299f4249396c2bd31', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27384d367e14417ef19a383c603241bab5bc4e8f', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43f615b4236eee932fd6cd876b055d1ff1ce90db', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80b10b859c5ca03d1380ddf9ddf19c87837e1d14', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04d418c12bd390cffa835c9709c1324803b69d84', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65b4d2b3254e8f83c1301d1e5b5faeb322de47e6', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ce5531d2a2540362af3725bb2542b774a6e06a0', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e862dc5962db5b1de8e623244bd17fb4c0d1955', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db5dfe5f6d68226a872facaf87020630260716e0', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf21e5c095f0ac3759c24e007968fdb701edd09b', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '603092e7462889ea13322077a1b2678213991630', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '318fb29079a52ffadfb2ee2a5a90faaaa657e4d9', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '156fb34c6209b4e309997d595d2768b92d8e5823', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}]",,87714215,,User,,4,,0,3
977080336,`cabal-check` testsuite: add Package/File tests,"These tests cover all `cabal check` checks not already present in #8248.

It is another step towards #8211; the total number of tests added in the two patches is ~~106~~ 105.

---
Please include the following checklist in your PR:

* [X] Patches conform to the [coding conventions](https://github.com/haskell/cabal/blob/master/CONTRIBUTING.md#conventions).
* [X] Any changes that could be relevant to users [have been recorded in the changelog](https://github.com/haskell/cabal/blob/master/CONTRIBUTING.md#changelog).
* [X] The documentation has been updated, if necessary.

Please also shortly describe how you tested your change. Bonus points for added tests!
",True,8250,https://api.github.com/repos/haskell/cabal/pulls/8250,https://github.com/haskell/cabal/pull/8250,closed,1903,0,290,83,1,0,3,0,"[{'name': 'Cabal: tests/package-tests'}, {'name': 'cabal-install: cmd/check'}, {'name': 'squash+merge me'}]",2022-06-23 12:23:25+00:00,2022-07-01 15:14:47+00:00,701482.0,"8 days, 2:51:22",[],"[{'commit_sha': 'b3c647aeb633a1403116c1234eb40193605795df', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77f78760b2b2c647b29af49750ddb3e99a1028c1', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2f27b9281d5968037a9c5597d4269eb611952a3', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad4cb38216329add1cd8fc91d93e59186f6d0ae9', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '397550d11204f5bc5984c2c28a433f9bff8556b0', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6743050efbee86e3ee9f04eace5bc62cc2103486', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '281982963c6066f40c91b02e21b1ce37e41f6498', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a0ceb8133f00853738a7c8cb6b91e0ce441249a', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b54b7d6cf6efc7466a86862448b4d259cb248fe4', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70136f40e693d384ac1f5f508a006df377aab331', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b778b9f7a79a38346616b499b80c4425d1039562', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '092d3f9f89dc5e9e35d33871a432bdbcc234262d', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c8ba7328388b3f7a1d5f805c8f1f7a7e0fcc4f0', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02eccf86bab81f0ea607602609e0c53bec898ae7', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a531b087c3cc0bc73fda5298adb38c67dbe63516', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a258ad6c9d65977eaef9cd32dbb593bb99f1f788', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e173e482470a9f01456585a559907a2b0fd8d10', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23589cdab8f1b36647f436d84a7e8d333516686a', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '956c62c8b1c34033ae7dfde69e2253853308e67e', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbde4296b0b2a9d641f75fddc12112c690f8fe68', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28a45ed6353e20b5f484f427467b924ae9b7f53e', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9673c344c6a450f49f402e6e573ce824c8ae28e2', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a79ce58ea0f49625834eb970a4065cfb1794d91e', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd188fb8b0499286fa78cbd1c1b8ce74d51a4c68d', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0407e3a90266a2c9379db15124c544c1dd05516', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83a8cd524de3df1f2ae7ed30de6bcaf27cb5168a', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6e9fb4d91871757385c2d1035d775e33569f8cc', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac5c3488815e93818cc67aea98845c02f2bc3c44', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24ff2097139b0faaf539ec2422b1d3f5db9ad3f8', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfe638c7f58d57b292e3201e2fbbc15693c9b9be', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bdc854cc6dc60a4c244199b89437eee42ecc2b9', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b43945db6793adeb1455a749d90da4c6d38835e', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a2a83d0012f809270b8dee983d788cdca0e80fe', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94c97d816e49b54217c7de5601d7e8df66418fb1', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d340a89a704e7cc4a778a61f1381001307969a7', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8977f0fc19ec99c7031f580977e88284cab0fa64', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c3ba9e59267326b59953fa57a3a1edc9e85a344', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3e9fdcf5c3ab3cfad5416ccbb68f11aafb1dc0b', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2a4bfacce7f13f1f6cfd9bf1a27cfd97b8ccf48', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d9097252cdbd4541c8559e33d88b4611f6367d5', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '465cacb4b79fd7316fba80e8ac94e31557c2e7a6', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aad155cdeeb179e5b18ca8db5f284fe39e53630c', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d0cb30dc24b16f7bd53c0bbc01c6ba88b1bed4c', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c1773ec1cfbfec0427cb0c1804085e4e2cc231b', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8740b8d328cad307d03e1edc1d18e4c09e981cb', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3badcd5c59eaf08e6178a12da162edeaf8aac7ef', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fead43d1e9ffbaf19086eea02447ce11296bf4d6', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b53fc6a02862ef3e4a12de46bfa578dee6bef5f', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7c8480d6f04854d04eda2075a0a7e4fc3f25e4f', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf6eb493866d052d190709b49a641566b9728f92', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '641a1faa82c7d268548768547f2d1edb82931553', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec8d19bc91e773f971e135bfe5d87d0aab350d80', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57a7d8dedb8bb0cd0bf8b14e677be246e5f1572f', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e9c6f2ef270eef5436a385b77a341877daea925', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb565e536dffc442fbdb68c647c7725cdf6263de', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85854d133b6d602e263be030685b104e03542e79', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1d48dc7e799415eab825b56549dd15486c9620b', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6986ca1c11845242313a7a33b27faeaf3d407bd', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23504aad27c0ff775627f88f1276d7a08414a2a9', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4741c4311bb6ab79a44109b148aec08627c13b35', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '654d3af1fde65193bc18720f452274ecee1cfb3d', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3a4130c2dc7844ab98d8e84ee6b131887584b76', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e17c0c52e7fd58bce496bd174731ad59ecdf5917', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea3ba05ea56ced99c50a17a8efb44f2400b75657', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f44c658ae56ef928d5d8b1550158a5339d2491b', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71730c22c28bb714824da40cbf714bbaaa7469b1', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '196f0ef74d76d0bb5ad2474764981677484a10b9', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a98385ce04540f6bfa86fc18d2057a40e83a5cb7', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb1200d793ab7afb6d0d1b958c0736a7e3ccbfcc', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5884b23682ffa89115b3cb71fc0a341c366c55b', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea2d8515c66d103c84671ad390f430bec3cb0989', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c4adda2e358c38a7bef24fba4c0616935e617a7', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cb879b1ea9e8ab8d05d563ec609caccef07eabd', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ca98b7dd6c93166f6d01f3debc7a91d9e3fd077', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64f055958296932955ea158e502a6265f4d76849', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f2a8ba821b49b1533c405ab65ea6270d1b6e7c3', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54dbef35859b4ddc19920e0c0601ab6c4fded47f', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6cfa3cd34ab5ad8a9fffe6a8c1ca6b84308011d', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc46086c7190420452057afa91c9768ee731c19a', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe81390ba83c68d2aaa15000a4384bc79e7e5ada', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '560e0490477f4501b56ba5acfd2661700e08fb74', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0250b4a29c5e38eee45ee4c5b3007c9edcfe865d', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50138ecf21e4afacc2fe6120bfd76e12130902dd', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}]",,87714215,,User,,4,,0,3
987571314,`cabal check`: add typed errors,"Towards #8211 

---
Please include the following checklist in your PR:

* [x] Patches conform to the [coding conventions](https://github.com/haskell/cabal/blob/master/CONTRIBUTING.md#conventions).
* [x] (no user-relevant change)
* [x] The documentation has been updated, if necessary.

Please also shortly describe how you tested your change. Bonus points for added tests!
",True,8269,https://api.github.com/repos/haskell/cabal/pulls/8269,https://github.com/haskell/cabal/pull/8269,closed,929,613,37,3,1,10,3,0,"[{'name': 'attention: needs-review'}, {'name': 'cabal-install: cmd/check'}, {'name': 'squash+merge me'}]",2022-07-05 15:29:14+00:00,2022-07-20 20:57:14+00:00,1315680.0,"15 days, 5:28:00","[{'comment_id': 914442318, 'comment_body': 'Small comment:\r\nSuch list comprehensions are elegant but not very robust in terms of long-term software development.  Adding a new relevant constructor besides `PackageBuild{Impossible,Warning}` will go unnoticed.  (Also, this style needs several traversals of the same list.)\r\nA better style imo is to traverse the list once with `mapMaybe` (with a auxiliary function returning `Maybe (Either e w)`) and then split it using `partitionEithers`.', 'comment_created': datetime.datetime(2022, 7, 6, 5, 57, 59, tzinfo=datetime.timezone.utc), 'commenter': 'andreasabel', 'type': 'User'}, {'comment_id': 925296245, 'comment_body': 'I had to add a number of `Ord` instances after structuring `check` errors (before: sorting was done on output `String`s). It seems to me the new `deriving (Ord)` will not cause problems (most of the types are sum types).', 'comment_created': datetime.datetime(2022, 7, 20, 7, 59, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ffaf1', 'type': 'User'}, {'comment_id': 925299098, 'comment_body': 'I don’t like `Show` instances that cannot be `Read` back, but since this is a public interface (used by `hackage-server`, `stack` etc.) I did not modify this behaviour.', 'comment_created': datetime.datetime(2022, 7, 20, 8, 2, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ffaf1', 'type': 'User'}, {'comment_id': 925301435, 'comment_body': 'Introducing `MissingInternalExe` highlighted a bug, I corrected it and accepted the new test output.', 'comment_created': datetime.datetime(2022, 7, 20, 8, 5, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ffaf1', 'type': 'User'}, {'comment_id': 925302396, 'comment_body': 'Minor rewording due to refactoring two string errors in one data constructor.', 'comment_created': datetime.datetime(2022, 7, 20, 8, 6, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ffaf1', 'type': 'User'}, {'comment_id': 925303385, 'comment_body': 'Output is the same, lines are sorted differently (before: output string sorting).', 'comment_created': datetime.datetime(2022, 7, 20, 8, 7, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ffaf1', 'type': 'User'}, {'comment_id': 926685094, 'comment_body': ""Isn't introducing `show` here backwards?  The aim should be to reserve `show` for _Haskell_ representations of data, and use `pretty` or the like for user-friendly display."", 'comment_created': datetime.datetime(2022, 7, 21, 13, 36, 20, tzinfo=datetime.timezone.utc), 'commenter': 'andreasabel', 'type': 'User'}, {'comment_id': 926686833, 'comment_body': 'See below.  `Show` is for Haskell concrete syntax of data, for displaying to user use `pretty`. ', 'comment_created': datetime.datetime(2022, 7, 21, 13, 37, 50, tzinfo=datetime.timezone.utc), 'commenter': 'andreasabel', 'type': 'User'}, {'comment_id': 926744423, 'comment_body': 'Indeed indeed! I would have removed that Show instance *and* `explanation` accessor which is at risk of becoming partial in the future.\r\n\r\nI did not do it because the latter that would break `hackage-server` (they use `explanation`) and the former (maybe) other packages depending on Cabal (hackage-server? stack? some IDEs? — I cannot be sure about that because hunting `show`s in the wild is not as easy).\r\n\r\nIf we collectively decide it is a price worth paying, I will gladly do it! Indeed a `Show` that cannot be `Read` back is *not* haskelly at all!', 'comment_created': datetime.datetime(2022, 7, 21, 14, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ffaf1', 'type': 'User'}, {'comment_id': 926747639, 'comment_body': 'Ah, reading better, I undestand now: «do not introduce `show` in *internal* code». That is very reasonable. I can make a function for principled pretty printing and use it internally, if we decide to deprecate that `Show` instance later we can do it without rewriting some of the implementation.\r\n\r\nWill make a PR this evening or tomorrow. ', 'comment_created': datetime.datetime(2022, 7, 21, 14, 28, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ffaf1', 'type': 'User'}]","[{'commit_sha': 'ce013aafece6a29d964736ce9ea8af7982484a44', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '185cf37a85590bcd60634c0491ad26453412d4de', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a92c67045292eb62493d79aba25bfc6b2ae31308', 'committer_username': 'mergify[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 30, 10, 19, 51, tzinfo=datetime.timezone.utc)}]",,87714215,,User,,4,,0,3
1005841078,Add PackageCheck pretty print,"Both principled (we export, use a pretty printer) and pragmatic (we don't surprise programs depending on `Cabal` by modifying `Show` behaviour (yet)) stance.

---
Please include the following checklist in your PR:

* [X] Patches conform to the [coding conventions](https://github.com/haskell/cabal/blob/master/CONTRIBUTING.md#conventions).
* [X] Any changes that could be relevant to users [have been recorded in the changelog](https://github.com/haskell/cabal/blob/master/CONTRIBUTING.md#changelog).
* [X] The documentation has been updated, if necessary.

Testsuite runs fine.",True,8311,https://api.github.com/repos/haskell/cabal/pulls/8311,https://github.com/haskell/cabal/pull/8311,closed,15,5,4,1,13,0,3,0,"[{'name': 'cabal-install: cmd/check'}, {'name': 'merge me'}, {'name': 're: code quality'}]",2022-07-22 14:10:45+00:00,2022-08-28 15:26:43+00:00,3201358.0,"37 days, 1:15:58",[],"[{'commit_sha': 'cef8be72a25ff5eaae34acefab5f163b2e73c7e8', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}]",,87714215,,User,,4,,0,3
1035361164,Reimplement `cabal check`,"Reimplementing `cabal check`, closes #8211, #652, #2065.

For a detailed description of the problem at hand, the proposed solution, benefits and future work check [the explanatory article](http://ariis.it/static/articles/cabal-check/page.html).

Here I will only highlight bits to ease reviews. In brief:
- `cabal check` goes from “make a soup with `flattenPackageDescription`, check it” to “start from `GenericPackageDescription` and walk down, perform the appropriate checks near the relevant datatype”.
- Same goes for conditional blocks: the various `if`s inside a `.cabal` are merged in a single ball of mud no more. Rather we visit the `CondTree` in a principled manner, building the target from slices and then validating it in its appropriate context.
- Checks happen inside `CheckM m`, a wrapped `RSTW` transformer where `m` abstracts over some IO/.tar archive/VCS filesystem.
- the only API changes are one function removal (function which is not used nor in this repo, nor in `hackage-server`, nor in any `haskell` repo, nor in `stack`) and a signature change for `checkPackage`, eliminating a useless parameter. I tackled the rewrite with the idea to minimise disruption.

To the reviewer: a good way of approaching this is to to avoid the two “large diffs” files at first. Check first how other modules were impacted and the two preliminary patches. Then you can dive in `PackageDescription/Check.hs`:

```
-- ☞ N.B.
--
-- Part of the tools/scaffold used to perform check is found in
-- Distribution.PackageDescription.Check.Prim. Summary of that module (for
-- how we use it here):
-- 1. we work inside a 'Check m a' monad (where `m` is an abstraction to
--    run non-pure checks);
-- 2. 'checkP', 'checkPre' functions perform checks (respectively pure and
--    non-pure);
-- 3. 'PackageCheck' and 'CheckExplanation' are types for warning severity
--    and description.


-- ------------------------------------------------------------
-- * Checking interface
-- ------------------------------------------------------------

-- | 'checkPackagePrim' is the most general way to invoke package checks.
-- We pass to it two interfaces (one to check contents of packages, the
-- other to inspect working tree for orphan files) and before that a
-- Boolean to indicate whether we want pure checks or not. Based on these
-- parameters, some checks will be performed, some omitted.
-- Generality over @m@ means we could do non pure checks in monads other
-- than IO (e.g. a virtual filesystem, like a zip file, a VCS filesystem,
-- etc).
checkPackagePrim :: Monad m => Bool -> Maybe (CheckPackageContentOps m) ->
                    Maybe (CheckPreDistributionOps m) ->
                    GenericPackageDescription -> m [PackageCheck]
⁝
```


and you should find your way.

Testsuite added in #8248 and #8250 passes. As a proof of what can be done after the rewrite, this PR also:
- closes #7423.

If not merged by the time this is approved, #8441 and #8361 might need to be updated.

This patch is big, the logic of checks sometimes tricky, I expect breakage. I took care to minimise API change, this should make bugs pop up faster and allow me to fix them faster. Once everything is stable, features can be accomodated appropriately.

* [x] Patches conform to the [coding conventions](https://github.com/haskell/cabal/blob/master/CONTRIBUTING.md#conventions).
* [x] Any changes that could be relevant to users [have been recorded in the changelog](https://github.com/haskell/cabal/blob/master/CONTRIBUTING.md#changelog).
* [x] The documentation has been updated, if necessary.
* [x] QA notes: calling `cabal check` in your project folder should warn you about common mistakes, exit with 1 on more serious ones. 
",True,8427,https://api.github.com/repos/haskell/cabal/pulls/8427,https://github.com/haskell/cabal/pull/8427,closed,4697,3212,74,19,36,46,5,0,"[{'name': 'cabal-install: cmd/check'}, {'name': 'squash+merge me'}, {'name': 'merge delay passed'}, {'name': 'attention: needs-manual-qa'}, {'name': 'meta: big'}]",2022-08-24 11:43:05+00:00,2023-11-13 19:01:02+00:00,38560677.0,"446 days, 7:17:57","[{'comment_id': 978892961, 'comment_body': 'These (changes in `Type/`) are just a fix of the annoying `Semigroup` target instances (which crashed when the names of the target were the same).', 'comment_created': datetime.datetime(2022, 9, 23, 17, 13, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ffaf1', 'type': 'User'}, {'comment_id': 978893572, 'comment_body': '`checkPackage` checks the package, does not need an additional configured `PackageDescription` no more.', 'comment_created': datetime.datetime(2022, 9, 23, 17, 14, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ffaf1', 'type': 'User'}, {'comment_id': 978893959, 'comment_body': 'This and following are just output reordering.', 'comment_created': datetime.datetime(2022, 9, 23, 17, 15, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ffaf1', 'type': 'User'}, {'comment_id': 978895384, 'comment_body': 'This is reordering *plus* we correctly different warnings for different sections (a necessity if in the future we want to add line numbers too).', 'comment_created': datetime.datetime(2022, 9, 23, 17, 17, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ffaf1', 'type': 'User'}, {'comment_id': 978897443, 'comment_body': 'In the previous implementation the warning was truncated because of an uncaught `error`.', 'comment_created': datetime.datetime(2022, 9, 23, 17, 20, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ffaf1', 'type': 'User'}, {'comment_id': 1117996530, 'comment_body': ""```suggestion\r\n-- | Combine names in targets if one name is empty or both names are equal (partial function).\r\n-- Useful in 'Semigroup' and similar instances.\r\n```"", 'comment_created': datetime.datetime(2023, 2, 26, 0, 3, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ulysses4ever', 'type': 'User'}, {'comment_id': 1117996988, 'comment_body': ""This should probably be called `combineNames`? I know it doesn't really combine different names, only one name, but this may be too clever for its own good.\r\n\r\nAlso, I wish Haskell ecosystem had a guideline for naming partial functions (like a trailing `!` or `?` but alas these wouldn't lex)."", 'comment_created': datetime.datetime(2023, 2, 26, 0, 10, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ulysses4ever', 'type': 'User'}, {'comment_id': 1117997558, 'comment_body': 'How about guards instead of if/then/else?', 'comment_created': datetime.datetime(2023, 2, 26, 0, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ulysses4ever', 'type': 'User'}, {'comment_id': 1117997618, 'comment_body': 'maybe do the match right inside the argument list (5 lines above)?', 'comment_created': datetime.datetime(2023, 2, 26, 0, 18, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ulysses4ever', 'type': 'User'}, {'comment_id': 1117997838, 'comment_body': 'I prefer to avoid ""whitelist""/""blacklist"" these days. Instead I tend to use ""allowlist""/""blocklist"". But I don\'t feel strong enough about it to require anyone else to do the same.', 'comment_created': datetime.datetime(2023, 2, 26, 0, 21, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ulysses4ever', 'type': 'User'}, {'comment_id': 1117997849, 'comment_body': 'Same as above.', 'comment_created': datetime.datetime(2023, 2, 26, 0, 21, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ulysses4ever', 'type': 'User'}, {'comment_id': 1117998475, 'comment_body': ""\r\n\r\nUgh, you didn't write it, you just moved it. Well, I see no harm in changing it along the lines I propose anyway.\r\n"", 'comment_created': datetime.datetime(2023, 2, 26, 0, 29, 17, tzinfo=datetime.timezone.utc), 'commenter': 'ulysses4ever', 'type': 'User'}, {'comment_id': 1117998767, 'comment_body': 'Maybe fix that `a` in the comment while you\'re on this. I guess, they mean ""into a proper executable...""', 'comment_created': datetime.datetime(2023, 2, 26, 0, 32, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ulysses4ever', 'type': 'User'}, {'comment_id': 1118000646, 'comment_body': ""```suggestion\r\n-- 1. we work inside a 'CheckM m a' monad (where `m` is an abstraction to\r\n```"", 'comment_created': datetime.datetime(2023, 2, 26, 0, 52, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ulysses4ever', 'type': 'User'}, {'comment_id': 1118001023, 'comment_body': '`combineNameUnsafe`? But then it would imply there is a `combineNameSafe` version…', 'comment_created': datetime.datetime(2023, 2, 26, 0, 57, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ffaf1', 'type': 'User'}, {'comment_id': 1118001337, 'comment_body': ""Dunno. Since, there's no precedent (I'm aware of) and nothing pops up immediately, I would just do `combineNames`, perhaps.\r\n\r\nA crazy idea: `combineNamesAffine`: it's 0 names (both empty), 1 name, or error...\r\n\r\nIt's just the singular case in the name that threw my off. Anything more than that I leave to you!"", 'comment_created': datetime.datetime(2023, 2, 26, 1, 2, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ulysses4ever', 'type': 'User'}, {'comment_id': 1118001909, 'comment_body': ""You suddenly change indentation style here: you leave the first field on the same line and then you have to bump all the rest much further to the right than it makes sense to me. Could you do the same as in other definitions, where the first field goes on the next line and the whole alignment doesn't go far right? (There's a space for a joke about far right here, perhaps.)"", 'comment_created': datetime.datetime(2023, 2, 26, 1, 10, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ulysses4ever', 'type': 'User'}, {'comment_id': 1118002022, 'comment_body': ""Same as the other comment about alignment: I'd wrap before the first field.\r\n"", 'comment_created': datetime.datetime(2023, 2, 26, 1, 11, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ulysses4ever', 'type': 'User'}, {'comment_id': 1118002186, 'comment_body': 'I think, from here on you could go into a separate module. Something like `Distribution.PackageDescription.Check.Explanations`', 'comment_created': datetime.datetime(2023, 2, 26, 1, 14, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ulysses4ever', 'type': 'User'}, {'comment_id': 1118002377, 'comment_body': ""```suggestion\r\n-- Module      :  Distribution.PackageDescription.Check.Types\r\n```\r\n\r\nI'm pretty sure, this module should be called `...Types`. The non-type stuff in it is pretty standard kind of stuff to have in `*.Types` modules, in my experience."", 'comment_created': datetime.datetime(2023, 2, 26, 1, 16, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ulysses4ever', 'type': 'User'}, {'comment_id': 1118005109, 'comment_body': 'Legacy `Show` instance for `CheckExplanation` would create an import loop. Once we deprecate it and reclaim it to a sane instance (show ⇄ read), we can have this. I must admit while working on `check` I liked the ergonomics of having pretty printer near the type.', 'comment_created': datetime.datetime(2023, 2, 26, 1, 49, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ffaf1', 'type': 'User'}, {'comment_id': 1118008907, 'comment_body': ""Makes sense. Just this part looks sufficiently monolithic to me. But we don't need loops for sure!"", 'comment_created': datetime.datetime(2023, 2, 26, 2, 41, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ulysses4ever', 'type': 'User'}, {'comment_id': 1118133303, 'comment_body': 'This change is due to ditching the `nub`s that you mention in the blog post, right?', 'comment_created': datetime.datetime(2023, 2, 26, 18, 45, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ulysses4ever', 'type': 'User'}, {'comment_id': 1118134551, 'comment_body': 'No, the old check reordered the dependencies by name, a thing I do not do to because it is easier for the user to fix them in the order written in the `.cabal` file.', 'comment_created': datetime.datetime(2023, 2, 26, 18, 54, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ffaf1', 'type': 'User'}, {'comment_id': 1118134722, 'comment_body': 'See [here](https://github.com/haskell/cabal/blob/90c3f6b8b62334fefe166e825d0ec16b6808cbe2/Cabal-tests/tests/ParserTests/regressions/all-upper-bound.cabal), `somelib` (the first offending library) comes *before* `alpha`, etc.', 'comment_created': datetime.datetime(2023, 2, 26, 18, 55, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ffaf1', 'type': 'User'}, {'comment_id': 1118135993, 'comment_body': 'It’s a pity that flattened `pkg_desc` is still needed — for IO checks. Is there no way around it?', 'comment_created': datetime.datetime(2023, 2, 26, 19, 4, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ulysses4ever', 'type': 'User'}, {'comment_id': 1118138714, 'comment_body': 'There is a way around it. I have passed two months rewriting this and I forgot to change functions, how embarassing!\r\n\r\nNote that `checkPackageFiles` cannot be deprecated as now because there are still some part of the codebase requiring a check on PD rather than GPD (e.g. `SrcDist.hs`).', 'comment_created': datetime.datetime(2023, 2, 26, 19, 24, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ffaf1', 'type': 'User'}, {'comment_id': 1121730671, 'comment_body': 'Is this section header still relevant, given that there seems to be only one section?..', 'comment_created': datetime.datetime(2023, 3, 1, 13, 29, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ulysses4ever', 'type': 'User'}, {'comment_id': 1121735264, 'comment_body': 'And the whole module is called the same as the section.', 'comment_created': datetime.datetime(2023, 3, 1, 13, 32, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ulysses4ever', 'type': 'User'}, {'comment_id': 1121737133, 'comment_body': '```suggestion\r\n-- Module      :  Distribution.PackageDescription.Check.Conditional\r\n```', 'comment_created': datetime.datetime(2023, 3, 1, 13, 33, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ulysses4ever', 'type': 'User'}, {'comment_id': 1388515053, 'comment_body': '```suggestion\r\n-- Checks on conditional targets (libraries, executables, etc. that are\r\n```', 'comment_created': datetime.datetime(2023, 11, 9, 19, 51, 33, tzinfo=datetime.timezone.utc), 'commenter': 'geekosaur', 'type': 'User'}, {'comment_id': 1388526646, 'comment_body': '```suggestion\r\n-- | Checks for matchless globs and too strict matching (<2.4 spec).\r\n```', 'comment_created': datetime.datetime(2023, 11, 9, 20, 3, 42, tzinfo=datetime.timezone.utc), 'commenter': 'geekosaur', 'type': 'User'}, {'comment_id': 1388534085, 'comment_body': '```suggestion\r\n    ++ ""file names, so using this name would cause problems.""\r\n```', 'comment_created': datetime.datetime(2023, 11, 9, 20, 11, 52, tzinfo=datetime.timezone.utc), 'commenter': 'geekosaur', 'type': 'User'}, {'comment_id': 1388538375, 'comment_body': 'In fact, from an early GHC 7.x release on, `-fvia-C` is a no-op unless you are using an unregisterised compiler, in which case it is the default.\r\n\r\nI should probably dig out where this is generated and flag it there, but this is where I noticed it.', 'comment_created': datetime.datetime(2023, 11, 9, 20, 16, 45, tzinfo=datetime.timezone.utc), 'commenter': 'geekosaur', 'type': 'User'}, {'comment_id': 1388540069, 'comment_body': ""Doesn't it use `-O` (aka `-O1`) by default? See also the earlier warning about explicit use of `-O2`."", 'comment_created': datetime.datetime(2023, 11, 9, 20, 18, 37, tzinfo=datetime.timezone.utc), 'commenter': 'geekosaur', 'type': 'User'}, {'comment_id': 1388540781, 'comment_body': '```suggestion\r\n    ++ ""addition, the layout of the \'dist\' directory is subject to change ""\r\n```', 'comment_created': datetime.datetime(2023, 11, 9, 20, 19, 29, tzinfo=datetime.timezone.utc), 'commenter': 'geekosaur', 'type': 'User'}, {'comment_id': 1388544106, 'comment_body': '```suggestion\r\n        ++ ""Please add them. There is more information at https://pvp.haskell.org/""\r\n```', 'comment_created': datetime.datetime(2023, 11, 9, 20, 23, 11, tzinfo=datetime.timezone.utc), 'commenter': 'geekosaur', 'type': 'User'}, {'comment_id': 1388544651, 'comment_body': '```suggestion\r\n    ++ ""To avoid ambiguity in command line interfaces, a flag shouldn\'t ""\r\n```', 'comment_created': datetime.datetime(2023, 11, 9, 20, 23, 52, tzinfo=datetime.timezone.utc), 'commenter': 'geekosaur', 'type': 'User'}, {'comment_id': 1388545494, 'comment_body': '```suggestion\r\n      ++ "": -j[N]\' can make sense for a particular user\'s setup,""\r\n```', 'comment_created': datetime.datetime(2023, 11, 9, 20, 24, 52, tzinfo=datetime.timezone.utc), 'commenter': 'geekosaur', 'type': 'User'}, {'comment_id': 1388546487, 'comment_body': '```suggestion\r\n  ""When distributing packages, it is encouraged to specify source ""\r\n```', 'comment_created': datetime.datetime(2023, 11, 9, 20, 26, tzinfo=datetime.timezone.utc), 'commenter': 'geekosaur', 'type': 'User'}, {'comment_id': 1388585324, 'comment_body': 'https://downloads.haskell.org/ghc/9.8.1/docs/users_guide/codegens.html#c-code-generator-fvia-c fwiw. For a number of versions after this change `-fvia-C` was converted to `-asm` internally with a warning, but now it is an error except in an unregisterised compiler.', 'comment_created': datetime.datetime(2023, 11, 9, 21, 8, 29, tzinfo=datetime.timezone.utc), 'commenter': 'geekosaur', 'type': 'User'}, {'comment_id': 1388625435, 'comment_body': 'This is -O is passed to the _C compiler_ though, not to the `-O2` passed to cabal.\r\n\r\nDoes that make sense?', 'comment_created': datetime.datetime(2023, 11, 9, 21, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ffaf1', 'type': 'User'}, {'comment_id': 1388632497, 'comment_body': 'Yes, sorry.', 'comment_created': datetime.datetime(2023, 11, 9, 22, 4, 13, tzinfo=datetime.timezone.utc), 'commenter': 'geekosaur', 'type': 'User'}, {'comment_id': 1388641536, 'comment_body': 'Nicely spotted, I will erase this.', 'comment_created': datetime.datetime(2023, 11, 9, 22, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ffaf1', 'type': 'User'}, {'comment_id': 1388656393, 'comment_body': 'After a bit of digging:\r\n- It does not seem to error *as now*, [just a deprecation warning](https://gitlab.haskell.org/ghc/ghc/-/blob/master/compiler/GHC/Driver/Session.hs#L1809-1814)\r\n- still this is caught by GHC and cabal warning adds nothing, so I am going to axe it anyway.', 'comment_created': datetime.datetime(2023, 11, 9, 22, 33, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ffaf1', 'type': 'User'}, {'comment_id': 1388659174, 'comment_body': ""Interesting. The GHC User's Guide says otherwise, although `-fvia-C` is confusingly listed under warning options in the flag summary."", 'comment_created': datetime.datetime(2023, 11, 9, 22, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'geekosaur', 'type': 'User'}]","[{'commit_sha': '1d2765a2347c908a7886ac498577d7102f4d8546', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '152bed8d63741b8dd5d853816024c3031f4c80bf', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eef2be1dcdfbdf18fb1e899bccd57d3bcb7794c0', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b24c6013a25037192d42777e053f0cc80e12e130', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a2f18425475e6c2ddb20bfb9a028c88b395eb4d', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '083a642c517a546a165b3c99d3b33799cf70e328', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7566f7d7b1377bf71a7171868e65f64f8add5df8', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09a4d82d7747e8f65246e266d14ab6d586a55941', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0ac130bf5f4f6ec02efb5bb5ed1bbeb04cb254e', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd5bbadc4800a93faeee05d389dc92a7bdbf8ad2', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '148d8dd2044a4d70b0a738056888f7237de05138', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87ca48226a7eeed9b58060ebcea88f1a4178f924', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32377669dbdfb7c3649ec3f9a6c86e7c9281cdff', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '822ada53926d0620376ba0352a71f0dd6b748b8b', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0cbccc318654b839fc5e556d934e38fcdc45243', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd52f1e9c8f2c3bfb6b5790b69bb057b6dc347815', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a051dd672fd951eb7a12f7a20b23e6ee8d331181', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4e43fc7d0b744b090d32e02f21fde00a400ddd7', 'committer_username': 'ffaf1', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 20, 15, 35, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6917e135296439e5643413db898903a8b2646e8', 'committer_username': 'mergify[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 30, 10, 19, 51, tzinfo=datetime.timezone.utc)}]",,87714215,,User,,4,,0,3

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
3728161,cabal,haskell/cabal,Haskell,689,1598,71,509,14399,1781,163,142,"[{'id': 2024032444, 'number': 10261, 'closed': datetime.datetime(2024, 8, 20, 18, 49, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 17, 14, 8, 30, tzinfo=datetime.timezone.utc), 'time_taken': 276052.0, 'time_delta': '3 days, 4:40:52', 'additions': 60, 'deletions': 0, 'state': 'closed'}, {'id': 1909720081, 'number': 10082, 'closed': datetime.datetime(2024, 6, 9, 20, 54, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 7, 18, 57, 33, tzinfo=datetime.timezone.utc), 'time_taken': 179845.0, 'time_delta': '2 days, 1:57:25', 'additions': 7, 'deletions': 7, 'state': 'closed'}, {'id': 1845885142, 'number': 9953, 'closed': datetime.datetime(2024, 4, 30, 0, 48, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 29, 14, 35, 14, tzinfo=datetime.timezone.utc), 'time_taken': 36791.0, 'time_delta': '10:13:11', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 1843956081, 'number': 9944, 'closed': datetime.datetime(2024, 5, 1, 12, 58, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 27, 13, 57, 42, tzinfo=datetime.timezone.utc), 'time_taken': 342061.0, 'time_delta': '3 days, 23:01:01', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 1843954899, 'number': 9943, 'closed': datetime.datetime(2024, 4, 29, 11, 43, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 27, 13, 53, 23, tzinfo=datetime.timezone.utc), 'time_taken': 165028.0, 'time_delta': '1 day, 21:50:28', 'additions': 12, 'deletions': 0, 'state': 'closed'}, {'id': 1840352880, 'number': 9935, 'closed': datetime.datetime(2024, 4, 25, 9, 59, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 25, 8, 24, 25, tzinfo=datetime.timezone.utc), 'time_taken': 5723.0, 'time_delta': '1:35:23', 'additions': 6, 'deletions': 3, 'state': 'closed'}, {'id': 1838687561, 'number': 9928, 'closed': datetime.datetime(2024, 4, 24, 15, 20, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 24, 12, 4, 24, tzinfo=datetime.timezone.utc), 'time_taken': 11746.0, 'time_delta': '3:15:46', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1837521982, 'number': 9924, 'closed': datetime.datetime(2024, 4, 23, 23, 53, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 23, 21, 29, 34, tzinfo=datetime.timezone.utc), 'time_taken': 8664.0, 'time_delta': '2:24:24', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 1836879532, 'number': 9922, 'closed': datetime.datetime(2024, 4, 23, 20, 3, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 23, 14, 43, 29, tzinfo=datetime.timezone.utc), 'time_taken': 19173.0, 'time_delta': '5:19:33', 'additions': 54, 'deletions': 55, 'state': 'closed'}, {'id': 1836317867, 'number': 9920, 'closed': datetime.datetime(2024, 4, 25, 21, 5, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 23, 9, 54, 19, tzinfo=datetime.timezone.utc), 'time_taken': 213075.0, 'time_delta': '2 days, 11:11:15', 'additions': 545, 'deletions': 823, 'state': 'closed'}, {'id': 1829088961, 'number': 9908, 'closed': datetime.datetime(2024, 4, 18, 11, 39, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 18, 9, 2, 1, tzinfo=datetime.timezone.utc), 'time_taken': 9442.0, 'time_delta': '2:37:22', 'additions': 63, 'deletions': 88, 'state': 'closed'}, {'id': 1828987482, 'number': 9906, 'closed': datetime.datetime(2024, 4, 18, 8, 16, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 18, 8, 16, 14, tzinfo=datetime.timezone.utc), 'time_taken': 39.0, 'time_delta': '0:00:39', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1815852448, 'number': 9882, 'closed': datetime.datetime(2024, 4, 12, 17, 38, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 10, 11, 16, 39, tzinfo=datetime.timezone.utc), 'time_taken': 195717.0, 'time_delta': '2 days, 6:21:57', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1815847902, 'number': 9881, 'closed': datetime.datetime(2024, 4, 10, 11, 13, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 10, 11, 13, 30, tzinfo=datetime.timezone.utc), 'time_taken': 18.0, 'time_delta': '0:00:18', 'additions': 13933, 'deletions': 4071, 'state': 'closed'}, {'id': 1789600288, 'number': 9841, 'closed': datetime.datetime(2024, 4, 6, 21, 8, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 25, 14, 52, 40, tzinfo=datetime.timezone.utc), 'time_taken': 1059364.0, 'time_delta': '12 days, 6:16:04', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 1787154631, 'number': 9837, 'closed': datetime.datetime(2024, 4, 6, 18, 43, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 22, 19, 0, 45, tzinfo=datetime.timezone.utc), 'time_taken': 1294976.0, 'time_delta': '14 days, 23:42:56', 'additions': 9818, 'deletions': 141, 'state': 'closed'}, {'id': 1781811939, 'number': 9822, 'closed': datetime.datetime(2024, 3, 22, 15, 43, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 20, 10, 41, 9, tzinfo=datetime.timezone.utc), 'time_taken': 190921.0, 'time_delta': '2 days, 5:02:01', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1779476399, 'number': 9818, 'closed': datetime.datetime(2024, 3, 22, 17, 45, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 19, 9, 58, 15, tzinfo=datetime.timezone.utc), 'time_taken': 287216.0, 'time_delta': '3 days, 7:46:56', 'additions': 9818, 'deletions': 141, 'state': 'closed'}, {'id': 1774636045, 'number': 9813, 'closed': datetime.datetime(2024, 3, 17, 14, 17, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 15, 16, 38, 47, tzinfo=datetime.timezone.utc), 'time_taken': 164344.0, 'time_delta': '1 day, 21:39:04', 'additions': 15, 'deletions': 5, 'state': 'closed'}, {'id': 1762726901, 'number': 9788, 'closed': datetime.datetime(2024, 3, 26, 9, 51, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 8, 10, 36, 4, tzinfo=datetime.timezone.utc), 'time_taken': 1552530.0, 'time_delta': '17 days, 23:15:30', 'additions': 2587, 'deletions': 2662, 'state': 'closed'}, {'id': 1760767260, 'number': 9785, 'closed': datetime.datetime(2024, 3, 7, 18, 36, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 7, 10, 48, 2, tzinfo=datetime.timezone.utc), 'time_taken': 28122.0, 'time_delta': '7:48:42', 'additions': 486, 'deletions': 731, 'state': 'closed'}, {'id': 1753420001, 'number': 9770, 'closed': datetime.datetime(2024, 3, 6, 18, 42, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 3, 13, 55, 24, tzinfo=datetime.timezone.utc), 'time_taken': 276420.0, 'time_delta': '3 days, 4:47:00', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1753022585, 'number': 9768, 'closed': datetime.datetime(2024, 3, 9, 16, 33, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 2, 17, 34, 2, tzinfo=datetime.timezone.utc), 'time_taken': 601174.0, 'time_delta': '6 days, 22:59:34', 'additions': 216, 'deletions': 12, 'state': 'closed'}, {'id': 1752179332, 'number': 9766, 'closed': datetime.datetime(2024, 3, 30, 19, 8, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 1, 18, 10, 55, tzinfo=datetime.timezone.utc), 'time_taken': 2509054.0, 'time_delta': '29 days, 0:57:34', 'additions': 59, 'deletions': 7, 'state': 'closed'}, {'id': 1751926547, 'number': 9764, 'closed': datetime.datetime(2024, 3, 4, 17, 35, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 1, 15, 36, 14, tzinfo=datetime.timezone.utc), 'time_taken': 266364.0, 'time_delta': '3 days, 1:59:24', 'additions': 12, 'deletions': 7, 'state': 'closed'}, {'id': 1751319448, 'number': 9761, 'closed': datetime.datetime(2024, 3, 4, 19, 16, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 1, 9, 32, 13, tzinfo=datetime.timezone.utc), 'time_taken': 294255.0, 'time_delta': '3 days, 9:44:15', 'additions': 7, 'deletions': 4, 'state': 'closed'}, {'id': 1750438227, 'number': 9759, 'closed': datetime.datetime(2024, 3, 2, 22, 29, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 29, 19, 59, 15, tzinfo=datetime.timezone.utc), 'time_taken': 181803.0, 'time_delta': '2 days, 2:30:03', 'additions': 17, 'deletions': 0, 'state': 'closed'}, {'id': 1706984518, 'number': 9686, 'closed': datetime.datetime(2024, 2, 7, 11, 58, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 1, 19, 32, 23, tzinfo=datetime.timezone.utc), 'time_taken': 491185.0, 'time_delta': '5 days, 16:26:25', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 1704108176, 'number': 9676, 'closed': datetime.datetime(2024, 2, 3, 23, 56, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 31, 13, 47, 18, tzinfo=datetime.timezone.utc), 'time_taken': 295733.0, 'time_delta': '3 days, 10:08:53', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1704053230, 'number': 9675, 'closed': datetime.datetime(2024, 1, 31, 15, 57, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 31, 13, 15, 35, tzinfo=datetime.timezone.utc), 'time_taken': 9687.0, 'time_delta': '2:41:27', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1689267419, 'number': 9643, 'closed': datetime.datetime(2024, 1, 23, 21, 12, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 22, 7, 47, 8, tzinfo=datetime.timezone.utc), 'time_taken': 134727.0, 'time_delta': '1 day, 13:25:27', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1682722069, 'number': 9621, 'closed': datetime.datetime(2024, 1, 31, 12, 9, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 17, 10, 41, 58, tzinfo=datetime.timezone.utc), 'time_taken': 1214828.0, 'time_delta': '14 days, 1:27:08', 'additions': 31, 'deletions': 10, 'state': 'closed'}, {'id': 1673287308, 'number': 9605, 'closed': None, 'created': datetime.datetime(2024, 1, 10, 22, 28, 24, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 315, 'deletions': 84, 'state': 'open'}, {'id': 1672971679, 'number': 9604, 'closed': datetime.datetime(2024, 1, 12, 20, 5, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 10, 18, 49, 46, tzinfo=datetime.timezone.utc), 'time_taken': 177324.0, 'time_delta': '2 days, 1:15:24', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1667922796, 'number': 9597, 'closed': datetime.datetime(2024, 1, 8, 12, 41, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 7, 23, 40, 9, tzinfo=datetime.timezone.utc), 'time_taken': 46904.0, 'time_delta': '13:01:44', 'additions': 95, 'deletions': 42, 'state': 'closed'}, {'id': 1655887926, 'number': 9557, 'closed': datetime.datetime(2024, 1, 7, 22, 49, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 23, 14, 59, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1324240.0, 'time_delta': '15 days, 7:50:40', 'additions': 80, 'deletions': 37, 'state': 'closed'}, {'id': 1646233600, 'number': 9525, 'closed': datetime.datetime(2023, 12, 21, 23, 53, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 15, 15, 48, 26, tzinfo=datetime.timezone.utc), 'time_taken': 547501.0, 'time_delta': '6 days, 8:05:01', 'additions': 56, 'deletions': 1, 'state': 'closed'}, {'id': 1635734340, 'number': 9504, 'closed': datetime.datetime(2023, 12, 9, 9, 7, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 8, 8, 16, 9, tzinfo=datetime.timezone.utc), 'time_taken': 89487.0, 'time_delta': '1 day, 0:51:27', 'additions': 37, 'deletions': 3, 'state': 'closed'}, {'id': 1635641623, 'number': 9502, 'closed': datetime.datetime(2023, 12, 12, 18, 21, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 8, 7, 9, 50, tzinfo=datetime.timezone.utc), 'time_taken': 385916.0, 'time_delta': '4 days, 11:11:56', 'additions': 19, 'deletions': 4, 'state': 'closed'}, {'id': 1618449300, 'number': 9481, 'closed': datetime.datetime(2023, 12, 18, 12, 13, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 27, 17, 58, 4, tzinfo=datetime.timezone.utc), 'time_taken': 1793698.0, 'time_delta': '20 days, 18:14:58', 'additions': 149, 'deletions': 28, 'state': 'closed'}, {'id': 1599506812, 'number': 9442, 'closed': datetime.datetime(2024, 1, 10, 22, 6, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 13, 19, 52, 31, tzinfo=datetime.timezone.utc), 'time_taken': 5019235.0, 'time_delta': '58 days, 2:13:55', 'additions': 1046, 'deletions': 435, 'state': 'closed'}, {'id': 1589347016, 'number': 9413, 'closed': datetime.datetime(2023, 11, 12, 15, 40, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 6, 19, 59, 43, tzinfo=datetime.timezone.utc), 'time_taken': 502873.0, 'time_delta': '5 days, 19:41:13', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 1573543737, 'number': 9371, 'closed': datetime.datetime(2023, 10, 26, 16, 57, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 25, 19, 37, 52, tzinfo=datetime.timezone.utc), 'time_taken': 76755.0, 'time_delta': '21:19:15', 'additions': 19, 'deletions': 19, 'state': 'closed'}, {'id': 1517305135, 'number': 9262, 'closed': datetime.datetime(2023, 9, 15, 13, 29, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 15, 12, 52, 57, tzinfo=datetime.timezone.utc), 'time_taken': 2207.0, 'time_delta': '0:36:47', 'additions': 0, 'deletions': 9, 'state': 'closed'}, {'id': 1454843322, 'number': 9155, 'closed': datetime.datetime(2023, 7, 31, 21, 58, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 29, 18, 7, 28, tzinfo=datetime.timezone.utc), 'time_taken': 186639.0, 'time_delta': '2 days, 3:50:39', 'additions': 50, 'deletions': 22, 'state': 'closed'}, {'id': 1431857673, 'number': 9118, 'closed': datetime.datetime(2023, 7, 13, 0, 58, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 12, 19, 21, 22, tzinfo=datetime.timezone.utc), 'time_taken': 20217.0, 'time_delta': '5:36:57', 'additions': 0, 'deletions': 5, 'state': 'closed'}, {'id': 1431602648, 'number': 9117, 'closed': datetime.datetime(2023, 7, 12, 19, 7, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 12, 16, 18, 37, tzinfo=datetime.timezone.utc), 'time_taken': 10124.0, 'time_delta': '2:48:44', 'additions': 34, 'deletions': 37, 'state': 'closed'}, {'id': 1427842169, 'number': 9106, 'closed': datetime.datetime(2023, 7, 13, 7, 46, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 10, 16, 34, 55, tzinfo=datetime.timezone.utc), 'time_taken': 227516.0, 'time_delta': '2 days, 15:11:56', 'additions': 261, 'deletions': 243, 'state': 'closed'}, {'id': 1426393941, 'number': 9102, 'closed': datetime.datetime(2023, 7, 12, 23, 37, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 9, 18, 17, 18, tzinfo=datetime.timezone.utc), 'time_taken': 278423.0, 'time_delta': '3 days, 5:20:23', 'additions': 10, 'deletions': 0, 'state': 'closed'}, {'id': 1426327661, 'number': 9100, 'closed': datetime.datetime(2023, 7, 12, 15, 53, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 9, 14, 30, 42, tzinfo=datetime.timezone.utc), 'time_taken': 264157.0, 'time_delta': '3 days, 1:22:37', 'additions': 77, 'deletions': 2, 'state': 'closed'}, {'id': 1400008152, 'number': 9051, 'closed': datetime.datetime(2023, 6, 22, 16, 44, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 20, 14, 40, 37, tzinfo=datetime.timezone.utc), 'time_taken': 180248.0, 'time_delta': '2 days, 2:04:08', 'additions': 220, 'deletions': 19, 'state': 'closed'}, {'id': 1380569308, 'number': 9004, 'closed': datetime.datetime(2023, 6, 11, 10, 31, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 6, 10, 10, 40, tzinfo=datetime.timezone.utc), 'time_taken': 433221.0, 'time_delta': '5 days, 0:20:21', 'additions': 51, 'deletions': 1, 'state': 'closed'}, {'id': 1377894298, 'number': 9001, 'closed': datetime.datetime(2023, 6, 15, 5, 14, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 4, 19, 14, 56, tzinfo=datetime.timezone.utc), 'time_taken': 899957.0, 'time_delta': '10 days, 9:59:17', 'additions': 8, 'deletions': 1, 'state': 'closed'}, {'id': 1376269932, 'number': 8996, 'closed': datetime.datetime(2023, 6, 13, 7, 54, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 2, 20, 0, 20, tzinfo=datetime.timezone.utc), 'time_taken': 906845.0, 'time_delta': '10 days, 11:54:05', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1357612040, 'number': 8959, 'closed': datetime.datetime(2023, 5, 25, 2, 33, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 19, 20, 5, 31, tzinfo=datetime.timezone.utc), 'time_taken': 455260.0, 'time_delta': '5 days, 6:27:40', 'additions': 6, 'deletions': 5, 'state': 'closed'}, {'id': 1356132238, 'number': 8956, 'closed': datetime.datetime(2023, 5, 19, 20, 6, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 18, 18, 44, 38, tzinfo=datetime.timezone.utc), 'time_taken': 91321.0, 'time_delta': '1 day, 1:22:01', 'additions': 225, 'deletions': 126, 'state': 'closed'}, {'id': 1317294665, 'number': 8908, 'closed': datetime.datetime(2023, 6, 1, 16, 13, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 17, 20, 29, 39, tzinfo=datetime.timezone.utc), 'time_taken': 3872617.0, 'time_delta': '44 days, 19:43:37', 'additions': 349, 'deletions': 318, 'state': 'closed'}, {'id': 1313899170, 'number': 8904, 'closed': datetime.datetime(2023, 4, 20, 20, 33, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 14, 10, 39, 56, tzinfo=datetime.timezone.utc), 'time_taken': 553991.0, 'time_delta': '6 days, 9:53:11', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1301892729, 'number': 8897, 'closed': datetime.datetime(2023, 4, 17, 18, 53, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 4, 15, 43, 21, tzinfo=datetime.timezone.utc), 'time_taken': 1134616.0, 'time_delta': '13 days, 3:10:16', 'additions': 59, 'deletions': 37, 'state': 'closed'}, {'id': 1298513521, 'number': 8888, 'closed': datetime.datetime(2023, 4, 3, 5, 20, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 1, 1, 35, 16, tzinfo=datetime.timezone.utc), 'time_taken': 186298.0, 'time_delta': '2 days, 3:44:58', 'additions': 56, 'deletions': 169, 'state': 'closed'}, {'id': 1246375957, 'number': 8784, 'closed': datetime.datetime(2023, 2, 25, 3, 1, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 19, 17, 47, 16, tzinfo=datetime.timezone.utc), 'time_taken': 465229.0, 'time_delta': '5 days, 9:13:49', 'additions': 9, 'deletions': 1, 'state': 'closed'}, {'id': 1246327783, 'number': 8783, 'closed': datetime.datetime(2023, 2, 21, 22, 24, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 19, 15, 22, 24, tzinfo=datetime.timezone.utc), 'time_taken': 198118.0, 'time_delta': '2 days, 7:01:58', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1244200072, 'number': 8775, 'closed': datetime.datetime(2023, 2, 19, 19, 19, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 16, 19, 26, 45, tzinfo=datetime.timezone.utc), 'time_taken': 258777.0, 'time_delta': '2 days, 23:52:57', 'additions': 19, 'deletions': 19, 'state': 'closed'}, {'id': 1242692809, 'number': 8770, 'closed': datetime.datetime(2023, 2, 16, 19, 15, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 15, 20, 47, 50, tzinfo=datetime.timezone.utc), 'time_taken': 80834.0, 'time_delta': '22:27:14', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1239549542, 'number': 8764, 'closed': datetime.datetime(2023, 2, 17, 12, 11, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 13, 20, 3, 43, tzinfo=datetime.timezone.utc), 'time_taken': 317242.0, 'time_delta': '3 days, 16:07:22', 'additions': 6, 'deletions': 2, 'state': 'closed'}, {'id': 1086386626, 'number': 8531, 'closed': datetime.datetime(2022, 10, 14, 9, 27, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 13, 16, 53, 30, tzinfo=datetime.timezone.utc), 'time_taken': 59658.0, 'time_delta': '16:34:18', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 1073776006, 'number': 8508, 'closed': datetime.datetime(2022, 10, 6, 3, 55, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 2, 8, 10, 8, tzinfo=datetime.timezone.utc), 'time_taken': 330313.0, 'time_delta': '3 days, 19:45:13', 'additions': 36, 'deletions': 1, 'state': 'closed'}, {'id': 1039770085, 'number': 8433, 'closed': datetime.datetime(2022, 9, 21, 16, 38, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 29, 14, 16, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1995733.0, 'time_delta': '23 days, 2:22:13', 'additions': 25, 'deletions': 21, 'state': 'closed'}, {'id': 1035361164, 'number': 8427, 'closed': datetime.datetime(2023, 11, 13, 19, 1, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 24, 11, 43, 5, tzinfo=datetime.timezone.utc), 'time_taken': 38560677.0, 'time_delta': '446 days, 7:17:57', 'additions': 4697, 'deletions': 3212, 'state': 'closed'}, {'id': 1026501697, 'number': 8381, 'closed': datetime.datetime(2022, 8, 28, 15, 28, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 15, 14, 7, 20, tzinfo=datetime.timezone.utc), 'time_taken': 1128095.0, 'time_delta': '13 days, 1:21:35', 'additions': 8, 'deletions': 3, 'state': 'closed'}, {'id': 1022751095, 'number': 8357, 'closed': datetime.datetime(2022, 8, 11, 9, 49, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 10, 13, 59, 48, tzinfo=datetime.timezone.utc), 'time_taken': 71370.0, 'time_delta': '19:49:30', 'additions': 8, 'deletions': 3, 'state': 'closed'}, {'id': 1012279431, 'number': 8332, 'closed': datetime.datetime(2022, 8, 28, 15, 27, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 29, 19, 15, 39, tzinfo=datetime.timezone.utc), 'time_taken': 2578318.0, 'time_delta': '29 days, 20:11:58', 'additions': 517, 'deletions': 496, 'state': 'closed'}, {'id': 1005841078, 'number': 8311, 'closed': datetime.datetime(2022, 8, 28, 15, 26, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 22, 14, 10, 45, tzinfo=datetime.timezone.utc), 'time_taken': 3201358.0, 'time_delta': '37 days, 1:15:58', 'additions': 15, 'deletions': 5, 'state': 'closed'}, {'id': 1004401610, 'number': 8309, 'closed': datetime.datetime(2022, 7, 29, 13, 52, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 21, 16, 4, 13, tzinfo=datetime.timezone.utc), 'time_taken': 683321.0, 'time_delta': '7 days, 21:48:41', 'additions': 196, 'deletions': 0, 'state': 'closed'}, {'id': 993347386, 'number': 8281, 'closed': datetime.datetime(2022, 7, 12, 12, 40, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 11, 17, 6, 10, tzinfo=datetime.timezone.utc), 'time_taken': 70458.0, 'time_delta': '19:34:18', 'additions': 8, 'deletions': 11, 'state': 'closed'}, {'id': 987571314, 'number': 8269, 'closed': datetime.datetime(2022, 7, 20, 20, 57, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 5, 15, 29, 14, tzinfo=datetime.timezone.utc), 'time_taken': 1315680.0, 'time_delta': '15 days, 5:28:00', 'additions': 929, 'deletions': 613, 'state': 'closed'}, {'id': 980320367, 'number': 8258, 'closed': datetime.datetime(2022, 7, 1, 8, 7, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 17, 7, 16, tzinfo=datetime.timezone.utc), 'time_taken': 313192.0, 'time_delta': '3 days, 14:59:52', 'additions': 2, 'deletions': 12, 'state': 'closed'}, {'id': 977080336, 'number': 8250, 'closed': datetime.datetime(2022, 7, 1, 15, 14, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 23, 12, 23, 25, tzinfo=datetime.timezone.utc), 'time_taken': 701482.0, 'time_delta': '8 days, 2:51:22', 'additions': 1903, 'deletions': 0, 'state': 'closed'}, {'id': 975299968, 'number': 8248, 'closed': datetime.datetime(2022, 6, 28, 14, 37, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 22, 15, 26, 54, tzinfo=datetime.timezone.utc), 'time_taken': 515443.0, 'time_delta': '5 days, 23:10:43', 'additions': 499, 'deletions': 0, 'state': 'closed'}, {'id': 972272061, 'number': 8237, 'closed': datetime.datetime(2022, 6, 24, 8, 30, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 20, 13, 55, 36, tzinfo=datetime.timezone.utc), 'time_taken': 326102.0, 'time_delta': '3 days, 18:35:02', 'additions': 19, 'deletions': 0, 'state': 'closed'}, {'id': 970731214, 'number': 8224, 'closed': datetime.datetime(2022, 6, 22, 8, 8, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 17, 15, 20, 31, tzinfo=datetime.timezone.utc), 'time_taken': 406073.0, 'time_delta': '4 days, 16:47:53', 'additions': 30, 'deletions': 0, 'state': 'closed'}, {'id': 967846033, 'number': 8217, 'closed': datetime.datetime(2022, 6, 15, 11, 38, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 15, 8, 24, 39, tzinfo=datetime.timezone.utc), 'time_taken': 11637.0, 'time_delta': '3:13:57', 'additions': 18, 'deletions': 12, 'state': 'closed'}, {'id': 965890534, 'number': 8212, 'closed': datetime.datetime(2022, 6, 15, 20, 9, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 13, 15, 31, 20, tzinfo=datetime.timezone.utc), 'time_taken': 189494.0, 'time_delta': '2 days, 4:38:14', 'additions': 31, 'deletions': 0, 'state': 'closed'}, {'id': 950740683, 'number': 8179, 'closed': datetime.datetime(2022, 6, 3, 8, 51, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 30, 9, 26, 59, tzinfo=datetime.timezone.utc), 'time_taken': 343466.0, 'time_delta': '3 days, 23:24:26', 'additions': 5, 'deletions': 207, 'state': 'closed'}, {'id': 949954703, 'number': 8171, 'closed': datetime.datetime(2022, 5, 29, 6, 51, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 28, 7, 15, 22, tzinfo=datetime.timezone.utc), 'time_taken': 84954.0, 'time_delta': '23:35:54', 'additions': 9, 'deletions': 0, 'state': 'closed'}, {'id': 949663038, 'number': 8170, 'closed': datetime.datetime(2022, 5, 30, 10, 24, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 27, 19, 13, 57, tzinfo=datetime.timezone.utc), 'time_taken': 227436.0, 'time_delta': '2 days, 15:10:36', 'additions': 27, 'deletions': 2, 'state': 'closed'}]"
