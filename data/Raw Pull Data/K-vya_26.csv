pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1374579658,Basic project structure is made.,"- Created folder structure.
- Created basic file.
- Created Go package for the dependencies.",True,2,https://api.github.com/repos/fossology/LicenseDb/pulls/2,https://github.com/fossology/LicenseDb/pull/2,closed,31,2,7,1,0,1,1,0,[{'name': 'merge conflict'}],2023-06-01 18:30:55+00:00,2023-06-03 11:02:44+00:00,145909.0,"1 day, 16:31:49","[{'comment_id': 1215539219, 'comment_body': '```suggestion\n// SPDX-License-Identifier: GPL-2.0-only\n```\n', 'comment_created': datetime.datetime(2023, 6, 3, 13, 42, 9, tzinfo=datetime.timezone.utc), 'commenter': 'GMishx', 'type': 'User'}]","[{'commit_sha': '1a1a70b4a8064eda1afe648039f14cc51eb6a755', 'committer_username': 'k-avy', 'committer_name': 'Kavya Shukla', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 26, 17, 58, 12, tzinfo=datetime.timezone.utc)}]",Kavya Shukla,81437739,,User,,29,,17,12
1379525590,chores: Added README.d and basic CI.,Fixes issue: #3 ,True,4,https://api.github.com/repos/fossology/LicenseDb/pulls/4,https://github.com/fossology/LicenseDb/pull/4,closed,60,0,2,1,1,2,0,0,[],2023-06-05 18:43:57+00:00,2023-06-08 09:09:00+00:00,224703.0,"2 days, 14:25:03","[{'comment_id': 1218745801, 'comment_body': '```suggestion\n# SPDX-License-Identifier: GPL-2.0-only\n```\nPlease use the new license identifier. And update other files as well in a separate PR.', 'comment_created': datetime.datetime(2023, 6, 6, 0, 43, 35, tzinfo=datetime.timezone.utc), 'commenter': 'GMishx', 'type': 'User'}, {'comment_id': 1218746084, 'comment_body': '```suggestion\n- Run the executable.\n```\n', 'comment_created': datetime.datetime(2023, 6, 6, 0, 44, 23, tzinfo=datetime.timezone.utc), 'commenter': 'GMishx', 'type': 'User'}]","[{'commit_sha': '6cae220f7464f3cb31e03043eed267ef7952526b', 'committer_username': 'k-avy', 'committer_name': 'Kavya Shukla', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 26, 17, 58, 12, tzinfo=datetime.timezone.utc)}]",Kavya Shukla,81437739,,User,,29,,17,12
1392737502,feat: added GET endpoints,"fixes the first two tasks of issue 1

This consists of two end points:
* Get all licenses
  * to get all the details of the licenses present in the database.
  * gets the data of all the data components present in the database.
 * Get licenses by shortname:
   *  to get the data of the license with the shortname passed as a parameter.
   * error when no such license found.
",True,9,https://api.github.com/repos/fossology/LicenseDb/pulls/9,https://github.com/fossology/LicenseDb/pull/9,closed,230,23,6,1,0,3,0,0,[],2023-06-14 16:25:58+00:00,2023-06-29 13:28:30+00:00,1285352.0,"14 days, 21:02:32","[{'comment_id': 1230508333, 'comment_body': '```suggestion\r\n\t// password of the database\r\n```', 'comment_created': datetime.datetime(2023, 6, 15, 6, 41, 53, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1230509346, 'comment_body': '```suggestion\r\n\t// auto-populate the database\r\n```', 'comment_created': datetime.datetime(2023, 6, 15, 6, 43, 2, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1230570188, 'comment_body': '```suggestion\r\ngo 1.20\r\n```\r\ngo 1.18 has already reached EOL, please update your installation and then update this mod file. ', 'comment_created': datetime.datetime(2023, 6, 15, 7, 34, 57, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}]","[{'commit_sha': '084f8e0dc76a6871167908fc93496b915121a0b9', 'committer_username': 'k-avy', 'committer_name': 'Kavya Shukla', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 26, 17, 58, 12, tzinfo=datetime.timezone.utc)}]",Kavya Shukla,81437739,,User,,29,,17,12
1403108281,feat: added create and update endpoints.,"fixes two tasks of issue 1

This consists of two endpoints:

* Create License:
  * to create an open-source license and add it to the database
  * to make a license we need some required field
*  Update License:
   * to update an open-source license and modify it to database
   * License to be updated using shortname ",True,11,https://api.github.com/repos/fossology/LicenseDb/pulls/11,https://github.com/fossology/LicenseDb/pull/11,closed,241,19,5,1,1,11,0,0,[],2023-06-22 08:37:39+00:00,2023-07-13 11:34:26+00:00,1825007.0,"21 days, 2:56:47","[{'comment_id': 1251026119, 'comment_body': 'Please move them into api package itself, and factor out functions so that they can be reused in tests. Do the same with all the database steps you are doing. Move them all into a db module and make necessary changes.', 'comment_created': datetime.datetime(2023, 7, 3, 15, 16, 27, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1251027148, 'comment_body': 'This needs to come from the db module.', 'comment_created': datetime.datetime(2023, 7, 3, 15, 17, 5, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1254458246, 'comment_body': 'There can be errors in the creation as well. So, you have to add an error handling here. The other thing is, you should not create the license if the license already exists. It should return an error in that case.', 'comment_created': datetime.datetime(2023, 7, 6, 13, 39, 36, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1254467065, 'comment_body': ""You have to always return the same object. Think it like the output you get when you `GET` the same license. You can add extra data in the meta field. Furthermore, you shouldn't just put the input here. Get the output from the Create function and use that to fetch the license. "", 'comment_created': datetime.datetime(2023, 7, 6, 13, 46, 20, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1254471392, 'comment_body': 'Similarly here, you should put the updated license.', 'comment_created': datetime.datetime(2023, 7, 6, 13, 49, 35, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1254472710, 'comment_body': 'A better meta would contain the number of fields updated or what fields were updated. We can discuss it in the meetings.', 'comment_created': datetime.datetime(2023, 7, 6, 13, 50, 27, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1254484755, 'comment_body': 'Since meta is dynamic, it would be better if we keep this field as a key value pair rather than a fixed number of items. For now it seems okay, in the future we may want to do that.', 'comment_created': datetime.datetime(2023, 7, 6, 13, 58, 53, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1254486307, 'comment_body': 'Add the updated license here.\r\n', 'comment_created': datetime.datetime(2023, 7, 6, 13, 59, 41, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1259234013, 'comment_body': '```suggestion\r\n\tresult := DB.FirstOrCreate(&license)\r\n\tif result.RowsAffected == 0 {\r\n```\r\nVariables should start with lowercase until required otherwise, just a good practice. ', 'comment_created': datetime.datetime(2023, 7, 11, 6, 13, 15, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1259763310, 'comment_body': '```suggestion\r\n\tif err := DB.Where(""shortname = ?"", shortname).First(&license).Error; err != nil {\r\n```\r\nEither you can provide condition in First(val, cond) or put a where before.', 'comment_created': datetime.datetime(2023, 7, 11, 13, 45, 30, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}]","[{'commit_sha': '554165e9736da8eedf9efe8ae352a17a00b9f193', 'committer_username': 'k-avy', 'committer_name': 'Kavya Shukla', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 26, 17, 58, 12, tzinfo=datetime.timezone.utc)}]",Kavya Shukla,81437739,,User,,29,,17,12
1415136507,feat: added authentication in API and search endpoint,"feat: added authentication in API and search api
 * Get license with specific search term:
   * field: represents the name of field to be searched
   * search_term: represents the term to be searched
   *  search: represent the algorithm to search with
 * authenticate the API:
      * added the struct for user  
      *  created a user table in the database 
      *  added basic user endpoints:
         * get user using id 
         * get all user
         * create user
      * added basic authentication to all the API endpoints i.e, group of endpoints",True,12,https://api.github.com/repos/fossology/LicenseDb/pulls/12,https://github.com/fossology/LicenseDb/pull/12,closed,348,5,5,1,2,34,0,0,[],2023-06-30 16:53:03+00:00,2023-08-08 11:56:41+00:00,3351818.0,"38 days, 19:03:38","[{'comment_id': 1267765330, 'comment_body': '\n```suggestion\npackage auth\n```\nNot necessary, but packages with short name are preferred.', 'comment_created': datetime.datetime(2023, 7, 19, 8, 52, 54, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1267766931, 'comment_body': 'No need for sprintf here and write a more helpful message. Like here we know something is wrong with request body. Indicate that.', 'comment_created': datetime.datetime(2023, 7, 19, 8, 54, 14, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1267768400, 'comment_body': '\n```suggestion\n\tif err := c.ShouldBindJSON(&user); err != nil {\n```\nreduce extra lines.\n', 'comment_created': datetime.datetime(2023, 7, 19, 8, 55, 23, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1267769164, 'comment_body': '\n```suggestion\n```', 'comment_created': datetime.datetime(2023, 7, 19, 8, 55, 58, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1267771305, 'comment_body': '\n```suggestion\n\tif err := api.DB.Find(&users).Error; err != nil {\n```', 'comment_created': datetime.datetime(2023, 7, 19, 8, 57, 32, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1267771721, 'comment_body': 'remove sprintf and write a helpful message', 'comment_created': datetime.datetime(2023, 7, 19, 8, 57, 52, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1267773088, 'comment_body': 'Status should be internal server error since the request is correct but error happened on server side.', 'comment_created': datetime.datetime(2023, 7, 19, 8, 58, 50, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1267773504, 'comment_body': 'see above for status', 'comment_created': datetime.datetime(2023, 7, 19, 8, 59, 7, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1267774879, 'comment_body': '\n```suggestion\n\tif err := api.DB.Where(""id = ?"", id).First(&user).Error; err != nil {\n```', 'comment_created': datetime.datetime(2023, 7, 19, 8, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1267775436, 'comment_body': 'remove sprintf, helpful message', 'comment_created': datetime.datetime(2023, 7, 19, 9, 0, 15, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1267776203, 'comment_body': 'remove sprintf and this is a case of no credentails, indicate that.', 'comment_created': datetime.datetime(2023, 7, 19, 9, 0, 46, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1267777037, 'comment_body': '\n```suggestion\n```\nno need of creating error if you have to get the string again', 'comment_created': datetime.datetime(2023, 7, 19, 9, 1, 28, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1267778224, 'comment_body': 'write error like ""error: no credentials were passed"" ', 'comment_created': datetime.datetime(2023, 7, 19, 9, 2, 25, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1267779238, 'comment_body': 'remove sprintf', 'comment_created': datetime.datetime(2023, 7, 19, 9, 3, 16, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1267781108, 'comment_body': '\n```suggestion\n    err := api.DB.Where(""username = ?"", username).First(&user).Error\n\tif err != nil {\n```', 'comment_created': datetime.datetime(2023, 7, 19, 9, 4, 46, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1267781629, 'comment_body': 'remove sprintf', 'comment_created': datetime.datetime(2023, 7, 19, 9, 5, 13, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1267781945, 'comment_body': '\n```suggestion\n\t\t\t\tError:     err.Error(),\n```', 'comment_created': datetime.datetime(2023, 7, 19, 9, 5, 27, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1267783029, 'comment_body': 'remove sprintf', 'comment_created': datetime.datetime(2023, 7, 19, 9, 5, 57, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1267784030, 'comment_body': '\n```suggestion\n\t\t\t\tError:     err.Error(),\n```', 'comment_created': datetime.datetime(2023, 7, 19, 9, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1269477336, 'comment_body': 'Why is getting a license requires authorization?', 'comment_created': datetime.datetime(2023, 7, 20, 13, 40, 4, tzinfo=datetime.timezone.utc), 'commenter': 'GMishx', 'type': 'User'}, {'comment_id': 1269477944, 'comment_body': 'And creating a user does not require authentication?', 'comment_created': datetime.datetime(2023, 7, 20, 13, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'GMishx', 'type': 'User'}, {'comment_id': 1269478455, 'comment_body': 'Same here, getting all licenses requires authentication?', 'comment_created': datetime.datetime(2023, 7, 20, 13, 40, 53, tzinfo=datetime.timezone.utc), 'commenter': 'GMishx', 'type': 'User'}, {'comment_id': 1269480186, 'comment_body': 'Please use consistent plural form for the endpoints. It should be `/api/licenses/update/:shortname` or `/api/licenses/:shortname` not `/api/license/:shortname`.\r\n\r\nYou can work on it in a separate PR if needed.', 'comment_created': datetime.datetime(2023, 7, 20, 13, 42, 2, tzinfo=datetime.timezone.utc), 'commenter': 'GMishx', 'type': 'User'}, {'comment_id': 1269481232, 'comment_body': 'But if you opt in to work on a separate PR, please open an issue for the same.', 'comment_created': datetime.datetime(2023, 7, 20, 13, 42, 28, tzinfo=datetime.timezone.utc), 'commenter': 'GMishx', 'type': 'User'}, {'comment_id': 1269487046, 'comment_body': 'I would suggest to read the search term in the body. Keeping it in query limits the size of text someone can search.\r\n\r\nCan we discuss it tomorrow @k-avy @avinal @ag4ums ?', 'comment_created': datetime.datetime(2023, 7, 20, 13, 45, 22, tzinfo=datetime.timezone.utc), 'commenter': 'GMishx', 'type': 'User'}, {'comment_id': 1269573289, 'comment_body': ""This change is in the next PR, so I didn't point here: https://github.com/k-avy/LicenseDb/blob/kavya/api/test/pkg/api/api.go#L25-L36"", 'comment_created': datetime.datetime(2023, 7, 20, 14, 46, 9, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1269573760, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2023, 7, 20, 14, 46, 31, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1270235416, 'comment_body': 'Ummm... There the endpoint to list all users and specific user is unauthenticated.\r\n\r\nEndpoints to Create/modify licenses and every endpoint related to users should be authenticated.', 'comment_created': datetime.datetime(2023, 7, 21, 5, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'GMishx', 'type': 'User'}, {'comment_id': 1277215230, 'comment_body': '```suggestion\r\n\tauthorized.POST(""/api/licenses"", api.CreateLicense)\r\n```', 'comment_created': datetime.datetime(2023, 7, 28, 7, 36, 35, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1277215545, 'comment_body': '```suggestion\r\n\tr.GET(""/api/licenses/:shortname"", api.GetLicense)\r\n```', 'comment_created': datetime.datetime(2023, 7, 28, 7, 36, 54, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1277215994, 'comment_body': '```suggestion\r\n\tauthorized.PATCH(""/api/licenses/:shortname"", api.UpdateLicense)\r\n```', 'comment_created': datetime.datetime(2023, 7, 28, 7, 37, 26, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1277218979, 'comment_body': '```suggestion\r\n\tr.POST(""/api/licenses/search"", api.SearchInLicense)\r\n```\r\nThis will conflict with create license otherwise', 'comment_created': datetime.datetime(2023, 7, 28, 7, 40, 49, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1277224904, 'comment_body': '```suggestion\r\n\tSearchType     string `json:""search_type""`\r\n```', 'comment_created': datetime.datetime(2023, 7, 28, 7, 47, 18, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1277271423, 'comment_body': 'Add auth here', 'comment_created': datetime.datetime(2023, 7, 28, 8, 35, 34, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}]","[{'commit_sha': 'c6c6d4e6b09c0e3d5e8c5cb23d129027df90eb7f', 'committer_username': 'k-avy', 'committer_name': 'Kavya Shukla', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 26, 17, 58, 12, tzinfo=datetime.timezone.utc)}]",Kavya Shukla,81437739,,User,,29,,17,12
1431896317,feat: updated project structure and added basic test cases to project,"### feat: updated the project structure and added test case

* updated project structure to avoid import cycle
  *  added a different package for database where:
     * there is function related to migration of database
     * and populating database

* added basic test cases:
  * added API test cases for create, update, get license by shortname and search in licenses
  * added user test cases for create and get user by id

* updated meta to pagination meta for better discription",True,13,https://api.github.com/repos/fossology/LicenseDb/pulls/13,https://github.com/fossology/LicenseDb/pull/13,closed,338,88,8,2,1,7,0,0,[],2023-07-12 19:55:49+00:00,2023-12-04 05:47:30+00:00,12477101.0,"144 days, 9:51:41","[{'comment_id': 1299841630, 'comment_body': 'Create an issue to merge these two endpoints into a single one.', 'comment_created': datetime.datetime(2023, 8, 21, 9, 13, 26, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1299846455, 'comment_body': 'Create an issue to make this struct as free form key-value mapping field', 'comment_created': datetime.datetime(2023, 8, 21, 9, 17, 38, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}, {'comment_id': 1299846797, 'comment_body': '```suggestion\r\n\tUrl             string `json:""rf_url""`\r\n```', 'comment_created': datetime.datetime(2023, 8, 21, 9, 17, 56, tzinfo=datetime.timezone.utc), 'commenter': 'avinal', 'type': 'User'}]","[{'commit_sha': 'e95a79e643b8d4f73846d27b5a6c107c8a16fadc', 'committer_username': 'k-avy', 'committer_name': 'Kavya Shukla', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 26, 17, 58, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e725b8390b878e59114b77fac242e74acd39e241', 'committer_username': 'GMishx', 'committer_name': 'Gaurav Mishra', 'committer_email': 'gmishx@gmishx.in', 'commit_date': datetime.datetime(2016, 3, 25, 21, 43, 54, tzinfo=datetime.timezone.utc)}]",Kavya Shukla,81437739,,User,,29,,17,12
1465325804,feat: created audit and added change history.,"feat: added audit and change history endpoints.

        - /api/audit: to get all the change logs
        - /api/audit/:audit_id: to get the change log by its id
        - /api/audit/:audit_id/changes: to get all the change history of a particular change log
        - /api/audit/:audit_id/changes/:id: to get change of a particular change history",True,14,https://api.github.com/repos/fossology/LicenseDb/pulls/14,https://github.com/fossology/LicenseDb/pull/14,closed,358,11,6,2,0,0,0,0,[],2023-08-07 14:13:25+00:00,2023-12-04 06:24:22+00:00,10253457.0,"118 days, 16:10:57",[],"[{'commit_sha': '570e8ab10e6a032da92f9e2d4fec6a17ba0b89c7', 'committer_username': 'k-avy', 'committer_name': 'Kavya Shukla', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 26, 17, 58, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1df70a575d10f1fe89259e78dbb7ad42125388fc', 'committer_username': 'k-avy', 'committer_name': 'Kavya Shukla', 'committer_email': None, 'commit_date': datetime.datetime(2021, 3, 26, 17, 58, 12, tzinfo=datetime.timezone.utc)}]",Kavya Shukla,81437739,,User,,29,,17,12

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
646775841,LicenseDb,fossology/LicenseDb,Go,7,10,12,8,146,3,2,0,"[{'id': 1500245083, 'number': 17, 'closed': datetime.datetime(2023, 12, 4, 6, 33, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 3, 11, 33, 19, tzinfo=datetime.timezone.utc), 'time_taken': 7930812.0, 'time_delta': '91 days, 19:00:12', 'additions': 124, 'deletions': 5, 'state': 'closed'}, {'id': 1488494830, 'number': 15, 'closed': datetime.datetime(2023, 12, 4, 6, 29, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 24, 18, 19, 7, tzinfo=datetime.timezone.utc), 'time_taken': 8770195.0, 'time_delta': '101 days, 12:09:55', 'additions': 420, 'deletions': 17, 'state': 'closed'}, {'id': 1465325804, 'number': 14, 'closed': datetime.datetime(2023, 12, 4, 6, 24, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 7, 14, 13, 25, tzinfo=datetime.timezone.utc), 'time_taken': 10253457.0, 'time_delta': '118 days, 16:10:57', 'additions': 358, 'deletions': 11, 'state': 'closed'}, {'id': 1431896317, 'number': 13, 'closed': datetime.datetime(2023, 12, 4, 5, 47, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 12, 19, 55, 49, tzinfo=datetime.timezone.utc), 'time_taken': 12477101.0, 'time_delta': '144 days, 9:51:41', 'additions': 338, 'deletions': 88, 'state': 'closed'}, {'id': 1415136507, 'number': 12, 'closed': datetime.datetime(2023, 8, 8, 11, 56, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 30, 16, 53, 3, tzinfo=datetime.timezone.utc), 'time_taken': 3351818.0, 'time_delta': '38 days, 19:03:38', 'additions': 348, 'deletions': 5, 'state': 'closed'}, {'id': 1403108281, 'number': 11, 'closed': datetime.datetime(2023, 7, 13, 11, 34, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 22, 8, 37, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1825007.0, 'time_delta': '21 days, 2:56:47', 'additions': 241, 'deletions': 19, 'state': 'closed'}, {'id': 1392737502, 'number': 9, 'closed': datetime.datetime(2023, 6, 29, 13, 28, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 14, 16, 25, 58, tzinfo=datetime.timezone.utc), 'time_taken': 1285352.0, 'time_delta': '14 days, 21:02:32', 'additions': 230, 'deletions': 23, 'state': 'closed'}, {'id': 1383907478, 'number': 6, 'closed': datetime.datetime(2023, 6, 12, 13, 42, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 8, 7, 31, 3, tzinfo=datetime.timezone.utc), 'time_taken': 367906.0, 'time_delta': '4 days, 6:11:46', 'additions': 121, 'deletions': 0, 'state': 'closed'}, {'id': 1379525590, 'number': 4, 'closed': datetime.datetime(2023, 6, 8, 9, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 5, 18, 43, 57, tzinfo=datetime.timezone.utc), 'time_taken': 224703.0, 'time_delta': '2 days, 14:25:03', 'additions': 60, 'deletions': 0, 'state': 'closed'}, {'id': 1374579658, 'number': 2, 'closed': datetime.datetime(2023, 6, 3, 11, 2, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 1, 18, 30, 55, tzinfo=datetime.timezone.utc), 'time_taken': 145909.0, 'time_delta': '1 day, 16:31:49', 'additions': 31, 'deletions': 2, 'state': 'closed'}]"
