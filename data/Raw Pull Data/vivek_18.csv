pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
434261991,Raising this PR for feedback.,Changes to the thrift files and STORAGE_PREFERENCE table schema,False,254,https://api.github.com/repos/apache/airavata/pulls/254,https://github.com/apache/airavata/pull/254,closed,142,6,10,4,0,0,0,0,[],2020-06-15 03:19:54+00:00,2020-06-15 03:20:03+00:00,9.0,0:00:09,[],"[{'commit_sha': '8b054df74dad01bd8d43f8ced0c0a3102bec64ef', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '927086fdd52e7a5b69e905f579b61be92581ce42', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b189d15fca6aa57f6c972fb65e908fd3355d1499', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3cd907d3d5e0c4a5700b77c64e56d647893d8a5', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}]",Vivek Shresta Bandaru,55638867,,User,,13,,2,1
435776092,Changes to GatewayResourceProfile,"This is the first cut as part of EPIC: https://issues.apache.org/jira/browse/AIRAVATA-3315. By adding a new entry called UserStoragePreference, an admin user can configure storage quotas for the users in the Gateway.

0 is the default value for the UserStorageQuota entry, and the frontend, instead of displaying the value 0, displays ""N/A"" letting know the client that there are no storage restrictions in the Gateway.

It doesn't make any sense for the storage quota entry to have a negative number. So the client-side code has validations to make sure any typed or pasted value in the UserStorageQuota entry does not store any negative values.",True,42,https://api.github.com/repos/apache/airavata-django-portal/pulls/42,https://github.com/apache/airavata-django-portal/pull/42,closed,44,3,4,2,2,3,0,0,[],2020-06-17 11:03:45+00:00,2020-07-19 20:24:58+00:00,2798473.0,"32 days, 9:21:13","[{'comment_id': 441608842, 'comment_body': 'The event is passed as the first parameter to event handlers in Vue. Please use that instead of `window.event` which is deprecated.', 'comment_created': datetime.datetime(2020, 6, 17, 14, 54, 34, tzinfo=datetime.timezone.utc), 'commenter': 'machristie', 'type': 'User'}, {'comment_id': 441610153, 'comment_body': 'Maybe rename `token` to `quota` or `value`?', 'comment_created': datetime.datetime(2020, 6, 17, 14, 56, 9, tzinfo=datetime.timezone.utc), 'commenter': 'machristie', 'type': 'User'}, {'comment_id': 441614376, 'comment_body': 'See also https://vuejs.org/v2/guide/events.html#Method-Event-Handlers', 'comment_created': datetime.datetime(2020, 6, 17, 15, 1, 25, tzinfo=datetime.timezone.utc), 'commenter': 'machristie', 'type': 'User'}]","[{'commit_sha': '7529782b0866f60532db29d06101ad8c3ea700ca', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f1076b4d1b6da9372bd7ec1d8e549f476dba7f7', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}]",Vivek Shresta Bandaru,55638867,,User,,13,,2,1
435776156,Changes to accommodate UserStorageQuota in StoragePreferences,"This is the first cut as part of EPIC: https://issues.apache.org/jira/browse/AIRAVATA-3315. Any newly created UserStorageQuota entry for an existing StoragePreference has the value 0. 0 in the backend would mean the admin does not want any quotas/limitations for his users.

When this is the case, the frontend, instead of displaying the value 0, displays ""N/A"" letting know the client that there are no storage restrictions in the Gateway.",True,255,https://api.github.com/repos/apache/airavata/pulls/255,https://github.com/apache/airavata/pull/255,closed,154,7,9,9,3,4,0,0,[],2020-06-17 11:03:51+00:00,2020-08-03 15:37:25+00:00,4077214.0,"47 days, 4:33:34","[{'comment_id': 441634972, 'comment_body': ""This is good, but I think it would be more readable to use the `ALTER TABLE <table name> ADD COLUMN IF NOT EXISTS` instead. I know that won't work for ide-integration since it relies on a MySQL container, but I plan to update that soon. But these release-migration-scripts we only run against MariaDB databases where IF NOT EXISTS is supported."", 'comment_created': datetime.datetime(2020, 6, 17, 15, 28, 10, tzinfo=datetime.timezone.utc), 'commenter': 'machristie', 'type': 'User'}, {'comment_id': 441915178, 'comment_body': ""Thanks for reviewing my code. I agree that the query isn't very readable, but sadly, as you've pointed out, unlike mariadb, mysql does not have the 'IF NOT EXISTS' syntax. \r\n\r\nChanging this query to a more readable MariaDB syntax throws an Error during docker-compose. One thing I can do is, write the new query and comment it, and once the migration is successful, I can remove the current complex query and uncomment the new one. Or the other approach I can think of is, remove the complex query and add a commented 'alter table STORAGE_PREFERENCE IF NOT EXISTS' query which can be uncommented when the migration is successfully merged. Please let me know if there's any better approach.\r\n\r\n'But these release-migration-scripts we only run against MariaDB databases where IF NOT EXISTS is supported.' - Do you mean to say in the future, these migration-scripts will only be run against MariaDB?"", 'comment_created': datetime.datetime(2020, 6, 18, 1, 16, 14, tzinfo=datetime.timezone.utc), 'commenter': 'vivekshresta', 'type': 'User'}, {'comment_id': 442489604, 'comment_body': ""So we have migration scripts for production MariaDB databases, thats what release-migration-scripts is. Then there are migration scripts in ide-integration, the 0*-migrations.sql scripts are.  So yes, in the 0*-migrations.sql script, IF NOT EXISTS won't work as you point out, but we can use IF NOT EXISTS in release-migration-scripts."", 'comment_created': datetime.datetime(2020, 6, 18, 20, 39, 43, tzinfo=datetime.timezone.utc), 'commenter': 'machristie', 'type': 'User'}, {'comment_id': 442577364, 'comment_body': 'Now I understand! Thank you for letting me know.', 'comment_created': datetime.datetime(2020, 6, 19, 1, 1, 7, tzinfo=datetime.timezone.utc), 'commenter': 'vivekshresta', 'type': 'User'}]","[{'commit_sha': '8b054df74dad01bd8d43f8ced0c0a3102bec64ef', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '927086fdd52e7a5b69e905f579b61be92581ce42', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b189d15fca6aa57f6c972fb65e908fd3355d1499', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3cd907d3d5e0c4a5700b77c64e56d647893d8a5', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a76d0aa3ed6765f206ef06a5bdb956490a5d6aa3', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd26c56998b96053f096c820d99e80ee6b65680ba', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68ff0533ca36351895247ed565bc87d88afa6b95', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08881207fbce8d59089d4bfde5c9559b4c06a2a2', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14e6e7599c120d16a12bb4f883d803a4190e544b', 'committer_username': 'machristie', 'committer_name': 'Marcus Christie', 'committer_email': None, 'commit_date': datetime.datetime(2011, 7, 9, 17, 35, 3, tzinfo=datetime.timezone.utc)}]",Vivek Shresta Bandaru,55638867,,User,,13,,2,1
471524195,Airavata-3315 final cut,This PR contains changes involving validation across user storage quota when a new experiment is either created or cloned. The size calculation of the user directory and validating it against UserStorageQuota in StoragePreference is done in Airavata.,False,48,https://api.github.com/repos/apache/airavata-django-portal/pulls/48,https://github.com/apache/airavata-django-portal/pull/48,open,287,2,5,3,0,3,0,0,[],2020-08-21 09:33:31+00:00,,0.0,,"[{'comment_id': 478469994, 'comment_body': ""This should mostly be okay. I implemented it so that the experiment data directory is created at launch time because the user can change the experiment's name and project after creating the experiment and the experiment name and project name are used in generating the experiment data directory. So my thinking was might as well wait until the last moment to create it. But this is fine too.\r\n\r\nHowever, since the experiment data directory isn't really needed (it's just used to get the user's directory in the storage resource), maybe there's another way. I thought why not use the StoragePreference.fileSystemRootLocation + the user's username to get the user's directory. Did you consider that approach?"", 'comment_created': datetime.datetime(2020, 8, 27, 14, 39, 7, tzinfo=datetime.timezone.utc), 'commenter': 'machristie', 'type': 'User'}, {'comment_id': 478797577, 'comment_body': ""Hi @machristie ,\r\n\r\nThanks for reviewing the code.\r\nI did not consider this approach, thanks for letting me know. But if I need to go with the current approach, the '_set_storage_id_and_data_dir()' API needs to be called (Please check my latest comments on my Airavata PR). I've posted most of my findings over there. Please let me know if it makes sense to stick with the current approach or if I should go with the initial approach."", 'comment_created': datetime.datetime(2020, 8, 28, 2, 34, 45, tzinfo=datetime.timezone.utc), 'commenter': 'vivekshresta', 'type': 'User'}, {'comment_id': 480347450, 'comment_body': ""I think if you integrate the check with launchExperiment instead of createExperiment (which I just now suggested on the other PR), then you don't need `_set_storage_id_and_data_dir` in `perform_create`."", 'comment_created': datetime.datetime(2020, 8, 31, 19, 26, 42, tzinfo=datetime.timezone.utc), 'commenter': 'machristie', 'type': 'User'}]","[{'commit_sha': '0a04cd537a11e828b2f5e1fc030ceaeaa67274ef', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e37fa1a2a46365dafb7403aeb131c4ce28c11baa', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4449d609624ae426d0f50dc97858b246a0cef4b1', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}]",Vivek Shresta Bandaru,55638867,,User,,13,,2,1
471518386,Airavata 3348 final cut,This PR includes changes to validate the storage limit for a user. Airavata retrieves the size of a user given an experiment and validates against the UserStorageQuota in StoragePreference,False,260,https://api.github.com/repos/apache/airavata/pulls/260,https://github.com/apache/airavata/pull/260,open,8309,5067,24,3,2,17,0,0,[],2020-08-21 09:21:47+00:00,,0.0,,"[{'comment_id': 478809940, 'comment_body': 'if (', 'comment_created': datetime.datetime(2020, 8, 28, 3, 27, 4, tzinfo=datetime.timezone.utc), 'commenter': 'DImuthuUpe', 'type': 'User'}, {'comment_id': 478810063, 'comment_body': 'Null check for the token', 'comment_created': datetime.datetime(2020, 8, 28, 3, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'DImuthuUpe', 'type': 'User'}, {'comment_id': 478810191, 'comment_body': 'if (', 'comment_created': datetime.datetime(2020, 8, 28, 3, 28, 7, tzinfo=datetime.timezone.utc), 'commenter': 'DImuthuUpe', 'type': 'User'}, {'comment_id': 478810371, 'comment_body': 'Experiment {} not configured with a Group Resource Profile', 'comment_created': datetime.datetime(2020, 8, 28, 3, 28, 52, tzinfo=datetime.timezone.utc), 'commenter': 'DImuthuUpe', 'type': 'User'}, {'comment_id': 478810651, 'comment_body': 'Return the regClient back to the pool after using', 'comment_created': datetime.datetime(2020, 8, 28, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'DImuthuUpe', 'type': 'User'}, {'comment_id': 478810896, 'comment_body': 'Are you sure that output.getStdError() is not null?', 'comment_created': datetime.datetime(2020, 8, 28, 3, 30, 56, tzinfo=datetime.timezone.utc), 'commenter': 'DImuthuUpe', 'type': 'User'}, {'comment_id': 478811054, 'comment_body': 'Be consistent with logging. logger.error(""The experiment data directory {} configured on the experiment is wrong."", experimentDataDir);\r\n', 'comment_created': datetime.datetime(2020, 8, 28, 3, 31, 37, tzinfo=datetime.timezone.utc), 'commenter': 'DImuthuUpe', 'type': 'User'}, {'comment_id': 478811664, 'comment_body': 'Wrap this with try catch block and print as much as possible information in the catch in case of an exception. Letting this to catch at main try catch looses valuable information when debugging', 'comment_created': datetime.datetime(2020, 8, 28, 3, 34, 9, tzinfo=datetime.timezone.utc), 'commenter': 'DImuthuUpe', 'type': 'User'}, {'comment_id': 478812212, 'comment_body': 'This method is a very risky one. You can see exceptions at most of the lines. You can use fine grained exception handling by wrapping each sub section with try catches to provide more debug information', 'comment_created': datetime.datetime(2020, 8, 28, 3, 36, 26, tzinfo=datetime.timezone.utc), 'commenter': 'DImuthuUpe', 'type': 'User'}, {'comment_id': 478812321, 'comment_body': 'if (', 'comment_created': datetime.datetime(2020, 8, 28, 3, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'DImuthuUpe', 'type': 'User'}, {'comment_id': 478812587, 'comment_body': ""Print output.getStdOut() as a log before doing this. You don't know what's happening here in case of and error "", 'comment_created': datetime.datetime(2020, 8, 28, 3, 38, 6, tzinfo=datetime.timezone.utc), 'commenter': 'DImuthuUpe', 'type': 'User'}, {'comment_id': 478812799, 'comment_body': 'And do you think that the output format is same for all operating systems (Linux)? If not, your algorithm might be wrong', 'comment_created': datetime.datetime(2020, 8, 28, 3, 38, 58, tzinfo=datetime.timezone.utc), 'commenter': 'DImuthuUpe', 'type': 'User'}, {'comment_id': 478812972, 'comment_body': 'More detailed error message', 'comment_created': datetime.datetime(2020, 8, 28, 3, 39, 29, tzinfo=datetime.timezone.utc), 'commenter': 'DImuthuUpe', 'type': 'User'}, {'comment_id': 478813119, 'comment_body': 'Possible index out of bound error here', 'comment_created': datetime.datetime(2020, 8, 28, 3, 40, 3, tzinfo=datetime.timezone.utc), 'commenter': 'DImuthuUpe', 'type': 'User'}, {'comment_id': 478813194, 'comment_body': 'if (', 'comment_created': datetime.datetime(2020, 8, 28, 3, 40, 22, tzinfo=datetime.timezone.utc), 'commenter': 'DImuthuUpe', 'type': 'User'}, {'comment_id': 478813562, 'comment_body': 'This is a blind algorithm. At least provide your assumptions for experimentDataDirectory value as comments', 'comment_created': datetime.datetime(2020, 8, 28, 3, 41, 47, tzinfo=datetime.timezone.utc), 'commenter': 'DImuthuUpe', 'type': 'User'}, {'comment_id': 478818511, 'comment_body': '> And do you think that the output format is same for all operating systems (Linux)? If not, your algorithm might be wrong\r\n\r\nDid not know about such a use case. Will test it and update it if necessary.', 'comment_created': datetime.datetime(2020, 8, 28, 4, 4, 11, tzinfo=datetime.timezone.utc), 'commenter': 'vivekshresta', 'type': 'User'}]","[{'commit_sha': 'b7f61ded2c80b8738f93f7947892a007153fbf84', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d6a40aec687312d91901ed021cdc8ade421f7ad', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4113d88a1ce3292c0f1c8d1b82fcd54cc08b925', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}]",Vivek Shresta Bandaru,55638867,,User,,13,,2,1
456975296,Airavata 3348,Changes to accommodate EXPERIMENT_DATA_DIR_SIZE in the table Experiment. Thrift file changes will be merged in the next PR.,False,257,https://api.github.com/repos/apache/airavata/pulls/257,https://github.com/apache/airavata/pull/257,closed,201,7,16,11,2,0,0,0,[],2020-07-27 07:43:42+00:00,2020-07-28 09:15:19+00:00,91897.0,"1 day, 1:31:37",[],"[{'commit_sha': '8b054df74dad01bd8d43f8ced0c0a3102bec64ef', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '927086fdd52e7a5b69e905f579b61be92581ce42', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b189d15fca6aa57f6c972fb65e908fd3355d1499', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3cd907d3d5e0c4a5700b77c64e56d647893d8a5', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a76d0aa3ed6765f206ef06a5bdb956490a5d6aa3', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd26c56998b96053f096c820d99e80ee6b65680ba', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68ff0533ca36351895247ed565bc87d88afa6b95', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08881207fbce8d59089d4bfde5c9559b4c06a2a2', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8802e346ba72f933cad3f74d68bca0c7effe7ef', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9379d6bca95eb93f72405dfc441d44ea7d99ab5', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ae4b2d84bf595edb529df8fdac5e02b12b3ae6f', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}]",Vivek Shresta Bandaru,55638867,,User,,13,,2,1
476174745,Persistent storage and framework to add grpc calls in controller service,"As part of developing MFT dashboard, a few APIs are missing and this pull request addresses a few of them.

The two main features in this PR are:
1. **Persistent storage**: Previously, only current running transfers could be tracked. Added persistent storage support in controller service to store TransferRequests which are initiated. Code to track the status of a request and the time taken to reach that status are also added.
2. **Grpc support for controller service**: The current communication between the API service and controller service is asynchronous and done through consul. When a client requests for the details of all transfer requests or a single transfer request, the call needs to be synchronous. Added grpc support for controller service. Made a slight change in the way the grpc stubs are stored. Since host and port are both keys, concatenated them to create a unique key that has a mapping with the grpc stub. Introduced three new modules in refactoring(client, service and stub).
For now, marked controller's server port as 8082 and grpc port as 7005. This can be changed after review.
3. Small changes in the build scripts which involve changing the path of controller war file in builld.sh. Renamed few files to follow the same standard in other modules.
",False,26,https://api.github.com/repos/apache/airavata-mft/pulls/26,https://github.com/apache/airavata-mft/pull/26,closed,701,254,27,3,0,0,0,0,[],2020-08-31 09:23:28+00:00,2022-11-27 00:20:18+00:00,70642610.0,"817 days, 14:56:50",[],"[{'commit_sha': '42e9b45a56228868de17d0f1e32878c659acf8e8', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac5a9ee4487e96f2e4d6d146eebe8a9afbd1126b', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8fd427a1fd2e4d239ca8d1f26a84aca17e66bd9', 'committer_username': 'vivekshresta', 'committer_name': 'Vivek Shresta Bandaru', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 21, 21, 38, 43, tzinfo=datetime.timezone.utc)}]",Vivek Shresta Bandaru,55638867,,User,,13,,2,1

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
16338711,airavata,apache/airavata,Java,116,110,26,105,10336,79,96,79,"[{'id': 471518386, 'number': 260, 'closed': None, 'created': datetime.datetime(2020, 8, 21, 9, 21, 47, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 8309, 'deletions': 5067, 'state': 'open'}, {'id': 456975296, 'number': 257, 'closed': datetime.datetime(2020, 7, 28, 9, 15, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 27, 7, 43, 42, tzinfo=datetime.timezone.utc), 'time_taken': 91897.0, 'time_delta': '1 day, 1:31:37', 'additions': 201, 'deletions': 7, 'state': 'closed'}, {'id': 435776156, 'number': 255, 'closed': datetime.datetime(2020, 8, 3, 15, 37, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 17, 11, 3, 51, tzinfo=datetime.timezone.utc), 'time_taken': 4077214.0, 'time_delta': '47 days, 4:33:34', 'additions': 154, 'deletions': 7, 'state': 'closed'}, {'id': 434261991, 'number': 254, 'closed': datetime.datetime(2020, 6, 15, 3, 20, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 15, 3, 19, 54, tzinfo=datetime.timezone.utc), 'time_taken': 9.0, 'time_delta': '0:00:09', 'additions': 142, 'deletions': 6, 'state': 'closed'}]"
102179100,airavata-django-portal,apache/airavata-django-portal,Python,42,32,15,26,2184,68,101,68,"[{'id': 471524195, 'number': 48, 'closed': None, 'created': datetime.datetime(2020, 8, 21, 9, 33, 31, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 287, 'deletions': 2, 'state': 'open'}, {'id': 435776092, 'number': 42, 'closed': datetime.datetime(2020, 7, 19, 20, 24, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 17, 11, 3, 45, tzinfo=datetime.timezone.utc), 'time_taken': 2798473.0, 'time_delta': '32 days, 9:21:13', 'additions': 44, 'deletions': 3, 'state': 'closed'}, {'id': 407040661, 'number': 41, 'closed': datetime.datetime(2020, 5, 5, 4, 54, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 22, 4, 38, 20, tzinfo=datetime.timezone.utc), 'time_taken': 1124196.0, 'time_delta': '13 days, 0:16:36', 'additions': 5, 'deletions': 0, 'state': 'closed'}]"
193151069,airavata-mft,apache/airavata-mft,Java,39,31,12,23,451,44,12,9,"[{'id': 476174745, 'number': 26, 'closed': datetime.datetime(2022, 11, 27, 0, 20, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 31, 9, 23, 28, tzinfo=datetime.timezone.utc), 'time_taken': 70642610.0, 'time_delta': '817 days, 14:56:50', 'additions': 701, 'deletions': 254, 'state': 'closed'}, {'id': 412558615, 'number': 18, 'closed': datetime.datetime(2022, 11, 27, 0, 20, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 3, 6, 48, 10, tzinfo=datetime.timezone.utc), 'time_taken': 81019928.0, 'time_delta': '937 days, 17:32:08', 'additions': 4190, 'deletions': 94, 'state': 'closed'}, {'id': 412392893, 'number': 16, 'closed': datetime.datetime(2022, 11, 27, 0, 20, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 2, 3, 30, 35, tzinfo=datetime.timezone.utc), 'time_taken': 81118181.0, 'time_delta': '938 days, 20:49:41', 'additions': 1960, 'deletions': 15, 'state': 'closed'}]"
