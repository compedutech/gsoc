pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
435696100,Infinite scrolling,"This is for the [Infinite Scrolling Project](https://github.com/OpenRefine/OpenRefine/wiki/GSoC-2020%C2%A0Ideas#replace-row-pagination-by-infinite-scrolling) as described by #1027.
_____________________
A rough roadmap for the project:
- [x] Downward scrolling that loads next set of rows
- [x] Scrollbar length to reflect the size of the data-set
- [x] Same for `Record` mode
- [x] Speed scrolling, i.e. dragging the scrollbar to a particular position quickly without loading the intermediate rows
- [x] Virtual scrolling i.e. elements (rows) that are not visible, will not be present in the DOM
- [ ] Smooth scrolling
- [x]  Performance
- [ ] #33, #570, #572, #1134 
> Currently, the scrollbar does not reflect changes made through `previous`, `next` and `goto page`.
_____________________
Datasets:
- https://query.data.world/s/7ccggdq62yhyndv2cgkws5m4kzs7ja
- https://correlatesofwar.org/data-sets/state-system-membership/system2016/
- https://correlatesofwar.org/data-sets/world-religion-data/wrp-national-data-1/@@download/file/WRP_national.csv
_____________________
[Here](https://github.com/OpenRefine/OpenRefine/compare/master...lisa761:scroll) is a rougher version of the changes with more detailed commit history.
> It includes a lot of commented out code to keep track of some alternative methods.

Link to the weekly blogs: https://lisa761.github.io/categories/gsoc/
______________________
P.S. I have let some console outputs (browser) remain for better understanding of flow of control.
",False,2746,https://api.github.com/repos/OpenRefine/OpenRefine/pulls/2746,https://github.com/OpenRefine/OpenRefine/pull/2746,closed,346,197,1,41,33,15,0,0,[],2020-06-17 08:41:31+00:00,2022-01-18 11:40:26+00:00,50122735.0,"580 days, 2:58:55","[{'comment_id': 463998395, 'comment_body': 'What types of errors can occur here? Do they need to be logged and/or conveyed to the user?', 'comment_created': datetime.datetime(2020, 8, 1, 20, 41, 7, tzinfo=datetime.timezone.utc), 'commenter': 'tfmorris', 'type': 'User'}, {'comment_id': 463998947, 'comment_body': 'Can these have more mnemonic suffixes than ""2"" to describe what they represent? It looks like perhaps something along the lines of `allSets`, `firstSet`, `lastSet` might be your intent here?', 'comment_created': datetime.datetime(2020, 8, 1, 20, 48, 31, tzinfo=datetime.timezone.utc), 'commenter': 'tfmorris', 'type': 'User'}, {'comment_id': 463999090, 'comment_body': ""The conditionals for these two look like they could be combined along the lines of \r\n\r\n```\r\n    if(!flag) {\r\n      if(self._downwardDirection) {\r\n      } else {\r\n```\r\nso that the conditionals don't have to be scrutinized to see how they differ."", 'comment_created': datetime.datetime(2020, 8, 1, 20, 50, 4, tzinfo=datetime.timezone.utc), 'commenter': 'tfmorris', 'type': 'User'}, {'comment_id': 463999741, 'comment_body': ""This was already returned with the `querySelectorAll` above, wasn't it?"", 'comment_created': datetime.datetime(2020, 8, 1, 20, 58, 48, tzinfo=datetime.timezone.utc), 'commenter': 'tfmorris', 'type': 'User'}, {'comment_id': 464000188, 'comment_body': 'More descriptive name please', 'comment_created': datetime.datetime(2020, 8, 1, 21, 4, 1, tzinfo=datetime.timezone.utc), 'commenter': 'tfmorris', 'type': 'User'}, {'comment_id': 464000752, 'comment_body': 'These two lines are obsolete as well, correct?', 'comment_created': datetime.datetime(2020, 8, 1, 21, 12, 9, tzinfo=datetime.timezone.utc), 'commenter': 'tfmorris', 'type': 'User'}, {'comment_id': 464001980, 'comment_body': ""This feels too long to me. If I'm scrolling with the scroll wheel, the screen basically goes blank until I stop scrolling. If I'm using the scroll wheel, I want to be seeing at least a few updates a second. I'm not sure if reducing this to 100 msec would help or if a different heuristic is needed (e.g. throttling the update rate rather than shutting off updates entirely if the scroll rate is too high)."", 'comment_created': datetime.datetime(2020, 8, 1, 21, 28, 22, tzinfo=datetime.timezone.utc), 'commenter': 'tfmorris', 'type': 'User'}, {'comment_id': 464010939, 'comment_body': ""Actually, on further review, there's a whole bunch of pagination related code that appears to be obsolete: lines 180-244, `onClick*Page` functions, etc."", 'comment_created': datetime.datetime(2020, 8, 1, 23, 36, 24, tzinfo=datetime.timezone.utc), 'commenter': 'tfmorris', 'type': 'User'}, {'comment_id': 464091647, 'comment_body': 'Yeah, sure! There are two `load-next-set`s that we are working with, one for the previous set and one for the next state. So I guess I could go for `previousSet` and `nextSet`?', 'comment_created': datetime.datetime(2020, 8, 2, 15, 35, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lisa761', 'type': 'User'}, {'comment_id': 464091729, 'comment_body': ""Yes, I'll add that."", 'comment_created': datetime.datetime(2020, 8, 2, 15, 36, 20, tzinfo=datetime.timezone.utc), 'commenter': 'lisa761', 'type': 'User'}, {'comment_id': 464094287, 'comment_body': 'Right, I will change that, thanks.', 'comment_created': datetime.datetime(2020, 8, 2, 15, 59, 5, tzinfo=datetime.timezone.utc), 'commenter': 'lisa761', 'type': 'User'}, {'comment_id': 464094406, 'comment_body': 'Yup, I will get to removing them.', 'comment_created': datetime.datetime(2020, 8, 2, 16, 0, 13, tzinfo=datetime.timezone.utc), 'commenter': 'lisa761', 'type': 'User'}, {'comment_id': 464096595, 'comment_body': ""The reason I didn't go for throttling is because the amount of time required to render rows limits the fps to a great extent, even if we allow something like 60 fps (the most common rate followed)."", 'comment_created': datetime.datetime(2020, 8, 2, 16, 24, 29, tzinfo=datetime.timezone.utc), 'commenter': 'lisa761', 'type': 'User'}, {'comment_id': 464112930, 'comment_body': 'Not really, this happens sometimes when the scroll function starts looking for these elements before they were added to the UI.', 'comment_created': datetime.datetime(2020, 8, 2, 19, 11, 41, tzinfo=datetime.timezone.utc), 'commenter': 'lisa761', 'type': 'User'}, {'comment_id': 468444327, 'comment_body': 'Typo: ""Srcolling""', 'comment_created': datetime.datetime(2020, 8, 11, 9, 21, 41, tzinfo=datetime.timezone.utc), 'commenter': 'wetneb', 'type': 'User'}]","[{'commit_sha': '75de27771fbbbce6882da67ca437db81af28d127', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed8a905b8e4ed5ddd90270afe552e78e418c7b22', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9daa532c7fb632eca5eaeeab9680af677dd55f84', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '810edc4af716fbdfcd67f5e54e7cbab10697fcbf', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7065b8d278ae22114ea5a86195c4cb485a34e3b', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2ea75cf31708b63ab7369b91d15027e8304a254', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a56d0f38065f877d37060c95c166cc037fc3966a', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '183f42e587843062e7f30ff470e5400f3689f5ba', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c806df6307dee35d9d1270605ef4737a98f948eb', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b6e13851aa4895fa6e6bb5013d7518a398c8f1c', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5112720111ea82d97a80040fd4f2744868c51731', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8f6587ee060cb4d88545428d562ef639954b39a', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51ac8a32c087ad392db4392b503447c4cedf27cf', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cd0852e36ad65f4cdf8d664dcfc98b101ec3142', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3c45cb0b2e6912b65d4a9903ba0a178eb1b3c96', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b4cec2fc25421cfb7db7b59b4f9e6250e0c40f5', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6587aa27c8f33b6f4afa86b2b0c0d3bde07c3d6c', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80b9de65bb9a679e1638723bad28007397e74f8e', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19bd363f3a02b69fb5f0833ca87a450126ea675e', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b8ac3ea35df26f91de23ea71279562474ee1b94', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c6e972f05010e3eb6b4e76eb8757923c9eb1e03', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ce31d0b1bd9202d8be19c63d60b854047ab7d45', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97faa465bb2d2ad29a9e01c698ad2ca8d929a2e8', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1abb9f925506f73ac657d6f952a69da12d8219f2', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ddd5a879833250201ed30fc6f05707b374394f2', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4861508de79da9f2dd03e1adc922a186c7bfdabf', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca39d1667868b29378ea6a1f7958dabdd1214bfa', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85807cdb8c639ca91376ef2a91158decc9aa0286', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff74ee0de4ed877f77bb9bd8b4d255cb7fdd1715', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98e4562bea8c7be9b54057b8bb3f53805c567d78', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66997ae4ab9abfca6f8744e7d165e5c708e471d8', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25df69a5e1c0a4b4b363be635482b2199f7dd6e6', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abb77ea343564440e22c73424847ecd3edd94ddd', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e143e8f8279a9030c218de39024e437eac003642', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'afb3f4ad895a13c3cde92fe2526bef417c17d862', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e3dfcee63c9793d84567343aa1d334b5be9dd72', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a5dac81066f9a9882e7ca54f533881236f84287', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f36990955154157395cf3c6380ac70d3ec0d3f8b', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87b3bfcf6a82a49743a35b60020bccfc8fb8218f', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7742caa1e98dfc64b1617ab1c163f58bb98c0ca0', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e559b8209594c23248c178b6ed868303961de97', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}]",Lisa Chandra,52909743,,User,,37,,36,42
434116276,Refactoring the data table into a single container,"Continuation of #2422 

- Fixed the orange bars
- Added a sticky header
> Only for `column-header` row (one with column names). The entire header group for XML/JSON (with the node structure) is not sticky yet.
- Fixed border of header elements in Firefox",True,2719,https://api.github.com/repos/OpenRefine/OpenRefine/pulls/2719,https://github.com/OpenRefine/OpenRefine/pull/2719,closed,67,113,4,15,8,0,0,0,[],2020-06-14 09:05:42+00:00,2020-06-16 09:40:14+00:00,174872.0,"2 days, 0:34:32",[],"[{'commit_sha': '5d4fd36676b035524b130f6ff74adfdb89519bf5', 'committer_username': 'kushthedude', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 12, 13, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb7df3ea45a2c6a960528946905fb3314d8c0d5a', 'committer_username': 'kushthedude', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 12, 13, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f21b8ed1a8ac6a24c950a0a9d2ac85bdba55966', 'committer_username': 'kushthedude', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 12, 13, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2413d819d7e18bc4faf25c8543418f8523c7e240', 'committer_username': 'kushthedude', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 12, 13, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98318639e86e2189a09bf65cd1857296953ebb90', 'committer_username': 'kushthedude', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 12, 13, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25b8a97ee746ccc516dfabf028360e46c6b92c83', 'committer_username': 'kushthedude', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 12, 13, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1daf07c4222f0ce6a8a3bc5b7b0c64f2bd78a17', 'committer_username': 'kushthedude', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 12, 13, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ad84c01fd76ddad796b77124134e42d35d68abf', 'committer_username': 'kushthedude', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 12, 13, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99c1e8afc9039faefa3b4e199bbab2fde4240108', 'committer_username': 'kushthedude', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 12, 13, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '684f7a5b4e682c7d9f6a87e2d72f2bb9f8a3ac39', 'committer_username': 'kushthedude', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 12, 13, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c89731b35edb8df2552932cc6c1efbf1e037ed3d', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba6ae4bfc654dd2c9d58888bad7da42cc8ac8426', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '406635b01fc36dbd88e80ffe509dd16eba1120b5', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b076f10287c30f665b7ad54e91463ed52e9f60d7', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b2683bf7ed3233c7f13bf9c95d6d469a1611c18', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}]",Lisa Chandra,52909743,,User,,37,,36,42
454728246,Faster rendering of rows and cells,"The rendering functions for rows and cells use jQuery which causes a greater overhead. Replacing it (in cases where it isn't necessary) by javascript speeds up the functions tremendously. 

The comparison below is across 10 rows and 15 columns. The difference increases with greater number of rows and columns.

## Before
<img width=""495"" alt=""2020-07-22 (4)"" src=""https://user-images.githubusercontent.com/52909743/88102994-0bc66e80-cbbe-11ea-9864-702be3c7b8a3.png"">

## After
<img width=""496"" alt=""2020-07-22 (2)"" src=""https://user-images.githubusercontent.com/52909743/88103007-1123b900-cbbe-11ea-9138-09710fbdc4d6.png"">

",True,2973,https://api.github.com/repos/OpenRefine/OpenRefine/pulls/2973,https://github.com/OpenRefine/OpenRefine/pull/2973,closed,62,46,2,5,6,10,0,0,[],2020-07-21 20:26:30+00:00,2020-07-28 16:25:33+00:00,590343.0,"6 days, 19:59:03","[{'comment_id': 459825663, 'comment_body': ""I haven't investigated in detail, so I may be completely off base, but is there an opportunity to use a single global function here which knows how to find the relevant element and visible/hidden status based on information from the event so that we don't have to create N*2 functions?"", 'comment_created': datetime.datetime(2020, 7, 24, 2, 33, 39, tzinfo=datetime.timezone.utc), 'commenter': 'tfmorris', 'type': 'User'}, {'comment_id': 459825864, 'comment_body': 'Is this duplication correct? (I know it has nothing to do with your change)', 'comment_created': datetime.datetime(2020, 7, 24, 2, 34, 48, tzinfo=datetime.timezone.utc), 'commenter': 'tfmorris', 'type': 'User'}, {'comment_id': 459826479, 'comment_body': ""I don't recognize the \\u00A0 text node idiom. What is it doing? If it's uncommon, as opposed to just my Javascript naïveté, perhaps a comment on first appearance is in order."", 'comment_created': datetime.datetime(2020, 7, 24, 2, 38, 16, tzinfo=datetime.timezone.utc), 'commenter': 'tfmorris', 'type': 'User'}, {'comment_id': 460529144, 'comment_body': ""This is used in cases of url so that what's displayed within the cell is the same url as the hyperlink for the `<a>` tag. So for cells that have a url, the displayed value is the said url."", 'comment_created': datetime.datetime(2020, 7, 26, 13, 39, 26, tzinfo=datetime.timezone.utc), 'commenter': 'lisa761', 'type': 'User'}, {'comment_id': 460530099, 'comment_body': '`\\u00A0` is actually the unicode character for nbsp, I used it here to insert nbsp text nodes within the tags. I am not sure how common it is though. But as far as I checked this seems to be one of the easier ways to insert nbsp text using javascript. Here is the Stack Overflow answer about it: https://stackoverflow.com/a/10951405/11943496', 'comment_created': datetime.datetime(2020, 7, 26, 13, 49, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lisa761', 'type': 'User'}, {'comment_id': 460535443, 'comment_body': 'That should be possible, I will take a look it.', 'comment_created': datetime.datetime(2020, 7, 26, 14, 37, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lisa761', 'type': 'User'}, {'comment_id': 460953602, 'comment_body': ""So I checked it, and passing arguments to an event handler is not possible unless we create a function to do it, which would make it's removal redundant. The other possible way would be to use `event.currentTarget` instead of passing `editLink`, or declaring it as a global variable. But since it's jQuery the event is a jQuery object, and we'd end up using jQuery to style the element.\r\n"", 'comment_created': datetime.datetime(2020, 7, 27, 14, 57, 46, tzinfo=datetime.timezone.utc), 'commenter': 'lisa761', 'type': 'User'}, {'comment_id': 461113323, 'comment_body': 'OK, thanks for investigating. Sorry to send you on a wild goose chase!', 'comment_created': datetime.datetime(2020, 7, 27, 19, 18, 41, tzinfo=datetime.timezone.utc), 'commenter': 'tfmorris', 'type': 'User'}, {'comment_id': 461114758, 'comment_body': ""```suggestion\r\n    tdStar.appendChild(star).appendChild(document.createTextNode('\\u00A0')); // NBSP\r\n```\r\nGot it. Perhaps just add a brief comment on the first use to help out readers who don't have their Unicode code points memorized."", 'comment_created': datetime.datetime(2020, 7, 27, 19, 21, 22, tzinfo=datetime.timezone.utc), 'commenter': 'tfmorris', 'type': 'User'}, {'comment_id': 461152397, 'comment_body': 'Okay, I will add it!', 'comment_created': datetime.datetime(2020, 7, 27, 20, 32, 58, tzinfo=datetime.timezone.utc), 'commenter': 'lisa761', 'type': 'User'}]","[{'commit_sha': 'abc93d6cb978e9752fe71619bb3f6ded56fe8055', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a98f4eea749c5ecae407d3de661510cc88cd3c28', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28272bdfccb62d884f69c8084a1a49370f254d6a', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94e5e7b4330d9bd6c996ca6d7bef0249b8f35b0e', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f090797e958ab5187c5bf910dc5fa4ca3e21af05', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}]",Lisa Chandra,52909743,,User,,37,,36,42
469579427,Restructured the Facets,"Restructured the facets from prototype to class based structure as discussed in [this](https://groups.google.com/g/openrefine-dev/c/xu4bTHKz9_s) thread.

Added Facet.js to store the base class. It contains these two functions:
- minimze
- remove
",True,3097,https://api.github.com/repos/OpenRefine/OpenRefine/pulls/3097,https://github.com/OpenRefine/OpenRefine/pull/3097,closed,1752,1816,8,11,5,4,0,0,[],2020-08-18 15:38:08+00:00,2020-08-25 16:29:28+00:00,607880.0,"7 days, 0:51:20","[{'comment_id': 473682586, 'comment_body': 'With Firefox 68 I get an error at this line: `SyntaxError: fields are not currently supported`.', 'comment_created': datetime.datetime(2020, 8, 20, 7, 16, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wetneb', 'type': 'User'}, {'comment_id': 475118425, 'comment_body': '`addCommas` ~~is duplicated in multiple facets, so could be hoisted into the super class, but~~ we should probably just switch to doing it right: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat\r\n```suggestion\r\n    var lang = Refine.getPreference(\'userLang\', \'en\');\r\n    var formatter = new Intl.NumberFormat(lang, { useGrouping: true, maximumFractionDigits: 2 })\r\n\r\n    this._elmts.statusDiv.html($.i18n(\'core-facets/value-range\', formatter.format(this._from), formatter.format(this._to));\r\n    \r\n```\r\nwhere the `translation-en.json` entry for ""core-facets/value-range"" is ""$1 &mdash; $2"". The formatter can probably be initialized/cached in the constructor.', 'comment_created': datetime.datetime(2020, 8, 22, 18, 38, 9, tzinfo=datetime.timezone.utc), 'commenter': 'tfmorris', 'type': 'User'}, {'comment_id': 475118474, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 22, 18, 38, 48, tzinfo=datetime.timezone.utc), 'commenter': 'tfmorris', 'type': 'User'}, {'comment_id': 475118702, 'comment_body': ""Actually, it looks like this copy isn't used anyway, so it can just be deleted.\r\n```suggestion\r\n```"", 'comment_created': datetime.datetime(2020, 8, 22, 18, 41, 28, tzinfo=datetime.timezone.utc), 'commenter': 'tfmorris', 'type': 'User'}]","[{'commit_sha': 'a142a38aac30a4419238faacad42c071cc5d0a18', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a997ec87d09ed06647386961bdb9ee0228afac1', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe6669f886de0cae5b7b3a42e16a502c48038e92', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b7fa2ee2b91bb8f7bf03a8d24a1a42c8841dd8c', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2ccd0961228efb44815399addc0422d8c9e6de6', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af903eeb41c91ad5e79fdf2cc12e1d923ba0faf1', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a141eead0ee0b7bba3df84e4d386f28d5219e205', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63285475c1bee868b5cb63f1e53c475df129a15a', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f17148f1b35fdb8c6a33396a9d64e27290ed0e3', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9522dd4f5cdd40fd63b88470f7f37b829d8d98c1', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73ad7132c3436c33658bcacc345c0234703bab68', 'committer_username': 'lisa761', 'committer_name': 'Lisa Chandra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 15, 7, 30, 59, tzinfo=datetime.timezone.utc)}]",Lisa Chandra,52909743,,User,,37,,36,42

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
6220644,OpenRefine,OpenRefine/OpenRefine,Java,1939,10737,473,369,8256,678,17,32,"[{'id': 469579427, 'number': 3097, 'closed': datetime.datetime(2020, 8, 25, 16, 29, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 18, 15, 38, 8, tzinfo=datetime.timezone.utc), 'time_taken': 607880.0, 'time_delta': '7 days, 0:51:20', 'additions': 1752, 'deletions': 1816, 'state': 'closed'}, {'id': 454728246, 'number': 2973, 'closed': datetime.datetime(2020, 7, 28, 16, 25, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 21, 20, 26, 30, tzinfo=datetime.timezone.utc), 'time_taken': 590343.0, 'time_delta': '6 days, 19:59:03', 'additions': 62, 'deletions': 46, 'state': 'closed'}, {'id': 435696100, 'number': 2746, 'closed': datetime.datetime(2022, 1, 18, 11, 40, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 17, 8, 41, 31, tzinfo=datetime.timezone.utc), 'time_taken': 50122735.0, 'time_delta': '580 days, 2:58:55', 'additions': 346, 'deletions': 197, 'state': 'closed'}, {'id': 434116276, 'number': 2719, 'closed': datetime.datetime(2020, 6, 16, 9, 40, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 14, 9, 5, 42, tzinfo=datetime.timezone.utc), 'time_taken': 174872.0, 'time_delta': '2 days, 0:34:32', 'additions': 67, 'deletions': 113, 'state': 'closed'}, {'id': 433993834, 'number': 2714, 'closed': datetime.datetime(2020, 6, 14, 9, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 13, 11, 20, 3, tzinfo=datetime.timezone.utc), 'time_taken': 78177.0, 'time_delta': '21:42:57', 'additions': 59, 'deletions': 108, 'state': 'closed'}, {'id': 400973484, 'number': 2530, 'closed': datetime.datetime(2020, 4, 14, 8, 3, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 8, 17, 11, 4, tzinfo=datetime.timezone.utc), 'time_taken': 485542.0, 'time_delta': '5 days, 14:52:22', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 399774018, 'number': 2520, 'closed': datetime.datetime(2020, 6, 25, 12, 35, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 6, 16, 52, 33, tzinfo=datetime.timezone.utc), 'time_taken': 6896601.0, 'time_delta': '79 days, 19:43:21', 'additions': 9, 'deletions': 5, 'state': 'closed'}, {'id': 393083010, 'number': 2471, 'closed': datetime.datetime(2020, 6, 15, 17, 30, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 24, 15, 58, 24, tzinfo=datetime.timezone.utc), 'time_taken': 7176715.0, 'time_delta': '83 days, 1:31:55', 'additions': 168, 'deletions': 28, 'state': 'closed'}, {'id': 388745745, 'number': 2415, 'closed': datetime.datetime(2020, 3, 15, 16, 4, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 15, 15, 44, 29, tzinfo=datetime.timezone.utc), 'time_taken': 1173.0, 'time_delta': '0:19:33', 'additions': 99, 'deletions': 4, 'state': 'closed'}, {'id': 387965620, 'number': 2408, 'closed': datetime.datetime(2020, 3, 21, 10, 38, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 13, 20, 26, 36, tzinfo=datetime.timezone.utc), 'time_taken': 655929.0, 'time_delta': '7 days, 14:12:09', 'additions': 65, 'deletions': 0, 'state': 'closed'}, {'id': 387937796, 'number': 2407, 'closed': datetime.datetime(2020, 3, 14, 14, 36, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 13, 19, 20, 37, tzinfo=datetime.timezone.utc), 'time_taken': 69378.0, 'time_delta': '19:16:18', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 387151694, 'number': 2397, 'closed': datetime.datetime(2020, 3, 12, 10, 13, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 12, 10, 11, 20, tzinfo=datetime.timezone.utc), 'time_taken': 155.0, 'time_delta': '0:02:35', 'additions': 21, 'deletions': 3, 'state': 'closed'}, {'id': 387081513, 'number': 2394, 'closed': datetime.datetime(2020, 3, 12, 10, 54, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 12, 7, 22, 28, tzinfo=datetime.timezone.utc), 'time_taken': 12746.0, 'time_delta': '3:32:26', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 386237493, 'number': 2385, 'closed': datetime.datetime(2020, 3, 11, 9, 41, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 10, 16, 28, 26, tzinfo=datetime.timezone.utc), 'time_taken': 61971.0, 'time_delta': '17:12:51', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 386136990, 'number': 2384, 'closed': datetime.datetime(2020, 3, 13, 20, 24, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 10, 13, 35, 34, tzinfo=datetime.timezone.utc), 'time_taken': 283744.0, 'time_delta': '3 days, 6:49:04', 'additions': 17, 'deletions': 1, 'state': 'closed'}, {'id': 381064770, 'number': 2339, 'closed': datetime.datetime(2020, 3, 1, 11, 33, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 27, 20, 45, 37, tzinfo=datetime.timezone.utc), 'time_taken': 226087.0, 'time_delta': '2 days, 14:48:07', 'additions': 10, 'deletions': 1, 'state': 'closed'}]"
