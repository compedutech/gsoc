pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
415529090,remove string.c from the package.,Removed string.c from the package and also removed usage of it from setup script and string module.,True,655,https://api.github.com/repos/intel/cve-bin-tool/pulls/655,https://github.com/intel/cve-bin-tool/pull/655,closed,24,155,4,9,6,5,0,0,[],2020-05-09 06:52:54+00:00,2020-05-11 22:08:21+00:00,227727.0,"2 days, 15:15:27","[{'comment_id': 423216860, 'comment_body': 'Have you made sure that this is really getting all the lines? Usually we need a `f.seek(0)` before a read and after it was written to.', 'comment_created': datetime.datetime(2020, 5, 11, 17, 55, 22, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 423266287, 'comment_body': 'Yeah I have put f.seek(0) now and fixed sum bugs.\r\n```console\r\nNew results:\r\nsubprocess strings: 0.001479687000028207\r\npure python: 0.0007050880003589555\r\n```', 'comment_created': datetime.datetime(2020, 5, 11, 19, 24, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 423315133, 'comment_body': 'Have we re-benchmarked with this for loop based implementation?', 'comment_created': datetime.datetime(2020, 5, 11, 20, 57, 22, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 423316277, 'comment_body': 'Yes, the benchmark I have shared is of this for loop implementation which is way faster than other implementation.', 'comment_created': datetime.datetime(2020, 5, 11, 20, 59, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 423317395, 'comment_body': 'Let me put that benchmark code again share the results.', 'comment_created': datetime.datetime(2020, 5, 11, 21, 1, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}]","[{'commit_sha': '71a380642391c55ab6afe5ef33fb770a1a6236fb', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a4f09d40cd6d3d88eff43220522e04c813e981f', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20d76b8bcac856117e0329f555c9a37b2b2873c0', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18083b52c37a4f3f5f96921c6a818322beeaa834', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbf03fa7e45d40f3424e985949a635abde740abc', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e34f724db17040a3ea06bc495961faea12952252', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '644714a463cc534bdb6f49f15c9dfac01c545aa5', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d530bad23519411d1450e11d5f85a49d684f487', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36fac32d8f73a7f70f852047133875e75a07e8ed', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}]",Niraj Kamdar,51387861,,User,,102,,31,61
415550744,Make checkers use object oriented paradigm,,True,656,https://api.github.com/repos/intel/cve-bin-tool/pulls/656,https://github.com/intel/cve-bin-tool/pull/656,closed,1038,1802,57,64,14,12,0,0,[],2020-05-09 10:01:27+00:00,2020-05-13 00:15:22+00:00,310435.0,"3 days, 14:13:55","[{'comment_id': 423203657, 'comment_body': ""Let's have imports at the top, let's also use relative imports\r\n\r\n```suggestion\r\nfrom ..util import regex_find\r\n```"", 'comment_created': datetime.datetime(2020, 5, 11, 17, 32, 1, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 423283462, 'comment_body': 'We should probably do this when the class is created, so that we can validate that checkers are being written correctly (at least somewhat) right away. We can use something called a `MetaClass` to do so. They are kind of whacky so I\'ve written some code that hopefully will kick start you:\r\n\r\n```python\r\nimport re\r\nimport unittest\r\nimport collections\r\n\r\nVendorPackagePair = collections.namedtuple(""VendorPackagePair"", [""vendor"", ""package""])\r\n\r\n\r\nclass CheckerMetaClass(type):\r\n    def __init__(cls, name, bases, namespace, **kwargs):\r\n        """"""\r\n        Needed for compatibility with Python 3.5\r\n        """"""\r\n        super().__init__(name, bases, namespace)\r\n\r\n    def __new__(cls, name, bases, props, module=None):\r\n        # Create the class\r\n        cls = super(CheckerMetaClass, cls).__new__(cls, name, bases, props)\r\n        # HACK Skip validation is this class is the base class\r\n        if name == ""Checker"":\r\n            return cls\r\n        # Validate that the checker has a module name set\r\n        if not cls.MODULE_NAME:\r\n            raise AssertionError(""%s missing module name"" % (name,))\r\n        # Validate that we have at least one vendor package pair\r\n        if len(cls.VENDOR_PACKAGE) < 1:\r\n            raise AssertionError(""%s needs at least one vendor package pair"" % (name,))\r\n        # Validate that each vendor package pair is of length 2\r\n        cls.VENDOR_PACKAGE = list(\r\n            map(lambda vpkg: VendorPackagePair(*vpkg), cls.VENDOR_PACKAGE)\r\n        )\r\n        # Compile regex\r\n        cls.CONTAINS_PATTERNS = list(map(re.compile, cls.CONTAINS_PATTERNS))\r\n        cls.VERSION_PATTERNS = list(map(re.compile, cls.VERSION_PATTERNS))\r\n        cls.FILENAME_PATTERNS = list(map(re.compile, cls.FILENAME_PATTERNS))\r\n        # Return the new checker class\r\n        return cls\r\n\r\n\r\nclass Checker(metaclass=CheckerMetaClass):\r\n    CONTAINS_PATTERNS = []\r\n    VERSION_PATTERNS = []\r\n    FILENAME_PATTERNS = []\r\n    VENDOR_PACKAGE = []\r\n    MODULE_NAME = """"\r\n\r\n\r\nclass TestChecker(unittest.TestCase):\r\n    def test_valid_checker(self):\r\n        class MyChecker(Checker):\r\n            CONTAINS_PATTERNS = [r""look""]\r\n            VERSION_PATTERNS = [r""for""]\r\n            FILENAME_PATTERNS = [r""mypackage""]\r\n            VENDOR_PACKAGE = [(""myvendor"", ""mypackage"")]\r\n            MODULE_NAME = ""mychecker""\r\n\r\n        self.assertEqual(type(MyChecker.CONTAINS_PATTERNS[0]), re.Pattern)\r\n        self.assertEqual(type(MyChecker.VERSION_PATTERNS[0]), re.Pattern)\r\n        self.assertEqual(type(MyChecker.FILENAME_PATTERNS[0]), re.Pattern)\r\n        self.assertEqual(type(MyChecker.VENDOR_PACKAGE[0]), VendorPackagePair)\r\n\r\n    def test_no_module_name(self):\r\n        with self.assertRaisesRegex(AssertionError, ""module name""):\r\n\r\n            class MyChecker(Checker):\r\n                CONTAINS_PATTERNS = [r""look""]\r\n                VERSION_PATTERNS = [r""for""]\r\n                FILENAME_PATTERNS = [r""mypackage""]\r\n                VENDOR_PACKAGE = [(""myvendor"", ""mypackage"")]\r\n\r\n    def test_no_vpkg(self):\r\n        with self.assertRaisesRegex(AssertionError, ""at least one vendor""):\r\n\r\n            class MyChecker(Checker):\r\n                CONTAINS_PATTERNS = [r""look""]\r\n                VERSION_PATTERNS = [r""for""]\r\n                FILENAME_PATTERNS = [r""mypackage""]\r\n                MODULE_NAME = ""mychecker""\r\n```\r\n\r\nYou\'ll notice I\'ve also included some tests we should put somewhere, as well as compiling the regexs when the class is created. So we don\'t call `re.compile` everytime `get_version` is called (even though the overhead is minimal, since it [caches](https://bugs.python.org/issue17441) the actual compilation of the regex, we still save the call)\r\n\r\nReferences: https://stackoverflow.com/questions/100003/what-are-metaclasses-in-python', 'comment_created': datetime.datetime(2020, 5, 11, 19, 57, 34, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 423287571, 'comment_body': 'Just FYI, you don\'t have to put `r` in front of the string unless you might have an issue with escape characters:\r\n\r\nhttps://docs.python.org/3/library/re.html\r\n\r\n> The solution is to use Pythonâ€™s raw string notation for regular expression patterns; backslashes are not handled in any special way in a string literal prefixed with \'r\'. So r""\\n"" is a two-character string containing \'\\\' and \'n\', while ""\\n"" is a one-character string containing a newline. Usually patterns will be expressed in Python code using this raw string notation.', 'comment_created': datetime.datetime(2020, 5, 11, 20, 5, 35, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 423288245, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 5, 11, 20, 6, 59, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 424030967, 'comment_body': 'Was this a mistake or does the filename need to be changed to also be gnutls-cli?', 'comment_created': datetime.datetime(2020, 5, 12, 21, 1, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 424031509, 'comment_body': ""As above -- contents and filename don't match."", 'comment_created': datetime.datetime(2020, 5, 12, 21, 2, 3, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 424033768, 'comment_body': 'No previous version had it like that.', 'comment_created': datetime.datetime(2020, 5, 12, 21, 6, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 424042147, 'comment_body': 'Maybe both binary has same version signature. ', 'comment_created': datetime.datetime(2020, 5, 12, 21, 23, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 424058033, 'comment_body': ""I think I'd added this testcase when something wasn't working at one point..."", 'comment_created': datetime.datetime(2020, 5, 12, 21, 58, 13, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 424060031, 'comment_body': ""Hmmm, no wasn't me. Ya I'm of the mind these probably need to be changed back, or we need to be sure of why they're chaging"", 'comment_created': datetime.datetime(2020, 5, 12, 22, 2, 51, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 424061199, 'comment_body': 'Ah I found what I was thinking of though: ff14b13797b4aaf3911adde3ba40e0e14b1d810b\r\n\r\nMaybe I did something up with that change?\r\n\r\nOr the next possibly relevant change after that is dbca3aaa776166b9c7c5147a3c99bb406f8f4424\r\n\r\n> `git log -p -- cve_bin_tool/checkers/gnutls.py`', 'comment_created': datetime.datetime(2020, 5, 12, 22, 5, 38, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 424065608, 'comment_body': ""That's weird.  Let's just fix it now, then?  or open an issue to fix it after if you want to get this PR merged ASAP?"", 'comment_created': datetime.datetime(2020, 5, 12, 22, 16, 37, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}]","[{'commit_sha': '33522799dcbd357a9fd4d3a7a0169146476cb2ab', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73d7f3df2dfb66d81d8623c870148995e2e15ed2', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfce604aa51dc4e6a448cb8ba3a8f8302531168c', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f39e384a301a6d46d0f2f7a6c49dfed64d411c8f', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15da8600a2de2f353f5ab34261dd02db776c171b', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc914676d4be5d4264bbe9e1b2ccecdea9cac5ce', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a20fcdf95b60060ae91bd865ef4bf9f355cdbb3d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4796afaa91cb320612487c6240f207a3d45f099b', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fc55c639d72d165a0be3742c2bda0d3fc93483d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc8da013929c2b2c63494e4b94625c2d647b7063', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91bdb1cc1c89f3beed327e6b47b040f7a72d50ba', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46a1b1fc0e696864c70396cbe94481500488a100', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c21ed5b2accb8811b94e53457e6b5dd4cc0dd9c', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3d917c84c0a81dbf9b2849142e34da1fddb3222', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b875db93ded8fca817e26a2d1c4ad077dc76f45a', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9208e26e0cc2e277f85c725c393007bc13f23cb4', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61af735ac7a1f573cc11d59e134b1a4eb00ffae1', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7aa064969af883fbdfdc665ffd371bb23167c2e', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f840ec619a80021e2d3f8884e96d3a016fecff62', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70742d5befbbdd29775ec04dd725cfe92dd0a541', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e87f122c7d9e4cfff545ff5771103aa31541b35d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba1a02fa98f53e3c55b053bde409ec96725c9e18', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2116ea8f002fadd78d50514a423a26af53d4644', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec5b15337d09a7da108de16a6268dc8c4d82fd1d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a496b512445dde2d0164e441b43bd86ed5f90c0', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a34d53e2a046c7e896762ffc56cc284cc565d637', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21fdb7e75227d64de985916d23fb34e5590c89f2', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f26a422ac416d7ac00e0b1ac7457664a105e4bf2', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '395271156a159b770195e20993ec760ebbb7006e', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdcccaa41568d838d567418ada1c05ead5127fbf', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f476f48f46b885fe528dd4e1e1fdcda5bcf6f05b', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dceb76dcbe175f964e26a2d6442c720c39968114', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aeccb28d30088b2dfdec4055790820e5ba9f4de8', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aafa5194efb1e2e5ddd27a14b12e90444a1d7f70', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e2e04f296a59303c4b7346f6cd86b7b86d1915e', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2013f9c66b9d765fc8e21ddffa1d0fee5fbfb93a', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e09a2ae96529c7dc4eb65c993e85569c0dcdf1a9', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4404377745ac1c940e88f6569cec7e45eeb13b7f', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c363ca5da5f13553c646efbb2fd09d0cbb0f64b6', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38cfcb2bd74ac777da90582ee759347207f75fe3', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd94e173a180b0479582b1fe909847f4548130676', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e7135ea4d42041eda6f4b480009c59909dd04ac', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '541b0378661ee5e9d38f3f830bd3ee82d6f19896', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '323d5eeef5ec33b16ca5c3b0c3ec385ae15095e3', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e926424ff020f8a92f950ccefa929d2c5fbb9e3', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a754cc1ad05a4872efbaca226fbf219998cb9f2b', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f878c58e8b60cc8d15498a1f3ad0beb8a669125', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '203f1a0fbecc00f87c479829cd26d2d360d784e5', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4f69ca5be99d13e722a0bc05caa8c3f29b7a6af', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca8f5faf6b4532e5fe56dbe99f4b0de9c233961c', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bd66fae0f87529073fc2975a44b4bae54d3641c', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e2bda410a2daad7007130f2decd59756447a632', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5f1ab5952faa129c4fd882b9b31bd23e3c88246', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79787999550d641c4262c14d667fdad1654575d9', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f00571517be334bc038f210c9213055785fa258', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df46995ebe2d593168aa16d93afa29a5f06c1ece', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c9fdb652ae5800b243cf126ad25062504ae7926', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eef22e40de905e7ef4b8534b844200ed88639aa1', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f61cfd62cfb6dc8505c5a636f169f1ec496c27e7', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59cf2ad4d2f2be6a70c7518fef530cc86af5053c', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '308da3e47eed100411b922a00e82b8a6c2c76cb6', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94e541f9557abc1d6122bee4bc0eebb06b1b8879', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1563c6992785587d31b6fd4f0210416a9b14f598', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73bd723c7c5c4e6b7fc6d3d5fc2371fc6b909a4e', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}]",Niraj Kamdar,51387861,,User,,102,,31,61
424934964,Remove compiler dependency: added new mapping test data format,"I have created separate python file to store mapping test data. I have done this because it would be nice to keep data separated from the code. 
We can import whole array from the mapping_test_data file and use it directly in test_scanner.
@terriko, @pdxjohnny needs your opinions on this new structure.",True,716,https://api.github.com/repos/intel/cve-bin-tool/pulls/716,https://github.com/intel/cve-bin-tool/pull/716,closed,1404,3832,173,36,10,3,0,0,[],2020-05-29 07:27:56+00:00,2020-06-10 16:50:57+00:00,1070581.0,"12 days, 9:23:01","[{'comment_id': 434133784, 'comment_body': '```suggestion\r\nYou can see all existing tests in [`test/`](https://github.com/intel/cve-bin-tool/tree/master/test)\r\n\r\n```', 'comment_created': datetime.datetime(2020, 6, 2, 19, 43, 43, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 434135311, 'comment_body': 'Why `delete=False` and `os.remove`?', 'comment_created': datetime.datetime(2020, 6, 2, 19, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 434317187, 'comment_body': 'If we keep delete=True. It is getting deleted when we try to re-open that file again in the context. So, I am keeping that file until we complete that operation and deleting manually afterwards.  ', 'comment_created': datetime.datetime(2020, 6, 3, 5, 32, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}]","[{'commit_sha': '4c69cfe061b6d2e63b4e1dd839faca08cf57b66d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3452894eeb4ae5d0445978500c100dc07716558', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47d90f70e2b73e630b9d3b4181281a692d7b51ec', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6d30c21f32202f01e643676bf8128f3ebb45dd3', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0403468fa6020a9e10069fad73ff1b2773edb7f7', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eac2265dc59d8c8a66f06fee952d1b2534d922e2', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32bd937191de417e5ee23e2c0e5480e2df76763f', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ea3a1db9f3e4eda53eed21d6e702b131aaac673', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6d0635d80e1117606ab4542c7294bed518a62f6', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c50a9ffca7c060cd3336ccdf6ea94a6af7b62234', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f086e60980b8a90f2d69487da5bb83cd61527ee', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '057828518632799d00b9af6df892119e40013254', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fabf4704a3a8454862bf9d190ddc75243df08015', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64f5fd513fd1b22a0cb8acc0fa0b0777ee5e42e2', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '539f11297e153cacad52b9720ee7d552fda22eeb', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'beda5026870061c1bfe7f702efc2785c271d7e43', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcb76b495939aeba0fc99225035dc6d206b3390f', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '062408466124050af4f04313acb30e9ef6e49044', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '417ffeb9b6a9fa98cf587876e6eccf89e742a2bd', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e8bdf6d5caf0d40633ce5c26b73fc8cd6eed20d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3713e1e77e718de3edb35535913d8e13a4284f35', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '899bb1f267d79bed719fdbe23f17b53003b4e06b', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a99d56bee5bd8b9635185777d415f5d77f0cafc', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6142aad5882ced7434f5ed230da220edc2051839', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94d5cabf3613acab5e1bbaa7e27bda714f26d61d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b71e89495a5e244716cd6192622ea2254af6ed49', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1bbebb1e446919c2c16db1b5f8e64c48061914a', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebeb3dbf1238505b4dfa5d21bd34cd172de366db', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fffbfcf6b7a8a0caed5b1b36c899c49048208a29', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2ad3c64bf2579d241984196855c071fb4d8c329', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc32062e0ba4197b66b2231f0edfa8e1d453dd64', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9b7f58fe44c27fb009e471332349d1c94637d9e', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e707c0379f1f94bababd29a57785d476d226211f', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8508b4761201956b0c53f00f3ba704c4cc0c6954', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f71c4ff44516ee9bee1a0acd2d17cc766961f66', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e4cadabf20a0228b1ff27ffcd161e0701e81600', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}]",Niraj Kamdar,51387861,,User,,102,,31,61
418268508,add egg updater script which fixes pytest initialization issue,"

",True,672,https://api.github.com/repos/intel/cve-bin-tool/pulls/672,https://github.com/intel/cve-bin-tool/pull/672,closed,81,12,2,14,11,30,0,0,[],2020-05-14 22:01:23+00:00,2020-05-19 18:16:39+00:00,418516.0,"4 days, 20:15:16","[{'comment_id': 425467959, 'comment_body': ""What happened here?  This is going to change the --help output and I don't think it's going to look right."", 'comment_created': datetime.datetime(2020, 5, 14, 22, 34, 3, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 425469251, 'comment_body': ""If this is the only place update_egg() is ever going to be called, I don't think it needs a separate file (and it may not even need a separate function, but I don't mind that so much).  We actually need the egg updated just befor the checkers are loaded, so it probably could be grouped with the checker initialization functions."", 'comment_created': datetime.datetime(2020, 5, 14, 22, 37, 57, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 425469527, 'comment_body': ""If this is due to your development environment's auto-formatting, you may need to turn it off.  I don't mind the alphabetization of the imports, but dedent is super picky about how it's used and I think this will screw it up."", 'comment_created': datetime.datetime(2020, 5, 14, 22, 38, 44, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 425469661, 'comment_body': ""Yeah don't merge it. First it should be in scanner because in scanner we are actually loading checker and second I think i can suppress that output. \nI will do it tomorrow because i am going to bed ðŸ˜´ now."", 'comment_created': datetime.datetime(2020, 5, 14, 22, 39, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 425824874, 'comment_body': ""Yeah I have tried to put it in cli.py but it isn't working because it look for relative path from where we call it. To address this, we have to keep it at the root level."", 'comment_created': datetime.datetime(2020, 5, 15, 14, 4, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 425870028, 'comment_body': 'This should only be done if the package is installed in development mode. We need either a way to check if the production version of the package is installed, or to check if its installed in development mode and only do this if it is\r\n\r\nReferences: https://intel.github.io/dffml/master/contributing/codebase.html#checking-for-development-version', 'comment_created': datetime.datetime(2020, 5, 15, 15, 13, 52, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 425875961, 'comment_body': 'we can use an environment variable for that', 'comment_created': datetime.datetime(2020, 5, 15, 15, 22, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 425894575, 'comment_body': ""I have checked reference but i didn't get it. For now I have put environment variable approach for this."", 'comment_created': datetime.datetime(2020, 5, 15, 15, 53, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 425961141, 'comment_body': ""Hmmm, the issue here is that developers don't remember to run `bdist_egg`, in which case they probably won't remember to set an environment variable either. Also, what happened to `redirect_stdout`?"", 'comment_created': datetime.datetime(2020, 5, 15, 17, 57, 48, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 425962065, 'comment_body': '```python\r\nany(\r\n        list(\r\n            map(\r\n                os.path.isfile,\r\n                list(\r\n                    map(\r\n                        lambda syspath: os.path.join(\r\n                            syspath, ""cve-bin-tool.egg-link""\r\n                        ),\r\n                        sys.path,\r\n                    )\r\n                ),\r\n            )\r\n        )\r\n    )\r\n```\r\n\r\nReturns true if `cve-bin-tool` was installed with `pip install -e`', 'comment_created': datetime.datetime(2020, 5, 15, 17, 59, 37, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 425965239, 'comment_body': 'redirect_stdout has global side effect. so, i am using good old trick of redirecting stdout manually.', 'comment_created': datetime.datetime(2020, 5, 15, 18, 6, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 425969596, 'comment_body': 'I added  a function that checks for production build', 'comment_created': datetime.datetime(2020, 5, 15, 18, 15, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 426032114, 'comment_body': '```suggestion\r\n    return not any(\r\n```\r\n\r\n`.egg-link` is present only if the package is installed in development mode', 'comment_created': datetime.datetime(2020, 5, 15, 20, 30, 5, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426032530, 'comment_body': '```suggestion\r\n        # Update egg if installed in development mode\r\n```', 'comment_created': datetime.datetime(2020, 5, 15, 20, 31, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426060952, 'comment_body': ""I don't have .egg-link present."", 'comment_created': datetime.datetime(2020, 5, 15, 21, 45, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 426167196, 'comment_body': ""Interesting okay let's just ditch this check then."", 'comment_created': datetime.datetime(2020, 5, 16, 16, 13, 2, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426167641, 'comment_body': '```suggestion\r\n            egg_updater.update_egg()\r\n```', 'comment_created': datetime.datetime(2020, 5, 16, 16, 18, 45, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426168414, 'comment_body': 'We should probably do a `try: os.chdir` to `os.path.join(os.path.dirname(__file__), "".."")` and then a `finally: os.chdir(wherever_os.getcwd()_reported_before_first_chdir)`. Since I\'d guess that this fails if the user is not in the root of the source tree', 'comment_created': datetime.datetime(2020, 5, 16, 16, 27, 54, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426168537, 'comment_body': 'This is how you can import a specific file (prepending to sys.path and using importlib can sometimes result in the wrong file being imported if there\'s another file in the current working directory with the same name, although if you have a way around this I\'d be stoked, just what I\'ve observed).\r\n\r\nDoing this ensures that if a developer has `cve-bin-tool` checked out via the Git repo and installed with `pip install -e` and they run the `cve-bin-tool` from a different directory than the root of the source tree (for example they are in `/mnt` scanning something) they\'ll still get `update_egg` run.\r\n\r\n```python\r\nimport os\r\nimport importlib.util\r\nfrom setuptools import setup\r\n\r\negg_updater_path = os.path.join(os.path.dirname(__file__), "".."", ""egg_updater.py"")\r\nif os.path.isfile(egg_updater_path):\r\n    spec = importlib.util.spec_from_file_location(""egg_updater"", egg_updater_path)\r\n    egg_updater = importlib.util.module_from_spec(spec)\r\n    spec.loader.exec_module(egg_updater)\r\nelse:\r\n    egg_updater = None\r\n```', 'comment_created': datetime.datetime(2020, 5, 16, 16, 29, 41, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426168585, 'comment_body': 'See above\r\n\r\n```suggestion\r\n        if egg_updater is not None:\r\n```', 'comment_created': datetime.datetime(2020, 5, 16, 16, 30, 4, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426168625, 'comment_body': 'Or you could keep `DEVELOP`, whatever you feel like, you get the point', 'comment_created': datetime.datetime(2020, 5, 16, 16, 30, 28, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426171974, 'comment_body': 'Yes this will work.', 'comment_created': datetime.datetime(2020, 5, 16, 17, 11, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 426834494, 'comment_body': ""I have tried it, it's not working"", 'comment_created': datetime.datetime(2020, 5, 18, 19, 3, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 426834651, 'comment_body': 'I have applied this changes\r\n', 'comment_created': datetime.datetime(2020, 5, 18, 19, 3, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 426867014, 'comment_body': ""What's not working?"", 'comment_created': datetime.datetime(2020, 5, 18, 20, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426867613, 'comment_body': 'In the above example: `os.path.join(os.path.dirname(__file__), "".."")` should be `os.path.dirname(__file__)`', 'comment_created': datetime.datetime(2020, 5, 18, 20, 11, 20, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426874666, 'comment_body': 'I have put egg_updater inside cve_bin_tool and save cwd by `cwd = os.getcwd()` and then changed diectory to `os.chdir(os.path.join(os.path.dirname(__file__), ""..""))` and after execution of script, I have reverted back to the previous `cwd` but it is giving same error as we get without applying `chdir` hack.   \r\n\r\n```console\r\n(venv) C:\\Users\\Root\\Documents\\cve-bin-tool>python -m cve_bin_tool.cli build\r\ncve_bin_tool - WARNING -\r\n                          **********************************************\r\n                          Warning: this utility was developed for Linux.\r\n                          You may need to install additional utilities\r\n                          to use it on other operating systems.\r\n                          **********************************************\r\n\r\ncve_bin_tool.CVEDB - INFO - Using cached CVE data (<24h old). Use -u now to update immediately.\r\ncve_bin_tool.Scanner - INFO - Updating egg_info\r\nC:\\Users\\Root\\Documents\\cve-bin-tool C:\\Users\\Root\\Documents\\cve-bin-tool\\cve_bin_tool\r\nTraceback (most recent call last):\r\n  File ""C:\\Users\\Root\\AppData\\Local\\Programs\\Python\\Python37\\lib\\runpy.py"", line 193, in _run_module_as_main\r\n    ""__main__"", mod_spec)\r\n  File ""C:\\Users\\Root\\AppData\\Local\\Programs\\Python\\Python37\\lib\\runpy.py"", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File ""C:\\Users\\Root\\Documents\\cve-bin-tool\\cve_bin_tool\\cli.py"", line 587, in <module>\r\n    sys.exit(main())\r\n  File ""C:\\Users\\Root\\Documents\\cve-bin-tool\\cve_bin_tool\\cli.py"", line 471, in main\r\n    scanner = Scanner(cvedb)\r\n  File ""C:\\Users\\Root\\Documents\\cve-bin-tool\\cve_bin_tool\\cli.py"", line 72, in __init__\r\n    egg_updater.update_egg()\r\n  File ""C:\\Users\\Root\\Documents\\cve-bin-tool\\cve_bin_tool\\egg_updater.py"", line 35, in update_egg\r\n    ""checkers"",\r\nFileNotFoundError: [WinError 3] The system cannot find the path specified: \'C:\\\\Users\\\\Root\\\\Documents\\\\cve-bin-tool\\\\cve_bin_tool\\\\cve_bin_tool\\\\c\r\nheckers\'\r\n\r\n```', 'comment_created': datetime.datetime(2020, 5, 18, 20, 26, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 426878357, 'comment_body': ""It's solved."", 'comment_created': datetime.datetime(2020, 5, 18, 20, 34, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 427410031, 'comment_body': ""This block isn't necessary now that we've moved the module into the library, we can import with `from . import egg_updater`"", 'comment_created': datetime.datetime(2020, 5, 19, 15, 50, 52, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 427419586, 'comment_body': 'I have done it.', 'comment_created': datetime.datetime(2020, 5, 19, 16, 4, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}]","[{'commit_sha': 'c7e319a52ed1b0f84f7d738a73672b1c2ba1e796', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8ceae2923fb0db9225a1f806d56516632eb8356', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ff5e7c2e6b66f93724305585c4824daf84269b3', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d6fbf7bf380e176bae4f8913b892e76fa4e9339', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46a1b5e009f15c5ca2e6c512fd775b6c17e5229b', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01d731e99672bea29dc7f6164c345b5258dfff3d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57cbf0a193ee2cbe696a149d93d7bd186b9d819e', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bed40fb6bac556c6ca6bed422a819b5a87b0c453', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3632d45537e7ad222ccb3fe6fe13fb8bd7c31e51', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a68be1043fa63ea9eaec0a98f5ac81666efe4a1a', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b02e788be0f22980d6644a0c68f6309ffc1ff04c', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb7adbd9cb5a7a9d69572880fbfffb53f2a4b9fb', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ba95317871b405ed2f77b65ab2e6b301b87eb05', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06b09a17ae8a81a1b21fc3566e8159c864dede9a', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}]",Niraj Kamdar,51387861,,User,,102,,31,61
442323943,parallelize test_json,"test_json can now be run in parallel with `pytest -n 4 test/test_json.py`:
```console
=================================================== 19 passed, 4 warnings in 85.99s (0:01:25) ====================================================
```
It is significantly faster now. Past implementation was taking roughly 10 minutes to run.",True,772,https://api.github.com/repos/intel/cve-bin-tool/pulls/772,https://github.com/intel/cve-bin-tool/pull/772,closed,30,34,1,2,2,0,0,0,[],2020-06-30 22:12:29+00:00,2020-06-30 23:03:25+00:00,3056.0,0:50:56,[],"[{'commit_sha': 'e2df79d28e6288679fdc078df496145834de1cb4', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e560fb3a5944a2189d894ca761986c583992ced8', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}]",Niraj Kamdar,51387861,,User,,102,,31,61
431610845,Asynchronous extractor module,I have converted every I/O functions into async and I have also kept sync counterpart of some otherwise it will break CI. This sync function will eventually get removed once every module will become asynchronous.,True,741,https://api.github.com/repos/intel/cve-bin-tool/pulls/741,https://github.com/intel/cve-bin-tool/pull/741,closed,228,120,5,22,1,2,0,0,[],2020-06-09 08:07:38+00:00,2020-06-10 16:43:37+00:00,117359.0,"1 day, 8:35:59","[{'comment_id': 437599149, 'comment_body': 'Why the use of `gather` here?', 'comment_created': datetime.datetime(2020, 6, 9, 17, 28, 34, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 438033115, 'comment_body': 'I am using `ensure_future` now.', 'comment_created': datetime.datetime(2020, 6, 10, 10, 49, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}]","[{'commit_sha': '7dfc21d7fd2f4338bde6cb9c4ba8151cc0a4a101', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '668a8cbdc75c5d75fcf15169a7d38bc6833e383f', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '835393d55692d4e199363b00db036acc2ccb568a', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fe9026bb5ec6908007be149441b6964323e7611', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51e83630e3ba0ddda63a05c8f318d675d406e0b7', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab7f27371ae2595328d8a455693bcadcf9faf4b6', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f072f7bd88b1e7d88acf2be3b8a6582b9488bb37', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6286fd37f39d1aeb31b453b8d0656f2857e3473d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b209b9c512e099fe02928983c35c3b8fc8e19cd1', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95fcf5899597c39231b680b9a7317eda9f2145c5', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13fa5c4390f8354e9517ff96f9ae47ef0fe4eef5', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eae6299faa8d8316e0350481f9f9e9c855b50e0b', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b03d2acf4626b24ead48b4b5b2f6c37d6d0d1c3c', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0f9583d5133cf844b643d995b91d45588866601', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13cf41ccfdc76dbbe84da61544f46565657a2cea', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6d92f20f7eb5cc5a4590f83ee1955a3ebf190b9', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcbd85171b2f66a9fc95c9e0726bf46126db7039', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d8129c8856e557476565fb26689ff3f638e1aee', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ccab39c1c23a686c4b3e870a948a84091ccdd37', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e62e75bfd917fe0cb62d0b6906b9323383f5353f', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39c7e919befd92659bf8460963df7a25694bcbf8', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2df58503a860a349910671e57f162d5350fad873', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}]",Niraj Kamdar,51387861,,User,,102,,31,61
434026577,Added asynchronous strings and improved extractor,I have created FileIO class for asynchronous file IO which just run synchronous IO in asyncio executor as mentioned by @pdxjohnny and splited util module into util and async_utils modules. ,True,746,https://api.github.com/repos/intel/cve-bin-tool/pulls/746,https://github.com/intel/cve-bin-tool/pull/746,closed,254,147,8,13,1,0,0,0,[],2020-06-13 16:25:35+00:00,2020-06-18 17:14:50+00:00,434955.0,"5 days, 0:49:15",[],"[{'commit_sha': '02c7bb270bb2352cb240f77b5b5a4d9420b9650e', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25127e664c9a4ab9f153af4b483b9f8e22cb8c7f', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83a4122fdee44a59393c97cb1bdd119abea65d4f', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18b4b25f2a4e7a678dea8ffd9e26b61628f969cf', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a96a33e44d8e6d7a155f6fc162fd5bba691bbc3', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fefbda50f844bd245ab34c91ce9145c4574ce7fe', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2601da01f635cbc37dcf88bacdb678403b9b8201', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a30c58abd15e1f262d00053e98f485ff4cecc76', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9aacf78155fab92b5e5a717e1b098b1ab355c336', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd1e54b4f7ab42ddaa7833ac4c1cd90f08f11948', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daaa067d6054013918c6e282199ef7e4bf2d653b', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c770242722ee873889a24e11e0a1f5fd7fad579d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc2dc1c3e2c7d036c619a9d01658fe831b658955', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}]",Niraj Kamdar,51387861,,User,,102,,31,61
437049847, Asynchronous File module added ,,True,751,https://api.github.com/repos/intel/cve-bin-tool/pulls/751,https://github.com/intel/cve-bin-tool/pull/751,closed,51,30,3,4,2,0,0,0,[],2020-06-19 11:30:31+00:00,2020-06-26 15:11:47+00:00,618076.0,"7 days, 3:41:16",[],"[{'commit_sha': '9f6d3f5654acbc4e47bf32fe7c0e5ff9a98d55e4', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5804c364c595ed2e8385e9412636e56df3187820', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ae58ac3a0be45ed2d98a5181de71cb34e5c04b6', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3de82dd42877a4987002a6b4abf948d3b73ad0b', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}]",Niraj Kamdar,51387861,,User,,102,,31,61
439063312,Added asynchronous cvedb module.,"Changes in this PR:
- Use of aiohttp instead of multiprocessing to download NVD dataset in cvedb
- Split cvedb into cvedb and cve_scanner
- Renamed scanner to version_scanner
- Renamed cve_id to cve_number since that's what NVD calls it.
- Fixed eventloop bug.
- No need to inherit from object now since Python 3 implicitly do that.
- beautiful progressbar while downloading and updating database
- It is only taking 1 minutes to update database ðŸŽ‰ 
- Using pytest for every tests in CI since pytest can run unittest and asyncio function can only be (easily) tested on pytest.
- CI is only taking 20 minutes to run long tests!  ",True,758,https://api.github.com/repos/intel/cve-bin-tool/pulls/758,https://github.com/intel/cve-bin-tool/pull/758,closed,794,663,18,54,3,23,0,0,[],2020-06-24 08:57:50+00:00,2020-06-30 22:12:58+00:00,566108.0,"6 days, 13:15:08","[{'comment_id': 444755796, 'comment_body': ""I think it should be cve_scanner if I'm not wrong"", 'comment_created': datetime.datetime(2020, 6, 24, 9, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'SinghHrmn', 'type': 'User'}, {'comment_id': 444757222, 'comment_body': 'Yep typo!', 'comment_created': datetime.datetime(2020, 6, 24, 9, 14, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 445579495, 'comment_body': 'Renamed cve_id to cve_number to follow NVD convention.', 'comment_created': datetime.datetime(2020, 6, 25, 13, 58, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 445579892, 'comment_body': 'This will fix that weird .console file bug.', 'comment_created': datetime.datetime(2020, 6, 25, 13, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 445580410, 'comment_body': 'This function can create eventloop in worker thread (We need that for running tests in parallel) and also create proactor loop for windows.', 'comment_created': datetime.datetime(2020, 6, 25, 13, 59, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 445580597, 'comment_body': 'Helper function to run coroutines from synchronous functions easily', 'comment_created': datetime.datetime(2020, 6, 25, 13, 59, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 445581433, 'comment_body': ""handle case when file object don't have some attribute (Ex: GzipFile don't have 'raw' attr)"", 'comment_created': datetime.datetime(2020, 6, 25, 14, 1, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 445581788, 'comment_body': 'Rename scanner to version_scanner', 'comment_created': datetime.datetime(2020, 6, 25, 14, 1, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 445584211, 'comment_body': ""if we return no. of CVEs as exit status, action will fail if directory contains CVEs. It wasn't failing until now since dir we were scanning doesn't had any CVE. Though I wonder do we really need to provide no. of cves via exit status?"", 'comment_created': datetime.datetime(2020, 6, 25, 14, 5, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 445585695, 'comment_body': ""This won't be None it will be empty list in case of zero cves."", 'comment_created': datetime.datetime(2020, 6, 25, 14, 7, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 445586876, 'comment_body': 'I felt like this function should be in version.py', 'comment_created': datetime.datetime(2020, 6, 25, 14, 9, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 446248114, 'comment_body': 'It might be good to run the install first instead just `egg_info`\r\n\r\n```suggestion\r\n          python -m pip install -e .\r\n```', 'comment_created': datetime.datetime(2020, 6, 26, 15, 18, 32, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 446253436, 'comment_body': ""Let's check with hasattr instead of try except"", 'comment_created': datetime.datetime(2020, 6, 26, 15, 28, 2, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 446258796, 'comment_body': '```suggestion\r\n        # We use gather to create a single task from a set of tasks\r\n        # which download CVEs for each version of curl. Otherwise\r\n        # the progress bar would show that we are closer to\r\n        # completion than we think, because lots of curl CVEs (for\r\n        # each version) have been downloaded\r\n        tasks.append(\r\n```', 'comment_created': datetime.datetime(2020, 6, 26, 15, 37, 22, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 446266412, 'comment_body': ""Since we've removed places where the sqlite database might be called from multiple threads, let's re-enable the thread safety check in case someone in the future attempts to use the connection from another thread (they'll get an exception).\r\n\r\n```suggestion\r\n            self.connection = sqlite3.connect(self.dbname)\r\n```"", 'comment_created': datetime.datetime(2020, 6, 26, 15, 51, 6, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 446268418, 'comment_body': 'Class properties should be uppercased\r\n\r\n```suggestion\r\n    CVE_SCANNER = CVEScanner()\r\n```', 'comment_created': datetime.datetime(2020, 6, 26, 15, 54, 40, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 446268815, 'comment_body': ""Let's import this from where it's defined in the codebase if we need it"", 'comment_created': datetime.datetime(2020, 6, 26, 15, 55, 19, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 446270046, 'comment_body': '```suggestion\r\nclass CVEScanner:\r\n    """"""\r\n    This class is for reading CVEs from the database\r\n    """"""\r\n```', 'comment_created': datetime.datetime(2020, 6, 26, 15, 57, 24, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 446270654, 'comment_body': ""We're opening the connection to the database on every call to `get_cves` it would be good make this a context manager, so that we can use it in a `with` block and close the connection when we're done."", 'comment_created': datetime.datetime(2020, 6, 26, 15, 58, 26, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 446272276, 'comment_body': ""We're going to need to either pass a `CVEScanner` whose context has been entered, into the `__init__` of `VersionScanner` or make `VersionScanner` a context manger and have it enter the context of the `CVEScanner` it creates."", 'comment_created': datetime.datetime(2020, 6, 26, 16, 1, 14, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 446274419, 'comment_body': '```suggestion\r\n          NO_EXIT_CVE_NUM=1 python -m cve_bin_tool.cli test/assets\r\n```', 'comment_created': datetime.datetime(2020, 6, 26, 16, 5, 20, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 447926733, 'comment_body': ""Why are we not calling `__exit__`? Shouldn't it call `.close()` for cursor and connection?"", 'comment_created': datetime.datetime(2020, 6, 30, 19, 26, 1, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 447997632, 'comment_body': 'Fixed it.', 'comment_created': datetime.datetime(2020, 6, 30, 21, 45, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}]","[{'commit_sha': '3b7bccf8324012870ac7b32a96759005ff6974f4', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72f2dfb83c3d71d3da79cdfe017c9cf59842dd71', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '602de2908f3ebf7cf02ee6a18412cc803e536824', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31b4552c5b6c9d6e36476214453571c0f8d1e571', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '454021a641186f4e4c0ad34b877df8ad37921670', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50111d81c08ef47092819f496af3d7d14420bbc8', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c829b77ab7889ecbde5bdab443de406ac401fe61', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b77dd9e705e8ec232bc2d10dac7c002e321412af', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de4ca0d03c5036d8948e571b6a2025eb08ff718f', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db85e1903bf5b86a730fe1d2119f079e6b85495c', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba9eb327faf05c0e4565d4e955fb96ac7a6b0481', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e7238744019a22dbe10b6d9819493a3e60c96a9', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'deaee6507e00c59e4467f10e325971b22867c94d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47d03c7d4ee6ee7649f0e73fb4104f7a9452f894', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79a00d7ebe9175d14300cf7a5caebb6f383f8536', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ddfeba10ed4c99bb9928697f772985d34358bd1', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fccd4d93b3b196188e9025030eefaec359d6e1b', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '480509aea3a41289eb9f76bd51ce11e0ca22f29a', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e68f32dfcdbf3a6cd9c901bcc2191856e6fd1f7b', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67395fbbee7ee3e1e5721421e43a45278282e32b', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c76dea9b280e7b22f1bc78d78e3c3f721bf1002', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c8f60b4bf55d233d51b2880899dbabba1a643f8', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be14bfeecd13b438729a638775c89ffd91887c56', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb8adbb9417b2691866f9a5af3966ba872e7fc90', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eefd4e63ebc5485b64aa73f40c59dc95314f845d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '871683240a91d2a314b64f774a84a41c0e63e250', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b49742fffc61bcc6e20240961acacb9c77bcf98', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6804389064cc21d0b7411f5269922a6ec02198f6', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a069c270fef0c32507db920212b51313dcaa6fa', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c27211d11d2ee827080168cad2aa5ee4aa32411', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd74d715a8fb8c1073dc2e4cf0b07f9f37230ff4e', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f51cff875827a1131dd56c20ff8a490172b01c8', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f07ee92cd10982edeb06cb3d2533e80c0874217d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a054bdd4dd966f5aea3a8a595207a37fe4d3ef47', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bc9c423a6bf958f20b0c0e0fbfd752b2ac365dc', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7eafe480dfdba69fa71ed2d775090799e5b61d1f', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1afcf70abe67fd4a78ca087486f25e91da78c118', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a286d0b42ba3629a1628deca3158ee26d7334fc', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9a5c35fa41b32857b66a14b80c0b9cde27e1617', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e890fa850a414cfc3ec6316e74acabbd0a83bf80', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7378551059ec3b3c370b5f8310cb34423b0a67d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc9ff4be6fb637221832631e85f944388e915e01', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6d23bec99ed617f2007767cc08aaf61d037c06d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fead34c3fe3b6e5dac8f1de91b23edd92cc27c3b', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17a543d39ef1c82288dca85f7a8cc2a69b456bee', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca8c96720fab8f12a749c7d73a3403a6ad4febfe', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa18c2bfcfa59d493572e28823de2f48b536cfa7', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea407514fbfa8e1f88081436dcdc67af08158da9', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6bc0d174666e9ac8a1370344ebdf33140c86de9', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69278cdfd1c2103d34e5a09b97b26821dceb53b4', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbbf775cb96b874e039b2e1243a6d43b30d41065', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ac3d8119b91c88af52f11ab24f82482938a41ff', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09f94dc6adc5e0bd4bcdcfdf0d9b28440c64bf46', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a64ab1219e9972e96613cc637bb5fe62984aaf96', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}]",Niraj Kamdar,51387861,,User,,102,,31,61
444001104,Added Input Engine with triage functionality ,"New features:
- Created input_engine that can handle various input files with triage data 
- Currently, input engine supports csv and json file.
- To get cves from input file - Usage: `cve-bin-tool -i=test.csv`
- Input engine can also be used to supplement triage data - Usage: `cve-bin-tool -i=test.csv /path/to/scan`
- User can now add remarks field in csv or json which can have any value from following values ( Here, values in parenthesis are aliases for that specific type. )
  1. NewFound (1, n, N)
  2. Unexplored (2, u, U)
  3. Confirmed (3, c, C)
  4. Mitigated, (4, m, M)
  5. Ignored (5, i, I)
 - Output will be also represented in above order.
- tests for input engine added under test_input_engine.
- removed test for old csv2cve
 
",True,777,https://api.github.com/repos/intel/cve-bin-tool/pulls/777,https://github.com/intel/cve-bin-tool/pull/777,closed,629,574,30,41,1,32,0,0,[],2020-07-03 11:10:33+00:00,2020-07-09 18:48:54+00:00,545901.0,"6 days, 7:38:21","[{'comment_id': 449556786, 'comment_body': 'Custom error codes', 'comment_created': datetime.datetime(2020, 7, 3, 12, 26, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 449557160, 'comment_body': 'custom except hook to also throw exit code while exception raise', 'comment_created': datetime.datetime(2020, 7, 3, 12, 27, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 449559041, 'comment_body': 'New option to specify input file', 'comment_created': datetime.datetime(2020, 7, 3, 12, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 449561432, 'comment_body': ""just a better name because files_with_cves won't make much sense while using it as csv2cve"", 'comment_created': datetime.datetime(2020, 7, 3, 12, 37, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 449561840, 'comment_body': 'dummy csv2cve file', 'comment_created': datetime.datetime(2020, 7, 3, 12, 38, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 449562530, 'comment_body': 'custom exceptions to raise exceptions', 'comment_created': datetime.datetime(2020, 7, 3, 12, 39, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 449563564, 'comment_body': 'custom enum class that can handle multiple aliases easily and can also be sorted.', 'comment_created': datetime.datetime(2020, 7, 3, 12, 42, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 449565105, 'comment_body': 'This is to provide comparison methods that allows sorting of list of Remarks.', 'comment_created': datetime.datetime(2020, 7, 3, 12, 45, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 449656429, 'comment_body': 'Fixes problem with Windows CI', 'comment_created': datetime.datetime(2020, 7, 3, 16, 42, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 449657400, 'comment_body': ""shouldn't it be the actual path to the file? I guess it should be file-path"", 'comment_created': datetime.datetime(2020, 7, 3, 16, 46, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SinghHrmn', 'type': 'User'}, {'comment_id': 449658334, 'comment_body': 'YAY! Thanks for this', 'comment_created': datetime.datetime(2020, 7, 3, 16, 50, 2, tzinfo=datetime.timezone.utc), 'commenter': 'SinghHrmn', 'type': 'User'}, {'comment_id': 449858745, 'comment_body': 'Changed because of https://bugs.python.org/issue35621.', 'comment_created': datetime.datetime(2020, 7, 5, 10, 1, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 452384904, 'comment_body': 'Should we be altering the checker default so it scans for VERSION_PATTERNS as well as CONTAINS_PATTERNS by default?  It seems silly to duplicate lines in each checker if we probably actually want version patterns to also be a valid detection string.', 'comment_created': datetime.datetime(2020, 7, 9, 17, 41, 42, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 452387896, 'comment_body': 'This is really lovely, thanks.  One of our users (I think someone running this on a Yocto based system?) was saying that they use the return codes to colourize their CI dashboard, so this may be very helpful to others as well.', 'comment_created': datetime.datetime(2020, 7, 9, 17, 47, 9, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 452388953, 'comment_body': ""I kind of prefer the clarity of the is None check in some cases (because we get so many new pythonistas looking at this project) but this isn't a thing I expect a lot of new contributors to look at so I think streamlining this is the right choice."", 'comment_created': datetime.datetime(2020, 7, 9, 17, 49, 12, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 452390934, 'comment_body': 'Changing the default is fine, but don\'t change the help message here: that\'s to clarify for users because the default messages from argparser didn\'t make the behaviour clear.\r\n\r\n```suggestion\r\n        help=""provide output filename (default: output to stdout)"",\r\n```', 'comment_created': datetime.datetime(2020, 7, 9, 17, 52, 51, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 452392745, 'comment_body': ""I've been wondering about this: should we change the default to auto-extract?  I've opened an issue to discuss, since that's out of scope for this PR.  https://github.com/intel/cve-bin-tool/issues/786"", 'comment_created': datetime.datetime(2020, 7, 9, 17, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 452398465, 'comment_body': '```suggestion\r\n        LOGGER.error(""Please specify a directory to scan or an input file."")\r\n```\r\nWe don\'t need to say ""error"" because the logging system does that.  (these messages were written before the logging system, which is why the others say it, but we can probably clean those up)', 'comment_created': datetime.datetime(2020, 7, 9, 18, 6, 49, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 452398767, 'comment_body': 'We should probably be returning an error code instead of 0 here.  NoFileSpecified = -2 maybe?', 'comment_created': datetime.datetime(2020, 7, 9, 18, 7, 25, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 452400347, 'comment_body': 'Now that we have error codes, we should use them here too. ', 'comment_created': datetime.datetime(2020, 7, 9, 18, 10, 24, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 452401546, 'comment_body': 'Good thinking, though I wonder if products will be confusing for people scanning directories, as they may think of a ""product"" as a .deb or somesuch and we have a different definition.  it\'s tempting to just say ""things"" instead of files or products, but I guess that doesn\'t sound quite as formal.', 'comment_created': datetime.datetime(2020, 7, 9, 18, 12, 36, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 452403818, 'comment_body': ""If we're importing cli, we might as well use the same error code list here."", 'comment_created': datetime.datetime(2020, 7, 9, 18, 16, 42, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 452404039, 'comment_body': 'Another error code spot.', 'comment_created': datetime.datetime(2020, 7, 9, 18, 17, 7, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 452406654, 'comment_body': 'yay type hints!', 'comment_created': datetime.datetime(2020, 7, 9, 18, 21, 39, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 452410680, 'comment_body': ""In future, can you put unrelated changes to checkers in a separate PR?  They could all be grouped together, but they shouldn't be grouped with the InputEngine changes.  It's considered bad form by most open source projects to group them the way you have."", 'comment_created': datetime.datetime(2020, 7, 9, 18, 29, 2, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 452436926, 'comment_body': 'Yes that can be helpful.', 'comment_created': datetime.datetime(2020, 7, 9, 19, 18, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 452437811, 'comment_body': 'I will add that.', 'comment_created': datetime.datetime(2020, 7, 9, 19, 20, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 452439323, 'comment_body': '-1 to -5 are already assigned to other exceptions and i believe that it would be nice to keep error code unique. So, maybe we can assign it -6?', 'comment_created': datetime.datetime(2020, 7, 9, 19, 23, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 452439984, 'comment_body': 'This is automatically getting returned as error codes because we are using sys.exit(main()) to run main function of cli.py', 'comment_created': datetime.datetime(2020, 7, 9, 19, 24, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 452440625, 'comment_body': 'I will change that', 'comment_created': datetime.datetime(2020, 7, 9, 19, 26, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 452446999, 'comment_body': ""I have put it here because I have to make VersionScanner generator to use InputEngine parsed data as supplement and it was breaking the test_scanner because I have also included test for contains string previously but I have forget to clean up scanner and test was only passing due to previous scan has detected it. So, that's why when I converted that in generator this bug come to surface. I should have divide this PR in two parts: 1) Making version_scanner generator and 2) building input_engine.  Thanks, for the feedback. I will try to keep PR size smaller."", 'comment_created': datetime.datetime(2020, 7, 9, 19, 39, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 452450233, 'comment_body': 'We can use custom exception with with my new error code data structure if we also want to provide traceback here.', 'comment_created': datetime.datetime(2020, 7, 9, 19, 45, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}]","[{'commit_sha': '28d95dc01ecbed5437b4bef9042540f949278176', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8406aa2e6479399427fcd011f2af1f069432e8bf', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fbe08933b680088196dc93f6ef060c63bb019a2', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56274a622cf8d510cef6e508f7b0aa4ac0a800ee', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f092526aa9272f5521cab948704c69fe0b6061d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60f788f16552e32cb55466df33c56257f4a01d88', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebe907504c80db9081bf0769e8d5d014ea42aaab', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1061fab42314b3e11a6b7d58603ba061ba379962', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5607664f58d6d3f327b4beff23143a30f009cd0c', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c93c4fd97ded1d49587f02835fa863667f73f0fc', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3f8fcc0ed2a87d370af99bed137e8b088c1e8db', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e48b4938637316bd35b6d8fd6685926f6463ab6', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06f060698fb93d6b2fdd41caf2d54407f8a33fee', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ee25ad2d642cc1ca9c672eb06efb4be9c9e9637', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a337c9fbb083178f5a143454f6663e863d377be', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1dde24ebcd5abbffd099f3ec1f3826c4c89b836d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6472bc741ae6405a50e9a2a3216f11711595b725', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00ad55b6b2095f9f9dad7f53cb53f9b78c7304e6', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2819a3490b52443e2dff647894c3eca793762ee6', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3df34114440aec04bb0c53dcd90625c6a314c2fe', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4280905139f061dd3a38e37f5d7ce409a7974b34', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b2a1758669fa266af763f48d5c261ed976e6635', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9cdf9ae20792eced6ae68197f25fba7b5254050', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e55e8e91e14f615cb7c6ec713a0d7c3c6dcf9212', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '349b8cabd8e949f6cfc57cd95535ffce8d7d8e9e', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28c3cdce71b1b90cbfcbbbfeb97176e648901c10', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84be85b1bf6376341d140972330ccac816f9b28f', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5f1147b081760784395fc7ee847469986813a5b', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cca0a5ea628b804e2380286c20edc463a6485a95', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2c1b5510d472b2d54782343abd7884095503585', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5835c940ad310e5aa7b8461d51599870cf69dd74', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2ab3c7f5a8ad13fc1a2adba1dffa532e3387e8c', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23b937e6d1c68441e304bc82307e782453d7d2b4', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '150c239431ff304bcb6e86204ac0f0a3e1f0e008', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee94c889177bffcd0011e6d4bb7c11bf92647bd5', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7714f6df678e8586b859975c58dfdfef412b09db', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5589f0e7a15e1c7724a41927f3140f8b055849c9', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e443e5cce58bb2b97fa7c322d2408931c9d9cee', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ce679c631e671dca5aee3adafde400c34bd76d4', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '776b9ce46d5f5c422721ef710070f7fc063d5e00', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de688710a2b1d94c22044a68df6931d00a684d12', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}]",Niraj Kamdar,51387861,,User,,102,,31,61
451743427,Input: comment and severity support,Fixes: #486,True,827,https://api.github.com/repos/intel/cve-bin-tool/pulls/827,https://github.com/intel/cve-bin-tool/pull/827,closed,194,125,14,7,1,6,0,0,[],2020-07-18 06:23:27+00:00,2020-07-24 00:32:48+00:00,497361.0,"5 days, 18:09:21","[{'comment_id': 456882569, 'comment_body': 'Change data structure to incorporate more triage data like comments and custom severity ', 'comment_created': datetime.datetime(2020, 7, 19, 9, 2, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 456882692, 'comment_body': 'comments support :)', 'comment_created': datetime.datetime(2020, 7, 19, 9, 4, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 459672510, 'comment_body': ""Can we put a comment about this a few useful places, such as line 35 above?  The type hints are good but they don't quite tell the full story about what we're expecting to have in there."", 'comment_created': datetime.datetime(2020, 7, 23, 19, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 459673889, 'comment_body': 'Another place where `remarks` told us a lot more than Dict[str, Dict[str, any]] does.  Should we be using something like `triage_data` to replace remarks for clarity?', 'comment_created': datetime.datetime(2020, 7, 23, 19, 19, 44, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 459676797, 'comment_body': 'Yes, We can construct our own type. TriageData and that will solve problem.', 'comment_created': datetime.datetime(2020, 7, 23, 19, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 459686518, 'comment_body': 'Created alias for TriageData datastructure.', 'comment_created': datetime.datetime(2020, 7, 23, 19, 44, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}]","[{'commit_sha': 'e6170b486d834fe34c7b1f8af16d92944ad087cd', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6edab8c3694daf636c2363d6a6844e1810d92ee3', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc218befda8ef371f89c27ef48843d74f7d1c2a4', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a39421d8ea718c0f38ea44c42aaa53fd7cf622f4', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a05c0032e30c86911f8b187b0f8703c1ccc9f12e', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aadb774bdf7fc02cd7fab8a0e7516127c774db6d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e2dba27386945b34302ac8572e69f24c906f773', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}]",Niraj Kamdar,51387861,,User,,102,,31,61
464951422,Fixes path problem for InputEngine and reduce complexity of CVEScanner,"Depends on #861 
Fixes: #859",True,860,https://api.github.com/repos/intel/cve-bin-tool/pulls/860,https://github.com/intel/cve-bin-tool/pull/860,closed,237,303,12,7,1,4,0,0,[],2020-08-08 04:30:32+00:00,2020-08-12 16:56:58+00:00,390386.0,"4 days, 12:26:26","[{'comment_id': 467714502, 'comment_body': 'Put datastructures for triage and cve_scanner at one place to avoid circular import.', 'comment_created': datetime.datetime(2020, 8, 10, 6, 48, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 467720174, 'comment_body': ""Issues with old structure:\r\n1. Old CVEData was NamedTuple and since newly added path attribute was mutable it can create hard to find bugs. \r\n2. To update path we need to scan all_cve_data to find product for which we want to append paths.             \r\n `Time Complexity: O(n**2)` which can be reduced to `O(n)` using better structure.\r\n3. Throwing vendor, product, version in different function was decreasing readability. So, ProductInfo would be nice to pack this data together since we don't actually need that alone. \r\n4. TriageData structure wasn't syncing with old CVEData. So, csv2cve was breaking.\r\n\r\nNew structure is addressing all these issues."", 'comment_created': datetime.datetime(2020, 8, 10, 7, 5, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 467726691, 'comment_body': 'Test for filepath :)', 'comment_created': datetime.datetime(2020, 8, 10, 7, 23, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 469402683, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 12, 16, 53, 42, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}]","[{'commit_sha': '1831cb9eab624389d14e9801b6af6f6d396a515f', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '829bd27653c1721f3ab677649ea73652da32f72a', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96f059f9eb96802bcfcc309564fe30af1f183903', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0b67297c54e921593eb319710690cb2b3be6bc8', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5fe2f4061bd883c81d17878289eab99e46ed10c', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e25d5c47ae44369e8b15e0d8d5f8a5e390c3994', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8f161f209fc938c2e55e9ff92acede2adab2e8e', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}]",Niraj Kamdar,51387861,,User,,102,,31,61
456241486,Added Config file support ,"- [x] ConfigParser class created.
- [x] Added support for TOML (for sysadmins) and YAML (for devops users).
- [x] Add tests for ConfigParser
- [x] Add end-to-end tests for mixed use-case of command line + config file.
closes: https://github.com/intel/cve-bin-tool/issues/832",True,846,https://api.github.com/repos/intel/cve-bin-tool/pulls/846,https://github.com/intel/cve-bin-tool/pull/846,closed,315,66,9,8,1,0,0,0,[],2020-07-24 11:44:12+00:00,2020-08-05 16:12:00+00:00,1052868.0,"12 days, 4:27:48",[],"[{'commit_sha': 'c69a4ea01d7783a7005bb49151d68e1feccf915d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa769a268cf6f1eaf60a9e2d15527e1616bef91c', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7faa3c30238e0c297f6053b200e4a8562c726ecc', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7af33ddd8c810e2b6ecf23f075ccc2bd32e5d46a', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '966b4f1744b747bc9bbb8ef9843766d6c1d2615e', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77cf537dd6832d6a12620a62db6217a8302cee75', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e47ee2e8e1d3ee741f9c7fa1c9db35dbbabae8fa', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a57789f598aaa3d6c112ec281d32b896e6592f25', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}]",Niraj Kamdar,51387861,,User,,102,,31,61
460159759,Update Documentation for config and input engine,"- [x] update manual
- [x] update readme
- [x] update csv2cve

Depends on #846 
Fixes: #806 ",True,857,https://api.github.com/repos/intel/cve-bin-tool/pulls/857,https://github.com/intel/cve-bin-tool/pull/857,closed,431,371,3,14,1,22,0,0,[],2020-07-31 13:43:54+00:00,2020-08-12 16:36:41+00:00,1047167.0,"12 days, 2:52:47","[{'comment_id': 468080023, 'comment_body': '```suggestion\r\ncomponents such as openssl, libpng, libxml2, and expat to let you know \r\n```', 'comment_created': datetime.datetime(2020, 8, 10, 17, 57, 28, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 468082784, 'comment_body': ""```suggestion\r\nknown vulnerabilities., known as CVEs ([Common Vulnerabilities and Exposures](https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures#:~:text=Common%20Vulnerabilities%20and%20Exposures%20(CVE)%20is%20a%20dictionary%20of%20common,publicly%20known%20information%20security%20vulnerabilities.)).\r\n```\r\n\r\nWe could probably add a link here too, if we're assuming people need the acronym expanded at this point. I think you're right that this is a good place to not make that assumption.  I'm using the wikipedia link with the relevant definition sentence highlighted, but https://cve.mitre.org/ might be a more canonical option."", 'comment_created': datetime.datetime(2020, 8, 10, 18, 2, 9, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 468087465, 'comment_body': 'We\'re going to keep this documentation for a while, so let\'s not call it a ""new option"" and leave ourselves having to update this document again in a few months when it\'s no longer new.\r\n\r\n```suggestion\r\n`--input-file` extends the functionality of *csv2cve* for other formats like JSON.  It also allows cve-bin-tool to specify triage data so you can group issues which may have been mitigated (through patches, configuration, or other methods not detectable by our version scanning method) or mark false positives.  Triage data can be re-used and applied to multiple scans.  You can provide either CSV or JSON file as input_file with vendor, product and version fields. You can also add optional fields like remarks, comments, cve_number, severity.\r\n```\r\n\r\nI\'ve tried to explain a bit more about why triage is useful here, since (as previously established) we\'re trying to assume less domain knowledge for folk reading the readme/manual, but also so if someone searches for ""false positive"" they find this section.', 'comment_created': datetime.datetime(2020, 8, 10, 18, 10, 49, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 468090799, 'comment_body': 'What, no love for my ""I learned ReST first"" habit of underlining headers? ;)  (No, you don\'t need to change it, I\'m mostly making fun of myself here.  I realize the syntax checker for .md you\'re using may dislike these; many do.)', 'comment_created': datetime.datetime(2020, 8, 10, 18, 17, 4, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 468091564, 'comment_body': ""Question: should we even list them here?  I don't really mind for ease of searching, but the list is starting to get pretty long and I'm wondering if we're at the point where we may wish to just tell people how to get the list rather than showing it in the docs."", 'comment_created': datetime.datetime(2020, 8, 10, 18, 18, 33, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 468108787, 'comment_body': 'Not sure what happened here, but that link needs to stay.\r\n```suggestion\r\n[https://intel.com/security](https://intel.com/security).\r\n```', 'comment_created': datetime.datetime(2020, 8, 10, 18, 51, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 468109357, 'comment_body': ""What's the difference between these lines?  Is this a whitespace change?"", 'comment_created': datetime.datetime(2020, 8, 10, 18, 52, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 468110215, 'comment_body': ""I don't think there's much point in removing the double space in only one line here, and it looks like I used two spaces through the rest of the document."", 'comment_created': datetime.datetime(2020, 8, 10, 18, 53, 36, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 468111722, 'comment_body': 'We probably want to mention that they print when you type --help (maybe before the other options here)', 'comment_created': datetime.datetime(2020, 8, 10, 18, 56, 21, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 468112855, 'comment_body': '```suggestion\r\nin the Input section.\r\n```\r\nthe phrase ""Input section"" should be a link, please.', 'comment_created': datetime.datetime(2020, 8, 10, 18, 58, 24, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 468113914, 'comment_body': ""Again, I think it's a waste of time to switch to one space after period when most of the doc is two and the rendering will look the same anyhow."", 'comment_created': datetime.datetime(2020, 8, 10, 19, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 468114170, 'comment_body': 'do you want to just mention --input here?', 'comment_created': datetime.datetime(2020, 8, 10, 19, 0, 54, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 468115895, 'comment_body': 'For accessibility, we should show a non-colourized version of this as alt text or caption or just below.', 'comment_created': datetime.datetime(2020, 8, 10, 19, 4, 17, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 468116391, 'comment_body': ""Lost that link again.  We need it.\r\n```suggestion\r\nSecurity issues with the tool itself can be reported to Intel's security incident response team via [https://intel.com/security](https://intel.com/security).\r\n```"", 'comment_created': datetime.datetime(2020, 8, 10, 19, 5, 9, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 468397206, 'comment_body': ""To be honest, I don't have any problems with ReST or any other format. Well, I sometimes put HTML in my markdown ðŸ˜…   but I am using markdown formatter like we are using black for python.  So, it had formatted it that way."", 'comment_created': datetime.datetime(2020, 8, 11, 8, 0, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 468397883, 'comment_body': 'seems like I accidentally deleted it. ', 'comment_created': datetime.datetime(2020, 8, 11, 8, 1, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 468398542, 'comment_body': 'Maybe I guess. Reason can be my formatter ðŸ¤¦ ', 'comment_created': datetime.datetime(2020, 8, 11, 8, 2, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 468399671, 'comment_body': 'will change that', 'comment_created': datetime.datetime(2020, 8, 11, 8, 5, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 468464830, 'comment_body': 'Done :)', 'comment_created': datetime.datetime(2020, 8, 11, 9, 57, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 468466140, 'comment_body': ""I don't have any easy way to do this in markdown. So, I am using html here since github supports it."", 'comment_created': datetime.datetime(2020, 8, 11, 9, 59, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 468467313, 'comment_body': 'I agree. I have just done it out of habit.', 'comment_created': datetime.datetime(2020, 8, 11, 10, 1, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 468470094, 'comment_body': 'The reason I have made table was the same because points are taking to much space and I agree list is only going to increase so a solution would be to redirect user to checkers directory. ', 'comment_created': datetime.datetime(2020, 8, 11, 10, 7, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}]","[{'commit_sha': 'c69a4ea01d7783a7005bb49151d68e1feccf915d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa769a268cf6f1eaf60a9e2d15527e1616bef91c', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7faa3c30238e0c297f6053b200e4a8562c726ecc', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7af33ddd8c810e2b6ecf23f075ccc2bd32e5d46a', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '966b4f1744b747bc9bbb8ef9843766d6c1d2615e', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77cf537dd6832d6a12620a62db6217a8302cee75', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e47ee2e8e1d3ee741f9c7fa1c9db35dbbabae8fa', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a57789f598aaa3d6c112ec281d32b896e6592f25', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5d640f1a1b46dc3c822ad41db1aa9767ab34d0c', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8d0b82a22ae161deaeed1b49f52cad0e44a651d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '393b882d897a2e8c99869e2af91839f8bea8cd25', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '528914221c3493d417f320374e97aa033c5ceb2e', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fb2b990b239cbb448120250b766790cd40ea49a', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de9e8d6a0dfeb61d06ad27251a952b6350900351', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}]",Niraj Kamdar,51387861,,User,,102,,31,61
467270858,Documentation: Add how to guides ,"

",True,864,https://api.github.com/repos/intel/cve-bin-tool/pulls/864,https://github.com/intel/cve-bin-tool/pull/864,closed,99,0,2,2,5,0,0,0,[],2020-08-13 09:39:48+00:00,2020-08-19 00:06:12+00:00,483984.0,"5 days, 14:26:24",[],"[{'commit_sha': 'a68df6e38b1d395c4011ae78ba435db3df4af0ec', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de5f0db35ffb5abe923a6e9b25d8cd7c2f95c21b', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}]",Niraj Kamdar,51387861,,User,,102,,31,61
472008126,Added example yml to run CVE Binary Tool in github actions,"I have tested it on my github repo: https://github.com/Niraj-Kamdar/qpt_generator/actions/runs/219903197
I also want to submit this action for [github action hackathon  by dev.to](https://dev.to/devteam/announcing-the-github-actions-hackathon-on-dev-3ljn). Is it okay?
Fixes: #272",True,894,https://api.github.com/repos/intel/cve-bin-tool/pulls/894,https://github.com/intel/cve-bin-tool/pull/894,closed,69,0,2,5,5,0,1,0,[{'name': 'awaiting submitter'}],2020-08-22 16:32:55+00:00,2020-09-02 16:44:18+00:00,951083.0,"11 days, 0:11:23",[],"[{'commit_sha': '4bdd64b872562becc6b2023bc99e553b16349591', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '108ba16e0cfcffbf9c41e60387c1e1554ef10603', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1951445731e6d2721178769e7f110e78ac238de4', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ba00e88b6f7545e1655ec13f167ba233823c902', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00c1322f554b939876f82d1a1e00fed472df1c9a', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}]",Niraj Kamdar,51387861,,User,,102,,31,61
447858381,"[Part 1] Improved error handling with beautiful trace and exit code in cli, input_engine and cvedb","Features added:
- colorful trace
- custom exit code
- Four different error handling mode:
  1. TruncTrace (default)
![tructrace](https://user-images.githubusercontent.com/51387861/87242832-22e2bf00-c44e-11ea-975a-66fc3e74b5d1.png)
  2. FullTrace (while logging level debug)
![WindowsTerminal_wId5SU5O2V](https://user-images.githubusercontent.com/51387861/87242889-95ec3580-c44e-11ea-806c-53fcb07f0570.png)
  3. NoTrace (while quite mode)
![WindowsTerminal_o1lKMeMB0b](https://user-images.githubusercontent.com/51387861/87242997-8caf9880-c44f-11ea-8eda-9fb3b5ab230c.png)
  4. Ignore
  It will ignore exception and is for internal use only.

Fixes #787 and #788.


",True,798,https://api.github.com/repos/intel/cve-bin-tool/pulls/798,https://github.com/intel/cve-bin-tool/pull/798,closed,255,109,7,10,1,16,0,0,[],2020-07-12 06:31:55+00:00,2020-07-17 22:53:26+00:00,490891.0,"5 days, 16:21:31","[{'comment_id': 453284281, 'comment_body': 'Created new module for exception handling.', 'comment_created': datetime.datetime(2020, 7, 12, 8, 10, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 453284389, 'comment_body': 'Moved all exception to one place in error_handler so that new contributor can easily see which exit code is used and always give unique exit code.', 'comment_created': datetime.datetime(2020, 7, 12, 8, 11, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 453284601, 'comment_body': 'custom excepthook with colorized traceback.', 'comment_created': datetime.datetime(2020, 7, 12, 8, 13, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 453285900, 'comment_body': ""New ErrorHandler context manager. It supports 4 types of mode Ignore (ignore error), NoTrace (trace won't print), TruncTrace(truncated trace for the context only (default)), FullTrace (full trace default when debugging.)"", 'comment_created': datetime.datetime(2020, 7, 12, 8, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 453286039, 'comment_body': 'While using ErrorHandler context manager if error get throws it sets exit_code to error_code of that error. This will be helpful in Ignore mode to inspect if exception get throw.', 'comment_created': datetime.datetime(2020, 7, 12, 8, 27, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 453286260, 'comment_body': 'Dictionary mapping of exception with the error code.', 'comment_created': datetime.datetime(2020, 7, 12, 8, 29, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 453286463, 'comment_body': 'ErrorMode enum.', 'comment_created': datetime.datetime(2020, 7, 12, 8, 31, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 453286643, 'comment_body': 'install our custom excepthook that prints colorized traceback and return exit code.', 'comment_created': datetime.datetime(2020, 7, 12, 8, 33, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 453286671, 'comment_body': 'Added back.', 'comment_created': datetime.datetime(2020, 7, 12, 8, 33, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 453286803, 'comment_body': ""handling error with no trace since trace isn't that helpful here."", 'comment_created': datetime.datetime(2020, 7, 12, 8, 34, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 453287009, 'comment_body': 'Set error mode according to logging level. It will not print exception trace in quite mode (Currently we are printing that)', 'comment_created': datetime.datetime(2020, 7, 12, 8, 36, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 453287200, 'comment_body': 'Always use ErrorHandler context manager while raising exception.', 'comment_created': datetime.datetime(2020, 7, 12, 8, 38, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 453287904, 'comment_body': ""It should be staticmethod since we aren't changing class or instance state."", 'comment_created': datetime.datetime(2020, 7, 12, 8, 45, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 453288180, 'comment_body': 'Use super() instead of directly calling method of parent class.', 'comment_created': datetime.datetime(2020, 7, 12, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 453288241, 'comment_body': 'Modernize tests', 'comment_created': datetime.datetime(2020, 7, 12, 8, 48, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 455178246, 'comment_body': 'negative\r\n```suggestion\r\n    UnknownArchiveType: -13,\r\n```', 'comment_created': datetime.datetime(2020, 7, 15, 16, 29, 32, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}]","[{'commit_sha': 'f6aec931baef24ea7bf0c0798ecaf3139606a2e4', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4101bd76b98bbe4ab8adf9f41c255fe88fd8b681', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ef4043a352c33d18d81ab4df98c326c2318ad41', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd60df5319b18165aac28dd4e77ed22bfec080908', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '409ada2c8c7485cc4002695c760b8732ed1b0c3c', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6ea4c9fa075b6a9e188ab90f71173b516bef912', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '710eaf9e7e929be6d6d99e0ffe238f37578947fb', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22eaf38de1a192a8f04cc8af2c91ef956dd91e29', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f51a911b3a70e5170118f9836c30f6d7723929d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8257242c369dec4a62c975b4367e709b32548f7', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}]",Niraj Kamdar,51387861,,User,,102,,31,61
451737212,Improved error handling and readability of extractor,,True,826,https://api.github.com/repos/intel/cve-bin-tool/pulls/826,https://github.com/intel/cve-bin-tool/pull/826,closed,61,62,5,1,2,3,1,0,[{'name': 'awaiting maintainer'}],2020-07-18 06:09:33+00:00,2020-07-23 23:54:59+00:00,495926.0,"5 days, 17:45:26","[{'comment_id': 456755444, 'comment_body': ""This is static method because we don't need class attribute here. We are just ignoring error"", 'comment_created': datetime.datetime(2020, 7, 18, 6, 12, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 456755505, 'comment_body': 'Here we are raising error so, we want to log that.', 'comment_created': datetime.datetime(2020, 7, 18, 6, 13, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}, {'comment_id': 456755796, 'comment_body': 'Create function instead of callable class for better readability. Ex:\r\n`Extractor()(error_mode=mode)` will now become `Extractor(error_mode=mode)`', 'comment_created': datetime.datetime(2020, 7, 18, 6, 17, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}]","[{'commit_sha': '117051586501e21a49da9ded58393095eb468001', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}]",Niraj Kamdar,51387861,,User,,102,,31,61
451754151,OutputEngine: Modernize error handling,,True,828,https://api.github.com/repos/intel/cve-bin-tool/pulls/828,https://github.com/intel/cve-bin-tool/pull/828,closed,7,4,1,3,2,2,0,0,[],2020-07-18 06:48:00+00:00,2020-07-23 19:25:41+00:00,477461.0,"5 days, 12:37:41","[{'comment_id': 456759520, 'comment_body': 'This should be a single string.', 'comment_created': datetime.datetime(2020, 7, 18, 7, 7, 25, tzinfo=datetime.timezone.utc), 'commenter': 'SinghHrmn', 'type': 'User'}, {'comment_id': 456759934, 'comment_body': 'It is.\r\nevaluate this expression: `print(""hello "" ""world"")`  you will know.', 'comment_created': datetime.datetime(2020, 7, 18, 7, 13, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Niraj-Kamdar', 'type': 'User'}]","[{'commit_sha': '3d1a956046338f183c54fbfc3072e52d127e3f89', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43cf595407bbb28c2025bf93729e4cf9a0f09711', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2b5dd55943b02ebada4bad357ae09459426341d', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}]",Niraj Kamdar,51387861,,User,,102,,31,61
451757996,OutputEngine: Fix generate_filename args signature,,True,829,https://api.github.com/repos/intel/cve-bin-tool/pulls/829,https://github.com/intel/cve-bin-tool/pull/829,closed,5,5,2,1,1,1,0,0,[],2020-07-18 06:56:46+00:00,2020-07-20 20:09:28+00:00,220362.0,"2 days, 13:12:42","[{'comment_id': 456759261, 'comment_body': ""Thanks for catching that. But I fixed that but I don't know how it showed up here maybe I forgot to save the file or something. "", 'comment_created': datetime.datetime(2020, 7, 18, 7, 3, 50, tzinfo=datetime.timezone.utc), 'commenter': 'SinghHrmn', 'type': 'User'}]","[{'commit_sha': 'e589981e40bf13f6a6f294a9ea441f7041f4b3b9', 'committer_username': 'Niraj-Kamdar', 'committer_name': 'Niraj Kamdar', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 4, 23, 36, 32, tzinfo=datetime.timezone.utc)}]",Niraj Kamdar,51387861,,User,,102,,31,61

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
165313961,cve-bin-tool,intel/cve-bin-tool,Python,449,1170,29,199,2775,140,30,9,"[{'id': 528938227, 'number': 1001, 'closed': datetime.datetime(2021, 1, 20, 19, 17, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 28, 11, 56, 23, tzinfo=datetime.timezone.utc), 'time_taken': 4605695.0, 'time_delta': '53 days, 7:21:35', 'additions': 16, 'deletions': 22, 'state': 'closed'}, {'id': 528937688, 'number': 1000, 'closed': datetime.datetime(2021, 6, 15, 22, 13, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 28, 11, 51, 47, tzinfo=datetime.timezone.utc), 'time_taken': 17230875.0, 'time_delta': '199 days, 10:21:15', 'additions': 38, 'deletions': 172, 'state': 'closed'}, {'id': 496852018, 'number': 911, 'closed': datetime.datetime(2020, 11, 28, 11, 28, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 2, 11, 35, 52, tzinfo=datetime.timezone.utc), 'time_taken': 4924358.0, 'time_delta': '56 days, 23:52:38', 'additions': 32, 'deletions': 41, 'state': 'closed'}, {'id': 480522630, 'number': 902, 'closed': datetime.datetime(2020, 10, 28, 19, 1, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 5, 13, 49, 27, tzinfo=datetime.timezone.utc), 'time_taken': 4597894.0, 'time_delta': '53 days, 5:11:34', 'additions': 7, 'deletions': 3, 'state': 'closed'}, {'id': 480519171, 'number': 901, 'closed': datetime.datetime(2020, 9, 8, 22, 35, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 5, 13, 23, 37, tzinfo=datetime.timezone.utc), 'time_taken': 292295.0, 'time_delta': '3 days, 9:11:35', 'additions': 4, 'deletions': 5, 'state': 'closed'}, {'id': 472008126, 'number': 894, 'closed': datetime.datetime(2020, 9, 2, 16, 44, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 22, 16, 32, 55, tzinfo=datetime.timezone.utc), 'time_taken': 951083.0, 'time_delta': '11 days, 0:11:23', 'additions': 69, 'deletions': 0, 'state': 'closed'}, {'id': 471612882, 'number': 885, 'closed': datetime.datetime(2020, 8, 24, 16, 17, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 21, 12, 47, 12, tzinfo=datetime.timezone.utc), 'time_taken': 271798.0, 'time_delta': '3 days, 3:29:58', 'additions': 51, 'deletions': 0, 'state': 'closed'}, {'id': 471554741, 'number': 884, 'closed': datetime.datetime(2020, 8, 21, 13, 55, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 21, 10, 36, 13, tzinfo=datetime.timezone.utc), 'time_taken': 11944.0, 'time_delta': '3:19:04', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 470191126, 'number': 880, 'closed': datetime.datetime(2020, 8, 19, 16, 27, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 19, 14, 9, 41, tzinfo=datetime.timezone.utc), 'time_taken': 8257.0, 'time_delta': '2:17:37', 'additions': 19, 'deletions': 10, 'state': 'closed'}, {'id': 469211086, 'number': 875, 'closed': datetime.datetime(2020, 8, 18, 23, 59, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 18, 5, 23, 44, tzinfo=datetime.timezone.utc), 'time_taken': 66951.0, 'time_delta': '18:35:51', 'additions': 23, 'deletions': 5, 'state': 'closed'}, {'id': 467805086, 'number': 871, 'closed': datetime.datetime(2020, 8, 18, 23, 53, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 14, 6, 46, 32, tzinfo=datetime.timezone.utc), 'time_taken': 407200.0, 'time_delta': '4 days, 17:06:40', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 467776412, 'number': 870, 'closed': datetime.datetime(2020, 8, 18, 23, 55, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 14, 5, 25, 36, tzinfo=datetime.timezone.utc), 'time_taken': 412175.0, 'time_delta': '4 days, 18:29:35', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 467270858, 'number': 864, 'closed': datetime.datetime(2020, 8, 19, 0, 6, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 13, 9, 39, 48, tzinfo=datetime.timezone.utc), 'time_taken': 483984.0, 'time_delta': '5 days, 14:26:24', 'additions': 99, 'deletions': 0, 'state': 'closed'}, {'id': 467159225, 'number': 863, 'closed': datetime.datetime(2020, 8, 13, 17, 24, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 13, 5, 35, 14, tzinfo=datetime.timezone.utc), 'time_taken': 42562.0, 'time_delta': '11:49:22', 'additions': 9, 'deletions': 17, 'state': 'closed'}, {'id': 464951422, 'number': 860, 'closed': datetime.datetime(2020, 8, 12, 16, 56, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 8, 4, 30, 32, tzinfo=datetime.timezone.utc), 'time_taken': 390386.0, 'time_delta': '4 days, 12:26:26', 'additions': 237, 'deletions': 303, 'state': 'closed'}, {'id': 460159759, 'number': 857, 'closed': datetime.datetime(2020, 8, 12, 16, 36, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 31, 13, 43, 54, tzinfo=datetime.timezone.utc), 'time_taken': 1047167.0, 'time_delta': '12 days, 2:52:47', 'additions': 431, 'deletions': 371, 'state': 'closed'}, {'id': 458370853, 'number': 851, 'closed': datetime.datetime(2020, 7, 29, 16, 1, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 29, 11, 17, 13, tzinfo=datetime.timezone.utc), 'time_taken': 17064.0, 'time_delta': '4:44:24', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 456439357, 'number': 848, 'closed': datetime.datetime(2020, 7, 27, 17, 23, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 24, 18, 56, 6, tzinfo=datetime.timezone.utc), 'time_taken': 253621.0, 'time_delta': '2 days, 22:27:01', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 456241486, 'number': 846, 'closed': datetime.datetime(2020, 8, 5, 16, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 24, 11, 44, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1052868.0, 'time_delta': '12 days, 4:27:48', 'additions': 315, 'deletions': 66, 'state': 'closed'}, {'id': 454995515, 'number': 841, 'closed': datetime.datetime(2020, 7, 23, 23, 53, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 9, 28, 55, tzinfo=datetime.timezone.utc), 'time_taken': 138285.0, 'time_delta': '1 day, 14:24:45', 'additions': 2, 'deletions': 5, 'state': 'closed'}, {'id': 454309020, 'number': 838, 'closed': datetime.datetime(2020, 7, 23, 23, 58, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 21, 9, 23, 53, tzinfo=datetime.timezone.utc), 'time_taken': 225277.0, 'time_delta': '2 days, 14:34:37', 'additions': 19, 'deletions': 1, 'state': 'closed'}, {'id': 454290139, 'number': 837, 'closed': datetime.datetime(2020, 7, 23, 17, 10, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 21, 9, 1, 11, tzinfo=datetime.timezone.utc), 'time_taken': 202138.0, 'time_delta': '2 days, 8:08:58', 'additions': 19, 'deletions': 15, 'state': 'closed'}, {'id': 451768000, 'number': 830, 'closed': datetime.datetime(2020, 7, 29, 16, 15, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 18, 7, 18, 55, tzinfo=datetime.timezone.utc), 'time_taken': 982596.0, 'time_delta': '11 days, 8:56:36', 'additions': 150, 'deletions': 119, 'state': 'closed'}, {'id': 451757996, 'number': 829, 'closed': datetime.datetime(2020, 7, 20, 20, 9, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 18, 6, 56, 46, tzinfo=datetime.timezone.utc), 'time_taken': 220362.0, 'time_delta': '2 days, 13:12:42', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 451754151, 'number': 828, 'closed': datetime.datetime(2020, 7, 23, 19, 25, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 18, 6, 48, tzinfo=datetime.timezone.utc), 'time_taken': 477461.0, 'time_delta': '5 days, 12:37:41', 'additions': 7, 'deletions': 4, 'state': 'closed'}, {'id': 451743427, 'number': 827, 'closed': datetime.datetime(2020, 7, 24, 0, 32, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 18, 6, 23, 27, tzinfo=datetime.timezone.utc), 'time_taken': 497361.0, 'time_delta': '5 days, 18:09:21', 'additions': 194, 'deletions': 125, 'state': 'closed'}, {'id': 451737212, 'number': 826, 'closed': datetime.datetime(2020, 7, 23, 23, 54, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 18, 6, 9, 33, tzinfo=datetime.timezone.utc), 'time_taken': 495926.0, 'time_delta': '5 days, 17:45:26', 'additions': 61, 'deletions': 62, 'state': 'closed'}, {'id': 451211685, 'number': 825, 'closed': datetime.datetime(2020, 7, 18, 6, 22, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 17, 15, 39, 27, tzinfo=datetime.timezone.utc), 'time_taken': 53006.0, 'time_delta': '14:43:26', 'additions': 1010, 'deletions': 749, 'state': 'closed'}, {'id': 449939934, 'number': 820, 'closed': datetime.datetime(2020, 7, 24, 0, 33, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 6, 51, 47, tzinfo=datetime.timezone.utc), 'time_taken': 668527.0, 'time_delta': '7 days, 17:42:07', 'additions': 25, 'deletions': 3, 'state': 'closed'}, {'id': 449269163, 'number': 813, 'closed': datetime.datetime(2020, 7, 15, 16, 43, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 15, 6, 17, 8, tzinfo=datetime.timezone.utc), 'time_taken': 37603.0, 'time_delta': '10:26:43', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 449254819, 'number': 812, 'closed': datetime.datetime(2020, 7, 15, 16, 8, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 15, 5, 35, 39, tzinfo=datetime.timezone.utc), 'time_taken': 37962.0, 'time_delta': '10:32:42', 'additions': 0, 'deletions': 3, 'state': 'closed'}, {'id': 449252958, 'number': 811, 'closed': datetime.datetime(2020, 7, 15, 16, 43, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 15, 5, 29, tzinfo=datetime.timezone.utc), 'time_taken': 40444.0, 'time_delta': '11:14:04', 'additions': 7, 'deletions': 8, 'state': 'closed'}, {'id': 448141174, 'number': 804, 'closed': datetime.datetime(2020, 7, 18, 6, 9, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 9, 46, 36, tzinfo=datetime.timezone.utc), 'time_taken': 418957.0, 'time_delta': '4 days, 20:22:37', 'additions': 316, 'deletions': 171, 'state': 'closed'}, {'id': 448120027, 'number': 803, 'closed': datetime.datetime(2020, 7, 13, 9, 12, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 9, 11, 51, tzinfo=datetime.timezone.utc), 'time_taken': 29.0, 'time_delta': '0:00:29', 'additions': 315, 'deletions': 170, 'state': 'closed'}, {'id': 448114398, 'number': 802, 'closed': datetime.datetime(2020, 7, 13, 9, 3, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 9, 3, 20, tzinfo=datetime.timezone.utc), 'time_taken': 31.0, 'time_delta': '0:00:31', 'additions': 93, 'deletions': 94, 'state': 'closed'}, {'id': 448068615, 'number': 801, 'closed': datetime.datetime(2020, 7, 15, 16, 42, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 6, 48, 12, tzinfo=datetime.timezone.utc), 'time_taken': 208431.0, 'time_delta': '2 days, 9:53:51', 'additions': 10, 'deletions': 0, 'state': 'closed'}, {'id': 448061916, 'number': 800, 'closed': datetime.datetime(2020, 7, 13, 9, 9, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 6, 26, 51, tzinfo=datetime.timezone.utc), 'time_taken': 9771.0, 'time_delta': '2:42:51', 'additions': 315, 'deletions': 170, 'state': 'closed'}, {'id': 448053852, 'number': 799, 'closed': datetime.datetime(2020, 7, 13, 6, 47, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 6, 2, 12, tzinfo=datetime.timezone.utc), 'time_taken': 2736.0, 'time_delta': '0:45:36', 'additions': 16, 'deletions': 9, 'state': 'closed'}, {'id': 447858381, 'number': 798, 'closed': datetime.datetime(2020, 7, 17, 22, 53, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 12, 6, 31, 55, tzinfo=datetime.timezone.utc), 'time_taken': 490891.0, 'time_delta': '5 days, 16:21:31', 'additions': 255, 'deletions': 109, 'state': 'closed'}, {'id': 447404865, 'number': 797, 'closed': datetime.datetime(2020, 7, 14, 22, 51, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 10, 12, 12, 31, tzinfo=datetime.timezone.utc), 'time_taken': 383941.0, 'time_delta': '4 days, 10:39:01', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 447310046, 'number': 796, 'closed': datetime.datetime(2020, 7, 12, 6, 30, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 10, 8, 43, 15, tzinfo=datetime.timezone.utc), 'time_taken': 164853.0, 'time_delta': '1 day, 21:47:33', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 447306163, 'number': 795, 'closed': datetime.datetime(2020, 7, 14, 22, 19, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 10, 8, 35, 35, tzinfo=datetime.timezone.utc), 'time_taken': 395050.0, 'time_delta': '4 days, 13:44:10', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 447299696, 'number': 794, 'closed': datetime.datetime(2020, 7, 14, 22, 49, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 10, 8, 21, 43, tzinfo=datetime.timezone.utc), 'time_taken': 397669.0, 'time_delta': '4 days, 14:27:49', 'additions': 35, 'deletions': 66, 'state': 'closed'}, {'id': 444001104, 'number': 777, 'closed': datetime.datetime(2020, 7, 9, 18, 48, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 3, 11, 10, 33, tzinfo=datetime.timezone.utc), 'time_taken': 545901.0, 'time_delta': '6 days, 7:38:21', 'additions': 629, 'deletions': 574, 'state': 'closed'}, {'id': 442323943, 'number': 772, 'closed': datetime.datetime(2020, 6, 30, 23, 3, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 30, 22, 12, 29, tzinfo=datetime.timezone.utc), 'time_taken': 3056.0, 'time_delta': '0:50:56', 'additions': 30, 'deletions': 34, 'state': 'closed'}, {'id': 440767492, 'number': 767, 'closed': datetime.datetime(2020, 6, 29, 18, 44, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 26, 20, 12, 46, tzinfo=datetime.timezone.utc), 'time_taken': 253888.0, 'time_delta': '2 days, 22:31:28', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 439063312, 'number': 758, 'closed': datetime.datetime(2020, 6, 30, 22, 12, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 24, 8, 57, 50, tzinfo=datetime.timezone.utc), 'time_taken': 566108.0, 'time_delta': '6 days, 13:15:08', 'additions': 794, 'deletions': 663, 'state': 'closed'}, {'id': 437049847, 'number': 751, 'closed': datetime.datetime(2020, 6, 26, 15, 11, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 19, 11, 30, 31, tzinfo=datetime.timezone.utc), 'time_taken': 618076.0, 'time_delta': '7 days, 3:41:16', 'additions': 51, 'deletions': 30, 'state': 'closed'}, {'id': 434123359, 'number': 750, 'closed': datetime.datetime(2020, 6, 19, 11, 30, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 14, 10, 16, 2, tzinfo=datetime.timezone.utc), 'time_taken': 436448.0, 'time_delta': '5 days, 1:14:08', 'additions': 259, 'deletions': 105, 'state': 'closed'}, {'id': 434026577, 'number': 746, 'closed': datetime.datetime(2020, 6, 18, 17, 14, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 13, 16, 25, 35, tzinfo=datetime.timezone.utc), 'time_taken': 434955.0, 'time_delta': '5 days, 0:49:15', 'additions': 254, 'deletions': 147, 'state': 'closed'}, {'id': 431610845, 'number': 741, 'closed': datetime.datetime(2020, 6, 10, 16, 43, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 9, 8, 7, 38, tzinfo=datetime.timezone.utc), 'time_taken': 117359.0, 'time_delta': '1 day, 8:35:59', 'additions': 228, 'deletions': 120, 'state': 'closed'}, {'id': 424934964, 'number': 716, 'closed': datetime.datetime(2020, 6, 10, 16, 50, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 29, 7, 27, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1070581.0, 'time_delta': '12 days, 9:23:01', 'additions': 1404, 'deletions': 3832, 'state': 'closed'}, {'id': 423997112, 'number': 698, 'closed': datetime.datetime(2020, 5, 28, 8, 29, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 27, 17, 16, 38, tzinfo=datetime.timezone.utc), 'time_taken': 54769.0, 'time_delta': '15:12:49', 'additions': 58, 'deletions': 46, 'state': 'closed'}, {'id': 423555083, 'number': 697, 'closed': datetime.datetime(2020, 5, 27, 1, 42, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 27, 1, 40, 45, tzinfo=datetime.timezone.utc), 'time_taken': 118.0, 'time_delta': '0:01:58', 'additions': 0, 'deletions': 13, 'state': 'closed'}, {'id': 423552906, 'number': 696, 'closed': datetime.datetime(2020, 5, 28, 20, 3, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 27, 1, 32, 47, tzinfo=datetime.timezone.utc), 'time_taken': 153062.0, 'time_delta': '1 day, 18:31:02', 'additions': 242, 'deletions': 398, 'state': 'closed'}, {'id': 422267026, 'number': 687, 'closed': datetime.datetime(2020, 5, 23, 22, 21, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 23, 12, 21, 57, tzinfo=datetime.timezone.utc), 'time_taken': 35990.0, 'time_delta': '9:59:50', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 419151578, 'number': 674, 'closed': datetime.datetime(2020, 5, 17, 23, 52, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 17, 18, 16, 29, tzinfo=datetime.timezone.utc), 'time_taken': 20159.0, 'time_delta': '5:35:59', 'additions': 22, 'deletions': 18, 'state': 'closed'}, {'id': 418268508, 'number': 672, 'closed': datetime.datetime(2020, 5, 19, 18, 16, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 14, 22, 1, 23, tzinfo=datetime.timezone.utc), 'time_taken': 418516.0, 'time_delta': '4 days, 20:15:16', 'additions': 81, 'deletions': 12, 'state': 'closed'}, {'id': 417507834, 'number': 664, 'closed': datetime.datetime(2020, 5, 14, 17, 58, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 13, 17, 29, 57, tzinfo=datetime.timezone.utc), 'time_taken': 88117.0, 'time_delta': '1 day, 0:28:37', 'additions': 11, 'deletions': 8, 'state': 'closed'}, {'id': 417506357, 'number': 663, 'closed': datetime.datetime(2020, 5, 13, 17, 27, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 13, 17, 26, 54, tzinfo=datetime.timezone.utc), 'time_taken': 25.0, 'time_delta': '0:00:25', 'additions': 9, 'deletions': 6, 'state': 'closed'}, {'id': 416753097, 'number': 658, 'closed': datetime.datetime(2020, 5, 12, 20, 42, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 12, 14, 12, 9, tzinfo=datetime.timezone.utc), 'time_taken': 23439.0, 'time_delta': '6:30:39', 'additions': 2, 'deletions': 4, 'state': 'closed'}, {'id': 415550744, 'number': 656, 'closed': datetime.datetime(2020, 5, 13, 0, 15, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 9, 10, 1, 27, tzinfo=datetime.timezone.utc), 'time_taken': 310435.0, 'time_delta': '3 days, 14:13:55', 'additions': 1038, 'deletions': 1802, 'state': 'closed'}, {'id': 415529090, 'number': 655, 'closed': datetime.datetime(2020, 5, 11, 22, 8, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 9, 6, 52, 54, tzinfo=datetime.timezone.utc), 'time_taken': 227727.0, 'time_delta': '2 days, 15:15:27', 'additions': 24, 'deletions': 155, 'state': 'closed'}, {'id': 415367451, 'number': 649, 'closed': datetime.datetime(2020, 5, 8, 22, 2, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 8, 18, 27, 29, tzinfo=datetime.timezone.utc), 'time_taken': 12926.0, 'time_delta': '3:35:26', 'additions': 13, 'deletions': 30, 'state': 'closed'}, {'id': 410484529, 'number': 612, 'closed': datetime.datetime(2020, 4, 29, 17, 58, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 29, 4, 39, 27, tzinfo=datetime.timezone.utc), 'time_taken': 47972.0, 'time_delta': '13:19:32', 'additions': 46, 'deletions': 0, 'state': 'closed'}, {'id': 409082323, 'number': 595, 'closed': datetime.datetime(2020, 4, 29, 0, 10, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 26, 13, 17, 42, tzinfo=datetime.timezone.utc), 'time_taken': 211963.0, 'time_delta': '2 days, 10:52:43', 'additions': 10, 'deletions': 11, 'state': 'closed'}, {'id': 407676178, 'number': 587, 'closed': datetime.datetime(2020, 4, 23, 17, 47, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 23, 4, 41, 54, tzinfo=datetime.timezone.utc), 'time_taken': 47152.0, 'time_delta': '13:05:52', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 407582339, 'number': 586, 'closed': datetime.datetime(2020, 4, 29, 19, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 22, 22, 35, 11, tzinfo=datetime.timezone.utc), 'time_taken': 592609.0, 'time_delta': '6 days, 20:36:49', 'additions': 23, 'deletions': 3, 'state': 'closed'}, {'id': 404663910, 'number': 582, 'closed': datetime.datetime(2020, 4, 16, 23, 56, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 16, 19, 50, 28, tzinfo=datetime.timezone.utc), 'time_taken': 14772.0, 'time_delta': '4:06:12', 'additions': 9, 'deletions': 4, 'state': 'closed'}, {'id': 404574127, 'number': 581, 'closed': datetime.datetime(2020, 4, 20, 21, 46, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 16, 18, 3, 45, tzinfo=datetime.timezone.utc), 'time_taken': 358969.0, 'time_delta': '4 days, 3:42:49', 'additions': 108, 'deletions': 99, 'state': 'closed'}, {'id': 402389180, 'number': 573, 'closed': datetime.datetime(2020, 5, 14, 18, 28, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 12, 19, 46, 9, tzinfo=datetime.timezone.utc), 'time_taken': 2760131.0, 'time_delta': '31 days, 22:42:11', 'additions': 55, 'deletions': 20, 'state': 'closed'}, {'id': 397427321, 'number': 551, 'closed': datetime.datetime(2020, 4, 12, 17, 22, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 2, 8, 22, 14, tzinfo=datetime.timezone.utc), 'time_taken': 896443.0, 'time_delta': '10 days, 9:00:43', 'additions': 98, 'deletions': 85, 'state': 'closed'}, {'id': 395239480, 'number': 535, 'closed': datetime.datetime(2020, 4, 15, 17, 30, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 29, 11, 58, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1488687.0, 'time_delta': '17 days, 5:31:27', 'additions': 33, 'deletions': 26, 'state': 'closed'}, {'id': 394685783, 'number': 510, 'closed': datetime.datetime(2020, 3, 31, 0, 3, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 27, 10, 57, 59, tzinfo=datetime.timezone.utc), 'time_taken': 306308.0, 'time_delta': '3 days, 13:05:08', 'additions': 6, 'deletions': 5, 'state': 'closed'}, {'id': 394022754, 'number': 503, 'closed': datetime.datetime(2020, 4, 7, 23, 36, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 26, 8, 22, 49, tzinfo=datetime.timezone.utc), 'time_taken': 1091623.0, 'time_delta': '12 days, 15:13:43', 'additions': 94, 'deletions': 2, 'state': 'closed'}, {'id': 393564808, 'number': 495, 'closed': datetime.datetime(2020, 3, 26, 7, 35, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 25, 12, 40, 56, tzinfo=datetime.timezone.utc), 'time_taken': 68076.0, 'time_delta': '18:54:36', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 393486923, 'number': 494, 'closed': datetime.datetime(2020, 3, 26, 1, 40, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 25, 9, 50, 58, tzinfo=datetime.timezone.utc), 'time_taken': 56983.0, 'time_delta': '15:49:43', 'additions': 173, 'deletions': 0, 'state': 'closed'}, {'id': 392983000, 'number': 491, 'closed': datetime.datetime(2020, 3, 24, 18, 52, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 24, 13, 14, 5, tzinfo=datetime.timezone.utc), 'time_taken': 20282.0, 'time_delta': '5:38:02', 'additions': 73, 'deletions': 0, 'state': 'closed'}, {'id': 391981516, 'number': 489, 'closed': datetime.datetime(2020, 3, 24, 18, 47, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 22, 10, 8, 49, tzinfo=datetime.timezone.utc), 'time_taken': 203915.0, 'time_delta': '2 days, 8:38:35', 'additions': 60, 'deletions': 0, 'state': 'closed'}, {'id': 391487115, 'number': 487, 'closed': datetime.datetime(2020, 3, 26, 17, 35, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 20, 11, 41, 43, tzinfo=datetime.timezone.utc), 'time_taken': 539640.0, 'time_delta': '6 days, 5:54:00', 'additions': 49, 'deletions': 13, 'state': 'closed'}, {'id': 389396487, 'number': 480, 'closed': datetime.datetime(2020, 3, 26, 21, 55, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 16, 17, 37, 46, tzinfo=datetime.timezone.utc), 'time_taken': 879441.0, 'time_delta': '10 days, 4:17:21', 'additions': 10, 'deletions': 5, 'state': 'closed'}, {'id': 389391570, 'number': 479, 'closed': datetime.datetime(2020, 3, 20, 19, 55, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 16, 17, 27, 52, tzinfo=datetime.timezone.utc), 'time_taken': 354461.0, 'time_delta': '4 days, 2:27:41', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 389218318, 'number': 477, 'closed': datetime.datetime(2020, 3, 19, 16, 57, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 16, 12, 58, 19, tzinfo=datetime.timezone.utc), 'time_taken': 273565.0, 'time_delta': '3 days, 3:59:25', 'additions': 21, 'deletions': 22, 'state': 'closed'}, {'id': 376466606, 'number': 356, 'closed': datetime.datetime(2020, 2, 19, 18, 13, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 18, 7, 49, 53, tzinfo=datetime.timezone.utc), 'time_taken': 123841.0, 'time_delta': '1 day, 10:24:01', 'additions': 35, 'deletions': 1, 'state': 'closed'}]"
