pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
665924926,Fix #13170: Create Exploration for android specific interactions (Milestone 1.1),"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes #13170
2. This PR does the following: Adds an exploration to data/exploration which contains all the Interactions supported in android.
This exploration covers all the Interactions that are supported in android, inorder to test it through network requests using the local development server, This exploration requires an exploration_id which is added in the feconf.py

Note that This exploration doesn't load images from the explore/<exp_id> which uses the GCS to load the images, In the below steps I've mentioned the editor's preview in order to test the exploration locally.

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
- Start the server
- login 
- update user role to admin
- Reload the android_interactions exploration from [Admin#Activities](http://localhost:8181/admin)
- Open editor preview [Exploration editor's preview](http://localhost:8181/create/26#/preview/Introduction) 

https://user-images.githubusercontent.com/54740946/123472141-6826df00-d614-11eb-8aed-f7f94d00f630.mp4



#### The list of interactions are
- Fractions (with 3 hints and 1 solution)
- Radio Button
- Check box
- Integer Input Interaction
- Ratio Input Interaction
- Text Input Interaction
- Drag and Drop sort
- Drag and Drop sort with merge
- Image Region selection Interaction
- End Exploration
<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13029,https://api.github.com/repos/oppia/oppia/pulls/13029,https://github.com/oppia/oppia/pull/13029,closed,826,0,10,7,24,25,0,1,[],2021-06-09 13:46:26+00:00,2021-06-27 07:56:46+00:00,1534220.0,"17 days, 18:10:20","[{'comment_id': 648423227, 'comment_body': 'To load the exploration from the admin activities tab similar to other dummy explorations', 'comment_created': datetime.datetime(2021, 6, 9, 15, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 648778993, 'comment_body': 'Please create a list of all interactions does this file contains, in the PR description.', 'comment_created': datetime.datetime(2021, 6, 10, 1, 3, 20, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 648779231, 'comment_body': 'empty line at the EOF', 'comment_created': datetime.datetime(2021, 6, 10, 1, 4, 5, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 648779258, 'comment_body': 'empty line at the EOF', 'comment_created': datetime.datetime(2021, 6, 10, 1, 4, 11, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 648779275, 'comment_body': 'empty line at the EOF', 'comment_created': datetime.datetime(2021, 6, 10, 1, 4, 15, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 648840621, 'comment_body': ""Just a note -- probably OK to have this here, but you probably won't end up using this route when calling the custom handler that you're writing."", 'comment_created': datetime.datetime(2021, 6, 10, 4, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 648844503, 'comment_body': 'but [exp_services.load_demo](https://github.com/oppia/oppia/blob/develop/core/domain/exp_services.py#L1500) needs exploration id right?', 'comment_created': datetime.datetime(2021, 6, 10, 4, 42, 25, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 648850469, 'comment_body': 'Yes, but you may be able to specify that without referencing this directly (since this list is more for the ""reload all"" button in the admin panel).', 'comment_created': datetime.datetime(2021, 6, 10, 4, 59, 47, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 649588058, 'comment_body': 'Done, also added a screen recording.', 'comment_created': datetime.datetime(2021, 6, 10, 23, 9, 3, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 649588088, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 10, 23, 9, 10, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 649588122, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 10, 23, 9, 16, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 649588166, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 10, 23, 9, 20, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 649668001, 'comment_body': ""Can we use the already created solar system image interaction data? The assets are already there in repo and this way we can directly use the existing resources and we don't need to add new images. \r\n\r\nhttps://github.com/oppia/oppia/blob/14d9f1e8b59fd6dd5c3ccea8fe4fb903379e20f9/data/explorations/solar_system/The%20Solar%20System.yaml#L295"", 'comment_created': datetime.datetime(2021, 6, 11, 3, 45, 19, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 649730659, 'comment_body': 'Are you using the link in the description to load the exploration?\r\nActually loading the exploration from the community library uses the GCS, but we need the AssetDevHandler here.\r\nThis is the same for all other dummy explorations.\r\n\r\n ', 'comment_created': datetime.datetime(2021, 6, 11, 6, 46, 20, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 649739559, 'comment_body': ""Assigning you back as we will discuss the image loading in today's meeting. \r\nWhile you can look into my above suggestion for using solay system data."", 'comment_created': datetime.datetime(2021, 6, 11, 7, 3, 42, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 649807837, 'comment_body': ""We can't use same image for multiple explorations,\r\neach exploration uses its id to access the images."", 'comment_created': datetime.datetime(2021, 6, 11, 8, 51, 21, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 649836014, 'comment_body': ""ok, in that case, I don't think we can reduce the resources usage. Let's go with the current android image only. "", 'comment_created': datetime.datetime(2021, 6, 11, 9, 33, 44, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 650209627, 'comment_body': 'Follow the filename pattern of other exploration yml file.', 'comment_created': datetime.datetime(2021, 6, 11, 19, 7, 31, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 650215948, 'comment_body': 'Explorations in directories do have spaces.\r\n- [Graph Modeling.yaml](https://github.com/oppia/oppia/blob/develop/data/explorations/modeling_graphs/Graph%20Modeling.yaml)\r\n\r\n- [The Lazy Magician.yaml](https://github.com/oppia/oppia/blob/develop/data/explorations/binary_search/The%20Lazy%20Magician.yaml)\r\n\r\n- [The Solar System.yaml](https://github.com/oppia/oppia/blob/develop/data/explorations/solar_system/The%20Solar%20System.yaml)\r\n- [Test of expressions and interactions.yaml](https://github.com/oppia/oppia/blob/develop/data/explorations/test_interactions/Test%20of%20expressions%20and%20interactions.yaml)', 'comment_created': datetime.datetime(2021, 6, 11, 19, 20, 52, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 650749999, 'comment_body': '@DubeySandeep PTAL', 'comment_created': datetime.datetime(2021, 6, 14, 8, 35, 32, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 651231498, 'comment_body': ""It's weird that we have conflicts with the filename pattern in the dir. Anyway, thanks for checking! :)"", 'comment_created': datetime.datetime(2021, 6, 14, 19, 50, 12, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 655852456, 'comment_body': ""This SVG doesn't seem to include any text. Doesn't that make it incompatible with the PNG versions?"", 'comment_created': datetime.datetime(2021, 6, 22, 3, 39, 59, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 655852629, 'comment_body': ""It's a bit nice for manual debugging of the exploration, though."", 'comment_created': datetime.datetime(2021, 6, 22, 3, 40, 36, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 655943918, 'comment_body': ""Sorry I don't get it, also I've updated the images to oppia logo, PTAL"", 'comment_created': datetime.datetime(2021, 6, 22, 7, 20, 38, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 659280254, 'comment_body': ""Ah, I think my point isn't relevant anymore. Thanks!"", 'comment_created': datetime.datetime(2021, 6, 27, 7, 54, 45, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}]","[{'commit_sha': 'd60b7e2549e90b9e39570835e0b23ef958ab504b', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '833f24c0c8f4c0e3eb57eab62928be856e0d8993', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca91c318d4c4ca906056bca7813eafef37b4e8d7', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc7035bf402290bb38f410d909323c58ecb631f1', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7da0bc6a68419ffa830daf77fdc18c3d060d986', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9080031a403b77ab2447824f5e66ba6f41bb3d62', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2f1293efe265833892755f49d6116eea0cb06a8', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}]",Farees Hussain,54740946,fareezzhussain@gmail.com,User,,37,,23,68
674996563,Fix #13172: Controller to initialize android specific structures (Milestone 1.2),"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes #13172.
2. This PR does the following:
Adding a Controller that Initializes a topic, story and exploration to be fetched from android for end to end tests

The handler used here is accessible to everyone, Using SYSTEM_COMMITTER_ID for the creator as the handler is accessible to logged-out users.
This POST request avoids CSRF token.

I've created a new function **post_req** in the test_utils which doesn't require csrf_token and any json response in return.

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

#### Steps to initialize the structures
- Start the server using the command
   ```
   python -m scripts.start --no_browser
   ```
- make a post request to the endpoint `/initialize_android_test_data`
   ```
   curl -X POST http://localhost:8181/initialize_android_test_data
   ```
 Open http://localhost:8181/learn/stagin/topic_url to check if the topic is saved to the data_store.

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13174,https://api.github.com/repos/oppia/oppia/pulls/13174,https://github.com/oppia/oppia/pull/13174,closed,441,1,7,32,35,112,0,1,[],2021-06-22 01:11:58+00:00,2021-07-06 07:44:14+00:00,1233136.0,"14 days, 6:32:16","[{'comment_id': 657597875, 'comment_body': 'The issue: https://github.com/oppia/oppia/issues/13199\r\nexp_services.load_demo() takes more time than expected (since Release v3.0.8) increasing the timeout to unblock it', 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 42, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 657601066, 'comment_body': 'Using this function as the post_json usage in the above tests gives the following error\r\n```\r\nTraceback (most recent call last):\r\n  File ""/home/farees/opensource/oppia/core/controllers/android_e2e_config_test.py"", line 104, in test_check_if_topic_exists_and_not_published\r\n    \'/initialize_android_test_data\', payload={}, csrf_token=csrf_token)\r\n  File ""/home/farees/opensource/oppia/core/tests/test_utils.py"", line 2277, in post_json\r\n    return self._parse_json_response(json_response, expect_errors)\r\n  File ""/home/farees/opensource/oppia/core/tests/test_utils.py"", line 2218, in _parse_json_response\r\n    self.assertEqual(json_response.content_type, \'application/json\')\r\nAssertionError: \'text/html\' != u\'application/json\'\r\n```\r\n\r\nnot sure why it gives \'text/html\' content-type for a post request.\r\nalso avoiding the csrf_token which is required in the post_json \r\n\r\nCreated this function showing how to make the tests to do the desired assertions (will remove this once I get to know the preferable approach)', 'comment_created': datetime.datetime(2021, 6, 24, 3, 37, 53, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 657601834, 'comment_body': 'Added this exception to check if the topic created is published, \r\nguessing if there might be any errors till topic_services.publish_topic()', 'comment_created': datetime.datetime(2021, 6, 24, 3, 40, 45, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 659008915, 'comment_body': '@FareesHussain Is this API is expected and ready for use in production?', 'comment_created': datetime.datetime(2021, 6, 25, 20, 5, 6, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 659011489, 'comment_body': ""It is not for production, I've added the flag for that\r\nhttps://github.com/oppia/oppia/blob/5f1577e489ce9eb7c31cf048caa7402ba2603d04/core/controllers/android_e2e_config.py#L50"", 'comment_created': datetime.datetime(2021, 6, 25, 20, 10, 45, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 659022938, 'comment_body': 'Nit: 2021', 'comment_created': datetime.datetime(2021, 6, 25, 20, 35, 57, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 659026423, 'comment_body': ""This doesn't quite make sense to me. #13029 is marking #13170 as fixed, so it will be closed before this TODO can be resolved. I suggest either waiting for that PR to be resolved & addressing this TODO now before merging this PR, or use a different issue for the TODO to ensure it gets resolved before the project is finished."", 'comment_created': datetime.datetime(2021, 6, 25, 20, 43, 40, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 659026659, 'comment_body': 'What does the 0.3 signify & why is that specific value being used?', 'comment_created': datetime.datetime(2021, 6, 25, 20, 44, 15, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 659026885, 'comment_body': ""Under what circumstances can this happen? Shouldn't this be a failure case?"", 'comment_created': datetime.datetime(2021, 6, 25, 20, 44, 45, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 659027842, 'comment_body': 'Is this necessary for the purpose of this exploration (to be tested on Android)?', 'comment_created': datetime.datetime(2021, 6, 25, 20, 46, 59, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 659028109, 'comment_body': 'Under what circumstances would this be true vs. false?\r\n\r\nI generally would expect the logic in this controller to always do the same thing each time, not to have any variance in behavior.', 'comment_created': datetime.datetime(2021, 6, 25, 20, 47, 30, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 659029146, 'comment_body': ""I suggest inverting this check so that the post() method immediately fails if not on dev mode. This makes it easier to audit that the check we want is truly resulting in a failure as soon as possible, and it's generally good practice to fail-fast in the beginning of a method when preconditions aren't being met. Finally, it also has the nice benefit of letting you de-indent the whole post() implementation code block by one level."", 'comment_created': datetime.datetime(2021, 6, 25, 20, 49, 56, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 659131606, 'comment_body': 'We should also test that the correct structures are being created & populated. Consider all the things that need to go right in the controller in order for the Android end-to-end tests to pass--all of these things should be validated in the tests below to ensure unexpected failures are caught before they reach the Android test suite.', 'comment_created': datetime.datetime(2021, 6, 26, 7, 6, 54, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 659131794, 'comment_body': ""Why is the timeout happening? We should document it here so that it's clear to others who come across this. Also, is this the desired behavior long-term? If not, we should have a TODO to revert it.\r\n\r\n/cc @brianrodri "", 'comment_created': datetime.datetime(2021, 6, 26, 7, 8, 36, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 659132274, 'comment_body': ""It seems like ``post_json`` might be wrong. It's calling ``_send_post_request`` which calls TestApp's ``post`` method, but per https://docs.pylonsproject.org/projects/webtest/en/2.0.4/testapp.html#making-json-requests we should be using ``post_json`` for JSON messages to ensure the correct type is being set. I'm surprised we haven't hit this before.\r\n\r\n@nithusha21 do you have any thoughts on this? We ought to not have a second method here, but changing ``post_json`` in this PR may have unexpected side effects codebase-wide."", 'comment_created': datetime.datetime(2021, 6, 26, 7, 13, 18, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 659132400, 'comment_body': ""Ideally we would only register this in dev mode runs of the codebase, but per @vojtechjelinek it seemed that there wasn't an easy way to do that."", 'comment_created': datetime.datetime(2021, 6, 26, 7, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 659290999, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 9, 23, 51, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 659291004, 'comment_body': ""Removed and updated it to '26' as #13029 is merged."", 'comment_created': datetime.datetime(2021, 6, 27, 9, 23, 54, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 659291007, 'comment_body': 'The third parameter is the [skill_difficulty](https://github.com/oppia/oppia/blob/develop/core/domain/question_services.py#L115)\r\n\r\nNo particular reason for 0.3 it just has to be any value between 0-1, It is to validate the skill and the subtopic\r\n\r\nI just used this from [admin.py](https://github.com/oppia/oppia/blob/develop/core/controllers/admin.py#L363) as reference', 'comment_created': datetime.datetime(2021, 6, 27, 9, 23, 57, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 659291008, 'comment_body': 'Removed this, This was already added at the top', 'comment_created': datetime.datetime(2021, 6, 27, 9, 24, 1, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 659291012, 'comment_body': 'No, Removed it', 'comment_created': datetime.datetime(2021, 6, 27, 9, 24, 5, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 659291030, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 9, 24, 10, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 659291037, 'comment_body': ""Added most of the validators required and also tested the images and the thumbnails,\r\nLet me know If I've missed anything specific here"", 'comment_created': datetime.datetime(2021, 6, 27, 9, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 659297485, 'comment_body': ""I'm not sure, I used [admin.py](https://github.com/oppia/oppia/blob/develop/core/controllers/admin.py#L449) as reference for this as well. This was added in https://github.com/oppia/oppia/pull/9473\r\n\r\nThe function [generate_dummy_story_nodes](https://github.com/oppia/oppia/blob/develop/core/controllers/admin.py#L430) is necessary for adding the exploration to the story.\r\n"", 'comment_created': datetime.datetime(2021, 6, 27, 10, 15, 57, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 659360897, 'comment_body': ""I just found that this isn't neccessary here, this condition is to update only the last node from the `story_node_dicts` and in our case there is only one node.\r\n\r\nShall I remove this whole function and do It without the function call or leave it as we might expect more nodes or explorations in this story."", 'comment_created': datetime.datetime(2021, 6, 27, 18, 44, 22, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 659361218, 'comment_body': 'Leaving this may be a issue for the code coverage.\r\n![image](https://user-images.githubusercontent.com/54740946/123555899-2037c180-d7a6-11eb-9bbf-fa31ae703ea5.png)\r\nhere the missing line 151 indicates the function call below `if`', 'comment_created': datetime.datetime(2021, 6, 27, 18, 47, 31, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 659477489, 'comment_body': ""@BenHenning, Do you want this URL to be registered only for DEV_MODE? If yes, then can we do the following [around line 885](https://github.com/oppia/oppia/blob/develop/main.py#L885)\r\n```\r\nif constants.DEV_MODE: \r\n    URLS.append(\r\n      get_redirect_route(\r\n        r'/initialize_android_test_data',\r\n        android_e2e_config.InitializeAndroidTestData))\r\n```"", 'comment_created': datetime.datetime(2021, 6, 28, 4, 54, 44, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 659949602, 'comment_body': ""@DubeySandeep Let me know if I'm wrong at some point\r\n\r\nUsing this in production mode shall give a 404 error right.\r\nI tried this and ran the tests I've written\r\nhttps://github.com/oppia/oppia/blob/b1889f7044a51f47b3a92e0ce25e88db5ee7f05d/core/controllers/android_e2e_config_test.py#L55\r\n\r\nIf it is production mode, this URL shouldn't exist and gives a 404 \r\nbut the test passes (showing the exception `Cannot load new structures data in production.`) which is a 500 error\r\n\r\nare we expecting something else here?\r\n\r\nIs this something like the handler is already populated when I started the dev server."", 'comment_created': datetime.datetime(2021, 6, 28, 16, 45, 39, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 660087019, 'comment_body': ""```suggestion\r\n                raise Exception('The topic exists but is not published.')\r\n```"", 'comment_created': datetime.datetime(2021, 6, 28, 20, 14, 57, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 660089418, 'comment_body': 'Prefer fitting this on one line (try to use up as much horizontal space you can before the 80 character line limit before line-wrapping.\r\n\r\nDitto elsewhere.', 'comment_created': datetime.datetime(2021, 6, 28, 20, 19, 4, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 660089679, 'comment_body': 'Prefer using ``assertEqual``--see other tests for reference.', 'comment_created': datetime.datetime(2021, 6, 28, 20, 19, 34, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 660089765, 'comment_body': 'What is this validating/what is the failure case?', 'comment_created': datetime.datetime(2021, 6, 28, 20, 19, 43, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 660090016, 'comment_body': ""A clearer name might be: ``test_initialize_topic_is_published``\r\n\r\nIn general, suggest following the following test name strategy:\r\n\r\n``test_action_with_condition_and_condition_has_outcome``\r\n\r\nDitto elsewhere.\r\n\r\nAlso, slightly pedantic but it's best if tests are as specific as possible to a single behavior. I actually think there are (at least) two behaviors being tested here: that the topic is created & published, and that it has the correct constituent structures. I suggest considering splitting this into two tests to keep them more focused."", 'comment_created': datetime.datetime(2021, 6, 28, 20, 20, 5, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 660091254, 'comment_body': 'Per the above test name comment above, you could name this:\r\n\r\n``test_initialize_twice_raises_already_published_exception``\r\n\r\nDitto below.', 'comment_created': datetime.datetime(2021, 6, 28, 20, 22, 14, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 660092257, 'comment_body': 'I think these are much more thorough--thanks!', 'comment_created': datetime.datetime(2021, 6, 28, 20, 24, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 660092624, 'comment_body': ""Why are these here? They don't seem to be used."", 'comment_created': datetime.datetime(2021, 6, 28, 20, 24, 41, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 660094952, 'comment_body': ""Hmm. @brianrodri / @vojtechjelinek is it not possible to conditionally register this route based on dev mode? Vojta, you mentioned an alternative way to gate this, but I'm wondering why we can't just conditionally add a dev-only list of routes based on whether dev-mode is enabled.\r\n\r\nI think the approach @DubeySandeep mentioned makes sense--if it works. I'm a bit confused why @FareesHussain is seeing a 500 error though--any ideas?\r\n\r\n/cc @seanlip as well in case you have thoughts or want to weigh in."", 'comment_created': datetime.datetime(2021, 6, 28, 20, 28, 45, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 660096981, 'comment_body': ""If this isn't needed, let's remove it."", 'comment_created': datetime.datetime(2021, 6, 28, 20, 32, 7, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 660151188, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2021, 6, 28, 22, 16, 1, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 660151201, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 28, 22, 16, 3, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 660151256, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 28, 22, 16, 11, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 660151283, 'comment_body': ""This will check if the thumbnails are uploaded or not.\r\nAs we need to upload these images for the particular structure separately\r\nI've added this to a separate test"", 'comment_created': datetime.datetime(2021, 6, 28, 22, 16, 15, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 660151299, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 28, 22, 16, 18, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 660151310, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 28, 22, 16, 20, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 660151316, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 28, 22, 16, 21, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 660151378, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 28, 22, 16, 32, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 660169324, 'comment_body': '@kevintab95 PTAL', 'comment_created': datetime.datetime(2021, 6, 28, 23, 3, 13, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 660798940, 'comment_body': ""Found that this issue is appearing since the ElasticSearch was added for the dev server.\r\n\r\nexp_services.load_demo() always needed more time to reload an exploration from local assets.\r\nBut when the ElasticSearch was added, it has set the default timeout of 10 seconds\r\nwhich leads to the ReadTimeout Error I've mentioned.\r\n\r\n\r\nAdded a comment on why do we need this change\r\nhttps://github.com/oppia/oppia/blob/89abd135bdcd0a93716de201223bf7b7cc9398d8/core/platform/search/elastic_search_services.py#L29-L31\r\n\r\n/cc @seanlip "", 'comment_created': datetime.datetime(2021, 6, 29, 16, 53, 22, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 661132785, 'comment_body': 'Hmm I actually lean more towards raising an unauthorized exception in this situation, something like:\r\n\r\n```python\r\nif not constants.DEV_MODE:\r\n    raise self.UnauthorizedException()\r\n```\r\n\r\nSeems cleaner/simpler than conditionally changing our handlers.', 'comment_created': datetime.datetime(2021, 6, 30, 5, 3, 56, tzinfo=datetime.timezone.utc), 'commenter': 'brianrodri', 'type': 'User'}, {'comment_id': 661136783, 'comment_body': 'fails --> each failing\r\n\r\nWhat is the default timeout, btw?', 'comment_created': datetime.datetime(2021, 6, 30, 5, 15, 31, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 661138074, 'comment_body': '@FareesHussain If you take a look at the impl of post_json, it seems like there\'s an ""if csrf_token"" clause. I wonder if you can just pass None in and update the docstring accordingly -- would that work?\r\n\r\nFor json vs post_json, it\'s probably fine to change post to post_json if needed, as long as the backend tests still pass after the change. We haven\'t hit this error before though so I\'m wondering whether there\'s something different about Farees\'s new code additions rather than there being an error in test_utils.', 'comment_created': datetime.datetime(2021, 6, 30, 5, 19, 16, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 661138894, 'comment_body': ""Re the 500 error, there's not enough info given. I'd need the stack trace of the 500 error in order to weigh in.\r\n\r\nI'm ok with @brianrodri's suggestion too but shouldn't we just raise a 404? Unauthorized (401) is for when the user doesn't have the right permissions, which seems incorrect in this case."", 'comment_created': datetime.datetime(2021, 6, 30, 5, 21, 35, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 661148990, 'comment_body': '10', 'comment_created': datetime.datetime(2021, 6, 30, 5, 48, 58, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 661161112, 'comment_body': '@seanlip there is one more issue here, \r\n```\r\nTraceback (most recent call last):\r\n  File ""/home/farees/opensource/oppia/core/controllers/android_e2e_config_test.py"", line 104, in test_check_if_topic_exists_and_not_published\r\n    \'/initialize_android_test_data\', payload={}, csrf_token=csrf_token)\r\n  File ""/home/farees/opensource/oppia/core/tests/test_utils.py"", line 2277, in post_json\r\n    return self._parse_json_response(json_response, expect_errors)\r\n  File ""/home/farees/opensource/oppia/core/tests/test_utils.py"", line 2218, in _parse_json_response\r\n    self.assertEqual(json_response.content_type, \'application/json\')\r\nAssertionError: \'text/html\' != u\'application/json\'\r\n\r\n```\r\n\r\n`_parse_json_response` gives the above error in the tests.\r\n\r\nSo I decided to add another parameter `return_json` which is true by default and will be false in this condition.\r\nIs this is a good approach?', 'comment_created': datetime.datetime(2021, 6, 30, 6, 17, 41, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 661164260, 'comment_body': ""I think sandeep's suggestion will give a 404 in the production server, while running the tests it looks like the route is registered before the running the test case and hence it doesn't give a 404 here.\r\n\r\nIs it possible to tests a route in the test server (https://oppiatestserver.appspot.com/) using the sandeep's suggestion.\r\n\r\nWDYT?"", 'comment_created': datetime.datetime(2021, 6, 30, 6, 24, 19, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 661164441, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 30, 6, 24, 41, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 661196337, 'comment_body': ""```suggestion\r\n            'To test all Android interactions'\r\n```\r\n\r\nPrefer capitalizing Android in strings & comments for consistency."", 'comment_created': datetime.datetime(2021, 6, 30, 7, 20, 33, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 661196941, 'comment_body': ""```suggestion\r\n    def test_initialize_in_production_raises_exception(self):\r\n```\r\n\r\n'Raise' is the actual action happening, so that's usually what we refer to in these cases."", 'comment_created': datetime.datetime(2021, 6, 30, 7, 21, 30, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 661197380, 'comment_body': '```suggestion\r\n    def test_initialize_structure_thumbnails_exist(self):\r\n```\r\n\r\nNit on grammar in the test name.', 'comment_created': datetime.datetime(2021, 6, 30, 7, 22, 6, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 661198749, 'comment_body': ""Here & elsewhere: this line wrapping seems weird to me. I'd expect to normally break at the ``(`` not the ``{``. I suggest updating these places for consistency with the rest of the codebase."", 'comment_created': datetime.datetime(2021, 6, 30, 7, 24, 5, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 661199525, 'comment_body': 'This sentence is run-on--can you revise it to be a bit clearer & easier to read?', 'comment_created': datetime.datetime(2021, 6, 30, 7, 25, 14, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 661201992, 'comment_body': ""That's a nice insight. Do we know what the underlying cause is for the ReadTimeoutError?\r\n\r\nThe timeout might be a reasonable adjustment given this, though it's not great to change a value like this for something that may only affect development or tests. That being said, I am concerned if ElasticSearch is introducing this much latency since that might indicate the possibility of performance regressions in production. @seanlip / @kevintab95 are either of you aware of this?"", 'comment_created': datetime.datetime(2021, 6, 30, 7, 28, 51, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 661203961, 'comment_body': ""Maybe add a comment explaining what this is validating as _not_ happening. For example, if the failure case is this throwing an exception, we can validate it's working since it's not throwing that.\r\n\r\nIf it doesn't raise an exception, how do we know the test is passing? Should we be checking the return value of the function?"", 'comment_created': datetime.datetime(2021, 6, 30, 7, 31, 41, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 661205129, 'comment_body': 'It seems useful to still verify that the story has the correct chapter in it--I suggest adding an assertion for that case.', 'comment_created': datetime.datetime(2021, 6, 30, 7, 33, 26, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 661237533, 'comment_body': 'Hm, I suspect this is just due to the handlers in question doing quite a lot of operations with e.g. saving many entities at once.\r\n\r\n@kevintab95 have we seen any server errors related to this?', 'comment_created': datetime.datetime(2021, 6, 30, 8, 19, 12, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 661237853, 'comment_body': ""Probably not. What's different about your new controller that causes this error to appear here and not previously (for all other controllers)?"", 'comment_created': datetime.datetime(2021, 6, 30, 8, 19, 42, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 661718688, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 30, 18, 31, 16, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 661718719, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 30, 18, 31, 20, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 661718741, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 30, 18, 31, 22, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 661718762, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 30, 18, 31, 24, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 661718819, 'comment_body': 'Ah. I forgot to add this, Thanks \r\n\r\nDone.', 'comment_created': datetime.datetime(2021, 6, 30, 18, 31, 29, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 661726860, 'comment_body': 'Done, I forgot using self._render_json() here', 'comment_created': datetime.datetime(2021, 6, 30, 18, 44, 17, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 661794870, 'comment_body': 'https://github.com/oppia/oppia/blob/2f100f8d7073a7bf431bb68db24c3aac0f89ba5e/core/tests/test_utils.py#L2170-L2172\r\nHere the expected_status_int is 200 by default for get_custom_response.\r\nIn case we use a different filename that doesn\'t exist. we get the following error.\r\n\r\n```\r\n======================================================================\r\nERROR: test_initialize_structure_thumbnails_exist (core.controllers.android_e2e_config_test.AndroidConfigTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File ""/home/farees/opensource/oppia/core/controllers/android_e2e_config_test.py"", line 93, in test_initialize_structure_thumbnails_exist\r\n    topic.id, \'image/svg+xml\')\r\n  File ""/home/farees/opensource/oppia/core/tests/test_utils.py"", line 2179, in get_custom_response\r\n    expected_status_int=expected_status_int)\r\n  File ""/home/farees/opensource/oppia/core/tests/test_utils.py"", line 2123, in _get_response\r\n    status=expected_status_int)\r\n  File ""/home/farees/opensource/oppia/../oppia_tools/webtest-2.0.35/webtest/app.py"", line 328, in get\r\n    expect_errors=expect_errors)\r\n  File ""/home/farees/opensource/oppia/../oppia_tools/webtest-2.0.35/webtest/app.py"", line 649, in do_request\r\n    self._check_status(status, res)\r\n  File ""/home/farees/opensource/oppia/../oppia_tools/webtest-2.0.35/webtest/app.py"", line 684, in _check_status\r\n    ""Bad response: %s (not %s)\\n%s"", res_status, status, res)\r\nAppError: Bad response: 404 Not Found (not 200)\r\n)]}\'\r\n{""status_code"": 404, ""error"": ""Could not find the page http://localhost/assetsdevhandler/topic/gxngXwGafG4L/assets/thumbnail/testsvg.svg.""}\r\n```\r\nhere I ran the test case by using the filename testsvg (instead of test_svg).\r\n\r\nShall I mention the expected_status paramter instead of adding a comment here?\r\nor create another testcase for the false testcase by using the expected_status_int as 404', 'comment_created': datetime.datetime(2021, 6, 30, 20, 38, 9, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 661941091, 'comment_body': 'Write a long docstring explaining clearly the full list of structures this entire method is constructing. Within the method, add some line comments to explain what each section does.', 'comment_created': datetime.datetime(2021, 7, 1, 3, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 661996243, 'comment_body': ""It seems a bit odd to me that this is being defined as a variable when it's never changing. Could we just render ``{}`` directly?"", 'comment_created': datetime.datetime(2021, 7, 1, 5, 55, 26, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 661997306, 'comment_body': ""Per comment in chat, please also add details on why this change is needed _now_ (particularly, the underlying cause of why it's slower now, not just the operation where this was noticed)."", 'comment_created': datetime.datetime(2021, 7, 1, 5, 56, 30, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 661999410, 'comment_body': ""Ah, I missed the expected_status_int. That's fairly conventional in Oppia web, too, so I suspect others may not get tripped up on it like I did. That being said, an extra comment to clarify doesn't hurt. I'll defer to whatever you think is reasonable for clarity in this situation.\r\n"", 'comment_created': datetime.datetime(2021, 7, 1, 6, 0, 36, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 662030246, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 1, 6, 59, 44, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 662030256, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 1, 6, 59, 45, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 662030343, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 1, 6, 59, 53, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 662030522, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 1, 7, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 662082585, 'comment_body': 'Explain more how the structures created by this function are related to each other. You can do so in prose, e.g. ""This method generates a topic which contains 3 stories each of which contains X explorations"" etc.', 'comment_created': datetime.datetime(2021, 7, 1, 8, 20, 8, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 662082905, 'comment_body': 'Basically, by reading your docstring, the reader should be able to reconstruct/understand fully what exactly is being generated and the relationships between them.', 'comment_created': datetime.datetime(2021, 7, 1, 8, 20, 31, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 662449574, 'comment_body': 'This comment is much better, but you have a duplicate ""takes"".', 'comment_created': datetime.datetime(2021, 7, 1, 16, 51, 23, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 662572089, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 1, 20, 27, 28, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 662572153, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 1, 20, 27, 34, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 662698354, 'comment_body': ""This multi-line alignment doesn't seem quite right--please look at other multi-line docstrings for reference on how to align this properly.\r\n\r\nAlso, suggest keeping the lines such that they fill up the whole 80 character line. I think you can also rearrange this to be a bit clearer by introducing the structure's presence & its purpose at the same time:\r\n\r\n```\r\nTopic: a topic with both a test story and subtopic.\r\n```\r\n\r\nFinally, this docstring is missing some important details:\r\n- How it is meant to be used (e.g. for Android tests)\r\n- That it can't be used outside dev mode (& what will happen if it is)\r\n- The baseline expectations around the topic (that it can't exist, and that this handler can't be called multiple times)\r\n- The values passed to the controller & what is outputted"", 'comment_created': datetime.datetime(2021, 7, 2, 2, 37, 59, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 662698989, 'comment_body': ""The tense here should be 'Generate' not 'Generating'. Ditto elsewhere in comments."", 'comment_created': datetime.datetime(2021, 7, 2, 2, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 662699373, 'comment_body': '```suggestion\r\n        # To validate the thumbnails for topics and stories can be fetched\r\n```\r\n\r\nBe sure to proofread comments & code before committing.', 'comment_created': datetime.datetime(2021, 7, 2, 2, 41, 51, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 662737355, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 2, 5, 1, 9, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 662737437, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 2, 5, 1, 26, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 662738116, 'comment_body': ""Done. \r\nI'm not sure regarding I/O here, we don't have any args for input but for the output, there aren't any handlers with output in the docstring"", 'comment_created': datetime.datetime(2021, 7, 2, 5, 3, 48, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 663220797, 'comment_body': 'Hm, I could not find any `ReadTimeoutError` errors.', 'comment_created': datetime.datetime(2021, 7, 2, 19, 53, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 663314963, 'comment_body': '> Is it possible to tests a route in the test server\r\n\r\nDepends on what you want to test! IF the rout is not register then it will throw 404*', 'comment_created': datetime.datetime(2021, 7, 3, 4, 24, 39, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663315071, 'comment_body': ""This will raise 500 error in production, we don't expect to raise 500 error intentionally*"", 'comment_created': datetime.datetime(2021, 7, 3, 4, 26, 29, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663315170, 'comment_body': 'Ditto*', 'comment_created': datetime.datetime(2021, 7, 3, 4, 27, 46, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663315351, 'comment_body': 'Why do we need `python_utils.convert_to_bytes` here?', 'comment_created': datetime.datetime(2021, 7, 3, 4, 29, 28, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663315521, 'comment_body': 'Incorrect docstring*', 'comment_created': datetime.datetime(2021, 7, 3, 4, 31, 26, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663315555, 'comment_body': 'Do we need `audit_models`?', 'comment_created': datetime.datetime(2021, 7, 3, 4, 31, 48, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663315617, 'comment_body': 'Why is this exploration_id defined as a module constant?', 'comment_created': datetime.datetime(2021, 7, 3, 4, 32, 31, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663328707, 'comment_body': 'Removed all.\r\nNot sure what it is but tried removing all of them and the tests pased.\r\n', 'comment_created': datetime.datetime(2021, 7, 3, 7, 1, 39, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 663328709, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 3, 7, 1, 40, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 663328723, 'comment_body': 'Removed, not needed', 'comment_created': datetime.datetime(2021, 7, 3, 7, 1, 43, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 663328727, 'comment_body': 'removed, removed added it to a test (`exp_id`)', 'comment_created': datetime.datetime(2021, 7, 3, 7, 1, 51, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 663328751, 'comment_body': ""I'm not sure what you meant here.\r\nWe need a 500 here right."", 'comment_created': datetime.datetime(2021, 7, 3, 7, 1, 56, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 663328757, 'comment_body': ""I've added your suggestion for the route.\r\nNow it is expected to give a 404 in production, yet I think this is necessary here considering if the route is registered in dev_mode.\r\n\r\nif you meant someother error can you please specify."", 'comment_created': datetime.datetime(2021, 7, 3, 7, 1, 58, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 663416271, 'comment_body': 'I still see this raise Exception here* \r\n\r\nI think this will raise a 500 HTTP error code response which is not expected, it would raise 404 instead, right?', 'comment_created': datetime.datetime(2021, 7, 3, 22, 28, 17, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663416664, 'comment_body': ""We should raise 400 HTTP* error here, 500 is a server error and I don't think it's a server issue here, right? Also, the message should be user-facing and the user is not aware of the what's topic/publication here and I believe the handler is expected to generate topic data, right? If yes, then the error message should be around `Unable to generate dummy data as it already exists and published` or something around that? (not sure!)"", 'comment_created': datetime.datetime(2021, 7, 3, 22, 32, 30, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663424351, 'comment_body': 'Ack. Done', 'comment_created': datetime.datetime(2021, 7, 4, 0, 8, 7, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 663424817, 'comment_body': ""I understand that calling this request should give a 404 error.\r\nbut for the 404 we need not mention it as an exception.\r\n\r\nI'm leaving this exception, considering that if the route is registered in the production server (as we've not tested it in the production server yet). For some security reasons as this request involves admin as the COMMITTER_ID.\r\n\r\nLet me know if this isn't required."", 'comment_created': datetime.datetime(2021, 7, 4, 0, 13, 46, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 664168683, 'comment_body': 'Alignment still seems off here. Separate paragraphs should be aligned with the ``""""""``. This doesn\'t follow the same rules as Raises or Attributes.\r\n\r\nI\'m also thinking that you could rearrange this to be a bit clearer, such as:\r\n\r\n```python\r\n""""""Generates structures for Android end-to-end tests.\r\n\r\nThis handler generates structures for Android end-to-end tests in order to evaluate the integration of network requests from the Android client to the backend. This handler should only be called once (or otherwise raises an exception), and can only be used in development mode (this handler is unavailable in production).\r\n\r\nNote that the handler outputs an empty JSON dict when the request is successful.\r\n\r\nThe specific structures that are generated:\r\n    Topic: ...\r\n    Story: ...\r\n```\r\n\r\n(may need wrapping, and the wording is just an example rewording of your existing content to mesh together a bit differently). I think this reads slightly better since it introduces the reader to what the handler does, explains what to expected from it, and then goes into more detail on the actual content generated.', 'comment_created': datetime.datetime(2021, 7, 6, 0, 43, 51, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 664215442, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 6, 3, 43, 44, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}]","[{'commit_sha': 'f2c98043d617c80600c488056025f42dd666915b', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ea7a08d35a1c03b94e8f57aee9ef569c5227ffd', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c364a7f12da86419f3029e22a7fbe608cafe927c', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9b8a160ccedf695c4f838fd774ae87175c70209', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '225534b8808e07cbbcd4059635cc00cc5cc790c5', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '972d24d16e8f1199bcea7110aad4033579ea87de', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd4918f638cd11d79f336fc58531465e433d2361', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93e3bced252942017f24a89321b235bc4a0d3f50', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d920ae7ee3e6743d271a01e8b80d8878efaf159', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f1577e489ce9eb7c31cf048caa7402ba2603d04', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d7cdf9dc991f1dbd627ead33b007b8cf54d70b5', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6de7fdf732ea59bd2f052945110b68e51bdcd9a', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7ef1d20e382224ab82f7a8f704304e1e67dd1ca', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1889f7044a51f47b3a92e0ce25e88db5ee7f05d', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ea4ff04e6ae411f58bed10d34d5f27b512bdb8c', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6020f3899f52c70c2bd982d90cb1ef8579650450', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '143ca227e8e80d8c744e0fae2ae1a9280b848b5c', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89abd135bdcd0a93716de201223bf7b7cc9398d8', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cf577d255cb2b8bceb98556eac2d469205a5cc2', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e075b9cad1211bdcd2770095e6b7bad761e23b5b', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79aaad47110318292041ad1aa5964054dc437394', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bca3660444ef052808d7c40a16603bc78c2224e', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2293886ead9de606bfccd7f6ef0a21206fbc662b', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6df807f6eda241119d95997c63082f47964eace', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c43c574ebf402d3d4785167d51bc6f942d8637dd', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '883face4afef5ab080ae59847f87b11181061e2f', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fb0d83f43b99843978797dbde17f4c0359942dc', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3b30deee9587ed9697a4a8ee55e0fcfd210279d', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc22e701c5c35c0b34c4ee7613c30ea1029389b6', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a17628f8e535fa98e4864aca19f6c246b074af03', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5195e72e924e39e7628d966781c43e52d5d2fdc', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '584df8c9435e5dfaf7a6f43f97374cb4f7984bd9', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}]",Farees Hussain,54740946,fareezzhussain@gmail.com,User,,37,,23,68
693616984,Fix #3315: Set up UIAutomator with Bazel,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->

Fixes #3315

This pr introduces UI Automator with a BaseTest generated using Bazel

### How to run UI Automator tests
**Prerequisites:**
1. To be able to build oppia using bazel 
    ```
    bazel build oppia
    ```
2. Add adb to the environment (platform-tools) i.e, add the following line to the .bashrc or the file path according to the Operating System.
    ```
    export PATH=/home/<username>/Android/Sdk/platform-tools:$PATH
    ``` 
3. java version 8 (Optional, only for uiautomatorviewer)
    ```
    java -version
    ```
    *output:*
    openjdk version ""1.8.0_292""
    OpenJDK Runtime Environment (build 1.8.0_292-8u292-b10-0ubuntu1~18.04-b10)
    OpenJDK 64-Bit Server VM (build 25.292-b10, mixed mode)

**Steps to run the tests:**
1. Build the BaseTest android_binary from the instrumentation module
    ```
    bazel build :oppia_test && bazel build //instrumentation:ExplorationPlayerTestBinary
    ```
2. install the oppia_test.apk and the ExplorationPlayerTestBinary.apk
    ```
    adb install -r bazel-bin/oppia_test.apk && adb install -r bazel-bin/instrumentation/ExplorationPlayerTest.apk
    ```
3. Run the instrumentation tests using am instrument command
    ```
    adb shell am instrument -w org.oppia.android.app.instrumentation/androidx.test.runner.AndroidJUnitRunner
    ```


https://user-images.githubusercontent.com/54740946/126880278-f6410f13-f26a-49e7-ab76-a3f036d03583.mp4

 

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3505,https://api.github.com/repos/oppia/oppia-android/pulls/3505,https://github.com/oppia/oppia-android/pull/3505,closed,367,9,17,44,23,175,0,1,[],2021-07-20 16:23:20+00:00,2021-08-18 07:37:24+00:00,2474044.0,"28 days, 15:14:04","[{'comment_id': 673469746, 'comment_body': ""I'm not sure what package_group I need to use here"", 'comment_created': datetime.datetime(2021, 7, 20, 20, 29, 4, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 673470529, 'comment_body': 'I decided to use the class name as the name for the android_binary so It might be easy when install the test app', 'comment_created': datetime.datetime(2021, 7, 20, 20, 30, 23, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 673472445, 'comment_body': ""This test suite is basically to check if the UI Automator is working fine or not \r\nand to check if the app is loading as expected.\r\n\r\nI'm navigating to the ProfileDashboard especially to verify if the we don't face similar errors we faced when using android_instrumentation_test target"", 'comment_created': datetime.datetime(2021, 7, 20, 20, 33, 33, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 673474486, 'comment_body': 'device.wait is somewhat similar to testCoroutines in the espresso \r\nTo avoid NullPointerExpection during the window transition', 'comment_created': datetime.datetime(2021, 7, 20, 20, 36, 55, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 673474869, 'comment_body': 'Null check, incase the app OnBoarding was already used once.', 'comment_created': datetime.datetime(2021, 7, 20, 20, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 673476328, 'comment_body': 'Not using other test cases as the only purpose was to be able to run the end to end tests.\r\nOther test cases may be used in future work.', 'comment_created': datetime.datetime(2021, 7, 20, 20, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 673671736, 'comment_body': ""@BenHenning I've updated these version when we were trying the previous implementation.\r\nShall I revert them?"", 'comment_created': datetime.datetime(2021, 7, 21, 5, 30, 56, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 673685735, 'comment_body': ""I choose 5 seconds as per the Ui Automator examples I've referred to,\r\nTried using 1 sec and 2 secs both fail, 3 sec seems to be working."", 'comment_created': datetime.datetime(2021, 7, 21, 6, 8, 22, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 674540651, 'comment_body': 'We ought to create another binary specifically for tests, set that visibility to oppia_testing_visibility & set is as testonly.', 'comment_created': datetime.datetime(2021, 7, 22, 6, 50, 19, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 674541565, 'comment_body': ""Test suites should be specific to the things they are testing. In this case, I'd expect something like ExplorationPlayerTest. Please split this up/update it as needed to be specific to the sets of tests it will contain, and then update the packages & Bazel structure accordingly.\r\n\r\nI think I also have feedback on how to change the Bazel structure, but it's hard for me to see the difference between which pieces a test-specific vs. generic. After this is addressed I should be able to give more specific feedback."", 'comment_created': datetime.datetime(2021, 7, 22, 6, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 674542598, 'comment_body': 'We could also use 30 seconds. Generally, we see 10, 30, and 60 second timeouts, or 5 minutes as the longest possible (since Bazel will fail the test at that point) depending on the context. 30 seems more fitting here since there are a lot of things we may need to wait for on the emulator or device side for the test to actually start.', 'comment_created': datetime.datetime(2021, 7, 22, 6, 54, 34, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 674542870, 'comment_body': 'I lean toward not upgrading versions unless specifically needed.', 'comment_created': datetime.datetime(2021, 7, 22, 6, 55, 8, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 675126148, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 22, 20, 5, 24, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 675126213, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 22, 20, 5, 33, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 675127485, 'comment_body': ""Done, I've also added a seperate timeout (TRANSITION_TIMEOUT) of 5 seconds to wait for the navigation between the activities, I used 5 seconds as minimum expecting that for the failure case the 30sec timeout would be very large for the activites."", 'comment_created': datetime.datetime(2021, 7, 22, 20, 7, 46, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 675127734, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 22, 20, 8, 12, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 675520801, 'comment_body': 'detailed kdoc ', 'comment_created': datetime.datetime(2021, 7, 23, 12, 18, 5, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 675524306, 'comment_body': 'import the required function only not the whole class `UiDevice.`', 'comment_created': datetime.datetime(2021, 7, 23, 12, 24, 29, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 675524890, 'comment_body': 'bit detail about depth', 'comment_created': datetime.datetime(2021, 7, 23, 12, 25, 30, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 675525992, 'comment_body': 'Add a screenshot of the test result.', 'comment_created': datetime.datetime(2021, 7, 23, 12, 27, 25, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676040872, 'comment_body': 'Added video', 'comment_created': datetime.datetime(2021, 7, 24, 20, 23, 27, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 676041201, 'comment_body': 'verified that we need to entire class for UiDevice.\r\n\r\nbut for Until we can only import Until.hasObject\r\n\r\nbut `Until.hasObject` seems more readable than `hasObject`\r\n\r\nshall I only use the function import here?', 'comment_created': datetime.datetime(2021, 7, 24, 20, 27, 58, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 676042574, 'comment_body': 'Tried removing it and it was working, I think it is not required\r\n', 'comment_created': datetime.datetime(2021, 7, 24, 20, 42, 20, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 676042860, 'comment_body': ""Yes, let's go with the hasObject, import whole Until.hasObject"", 'comment_created': datetime.datetime(2021, 7, 24, 20, 45, 34, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676043610, 'comment_body': 'removed it', 'comment_created': datetime.datetime(2021, 7, 24, 20, 53, 33, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 679688763, 'comment_body': '```suggestion\r\n# Used for end-to-end tests\r\n```', 'comment_created': datetime.datetime(2021, 7, 30, 6, 47, 29, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679688904, 'comment_body': 'Maybe instead: ``0.1-test`` as the version.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 47, 46, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679689346, 'comment_body': ""I'd expect this to go under an instrumentation.player package for player-related test flows."", 'comment_created': datetime.datetime(2021, 7, 30, 6, 48, 46, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679690340, 'comment_body': ""Shouldn't there also be an instrumentation_test target defined? I know that it's not working with bazel test currently, but we should still set it up correctly, I think."", 'comment_created': datetime.datetime(2021, 7, 30, 6, 50, 34, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679690884, 'comment_body': ""What purpose does this serve vs. directly depending on the needed dependencies? We usually prefer the latter since shared dependency groups can make large-scale migrations more difficult, and potentially overcomplicate the build graph if some tests get extra dependencies that they technically don't need."", 'comment_created': datetime.datetime(2021, 7, 30, 6, 51, 41, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679691000, 'comment_body': 'This can fit on one line, so it should be.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 51, 55, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679691339, 'comment_body': ""Should this be 29? That's what the test binary is set to."", 'comment_created': datetime.datetime(2021, 7, 30, 6, 52, 29, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679691583, 'comment_body': ""Should this be something like ``ExplorationPlayerTestBinary``, instead? I'd expect the instrumentation test target to be ExplorationPlayerTest since that's the one we pass to ``bazel test``"", 'comment_created': datetime.datetime(2021, 7, 30, 6, 53, 3, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679692019, 'comment_body': 'It seems that each test needs:\r\n- A test binary\r\n- A test library\r\n- An instrumentation test\r\n\r\nCould we fold these three into a single Bazel macro & helper .bzl file at the instrumentation/ level that we can use to more easily define end-to-end tests? That seems generally nice since we want to reduce the barrier to adding these tests as much as possible.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 53, 57, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679692632, 'comment_body': 'Kotlin functions are never UpperCamelCase.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 55, 18, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679693136, 'comment_body': ""Each of these steps could be actions that are part of a shareable test library (similar to how we set up protractor utilities for common operations in Oppia web's end-to-end tests).\r\n\r\nSimilarly in your helper below, some of those operations are more specific than the test actually cares about.\r\n\r\nI suggest taking potentially common operations and moving them to multiple specific action methods within a shareable utility. Consider the needs of your later PR's test, as well, when determining what should go in this utility."", 'comment_created': datetime.datetime(2021, 7, 30, 6, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679693573, 'comment_body': ""I suggest also adding another basic test that just verifies that the app starts up successfully. While not leveraging the full end-to-end capabilities that this test eventually will, it's a good baseline test to ensure the UiAutomator environment is working correctly without the additional complexity that this test will require to also be working."", 'comment_created': datetime.datetime(2021, 7, 30, 6, 57, 19, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679693781, 'comment_body': '```suggestion\r\n    val intent = context.packageManager.getLaunchIntentForPackage(OPPIA_PACKAGE)\r\n```\r\n\r\nThis can fit on one line.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 57, 46, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679693960, 'comment_body': 'Prefer using Truth assertions.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 58, 6, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679694211, 'comment_body': 'These can also fit on their own lines--pleas eupdate. Ditto for the click() above, too.', 'comment_created': datetime.datetime(2021, 7, 30, 6, 58, 41, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679704683, 'comment_body': '@BenHenning can you specify the test suite and the test case particularly,\n\nIn meeting we decided to add a exploration player test itself', 'comment_created': datetime.datetime(2021, 7, 30, 7, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 679725360, 'comment_body': ""Ah, I just mean verifying that the SplashActivity starts up. I don't think anymore more complicated than that is needed."", 'comment_created': datetime.datetime(2021, 7, 30, 7, 51, 33, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679770256, 'comment_body': 'function should be private', 'comment_created': datetime.datetime(2021, 7, 30, 9, 3, 52, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 680131498, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 6, 12, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 680131533, 'comment_body': ""Done, \r\nShouldn't we use `0.1-alpha-test` instead indicating a test version for alpha"", 'comment_created': datetime.datetime(2021, 7, 30, 18, 6, 15, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 680131557, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 6, 17, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 680131597, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 6, 23, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 680131618, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 6, 25, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 680131632, 'comment_body': ""According to the above comment if we avoid common deps for the test library we can't use kt_android_library in the wrapper.\r\nFor test binary and instrumentation test I've added them"", 'comment_created': datetime.datetime(2021, 7, 30, 18, 6, 27, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 680131666, 'comment_body': 'Added a object EndToEndTestHelper\r\ntaking EspressoTestMatchers as example', 'comment_created': datetime.datetime(2021, 7, 30, 18, 6, 31, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 680131684, 'comment_body': ""I wasn't able to test the splash screen, \r\nIt was too quick to capture in UiAutomatorViewer and I couldn't catch any views in it."", 'comment_created': datetime.datetime(2021, 7, 30, 18, 6, 34, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 680131712, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 6, 36, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 680131739, 'comment_body': ""Can't think of a way to use assertTrue here as there isn't any `isvisible` function for UiObject used assertEquals instead"", 'comment_created': datetime.datetime(2021, 7, 30, 18, 6, 39, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 680131759, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 6, 41, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 680131924, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 7, 1, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 680131950, 'comment_body': 'Removed it', 'comment_created': datetime.datetime(2021, 7, 30, 18, 7, 4, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 680131976, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 680160168, 'comment_body': ""This is just an assumption I've made based on other files codeowners.\r\nas the helper classes would be related to testing I've assigned to @anandwana001  and @BenHenning \r\nand I think the java directory need to be assigned to @BenHenning as it is related to Dagger configuration.\r\n/instrumentation/src/test/*.kt \r\n"", 'comment_created': datetime.datetime(2021, 7, 30, 19, 1, 6, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 680161636, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 19, 4, 7, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 680203605, 'comment_body': ""The other functions I'm planning to use are.\r\n```\r\n    fun scrollToText(text:String, isVertical: Boolean = true) {\r\n        if(isVertical) {\r\n            recyclerview.setAsVerticalList()\r\n        } else {\r\n            recyclerview.setAsHorizontalList()\r\n        }\r\n        recyclerview.scrollTextIntoView(text)\r\n    }\r\n```\r\n```\r\n    fun UiDevice.waitForRes(resourceName: String, timeout: Long = TRANSITION_TIMEOUT) {\r\n        this.wait(Until.hasObject(By.res(resourceName)), timeout)\r\n    }\r\n```\r\n\r\nThese will reduce many lines in the tests."", 'comment_created': datetime.datetime(2021, 7, 30, 20, 32, 18, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682401229, 'comment_body': 'These appear to be test suites, not configuration files.\r\n\r\nAlso, we should have a default for instrumentation/. Why not match against that instead of specific test files?', 'comment_created': datetime.datetime(2021, 8, 4, 8, 26, 35, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682423290, 'comment_body': '```suggestion\r\nInstrumentation macros to define up end-to-end tests.\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 8, 54, 55, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682423510, 'comment_body': '```suggestion\r\n    Creates library, binary, and instrumentation test for each test suite.\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 8, 55, 9, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682423695, 'comment_body': '```suggestion\r\n        name: str. The class name of the test suite.\r\n```\r\n\r\nBetter to be specific.', 'comment_created': datetime.datetime(2021, 8, 4, 8, 55, 20, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682424148, 'comment_body': '```suggestion\r\n        deps: list of str. The list of dependencies needed to build and run the test.\r\n```\r\n\r\n(From the API perspective, these are the deps needed for the actual test file).', 'comment_created': datetime.datetime(2021, 8, 4, 8, 55, 52, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682424299, 'comment_body': ""```suggestion\r\n        srcs: list of str. List of test files corresponding to this test suite.\r\n```\r\n\r\nWe don't require these to be relative, so better to keep it generic to the rule."", 'comment_created': datetime.datetime(2021, 8, 4, 8, 56, 5, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682425105, 'comment_body': '```suggestion\r\n        name = ""%s_lib"" % name,\r\n```\r\n\r\nPrefer string interpolation. Ditto elsewhere in this file.', 'comment_created': datetime.datetime(2021, 8, 4, 8, 57, 2, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682425459, 'comment_body': ""Do we need a TODO on this to fix this since it doesn't work today? It'd be good to capture that context in an issue, anyway. Could we use #3617?"", 'comment_created': datetime.datetime(2021, 8, 4, 8, 57, 28, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682426237, 'comment_body': 'This should be defined alongside the test suite.', 'comment_created': datetime.datetime(2021, 8, 4, 8, 58, 26, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682426393, 'comment_body': 'Prefer defining the test target here rather than exporting the test file.', 'comment_created': datetime.datetime(2021, 8, 4, 8, 58, 38, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682426745, 'comment_body': ""Can't this just be private? It's only referenced locally."", 'comment_created': datetime.datetime(2021, 8, 4, 8, 59, 2, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682427337, 'comment_body': 'You may need to fully qualify this since instrumentation tests can be defined in different packages.\r\n\r\nOr, perhaps better, consider pulling this up to be a manifest argument to the method so that the test can specify the manifest it wants to use.', 'comment_created': datetime.datetime(2021, 8, 4, 8, 59, 47, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682427602, 'comment_body': ""This should be under java/, not javatests/, and a reasonable subpackage like org.oppia.android.instrumentation.testing (we typically put test helpers in 'testing' packages)."", 'comment_created': datetime.datetime(2021, 8, 4, 9, 0, 7, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682428917, 'comment_body': 'Could we have a utility method for this, too? Maybe: ``device.waitForObject(resId)``? This would also let us keep the timeout in one place & consistent among all tests.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 1, 51, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682429052, 'comment_body': 'Please use Truth assertions.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 2, 1, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682429287, 'comment_body': 'This might also be worth abstracting to a helper since it lets us isolate OPPIA_PACKAGE.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 2, 19, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682429938, 'comment_body': ""Should we assert that it's present? Doing nothing if it's null seems like the wrong thing to do; we should try to fail early & with context, instead."", 'comment_created': datetime.datetime(2021, 8, 4, 9, 3, 15, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682430127, 'comment_body': 'Maybe introduce: ``device.clickOn(resId)``? Below, we may need a similar one for specific values, e.g.: ``device.clickOnText(text)``.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 3, 30, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682430545, 'comment_body': 'Could we use the resource ID instead of the class name? This seems a bit more fragile if we ever change the container in the future. Ditto for other class name-based selections.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 4, 1, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682430989, 'comment_body': 'Nit: ``recyclerView``', 'comment_created': datetime.datetime(2021, 8, 4, 9, 4, 37, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682431570, 'comment_body': 'Potentially abstractable as something like ``device.scrollRecyclerViewTextIntoView(text)``', 'comment_created': datetime.datetime(2021, 8, 4, 9, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682432139, 'comment_body': ""Do we need the double class name bit or can we find 'Admin' from just the recycler view container?"", 'comment_created': datetime.datetime(2021, 8, 4, 9, 6, 17, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682432903, 'comment_body': 'Out of curiosity, why do we need this?', 'comment_created': datetime.datetime(2021, 8, 4, 9, 7, 17, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682433952, 'comment_body': ""Actually, we should try to test this. Generally, it's important to ensure test utilities work since failures in them can introduce incorrect test passes/failures. That being said, it may be difficult to test this since it's very UiAutomator based. Is there any way to test UiAutomator in a local context like Robolectric?"", 'comment_created': datetime.datetime(2021, 8, 4, 9, 8, 35, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682434248, 'comment_body': 'Can this fit on one line?', 'comment_created': datetime.datetime(2021, 8, 4, 9, 8, 58, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682434415, 'comment_body': ""Nit: 'this' not needed (it's implied). Ditto elsewhere."", 'comment_created': datetime.datetime(2021, 8, 4, 9, 9, 9, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682434584, 'comment_body': 'Prefer static import, and prefer using Truth assertions over JUnit.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 9, 22, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682436482, 'comment_body': ""'alpha' is actually in itself a placeholder that will eventually be removed/changed. 'test' is a longer-term suffix since we always want to indicate this binary is test-only.\r\n\r\nWe'll eventually have release & beta flavors of the app, not just alpha."", 'comment_created': datetime.datetime(2021, 8, 4, 9, 11, 55, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682437750, 'comment_body': ""Got it. In that case, let's proceed with your current test & the later changes you're planning. Thanks for trying."", 'comment_created': datetime.datetime(2021, 8, 4, 9, 13, 37, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682438108, 'comment_body': 'That plan sounds good. I left a bunch of other comments suggesting other helpers to further simplify the tests & establish the patterns for more helpers in the future.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 14, 7, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682438393, 'comment_body': '```suggestion\r\n  /** Starts Oppia from the home screen. */\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 9, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682439871, 'comment_body': ""We can actually create our own extension for Truth (which is one of the major benefits of it over JUnit), but rather than doing that you can just do:\r\n\r\n``assertThat(object).isNotNull()`` in place of the current line.\r\n\r\nThere are other benefits to Truth: it is easier to read since it uses a fluent pattern, and its error messages are better reported than JUnit's. We should still use it even if there aren't specific functions for these cases (Truth covers the same basic null/not-null/true/false cases JUnit's assertions do)."", 'comment_created': datetime.datetime(2021, 8, 4, 9, 16, 31, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682487363, 'comment_body': ""Left a comment below on this. I don't have a strong opinion about how this should be distributed for ownership other than a slight preference toward simplifying it."", 'comment_created': datetime.datetime(2021, 8, 4, 10, 23, 33, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682650237, 'comment_body': 'Ah, That was quite confusing I thought you mentioned using AssertTure here.', 'comment_created': datetime.datetime(2021, 8, 4, 14, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682734810, 'comment_body': ""I can't find anything to test UiAutomator.\r\nIt is way different from Espresso and Robolectric, I can't figuire out a way to do it either."", 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 15, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682734829, 'comment_body': 'This was a previous implementation.\r\nRemoved now.', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 16, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682734849, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 18, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682734863, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 19, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682734881, 'comment_body': ""I found this approach when I was writing the proposal.\r\nI've come up with an easier approach and the className one is not required here."", 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 20, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682734892, 'comment_body': 'removed it', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 21, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682734910, 'comment_body': ""I think clickOnRes or clickOnText is not neccesary.\r\nplease check the other implementations I've used which are one line and short."", 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 22, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682734926, 'comment_body': ""After completing the first test case the app doesn't start from the profile chooser activity.\r\nSo I came up with this implementation so that we can run multiple tests. \r\n"", 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 23, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682734942, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 25, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682734953, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 26, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682734964, 'comment_body': ""I'm using `device.waitForRes` here, \r\nusing object might create confusion between resId and the UiObject."", 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 27, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682734991, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 29, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682734998, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 30, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682735009, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 31, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682735023, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 32, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682735055, 'comment_body': 'Done.\r\nCreated a seperate package for `uiautomator`', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 34, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682735068, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 35, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682735103, 'comment_body': 'I think removing this would be better as this is not supported yet.\r\n', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 38, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682735122, 'comment_body': ""I didn't understand it.\r\nDoes that mean using //instrumentation/src/javatest/AndroidManifest.xml"", 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 39, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682735143, 'comment_body': 'removed.', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 40, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682735163, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 42, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682735177, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 43, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682735204, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 45, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682735223, 'comment_body': '\r\nDone', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 46, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682735241, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 47, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682735262, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 49, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682735295, 'comment_body': 'Done, Do we need separate bazel package for each directory now\r\nIn this case the `player`', 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 51, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682735344, 'comment_body': ""Updated the comment.\r\nNot sure what you meant here.\r\n\r\nAlso I'm splitting the codeowners into java and javatest \r\nhttps://github.com/oppia/oppia-android/pull/3529/files#r682726597"", 'comment_created': datetime.datetime(2021, 8, 4, 15, 39, 55, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682811720, 'comment_body': 'Added it here considering it would be easier for the 2.3 pr\r\nwhich might avoid using the explort_files for src/java/AndroidManifest.xml', 'comment_created': datetime.datetime(2021, 8, 4, 17, 19, 4, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 683269755, 'comment_body': ""Seems reasonable.\r\n\r\nDoes this mean that we can remove the exports_files declaration? That's not ideal."", 'comment_created': datetime.datetime(2021, 8, 5, 9, 4, 48, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683270742, 'comment_body': ""I'd rather make sure that are setting up the skeleton structure correctly rather than leaving out a key part. The Bazel structure should work fine, we just can't run the test yet (which is also why we need to disable the tests for CI, but we would need to do that anyway since E2E tests can't run in GitHub Actions)."", 'comment_created': datetime.datetime(2021, 8, 5, 9, 6, 7, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683271565, 'comment_body': ""This target should go into android/instrumentation/player/BUILD.bazel since that's where the test suite lives."", 'comment_created': datetime.datetime(2021, 8, 5, 9, 7, 13, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683272876, 'comment_body': ""Ah, we need to make sure each test is starting from a completely deterministic state otherwise it's very likely the test suites will be flaky (particularly since JUnit may randomize the order the tests are run as a mitigation factor for detecting non-determinism).\r\n\r\nTo that end, we should be resetting the app state (maybe by closing it & clearing app data during tear-down?) to ensure each state starts in exactly the same place."", 'comment_created': datetime.datetime(2021, 8, 5, 9, 8, 52, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683273299, 'comment_body': 'The latest change seem good--thanks!', 'comment_created': datetime.datetime(2021, 8, 5, 9, 9, 19, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683273908, 'comment_body': 'Probably not neeed--see my later comment.', 'comment_created': datetime.datetime(2021, 8, 5, 9, 10, 1, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683274918, 'comment_body': ""I think I may have not communicated my earlier comment very clearly. I actually meant that this utility can go under instrumentation/src/java/org/oppia/android/instrumentation/testing, not the testing/ module. While this module is a fine place for this, it's actually not preferred since the whole reason the testing module exists is as a workaround to Gradle not properly supporting test-only dependencies. Since the instrumentation/ package is entirely within Bazel with no Gradle support, we can just do the final solution right away."", 'comment_created': datetime.datetime(2021, 8, 5, 9, 11, 22, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683275273, 'comment_body': 'These names should include their corresponding units.', 'comment_created': datetime.datetime(2021, 8, 5, 9, 11, 51, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683277377, 'comment_body': ""Yes, I think that'd be helpful (added another new comment to this effect). Closing this in favor of that comment thread."", 'comment_created': datetime.datetime(2021, 8, 5, 9, 14, 40, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683278066, 'comment_body': 'Why not use a specific version, instead?', 'comment_created': datetime.datetime(2021, 8, 5, 9, 15, 32, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683278590, 'comment_body': 'Yep--the latest code looks correct.', 'comment_created': datetime.datetime(2021, 8, 5, 9, 16, 14, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683278908, 'comment_body': 'Replaced by a newer comment.', 'comment_created': datetime.datetime(2021, 8, 5, 9, 16, 39, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683279173, 'comment_body': 'It still seems present in the latest code changes, or am I missing something?', 'comment_created': datetime.datetime(2021, 8, 5, 9, 17, 1, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683280262, 'comment_body': 'Got it--thanks for checking. I assumed that would be the case; maybe there will be a way to do it in the future.', 'comment_created': datetime.datetime(2021, 8, 5, 9, 18, 30, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683289088, 'comment_body': 'Does that mean something like \r\n`LAUNCH_TIMEOUT_30_SECONDS`\r\n`TRANSITION_TIMEOUT_5_SECONDS` ??', 'comment_created': datetime.datetime(2021, 8, 5, 9, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 683291736, 'comment_body': ""I didn't get it can you provide some details regarding this.\r\n\r\nAs per the ATS_TAG I've taken the [BasicSample app](https://github.com/android/testing-samples/blob/main/WORKSPACE#L10) as an example "", 'comment_created': datetime.datetime(2021, 8, 5, 9, 33, 26, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 683480227, 'comment_body': 'What I meant here is when we add a new AndroidManifest.xml in the in instrumenation/src/java\r\nwe would have to add export_files it when we use the oppia_test in the root BUILD.bazel', 'comment_created': datetime.datetime(2021, 8, 5, 13, 59, 40, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 684285198, 'comment_body': '@FareesHussain The approach looks correct to me!\r\nJust a nit suggestion! \r\nInstead of `file` in the lambda can we use it as `filePath` or `targetPath` for a better context to what it refers to?', 'comment_created': datetime.datetime(2021, 8, 6, 14, 35, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Sparsh1212', 'type': 'User'}, {'comment_id': 684288909, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 6, 14, 40, 56, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 685081761, 'comment_body': '```suggestion\r\n  /** Filtering out the targets to be ignored. */\r\n```', 'comment_created': datetime.datetime(2021, 8, 9, 10, 33, 33, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 685542522, 'comment_body': ""@anandwana001 I don't think that suggestion is correct. We should be using single-line (``//``) or block comments (``/* */``) in this context, not KDocs (``/** */``). KDocs are only used for documenting members, not within blocks of code."", 'comment_created': datetime.datetime(2021, 8, 9, 21, 45, 1, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685542836, 'comment_body': ""Suggest alternate name: ``nonInstrumentationAffectedTestTargets`` (better to be specific on what 'filtered' means)."", 'comment_created': datetime.datetime(2021, 8, 9, 21, 45, 43, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685543152, 'comment_body': 'Please add a test to cover this behavioral change (to make sure that instrumentation test targets are correctly ignored).', 'comment_created': datetime.datetime(2021, 8, 9, 21, 46, 25, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685545876, 'comment_body': ""Ah I see. Doesn't the file just need to be relative to wherever the test is declared? I.e. if we move this manifest to be next to the ExplorationPlayerTest.kt file, will it work?"", 'comment_created': datetime.datetime(2021, 8, 9, 21, 51, 32, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685546301, 'comment_body': ""Not quite. The number shouldn't be included since that's an implementation detail. Instead: ``LAUNCH_TIMEOUT_SECONDS`` and ``TRANSITION_TIMEOUT_SECONDS`` are more of what I was looking for."", 'comment_created': datetime.datetime(2021, 8, 9, 21, 52, 22, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685546737, 'comment_body': ""This isn't fully resolved yet--the helper was moved under player/, but not under java/.../, it's still under javatest/..."", 'comment_created': datetime.datetime(2021, 8, 9, 21, 53, 12, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685762231, 'comment_body': ""Currently this binary uses the manifest from app module I've added the binary under instrumentation such that when we create the test application we can directly access the manifest from the instrumentation/src/java/AndroidManifest.xml\r\n\r\nIncase we use the oppia_test binary in the root we would have to add export_files for the above manifest"", 'comment_created': datetime.datetime(2021, 8, 10, 7, 28, 13, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 685967748, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 10, 12, 26, 58, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 686043954, 'comment_body': ""I don't think we need a todo here.\r\nMaybe a comment showing that it doesn't work yet.\r\n\r\nMaybe something like\r\n`// #3617: Not supported yet.`"", 'comment_created': datetime.datetime(2021, 8, 10, 13, 55, 39, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 686045183, 'comment_body': 'Done. and removed it from the testing module too.', 'comment_created': datetime.datetime(2021, 8, 10, 13, 56, 55, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 686046949, 'comment_body': ""I've added a test regarding this I'm not sure why it fails.\r\nIt works in CI as expected.\r\n\r\naren't we using the ComputedAffectedTests class/script in the test?"", 'comment_created': datetime.datetime(2021, 8, 10, 13, 58, 44, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 686378394, 'comment_body': '```suggestion\r\n# End-to-end test utilities and modules.\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 23, 5, 59, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686379686, 'comment_body': ""If there's remaining work, a TODO should track it (especially since that hooks into our new static analysis automation around making sure TODO issues are kept open until the work is fully resolved)."", 'comment_created': datetime.datetime(2021, 8, 10, 23, 9, 21, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686381060, 'comment_body': 'Seems resolved now.', 'comment_created': datetime.datetime(2021, 8, 10, 23, 13, 5, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686381315, 'comment_body': ""Yes, it's using the same routine. This may be due to some misconfiguration in the test.\r\n\r\nEdit: I think this failing test is catching a real scenario: the ComputeAffectedTests script will run *all* tests when on the develop branch (your test never changes the branch). To remediate, I suggest:\r\n1. Introducing a new test that changes to a feature branch but otherwise creates the same setup (it should pass)\r\n2. Fix the ``develop`` test case by adding the missing logic to the script since it would otherwise fail after merging the PR\r\n\r\nI also highly suggest running these tests locally & not waiting for CI as that will significantly slow you down."", 'comment_created': datetime.datetime(2021, 8, 10, 23, 13, 52, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686383428, 'comment_body': 'Still not completed, I think.', 'comment_created': datetime.datetime(2021, 8, 10, 23, 19, 31, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686476814, 'comment_body': ""I've removed the `let` block here.\r\nalso mailed you regarding the issues I'm facing regarding clearing app data\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"", 'comment_created': datetime.datetime(2021, 8, 11, 4, 11, 18, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 686492391, 'comment_body': 'Done, Thanks', 'comment_created': datetime.datetime(2021, 8, 11, 5, 0, 47, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 686492480, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 11, 5, 1, 1, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 686493235, 'comment_body': 'Done\r\n', 'comment_created': datetime.datetime(2021, 8, 11, 5, 3, 23, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 687942135, 'comment_body': 'As per my understanding, the kdoc lint chek should fail as it required kdoc for all non-private fields and the doc should be under `/** */` not `//`. \r\n\r\nLooks like test is passing so I misunderstand that thing. ', 'comment_created': datetime.datetime(2021, 8, 12, 17, 22, 50, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 688161259, 'comment_body': 'Suggest switching these two for parity with the other test (that is, we should have targets other than instrumentation on this branch).', 'comment_created': datetime.datetime(2021, 8, 13, 0, 7, 47, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688236041, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 13, 4, 32, 38, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 688352072, 'comment_body': 'Also updated to only ignore the player directory', 'comment_created': datetime.datetime(2021, 8, 13, 8, 48, 57, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 688828743, 'comment_body': 'Can you merge this PR into #3529 to bring it up-to-date? I want to make sure that the new instrumentation tests correctly show up in CI with this filter adjustment.', 'comment_created': datetime.datetime(2021, 8, 13, 23, 44, 43, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688982887, 'comment_body': 'https://github.com/oppia/oppia-android/pull/3529/checks?check_run_id=3330331656\r\nhttps://github.com/oppia/oppia-android/pull/3529/checks?check_run_id=3330331670\r\nhttps://github.com/oppia/oppia-android/pull/3529/checks?check_run_id=3330331689\r\n\r\nCI checks for targets that were outside the player directory, from https://github.com/oppia/oppia-android/pull/3529', 'comment_created': datetime.datetime(2021, 8, 14, 19, 25, 24, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 690005864, 'comment_body': ""As discussed over chat, can you please file an issue tracking this specific problem (resetting to a proper state between tests) & open a draft PR with your current WIP solution? I'm fine with this PR getting merged so long as we continue the  necessary work in a follow-up PR."", 'comment_created': datetime.datetime(2021, 8, 17, 3, 25, 40, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 690006238, 'comment_body': ""Not sure where the failure is coming from--we'll need to fix that in the next PR. However, the fact that they're running looks good--thanks for the links!"", 'comment_created': datetime.datetime(2021, 8, 17, 3, 27, 6, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 690009141, 'comment_body': ""It was actually one import issue, I've fixed it"", 'comment_created': datetime.datetime(2021, 8, 17, 3, 36, 43, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 690011250, 'comment_body': 'https://github.com/oppia/oppia-android/issues/3693\r\n\r\nCreated an issue now, will create a pr once I address the changes in other prs', 'comment_created': datetime.datetime(2021, 8, 17, 3, 43, 47, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 690442773, 'comment_body': ""https://github.com/oppia/oppia-android/pull/3608/commits/08ffe7596f93ba9d4df801728622447f2ec85a9e\r\nAdded this to 2.2 pr so that it wouldn't block 2.3 pr"", 'comment_created': datetime.datetime(2021, 8, 17, 14, 44, 54, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 690980109, 'comment_body': 'Thanks--considering this resolved then.', 'comment_created': datetime.datetime(2021, 8, 18, 7, 35, 49, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}]","[{'commit_sha': 'b720222a627268675521a17f9868287965686b67', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f90cbfca446be4abd0f11e9caa6c0eb7d9188e9d', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '930abe00fc1082fe389ad923bec79ea20defc922', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb6f5bbe66b12cc3d26019f8868afcbdbff10c57', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46a1b565b63a04b50ea30d7478aefab63fb0d33f', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44f4003adc5c226cf2a8012b50d9b06b9c9d385b', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72620a21a67fb3612ceb9f24779fb665c4fb69aa', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a384c33148aaace701d4fc4a820047e8b1a232e', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a641d735c9187b6ff466172c777d40e6a5775d7', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c58b6f6849563229604e9b29c8e5ae4920de2ffc', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09c419e1950c841d0e6d6cba960757f2dedf5d22', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '004e3a143b18f82121a83b7acf80a5d8de57cf1e', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a1221dd07b003a9ce84d70c2c9d048ce187ee13', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0aec4a5ce52fec6bccc03e8b643920e511d76216', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e0996648e7cc41e4f81d8c65d67939b7cd37cad', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44868828af9e716441dfad41c8ddcc87de6d68e3', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f64d32c357d290e50e8ddc58526b89bb3b58e0a3', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc66ba2f99fef214a6fa3de62cae047db7a6541a', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c233b71ca037cec364d94427969e5e1bbc63b783', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20449796de94230a57022d56f64080e44c1dcb40', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ac1ac59f812031b43f9e496e57d6d296da3a194', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bb5348570399a672e12b1e2962e8fe668109446', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5a6128c2bb67048877f829a3f6504731030ff54', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '425ebfaf3a43ff053e893374259c05865ad137fa', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '067537f703764ed5b3dd0317d80bcfc5e61d880a', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9233c6c556ea7e4c3c9bf339bc4c3c2d6e2eb0d', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37b10e2ce4c7ef0844fe130396c50f31da81bbe5', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c1e79f476a0f2a751387f2690c0df57ac5daf5b', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44363c1c4e7425499b5a3ab5adb2763618cfb6b1', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e95d29fb40426eda05d0278b3efe0b1e90d2349e', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c608f7c2ed356ee2bc4e455e176d4a9fed9ab7a4', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66f6b5125d81bb05e0adaff22525ee14e878dfa0', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6514ba9cc8c98612ac02f98f4d87cdb9bc5b9453', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e81706bc8d42b61589e6ef70f163dcc134601ced', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4266e4dd5c421b4c2c4a9fb5e50d0f3fb10d274', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f2836c6ba9d9ee0688fa3e5d2663c53a0db139f', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '366024393dd73ea0a8e0b235150b722e77d9d0b7', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4aa4d44816341d1b7e8bf3f0391821ba234f117', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41ea23f55f550929339b7530460bbaefead09da3', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b15451b505e9cace4a493956b7d0f09c4b3e6a95', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73c650e4aede19b4db064a9cf76756febeb72a64', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d509144b37e7bfeac3676099005d6e92b6fae90', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2db95763448d1222b36bf362ef43ed8c133ec1c', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ffd04ef8c4556537e5a7c523775cb7c632761e4', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}]",Farees Hussain,54740946,fareezzhussain@gmail.com,User,,37,,23,68
699097962,Fix #3607: ExplorationPlayer End to End tests,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Fixes #3607

This pr introduces e2e tests in ExplorationPlayerTests using Ui Automator

### How to run UI Automator tests
**Prerequisites:**
1. To be able to build oppia using bazel 
    ```
    bazel build oppia
    ```
2. Add adb to the environment (platform-tools) i.e, add the following line to the .bashrc or the file path according to the Operating System.
    ```
    export PATH=/home/<username>/Android/Sdk/platform-tools:$PATH
    ``` 
3. download and install [test-services-1.1.0.apk](https://mvnrepository.com/artifact/androidx.test.services/test-services/1.1.0) and [orchestrator-1.1.0](https://mvnrepository.com/artifact/androidx.test/orchestrator/1.1.0) in the emulator. (run command in the directory where both apk are downloaded)
    ```
    adb install -r test-services-1.1.0.apk && adb install -r orchestrator-1.1.0.apk
    ```
4. java version 8 (Optional, only for uiautomatorviewer)
    ```
    java -version
    ```
    *output:*
    openjdk version ""1.8.0_292""
    OpenJDK Runtime Environment (build 1.8.0_292-8u292-b10-0ubuntu1~18.04-b10)
    OpenJDK 64-Bit Server VM (build 25.292-b10, mixed mode)

**Steps to run the tests:**
1. Build the BaseTest android_binary from the instrumentation module
    ```
    bazel build :oppia_test && bazel build //instrumentation:ExplorationPlayerTest
    ```
2. install the oppia_test.apk and the ExplorationPlayerTest.apk
    ```
    adb install -r bazel-bin/oppia_test.apk && adb install -r bazel-bin/instrumentation/ExplorationPlayerTest.apk
    ```
3. Run the instrumentation tests using am instrument command
```
adb shell 'CLASSPATH=$(pm path androidx.test.services) app_process / \
androidx.test.services.shellexecutor.ShellMain am instrument -w -e clearPackageData true \
-e targetInstrumentation org.oppia.android.app.instrumentation/androidx.test.runner.AndroidJUnitRunner \
androidx.test.orchestrator/.AndroidTestOrchestrator'
```

![image](https://user-images.githubusercontent.com/54740946/129463204-d90ece9e-fc5d-4064-a0ac-c9d6f3606b15.png)


https://user-images.githubusercontent.com/54740946/129954451-a6ae277f-10cd-4d39-949a-a645ea46b9f1.mp4

Ran using single testcase for both with argument and without argument

https://user-images.githubusercontent.com/54740946/130116663-76873c41-248f-4954-a82f-0586c7b7f80b.mp4


Ran using duplicate testcase for both without argument and with argument

https://user-images.githubusercontent.com/54740946/130140822-60f98258-e215-4f71-968d-455322044077.mp4




Note: There are few flacky tests which is obvious for E2E tests but each test passes on individual run. 

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3608,https://api.github.com/repos/oppia/oppia-android/pulls/3608,https://github.com/oppia/oppia-android/pull/3608,closed,171,13,2,72,17,57,0,2,[],2021-07-29 00:31:52+00:00,2021-08-21 09:01:43+00:00,2017791.0,"23 days, 8:29:51","[{'comment_id': 679708084, 'comment_body': ""Where did these tests come from? Did you reference other test suites?\r\n\r\nI actually think there are too many tests here. Per the testing triangle end-to-end tests are more expensive and slower to run, and thus there should be fewer of them. The advantage of these tests is they can very complex, whole-user journeys that unit tests are unable to verify. We should focus the tests we add to this suite on verifying whole user journeys rather than very specific details like whether a button is enabled.\r\n\r\nFor example, playing through an entire exploration would be a single test since it encapsulates a full user journey.\r\n\r\nNote also that the standard 'arrange-act-assert' flow doesn't always fit for these kinds of tests. They often imply correctness simply by passing since that means the full flow worked correctly."", 'comment_created': datetime.datetime(2021, 7, 30, 7, 21, 1, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 680918888, 'comment_body': 'Can we go with the other approach where we can make `EndToEndTestHelper` a class and put the function in companion object making them static to access. ', 'comment_created': datetime.datetime(2021, 8, 2, 12, 13, 8, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 689110284, 'comment_body': ""@BenHenning Shall I remove this test case as this requires internet and we will be using localhost for images once 2.3 is merged.\r\n\r\n> We should be using the test lesson that you introduced into Oppia backend, but we can't since the download piece isn't finished. Given that, I think it's reasonable to file a TODO issue for enabling the image region selection test, and disabling it for now (we should still implement it, but it can be reenabled and fixed once we can download the correct content to test).\r\n\r\nThis is what you mentioned in the mail."", 'comment_created': datetime.datetime(2021, 8, 15, 16, 3, 27, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 689117327, 'comment_body': 'can we also remove the test case used to check the exploration title, as it was only used to verify if the e2e tests are running in the 2.1 pr', 'comment_created': datetime.datetime(2021, 8, 15, 17, 7, 17, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 689433509, 'comment_body': 'Deferring to Ben for adding TODO as images will load from the local host after merging the last PR of this project. ', 'comment_created': datetime.datetime(2021, 8, 16, 10, 53, 43, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 690009996, 'comment_body': ""Could we instead ``@Ignore`` this & add a TODO pointing to the issue tracking properly hooking up to the backend once downloads are supported? (If there isn't such an issue, please file one).\r\n\r\nThat way we don't lose the actual context of the test in the meantime."", 'comment_created': datetime.datetime(2021, 8, 17, 3, 39, 58, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 690010217, 'comment_body': 'Why 2? Seems like a magic number.', 'comment_created': datetime.datetime(2021, 8, 17, 3, 40, 36, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 690010999, 'comment_body': ""I think this is hiding a bit too much from the test. Could you instead introduce multiple helper methods (similar to StateFragmentLocalTest) for each part of the flow, and then expand the actual completion bits in the test so that context isn't lost?"", 'comment_created': datetime.datetime(2021, 8, 17, 3, 42, 55, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 690014666, 'comment_body': 'removed', 'comment_created': datetime.datetime(2021, 8, 17, 3, 55, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 690019903, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 17, 4, 12, 18, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 690019998, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 17, 4, 12, 42, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 690021651, 'comment_body': '![image](https://user-images.githubusercontent.com/54740946/129662757-7f7eda23-07b9-4247-98a5-4fdd125f62fc.png)\r\nthe `chapter_completed_tick` might be multiple if there are more than one chapters.\r\n\r\nso I took the chapter title which is index 0 in the view group, took the parent reference to the the title, and then get its child at index 2 which makes it accurate', 'comment_created': datetime.datetime(2021, 8, 17, 4, 18, 20, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 690439694, 'comment_body': 'https://github.com/oppia/oppia-android/issues/3697', 'comment_created': datetime.datetime(2021, 8, 17, 14, 41, 38, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 691814694, 'comment_body': '```suggestion\r\n  @Ignore(""Need backend connection support to test the ImageRegionSelectionInteraction"")\r\n```\r\n\r\nTo be a bit more specific.', 'comment_created': datetime.datetime(2021, 8, 19, 6, 14, 54, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691814887, 'comment_body': 'Thanks!', 'comment_created': datetime.datetime(2021, 8, 19, 6, 15, 21, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691815080, 'comment_body': 'Suggest: ``playContinueInteraction`` (since this is a valid interaction state).', 'comment_created': datetime.datetime(2021, 8, 19, 6, 15, 48, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691815365, 'comment_body': ""Here & below: I actually don't think these KDocs are adding anything--I suggest removing them since they aren't required for private members, anyway, and these helpers are reasonably self-documenting in their naming."", 'comment_created': datetime.datetime(2021, 8, 19, 6, 16, 21, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691815550, 'comment_body': 'Here & elsewhere: please ensure there is a single blank newline separating each method of the class.', 'comment_created': datetime.datetime(2021, 8, 19, 6, 16, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691815898, 'comment_body': ""Suggest: ``playEndExplorationInteraction`` (technically it's another interaction)."", 'comment_created': datetime.datetime(2021, 8, 19, 6, 17, 26, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691816315, 'comment_body': ""In this case I would actually prefer you reintroduce completePrototypeExploration since these details are not important for the purpose of this test, they're just prerequisites to satisfy (unlike the other test where they are the key actions to complete)."", 'comment_created': datetime.datetime(2021, 8, 19, 6, 18, 22, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691816823, 'comment_body': 'Why are these changes duplicated from your other PR?', 'comment_created': datetime.datetime(2021, 8, 19, 6, 19, 25, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691819198, 'comment_body': ""Is there any way that we can retrieve the checkbox directly? It ought to at least have a content description for screenreader users if it doesn't already (/cc @rt4914). Could we add a content description & retrieve the object based on that?\r\n\r\nI'm not keen on the '2' because it's non-specific (without this screenshot, someone coming across this isn't going to have any idea why or if this is correct), and it's a bit fragile (if we move elements in the recyclerview around, that almost guarantees breaking this test even if the UX is still more or less the same)."", 'comment_created': datetime.datetime(2021, 8, 19, 6, 24, 20, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691819787, 'comment_body': 'Ah, you reverted right before I submitted this comment! Marking as resolved.', 'comment_created': datetime.datetime(2021, 8, 19, 6, 25, 24, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691820235, 'comment_body': 'We should probably try to keep the usual test name structure even for these. What about:\r\n\r\ntestPlayExploration_prototypeExploration_playedFullyThrough_finishesSuccessfully()', 'comment_created': datetime.datetime(2021, 8, 19, 6, 26, 19, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691820597, 'comment_body': ""My bad I didn't see that, \r\nReverted now"", 'comment_created': datetime.datetime(2021, 8, 19, 6, 27, 13, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 691822201, 'comment_body': 'I agree, actually the content description is a bit off here, it shows %s instead of actual values.\r\nMaybe add a todo to keep track of it of fix it in this pr', 'comment_created': datetime.datetime(2021, 8, 19, 6, 30, 4, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 691837362, 'comment_body': 'Done, I had some reference for this', 'comment_created': datetime.datetime(2021, 8, 19, 6, 57, 17, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 691837600, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 19, 6, 57, 45, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 691837617, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 19, 6, 57, 48, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 691837629, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 19, 6, 57, 49, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 691837673, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 19, 6, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 691837691, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 19, 6, 57, 56, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 691837706, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 19, 6, 57, 58, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 691841041, 'comment_body': '\r\n![image](https://user-images.githubusercontent.com/54740946/130023174-ca1a5513-024b-43c0-bdb3-9bc47446607f.png)\r\n', 'comment_created': datetime.datetime(2021, 8, 19, 7, 3, 35, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 691862159, 'comment_body': ""Wow, nice find. I didn't realize that we weren't formatting this correctly.\r\n\r\n@rt4914 in case something was missed somewhere or if there are other views we might want to check."", 'comment_created': datetime.datetime(2021, 8, 19, 7, 36, 56, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691862775, 'comment_body': 'Ah, thanks for fixing that! Can we retrieve the object now by its content description rather than using the magic number?\r\n\r\nAlso strangely, the full deltas for this PR are not showing these changes from your latest commit. Any idea why?', 'comment_created': datetime.datetime(2021, 8, 19, 7, 37, 54, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691863160, 'comment_body': '```suggestion\r\n  fun testPlayExploration_imageRegionInteractionExp_playedFullyThrough_finishesSuccessfully() {\r\n```\r\n\r\nJust to avoid the potential confusion between testing interactions vs. full explorations.', 'comment_created': datetime.datetime(2021, 8, 19, 7, 38, 29, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691864311, 'comment_body': ""To be a bit more clear: this test should go through all the steps because they are key actions for the test itself. The next test can just rely on the helper since it's part of the arrangement of that test rather than the actual action."", 'comment_created': datetime.datetime(2021, 8, 19, 7, 40, 16, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691872543, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 19, 7, 52, 12, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 691918788, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 19, 8, 53, 49, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 691948918, 'comment_body': ""Here I'm using `!!.` instead of `?.`\r\nSo that in case the view doesn't exist the test fails immediately, else the test runs as normal till it reaches the assertion and then gives a failure which might be confusing "", 'comment_created': datetime.datetime(2021, 8, 19, 9, 34, 17, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 692407717, 'comment_body': 'Actually I had changed this string earlier in my PR https://github.com/oppia/oppia-android/commit/9ad3f85b4648d2bb1ab82c50ca196d0e67e4cf34\r\n\r\nBut in another it was changed back: https://github.com/oppia/oppia-android/commit/630a433adddc478b8aff20120b7325e168618b44#diff-5e01f7d37a66e4ca03deefc205d8e7008661cdd0284a05aaba1858e6b7bf9103\r\n\r\n\r\nThe final solution is as follows:\r\n1. Do not change `contentDescription` in `story_chapter_view`, i.e., keep this code as `android:contentDescription=""@{@string/chapter_completed}""`\r\n2. In `strings.xml` file, change `chapter_completed ` and `chapter_in_progress` values to `Chapter is completed` and `Chapter is in progress` respectively.\r\n\r\nThis will result in following outcome:\r\n\r\n`Chapter 1: What is a Fraction? This is outline/summary of What is a Fraction?` , `Chapter is Completed`, `2 of 3`\r\n\r\n<img src=""https://user-images.githubusercontent.com/9396084/130128999-18f749c6-2e23-42c8-84c7-d3cbe1c32cbb.png"" width=""250"" />\r\n\r\n\r\nThe currently applied change in this PR will result in \r\n`Chapter 1: What is a Fraction? This is outline/summary of What is a Fraction?` , `Chapter 1 with title What is a Fraction is completed`, `2 of 3`\r\nAnd we can see that there is too much repetition here which does not make sense.\r\n\r\n\r\nDoes this solve the issue?\r\n', 'comment_created': datetime.datetime(2021, 8, 19, 19, 6, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 692475195, 'comment_body': 'I\'ve reverted all changes related to `chapter_completed_tick` since we can\'t use distinct content description \r\nchanges requested by @rt4914 would result in having same content description (""Chapter is completed"") \r\n\r\nand in this case we can\'t use the function findObjectByDesc to retrieve the object here.\r\n\r\nI\'ve created a separate helper to get the subview from the parent view.\r\ni.e, UiObject2.findObjectByRes()\r\n\r\n', 'comment_created': datetime.datetime(2021, 8, 19, 20, 45, 46, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 692515684, 'comment_body': '@aggarwalpulkit596 PTAL\r\n\r\nThis enables content description for each image region in ImageRegionSelectionInteraction\r\n![image](https://user-images.githubusercontent.com/54740946/130150057-fc5b5715-4207-430b-b8f3-71deee6f97c6.png)\r\n', 'comment_created': datetime.datetime(2021, 8, 19, 22, 1, 8, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 692531711, 'comment_body': ""Adding screenshot since the test can't run on Robolectric\r\n\r\n![image](https://user-images.githubusercontent.com/54740946/130153277-109dc129-50eb-4ad8-9302-a3cb66c6535b.png)\r\n"", 'comment_created': datetime.datetime(2021, 8, 19, 22, 38, 24, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 692569912, 'comment_body': ""Wasn't able to exactly test the content description here"", 'comment_created': datetime.datetime(2021, 8, 20, 0, 10, 19, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 692658822, 'comment_body': 'What was the exact error that you. are getting here?', 'comment_created': datetime.datetime(2021, 8, 20, 4, 51, 48, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 692725402, 'comment_body': 'Re: robolectric I was referring to the issue #1611\n\nIs there a way to retrieve content description of the image region??', 'comment_created': datetime.datetime(2021, 8, 20, 7, 21, 57, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 692825793, 'comment_body': ""I couldn't think of any other way to test the content description for an image region\r\n\r\nRemoved the ignore function as this can be tested in robolectric"", 'comment_created': datetime.datetime(2021, 8, 20, 10, 0, 8, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 693179582, 'comment_body': '@FareesHussain Could you explain the issue here ?\r\n', 'comment_created': datetime.datetime(2021, 8, 20, 19, 41, 5, tzinfo=datetime.timezone.utc), 'commenter': 'aggarwalpulkit596', 'type': 'User'}, {'comment_id': 693182092, 'comment_body': '@aggarwalpulkit596 \r\nThe main requirement here is to click on an image region in ImageRegionSelectionInteraction\r\nthe only way to exactly retrieve the image region is to add a content description to each image region.\r\nAlso included a test case to check the content description\r\n\r\nAssigned to review the changes.', 'comment_created': datetime.datetime(2021, 8, 20, 19, 46, 28, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 693243350, 'comment_body': ""This isn't correct. The label will give away the answer, so we introduced another property for content descriptions in image region.\r\n\r\nHowever, looking at https://github.com/oppia/oppia/blob/develop/extensions/interactions/ImageClickInput/ImageClickInput.py it seems we never did add this. Per https://github.com/oppia/oppia/issues/9924 I guess we didn't finish this which introduces a problem. We unfortunately won't be able to use this method.\r\n\r\nCan you file an issue to add support for https://github.com/oppia/oppia/issues/9924 once it's ready & add that as a TODO here to fix the reference? We probably aren't going to be able to do better than the direct indexing without content description support."", 'comment_created': datetime.datetime(2021, 8, 20, 22, 14, 47, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693243881, 'comment_body': ""I suggest returning only non-nullable types from your helper class and utilize checkNotNull with clearer error messages if an object isn't found. That'll give you the quick-failure you're looking for with clearer context, and doesn't even give the choice to test authors to potentially avoid the null-check (since we do want things to be really crisp)."", 'comment_created': datetime.datetime(2021, 8, 20, 22, 16, 26, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693245228, 'comment_body': 'Ack thanks @rt4914. Does this mean R/strings/chapter_completed still needs to be updated to no longer use variables?', 'comment_created': datetime.datetime(2021, 8, 20, 22, 21, 3, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 693259030, 'comment_body': 'Done\r\nhttps://github.com/oppia/oppia-android/issues/3712', 'comment_created': datetime.datetime(2021, 8, 20, 23, 10, 17, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 693259101, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 20, 23, 10, 33, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 693327757, 'comment_body': 'Resolving for now to unblock the PR.', 'comment_created': datetime.datetime(2021, 8, 21, 8, 57, 2, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}]","[{'commit_sha': 'b720222a627268675521a17f9868287965686b67', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f90cbfca446be4abd0f11e9caa6c0eb7d9188e9d', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '930abe00fc1082fe389ad923bec79ea20defc922', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb6f5bbe66b12cc3d26019f8868afcbdbff10c57', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46a1b565b63a04b50ea30d7478aefab63fb0d33f', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44f4003adc5c226cf2a8012b50d9b06b9c9d385b', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72620a21a67fb3612ceb9f24779fb665c4fb69aa', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a384c33148aaace701d4fc4a820047e8b1a232e', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a641d735c9187b6ff466172c777d40e6a5775d7', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c58b6f6849563229604e9b29c8e5ae4920de2ffc', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09c419e1950c841d0e6d6cba960757f2dedf5d22', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '004e3a143b18f82121a83b7acf80a5d8de57cf1e', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7124642d34223c36993d2b56bf496913e709ee87', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a1221dd07b003a9ce84d70c2c9d048ce187ee13', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0aec4a5ce52fec6bccc03e8b643920e511d76216', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e0996648e7cc41e4f81d8c65d67939b7cd37cad', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ca2bb97328d79166dd136cf590dd51ff28fb269', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44868828af9e716441dfad41c8ddcc87de6d68e3', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f64d32c357d290e50e8ddc58526b89bb3b58e0a3', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc66ba2f99fef214a6fa3de62cae047db7a6541a', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c233b71ca037cec364d94427969e5e1bbc63b783', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20449796de94230a57022d56f64080e44c1dcb40', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ac1ac59f812031b43f9e496e57d6d296da3a194', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bb5348570399a672e12b1e2962e8fe668109446', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c818dd5587804ff42c466bec3c623580a79c66e', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e0440e98451bc76fa920246e3b6573132848608', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5a6128c2bb67048877f829a3f6504731030ff54', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '425ebfaf3a43ff053e893374259c05865ad137fa', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '067537f703764ed5b3dd0317d80bcfc5e61d880a', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9233c6c556ea7e4c3c9bf339bc4c3c2d6e2eb0d', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37b10e2ce4c7ef0844fe130396c50f31da81bbe5', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c1e79f476a0f2a751387f2690c0df57ac5daf5b', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44363c1c4e7425499b5a3ab5adb2763618cfb6b1', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e95d29fb40426eda05d0278b3efe0b1e90d2349e', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c608f7c2ed356ee2bc4e455e176d4a9fed9ab7a4', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66f6b5125d81bb05e0adaff22525ee14e878dfa0', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6514ba9cc8c98612ac02f98f4d87cdb9bc5b9453', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e81706bc8d42b61589e6ef70f163dcc134601ced', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4266e4dd5c421b4c2c4a9fb5e50d0f3fb10d274', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f2836c6ba9d9ee0688fa3e5d2663c53a0db139f', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '870d0a27e122fb0f0e4b4e3990b01aef03b9adda', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '366024393dd73ea0a8e0b235150b722e77d9d0b7', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4aa4d44816341d1b7e8bf3f0391821ba234f117', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41ea23f55f550929339b7530460bbaefead09da3', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b15451b505e9cace4a493956b7d0f09c4b3e6a95', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73c650e4aede19b4db064a9cf76756febeb72a64', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d509144b37e7bfeac3676099005d6e92b6fae90', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2db95763448d1222b36bf362ef43ed8c133ec1c', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8f3ca9a18e4d20e6c0956038b2b32add0b2cafb', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16b51e542bdc3c37ce31ccb494cff344e80a84a9', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02af57a982e35d1c842b86637eeffb5eeceae78a', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e39903f8f8d4e2139e862aa9a9035cef80db599d', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '838c713ab5318bdbbf34938d1cbc434cc1784227', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08ffe7596f93ba9d4df801728622447f2ec85a9e', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2ba2155455044ae82ce8180c644de6a9ad1953f', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '989342e2817346c0a7a1a4c59fdd7be1fa8acd2a', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56106515e8dc02bf21410eb42a0bf8bf37fe7ab1', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f9e2c726e07cb03f22073033ddff2044db9b177', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75c60cdd3469bb4076c7aea6be8a1e14d27dd429', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a37bcbb7c1f81d7781ea3704a3ce68bb90ecef52', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33c4189a80c0a2bb5872d6786c17e41bf40e2bde', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd40cd4bd565638a7c2b9dee250807e31e53cdefe', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55bc4d921f45176bc542d287d021ba510002df95', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58caec19904455a271db0072f8481ece08e6a995', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d16408d67839cd516ca18ff84925cb440c26045', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7bd1dd4de9b86874a0ca272caad3b1e868aed1e', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f01a6553f8d6dbe328add1f0302526a7be91f6ed', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4811a07cc788236005417a619c58a6db208a968a', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9e9fbebdcad3cdadc5a12f273f8c57309baea23', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '196f8dbc0a9121bbda45c74afb35d6ba80bbcad2', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf1e0eb30c6a82b22eec7248b34f7a18160b6411', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63ed6809f2db5250b8680a1ea683fbb9365a2132', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}]",Farees Hussain,54740946,fareezzhussain@gmail.com,User,,37,,23,68
697340704,Fix #3528: Setup Infrastructure to test using local dev server,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->

Fixes #3528
This pr introduces a Testing infrastructure that enables instrumentation tests for downloading explorations and loading images from the local dev server.

This introduces a TestNetworkModule, TestImageParsingModule, and a TestGcsResourceModule.
These modules are used by the OppiaTestApplication and added to a manifest used by the oppia_test android_binary.

oppia_test is similar to the oppia target but it uses the above three modules and a different AndroidManifest

Here I've used two different AndroidManifest in the instrumentation module
one under java directory used for the OppiaTestApplication
and under javatest directory used for InstrumentationTests


**Build the test app using:**
```
bazel build //instrumentation:oppia_test
```

### Screenshot
![image](https://user-images.githubusercontent.com/54740946/127057460-521ee522-45f4-4d85-b5ff-768764b0cf59.png)

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3529,https://api.github.com/repos/oppia/oppia-android/pulls/3529,https://github.com/oppia/oppia-android/pull/3529,closed,1211,107,52,82,12,74,0,1,[],2021-07-26 20:46:42+00:00,2021-08-19 20:10:44+00:00,2071442.0,"23 days, 23:24:02","[{'comment_id': 677047045, 'comment_body': 'Why do we need all these activity here?', 'comment_created': datetime.datetime(2021, 7, 27, 1, 18, 49, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 677047261, 'comment_body': ""it's not the root"", 'comment_created': datetime.datetime(2021, 7, 27, 1, 19, 31, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 677165198, 'comment_body': ""According to my above comment, it is the root for the oppia test app. \r\nI'll update the kdocs once the approach is accepted."", 'comment_created': datetime.datetime(2021, 7, 27, 6, 47, 36, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 677165467, 'comment_body': ""I'm creating a separate application that uses the local dev server so that the user can install and run the test app before writing the tests. which makes it easier to write tests."", 'comment_created': datetime.datetime(2021, 7, 27, 6, 48, 5, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 679704036, 'comment_body': 'Please fix the spacing here.', 'comment_created': datetime.datetime(2021, 7, 30, 7, 13, 13, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679704306, 'comment_body': ""We really ought to not redefine this. Could you file an issue to remove the redundant declarations here once we support proper manifest merging & add a TODO here for that? It's blocked on finishing the Bazel migration since Gradle doesn't have great manifest merging support."", 'comment_created': datetime.datetime(2021, 7, 30, 7, 13, 46, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679705296, 'comment_body': ""Hmm. This might actually make the need for smoke tests essential. As we change modules, the end-to-end tests will very easily break without detection if we don't at least have a basic build test running in CI."", 'comment_created': datetime.datetime(2021, 7, 30, 7, 15, 32, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 679706201, 'comment_body': ""Here & elsewhere: I'm a bit concerned with calling everything 'test' because it may be conflated with other tests that shouldn't be using these things (e.g. robolectric unit tests). Suggest instead using 'EndToEndTest' for each place where 'Test' is used currently for these new components."", 'comment_created': datetime.datetime(2021, 7, 30, 7, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 680355307, 'comment_body': 'Done.\r\nNot sure if you meant to include OppiaTestApplication and TestApplicationComponent too here.', 'comment_created': datetime.datetime(2021, 7, 31, 12, 46, 49, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 680355309, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 31, 12, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 680355311, 'comment_body': 'Done,\r\nhttps://github.com/oppia/oppia-android/issues/3619', 'comment_created': datetime.datetime(2021, 7, 31, 12, 46, 55, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 680355447, 'comment_body': 'https://github.com/oppia/oppia-android/issues/3618\r\nCreated a issue to keep track of it.\r\n\r\nTo me it looks like we already have smoke tests accroding to this\r\nhttps://github.com/oppia/oppia-android/pull/3505/checks?check_run_id=3208383668', 'comment_created': datetime.datetime(2021, 7, 31, 12, 48, 39, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 680422582, 'comment_body': ""ApplicationComponent didn't have any KDoc so, I've added this to exemption too"", 'comment_created': datetime.datetime(2021, 7, 31, 23, 31, 47, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 682726597, 'comment_body': 'splitting based on tests and dagger configurations', 'comment_created': datetime.datetime(2021, 8, 4, 15, 29, 51, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 683125769, 'comment_body': 'We added the previous file in exempted because there is no doc, but it should have and soon we will create to issues to fill those. \r\nAs for this PR we can add doc and remove file from here.', 'comment_created': datetime.datetime(2021, 8, 5, 4, 48, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 683267381, 'comment_body': 'Why not use a specific version, instead?', 'comment_created': datetime.datetime(2021, 8, 5, 9, 1, 37, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685068240, 'comment_body': 'Add TODO in this file as well. ', 'comment_created': datetime.datetime(2021, 8, 9, 10, 10, 26, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 686275212, 'comment_body': ""I think you've resolved this comment in #3505 "", 'comment_created': datetime.datetime(2021, 8, 10, 19, 50, 36, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 686498006, 'comment_body': ""I think we probably will need a separate package group just for e2e test visibility. Please create one of those (under instrumentation) & use that here & elsewhere for e2e-only dependencies (we really don't want these used elsewhere in tests)."", 'comment_created': datetime.datetime(2021, 8, 11, 5, 17, 32, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686498141, 'comment_body': 'Please add file-level documentation for this BUILD file (see other module BUILD files for reference).', 'comment_created': datetime.datetime(2021, 8, 11, 5, 17, 57, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686498486, 'comment_body': '```suggestion\r\n/** Provides fake GCS resources for e2e tests (i.e. the local dev server). */\r\n```', 'comment_created': datetime.datetime(2021, 8, 11, 5, 18, 53, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686499088, 'comment_body': 'Instead of redefining this module, could we instead introduce a NetworkConfigModule in prod that provides the endpoint URL & provide an end-to-end test variant here that provides the dev version? That would lead to less duplication with the prod configuration.', 'comment_created': datetime.datetime(2021, 8, 11, 5, 20, 39, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686499373, 'comment_body': ""```suggestion\r\n/** The root [Application] of the all end-to-end test apps. */\r\n```\r\n\r\nAlternate that's a bit more specific."", 'comment_created': datetime.datetime(2021, 8, 11, 5, 21, 22, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686499653, 'comment_body': ""Is this relevant in this context? I don't think this component will ever be used in prod situations."", 'comment_created': datetime.datetime(2021, 8, 11, 5, 22, 4, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686500492, 'comment_body': 'These modules can be reasonably tests to make sure that their bindings correctly point to the test variants. I suggest adding basic tests for each.', 'comment_created': datetime.datetime(2021, 8, 11, 5, 24, 25, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686614161, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 11, 8, 27, 47, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 686615398, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2021, 8, 11, 8, 29, 20, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 686615482, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 11, 8, 29, 25, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 686615517, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 11, 8, 29, 28, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 686615581, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 11, 8, 29, 33, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 686843888, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 11, 13, 42, 34, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 687759666, 'comment_body': 'Done,\r\nRemoved the EndToEndTestNetworkModule and update the DEVELOPEMENT_URL in the NetworkSettings.kt', 'comment_created': datetime.datetime(2021, 8, 12, 14, 20, 37, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 687760864, 'comment_body': ""Done.\r\nI've added tests for the Modules (EndToEndTestGcsResourceModule and EndToEndTestImageParsingModule)\r\nNot sure how to test the TestApplicationComponent and OppiaTestApplication"", 'comment_created': datetime.datetime(2021, 8, 12, 14, 21, 59, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 687788064, 'comment_body': 'Seperated the modules and components into a separate directory application similar to the app module', 'comment_created': datetime.datetime(2021, 8, 12, 14, 46, 15, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 688011636, 'comment_body': 'I think we are exempting kdocs for TestApplicationComponent interface\r\n@sparsh1212 can you confirm', 'comment_created': datetime.datetime(2021, 8, 12, 19, 6, 23, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 688013005, 'comment_body': 'We are exempting all the cases of Test files because of the `TestApplicationComponent` interfaces and classes. So, this is a similar case. It will be fine to exempt this currently.', 'comment_created': datetime.datetime(2021, 8, 12, 19, 8, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Sparsh1212', 'type': 'User'}, {'comment_id': 688279891, 'comment_body': '```suggestion\r\nThis library contains the test application and modules used to build the test app for end-to-end tests.\r\n```', 'comment_created': datetime.datetime(2021, 8, 13, 6, 40, 9, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688280698, 'comment_body': '```suggestion\r\n  fun testModule_defaultGcsResource_isAssetsDevHandler() {\r\n```\r\n\r\nDitto for the other module tests here & in the other suite.', 'comment_created': datetime.datetime(2021, 8, 13, 6, 41, 48, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688281018, 'comment_body': 'For this suite & the below one: why is this dependency needed?', 'comment_created': datetime.datetime(2021, 8, 13, 6, 42, 23, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688281838, 'comment_body': ""Adding these tests is problematic since they'll be ignored by your filter in ComputeAffectedTests. We ought to actually filter for instrumentation tests, but in the meantime could you filter out just the player test instead of all of instrumentation/?"", 'comment_created': datetime.datetime(2021, 8, 13, 6, 44, 11, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688282940, 'comment_body': ""That's not quite the same (a smoke test would pass if it builds), but given the discussed scope for the project we'll work on adding these later."", 'comment_created': datetime.datetime(2021, 8, 13, 6, 46, 49, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688283666, 'comment_body': ""This isn't what I meant. We still need to point to prod Oppia by default; only in the test app should we be switching this. To do that, we need to change this to be injected via a Dagger module in the same way as the other constants you're swapping out below for the test app."", 'comment_created': datetime.datetime(2021, 8, 13, 6, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688455750, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 13, 11, 53, 37, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 688456010, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 13, 11, 54, 4, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 688456225, 'comment_body': 'Removed, actually I missed the robolectric dependency', 'comment_created': datetime.datetime(2021, 8, 13, 11, 54, 27, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 688456277, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 13, 11, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 688456325, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 13, 11, 54, 38, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 688831723, 'comment_body': 'Should be module visibility.', 'comment_created': datetime.datetime(2021, 8, 14, 0, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688831763, 'comment_body': 'Should be API visibility.', 'comment_created': datetime.datetime(2021, 8, 14, 0, 0, 41, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688831777, 'comment_body': 'Ditto here (API visibility).', 'comment_created': datetime.datetime(2021, 8, 14, 0, 0, 47, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688831967, 'comment_body': 'I suggest merging this with the one below and calling it ""annotations""', 'comment_created': datetime.datetime(2021, 8, 14, 0, 1, 41, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688832049, 'comment_body': 'Prefer depending on the dependency needed for javax.inject, not the fully Dagger dep (which pulls in extra stuff):\r\n\r\n``//third_party:javax_inject_javax_inject``', 'comment_created': datetime.datetime(2021, 8, 14, 0, 2, 3, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688832253, 'comment_body': 'Suggest:\r\n\r\n```suggestion\r\n/** Qualifier for an application-injectable string representing the server URL used for networking. */\r\n```\r\n\r\nDitto for the other qualifier KDoc.', 'comment_created': datetime.datetime(2021, 8, 14, 0, 2, 58, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688832331, 'comment_body': '```suggestion\r\nclass JsonPrefixNetworkInterceptor @Inject constructor(\r\n  @XssiPrefix private val xssiPrefix: String\r\n) : Interceptor {\r\n```\r\n\r\nFormatting is a bit off.', 'comment_created': datetime.datetime(2021, 8, 14, 0, 3, 27, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688832365, 'comment_body': '```suggestion\r\n/** Provides network-specific constants. */\r\n```', 'comment_created': datetime.datetime(2021, 8, 14, 0, 3, 46, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688832638, 'comment_body': 'Suggest: ``NetworkConfigProdModule`` since you presumably will want to introduce a test module.', 'comment_created': datetime.datetime(2021, 8, 14, 0, 5, 10, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688832828, 'comment_body': '```suggestion\r\n/** Provides network-specific constants needed to configure end-to-end tests. */\r\n```', 'comment_created': datetime.datetime(2021, 8, 14, 0, 6, 20, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688833230, 'comment_body': ""Just looking to validate that they're running now in CI (see my comment in #3505)."", 'comment_created': datetime.datetime(2021, 8, 14, 0, 8, 41, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688971994, 'comment_body': ""Done.\r\ndidn't change it in the instrumentation module, `EndToEndTestNetworkConfigModule` seemed fine to me"", 'comment_created': datetime.datetime(2021, 8, 14, 17, 29, 37, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 688974786, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 14, 17, 58, 31, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 688974787, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 14, 17, 58, 33, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 688974790, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 14, 17, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 688974794, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 14, 17, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 688974795, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 14, 17, 58, 38, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 688974797, 'comment_body': 'named ""network_config_annotations"" instead separating it from oppia_retrofit', 'comment_created': datetime.datetime(2021, 8, 14, 17, 58, 39, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 688974800, 'comment_body': 'I followed the oppia_retrofit target here, changed it too.', 'comment_created': datetime.datetime(2021, 8, 14, 17, 58, 41, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 688974802, 'comment_body': 'it was merged with BaseUrl, and done', 'comment_created': datetime.datetime(2021, 8, 14, 17, 58, 43, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 688974803, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 14, 17, 58, 44, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 689437106, 'comment_body': 'leave a kdoc', 'comment_created': datetime.datetime(2021, 8, 16, 10, 59, 28, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 689442209, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 16, 11, 8, 9, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 690008318, 'comment_body': 'For this & previous test, please also verify that the non-player test is included (since it should be).', 'comment_created': datetime.datetime(2021, 8, 17, 3, 33, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 690022969, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 17, 4, 23, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}, {'comment_id': 691806206, 'comment_body': 'For this & changes below, please add tests for TestBazelWorkspace to verify these new behaviors for each method.', 'comment_created': datetime.datetime(2021, 8, 19, 5, 55, 35, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 691815359, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 19, 6, 16, 20, tzinfo=datetime.timezone.utc), 'commenter': 'FareesHussain', 'type': 'User'}]","[{'commit_sha': 'b720222a627268675521a17f9868287965686b67', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f90cbfca446be4abd0f11e9caa6c0eb7d9188e9d', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '930abe00fc1082fe389ad923bec79ea20defc922', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb6f5bbe66b12cc3d26019f8868afcbdbff10c57', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46a1b565b63a04b50ea30d7478aefab63fb0d33f', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44f4003adc5c226cf2a8012b50d9b06b9c9d385b', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72620a21a67fb3612ceb9f24779fb665c4fb69aa', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a384c33148aaace701d4fc4a820047e8b1a232e', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a641d735c9187b6ff466172c777d40e6a5775d7', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c58b6f6849563229604e9b29c8e5ae4920de2ffc', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09c419e1950c841d0e6d6cba960757f2dedf5d22', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '311ee0e2ce505929d3b7500c97447bafde00c489', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6177e6312506dca9bb53c046b832c5a984d687e', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '959e9d359aeb6483bc3a95b0f41e5a7fb8ad5c7b', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '004e3a143b18f82121a83b7acf80a5d8de57cf1e', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34e28c390ceaabc123e82c0d8eca3515790455d3', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e42acfdffe6e264ca1222ff680e6073fe5d68ad', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3eb2c75dc7944b6faaab449520ccd410af313b90', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a1221dd07b003a9ce84d70c2c9d048ce187ee13', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0aec4a5ce52fec6bccc03e8b643920e511d76216', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e0996648e7cc41e4f81d8c65d67939b7cd37cad', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44868828af9e716441dfad41c8ddcc87de6d68e3', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f64d32c357d290e50e8ddc58526b89bb3b58e0a3', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc66ba2f99fef214a6fa3de62cae047db7a6541a', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c233b71ca037cec364d94427969e5e1bbc63b783', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20449796de94230a57022d56f64080e44c1dcb40', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ac1ac59f812031b43f9e496e57d6d296da3a194', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bb5348570399a672e12b1e2962e8fe668109446', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f4ce65057203c6fba3c72c8cd48281ead787d21', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3ce32b9a89daaff7246d6d1443617a9d85f3e09', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68337d825f647a217d7d8f68305778831fcb2534', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec63ede6b8c4055b220460c522b4589f54b255f9', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5a6128c2bb67048877f829a3f6504731030ff54', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '425ebfaf3a43ff053e893374259c05865ad137fa', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '067537f703764ed5b3dd0317d80bcfc5e61d880a', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9233c6c556ea7e4c3c9bf339bc4c3c2d6e2eb0d', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37b10e2ce4c7ef0844fe130396c50f31da81bbe5', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c1e79f476a0f2a751387f2690c0df57ac5daf5b', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44363c1c4e7425499b5a3ab5adb2763618cfb6b1', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e95d29fb40426eda05d0278b3efe0b1e90d2349e', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c608f7c2ed356ee2bc4e455e176d4a9fed9ab7a4', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66f6b5125d81bb05e0adaff22525ee14e878dfa0', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6514ba9cc8c98612ac02f98f4d87cdb9bc5b9453', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e81706bc8d42b61589e6ef70f163dcc134601ced', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4266e4dd5c421b4c2c4a9fb5e50d0f3fb10d274', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f2836c6ba9d9ee0688fa3e5d2663c53a0db139f', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '366024393dd73ea0a8e0b235150b722e77d9d0b7', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4aa4d44816341d1b7e8bf3f0391821ba234f117', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41ea23f55f550929339b7530460bbaefead09da3', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b15451b505e9cace4a493956b7d0f09c4b3e6a95', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73c650e4aede19b4db064a9cf76756febeb72a64', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '970d50685b75bca5a9069b497e3b0c0817aec0f9', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd7bb06a65359f7946b6ba0e1a99cf9bd279c54d', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cd778c5bfc8ddbec02e24db6fc1386426e1d5e7', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bb707665522bdac131656f06d7074c18aea11f6', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '084624ece7887375065cf412d3ee1b772f034d46', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d509144b37e7bfeac3676099005d6e92b6fae90', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2db95763448d1222b36bf362ef43ed8c133ec1c', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31ac93b8eefdcf31d1dee8594458d28d2cbac5b6', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b12b8ccef1346b60d460882a1d065bc696ba5ea1', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5721b870b75168ed69fb5f22850b72cb4e5d512f', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '018909b9521555aa8690d1fb71e4571c4d65fffe', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e45507604e242547bd7a8649189c679f39d00e93', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81850b4b69e018336881ae862dd6213d65a88892', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f44b9b2c78419b247066789da5841a126670ca07', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70c1ba09684c1680fe382e21561401cab01609ee', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd8361fb5db0f63c988191ab43149c0349de92b7', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84d3dd4db182eb79957cd8014e6f1e53015efa6d', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25bf74ea90cd871ab5b943bdfa3368110dc8a6d7', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7e979ee45e7862bb83cc165570e6258e3011c3f', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48266ad39231db9fbebb099ef5e647147ea0d1d0', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77b45a7965c79f45d7ffda2015c2a1ed46aa97d5', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '231760f50c2f0d3e24f74f0d853e7f3aac3fba23', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db7c7b3205575fdae1558e3d1550439735af9185', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76646c1969e770d4ab46380e74906aae5b249744', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6b4d7eb7c4d983b2608545754c4c2314e4340a7', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '505532aad459effe825311259c5f416445e9252b', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4d3190888d34f11b5c04ce1c242c988931c7557', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '898998623dfca220d762fcba21cb235bf94d663c', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a63e8a6e3e9684ca945d1b3604836ab9eb20c46', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca6ff21e65f441ab032cda285f94dd26db653e99', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72bc5019435c8998bb4abd2ca17ff588df068cca', 'committer_username': 'FareesHussain', 'committer_name': 'Farees Hussain', 'committer_email': 'fareezzhussain@gmail.com', 'commit_date': datetime.datetime(2019, 8, 31, 11, 5, 26, tzinfo=datetime.timezone.utc)}]",Farees Hussain,54740946,fareezzhussain@gmail.com,User,,37,,23,68

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
40687563,oppia,oppia/oppia,Python,3840,5715,240,775,15754,1424,418,27,"[{'id': 674996563, 'number': 13174, 'closed': datetime.datetime(2021, 7, 6, 7, 44, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 1, 11, 58, tzinfo=datetime.timezone.utc), 'time_taken': 1233136.0, 'time_delta': '14 days, 6:32:16', 'additions': 441, 'deletions': 1, 'state': 'closed'}, {'id': 665924926, 'number': 13029, 'closed': datetime.datetime(2021, 6, 27, 7, 56, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 9, 13, 46, 26, tzinfo=datetime.timezone.utc), 'time_taken': 1534220.0, 'time_delta': '17 days, 18:10:20', 'additions': 826, 'deletions': 0, 'state': 'closed'}, {'id': 663882238, 'number': 13009, 'closed': datetime.datetime(2021, 6, 10, 2, 4, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 7, 20, 14, 18, tzinfo=datetime.timezone.utc), 'time_taken': 193789.0, 'time_delta': '2 days, 5:49:49', 'additions': 18, 'deletions': 0, 'state': 'closed'}, {'id': 663880934, 'number': 13008, 'closed': datetime.datetime(2021, 6, 7, 20, 12, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 7, 20, 12, 12, tzinfo=datetime.timezone.utc), 'time_taken': 5.0, 'time_delta': '0:00:05', 'additions': 12, 'deletions': 0, 'state': 'closed'}, {'id': 624557383, 'number': 12651, 'closed': datetime.datetime(2021, 5, 8, 16, 26, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 27, 18, 31, 57, tzinfo=datetime.timezone.utc), 'time_taken': 942867.0, 'time_delta': '10 days, 21:54:27', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 621827759, 'number': 12611, 'closed': datetime.datetime(2021, 5, 26, 0, 41, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 23, 7, 1, 8, tzinfo=datetime.timezone.utc), 'time_taken': 2828415.0, 'time_delta': '32 days, 17:40:15', 'additions': 19, 'deletions': 27, 'state': 'closed'}, {'id': 619425505, 'number': 12566, 'closed': datetime.datetime(2021, 6, 6, 17, 0, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 20, 15, 27, 10, tzinfo=datetime.timezone.utc), 'time_taken': 4066385.0, 'time_delta': '47 days, 1:33:05', 'additions': 119, 'deletions': 154, 'state': 'closed'}, {'id': 602011642, 'number': 12347, 'closed': datetime.datetime(2021, 4, 21, 19, 16, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 27, 6, 28, 27, tzinfo=datetime.timezone.utc), 'time_taken': 2206075.0, 'time_delta': '25 days, 12:47:55', 'additions': 85, 'deletions': 11, 'state': 'closed'}, {'id': 601040776, 'number': 12333, 'closed': datetime.datetime(2021, 4, 21, 15, 41, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 25, 20, 33, 3, tzinfo=datetime.timezone.utc), 'time_taken': 2315334.0, 'time_delta': '26 days, 19:08:54', 'additions': 70, 'deletions': 1, 'state': 'closed'}, {'id': 596467009, 'number': 12272, 'closed': datetime.datetime(2021, 3, 24, 16, 18, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 19, 11, 27, 19, tzinfo=datetime.timezone.utc), 'time_taken': 449464.0, 'time_delta': '5 days, 4:51:04', 'additions': 128, 'deletions': 1, 'state': 'closed'}, {'id': 577075966, 'number': 11999, 'closed': datetime.datetime(2021, 2, 23, 3, 23, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 21, 8, 49, 50, tzinfo=datetime.timezone.utc), 'time_taken': 153240.0, 'time_delta': '1 day, 18:34:00', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 571867151, 'number': 11914, 'closed': datetime.datetime(2021, 6, 6, 16, 59, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 11, 14, 40, 28, tzinfo=datetime.timezone.utc), 'time_taken': 9944360.0, 'time_delta': '115 days, 2:19:20', 'additions': 1801, 'deletions': 1520, 'state': 'closed'}, {'id': 568820076, 'number': 11869, 'closed': datetime.datetime(2021, 2, 12, 21, 37, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 6, 17, 14, 2, tzinfo=datetime.timezone.utc), 'time_taken': 534207.0, 'time_delta': '6 days, 4:23:27', 'additions': 3, 'deletions': 20, 'state': 'closed'}]"
148093817,oppia-android,oppia/oppia-android,Kotlin,506,306,21,172,2040,501,138,15,"[{'id': 759694040, 'number': 3943, 'closed': datetime.datetime(2021, 11, 10, 21, 40, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 16, 17, 25, 48, tzinfo=datetime.timezone.utc), 'time_taken': 2175288.0, 'time_delta': '25 days, 4:14:48', 'additions': 17, 'deletions': 31, 'state': 'closed'}, {'id': 751545297, 'number': 3891, 'closed': datetime.datetime(2021, 10, 12, 17, 42, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 6, 12, 23, 38, tzinfo=datetime.timezone.utc), 'time_taken': 537523.0, 'time_delta': '6 days, 5:18:43', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 720307829, 'number': 3741, 'closed': datetime.datetime(2021, 8, 27, 17, 39, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 26, 8, 44, 44, tzinfo=datetime.timezone.utc), 'time_taken': 118499.0, 'time_delta': '1 day, 8:54:59', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 714176708, 'number': 3695, 'closed': datetime.datetime(2021, 8, 17, 14, 30, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 17, 11, 56, 2, tzinfo=datetime.timezone.utc), 'time_taken': 9285.0, 'time_delta': '2:34:45', 'additions': 1640, 'deletions': 105, 'state': 'closed'}, {'id': 699097962, 'number': 3608, 'closed': datetime.datetime(2021, 8, 21, 9, 1, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 29, 0, 31, 52, tzinfo=datetime.timezone.utc), 'time_taken': 2017791.0, 'time_delta': '23 days, 8:29:51', 'additions': 171, 'deletions': 13, 'state': 'closed'}, {'id': 697340704, 'number': 3529, 'closed': datetime.datetime(2021, 8, 19, 20, 10, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 26, 20, 46, 42, tzinfo=datetime.timezone.utc), 'time_taken': 2071442.0, 'time_delta': '23 days, 23:24:02', 'additions': 1211, 'deletions': 107, 'state': 'closed'}, {'id': 693616984, 'number': 3505, 'closed': datetime.datetime(2021, 8, 18, 7, 37, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 20, 16, 23, 20, tzinfo=datetime.timezone.utc), 'time_taken': 2474044.0, 'time_delta': '28 days, 15:14:04', 'additions': 367, 'deletions': 9, 'state': 'closed'}, {'id': 690536069, 'number': 3480, 'closed': datetime.datetime(2021, 7, 16, 8, 22, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 15, 9, 8, 8, tzinfo=datetime.timezone.utc), 'time_taken': 83689.0, 'time_delta': '23:14:49', 'additions': 228, 'deletions': 2, 'state': 'closed'}, {'id': 629735697, 'number': 3158, 'closed': datetime.datetime(2021, 5, 10, 12, 53, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 4, 11, 47, 59, tzinfo=datetime.timezone.utc), 'time_taken': 522354.0, 'time_delta': '6 days, 1:05:54', 'additions': 389, 'deletions': 369, 'state': 'closed'}, {'id': 600909949, 'number': 3012, 'closed': datetime.datetime(2021, 4, 1, 0, 37, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 25, 17, 1, 44, tzinfo=datetime.timezone.utc), 'time_taken': 545768.0, 'time_delta': '6 days, 7:36:08', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 588481330, 'number': 2868, 'closed': datetime.datetime(2021, 3, 17, 2, 48, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 9, 19, 2, 58, tzinfo=datetime.timezone.utc), 'time_taken': 632706.0, 'time_delta': '7 days, 7:45:06', 'additions': 29, 'deletions': 3, 'state': 'closed'}, {'id': 581364610, 'number': 2795, 'closed': datetime.datetime(2021, 3, 9, 7, 25, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 27, 16, 42, 45, tzinfo=datetime.timezone.utc), 'time_taken': 830544.0, 'time_delta': '9 days, 14:42:24', 'additions': 57, 'deletions': 1, 'state': 'closed'}, {'id': 570195248, 'number': 2668, 'closed': datetime.datetime(2021, 2, 23, 22, 9, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 9, 10, 39, 16, tzinfo=datetime.timezone.utc), 'time_taken': 1250994.0, 'time_delta': '14 days, 11:29:54', 'additions': 49, 'deletions': 1, 'state': 'closed'}, {'id': 568856181, 'number': 2648, 'closed': datetime.datetime(2021, 2, 23, 7, 22, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 6, 21, 31, 3, tzinfo=datetime.timezone.utc), 'time_taken': 1417875.0, 'time_delta': '16 days, 9:51:15', 'additions': 60, 'deletions': 3, 'state': 'closed'}, {'id': 560662376, 'number': 2557, 'closed': datetime.datetime(2021, 8, 4, 5, 30, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 24, 19, 45, 28, tzinfo=datetime.timezone.utc), 'time_taken': 16537497.0, 'time_delta': '191 days, 9:44:57', 'additions': 122, 'deletions': 22, 'state': 'closed'}, {'id': 556982087, 'number': 2514, 'closed': datetime.datetime(2021, 8, 14, 2, 36, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 18, 18, 39, 4, tzinfo=datetime.timezone.utc), 'time_taken': 17913463.0, 'time_delta': '207 days, 7:57:43', 'additions': 108, 'deletions': 6, 'state': 'closed'}, {'id': 556761456, 'number': 2510, 'closed': datetime.datetime(2021, 1, 21, 10, 33, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 18, 12, 4, 6, tzinfo=datetime.timezone.utc), 'time_taken': 253737.0, 'time_delta': '2 days, 22:28:57', 'additions': 77, 'deletions': 63, 'state': 'closed'}, {'id': 556336399, 'number': 2501, 'closed': datetime.datetime(2021, 1, 17, 17, 53, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 17, 12, 4, 13, tzinfo=datetime.timezone.utc), 'time_taken': 20961.0, 'time_delta': '5:49:21', 'additions': 70, 'deletions': 30, 'state': 'closed'}, {'id': 552307179, 'number': 2447, 'closed': datetime.datetime(2021, 3, 26, 10, 1, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 10, 16, 12, 9, tzinfo=datetime.timezone.utc), 'time_taken': 6457741.0, 'time_delta': '74 days, 17:49:01', 'additions': 265, 'deletions': 9, 'state': 'closed'}, {'id': 550206359, 'number': 2413, 'closed': datetime.datetime(2021, 1, 14, 1, 27, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 6, 8, 44, 20, tzinfo=datetime.timezone.utc), 'time_taken': 665011.0, 'time_delta': '7 days, 16:43:31', 'additions': 41, 'deletions': 6, 'state': 'closed'}, {'id': 548856494, 'number': 2394, 'closed': datetime.datetime(2021, 1, 5, 12, 17, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 5, 9, 53, 39, tzinfo=datetime.timezone.utc), 'time_taken': 8639.0, 'time_delta': '2:23:59', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 548848327, 'number': 2392, 'closed': datetime.datetime(2021, 2, 3, 5, 15, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 5, 9, 39, 29, tzinfo=datetime.timezone.utc), 'time_taken': 2489768.0, 'time_delta': '28 days, 19:36:08', 'additions': 207, 'deletions': 131, 'state': 'closed'}, {'id': 546879292, 'number': 2350, 'closed': datetime.datetime(2020, 12, 31, 11, 6, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 30, 9, 58, 17, tzinfo=datetime.timezone.utc), 'time_taken': 90505.0, 'time_delta': '1 day, 1:08:25', 'additions': 479, 'deletions': 206, 'state': 'closed'}, {'id': 546840959, 'number': 2349, 'closed': datetime.datetime(2021, 1, 12, 6, 0, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 30, 7, 58, 58, tzinfo=datetime.timezone.utc), 'time_taken': 1116071.0, 'time_delta': '12 days, 22:01:11', 'additions': 505, 'deletions': 627, 'state': 'closed'}, {'id': 546642209, 'number': 2345, 'closed': datetime.datetime(2021, 1, 4, 6, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 29, 21, 26, 24, tzinfo=datetime.timezone.utc), 'time_taken': 466176.0, 'time_delta': '5 days, 9:29:36', 'additions': 185, 'deletions': 99, 'state': 'closed'}, {'id': 546616789, 'number': 2344, 'closed': datetime.datetime(2021, 1, 4, 13, 44, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 29, 20, 3, 35, tzinfo=datetime.timezone.utc), 'time_taken': 495641.0, 'time_delta': '5 days, 17:40:41', 'additions': 530, 'deletions': 492, 'state': 'closed'}, {'id': 545536342, 'number': 2317, 'closed': datetime.datetime(2020, 12, 28, 6, 44, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 25, 7, 5, 22, tzinfo=datetime.timezone.utc), 'time_taken': 257966.0, 'time_delta': '2 days, 23:39:26', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 542112225, 'number': 2289, 'closed': datetime.datetime(2020, 12, 24, 9, 50, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 17, 20, 38, 13, tzinfo=datetime.timezone.utc), 'time_taken': 565951.0, 'time_delta': '6 days, 13:12:31', 'additions': 260, 'deletions': 61, 'state': 'closed'}, {'id': 541102966, 'number': 2274, 'closed': datetime.datetime(2021, 8, 14, 10, 12, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 16, 11, 39, 53, tzinfo=datetime.timezone.utc), 'time_taken': 20817140.0, 'time_delta': '240 days, 22:32:20', 'additions': 35, 'deletions': 1, 'state': 'closed'}, {'id': 540086152, 'number': 2264, 'closed': datetime.datetime(2020, 12, 23, 9, 31, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 15, 8, 55, 37, tzinfo=datetime.timezone.utc), 'time_taken': 693360.0, 'time_delta': '8 days, 0:36:00', 'additions': 30, 'deletions': 4, 'state': 'closed'}, {'id': 538476817, 'number': 2254, 'closed': datetime.datetime(2021, 1, 3, 11, 12, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 12, 21, 5, 45, tzinfo=datetime.timezone.utc), 'time_taken': 1865213.0, 'time_delta': '21 days, 14:06:53', 'additions': 159, 'deletions': 5, 'state': 'closed'}, {'id': 535709084, 'number': 2247, 'closed': datetime.datetime(2020, 12, 11, 5, 44, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 10, 6, 58, 10, tzinfo=datetime.timezone.utc), 'time_taken': 81956.0, 'time_delta': '22:45:56', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 535380930, 'number': 2244, 'closed': datetime.datetime(2020, 12, 22, 3, 15, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 9, 18, 31, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1068265.0, 'time_delta': '12 days, 8:44:25', 'additions': 305, 'deletions': 20, 'state': 'closed'}, {'id': 535170114, 'number': 2240, 'closed': datetime.datetime(2020, 12, 10, 3, 14, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 9, 13, 13, 38, tzinfo=datetime.timezone.utc), 'time_taken': 50447.0, 'time_delta': '14:00:47', 'additions': 224, 'deletions': 0, 'state': 'closed'}, {'id': 533773681, 'number': 2233, 'closed': datetime.datetime(2021, 1, 8, 7, 16, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 7, 15, 55, tzinfo=datetime.timezone.utc), 'time_taken': 2733693.0, 'time_delta': '31 days, 15:21:33', 'additions': 319, 'deletions': 40, 'state': 'closed'}, {'id': 532343753, 'number': 2225, 'closed': datetime.datetime(2020, 12, 4, 9, 15, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 4, 7, 16, 28, tzinfo=datetime.timezone.utc), 'time_taken': 7118.0, 'time_delta': '1:58:38', 'additions': 9, 'deletions': 22, 'state': 'closed'}, {'id': 530327778, 'number': 2203, 'closed': datetime.datetime(2020, 12, 4, 8, 15, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 1, 14, 8, 47, tzinfo=datetime.timezone.utc), 'time_taken': 237981.0, 'time_delta': '2 days, 18:06:21', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 529592593, 'number': 2195, 'closed': datetime.datetime(2020, 12, 4, 9, 11, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 30, 14, 38, 13, tzinfo=datetime.timezone.utc), 'time_taken': 325989.0, 'time_delta': '3 days, 18:33:09', 'additions': 23, 'deletions': 7, 'state': 'closed'}, {'id': 528727860, 'number': 2191, 'closed': datetime.datetime(2020, 11, 30, 7, 33, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 27, 17, 38, 17, tzinfo=datetime.timezone.utc), 'time_taken': 222925.0, 'time_delta': '2 days, 13:55:25', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 528727848, 'number': 2190, 'closed': datetime.datetime(2020, 11, 30, 7, 26, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 27, 17, 38, 15, tzinfo=datetime.timezone.utc), 'time_taken': 222524.0, 'time_delta': '2 days, 13:48:44', 'additions': 19, 'deletions': 1, 'state': 'closed'}, {'id': 528206496, 'number': 2183, 'closed': datetime.datetime(2020, 11, 30, 8, 14, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 26, 17, 35, 40, tzinfo=datetime.timezone.utc), 'time_taken': 311959.0, 'time_delta': '3 days, 14:39:19', 'additions': 28, 'deletions': 1, 'state': 'closed'}, {'id': 528035785, 'number': 2181, 'closed': datetime.datetime(2020, 12, 1, 5, 37, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 26, 12, 10, 24, tzinfo=datetime.timezone.utc), 'time_taken': 408437.0, 'time_delta': '4 days, 17:27:17', 'additions': 10, 'deletions': 6, 'state': 'closed'}, {'id': 527537720, 'number': 2169, 'closed': datetime.datetime(2020, 11, 26, 11, 44, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 25, 15, 47, 8, tzinfo=datetime.timezone.utc), 'time_taken': 71833.0, 'time_delta': '19:57:13', 'additions': 12, 'deletions': 4, 'state': 'closed'}, {'id': 526462405, 'number': 2165, 'closed': datetime.datetime(2021, 1, 21, 2, 40, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 24, 13, 0, 29, tzinfo=datetime.timezone.utc), 'time_taken': 4973992.0, 'time_delta': '57 days, 13:39:52', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 526140398, 'number': 2162, 'closed': datetime.datetime(2020, 11, 25, 4, 53, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 24, 3, 7, 32, tzinfo=datetime.timezone.utc), 'time_taken': 92768.0, 'time_delta': '1 day, 1:46:08', 'additions': 118, 'deletions': 0, 'state': 'closed'}, {'id': 525813474, 'number': 2159, 'closed': datetime.datetime(2020, 11, 23, 17, 5, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 23, 15, 34, 7, tzinfo=datetime.timezone.utc), 'time_taken': 5500.0, 'time_delta': '1:31:40', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 524353582, 'number': 2129, 'closed': datetime.datetime(2020, 11, 23, 13, 19, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 20, 1, 46, 50, tzinfo=datetime.timezone.utc), 'time_taken': 300733.0, 'time_delta': '3 days, 11:32:13', 'additions': 221, 'deletions': 0, 'state': 'closed'}, {'id': 523581776, 'number': 2125, 'closed': datetime.datetime(2020, 11, 23, 17, 6, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 18, 23, 48, 27, tzinfo=datetime.timezone.utc), 'time_taken': 407880.0, 'time_delta': '4 days, 17:18:00', 'additions': 659, 'deletions': 0, 'state': 'closed'}, {'id': 522368819, 'number': 2124, 'closed': datetime.datetime(2020, 11, 23, 14, 59, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 17, 12, 22, 38, tzinfo=datetime.timezone.utc), 'time_taken': 527783.0, 'time_delta': '6 days, 2:36:23', 'additions': 428, 'deletions': 0, 'state': 'closed'}, {'id': 522047901, 'number': 2122, 'closed': datetime.datetime(2020, 11, 18, 5, 34, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 16, 23, 59, 40, tzinfo=datetime.timezone.utc), 'time_taken': 106482.0, 'time_delta': '1 day, 5:34:42', 'additions': 20, 'deletions': 15, 'state': 'closed'}, {'id': 518957877, 'number': 2103, 'closed': datetime.datetime(2020, 11, 11, 6, 17, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 11, 5, 33, 12, tzinfo=datetime.timezone.utc), 'time_taken': 2630.0, 'time_delta': '0:43:50', 'additions': 14, 'deletions': 13, 'state': 'closed'}, {'id': 518951344, 'number': 2102, 'closed': datetime.datetime(2020, 11, 11, 5, 15, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 11, 5, 15, 11, tzinfo=datetime.timezone.utc), 'time_taken': 3.0, 'time_delta': '0:00:03', 'additions': 14, 'deletions': 13, 'state': 'closed'}]"
