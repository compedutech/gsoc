pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
420855106,Setup Github Actions,"<!--
  - Thanks for submitting code to Oppiabot! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Setup github actions.
## Checklist
- [x] I have successfully deployed my own instance of Oppiabot.
  - You can find instructions for doing this [here](https://github.com/oppia/oppiabot/wiki/Deploying-your-own-instance-of-the-oppiabot).
- [x] I have manually tested all the changes made in this PR following the [manual tests matrix](https://github.com/oppia/oppiabot/wiki/Manual-Tests-Matrix).
",True,69,https://api.github.com/repos/oppia/oppiabot/pulls/69,https://github.com/oppia/oppiabot/pull/69,closed,26785,113,7,27,15,19,0,1,[],2020-05-20 16:14:41+00:00,2020-06-12 15:31:22+00:00,1984601.0,"22 days, 23:16:41","[{'comment_id': 431865114, 'comment_body': ""Let us have this change in the issue labelled check PR. This isn't required for setup."", 'comment_created': datetime.datetime(2020, 5, 28, 14, 10, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 431866218, 'comment_body': 'Rename it to `userWhitelist.json`. Also, we should add this in the checks PR, why is it required for setup?', 'comment_created': datetime.datetime(2020, 5, 28, 14, 12, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 431871835, 'comment_body': 'Add high-level comments to explain the purpose of file. Copyright license as well.', 'comment_created': datetime.datetime(2020, 5, 28, 14, 20, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 431873554, 'comment_body': 'How does the pre-commit work -- is it automatically building and updating if there are updates? We should also add a message for the user so that they do not revert these changes. ', 'comment_created': datetime.datetime(2020, 5, 28, 14, 22, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 431907527, 'comment_body': 'Revert.', 'comment_created': datetime.datetime(2020, 5, 28, 15, 2, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 432825860, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 30, 9, 19, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 432826124, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 30, 9, 23, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 432826156, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2020, 5, 30, 9, 24, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 432826402, 'comment_body': 'We are using [husky](https://www.npmjs.com/package/husky) for the pre-commit check. On line 65, we tell husky to call lint-staged before a commit is made.\r\nThen [lint-staged](https://www.npmjs.com/package/lint-staged) checks if the changed files pass the regex defined in line 59 (if a file in the actions directory was changed) and calls `npm run update-actions-build` which rebuilds the actions file and automatically adds it to the commit.', 'comment_created': datetime.datetime(2020, 5, 30, 9, 29, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 432826436, 'comment_body': ""True.\r\nI'll be removing it from here."", 'comment_created': datetime.datetime(2020, 5, 30, 9, 29, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 432934101, 'comment_body': 'Period in end.', 'comment_created': datetime.datetime(2020, 5, 31, 10, 50, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 432934109, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 5, 31, 10, 51, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 432934169, 'comment_body': 'What about this? Did you try the regex based check that we discussed?', 'comment_created': datetime.datetime(2020, 5, 31, 10, 51, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 433178820, 'comment_body': ""I'm getting a weird error from while getting the diff.\r\nHere's the error log: https://pastebin.com/yb6iqnUY\r\n\r\nThe command I'm running is `git diff --no-index dist_file_path new_build_file` from node.\r\nRunning this normally gives the expected output"", 'comment_created': datetime.datetime(2020, 6, 1, 11, 21, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 433179463, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 11, 23, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 433179491, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 11, 23, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 436143754, 'comment_body': 'Thanks for the explanation.', 'comment_created': datetime.datetime(2020, 6, 5, 20, 15, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 436144543, 'comment_body': 'Hmm, did you look into what can be causing the error? Can we try adding a catch block to the promise to handle any errors like this? One other way could be to use a custom function which accepts two string args and finds the diff between them.', 'comment_created': datetime.datetime(2020, 6, 5, 20, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 439312271, 'comment_body': 'Following discussion via chat, we resolved to stick to just the pre commit hook.', 'comment_created': datetime.datetime(2020, 6, 12, 9, 30, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}]","[{'commit_sha': 'd84ba1a758ee1b66d524e6b751a60c2c798ae211', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb01dc471393d55ec9c8b475e6e3d466d1bcdeec', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bfbfa2ee52bdcb4139811bab6e420a7ae71e4ae', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bb2508cf0d3564203317d3177dedb3831240062', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3adfb831ce5f7078427bed916f54196a7a01fee5', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '343b551a80b77ce1fc78a2ca11ac7d53b398b431', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d250327aa9ec97629ed80d75eb3bdbabc43302f', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87189b77be2ce6021c1a36195ed0a70570439e4f', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7502ad74aae7644967a6a97cdfef04317eb6293d', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e91272adac8c0d533012e21d40995d9030cb533', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd673147c62f14d498e0bdd729f2e3f1154938704', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aff8c430fcd8bd5c552aeb98a4d91431828577b6', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e028c6c93cc5258de40a746df402261885f3952', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9d3be471c6b383a682893f51be4a7438587ffa3', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe878f4571908e7aafe24cd83875d410f0e69ff6', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4871595585b3a19a86eb860b61dc79d4ef77212e', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4ec2da8f0c032096abe8eb23e907e9975ae347d', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e95d880f9389dda0fd378faa1697e472005787e', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88e5e2e63382f572264349cf71c7a1b3b40d2c12', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daba97032797286bbad01f0975ceda157807769e', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89d7262d0f95e1b787ba982d74e9cd46ff6be6a5', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd918b3e656bc2ec33d0cfc3de51692bad9582632', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c205662066d01e877decd8e78aa596754c1d1ea2', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5209b8a4e434a52eeb9e39855683fa1d8a8cda6d', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85b1f5bbe55aec55859638dfe11bc0bb7f7fdb4d', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c8642e95476845881467368496d39bbace6c7bf', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2162d42b10cfb57ce5573a31dcce815625593d7', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}]",James James,31052489,jamesjay4199@gmail.com,User,,77,,24,47
433990450,Actions: Handling Issues labeled,"<!--
  - Thanks for submitting code to Oppiabot! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->

## Checklist
- [ ] I have successfully deployed my own instance of Oppiabot.
  - You can find instructions for doing this [here](https://github.com/oppia/oppiabot/wiki/Deploying-your-own-instance-of-the-oppiabot).
- [ ] I have manually tested all the changes made in this PR following the [manual tests matrix](https://github.com/oppia/oppiabot/wiki/Manual-Tests-Matrix).
",True,82,https://api.github.com/repos/oppia/oppiabot/pulls/82,https://github.com/oppia/oppiabot/pull/82,closed,857,2,7,12,5,30,0,1,[],2020-06-13 10:43:51+00:00,2020-06-22 20:59:19+00:00,814528.0,"9 days, 10:15:28","[{'comment_id': 442089865, 'comment_body': 'Can we do this similar to how we handle oppiabot based checks -- i.e. check for repo first and based on that trigger the test (maintain a checklist in `constants.js`)?', 'comment_created': datetime.datetime(2020, 6, 18, 9, 21, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 442090869, 'comment_body': 'Break after opening bracket.', 'comment_created': datetime.datetime(2020, 6, 18, 9, 22, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 442091038, 'comment_body': 'File to handle checks when a issue is labeled.', 'comment_created': datetime.datetime(2020, 6, 18, 9, 23, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 442094118, 'comment_body': 'Rename to `handleGoodFirstIssueLabel`.', 'comment_created': datetime.datetime(2020, 6, 18, 9, 28, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 442095052, 'comment_body': '`until he does so` -> `until it is approved`', 'comment_created': datetime.datetime(2020, 6, 18, 9, 29, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 442095372, 'comment_body': 'Let us also assign the team lead to the issue so that they do not miss the ping.', 'comment_created': datetime.datetime(2020, 6, 18, 9, 30, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 442097820, 'comment_body': 'Remove new line.', 'comment_created': datetime.datetime(2020, 6, 18, 9, 34, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 442097883, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 6, 18, 9, 34, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 442098587, 'comment_body': ""Add a test for a valid label as well and ensure that the label isn't removed."", 'comment_created': datetime.datetime(2020, 6, 18, 9, 36, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 442753140, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 19, 10, 9, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 442753337, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 19, 10, 10, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 442753559, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 19, 10, 10, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 442754798, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 19, 10, 13, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 442755029, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 19, 10, 13, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 442757050, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 19, 10, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 442757864, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 19, 10, 19, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 442757927, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 19, 10, 19, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 442761954, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 19, 10, 28, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 442838956, 'comment_body': 'Let us add full sentences: `I am removing the label for now and looping in @x to approve the label. It will be added back if approved. Thanks!`', 'comment_created': datetime.datetime(2020, 6, 19, 13, 25, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 442839298, 'comment_body': 'Full stop in end and end the comment with a `Thanks!`', 'comment_created': datetime.datetime(2020, 6, 19, 13, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 442839425, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 26, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 442840027, 'comment_body': 'Remove other.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 27, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 442840152, 'comment_body': 'Ditto - Remove other.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 28, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 442853977, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 53, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 442854740, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 55, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 442855405, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 56, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 442856153, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 57, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 442856260, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 57, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 442871598, 'comment_body': 'Let us have a test for ensuring that the check does not run for non-whitelisted repo.', 'comment_created': datetime.datetime(2020, 6, 19, 14, 26, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 442877012, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 19, 14, 36, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}]","[{'commit_sha': 'd84ba1a758ee1b66d524e6b751a60c2c798ae211', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb01dc471393d55ec9c8b475e6e3d466d1bcdeec', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bfbfa2ee52bdcb4139811bab6e420a7ae71e4ae', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bb2508cf0d3564203317d3177dedb3831240062', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f5076583cc4e54599584eabe09b604e124006e8', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a75bf46e39345513a6b80cda820d5a9b8d988a39', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fedef47f7cc39f0ed6e6ccaf77fb643e99bfef3', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a280ab76374da0c514fe6f6d0521c562c0cbce4', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43ad5c64e283f881d39aca3d5258b8633879771d', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e89a4577f1f368e17c4c8d108527d0024894f564', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c23cbba543b66a8c8638c5598752fbb972e5ef5', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8a96735a59cc0e1d27d0ee99b57f7bb97eb9c2d', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}]",James James,31052489,jamesjay4199@gmail.com,User,,77,,24,47
438721989,Github Actions: Issue Assigned Check,"<!--
  - Thanks for submitting code to Oppiabot! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
Checks when a user gets assigned to an issue.
Functionality has been tested here: https://github.com/jameesjohn/comment-on-pr/issues/35
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->

## Checklist
- [ ] I have successfully deployed my own instance of Oppiabot.
  - You can find instructions for doing this [here](https://github.com/oppia/oppiabot/wiki/Deploying-your-own-instance-of-the-oppiabot).
- [ ] I have manually tested all the changes made in this PR following the [manual tests matrix](https://github.com/oppia/oppiabot/wiki/Manual-Tests-Matrix).
",True,93,https://api.github.com/repos/oppia/oppiabot/pulls/93,https://github.com/oppia/oppiabot/pull/93,closed,342576,24030,8,36,1,24,0,1,[],2020-06-23 17:39:51+00:00,2020-06-25 07:31:05+00:00,136274.0,"1 day, 13:51:14","[{'comment_id': 444416629, 'comment_body': 'Let us add the copyright here as well.', 'comment_created': datetime.datetime(2020, 6, 23, 18, 14, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 444417033, 'comment_body': 'Also, rename the file to `checkIssueAssignee.js`.', 'comment_created': datetime.datetime(2020, 6, 23, 18, 15, 17, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 444417247, 'comment_body': 'Assignees -> Assignee', 'comment_created': datetime.datetime(2020, 6, 23, 18, 15, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 444418206, 'comment_body': 'This should be non assigned right?', 'comment_created': datetime.datetime(2020, 6, 23, 18, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 444418404, 'comment_body': 'assigned action', 'comment_created': datetime.datetime(2020, 6, 23, 18, 17, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 444418970, 'comment_body': 'This should also have a test to ensure that check is not run for non-whitelisted repos.', 'comment_created': datetime.datetime(2020, 6, 23, 18, 19, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 444419586, 'comment_body': 'We should be checking for error here, right? As we do for probot: https://github.com/oppia/oppiabot/blob/master/lib/apiForSheets.js#L105', 'comment_created': datetime.datetime(2020, 6, 23, 18, 20, 17, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 444435696, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 23, 18, 49, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 444436272, 'comment_body': ""This is implemented differently. We are not using the call back approach, and hence the error won't be thrown here."", 'comment_created': datetime.datetime(2020, 6, 23, 18, 50, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 444436418, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 23, 18, 50, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 444436874, 'comment_body': 'Yup\r\nDone.', 'comment_created': datetime.datetime(2020, 6, 23, 18, 51, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 444437034, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 23, 18, 51, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 444438385, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 23, 18, 54, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 444638273, 'comment_body': 'Can you explain the difference? Let us also add a comment for the same.', 'comment_created': datetime.datetime(2020, 6, 24, 4, 31, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 444638463, 'comment_body': 'Handler to check issue assigned event.', 'comment_created': datetime.datetime(2020, 6, 24, 4, 32, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 444638638, 'comment_body': 'Check that it is called for issue assigned event.', 'comment_created': datetime.datetime(2020, 6, 24, 4, 33, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 444766500, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 24, 9, 29, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 444768012, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 24, 9, 32, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 444776003, 'comment_body': ""Rethinking this, I don't think that' necessary since other tests are doing this (checking that it is called for issue assigned event)."", 'comment_created': datetime.datetime(2020, 6, 24, 9, 47, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 444790483, 'comment_body': '@ankita240796, this is where the error could be thrown for sheets.\r\nI will wrap this in a try-catch block to handle the error. ', 'comment_created': datetime.datetime(2020, 6, 24, 10, 13, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 444798824, 'comment_body': ""I've implemented this such that we catch the error in a try-catch block. See https://github.com/oppia/oppiabot/pull/93#discussion_r444790483. Thanks."", 'comment_created': datetime.datetime(2020, 6, 24, 10, 29, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 444864011, 'comment_body': 'Let us add a comment to explain why this block is within try catch.', 'comment_created': datetime.datetime(2020, 6, 24, 12, 41, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 444864150, 'comment_body': 'Ok, makes sense.', 'comment_created': datetime.datetime(2020, 6, 24, 12, 41, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 444961328, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 24, 15, 1, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}]","[{'commit_sha': 'd84ba1a758ee1b66d524e6b751a60c2c798ae211', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb01dc471393d55ec9c8b475e6e3d466d1bcdeec', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bfbfa2ee52bdcb4139811bab6e420a7ae71e4ae', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bb2508cf0d3564203317d3177dedb3831240062', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3adfb831ce5f7078427bed916f54196a7a01fee5', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '343b551a80b77ce1fc78a2ca11ac7d53b398b431', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d250327aa9ec97629ed80d75eb3bdbabc43302f', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87189b77be2ce6021c1a36195ed0a70570439e4f', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7502ad74aae7644967a6a97cdfef04317eb6293d', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e91272adac8c0d533012e21d40995d9030cb533', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd673147c62f14d498e0bdd729f2e3f1154938704', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aff8c430fcd8bd5c552aeb98a4d91431828577b6', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e028c6c93cc5258de40a746df402261885f3952', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9d3be471c6b383a682893f51be4a7438587ffa3', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe878f4571908e7aafe24cd83875d410f0e69ff6', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4871595585b3a19a86eb860b61dc79d4ef77212e', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4ec2da8f0c032096abe8eb23e907e9975ae347d', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e95d880f9389dda0fd378faa1697e472005787e', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88e5e2e63382f572264349cf71c7a1b3b40d2c12', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daba97032797286bbad01f0975ceda157807769e', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89d7262d0f95e1b787ba982d74e9cd46ff6be6a5', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd918b3e656bc2ec33d0cfc3de51692bad9582632', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c205662066d01e877decd8e78aa596754c1d1ea2', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5209b8a4e434a52eeb9e39855683fa1d8a8cda6d', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85b1f5bbe55aec55859638dfe11bc0bb7f7fdb4d', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b05b504671928f09690f842549446d2548d2616', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8151b69e377aaac6f6ed518d762ffb7924cb6860', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5fcee7c572c35a70e720f670d21f37f7ab33d83', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0c4a3ab01dccfda5d70216811169f8ec3ffb216', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f91274269d1e5d8da2be2bcc201b0a6d5ae33598', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00c8b8151167ee19c21d5256ba86c91708ddc722', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fec37856c72799e1a609187fee0764c9ff42ab8', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f910ec659d8a61981fdb1c045589417049430928', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '505a5fdd382a4358db3093f1baa4d36e2e46116f', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29c3a7413be92ad46348e2b90fe2f431bdf9fd57', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7be1278097af1a3c69de8fe891d9f1ea868ac049', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}]",James James,31052489,jamesjay4199@gmail.com,User,,77,,24,47
419415531,WIP / Draft PRs check,"<!--
  - Thanks for submitting code to Oppiabot! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Checks that no PR has WIP in the title or body.
Also, checks that draft PRs are not made.
## Checklist
- [x] I have successfully deployed my own instance of Oppiabot.
  - You can find instructions for doing this [here](https://github.com/oppia/oppiabot/wiki/Deploying-your-own-instance-of-the-oppiabot).
- [x] I have manually tested all the changes made in this PR following the [manual tests matrix](https://github.com/oppia/oppiabot/wiki/Manual-Tests-Matrix).
",True,65,https://api.github.com/repos/oppia/oppiabot/pulls/65,https://github.com/oppia/oppiabot/pull/65,closed,831,0,4,5,4,8,0,0,[],2020-05-18 10:41:21+00:00,2020-05-20 05:50:42+00:00,155361.0,"1 day, 19:09:21","[{'comment_id': 427467419, 'comment_body': 'Break after opening bracket.', 'comment_created': datetime.datetime(2020, 5, 19, 17, 16, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 427467870, 'comment_body': 'closePRParams', 'comment_created': datetime.datetime(2020, 5, 19, 17, 17, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 427468437, 'comment_body': 'You can reopen it .... and ensure that it is without any WIP phrase in title or body.', 'comment_created': datetime.datetime(2020, 5, 19, 17, 18, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 427483279, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 19, 17, 41, 19, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 427484778, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 19, 17, 43, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 427486220, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 19, 17, 45, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 427567836, 'comment_body': 'Are we doing these tests only for edited case, why not open and re-opened as well?', 'comment_created': datetime.datetime(2020, 5, 19, 20, 5, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 427754661, 'comment_body': 'Added test for opened and reopened.', 'comment_created': datetime.datetime(2020, 5, 20, 5, 45, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}]","[{'commit_sha': 'd9172cd3f7529622fca070011ed5d67c4382ee61', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f6076c0e7ebfd8e9cac0af95ba6a70f828c334a', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a167f8cc82693e9b02ea81c547a124b1754786ac', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce2a6f1d18bf5623c583c631319a10d76037e62f', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51c8a1b7ad7306f598389ec2b0e88c41a6b9a15d', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}]",James James,31052489,jamesjay4199@gmail.com,User,,77,,24,47
423773810,Update WIP / Draft check to check for skip prefix in commit messages,"<!--
  - Thanks for submitting code to Oppiabot! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
Update WIP / Draft check to check for skip prefix in commit messages
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->

## Checklist
- [x] I have successfully deployed my own instance of Oppiabot.
  - You can find instructions for doing this [here](https://github.com/oppia/oppiabot/wiki/Deploying-your-own-instance-of-the-oppiabot).
- [x] I have manually tested all the changes made in this PR following the [manual tests matrix](https://github.com/oppia/oppiabot/wiki/Manual-Tests-Matrix).
",True,74,https://api.github.com/repos/oppia/oppiabot/pulls/74,https://github.com/oppia/oppiabot/pull/74,closed,205,32,2,3,4,17,0,0,[],2020-05-27 11:02:35+00:00,2020-06-01 11:54:58+00:00,435143.0,"5 days, 0:52:23","[{'comment_id': 431917210, 'comment_body': 'Make it more relevant like `commit withou skip prefix`', 'comment_created': datetime.datetime(2020, 5, 28, 15, 16, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 431917405, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 5, 28, 15, 16, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 431917538, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 5, 28, 15, 16, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 431917627, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 5, 28, 15, 16, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 431917705, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 5, 28, 15, 16, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 431917809, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 5, 28, 15, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 431928451, 'comment_body': 'Have you updated this documentation as well?', 'comment_created': datetime.datetime(2020, 5, 28, 15, 31, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 431929423, 'comment_body': '[skip ci] is allowed as well.', 'comment_created': datetime.datetime(2020, 5, 28, 15, 32, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 432825269, 'comment_body': 'Yes I did https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#wip--draft-pull-requests', 'comment_created': datetime.datetime(2020, 5, 30, 9, 8, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 432825356, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 30, 9, 10, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 432825458, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2020, 5, 30, 9, 12, 19, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 432825487, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 30, 9, 12, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 432825511, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 30, 9, 13, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 432825532, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 30, 9, 13, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 432825541, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 30, 9, 13, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 432825547, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 30, 9, 14, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 432934348, 'comment_body': 'Add a link to the travis and circle ci documentation as well in the wiki:\r\n\r\n1. https://docs.travis-ci.com/user/customizing-the-build/#skipping-a-build\r\n2.  https://circleci.com/docs/2.0/skip-build/#skipping-a-build', 'comment_created': datetime.datetime(2020, 5, 31, 10, 53, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}]","[{'commit_sha': '524a25b27080174ad05651dd5a82920787126d56', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa35115000ca462ff8f4eefb2bfc249780e49d9a', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49f3868117b897351c4a360f3c88451219a5da6f', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}]",James James,31052489,jamesjay4199@gmail.com,User,,77,,24,47
421354383,"Prevent PRs from develop, test and release branches","<!--
  - Thanks for submitting code to Oppiabot! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Prevent PRs from develop, test and release branches.
This feature has been tested at https://github.com/jameesjohn/comment-on-pr/pull/20
## Checklist
- [x] I have successfully deployed my own instance of Oppiabot.
  - You can find instructions for doing this [here](https://github.com/oppia/oppiabot/wiki/Deploying-your-own-instance-of-the-oppiabot).
- [x] I have manually tested all the changes made in this PR following the [manual tests matrix](https://github.com/oppia/oppiabot/wiki/Manual-Tests-Matrix).
",True,70,https://api.github.com/repos/oppia/oppiabot/pulls/70,https://github.com/oppia/oppiabot/pull/70,closed,271,0,3,10,3,11,0,1,[],2020-05-21 13:32:50+00:00,2020-05-23 14:39:13+00:00,176783.0,"2 days, 1:06:23","[{'comment_id': 428653663, 'comment_body': 'Modified to use the nyc binary since this was giving some issues with windows (it was opening the nyc file).', 'comment_created': datetime.datetime(2020, 5, 21, 13, 33, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 428686444, 'comment_body': ""Branch won't be changed when a PR is re-opened -- so why do we need this test here? (One use case is only for the first time when this check is added and a PR is opened & closed before addition of test and reopened after addition of test -- but I don't think that is very important since it will only be useful for initial run)."", 'comment_created': datetime.datetime(2020, 5, 21, 14, 27, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 428686837, 'comment_body': ""`branchName === prefix` - this isn't required, right? The second condition will work for both cases."", 'comment_created': datetime.datetime(2020, 5, 21, 14, 28, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 428687363, 'comment_body': '`In the meantime, I will be closing this` -> `So, this PR is being closed.` Can we add a wiki link where we have these instructions?', 'comment_created': datetime.datetime(2020, 5, 21, 14, 29, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 428688657, 'comment_body': 'Update with master - I made this change to fix CI tests.', 'comment_created': datetime.datetime(2020, 5, 21, 14, 31, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 429062821, 'comment_body': 'But the PR author might try to reopen the PR after oppiabot closed it.', 'comment_created': datetime.datetime(2020, 5, 22, 6, 20, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 429063113, 'comment_body': 'True.\r\nRemoved.', 'comment_created': datetime.datetime(2020, 5, 22, 6, 21, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 429064861, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 22, 6, 27, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 429067749, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 22, 6, 36, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 429519117, 'comment_body': 'Add a comment for the same.', 'comment_created': datetime.datetime(2020, 5, 23, 6, 20, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 429542768, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 23, 12, 41, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}]","[{'commit_sha': 'c6bed9ac4b0086c3de0b0280367bbcd9cddab3a8', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2c73e996f476a85481269aee35376c24056b57f', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb33fd19d7d195f678ec210eb597f7d73adc0493', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bf55256e258acebeb5797d9b396e83d0f124d80', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cb5ff6ce1239fe3357daeb82e7cf40a4be5547d', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '895ed0d29bf8d6f4cd8df6e37bff96c31a69a9d8', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b100e1cc2aca832f830f6b3ca58badbfc6203bd1', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '514ecd6f683509fb032fa9077b42cb55fcdff82b', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0d44dea59c6830c3f983ff8e49bef49406d63c7', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91b1d67c0a0da07a0e2253323fc622fd4546f750', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}]",James James,31052489,jamesjay4199@gmail.com,User,,77,,24,47
426559418,Fix #50: Check pull request for job files,"<!--
  - Thanks for submitting code to Oppiabot! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
This PR checks for modification of job files and the job registry in a pull request.
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
This PR has been tested at https://github.com/jameesjohn/comment-on-pr/pull/31, https://github.com/jameesjohn/comment-on-pr/pull/32


## Checklist
- [x] I have successfully deployed my own instance of Oppiabot.
  - You can find instructions for doing this [here](https://github.com/oppia/oppiabot/wiki/Deploying-your-own-instance-of-the-oppiabot).
- [x] I have manually tested all the changes made in this PR following the [manual tests matrix](https://github.com/oppia/oppiabot/wiki/Manual-Tests-Matrix).
",True,78,https://api.github.com/repos/oppia/oppiabot/pulls/78,https://github.com/oppia/oppiabot/pull/78,closed,864,33,11,18,8,102,0,1,[],2020-06-02 12:42:47+00:00,2020-06-17 19:23:46+00:00,1320059.0,"15 days, 6:40:59","[{'comment_id': 436153458, 'comment_body': 'Define these outside the function.', 'comment_created': datetime.datetime(2020, 6, 5, 20, 38, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 436153629, 'comment_body': 'What does FIX represent here?', 'comment_created': datetime.datetime(2020, 6, 5, 20, 39, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 436154012, 'comment_body': 'to get tested on the test server -> to be tested on the backup server. This PR can be merged only after the test is successful.', 'comment_created': datetime.datetime(2020, 6, 5, 20, 40, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 436154765, 'comment_body': 'endeavour to fill the -> fill the.\r\n\r\nAlso, provide a link to the wiki page with instructions for new jobs: https://github.com/oppia/oppia/wiki/Running-jobs-in-production#submitting-a-pr-with-a-new-job.', 'comment_created': datetime.datetime(2020, 6, 5, 20, 42, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 436155559, 'comment_body': 'We should also add the critical label to the PR.', 'comment_created': datetime.datetime(2020, 6, 5, 20, 44, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 436156095, 'comment_body': 'What if a job file is being modified but no new job is introduced? There can be a case when an issue is being fixed or some variables are being renamed. We only need the test procedure for new jobs.\r\n\r\nFurther, we need to have a check which ensures that whenever a new job is added, the name of the job is added to jobs_registry file.', 'comment_created': datetime.datetime(2020, 6, 5, 20, 45, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 436156885, 'comment_body': 'Also, can we mark such PRs as unmergeable until approved by Server jobs admin?\r\n\r\n\\cc @seanlip @nithusha21 @DubeySandeep', 'comment_created': datetime.datetime(2020, 6, 5, 20, 47, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 436590714, 'comment_body': ""I wasn't sure of what to name since this isn't a prefix or suffix."", 'comment_created': datetime.datetime(2020, 6, 8, 10, 11, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 436592861, 'comment_body': 'We may not be able to check the exact content of the job_registry file. What we can do is to ensure that a new job file is accompanied with a change in the job_registry.', 'comment_created': datetime.datetime(2020, 6, 8, 10, 15, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 437354556, 'comment_body': 'I think what we should do here is to assign the pr to the server jobs admin.', 'comment_created': datetime.datetime(2020, 6, 9, 12, 3, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 437456654, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 6, 9, 14, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 437459819, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 9, 14, 19, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 437460224, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 9, 14, 19, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 437462715, 'comment_body': ""> We may not be able to check the exact content of the job_registry file. What we can do is to ensure that a new job file is accompanied with a change in the job_registry.\r\n\r\nI've been able to do this."", 'comment_created': datetime.datetime(2020, 6, 9, 14, 23, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 437663679, 'comment_body': 'Revert.', 'comment_created': datetime.datetime(2020, 6, 9, 19, 22, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 437664039, 'comment_body': 'Space after brackets.', 'comment_created': datetime.datetime(2020, 6, 9, 19, 22, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 437664526, 'comment_body': 'Why this change?', 'comment_created': datetime.datetime(2020, 6, 9, 19, 23, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 437665727, 'comment_body': 'We should not have terminating `,` in an array list in JavaScript. Revert here and below.', 'comment_created': datetime.datetime(2020, 6, 9, 19, 26, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 437667288, 'comment_body': 'I am a bit confused on what this function is doing, are you obtaining the name of a job being added or the name of the file without any dir paths in it? Can you add some examples in comments and update the name of the function accordingly if it is being used to obtain file name without extensions.', 'comment_created': datetime.datetime(2020, 6, 9, 19, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 437668477, 'comment_body': '`registryFile` -> `registryFileIsPresent`', 'comment_created': datetime.datetime(2020, 6, 9, 19, 31, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 437668908, 'comment_body': 'Any specific reason to choose 100 here, just curious?', 'comment_created': datetime.datetime(2020, 6, 9, 19, 32, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 437671122, 'comment_body': 'We can have one more case, a new job being added in an existing job file, right?', 'comment_created': datetime.datetime(2020, 6, 9, 19, 36, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 437671403, 'comment_body': 'Declare `critical` as a constant and use here.', 'comment_created': datetime.datetime(2020, 6, 9, 19, 36, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 437671663, 'comment_body': '`server job` -> `one off job`', 'comment_created': datetime.datetime(2020, 6, 9, 19, 37, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 437672603, 'comment_body': 'Add a link to the guide on jobs:  https://github.com/oppia/oppia/wiki/Running-jobs-in-production#submitting-a-pr-with-a-new-job.', 'comment_created': datetime.datetime(2020, 6, 9, 19, 39, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 437672653, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 6, 9, 19, 39, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 437673543, 'comment_body': 'Please add the new job...', 'comment_created': datetime.datetime(2020, 6, 9, 19, 40, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 437673897, 'comment_body': 'Can we use this to obtain the content of the file?', 'comment_created': datetime.datetime(2020, 6, 9, 19, 41, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 437867995, 'comment_body': 'That makes sense. Let us do that.', 'comment_created': datetime.datetime(2020, 6, 10, 5, 26, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 437988300, 'comment_body': 'It is getting the name of the job from the file name and the name of the job does not include the file extension.', 'comment_created': datetime.datetime(2020, 6, 10, 9, 28, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 437989272, 'comment_body': ""This gets the registry file. It's not boolean. It can be `undefined` if the registry file is not present."", 'comment_created': datetime.datetime(2020, 6, 10, 9, 29, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 437990166, 'comment_body': '100 is the maximum that can be returned from the API https://octokit.github.io/rest.js/v16#pulls-list-files.', 'comment_created': datetime.datetime(2020, 6, 10, 9, 31, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 437991006, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 10, 9, 32, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 437997836, 'comment_body': 'I noticed that nodemon was not restarting when the implementation code changed so adding `.` tells nodemon to watch the directory for the files which are expected (.js, .ts, .json) files.', 'comment_created': datetime.datetime(2020, 6, 10, 9, 44, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 437998797, 'comment_body': 'Hmmm...\r\nHence we need to check if a new class gets created in the existing job file?', 'comment_created': datetime.datetime(2020, 6, 10, 9, 45, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 437999506, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 10, 9, 46, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438000688, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 10, 9, 48, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438012813, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 10, 10, 9, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438012837, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 10, 10, 9, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438014586, 'comment_body': 'Probably\r\nThe changes in the file are in the `patch`', 'comment_created': datetime.datetime(2020, 6, 10, 10, 13, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438028854, 'comment_body': 'Missed this one.', 'comment_created': datetime.datetime(2020, 6, 10, 10, 41, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438029301, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 6, 10, 10, 42, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438029414, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 6, 10, 10, 42, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438029820, 'comment_body': 'Can you add an example in the comments?', 'comment_created': datetime.datetime(2020, 6, 10, 10, 43, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438030019, 'comment_body': 'Ok, Thanks for explaining.', 'comment_created': datetime.datetime(2020, 6, 10, 10, 43, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438030099, 'comment_body': 'Add a comment.', 'comment_created': datetime.datetime(2020, 6, 10, 10, 43, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438030249, 'comment_body': 'Yes.', 'comment_created': datetime.datetime(2020, 6, 10, 10, 43, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438030360, 'comment_body': 'Ok, Thanks for doing this!', 'comment_created': datetime.datetime(2020, 6, 10, 10, 44, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438030712, 'comment_body': 'Ok, so we can use `patch` for finding new jobs being added in an existing file, right?', 'comment_created': datetime.datetime(2020, 6, 10, 10, 44, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438030940, 'comment_body': 'Space after brackets.', 'comment_created': datetime.datetime(2020, 6, 10, 10, 45, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438031359, 'comment_body': '`When pull request creates a new job file` -> `When a new job file is created in a pull request`', 'comment_created': datetime.datetime(2020, 6, 10, 10, 46, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438031483, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 6, 10, 10, 46, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438031645, 'comment_body': 'firstNewJobFileObj', 'comment_created': datetime.datetime(2020, 6, 10, 10, 46, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438032012, 'comment_body': '`When pull request creates a new job file and updates registry` -> `When  a new job file is created and registry is updated in a pull request`', 'comment_created': datetime.datetime(2020, 6, 10, 10, 47, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438032474, 'comment_body': 'We will need to refactor this into two cases:\r\n\r\n1. No new job being added in an existing job file\r\n2. New job being added in an existing job file', 'comment_created': datetime.datetime(2020, 6, 10, 10, 48, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438032627, 'comment_body': 'When no job file is modified in a pull request', 'comment_created': datetime.datetime(2020, 6, 10, 10, 48, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438043804, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 10, 11, 11, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438044088, 'comment_body': 'Done.\r\nMy formatter added these.', 'comment_created': datetime.datetime(2020, 6, 10, 11, 12, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438045013, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 10, 11, 14, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438052034, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 10, 11, 28, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438052604, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 10, 11, 29, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438149299, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 10, 14, 6, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438159265, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 10, 14, 19, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438159365, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 10, 14, 19, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438159581, 'comment_body': 'Yes.\r\nDone', 'comment_created': datetime.datetime(2020, 6, 10, 14, 19, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438163441, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 10, 14, 24, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438163875, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 10, 14, 25, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438164766, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 10, 14, 26, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438200670, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 10, 15, 12, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438200979, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 10, 15, 12, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438219096, 'comment_body': 'Please remove the comma. here as well.', 'comment_created': datetime.datetime(2020, 6, 10, 15, 36, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438219616, 'comment_body': 'No issues, thanks for fixing! I think a line is still being removed. We should have a new line at file end,right? Let us revert that please.', 'comment_created': datetime.datetime(2020, 6, 10, 15, 36, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438233766, 'comment_body': '100 is used here....', 'comment_created': datetime.datetime(2020, 6, 10, 15, 56, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438233885, 'comment_body': 'gotten -> obtained', 'comment_created': datetime.datetime(2020, 6, 10, 15, 57, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438241855, 'comment_body': 'This should actually be checking that registry contains the job name and not only the filename. If you check the registry file, it has jobs listed in the format `filename.jobname`. So, I would suggest have a function which returns a list of new jobs which are added irrespective of whether it is in a new file or an existing file and then use that list here.', 'comment_created': datetime.datetime(2020, 6, 10, 16, 8, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438243221, 'comment_body': 'A better check would be to also ensure that the class name ends with `OneOffJob`. Obtain the list of all such class names instead of file names. (Example: If you check [prod validation jobs](https://github.com/oppia/oppia/blob/develop/core/domain/prod_validation_jobs_one_off.py), there are classes in the file which are validators and not one off jobs.)', 'comment_created': datetime.datetime(2020, 6, 10, 16, 9, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438711670, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 11, 11, 14, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438711920, 'comment_body': 'There is a new line at the end of the file.', 'comment_created': datetime.datetime(2020, 6, 11, 11, 15, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438717850, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 11, 11, 28, 19, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438718050, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 11, 11, 28, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438718300, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 11, 11, 29, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438728092, 'comment_body': 'Done.\r\nThe function is checking the patch, hence it will only get the new job since that is what we want.', 'comment_created': datetime.datetime(2020, 6, 11, 11, 51, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 438842238, 'comment_body': 'Ah ok I see, there was an extra line. ', 'comment_created': datetime.datetime(2020, 6, 11, 14, 48, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438844105, 'comment_body': 'unneeded items -> class prefix and superclass', 'comment_created': datetime.datetime(2020, 6, 11, 14, 51, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438845049, 'comment_body': 'Rename to `isRegistryUpdated` since it is checking two things whether registry is modified and if modified does it include the new job.', 'comment_created': datetime.datetime(2020, 6, 11, 14, 52, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 438846300, 'comment_body': 'I think you missed this.', 'comment_created': datetime.datetime(2020, 6, 11, 14, 54, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 439300366, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 12, 9, 5, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 439300989, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 12, 9, 6, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 439303788, 'comment_body': 'Oops my bad.\r\nDone.', 'comment_created': datetime.datetime(2020, 6, 12, 9, 12, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 439748590, 'comment_body': 'Let us have a regex instead of this and grab the name using a match group. Would be more readable.', 'comment_created': datetime.datetime(2020, 6, 13, 15, 49, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 439748682, 'comment_body': 'test -> test run is successful. Please refer this guide [link to this guide] for details', 'comment_created': datetime.datetime(2020, 6, 13, 15, 50, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 439748777, 'comment_body': 'to the job registry [Link to jobs_registry.py]', 'comment_created': datetime.datetime(2020, 6, 13, 15, 52, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 440121786, 'comment_body': 'Done.\r\nChanging to regex helped reveal a bug so it was a good call.\r\nThanks.', 'comment_created': datetime.datetime(2020, 6, 15, 11, 53, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 440121930, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 15, 11, 53, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 440121984, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 15, 11, 53, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 440355861, 'comment_body': 'job registry file.', 'comment_created': datetime.datetime(2020, 6, 15, 18, 9, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 440356177, 'comment_body': 'Can we just link to this guide instead of the complete line.', 'comment_created': datetime.datetime(2020, 6, 15, 18, 10, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 440356662, 'comment_body': 'Thanks for doing this!', 'comment_created': datetime.datetime(2020, 6, 15, 18, 11, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 440404388, 'comment_body': ""Yeah...\r\nNitish's article helped a lot."", 'comment_created': datetime.datetime(2020, 6, 15, 19, 41, 20, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 440405237, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 15, 19, 42, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 440406866, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 15, 19, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 441780444, 'comment_body': '@bansalnitish ping :D', 'comment_created': datetime.datetime(2020, 6, 17, 19, 23, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}]","[{'commit_sha': '52408d1d6e2ce2437af9027adf55ee4a9c68c407', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c03544b7efcbe2b65a19c4f572156881dbaa492', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d208c1c2d71707cb5a9627c951eff3fd5a51307', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '602e16c065be75d65268e277ac7baf79522cc815', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd24bacf85bf3ef1176680031b08769e1f4da6c52', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f82ddaf4a5c009a12301c6f3c7f6359b573ef627', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ed8f1b473bc623d1a10d87d913b7cee418a270a', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7180b6f46da1cadb3bb28691716a45097d24152f', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd609743af3ad021d8ae6d574c0064c5fd02ffec1', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fef4ae249e08d6fe093a78487478408bba6f0e74', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1543faf23d35c62f184b28cef53bf4d0ac7b53d8', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65121b613d5f56a26ed14180b56169a9114e0c86', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56285fef08eea5028bd777e8afdc0cca59e50373', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '253064e171741563687ce748b20f1d4d85ce1c99', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '658776e82615bd8e66049f532290af043477b262', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff64a39f43b2da4725f10d34fd6b82d910f0f661', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e16a40968ee2cd674be8f8eb43d967c81fac4b4', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1049892df17ed07c603d25f7c915dc32664181c', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}]",James James,31052489,jamesjay4199@gmail.com,User,,77,,24,47
455381793,Fix #18: PR Template checks,"<!--
  - Thanks for submitting code to Oppiabot! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
Fixes #18: Adds checks to oppiabot that ensures that certain parts of the body of the PR are filled.
The parts include:
1.  A description of the PR.
2. The Linter and Karma check list
3. The ""allow edit by maintainers"" check list.

This PR has been tested at https://github.com/jameesjohn/oppia/pull/33
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->

## Checklist
- [x] I have successfully deployed my own instance of Oppiabot.
  - You can find instructions for doing this [here](https://github.com/oppia/oppiabot/wiki/Deploying-your-own-instance-of-the-oppiabot).
- [x] I have manually tested all the changes made in this PR following the [manual tests matrix](https://github.com/oppia/oppiabot/wiki/Manual-Tests-Matrix).
",True,106,https://api.github.com/repos/oppia/oppiabot/pulls/106,https://github.com/oppia/oppiabot/pull/106,closed,738,2,12,6,1,47,0,1,[],2020-07-22 22:14:05+00:00,2020-07-27 11:38:43+00:00,393878.0,"4 days, 13:24:38","[{'comment_id': 459143623, 'comment_body': 'Declare as constant.', 'comment_created': datetime.datetime(2020, 7, 22, 23, 41, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 459143775, 'comment_body': 'Let us valid and invalid examples as comments for all the checks - will make the code more readable.', 'comment_created': datetime.datetime(2020, 7, 22, 23, 41, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 459143841, 'comment_body': 'Start with capital letter.', 'comment_created': datetime.datetime(2020, 7, 22, 23, 41, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 459143871, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 7, 22, 23, 42, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 459144183, 'comment_body': 'Why not return with the first char as lowercase instead?', 'comment_created': datetime.datetime(2020, 7, 22, 23, 43, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 459144702, 'comment_body': ""This doesn't match the test."", 'comment_created': datetime.datetime(2020, 7, 22, 23, 44, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 459144856, 'comment_body': 'Remove completely.', 'comment_created': datetime.datetime(2020, 7, 22, 23, 45, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 459144992, 'comment_body': ""when linter/karma checks aren't checked."", 'comment_created': datetime.datetime(2020, 7, 22, 23, 45, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 459403719, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 23, 12, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 459404153, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 23, 12, 15, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 459404531, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 23, 12, 16, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 459405410, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 23, 12, 17, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 459405950, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 23, 12, 18, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 459406379, 'comment_body': 'It does. The `bodyWithExplanationAndLint` checks the `linter/karma` check.', 'comment_created': datetime.datetime(2020, 7, 23, 12, 19, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 459406794, 'comment_body': 'Removing this will reduce code coverage. ', 'comment_created': datetime.datetime(2020, 7, 23, 12, 20, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 459408856, 'comment_body': ""I'm not sure I understand what you mean.\r\nDo you mean I should add a comment that shows what the template would look like in each check?"", 'comment_created': datetime.datetime(2020, 7, 23, 12, 24, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460371543, 'comment_body': 'Yes, similar to the ones you have in test files.', 'comment_created': datetime.datetime(2020, 7, 25, 6, 17, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460371584, 'comment_body': 'Add reasoning/examples behind each check - for increased readability.', 'comment_created': datetime.datetime(2020, 7, 25, 6, 18, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460371608, 'comment_body': 'Declare as constant.', 'comment_created': datetime.datetime(2020, 7, 25, 6, 18, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460371615, 'comment_body': 'Declare all constants here.', 'comment_created': datetime.datetime(2020, 7, 25, 6, 18, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460371782, 'comment_body': 'Ah sorry, I meant also add in the description that what is missing - actually just that would be sufficient (in the variable names too).', 'comment_created': datetime.datetime(2020, 7, 25, 6, 20, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460371948, 'comment_body': 'Sorry, I meant remove the word completely.', 'comment_created': datetime.datetime(2020, 7, 25, 6, 23, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460371980, 'comment_body': 'Do we need the swap first char function now?', 'comment_created': datetime.datetime(2020, 7, 25, 6, 23, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460418676, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 25, 16, 6, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460419466, 'comment_body': 'Okay, done.', 'comment_created': datetime.datetime(2020, 7, 25, 16, 14, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460420244, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 25, 16, 23, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460420257, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 25, 16, 23, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460420390, 'comment_body': 'Oh okay.\r\nDone.', 'comment_created': datetime.datetime(2020, 7, 25, 16, 24, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460421357, 'comment_body': '> Do we need the swap first char function now?\r\n\r\nYes. Here, if both ""edit from maintainers"" and ""karma/lint"" are unchecked, then the second message (edit from maintainers) need to start with uppercase.', 'comment_created': datetime.datetime(2020, 7, 25, 16, 34, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460447909, 'comment_body': 'Make 2 a constant as well.', 'comment_created': datetime.datetime(2020, 7, 25, 21, 21, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460447943, 'comment_body': 'Add docstring.', 'comment_created': datetime.datetime(2020, 7, 25, 21, 21, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460448042, 'comment_body': 'Can you please add a comment to explain the same?', 'comment_created': datetime.datetime(2020, 7, 25, 21, 23, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460505998, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 26, 9, 54, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460506175, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 26, 9, 56, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460509699, 'comment_body': ""I was able to refactor it so that we don't need the swap char function again."", 'comment_created': datetime.datetime(2020, 7, 26, 10, 33, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460513387, 'comment_body': 'This should be checked.', 'comment_created': datetime.datetime(2020, 7, 26, 11, 11, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460513429, 'comment_body': 'Make it a constant.', 'comment_created': datetime.datetime(2020, 7, 26, 11, 11, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460513448, 'comment_body': 'Refactor docstring as noun.', 'comment_created': datetime.datetime(2020, 7, 26, 11, 12, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460513464, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 7, 26, 11, 12, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460513468, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 7, 26, 11, 12, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460513530, 'comment_body': 'Remove this?', 'comment_created': datetime.datetime(2020, 7, 26, 11, 13, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460518073, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 26, 11, 55, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460518195, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 26, 11, 57, 3, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460518368, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 26, 11, 58, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460518936, 'comment_body': 'Okay, but we are not checking that here.', 'comment_created': datetime.datetime(2020, 7, 26, 12, 4, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460519682, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 26, 12, 11, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460519874, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 26, 12, 12, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}]","[{'commit_sha': 'b9f2dd85c0c66b8750890328737ac93909360499', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3133a496a0b09bf704d959a9efad8fa22a2fbbcd', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a2a9ce42713589a608de8e9668241e686fa4ea0', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7b881abedd60203229acfc2128d5422b9bc3fe5', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58ae641114ab796934695e7efa79d4549e806521', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97e1d14203d250d3517209eddf53abd1de5040d0', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}]",James James,31052489,jamesjay4199@gmail.com,User,,77,,24,47
450121226,Assign all codeowners when the project owner is not one of the reviewers,"<!--
  - Thanks for submitting code to Oppiabot! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Assign all code owners when the project owner is not one of the reviewers. The work here has been tested at https://github.com/jameesjohn/comment-on-pr/pull/38, https://github.com/jameesjohn/comment-on-pr/pull/40
## Checklist
- [x] I have successfully deployed my own instance of Oppiabot.
  - You can find instructions for doing this [here](https://github.com/oppia/oppiabot/wiki/Deploying-your-own-instance-of-the-oppiabot).
- [x] I have manually tested all the changes made in this PR following the [manual tests matrix](https://github.com/oppia/oppiabot/wiki/Manual-Tests-Matrix).
",True,104,https://api.github.com/repos/oppia/oppiabot/pulls/104,https://github.com/oppia/oppiabot/pull/104,closed,309,34,3,11,3,53,0,1,[],2020-07-16 11:29:54+00:00,2020-07-26 16:53:28+00:00,883414.0,"10 days, 5:23:34","[{'comment_id': 455862594, 'comment_body': 'Break if the line is too long.', 'comment_created': datetime.datetime(2020, 7, 16, 15, 11, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 455862916, 'comment_body': 'Revert.', 'comment_created': datetime.datetime(2020, 7, 16, 15, 12, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 455863580, 'comment_body': 'Add period in end.', 'comment_created': datetime.datetime(2020, 7, 16, 15, 13, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 455864583, 'comment_body': 'Do this only if no one is already assigned to the pull request.', 'comment_created': datetime.datetime(2020, 7, 16, 15, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 455865263, 'comment_body': ""Move to one line:\r\n      {login: 'reviewer1',},\r\n      {login: 'reviewer2',},\r\n      {login: 'reviewer3',},"", 'comment_created': datetime.datetime(2020, 7, 16, 15, 15, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 456303115, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 17, 8, 37, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 456303250, 'comment_body': 'My bad. Done.', 'comment_created': datetime.datetime(2020, 7, 17, 8, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 456303772, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 17, 8, 39, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 456304031, 'comment_body': 'Since this will be done when a PR is created, no one would be assigned to the PR.', 'comment_created': datetime.datetime(2020, 7, 17, 8, 39, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 456304496, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 17, 8, 40, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 456612686, 'comment_body': ""Hmm, How about we don't assign anyone here but just remind the author to assign someone since they will have assigning rights, given they are a codeowner. WDYT?"", 'comment_created': datetime.datetime(2020, 7, 17, 18, 40, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 457272254, 'comment_body': 'Seems good.\r\nI think we should assign the PR author here so they will know that an action is required from them.', 'comment_created': datetime.datetime(2020, 7, 20, 10, 46, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 457277836, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 20, 10, 55, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 457319082, 'comment_body': ""Explain why we don't assign - since they are codeowners - they will have the member access to assign a reviewer."", 'comment_created': datetime.datetime(2020, 7, 20, 12, 1, 17, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 457319262, 'comment_body': 'Ping author.', 'comment_created': datetime.datetime(2020, 7, 20, 12, 1, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 457319361, 'comment_body': 'reviewer(s)', 'comment_created': datetime.datetime(2020, 7, 20, 12, 1, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 457319793, 'comment_body': 'no codeowners -> no codeowners other than the PR author', 'comment_created': datetime.datetime(2020, 7, 20, 12, 2, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 457320632, 'comment_body': 'We will also need to update all the CHANGELOG labels - i.e. remove the project owner names as well as update the check here for verifying if a label is valid (can be done in a separate PR).', 'comment_created': datetime.datetime(2020, 7, 20, 12, 3, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 457990333, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 21, 10, 17, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 457992139, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 21, 10, 20, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 457992407, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 21, 10, 21, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 457992482, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 21, 10, 21, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 457994176, 'comment_body': ""I'd do it in this PR."", 'comment_created': datetime.datetime(2020, 7, 21, 10, 24, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 458001404, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 21, 10, 38, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 458002973, 'comment_body': ""When this PR is merged, I'll update the changelog labels"", 'comment_created': datetime.datetime(2020, 7, 21, 10, 41, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460372340, 'comment_body': 'Make the name more descriptive - from what are the labels excluded, you can add a comment either.', 'comment_created': datetime.datetime(2020, 7, 25, 6, 27, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460372439, 'comment_body': 'Add docstring for what the function checks.', 'comment_created': datetime.datetime(2020, 7, 25, 6, 29, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460372454, 'comment_body': 'Make name descriptive - what are they excluded from?', 'comment_created': datetime.datetime(2020, 7, 25, 6, 29, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460373116, 'comment_body': 'Add a detailed docstring for the function describing the exact flow of how we assign the reviewer.', 'comment_created': datetime.datetime(2020, 7, 25, 6, 38, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460373366, 'comment_body': 'Would it be better to assign just one codeowner - who owns the max number of files?\r\n\r\n\\cc @DubeySandeep @seanlip @bansalnitish @srijanreddy98', 'comment_created': datetime.datetime(2020, 7, 25, 6, 41, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460373393, 'comment_body': 'Also, let us add docstrings for all functions in this file, if missing.', 'comment_created': datetime.datetime(2020, 7, 25, 6, 41, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460373847, 'comment_body': 'Actually scratch that - checking my comment [here](https://github.com/oppia/oppiabot/issues/75#issuecomment-636035937) - not assigning all codeowners will create the issue of PR with no assignee - we plan to tackle that in M3, so we can update this check then. [Add a TODO for the same].', 'comment_created': datetime.datetime(2020, 7, 25, 6, 47, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460424341, 'comment_body': ""This is only done when the changelog label is applied, and the changelog label will almost only be applied just after a PR has been created. So I don't think we need a TODO here."", 'comment_created': datetime.datetime(2020, 7, 25, 17, 7, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460425993, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 25, 17, 25, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460426006, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 25, 17, 25, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460426021, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 25, 17, 25, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460426646, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 25, 17, 33, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460448231, 'comment_body': 'Can you please add docstring for this function as well (and any others)?', 'comment_created': datetime.datetime(2020, 7, 25, 21, 25, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460448283, 'comment_body': 'Write docstrings as nouns - This function is used to obtain....', 'comment_created': datetime.datetime(2020, 7, 25, 21, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460448300, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 7, 25, 21, 26, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460448408, 'comment_body': 'Add a list of bullets as to how we assign - the exact flow:\r\n1. Check for codeowners\r\n2. ...', 'comment_created': datetime.datetime(2020, 7, 25, 21, 27, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460448447, 'comment_body': 'Update docstring as a noun. Here and below.', 'comment_created': datetime.datetime(2020, 7, 25, 21, 28, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460448451, 'comment_body': 'Thanks for adding all these!', 'comment_created': datetime.datetime(2020, 7, 25, 21, 28, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460448526, 'comment_body': 'Ah I mean - we plan to update the flow later as: assign only one codeowner as the main reviewer and then when a ""Needs codeowner approval"" label is added, assign the others. ', 'comment_created': datetime.datetime(2020, 7, 25, 21, 29, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460513430, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 26, 11, 11, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460513518, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 26, 11, 12, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460513540, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 26, 11, 13, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460515482, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 26, 11, 31, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460516005, 'comment_body': ""I think the `needs code owner` approval label should be for cases where the project owner is one of the reviewers. For these, I don't think we need to create a main reviewer since we might be wrong about it in this case."", 'comment_created': datetime.datetime(2020, 7, 26, 11, 36, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460516942, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 26, 11, 44, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 460518704, 'comment_body': 'this PR -> a PR', 'comment_created': datetime.datetime(2020, 7, 26, 12, 1, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460518835, 'comment_body': 'Hmm ok, let us try this and we can update the checks based on user feedback.', 'comment_created': datetime.datetime(2020, 7, 26, 12, 3, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 460521696, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 26, 12, 30, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}]","[{'commit_sha': 'd41a3e2e399199f5557a0e692b12f57784c6260f', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef91adcb306b895010d6a4f3a1628cd2e450a5de', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97902b056c506e77a5c5c15e759fc54373db707d', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '070e0f247b28fcd3743d06394dbaea5a627b13f0', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f58e5e2d1dc814203679c2e3265b0cfd5c08a73d', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'add69afadea6ab84ac3c1d6b0f33846f757d243c', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbeea17d164ae36b99384ae1f1ef3a827c009a2d', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d9e2d139a95c3140fe4129bd5505deabc72c233', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c404d719ffcbb28eb1d5daadc98b43b17278156a', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6d15f0adcaf295aaecccf534302ff1bb68639cd', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae2bc2a61aba7280531246ed04295a5ec7df05ca', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}]",James James,31052489,jamesjay4199@gmail.com,User,,77,,24,47
446830643,Check PRs that introduce new models,"<!--
  - Thanks for submitting code to Oppiabot! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
This pr introduces the functionality of checking for PRs that introduce new models.
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
This PR has been tested at https://github.com/jameesjohn/oppia/pull/31
## Checklist
- [x] I have successfully deployed my own instance of Oppiabot.
  - You can find instructions for doing this [here](https://github.com/oppia/oppiabot/wiki/Deploying-your-own-instance-of-the-oppiabot).
- [x] I have manually tested all the changes made in this PR following the [manual tests matrix](https://github.com/oppia/oppiabot/wiki/Manual-Tests-Matrix).
",True,102,https://api.github.com/repos/oppia/oppiabot/pulls/102,https://github.com/oppia/oppiabot/pull/102,closed,1121,136,17,11,6,47,0,1,[],2020-07-09 12:32:52+00:00,2020-07-20 09:33:58+00:00,939666.0,"10 days, 21:01:06","[{'comment_id': 452302972, 'comment_body': 'Not sure - but does it make sense to perform the model and job check on push event as well?', 'comment_created': datetime.datetime(2020, 7, 9, 15, 27, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 452303121, 'comment_body': 'Also, why on synchronizeEvent?', 'comment_created': datetime.datetime(2020, 7, 9, 15, 27, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 452303321, 'comment_body': 'Add copyright.', 'comment_created': datetime.datetime(2020, 7, 9, 15, 28, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 452304092, 'comment_body': 'We should add this in a utility module and then use in both the libs.', 'comment_created': datetime.datetime(2020, 7, 9, 15, 29, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 452321498, 'comment_body': 'We have a similar function to find new Jobs right, we can merge into a single function which accepts a regex and returns new models/files.', 'comment_created': datetime.datetime(2020, 7, 9, 15, 54, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 452322152, 'comment_body': 'Ditto here - let us try to merge functionality as much as possible into a util module so that it can be used for general purpose.', 'comment_created': datetime.datetime(2020, 7, 9, 15, 55, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 452679807, 'comment_body': ""The synchronize event is triggered after a push to a pull request but while the synchronize event's payload contains the pull request information, the push payload only contains information about the push eg if it is forced."", 'comment_created': datetime.datetime(2020, 7, 10, 7, 47, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 452680685, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 10, 7, 49, 20, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 452719999, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 10, 9, 5, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 452720124, 'comment_body': 'Yup\r\nDone.', 'comment_created': datetime.datetime(2020, 7, 10, 9, 5, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 452735713, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 10, 9, 35, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 453186773, 'comment_body': 'Got it, thanks for explanation!', 'comment_created': datetime.datetime(2020, 7, 11, 11, 43, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 453186813, 'comment_body': 'model -> data storage layer', 'comment_created': datetime.datetime(2020, 7, 11, 11, 44, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 453186927, 'comment_body': 'Break the line if too long.', 'comment_created': datetime.datetime(2020, 7, 11, 11, 45, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 453190149, 'comment_body': 'model -> new data storage model.', 'comment_created': datetime.datetime(2020, 7, 11, 12, 26, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 453190198, 'comment_body': 'Instead of just leads, ping oppia/core-maintainers.', 'comment_created': datetime.datetime(2020, 7, 11, 12, 27, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 453190219, 'comment_body': 'Ditto here.', 'comment_created': datetime.datetime(2020, 7, 11, 12, 27, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 453190513, 'comment_body': 'Let us add this to function to utils as well, you can pass the name of the group/person to ping.', 'comment_created': datetime.datetime(2020, 7, 11, 12, 30, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 453190569, 'comment_body': 'Break the lines here and below.', 'comment_created': datetime.datetime(2020, 7, 11, 12, 31, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 453190729, 'comment_body': ""Let us add a test for this module as well - I know it is being tested indirectly through other modules, but it is good to have a check for each module which isn't dependent on other modules."", 'comment_created': datetime.datetime(2020, 7, 11, 12, 33, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 453340852, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 12, 17, 11, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 453342897, 'comment_body': ""I'm not sure I'd be able to break the line without breaking the regex "", 'comment_created': datetime.datetime(2020, 7, 12, 17, 32, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 453343050, 'comment_body': 'The jobs counterpart pings lots of people and it might lead to bugs trying to support the different functionalities', 'comment_created': datetime.datetime(2020, 7, 12, 17, 34, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 453343314, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 12, 17, 36, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 453343336, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 12, 17, 36, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 453348061, 'comment_body': ""Don't you think this will make more redundant tests?\r\nBecause what will be tested is essentially already tested in the other modules?"", 'comment_created': datetime.datetime(2020, 7, 12, 18, 26, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 453467701, 'comment_body': 'Try this maybe: https://stackoverflow.com/a/12317105', 'comment_created': datetime.datetime(2020, 7, 13, 6, 57, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 453467975, 'comment_body': 'Ah ok, I see we ping both author and the admins there.', 'comment_created': datetime.datetime(2020, 7, 13, 6, 58, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 453468184, 'comment_body': 'I am a bit concerned if I should be the one being assigned for all such pull requests which modify data storage layer. @seanlip should we have some sort of rota here as well?', 'comment_created': datetime.datetime(2020, 7, 13, 6, 59, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 453505960, 'comment_body': 'Hmm, we are actually not testing these functions right, we are testing some other functions which call these functions.', 'comment_created': datetime.datetime(2020, 7, 13, 9, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 453563074, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 13, 10, 47, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 453563356, 'comment_body': 'Yes.', 'comment_created': datetime.datetime(2020, 7, 13, 10, 48, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 453575446, 'comment_body': 'Yes but the only way to test this is in that context. The functions need the regex that is used in the other modules.', 'comment_created': datetime.datetime(2020, 7, 13, 11, 13, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 453610659, 'comment_body': 'Hmm, why? We can pass mock contexts, filenames to check if the functions do the expected task, right?', 'comment_created': datetime.datetime(2020, 7, 13, 12, 23, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 453611002, 'comment_body': 'You missed updating here I think.', 'comment_created': datetime.datetime(2020, 7, 13, 12, 24, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 453611231, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 7, 13, 12, 24, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 453611406, 'comment_body': 'This one is missed.', 'comment_created': datetime.datetime(2020, 7, 13, 12, 25, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 453734298, 'comment_body': 'Yes we can.\r\nDone.', 'comment_created': datetime.datetime(2020, 7, 13, 15, 28, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 453734807, 'comment_body': 'This has been done already', 'comment_created': datetime.datetime(2020, 7, 13, 15, 29, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 453734941, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 13, 15, 29, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 453735167, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 13, 15, 29, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 453910253, 'comment_body': 'All function names should start with third-person plural -- ""add"" not ""adds"". Please check the others too. Also make sure to include docstrings for each function to explain what it is doing, similar to Python.', 'comment_created': datetime.datetime(2020, 7, 13, 20, 24, 20, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 453910981, 'comment_body': 'Actually not for this one. I think it needs to be a bit like code-owners. You and me perhaps? (I would validate the new models and you would validate that there are appropriate validation jobs, the oppiabot message can be clear about this.)', 'comment_created': datetime.datetime(2020, 7, 13, 20, 25, 35, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 454198764, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 14, 8, 41, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 454286501, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 14, 11, 24, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 455027779, 'comment_body': 'Rename this as well.', 'comment_created': datetime.datetime(2020, 7, 15, 12, 53, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 455103930, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 15, 14, 39, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}]","[{'commit_sha': 'ea3094203571543c848bd8257b4fdb2d4e8cefb8', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47cab96a93757b7e1fa9c9ab3f461a3e5b3689bf', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25c0cbce96806289bd537b37fdfd03eba15c8a11', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9f6d1fadbe3f67dfecf43bb1393e7fdbc4b334c', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71d24e4d9f97ee2f5ec74733bd1302c941558992', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d08b133b340f96b1d0c87f96582ef9004600ad0', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a732a72efdb25e033deb6af76f762b60c8c65441', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da92fb18d656fc95ca8aafa04d5509ed91595123', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17bff3b1eb7411eb966f41bafb4a05254aaecd27', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ed23776fc5f17c45fc472bc9e3af1510747d929', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6b4125953d155256de98cfc1c4e5b7c322025f6', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}]",James James,31052489,jamesjay4199@gmail.com,User,,77,,24,47
444627053,Fix #43: Setup force push check,"<!--
  - Thanks for submitting code to Oppiabot! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
Fixes #43: Checks that users do not force push to a pull request.
This has been tested at https://github.com/jameesjohn/comment-on-pr/pull/36
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->

## Checklist
- [x] I have successfully deployed my own instance of Oppiabot.
  - You can find instructions for doing this [here](https://github.com/oppia/oppiabot/wiki/Deploying-your-own-instance-of-the-oppiabot).
- [x] I have manually tested all the changes made in this PR following the [manual tests matrix](https://github.com/oppia/oppiabot/wiki/Manual-Tests-Matrix).
",True,101,https://api.github.com/repos/oppia/oppiabot/pulls/101,https://github.com/oppia/oppiabot/pull/101,closed,590,15,5,4,0,14,0,1,[],2020-07-06 08:42:04+00:00,2020-07-09 12:36:44+00:00,273280.0,"3 days, 3:54:40","[{'comment_id': 450700452, 'comment_body': 'Remove the comma.', 'comment_created': datetime.datetime(2020, 7, 7, 8, 37, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 450700808, 'comment_body': 'Let us rename labelEvent to PRLabelEvent to avoid confusion.', 'comment_created': datetime.datetime(2020, 7, 7, 8, 37, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 450701499, 'comment_body': 'We want this check only for pull requests not for branches directly pushed any time like develop/release branches. Can we skip for that?', 'comment_created': datetime.datetime(2020, 7, 7, 8, 38, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 450705562, 'comment_body': 'Mention the specific point which talks about avoiding force push.', 'comment_created': datetime.datetime(2020, 7, 7, 8, 45, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 450707236, 'comment_body': ""Should we do something to ensure that the check isn't stuck in the while loop for more than x seconds?"", 'comment_created': datetime.datetime(2020, 7, 7, 8, 47, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 450818821, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 7, 12, 15, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 450819763, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 7, 12, 16, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 450837491, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 7, 12, 48, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 450851421, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 7, 13, 10, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 450851736, 'comment_body': ""We can't get a direct link to that point."", 'comment_created': datetime.datetime(2020, 7, 7, 13, 10, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 450877997, 'comment_body': 'Let us add all the events here as well with empty lists.', 'comment_created': datetime.datetime(2020, 7, 7, 13, 48, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 450878672, 'comment_body': 'I meant just add that it is point x specifically.', 'comment_created': datetime.datetime(2020, 7, 7, 13, 49, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 451437811, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 8, 10, 20, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 451442684, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 8, 10, 29, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}]","[{'commit_sha': 'd73cd7f9b9502077c421ebf960c8141f1d0e7031', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dace66b8de51b7419b73852e1f16c0d9ccb82dc3', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f39a669937e4bb1fb26d02f6e1f1b9bfa1ac561f', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cf6a6304193d915d7600e4bb6bf14f33d18f60a', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}]",James James,31052489,jamesjay4199@gmail.com,User,,77,,24,47
444413347,Adds PR label checks.,"<!--
  - Thanks for submitting code to Oppiabot! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
1. Enforce that critical labels can only be removed by the jobs admin and members of the release team.
2. Ensures that issue labels don't get added to pull requests.

This PR has been tested at https://github.com/jameesjohn/oppia/pull/26#issuecomment-653815716, https://github.com/jameesjohn/oppia/pull/26#issuecomment-653817424
## Checklist
- [x] I have successfully deployed my own instance of Oppiabot.
  - You can find instructions for doing this [here](https://github.com/oppia/oppiabot/wiki/Deploying-your-own-instance-of-the-oppiabot).
- [x] I have manually tested all the changes made in this PR following the [manual tests matrix](https://github.com/oppia/oppiabot/wiki/Manual-Tests-Matrix).
",True,100,https://api.github.com/repos/oppia/oppiabot/pulls/100,https://github.com/oppia/oppiabot/pull/100,closed,301,2,5,5,2,9,0,1,[],2020-07-05 14:13:21+00:00,2020-07-09 16:02:09+00:00,352128.0,"4 days, 1:48:48","[{'comment_id': 450673251, 'comment_body': 'Is this line too long, if yes please break.', 'comment_created': datetime.datetime(2020, 7, 7, 7, 47, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 450675671, 'comment_body': 'Update the list to have: nithusha21, aks681, vojtechjelinek, ankita240796, DubeySandeep, BenHenning (Others work as QA co-ordinators.)', 'comment_created': datetime.datetime(2020, 7, 7, 7, 52, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 450676008, 'comment_body': 'Ping @oppia/release-coordinators here as well.', 'comment_created': datetime.datetime(2020, 7, 7, 7, 53, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 450853531, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 7, 13, 13, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 450854273, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 7, 13, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 450862228, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 7, 7, 13, 26, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 450880450, 'comment_body': 'Just add specifically that refer to point x.', 'comment_created': datetime.datetime(2020, 7, 7, 13, 51, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 451436959, 'comment_body': ""@ankita240796 I'm not sure I understand what you mean here. The link takes them to the exact section on labels to be used on pull requests."", 'comment_created': datetime.datetime(2020, 7, 8, 10, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 451452836, 'comment_body': 'Ah ok, sorry I missed that all points are relevant here.', 'comment_created': datetime.datetime(2020, 7, 8, 10, 50, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}]","[{'commit_sha': 'dfeff1e724266e5e06ca6d9c473a7ad4904800b9', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '140d6d5e7f36306bc7661af17e7308b1f16f49d9', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ae26261c9d8c540f3f794a11d81ba612fdefbd1', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f2adc5dd3179b913d1e9b1c013d6d9c85543dbd', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc53f28cd55ecf9c189859329f2e6b0fd0305c7a', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}]",James James,31052489,jamesjay4199@gmail.com,User,,77,,24,47
466829953,New Code owner check,"<!--
  - Thanks for submitting code to Oppiabot! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
Checks when a PR adds a new code owner (who hasn't owned any file previously) and pings the project owner or reviewer.
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
This PR has been tested at https://github.com/jameesjohn/oppia/pull/39
## Checklist
- [x] I have successfully deployed my own instance of Oppiabot.
  - You can find instructions for doing this [here](https://github.com/oppia/oppiabot/wiki/Deploying-your-own-instance-of-the-oppiabot).
- [x] I have manually tested all the changes made in this PR following the [manual tests matrix](https://github.com/oppia/oppiabot/wiki/Manual-Tests-Matrix).
",True,114,https://api.github.com/repos/oppia/oppiabot/pulls/114,https://github.com/oppia/oppiabot/pull/114,closed,723,21,11,9,3,53,0,1,[],2020-08-12 15:00:57+00:00,2020-08-24 11:43:32+00:00,1024955.0,"11 days, 20:42:35","[{'comment_id': 469911024, 'comment_body': 'Why do we synchronize twice?', 'comment_created': datetime.datetime(2020, 8, 13, 12, 23, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 469911420, 'comment_body': 'Should we have this for edit event as well - is the event triggered on files in PR being changed as well?', 'comment_created': datetime.datetime(2020, 8, 13, 12, 24, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 469918633, 'comment_body': 'Line two long, split here and below.', 'comment_created': datetime.datetime(2020, 8, 13, 12, 36, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 469919104, 'comment_body': 'should not', 'comment_created': datetime.datetime(2020, 8, 13, 12, 37, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 469919180, 'comment_body': 'should not', 'comment_created': datetime.datetime(2020, 8, 13, 12, 37, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 469920114, 'comment_body': 'We can skip adding the core-maintainers. Just one of the reviewers should be fine. Also, add a comment to explain that we ping the project owner if changelog label is present otherwise we ping one of the reviewers just to flag the issue. \r\n\r\nAlso, is it possible to link to the lines where new codeowners are added or add comment on all those lines as you were trying for tslint check?', 'comment_created': datetime.datetime(2020, 8, 13, 12, 39, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 470259128, 'comment_body': 'My bad.\r\nI think this error was due to a merge conflict I had.', 'comment_created': datetime.datetime(2020, 8, 13, 21, 28, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 470259500, 'comment_body': 'The edit event is for things like description getting edited or body of the comment getting edited.', 'comment_created': datetime.datetime(2020, 8, 13, 21, 28, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 470262225, 'comment_body': ""> We can skip adding the core-maintainers.\r\n\r\nDone.\r\n\r\n\r\n> Also, is it possible to link to the lines where new codeowners are added or add comment on all those lines as you were trying for tslint check?\r\n\r\nNo, we won't be able to get the exact line that got modified since it is not part of the payload.\r\n"", 'comment_created': datetime.datetime(2020, 8, 13, 21, 34, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 470263833, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 13, 21, 38, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 470264051, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2020, 8, 13, 21, 38, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 470264430, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2020, 8, 13, 21, 39, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 470398626, 'comment_body': 'Ah ok!', 'comment_created': datetime.datetime(2020, 8, 14, 4, 6, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 470399168, 'comment_body': ""`PR CHANGELOG` -  Make it a constant.\r\n\r\nWe can move this to utils as well, there is a similar call in pull request label lib:\r\n```\r\nvar hasChangelogLabel = changelogLabel.toUpperCase().startsWith(\r\n    'PR CHANGELOG');\r\n```"", 'comment_created': datetime.datetime(2020, 8, 14, 4, 8, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 470399444, 'comment_body': 'Ping one of the reviewers since we just want to flag that a new code-owner is added and bring it to the attention of any one of the reviewers.', 'comment_created': datetime.datetime(2020, 8, 14, 4, 10, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 470399953, 'comment_body': 'Hi @reviewer, this PR adds codeOwnerString, we are flagging this, please make sure that the changes are verified by the previous codeowner of the file. Thanks!\r\n\r\nOn further thoughts - we are fetching the existing file, we can actually get the previous code-owners of the file, right? (If it is a new file, then the approach is fine).', 'comment_created': datetime.datetime(2020, 8, 14, 4, 12, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 470400378, 'comment_body': 'How were you doing that for the tslint check then?', 'comment_created': datetime.datetime(2020, 8, 14, 4, 14, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 470584100, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 14, 12, 6, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 470584806, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 14, 12, 8, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 470601328, 'comment_body': 'Yes, but it may be a bit complex to achieve if the changes are for multiple files, with multiple code-owners. ', 'comment_created': datetime.datetime(2020, 8, 14, 12, 45, 19, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 470943300, 'comment_body': 'Ah ok, can you update the comments as discussed in our meeting?', 'comment_created': datetime.datetime(2020, 8, 15, 6, 5, 17, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 471398499, 'comment_body': 'The tslint check was similar to that of the new jobs and new models where the bot comments and give a link to the file.', 'comment_created': datetime.datetime(2020, 8, 17, 10, 51, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 471421449, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 17, 11, 41, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 472049869, 'comment_body': 'Ah ok,  thanks for explaining.', 'comment_created': datetime.datetime(2020, 8, 18, 9, 38, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 472057565, 'comment_body': 'Make `@` a constant.', 'comment_created': datetime.datetime(2020, 8, 18, 9, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 472057631, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 8, 18, 9, 52, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 472059628, 'comment_body': 'Let us mention the file/folder as well for which new codeowner is added in the comment.', 'comment_created': datetime.datetime(2020, 8, 18, 9, 55, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 472059763, 'comment_body': 'Break line if too long.', 'comment_created': datetime.datetime(2020, 8, 18, 9, 55, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 472059954, 'comment_body': 'Make `@` a constant.', 'comment_created': datetime.datetime(2020, 8, 18, 9, 56, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 472114624, 'comment_body': 'Do you think this is required? Since the reviewer can see the entire changes from Github files section.', 'comment_created': datetime.datetime(2020, 8, 18, 11, 43, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 472114945, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 18, 11, 43, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 472115482, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 18, 11, 44, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 472116673, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 18, 11, 46, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 472116738, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 18, 11, 47, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 472143596, 'comment_body': ""Yes, that's right but we want to ensure that nothing is missed due to human error, so it is always better to have an additional flag."", 'comment_created': datetime.datetime(2020, 8, 18, 12, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 474684753, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 21, 13, 7, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 474743715, 'comment_body': ""A bit confused - weren't we going to update this only to run after changelog label is added - let me know if I misunderstood anything here."", 'comment_created': datetime.datetime(2020, 8, 21, 14, 44, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475051801, 'comment_body': 'Yes, that is the case.\r\nHowever, since we are also going to be running this check when the user makes push to the PR, we still need this.', 'comment_created': datetime.datetime(2020, 8, 22, 6, 1, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475052569, 'comment_body': 'Hmm, I did not understand - why not use the changelog label in everycase since we are sure it will be present, right?', 'comment_created': datetime.datetime(2020, 8, 22, 6, 10, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475097199, 'comment_body': 'It may not always be present when a push is made.', 'comment_created': datetime.datetime(2020, 8, 22, 14, 39, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475100648, 'comment_body': 'Ok, so we run this check first time a changelog label is added and any other time whenever a push is made?', 'comment_created': datetime.datetime(2020, 8, 22, 15, 19, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475100748, 'comment_body': 'Explain why.', 'comment_created': datetime.datetime(2020, 8, 22, 15, 20, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475100760, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 8, 22, 15, 20, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475100931, 'comment_body': 'codeowner -> codeowner(s)', 'comment_created': datetime.datetime(2020, 8, 22, 15, 22, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475100935, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 8, 22, 15, 22, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475100999, 'comment_body': 'Declare them as top level constants since they are being repeated in the next function as well.', 'comment_created': datetime.datetime(2020, 8, 22, 15, 23, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475112486, 'comment_body': 'Yes.', 'comment_created': datetime.datetime(2020, 8, 22, 17, 31, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475112716, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 17, 34, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475112900, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 17, 35, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475112913, 'comment_body': 'Yes.', 'comment_created': datetime.datetime(2020, 8, 22, 17, 35, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475113027, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 17, 37, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475113059, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 17, 37, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475113075, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 17, 37, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}]","[{'commit_sha': 'be325126285cc3e7f6740eb14f9514d5171b41ac', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97c6ab447e5dfc93423e2191438bc1d24d1e6971', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a76bb1526dc5084ed1b6ca559fb098250df0ba44', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10c5d80a330919d35a8e24b46e920dae8dc08977', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6745c0202d1f415ac441d39b076931a60de64efe', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bd29b9fe3d9373a8b6b6e04ad444509376cfb92', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99d5bc1f17024631b7eabc8616839c1ba55571b6', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebf59800c821799f85cc5f0dda7c2618019f07d8', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'facc047e5be2cf076534869ad6ffd7d9886c0060', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}]",James James,31052489,jamesjay4199@gmail.com,User,,77,,24,47
464004328,Updates to Merge conflict module,"<!--
  - Thanks for submitting code to Oppiabot! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
This PR does the following:
1. Update Merge conflict check to assign the PR author
2. Comment on all pull requests when a PR with the `require post-merge sync to HEAD` label gets merged.

## Checklist
- [x] I have successfully deployed my own instance of Oppiabot.
  - You can find instructions for doing this [here](https://github.com/oppia/oppiabot/wiki/Deploying-your-own-instance-of-the-oppiabot).
- [x] I have manually tested all the changes made in this PR following the [manual tests matrix](https://github.com/oppia/oppiabot/wiki/Manual-Tests-Matrix).
",True,111,https://api.github.com/repos/oppia/oppiabot/pulls/111,https://github.com/oppia/oppiabot/pull/111,closed,371,15,5,6,0,20,0,0,[],2020-08-06 12:46:03+00:00,2020-08-10 13:21:22+00:00,347719.0,"4 days, 0:35:19","[{'comment_id': 466419483, 'comment_body': '`updateAllPRsLabel` -> `mergeAllPRsWithDevelopLabel`', 'comment_created': datetime.datetime(2020, 8, 6, 13, 39, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 466420751, 'comment_body': 'This function checks whether a PR which requires merge to head for all other PRs is merged. If yes, it adds a comment and assigns authors on all PRs to do the same.', 'comment_created': datetime.datetime(2020, 8, 6, 13, 41, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 466453454, 'comment_body': 'allOpenPullRequests', 'comment_created': datetime.datetime(2020, 8, 6, 14, 27, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 466453629, 'comment_body': 'Link to the change.', 'comment_created': datetime.datetime(2020, 8, 6, 14, 28, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 466454294, 'comment_body': 'Also, I would suggest to update our wiki - the section on labels to explain this label and send a note to oppia-dev.', 'comment_created': datetime.datetime(2020, 8, 6, 14, 28, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 466987623, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 7, 11, 41, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 466987916, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 7, 11, 42, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 466988127, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 7, 11, 43, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 466991837, 'comment_body': '> Link to the change.\r\n\r\nDone.\r\n\r\n> Also, I would suggest to update our wiki - the section on labels to explain this label and send a note to oppia-dev.\r\n\r\nYes. This will be done after the PR is merged.', 'comment_created': datetime.datetime(2020, 8, 7, 11, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 467262308, 'comment_body': 'I would suggest update the wiki just before merge and add a small section on the label and how to merge your branch with develop (Similar to first instruction [here](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#address-review-comments-until-all-reviewers-give-lgtm-looks-good-to-me)). Then update this comment to include instructions on merging the branch with develop, will be helpful for new contributors. \r\n\r\nJust add one extra line line in comment, For instructions, refer this [Link to section you added].', 'comment_created': datetime.datetime(2020, 8, 7, 20, 49, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 467262994, 'comment_body': 'Just wanted to confirm - what if the PR author is accidentally not assigned on a PR with a merge conflict label, do we assign them if we find this case?', 'comment_created': datetime.datetime(2020, 8, 7, 20, 51, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 467583706, 'comment_body': ""I've updated the wiki: https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#labeling-issues-and-pull-requests.\r\n\r\nThere is already an instruction on merging a branch with develop in the wiki: https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change (the first point)."", 'comment_created': datetime.datetime(2020, 8, 9, 13, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 467589350, 'comment_body': ""Initially, no. I've updated it to do that."", 'comment_created': datetime.datetime(2020, 8, 9, 14, 20, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 467765655, 'comment_body': 'Is this expected?', 'comment_created': datetime.datetime(2020, 8, 10, 8, 48, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 467766592, 'comment_body': ""Can you please add link to that here as a pointer for new contributors who don't know about merging?"", 'comment_created': datetime.datetime(2020, 8, 10, 8, 49, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 467766749, 'comment_body': 'Break line, too long.', 'comment_created': datetime.datetime(2020, 8, 10, 8, 50, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 467767071, 'comment_body': 'Please check the complete file, to break lines if they are too long.', 'comment_created': datetime.datetime(2020, 8, 10, 8, 50, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 467882179, 'comment_body': 'No, my bad.\r\nI used this file to modify the wiki and I mistakenly committed it.', 'comment_created': datetime.datetime(2020, 8, 10, 12, 54, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 467884724, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 10, 12, 58, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 467887787, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 10, 13, 4, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}]","[{'commit_sha': '8769f13fb2b90edca010486825158c21d0ad3398', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6bb7439bd374e170b479680deb0c63c96c71860', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'def1435923f1af326fe8ba37547bd583c887de9d', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dc675c76cc9a660dede3b001489c1998ac77690', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a475bd2f4a13a8a1e7547d6c0df8b800a7f79bf2', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '962c4fd84c6b64ee700f74f6dff21ab7113ea067', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}]",James James,31052489,jamesjay4199@gmail.com,User,,77,,24,47
463365471,Oppiabots response when a PR fails a check suite,"<!--
  - Thanks for submitting code to Oppiabot! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Comments on the PR and assigns the PR author when the PR fails a check suite.
This feature has been tested at https://github.com/jameesjohn/comment-on-pr/pull/41
## Checklist
- [x] I have successfully deployed my own instance of Oppiabot.
  - You can find instructions for doing this [here](https://github.com/oppia/oppiabot/wiki/Deploying-your-own-instance-of-the-oppiabot).
- [x] I have manually tested all the changes made in this PR following the [manual tests matrix](https://github.com/oppia/oppiabot/wiki/Manual-Tests-Matrix).
",True,110,https://api.github.com/repos/oppia/oppiabot/pulls/110,https://github.com/oppia/oppiabot/pull/110,closed,535,2,5,5,2,14,0,0,[],2020-08-05 12:55:13+00:00,2020-08-10 14:29:12+00:00,437639.0,"5 days, 1:33:59","[{'comment_id': 466345802, 'comment_body': 'File overview.', 'comment_created': datetime.datetime(2020, 8, 6, 11, 27, 17, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 466345898, 'comment_body': 'This function checks for...', 'comment_created': datetime.datetime(2020, 8, 6, 11, 27, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 466347084, 'comment_body': 'I did not understand this part - are you talking about the failure which happens when we merge to develop before running tests?', 'comment_created': datetime.datetime(2020, 8, 6, 11, 30, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 466347233, 'comment_body': 'Just to confirm - this will work for circleci, travis, github actions?', 'comment_created': datetime.datetime(2020, 8, 6, 11, 30, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 466347585, 'comment_body': 'Can we also add a link to the failing test?', 'comment_created': datetime.datetime(2020, 8, 6, 11, 31, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 466347808, 'comment_body': 'Also, add in the comment that if you think that the test is a flake please file an issue before restarting.', 'comment_created': datetime.datetime(2020, 8, 6, 11, 31, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 466964625, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 7, 10, 46, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 466964756, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 7, 10, 46, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 466965010, 'comment_body': 'Yes, it will.', 'comment_created': datetime.datetime(2020, 8, 7, 10, 47, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 466965793, 'comment_body': 'Some checks fail in develop due to a PR being merged. These checks are not affiliated to any pull request since they happened on the develop branch, and as a result, will lead to an empty pull_requests array from the payload.', 'comment_created': datetime.datetime(2020, 8, 7, 10, 48, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 466980869, 'comment_body': ""> Also, add in the comment that if you think that the test is a flake please file an issue before restarting.\r\n\r\nDone\r\n\r\n> Can we also add a link to the failing test?\r\n\r\nNo, because what we are listening to is the check suite and not the individual check run.\r\nI didn't think it will be okay for oppiabot to comment on every failing test which is why I'm checking for a failure in the check suite. "", 'comment_created': datetime.datetime(2020, 8, 7, 11, 25, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 467263755, 'comment_body': 'Ah ok - thanks for explaining. Add your reply to the comment in file as well.', 'comment_created': datetime.datetime(2020, 8, 7, 20, 53, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 467265280, 'comment_body': 'Ok, makes sense.', 'comment_created': datetime.datetime(2020, 8, 7, 20, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 467550251, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 9, 7, 48, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}]","[{'commit_sha': '388eb3fb3c5651b83720a958d829dfe987e033f8', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37afc563eb9ff3eee9b3942b251cd937edf220ff', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd24ca15376401c3080afef08afd95f8bca997b9', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0035a244096b1d1d62fadeeb96e12679862ff71e', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '977f5f7c09ce63b0cab5690aef8a6ceeb5704feb', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}]",James James,31052489,jamesjay4199@gmail.com,User,,77,,24,47
470800656,Implement PR reviewed checks,"<!--
  - Thanks for submitting code to Oppiabot! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
This PR implements the checks that are to be done when a PR gets reviewed. 
1. Reviewer reviews and approves
   - Bot unassigns reviewer and assigns next reviewer(s)(if any).
   - If all reviewers have approved, bot checks if the user has merging rights and assigns user if that is the case or otherwise assigns one of the reviewers.
2. Reviewer reviews and requests changes
   - Bot unassigns reviewer and assigns the user

This functionality has been tested at https://github.com/jameesjohn/comment-on-pr/pull/8#pullrequestreview-470136286
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->

## Checklist
- [x] I have successfully deployed my own instance of Oppiabot.
  - You can find instructions for doing this [here](https://github.com/oppia/oppiabot/wiki/Deploying-your-own-instance-of-the-oppiabot).
- [x] I have manually tested all the changes made in this PR following the [manual tests matrix](https://github.com/oppia/oppiabot/wiki/Manual-Tests-Matrix).
",True,116,https://api.github.com/repos/oppia/oppiabot/pulls/116,https://github.com/oppia/oppiabot/pull/116,closed,1926,24,9,17,3,113,0,1,[],2020-08-20 09:58:50+00:00,2020-08-28 19:45:33+00:00,726403.0,"8 days, 9:46:43","[{'comment_id': 474747156, 'comment_body': 'Add a brief comment to explain why we excluded them.', 'comment_created': datetime.datetime(2020, 8, 21, 14, 50, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 474747331, 'comment_body': '`@` -> Constant', 'comment_created': datetime.datetime(2020, 8, 21, 14, 50, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 474747665, 'comment_body': 'Declare 3 minutes as constant.', 'comment_created': datetime.datetime(2020, 8, 21, 14, 51, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 474747993, 'comment_body': 'Explain what the function does to handle the changes requested review.', 'comment_created': datetime.datetime(2020, 8, 21, 14, 51, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 474748261, 'comment_body': 'What changes, do you mean in the 3 minutes we pause?', 'comment_created': datetime.datetime(2020, 8, 21, 14, 52, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 474750907, 'comment_body': ""So, in the comment we should also say that we are unassigning @reviewer since the review is done (if we unassign them - they already haven't unassigned themselves.)"", 'comment_created': datetime.datetime(2020, 8, 21, 14, 56, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 474751068, 'comment_body': 'Docstring is wrong.', 'comment_created': datetime.datetime(2020, 8, 21, 14, 56, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 474751152, 'comment_body': '3 minutes -> constant', 'comment_created': datetime.datetime(2020, 8, 21, 14, 56, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 474751473, 'comment_body': 'This is repetition, have a separate function to handle this.', 'comment_created': datetime.datetime(2020, 8, 21, 14, 57, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 474752564, 'comment_body': 'Break if too long.', 'comment_created': datetime.datetime(2020, 8, 21, 14, 59, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 474752835, 'comment_body': 'Add a comment too - unassigning @x since pr is approved.', 'comment_created': datetime.datetime(2020, 8, 21, 14, 59, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 474753258, 'comment_body': ""Add a comment as to why we can't directly check from the pull request payload that it is approved by all reviewers."", 'comment_created': datetime.datetime(2020, 8, 21, 15, 0, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 474753779, 'comment_body': '204 -> constant', 'comment_created': datetime.datetime(2020, 8, 21, 15, 0, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 474754194, 'comment_body': 'We should create comment here too asking author to merge the PR.', 'comment_created': datetime.datetime(2020, 8, 21, 15, 1, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 474754484, 'comment_body': 'Make the states as constants.', 'comment_created': datetime.datetime(2020, 8, 21, 15, 1, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 474755293, 'comment_body': 'One other thing - there are cases some times when the reviewer approves the PR but requests a minor change along with it (As I do sometimes on your PR :P). Is there any way to check that?\r\n\r\n', 'comment_created': datetime.datetime(2020, 8, 21, 15, 2, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475052357, 'comment_body': 'Yes', 'comment_created': datetime.datetime(2020, 8, 22, 6, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475092423, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 13, 41, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475092493, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 13, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475092871, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 13, 47, 3, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475092904, 'comment_body': 'Modified.', 'comment_created': datetime.datetime(2020, 8, 22, 13, 47, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475092911, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 13, 47, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475093473, 'comment_body': 'Refactored it to be done in the `handlePullRequestReview` function.', 'comment_created': datetime.datetime(2020, 8, 22, 13, 54, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475094226, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 14, 3, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475094612, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 14, 7, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475094631, 'comment_body': 'No, we may not be able to check this accurately.', 'comment_created': datetime.datetime(2020, 8, 22, 14, 8, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475094715, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 14, 9, 23, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475094743, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 14, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475094916, 'comment_body': 'They are set as constants.', 'comment_created': datetime.datetime(2020, 8, 22, 14, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475095036, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 14, 13, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475095116, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 14, 14, 20, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475096416, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 14, 30, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475101332, 'comment_body': 'Good job, thanks for adding this!', 'comment_created': datetime.datetime(2020, 8, 22, 15, 26, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475101778, 'comment_body': ""Hmm, let us do one thing then - Add a note in comment for whoever is the final assignee to merge the PR: `Please ensure that no comments are pending from the author's end.`"", 'comment_created': datetime.datetime(2020, 8, 22, 15, 31, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475101786, 'comment_body': 'Please make sure you merge the PR since the author does not have merging rights.', 'comment_created': datetime.datetime(2020, 8, 22, 15, 31, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475101789, 'comment_body': 'Please make sure you merge the PR.', 'comment_created': datetime.datetime(2020, 8, 22, 15, 32, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475101946, 'comment_body': 'check type of review', 'comment_created': datetime.datetime(2020, 8, 22, 15, 34, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475101971, 'comment_body': 'Use constant.', 'comment_created': datetime.datetime(2020, 8, 22, 15, 34, 17, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475102026, 'comment_body': 'Why not in the previous suite itself?', 'comment_created': datetime.datetime(2020, 8, 22, 15, 34, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475102063, 'comment_body': 'check type of review (here and below)', 'comment_created': datetime.datetime(2020, 8, 22, 15, 35, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475102090, 'comment_body': 'Use constant here and below.', 'comment_created': datetime.datetime(2020, 8, 22, 15, 35, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475102117, 'comment_body': 'Can check in previous test case itself.', 'comment_created': datetime.datetime(2020, 8, 22, 15, 36, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475102140, 'comment_body': 'Here and below.', 'comment_created': datetime.datetime(2020, 8, 22, 15, 36, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475102224, 'comment_body': 'One more case: reviewer not assigned, pr author assigned?', 'comment_created': datetime.datetime(2020, 8, 22, 15, 37, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475102267, 'comment_body': 'Check for line lengths, not sure if they are too long (throughout the file). Break at 81 characters.', 'comment_created': datetime.datetime(2020, 8, 22, 15, 38, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475102396, 'comment_body': 'Fine having it as it as well - just a suggestion.', 'comment_created': datetime.datetime(2020, 8, 22, 15, 39, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475102460, 'comment_body': 'One more - should not assign pr author.', 'comment_created': datetime.datetime(2020, 8, 22, 15, 40, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475102483, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 8, 22, 15, 40, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475102501, 'comment_body': 'Why 2 times?', 'comment_created': datetime.datetime(2020, 8, 22, 15, 40, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475102530, 'comment_body': 'Should not assign author case.', 'comment_created': datetime.datetime(2020, 8, 22, 15, 41, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475102717, 'comment_body': 'Is the description correct?', 'comment_created': datetime.datetime(2020, 8, 22, 15, 43, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475115035, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 17, 59, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475115158, 'comment_body': ""I'm not really sure about this considering the author/reviewer might need to wait for CI checks to be complete before merge."", 'comment_created': datetime.datetime(2020, 8, 22, 18, 0, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475115231, 'comment_body': ""I'm not really sure about this considering the author/reviewer might need to wait for CI checks to be complete before merge."", 'comment_created': datetime.datetime(2020, 8, 22, 18, 1, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475115312, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 18, 2, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475115368, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 18, 3, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475115559, 'comment_body': 'No specific reason. Moved.', 'comment_created': datetime.datetime(2020, 8, 22, 18, 5, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475115563, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 18, 5, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475115577, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 18, 6, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475115692, 'comment_body': 'Okay, moved.', 'comment_created': datetime.datetime(2020, 8, 22, 18, 7, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475116407, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2020, 8, 22, 18, 15, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475116945, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 18, 21, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475117116, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2020, 8, 22, 18, 23, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475117230, 'comment_body': 'only one comment should be added (that of the PR author).', 'comment_created': datetime.datetime(2020, 8, 22, 18, 24, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475118495, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 18, 39, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475118543, 'comment_body': 'I believe so. I can modify it to when reviewer is not assigned.', 'comment_created': datetime.datetime(2020, 8, 22, 18, 39, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475118692, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 22, 18, 41, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475145108, 'comment_body': '...this PR is ready to be merged. We are assigning you since the author does not have merging rights. Please make sure...', 'comment_created': datetime.datetime(2020, 8, 22, 22, 35, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475145143, 'comment_body': 'Ah sorry, my bad.', 'comment_created': datetime.datetime(2020, 8, 22, 22, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475145417, 'comment_body': 'Remove extra space after starting quote.', 'comment_created': datetime.datetime(2020, 8, 22, 22, 39, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475145550, 'comment_body': ""Also, shouldn't this be: when all reviewers have approved and none are assigned?"", 'comment_created': datetime.datetime(2020, 8, 22, 22, 41, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475145623, 'comment_body': 'One more case - LGTM label is not added, but one of the reviewers is already assigned - are we handling that?', 'comment_created': datetime.datetime(2020, 8, 22, 22, 42, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 475476985, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 24, 9, 44, 23, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475479086, 'comment_body': 'Yep. Updated.', 'comment_created': datetime.datetime(2020, 8, 24, 9, 48, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 475496417, 'comment_body': ""If the LGTM label is not added, we add the label. If one of the reviewers is already assigned, I'll update the code to not assign any other person."", 'comment_created': datetime.datetime(2020, 8, 24, 10, 20, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 476497594, 'comment_body': 'Make `PR CHANGELOG` a constant.', 'comment_created': datetime.datetime(2020, 8, 25, 14, 34, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476500300, 'comment_body': 'Why are we moving this to utils?', 'comment_created': datetime.datetime(2020, 8, 25, 14, 37, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476500888, 'comment_body': 'Is this function being used anywhere else other than check pull req label module?', 'comment_created': datetime.datetime(2020, 8, 25, 14, 38, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476501715, 'comment_body': 'Since the pull request has been approved, we add the LGTM label.', 'comment_created': datetime.datetime(2020, 8, 25, 14, 39, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476504694, 'comment_body': 'We can remove the console.log, I think.\r\n\r\nAlso, we should add a comment before returning, asking the assignee for merging.\r\n\r\nAnd why not just check membership of the assignees instead of comparing them to reviewer?', 'comment_created': datetime.datetime(2020, 8, 25, 14, 43, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476504892, 'comment_body': 'closed -> constant.', 'comment_created': datetime.datetime(2020, 8, 25, 14, 43, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476505933, 'comment_body': 'One more case - not assign PR author.', 'comment_created': datetime.datetime(2020, 8, 25, 14, 44, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476506575, 'comment_body': ""Can you add an example - comment isn't that clear."", 'comment_created': datetime.datetime(2020, 8, 25, 14, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476506909, 'comment_body': 'and pr author cannot merge', 'comment_created': datetime.datetime(2020, 8, 25, 14, 46, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476562273, 'comment_body': ""I think this was done before I decided to assign the last reviewer. I'll move it back here."", 'comment_created': datetime.datetime(2020, 8, 25, 16, 2, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 476563744, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 25, 16, 4, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 476571109, 'comment_body': '> We can remove the console.log, I think.\r\n\r\nRemoved.\r\n\r\n> And why not just check membership of the assignees instead of comparing them to reviewer?\r\n\r\nI believe all reviewers should have merging rights, right?\r\n\r\n> Also, we should add a comment before returning, asking the assignee for merging.\r\n\r\nComment added.', 'comment_created': datetime.datetime(2020, 8, 25, 16, 15, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 476571698, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 25, 16, 16, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 476572572, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 25, 16, 17, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 476572721, 'comment_body': 'No, Removed.', 'comment_created': datetime.datetime(2020, 8, 25, 16, 18, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 476580047, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 25, 16, 29, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 476581890, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 25, 16, 32, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 476582389, 'comment_body': ""I'm not sure how the example to add since this can only be noticed from the payload. I've modified the comment though."", 'comment_created': datetime.datetime(2020, 8, 25, 16, 32, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 476777432, 'comment_body': 'Make this into constant.', 'comment_created': datetime.datetime(2020, 8, 25, 21, 58, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476777493, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 8, 25, 21, 58, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476778338, 'comment_body': 'Make it a top level constant.', 'comment_created': datetime.datetime(2020, 8, 25, 21, 59, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476782606, 'comment_body': 'assigning -> pinging', 'comment_created': datetime.datetime(2020, 8, 25, 22, 4, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 477206719, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 26, 10, 44, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 477206799, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 26, 10, 44, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 477211617, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 26, 10, 54, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 477211885, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 26, 10, 54, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 478170373, 'comment_body': 'What if label is added but no one is assigned?', 'comment_created': datetime.datetime(2020, 8, 27, 6, 17, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 478171942, 'comment_body': 'This is a bit confusing - can we be sure that the assignee has merging rights?\r\n\r\nWhy not do this instead - get list of assignees and check if any one of them has merging rights.\r\n\r\nIf yes - leave a comment asking them to do the merge.\r\nIf no - assign the reviewer.\r\n\r\nThis is simpler and more readable as well.', 'comment_created': datetime.datetime(2020, 8, 27, 6, 19, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 478666320, 'comment_body': 'Modified to continue check.', 'comment_created': datetime.datetime(2020, 8, 27, 20, 7, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 478692740, 'comment_body': 'Following discussions offline, we resolved to only assign the project owner if the author does not have merging rights since we are sure that all pull requests will have a changelog label.', 'comment_created': datetime.datetime(2020, 8, 27, 21, 0, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479348098, 'comment_body': 'has been approved -> has LGTM label', 'comment_created': datetime.datetime(2020, 8, 28, 14, 37, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479357398, 'comment_body': 'assigning the PR author to the pull request on creation if created without a changelog label  --> assigning the PR author to the pull request if it is created without changelog label', 'comment_created': datetime.datetime(2020, 8, 28, 14, 52, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479360784, 'comment_body': 'one of the reviewers -> project owner', 'comment_created': datetime.datetime(2020, 8, 28, 14, 58, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479361078, 'comment_body': 'Why is this different from previous case?', 'comment_created': datetime.datetime(2020, 8, 28, 14, 58, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479389944, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 28, 15, 49, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479390353, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 28, 15, 50, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479390927, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 28, 15, 51, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479391793, 'comment_body': 'It was part of the previous implementation.\r\nRemoved.', 'comment_created': datetime.datetime(2020, 8, 28, 15, 53, 3, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}]","[{'commit_sha': '4c0681bf18d107fb80bc5caff771046f99ed718d', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22546d994c48a2fdba3361089ea97050dd6c8fb4', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9469251579121203e4d776814487c01d721ef17', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79fbf8da4f596342bbd535199eda87e750807ce5', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85104e10ab2ecc5da4aac331714fd829869e1af5', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e76ebb1e28136567a143cf2ecaec9b0cbfb239c', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a9ab85de6c6d61cc8af11f2012eb0b4bcda333e', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e73f9abeeba37017b463ad66b75304517432923', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e444f959856405ea54811fb2aae0924d4f58df87', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c023d7c4c481bf585e2c00dc9aea3696d1cbb96', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84c84ceeaf164f6c65a4324e8e89f1ff55973842', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd376fc104f83551bfe8399b309fe4fc0d9b5c8d9', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df10f494dbfb1105e7c6eaf10c822bee2d673300', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15934ff7c6ee3376e63460f14a86cb2f6f7eaf45', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '020588d96737682c05443f5f1428724bd77d60a1', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bd213bc15130d41459d87391a30b33281e2ab0e', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26aa0790bc10f586252b2caa2499eac83504e555', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}]",James James,31052489,jamesjay4199@gmail.com,User,,77,,24,47
474040921,User Response to Pull Request Review,"<!--
  - Thanks for submitting code to Oppiabot! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
This PR adds checks for user responding to user reviews.
This feature has been tested at https://github.com/jameesjohn/oppia/pull/39.
## Checklist
- [x] I have successfully deployed my own instance of Oppiabot.
  - You can find instructions for doing this [here](https://github.com/oppia/oppiabot/wiki/Deploying-your-own-instance-of-the-oppiabot).
- [x] I have manually tested all the changes made in this PR following the [manual tests matrix](https://github.com/oppia/oppiabot/wiki/Manual-Tests-Matrix).

This PR is stacked on https://github.com/oppia/oppiabot/pull/116 and new changes are from 9e51c98
",True,121,https://api.github.com/repos/oppia/oppiabot/pulls/121,https://github.com/oppia/oppiabot/pull/121,closed,1178,378,7,21,1,44,0,0,[],2020-08-26 17:07:43+00:00,2020-08-31 16:02:21+00:00,428078.0,"4 days, 22:54:38","[{'comment_id': 479379170, 'comment_body': '`pr_review` just to be consistent.', 'comment_created': datetime.datetime(2020, 8, 28, 15, 30, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479606067, 'comment_body': 'when a pull request gets commented on by the PR author --> when PR author comments on the pull request', 'comment_created': datetime.datetime(2020, 8, 29, 4, 29, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479606127, 'comment_body': 'please to take a look (ptal) --> to please take a look (PTAL)\r\n\r\nWe will need to update wiki as well to have this info and how oppiabot responds.', 'comment_created': datetime.datetime(2020, 8, 29, 4, 30, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479606165, 'comment_body': 'We check if the reviewers have been assigned and if not, assign them --> the function checks if the reviewers have been assigned and if not, assigns them', 'comment_created': datetime.datetime(2020, 8, 29, 4, 30, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479635608, 'comment_body': 'pull_request -> constant', 'comment_created': datetime.datetime(2020, 8, 29, 10, 32, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479635837, 'comment_body': 'One suggestion regarding the 3 minutes thing - we should also add this to the case when we ask author to assign the reviewers if they are the codeowners - I have noticed that the comment pops really quick even when I am about to assign the reviewer. This one to be specific: https://github.com/oppia/oppiabot/blob/master/lib/checkPullRequestLabels.js#L117. You can update it here or in a separate PR as well.', 'comment_created': datetime.datetime(2020, 8, 29, 10, 35, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479635915, 'comment_body': 'Add comment too - Hi @ .. assigning you since author requested for a review. Thanks!', 'comment_created': datetime.datetime(2020, 8, 29, 10, 36, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479636453, 'comment_body': 'One more case - assigns some of them. Also, are we unassigning the author?', 'comment_created': datetime.datetime(2020, 8, 29, 10, 43, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479688906, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 29, 20, 49, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479688983, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 29, 20, 50, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479689101, 'comment_body': 'Yes. This is contained in the doc, and I believe that will be shared with the dev community.', 'comment_created': datetime.datetime(2020, 8, 29, 20, 52, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479689139, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 29, 20, 52, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479689183, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 29, 20, 53, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479690376, 'comment_body': ""I'm not sure we should still comment here since we are reacting to a comment already made by the pr author."", 'comment_created': datetime.datetime(2020, 8, 29, 21, 9, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479691567, 'comment_body': ""No, we are not unassigning the author. There's a comment from Ben on the doc outlining why."", 'comment_created': datetime.datetime(2020, 8, 29, 21, 26, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479691697, 'comment_body': 'https://docs.google.com/document/d/1m-7dZWGw77hZ6GOnjBu4p1XGXxyBPY2n2pzf-76RuTY/edit?disco=AAAAJ4jo7Es', 'comment_created': datetime.datetime(2020, 8, 29, 21, 28, 19, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479777080, 'comment_body': 'checks when -> handles the case when a', 'comment_created': datetime.datetime(2020, 8, 30, 14, 31, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479777119, 'comment_body': 'please to take a look (PTAL) -> to please take a look (PTAL)', 'comment_created': datetime.datetime(2020, 8, 30, 14, 32, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479777173, 'comment_body': 'Line too long - break.', 'comment_created': datetime.datetime(2020, 8, 30, 14, 32, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479777227, 'comment_body': 'Break if line too long.', 'comment_created': datetime.datetime(2020, 8, 30, 14, 33, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479777253, 'comment_body': ""We don't need this."", 'comment_created': datetime.datetime(2020, 8, 30, 14, 33, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479777320, 'comment_body': 'Hmm, makes sense. But let us unassign the author as well.', 'comment_created': datetime.datetime(2020, 8, 30, 14, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479777368, 'comment_body': 'reviewer -> reviewers', 'comment_created': datetime.datetime(2020, 8, 30, 14, 34, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479777562, 'comment_body': 'Replied there as well.', 'comment_created': datetime.datetime(2020, 8, 30, 14, 35, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479777594, 'comment_body': 'from -> on', 'comment_created': datetime.datetime(2020, 8, 30, 14, 36, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479818521, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 30, 21, 37, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479818565, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 30, 21, 37, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479818664, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 30, 21, 38, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479818720, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 30, 21, 39, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479818742, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2020, 8, 30, 21, 39, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479819470, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 30, 21, 47, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479819535, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 30, 21, 48, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479819600, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 30, 21, 49, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479819814, 'comment_body': 'Do you think the 3 minutes wait time is needed here?\r\nThe response here should be immediate I believe.', 'comment_created': datetime.datetime(2020, 8, 30, 21, 51, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479850359, 'comment_body': 'See [this](https://github.com/oppia/oppia/pull/10471#issuecomment-682422635) for example, I already assigned a reviewer but oppiabot still leaves a comment. So, we can keep the wait time shorter but we should definitely have it. WDYT?', 'comment_created': datetime.datetime(2020, 8, 31, 1, 52, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479850926, 'comment_body': 'Add a comment too - we have unassigned you since a review was requested - please make sure all comments are addressed.', 'comment_created': datetime.datetime(2020, 8, 31, 1, 55, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479851027, 'comment_body': 'Break line - please check the complete file.', 'comment_created': datetime.datetime(2020, 8, 31, 1, 56, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 480058277, 'comment_body': ""Okay.\r\nI'll add it in a separate PR where I'll also be adding features for the new default changelog label."", 'comment_created': datetime.datetime(2020, 8, 31, 11, 7, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 480074264, 'comment_body': 'Comment should be something like unassigning @author since a re-review was requested - please make sure all comments are addressed.', 'comment_created': datetime.datetime(2020, 8, 31, 11, 42, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 480080066, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 31, 11, 54, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 480096987, 'comment_body': 'Sounds good, thanks!', 'comment_created': datetime.datetime(2020, 8, 31, 12, 29, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 480097124, 'comment_body': 'Yes, sg.', 'comment_created': datetime.datetime(2020, 8, 31, 12, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 480097729, 'comment_body': ""This should be @{updatedPullRequest.user.login}. \r\n\r\n`Unassigning @{author} since a re-review was requested. @{author} Please make sure you have addressed all the review comments. Thanks!'"", 'comment_created': datetime.datetime(2020, 8, 31, 12, 30, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 480174152, 'comment_body': 'Done.\r\nThanks', 'comment_created': datetime.datetime(2020, 8, 31, 14, 36, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}]","[{'commit_sha': '4c0681bf18d107fb80bc5caff771046f99ed718d', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22546d994c48a2fdba3361089ea97050dd6c8fb4', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9469251579121203e4d776814487c01d721ef17', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79fbf8da4f596342bbd535199eda87e750807ce5', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85104e10ab2ecc5da4aac331714fd829869e1af5', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e76ebb1e28136567a143cf2ecaec9b0cbfb239c', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a9ab85de6c6d61cc8af11f2012eb0b4bcda333e', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e73f9abeeba37017b463ad66b75304517432923', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e444f959856405ea54811fb2aae0924d4f58df87', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c023d7c4c481bf585e2c00dc9aea3696d1cbb96', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84c84ceeaf164f6c65a4324e8e89f1ff55973842', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd376fc104f83551bfe8399b309fe4fc0d9b5c8d9', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df10f494dbfb1105e7c6eaf10c822bee2d673300', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15934ff7c6ee3376e63460f14a86cb2f6f7eaf45', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '020588d96737682c05443f5f1428724bd77d60a1', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e51c98408580317032504858d67779d5159a527', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ed55790dfade4a177f8b602226f81c8e5db0602', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e9bba5e60009202cd069e7e3eedbed859dbc49d', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c530d604659e883258e71d0ae4798943acdc396f', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62aed72b0b12d3af02fb4e61c350cdef9eabf518', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f9853124b13f5bc3b1c5c0a7bf8277887505e42', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}]",James James,31052489,jamesjay4199@gmail.com,User,,77,,24,47
473303690,Periodic Checks,"<!--
  - Thanks for submitting code to Oppiabot! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Setup periodic checks to be carried out by oppiabot.
## Checklist
- [x] I have successfully deployed my own instance of Oppiabot.
  - You can find instructions for doing this [here](https://github.com/oppia/oppiabot/wiki/Deploying-your-own-instance-of-the-oppiabot).
- [x] I have manually tested all the changes made in this PR following the [manual tests matrix](https://github.com/oppia/oppiabot/wiki/Manual-Tests-Matrix). 
I have not manually tested all the new additions here since I was not able to create the scenario. However, other features have been tested at https://github.com/jameesjohn/comment-on-pr/pull/8, https://github.com/jameesjohn/comment-on-pr/pull/11, https://github.com/jameesjohn/comment-on-pr/pull/14.
",True,119,https://api.github.com/repos/oppia/oppiabot/pulls/119,https://github.com/oppia/oppiabot/pull/119,closed,1791,312,19,21,5,121,0,0,[],2020-08-25 15:57:11+00:00,2020-09-02 05:02:17+00:00,651906.0,"7 days, 13:05:06","[{'comment_id': 476767728, 'comment_body': 'Revert.', 'comment_created': datetime.datetime(2020, 8, 25, 21, 46, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476767993, 'comment_body': 'Just to confirm - this is not related to stale checks, right?', 'comment_created': datetime.datetime(2020, 8, 25, 21, 46, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476769070, 'comment_body': 'Change to constant.', 'comment_created': datetime.datetime(2020, 8, 25, 21, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476769136, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 8, 25, 21, 48, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476769218, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 8, 25, 21, 48, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476769317, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 8, 25, 21, 48, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476769520, 'comment_body': 'PR CHANGELOG -> constant', 'comment_created': datetime.datetime(2020, 8, 25, 21, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476769936, 'comment_body': 'We should also have separate test cases for these new functions even if they are being covered by any of the modules.', 'comment_created': datetime.datetime(2020, 8, 25, 21, 49, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476770306, 'comment_body': 'File overview/copyright is missing.', 'comment_created': datetime.datetime(2020, 8, 25, 21, 49, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476772596, 'comment_body': 'handles -> handles the state\r\n\r\nExplain the cases as well.', 'comment_created': datetime.datetime(2020, 8, 25, 21, 52, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476772965, 'comment_body': 'Turn into a constant.', 'comment_created': datetime.datetime(2020, 8, 25, 21, 52, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476773350, 'comment_body': 'We can have this as a separate method in utils, given it is being repeated.', 'comment_created': datetime.datetime(2020, 8, 25, 21, 53, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476774224, 'comment_body': ""I am a bit confused - what is the purpose here - don't we have a similar method in #116 as well?"", 'comment_created': datetime.datetime(2020, 8, 25, 21, 54, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476774819, 'comment_body': ""Can we do one other thing here - log the assignees/reviewers who haven't responded within 24 hours of being assigned?"", 'comment_created': datetime.datetime(2020, 8, 25, 21, 55, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476775020, 'comment_body': 'How do we find out - explain.', 'comment_created': datetime.datetime(2020, 8, 25, 21, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476776071, 'comment_body': 'Why not pingAndAssignAuthor? Pass the comment to the function if it is different for different usecases.', 'comment_created': datetime.datetime(2020, 8, 25, 21, 56, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 476776522, 'comment_body': 'Hmm, how is this decided, I did not see this in the pull request review doc.', 'comment_created': datetime.datetime(2020, 8, 25, 21, 57, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 478175877, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 27, 6, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 478177239, 'comment_body': 'Yes. They do not affect the stale checks.\r\nThe interval for stale check is set at\r\nhttps://github.com/oppia/oppiabot-stale/blob/93db3c6cbe3e3c0f93ec2d76fe021e1bfb455abe/index.js#L9', 'comment_created': datetime.datetime(2020, 8, 27, 6, 26, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 478178312, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2020, 8, 27, 6, 28, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 478181458, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2020, 8, 27, 6, 32, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 478182669, 'comment_body': 'Similar, yes. But that in #116, the function is called after a pull request gets approved. \r\nThis is function is called when oppiabot goes through all pull requests and finds that one has been approved but has no assignee.', 'comment_created': datetime.datetime(2020, 8, 27, 6, 33, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 478186431, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2020, 8, 27, 6, 38, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 478186912, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 27, 6, 39, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 478190049, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2020, 8, 27, 6, 43, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 478194397, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 27, 6, 49, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 478194939, 'comment_body': 'While implementing this, I noticed that there would be an empty else case, although that is highly improbable, I decided to add it.\r\nI also updated the review doc with this change.', 'comment_created': datetime.datetime(2020, 8, 27, 6, 50, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 478277076, 'comment_body': ""I don't think I understand what you mean by *logging the assignees*\r\n"", 'comment_created': datetime.datetime(2020, 8, 27, 9, 19, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 478344731, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 27, 11, 25, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 478344777, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 27, 11, 25, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 478344823, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 27, 11, 25, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 478344852, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 27, 11, 25, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 478344881, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 27, 11, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 478344914, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 27, 11, 26, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479367369, 'comment_body': 'Cool, thanks for the pointer.', 'comment_created': datetime.datetime(2020, 8, 28, 15, 9, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479367515, 'comment_body': 'Add copyright/fileoverview as well.', 'comment_created': datetime.datetime(2020, 8, 28, 15, 9, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479367760, 'comment_body': '`./utils` right?', 'comment_created': datetime.datetime(2020, 8, 28, 15, 10, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479368785, 'comment_body': ""My one concern with all this is aren't we doing similar tasks in #116, shouldn't we reuse the common functions?"", 'comment_created': datetime.datetime(2020, 8, 28, 15, 11, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479370899, 'comment_body': 'This is exactly similar to the function in pr reviewed module - why not import that and use the function directly?', 'comment_created': datetime.datetime(2020, 8, 28, 15, 15, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479372772, 'comment_body': 'So, one high level comment I have in mind - why not directly use the `checkPullRequestReview` module?  We are doing the same things right, just on a periodic basis?', 'comment_created': datetime.datetime(2020, 8, 28, 15, 18, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479373296, 'comment_body': 'It would make the code simpler and cleaner as well.', 'comment_created': datetime.datetime(2020, 8, 28, 15, 19, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479395416, 'comment_body': ""Yes, we are doing something similar there.\r\nWe can't reuse the function since #116 has not been merged."", 'comment_created': datetime.datetime(2020, 8, 28, 15, 59, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479534914, 'comment_body': 'Yes.', 'comment_created': datetime.datetime(2020, 8, 28, 21, 7, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479545551, 'comment_body': 'Modified to use that in the pr reviewed module.', 'comment_created': datetime.datetime(2020, 8, 28, 21, 37, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479687396, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 29, 20, 31, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479688208, 'comment_body': 'This function is still valuable after merging #116.', 'comment_created': datetime.datetime(2020, 8, 29, 20, 40, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479688343, 'comment_body': ""Not everything here is used in the `checkPullRequestReview` module. I've modified the code to use some functions from the `checkPullRequestReview` module."", 'comment_created': datetime.datetime(2020, 8, 29, 20, 42, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479778532, 'comment_body': 'Remove extra space before changelog. Also, have we matched the comments with the ones in this section: https://docs.google.com/document/d/1m-7dZWGw77hZ6GOnjBu4p1XGXxyBPY2n2pzf-76RuTY/edit?ts=5f240b85#heading=h.66ts492p306d', 'comment_created': datetime.datetime(2020, 8, 30, 14, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479778574, 'comment_body': 'Add a comment to explain that why we are sure of always having a changelog label.', 'comment_created': datetime.datetime(2020, 8, 30, 14, 44, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479779010, 'comment_body': 'Let us ping core-maintainers here.', 'comment_created': datetime.datetime(2020, 8, 30, 14, 47, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479779367, 'comment_body': 'So, what I would suggest is as follows:\r\n\r\nOnly have the `ensurePullRequestIsAssigned` function here and move all others to `pullRequestReview` lib or `mergeConflicts`. Just call the appropriate functions from here but let the other libs handle everything internally.\r\n\r\nBasically the periodic check lib should be a blackbox which is just calling some checks periodically and they can be any checks but those checks should live in their respective modules.', 'comment_created': datetime.datetime(2020, 8, 30, 14, 50, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479816841, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 30, 21, 19, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479816918, 'comment_body': 'The comment was added at the top.', 'comment_created': datetime.datetime(2020, 8, 30, 21, 19, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479817077, 'comment_body': 'The `pingAndAssignReviewers` should still be in the periodic checks module, right?\r\nOthers have been moved.\r\n', 'comment_created': datetime.datetime(2020, 8, 30, 21, 21, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479817511, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 30, 21, 26, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 479845248, 'comment_body': 'getLastReviewOfType -> getLastReviewOfSpecificType', 'comment_created': datetime.datetime(2020, 8, 31, 1, 25, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479845312, 'comment_body': 'last type of review from a pull request -> last review of a specific type from a pull request', 'comment_created': datetime.datetime(2020, 8, 31, 1, 25, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479846434, 'comment_body': 'Ping @oppia/core-maintainers ', 'comment_created': datetime.datetime(2020, 8, 31, 1, 31, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479846550, 'comment_body': 'Yes, looks good now!', 'comment_created': datetime.datetime(2020, 8, 31, 1, 31, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479846834, 'comment_body': 'This function can be moved to utils and reused here and in pull request review module. You can pass in the comment and list of reviewers as argument.', 'comment_created': datetime.datetime(2020, 8, 31, 1, 33, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479846899, 'comment_body': 'Periodic checks handler.', 'comment_created': datetime.datetime(2020, 8, 31, 1, 33, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479847679, 'comment_body': 'Add a comment to explain the includes check here.', 'comment_created': datetime.datetime(2020, 8, 31, 1, 38, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479847771, 'comment_body': 'Explain the code here with comments.', 'comment_created': datetime.datetime(2020, 8, 31, 1, 38, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479847990, 'comment_body': 'We can have this as a dict object:\r\n\r\n```\r\n{\r\nmerge_conflict_pr: {...}\r\n...\r\n\r\nWould be cleaner and easier to access that way.\r\n}', 'comment_created': datetime.datetime(2020, 8, 31, 1, 39, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479848105, 'comment_body': 'Should not assign author case.', 'comment_created': datetime.datetime(2020, 8, 31, 1, 40, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479848153, 'comment_body': 'Break line - please check the complete file.', 'comment_created': datetime.datetime(2020, 8, 31, 1, 40, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479848199, 'comment_body': 'any of the above cases', 'comment_created': datetime.datetime(2020, 8, 31, 1, 40, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 479848230, 'comment_body': 'Break line.', 'comment_created': datetime.datetime(2020, 8, 31, 1, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 480107770, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 31, 12, 50, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 480108346, 'comment_body': 'They are also pinged here, check line 151. ', 'comment_created': datetime.datetime(2020, 8, 31, 12, 51, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 480108671, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 31, 12, 51, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 480111611, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 31, 12, 57, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 480113974, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 31, 13, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 480146183, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 31, 13, 53, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 480147517, 'comment_body': 'Modified and comment added.', 'comment_created': datetime.datetime(2020, 8, 31, 13, 55, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 480149877, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 31, 13, 59, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 480153052, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 31, 14, 4, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 480154573, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 31, 14, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 480155656, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 31, 14, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 480155811, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 31, 14, 8, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 480357145, 'comment_body': 'Ok, replace welfareTeam with onboardingTeam.', 'comment_created': datetime.datetime(2020, 8, 31, 19, 40, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 480358072, 'comment_body': 'Suggestion: Change this to `pingAndAssignUsers` and use it everywhere whether we need to assign author or reviewer(s).', 'comment_created': datetime.datetime(2020, 8, 31, 19, 42, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 480359327, 'comment_body': ""In this case, we should also add a comment with list of reviewers who haven't responded within 24 hours and ping one of the core-maintainers based on a rotation whitelist (per month: one core maintainer). See the thread here: https://docs.google.com/document/d/1m-7dZWGw77hZ6GOnjBu4p1XGXxyBPY2n2pzf-76RuTY/edit?disco=AAAAJ4jo7FM"", 'comment_created': datetime.datetime(2020, 8, 31, 19, 44, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 480473581, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 8, 31, 23, 35, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 480473811, 'comment_body': 'Ehh... \r\nThis is a nice refactor but it can be added after this gets in.', 'comment_created': datetime.datetime(2020, 8, 31, 23, 36, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 480973134, 'comment_body': '`ensurePullRequestIsAssigned` -> `ensureAllPullRequestsAreAssigned`\r\n\r\n`ensureIssueHasProjects` -> `ensureAllIssuesHaveProjects`', 'comment_created': datetime.datetime(2020, 9, 1, 8, 43, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 480973338, 'comment_body': 'Revert', 'comment_created': datetime.datetime(2020, 9, 1, 8, 44, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 480974003, 'comment_body': 'This is not a part of GSoC - will be taken up separately after GSoC. We have a tracking issue: #118', 'comment_created': datetime.datetime(2020, 9, 1, 8, 45, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 480976118, 'comment_body': 'You can remove this as discussed.', 'comment_created': datetime.datetime(2020, 9, 1, 8, 48, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 480976589, 'comment_body': 'The approach looks good otherwise!', 'comment_created': datetime.datetime(2020, 9, 1, 8, 49, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 481031934, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 9, 1, 10, 17, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 481032357, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 9, 1, 10, 18, 19, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 481032578, 'comment_body': 'Thanks, @ankita240796.', 'comment_created': datetime.datetime(2020, 9, 1, 10, 18, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 481040411, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2020, 9, 1, 10, 33, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 481095895, 'comment_body': 'You can directly use utilityModule. pingAndAssignReviewers. It is already imported.', 'comment_created': datetime.datetime(2020, 9, 1, 12, 22, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 481096478, 'comment_body': 'Why not here itself? Would prevent any extra follow ups since this is the last PR for your M3.', 'comment_created': datetime.datetime(2020, 9, 1, 12, 23, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 481115020, 'comment_body': 'Onboarding team lead', 'comment_created': datetime.datetime(2020, 9, 1, 12, 54, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 481115185, 'comment_body': 'Project owner, right?', 'comment_created': datetime.datetime(2020, 9, 1, 12, 54, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 481115443, 'comment_body': 'ONBOARDING TEAM', 'comment_created': datetime.datetime(2020, 9, 1, 12, 55, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 481115629, 'comment_body': 'Update comment - we are not using triage label.', 'comment_created': datetime.datetime(2020, 9, 1, 12, 55, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 481116380, 'comment_body': 'We should not do any of this - just check for project and ping. The label is for project leads to assign a priority to the issue.', 'comment_created': datetime.datetime(2020, 9, 1, 12, 56, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 481116853, 'comment_body': 'pull_request -> constant.', 'comment_created': datetime.datetime(2020, 9, 1, 12, 57, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 481117158, 'comment_body': 'Please make sure line lengths are correct, throughout the PR.', 'comment_created': datetime.datetime(2020, 9, 1, 12, 57, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 481179273, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 9, 1, 14, 27, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 481180141, 'comment_body': 'Project owner or PR author.', 'comment_created': datetime.datetime(2020, 9, 1, 14, 28, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 481180398, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 9, 1, 14, 28, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 481180733, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2020, 9, 1, 14, 29, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 481181396, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 9, 1, 14, 30, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 481184254, 'comment_body': 'Noted.\r\nRemoved.', 'comment_created': datetime.datetime(2020, 9, 1, 14, 33, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 481232458, 'comment_body': 'Hmmm\r\nOkay. Done.', 'comment_created': datetime.datetime(2020, 9, 1, 15, 29, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 481233943, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 9, 1, 15, 32, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 481235102, 'comment_body': 'Yes.\r\nThis has 75 chars.', 'comment_created': datetime.datetime(2020, 9, 1, 15, 33, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 481427825, 'comment_body': 'Just one nit - can we skip assigning users who are already assigned?', 'comment_created': datetime.datetime(2020, 9, 1, 20, 59, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 481428050, 'comment_body': ""Wasn't this function renamed to getLastReviewOfSpecificType?"", 'comment_created': datetime.datetime(2020, 9, 1, 20, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 481428234, 'comment_body': 'Full stop in end.', 'comment_created': datetime.datetime(2020, 9, 1, 21, 0, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 481429014, 'comment_body': 'should not assign author case.', 'comment_created': datetime.datetime(2020, 9, 1, 21, 1, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}, {'comment_id': 481467092, 'comment_body': 'All the checks here are running when no one is assigned.', 'comment_created': datetime.datetime(2020, 9, 1, 22, 27, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 481467777, 'comment_body': ""Yes. Apparently the refactor functionality in VSCode played a trick here.\r\nI'll update it manually."", 'comment_created': datetime.datetime(2020, 9, 1, 22, 29, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 481467897, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 9, 1, 22, 30, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 481469525, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 9, 1, 22, 34, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jameesjohn', 'type': 'User'}, {'comment_id': 481695668, 'comment_body': 'Ah ok, yes missed that.', 'comment_created': datetime.datetime(2020, 9, 2, 5, 0, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ankita240796', 'type': 'User'}]","[{'commit_sha': '935cacdfdd2d21a638531891b8693ff30bc01b2f', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd72e13318d2df9622a2a24e812b05761f444734', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22f25f7a67d81ccbafd3d3411096da95f0e99713', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '873efdc60adb7a5e48eb2060bae1faf8f34072b5', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9e55912436bfdf869502f9a6a2239e8cb53195e', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcfbaa2453c86865edaccc6a6134e362ffd9d614', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a9570d022b5d89b1b870a0cd4d6a20fd025c1f9', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85804e4a5689d9942ad4a931644bfadc48296c99', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fa82c605da63183445ebdd82aa305726ae69fee', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b60ac25062aa4a0276d8f757c8c3a2196e40289', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7186149c068c2677e3d9ce8d6108fca982008d1c', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2732f619d19c660dac36c49f4a53447bcadbcc86', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '075c6d0bb1ddc8603bf07edc8000e9f0e5bd4b74', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfec8cc046ae43abb5d8416d245ff1b2db60cf98', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61a5c8d876f628f423062358cd70b9a6bdd538dd', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5bfd0638022acfd92109998e05a7a8d2d03f7b6', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a1ff131ba561022c92db626da99e6df8e01d423', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '213bc8f59652456bdd6b83a7a2a2283f78bdfc02', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ef90d07d76a83e8d37ac396fb916e32261a0e83', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'afde03703abe09ffc32103b99dee24102982b9c8', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cab048544ac109189d0818bfa50be2caf10491a', 'committer_username': 'jameesjohn', 'committer_name': 'James James', 'committer_email': 'jamesjay4199@gmail.com', 'commit_date': datetime.datetime(2017, 8, 16, 0, 27, 40, tzinfo=datetime.timezone.utc)}]",James James,31052489,jamesjay4199@gmail.com,User,,77,,24,47

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
131213171,oppiabot,oppia/oppiabot,JavaScript,68,18,5,17,227,17,3,0,"[{'id': 758298642, 'number': 293, 'closed': datetime.datetime(2021, 10, 16, 13, 9, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 14, 12, 26, 5, tzinfo=datetime.timezone.utc), 'time_taken': 175389.0, 'time_delta': '2 days, 0:43:09', 'additions': 16, 'deletions': 34, 'state': 'closed'}, {'id': 758278339, 'number': 292, 'closed': datetime.datetime(2022, 2, 2, 16, 50, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 14, 12, 1, 58, tzinfo=datetime.timezone.utc), 'time_taken': 9607726.0, 'time_delta': '111 days, 4:48:46', 'additions': 38, 'deletions': 14, 'state': 'closed'}, {'id': 696854257, 'number': 281, 'closed': datetime.datetime(2021, 7, 27, 14, 30, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 26, 9, 28, 26, tzinfo=datetime.timezone.utc), 'time_taken': 104516.0, 'time_delta': '1 day, 5:01:56', 'additions': 130613, 'deletions': 132735, 'state': 'closed'}, {'id': 675564794, 'number': 276, 'closed': datetime.datetime(2021, 8, 1, 18, 13, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 16, 1, 11, tzinfo=datetime.timezone.utc), 'time_taken': 3463949.0, 'time_delta': '40 days, 2:12:29', 'additions': 818, 'deletions': 727, 'state': 'closed'}, {'id': 643166611, 'number': 266, 'closed': datetime.datetime(2021, 5, 18, 1, 17, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 12, 13, 31, 36, tzinfo=datetime.timezone.utc), 'time_taken': 474346.0, 'time_delta': '5 days, 11:45:46', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 636427264, 'number': 264, 'closed': datetime.datetime(2021, 5, 20, 14, 50, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 9, 22, 46, 22, tzinfo=datetime.timezone.utc), 'time_taken': 921863.0, 'time_delta': '10 days, 16:04:23', 'additions': 119681, 'deletions': 121307, 'state': 'closed'}, {'id': 628294722, 'number': 260, 'closed': datetime.datetime(2021, 5, 4, 14, 36, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 1, 0, 54, 59, tzinfo=datetime.timezone.utc), 'time_taken': 308510.0, 'time_delta': '3 days, 13:41:50', 'additions': 124, 'deletions': 12, 'state': 'closed'}, {'id': 624195419, 'number': 259, 'closed': datetime.datetime(2021, 5, 1, 14, 54, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 27, 10, 42, 47, tzinfo=datetime.timezone.utc), 'time_taken': 360696.0, 'time_delta': '4 days, 4:11:36', 'additions': 6, 'deletions': 2, 'state': 'closed'}, {'id': 616644104, 'number': 254, 'closed': datetime.datetime(2021, 4, 16, 9, 17, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 16, 8, 22, 50, tzinfo=datetime.timezone.utc), 'time_taken': 3267.0, 'time_delta': '0:54:27', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 598995711, 'number': 221, 'closed': datetime.datetime(2021, 4, 11, 6, 22, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 23, 16, 15, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1605991.0, 'time_delta': '18 days, 14:06:31', 'additions': 119139, 'deletions': 121250, 'state': 'closed'}, {'id': 586320750, 'number': 211, 'closed': datetime.datetime(2021, 3, 8, 12, 9, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 7, 20, 25, 17, tzinfo=datetime.timezone.utc), 'time_taken': 56631.0, 'time_delta': '15:43:51', 'additions': 14, 'deletions': 13, 'state': 'closed'}, {'id': 580093352, 'number': 206, 'closed': datetime.datetime(2021, 3, 3, 13, 54, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 25, 13, 20, 56, tzinfo=datetime.timezone.utc), 'time_taken': 520405.0, 'time_delta': '6 days, 0:33:25', 'additions': 41, 'deletions': 17, 'state': 'closed'}, {'id': 569063173, 'number': 194, 'closed': datetime.datetime(2021, 2, 8, 21, 36, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 7, 22, 15, 41, tzinfo=datetime.timezone.utc), 'time_taken': 84022.0, 'time_delta': '23:20:22', 'additions': 88, 'deletions': 27, 'state': 'closed'}, {'id': 561905517, 'number': 186, 'closed': datetime.datetime(2021, 1, 26, 16, 48, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 26, 16, 32, 46, tzinfo=datetime.timezone.utc), 'time_taken': 939.0, 'time_delta': '0:15:39', 'additions': 33, 'deletions': 18, 'state': 'closed'}, {'id': 551663902, 'number': 183, 'closed': datetime.datetime(2021, 1, 12, 22, 24, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 8, 10, 59, 8, tzinfo=datetime.timezone.utc), 'time_taken': 386710.0, 'time_delta': '4 days, 11:25:10', 'additions': 164, 'deletions': 142, 'state': 'closed'}, {'id': 541812070, 'number': 173, 'closed': datetime.datetime(2020, 12, 20, 0, 22, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 17, 11, 51, 26, tzinfo=datetime.timezone.utc), 'time_taken': 217853.0, 'time_delta': '2 days, 12:30:53', 'additions': 574, 'deletions': 347, 'state': 'closed'}, {'id': 539411485, 'number': 172, 'closed': datetime.datetime(2020, 12, 15, 23, 1, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 14, 12, 23, 24, tzinfo=datetime.timezone.utc), 'time_taken': 124702.0, 'time_delta': '1 day, 10:38:22', 'additions': 37, 'deletions': 39, 'state': 'closed'}, {'id': 539395392, 'number': 171, 'closed': datetime.datetime(2020, 12, 14, 21, 5, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 14, 11, 55, 37, tzinfo=datetime.timezone.utc), 'time_taken': 33015.0, 'time_delta': '9:10:15', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 536820093, 'number': 168, 'closed': datetime.datetime(2020, 12, 11, 11, 59, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 11, 11, 22, 42, tzinfo=datetime.timezone.utc), 'time_taken': 2224.0, 'time_delta': '0:37:04', 'additions': 29, 'deletions': 21, 'state': 'closed'}, {'id': 533582354, 'number': 165, 'closed': datetime.datetime(2020, 12, 8, 20, 3, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 7, 10, 59, 48, tzinfo=datetime.timezone.utc), 'time_taken': 119050.0, 'time_delta': '1 day, 9:04:10', 'additions': 18, 'deletions': 13, 'state': 'closed'}, {'id': 528504422, 'number': 162, 'closed': datetime.datetime(2022, 2, 2, 16, 50, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 27, 9, 43, 42, tzinfo=datetime.timezone.utc), 'time_taken': 37350410.0, 'time_delta': '432 days, 7:06:50', 'additions': 73, 'deletions': 13, 'state': 'closed'}, {'id': 513416027, 'number': 154, 'closed': datetime.datetime(2020, 11, 9, 10, 44, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 31, 11, 20, 37, tzinfo=datetime.timezone.utc), 'time_taken': 775436.0, 'time_delta': '8 days, 23:23:56', 'additions': 359, 'deletions': 0, 'state': 'closed'}, {'id': 508818545, 'number': 144, 'closed': datetime.datetime(2020, 10, 23, 11, 13, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 23, 8, 53, 17, tzinfo=datetime.timezone.utc), 'time_taken': 8405.0, 'time_delta': '2:20:05', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 492870532, 'number': 131, 'closed': datetime.datetime(2020, 9, 27, 22, 46, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 25, 6, 43, 54, tzinfo=datetime.timezone.utc), 'time_taken': 230560.0, 'time_delta': '2 days, 16:02:40', 'additions': 206, 'deletions': 60, 'state': 'closed'}, {'id': 480512000, 'number': 128, 'closed': datetime.datetime(2020, 9, 5, 12, 47, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 5, 12, 29, 11, tzinfo=datetime.timezone.utc), 'time_taken': 1108.0, 'time_delta': '0:18:28', 'additions': 10, 'deletions': 7, 'state': 'closed'}, {'id': 478531415, 'number': 127, 'closed': datetime.datetime(2020, 9, 3, 10, 36, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 3, 10, 31, 58, tzinfo=datetime.timezone.utc), 'time_taken': 257.0, 'time_delta': '0:04:17', 'additions': 5, 'deletions': 2, 'state': 'closed'}, {'id': 477795073, 'number': 126, 'closed': datetime.datetime(2020, 9, 2, 14, 29, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 2, 12, 46, 11, tzinfo=datetime.timezone.utc), 'time_taken': 6193.0, 'time_delta': '1:43:13', 'additions': 53, 'deletions': 1, 'state': 'closed'}, {'id': 477769843, 'number': 124, 'closed': datetime.datetime(2020, 9, 2, 14, 29, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 2, 11, 58, 55, tzinfo=datetime.timezone.utc), 'time_taken': 9043.0, 'time_delta': '2:30:43', 'additions': 131, 'deletions': 44, 'state': 'closed'}, {'id': 474040921, 'number': 121, 'closed': datetime.datetime(2020, 8, 31, 16, 2, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 26, 17, 7, 43, tzinfo=datetime.timezone.utc), 'time_taken': 428078.0, 'time_delta': '4 days, 22:54:38', 'additions': 1178, 'deletions': 378, 'state': 'closed'}, {'id': 473303690, 'number': 119, 'closed': datetime.datetime(2020, 9, 2, 5, 2, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 25, 15, 57, 11, tzinfo=datetime.timezone.utc), 'time_taken': 651906.0, 'time_delta': '7 days, 13:05:06', 'additions': 1791, 'deletions': 312, 'state': 'closed'}, {'id': 470800656, 'number': 116, 'closed': datetime.datetime(2020, 8, 28, 19, 45, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 20, 9, 58, 50, tzinfo=datetime.timezone.utc), 'time_taken': 726403.0, 'time_delta': '8 days, 9:46:43', 'additions': 1926, 'deletions': 24, 'state': 'closed'}, {'id': 468803016, 'number': 115, 'closed': datetime.datetime(2020, 8, 21, 21, 53, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 17, 12, 34, 2, tzinfo=datetime.timezone.utc), 'time_taken': 379140.0, 'time_delta': '4 days, 9:19:00', 'additions': 21, 'deletions': 2, 'state': 'closed'}, {'id': 466829953, 'number': 114, 'closed': datetime.datetime(2020, 8, 24, 11, 43, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 12, 15, 0, 57, tzinfo=datetime.timezone.utc), 'time_taken': 1024955.0, 'time_delta': '11 days, 20:42:35', 'additions': 723, 'deletions': 21, 'state': 'closed'}, {'id': 464004328, 'number': 111, 'closed': datetime.datetime(2020, 8, 10, 13, 21, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 6, 12, 46, 3, tzinfo=datetime.timezone.utc), 'time_taken': 347719.0, 'time_delta': '4 days, 0:35:19', 'additions': 371, 'deletions': 15, 'state': 'closed'}, {'id': 463365471, 'number': 110, 'closed': datetime.datetime(2020, 8, 10, 14, 29, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 5, 12, 55, 13, tzinfo=datetime.timezone.utc), 'time_taken': 437639.0, 'time_delta': '5 days, 1:33:59', 'additions': 535, 'deletions': 2, 'state': 'closed'}, {'id': 455381793, 'number': 106, 'closed': datetime.datetime(2020, 7, 27, 11, 38, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 22, 14, 5, tzinfo=datetime.timezone.utc), 'time_taken': 393878.0, 'time_delta': '4 days, 13:24:38', 'additions': 738, 'deletions': 2, 'state': 'closed'}, {'id': 450121226, 'number': 104, 'closed': datetime.datetime(2020, 7, 26, 16, 53, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 11, 29, 54, tzinfo=datetime.timezone.utc), 'time_taken': 883414.0, 'time_delta': '10 days, 5:23:34', 'additions': 309, 'deletions': 34, 'state': 'closed'}, {'id': 446830643, 'number': 102, 'closed': datetime.datetime(2020, 7, 20, 9, 33, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 9, 12, 32, 52, tzinfo=datetime.timezone.utc), 'time_taken': 939666.0, 'time_delta': '10 days, 21:01:06', 'additions': 1121, 'deletions': 136, 'state': 'closed'}, {'id': 444627053, 'number': 101, 'closed': datetime.datetime(2020, 7, 9, 12, 36, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 6, 8, 42, 4, tzinfo=datetime.timezone.utc), 'time_taken': 273280.0, 'time_delta': '3 days, 3:54:40', 'additions': 590, 'deletions': 15, 'state': 'closed'}, {'id': 444413347, 'number': 100, 'closed': datetime.datetime(2020, 7, 9, 16, 2, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 5, 14, 13, 21, tzinfo=datetime.timezone.utc), 'time_taken': 352128.0, 'time_delta': '4 days, 1:48:48', 'additions': 301, 'deletions': 2, 'state': 'closed'}, {'id': 441318760, 'number': 97, 'closed': datetime.datetime(2020, 6, 29, 21, 45, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 29, 11, 3, 6, tzinfo=datetime.timezone.utc), 'time_taken': 38550.0, 'time_delta': '10:42:30', 'additions': 23913, 'deletions': 341182, 'state': 'closed'}, {'id': 440897911, 'number': 96, 'closed': datetime.datetime(2020, 6, 28, 4, 34, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 27, 11, 20, 56, tzinfo=datetime.timezone.utc), 'time_taken': 62019.0, 'time_delta': '17:13:39', 'additions': 43, 'deletions': 3, 'state': 'closed'}, {'id': 439322054, 'number': 94, 'closed': datetime.datetime(2020, 6, 25, 4, 12, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 24, 16, 38, 15, tzinfo=datetime.timezone.utc), 'time_taken': 41679.0, 'time_delta': '11:34:39', 'additions': 70, 'deletions': 36, 'state': 'closed'}, {'id': 438721989, 'number': 93, 'closed': datetime.datetime(2020, 6, 25, 7, 31, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 23, 17, 39, 51, tzinfo=datetime.timezone.utc), 'time_taken': 136274.0, 'time_delta': '1 day, 13:51:14', 'additions': 342576, 'deletions': 24030, 'state': 'closed'}, {'id': 437902379, 'number': 92, 'closed': datetime.datetime(2020, 6, 24, 3, 52, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 12, 16, 57, tzinfo=datetime.timezone.utc), 'time_taken': 142541.0, 'time_delta': '1 day, 15:35:41', 'additions': 48, 'deletions': 26, 'state': 'closed'}, {'id': 437036133, 'number': 91, 'closed': datetime.datetime(2020, 6, 22, 18, 56, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 19, 10, 59, 1, tzinfo=datetime.timezone.utc), 'time_taken': 287841.0, 'time_delta': '3 days, 7:57:21', 'additions': 84, 'deletions': 24, 'state': 'closed'}, {'id': 435130841, 'number': 88, 'closed': datetime.datetime(2020, 6, 17, 19, 24, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 16, 10, 46, 13, tzinfo=datetime.timezone.utc), 'time_taken': 117520.0, 'time_delta': '1 day, 8:38:40', 'additions': 25569, 'deletions': 4, 'state': 'closed'}, {'id': 434710535, 'number': 84, 'closed': datetime.datetime(2020, 6, 15, 18, 48, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 15, 18, 46, 56, tzinfo=datetime.timezone.utc), 'time_taken': 109.0, 'time_delta': '0:01:49', 'additions': 3, 'deletions': 25568, 'state': 'closed'}, {'id': 434435383, 'number': 83, 'closed': datetime.datetime(2020, 6, 15, 17, 51, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 15, 10, 14, 21, tzinfo=datetime.timezone.utc), 'time_taken': 27434.0, 'time_delta': '7:37:14', 'additions': 507, 'deletions': 801, 'state': 'closed'}, {'id': 433990450, 'number': 82, 'closed': datetime.datetime(2020, 6, 22, 20, 59, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 13, 10, 43, 51, tzinfo=datetime.timezone.utc), 'time_taken': 814528.0, 'time_delta': '9 days, 10:15:28', 'additions': 857, 'deletions': 2, 'state': 'closed'}, {'id': 433759550, 'number': 79, 'closed': datetime.datetime(2020, 6, 12, 15, 59, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 12, 15, 53, 35, tzinfo=datetime.timezone.utc), 'time_taken': 343.0, 'time_delta': '0:05:43', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 426559418, 'number': 78, 'closed': datetime.datetime(2020, 6, 17, 19, 23, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 2, 12, 42, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1320059.0, 'time_delta': '15 days, 6:40:59', 'additions': 864, 'deletions': 33, 'state': 'closed'}, {'id': 423773810, 'number': 74, 'closed': datetime.datetime(2020, 6, 1, 11, 54, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 27, 11, 2, 35, tzinfo=datetime.timezone.utc), 'time_taken': 435143.0, 'time_delta': '5 days, 0:52:23', 'additions': 205, 'deletions': 32, 'state': 'closed'}, {'id': 421354383, 'number': 70, 'closed': datetime.datetime(2020, 5, 23, 14, 39, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 21, 13, 32, 50, tzinfo=datetime.timezone.utc), 'time_taken': 176783.0, 'time_delta': '2 days, 1:06:23', 'additions': 271, 'deletions': 0, 'state': 'closed'}, {'id': 420855106, 'number': 69, 'closed': datetime.datetime(2020, 6, 12, 15, 31, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 20, 16, 14, 41, tzinfo=datetime.timezone.utc), 'time_taken': 1984601.0, 'time_delta': '22 days, 23:16:41', 'additions': 26785, 'deletions': 113, 'state': 'closed'}, {'id': 420584354, 'number': 68, 'closed': datetime.datetime(2020, 5, 20, 10, 34, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 20, 8, 13, 55, tzinfo=datetime.timezone.utc), 'time_taken': 8457.0, 'time_delta': '2:20:57', 'additions': 20, 'deletions': 9, 'state': 'closed'}, {'id': 419415531, 'number': 65, 'closed': datetime.datetime(2020, 5, 20, 5, 50, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 18, 10, 41, 21, tzinfo=datetime.timezone.utc), 'time_taken': 155361.0, 'time_delta': '1 day, 19:09:21', 'additions': 831, 'deletions': 0, 'state': 'closed'}, {'id': 414622583, 'number': 59, 'closed': datetime.datetime(2020, 5, 15, 13, 50, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 7, 11, 22, 23, tzinfo=datetime.timezone.utc), 'time_taken': 700084.0, 'time_delta': '8 days, 2:28:04', 'additions': 2336, 'deletions': 344, 'state': 'closed'}, {'id': 410815306, 'number': 58, 'closed': datetime.datetime(2020, 5, 6, 16, 43, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 29, 16, 18, 49, tzinfo=datetime.timezone.utc), 'time_taken': 606288.0, 'time_delta': '7 days, 0:24:48', 'additions': 6076, 'deletions': 75, 'state': 'closed'}, {'id': 407179929, 'number': 57, 'closed': datetime.datetime(2020, 4, 29, 16, 18, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 22, 9, 55, 45, tzinfo=datetime.timezone.utc), 'time_taken': 627773.0, 'time_delta': '7 days, 6:22:53', 'additions': 24, 'deletions': 20, 'state': 'closed'}, {'id': 404231750, 'number': 55, 'closed': datetime.datetime(2020, 4, 29, 14, 22, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 16, 9, 29, 34, tzinfo=datetime.timezone.utc), 'time_taken': 1140789.0, 'time_delta': '13 days, 4:53:09', 'additions': 154, 'deletions': 97, 'state': 'closed'}, {'id': 402340020, 'number': 54, 'closed': datetime.datetime(2020, 5, 21, 16, 51, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 12, 13, 37, 41, tzinfo=datetime.timezone.utc), 'time_taken': 3381224.0, 'time_delta': '39 days, 3:13:44', 'additions': 750, 'deletions': 3, 'state': 'closed'}, {'id': 400829118, 'number': 52, 'closed': datetime.datetime(2020, 4, 10, 18, 19, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 8, 12, 51, 3, tzinfo=datetime.timezone.utc), 'time_taken': 192493.0, 'time_delta': '2 days, 5:28:13', 'additions': 27, 'deletions': 0, 'state': 'closed'}]"
