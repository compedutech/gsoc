pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
476138109,Adaption of WebKit to the changes to Services Kit,"This PR contains the work done to adapt haikuwebkit for use with [my changes to Services Kit](https://review.haiku-os.org/q/hashtag:gsoc2020+owner:leorize%252Boss%2540disroot.org).

This PR contains the following major changes:
- A rework of the networking backend to simplify the code and fix authentication as well as redirection. Tests have been conducted against https://httpbin.org and https://jigsaw.w3.org.
- An adaption to the new [BDataIO outputs](https://review.haiku-os.org/c/haiku/+/3084). This is pretty much a PoC, and I'm quite unhappy with how complicated the locking system is.
- An basic adaption for BUrlSession. This portion of the PR is pretty WIP, only enough for HaikuLauncher to compile as tests for the new API.",False,35,https://api.github.com/repos/haiku/webkit-old/pulls/35,https://github.com/haiku/webkit-old/pull/35,open,733,589,24,4,2,5,0,0,[],2020-08-31 08:09:36+00:00,,0.0,,"[{'comment_id': 481354626, 'comment_body': 'I think this TODO is still valid. It is possible (at least at the HTTP level) to do a GET request with a body. So maybe this if() needs to be removed.', 'comment_created': datetime.datetime(2020, 9, 1, 18, 43, 57, tzinfo=datetime.timezone.utc), 'commenter': 'pulkomandy', 'type': 'User'}, {'comment_id': 481356673, 'comment_body': ""why is that needed? The asycnhronous mode should allow lock-less operation?\r\n\r\nDoesn't this risk stalling the whole browser for example if trying to connect to a very slow server or if the server decides to send a few gigabytes of headers?"", 'comment_created': datetime.datetime(2020, 9, 1, 18, 47, 33, tzinfo=datetime.timezone.utc), 'commenter': 'pulkomandy', 'type': 'User'}, {'comment_id': 481361487, 'comment_body': ""why does this need a lock? It only accesses the data passed as parameters, which shouldn't go away as long as the function doesn't return?"", 'comment_created': datetime.datetime(2020, 9, 1, 18, 54, 35, tzinfo=datetime.timezone.utc), 'commenter': 'pulkomandy', 'type': 'User'}, {'comment_id': 481365494, 'comment_body': 'Please document it a bit more. Which threads will be locking it? When?', 'comment_created': datetime.datetime(2020, 9, 1, 18, 58, 52, tzinfo=datetime.timezone.utc), 'commenter': 'pulkomandy', 'type': 'User'}, {'comment_id': 482353117, 'comment_body': ""I don't remember why I added the lock... Upon a quick inspection it might not be needed, as the lambda produced by `Write()` actually check for `m_handler` validity before acting on the data.\r\n\r\nI might have added it because earlier revisions of the patch have `BUrlRequestWrapper::Write()` accessing `m_handler`."", 'comment_created': datetime.datetime(2020, 9, 2, 19, 39, 14, tzinfo=datetime.timezone.utc), 'commenter': 'alaviss', 'type': 'User'}]","[{'commit_sha': 'b359d18aff68fa16934134d984bf9d56dee028c9', 'committer_username': 'alaviss', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2013, 7, 8, 2, 12, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8733768c9f0739d0f10920b5681a13ef0bf0a6fb', 'committer_username': 'alaviss', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2013, 7, 8, 2, 12, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21500cc5873ae4ad184686e023fe10e8065867d6', 'committer_username': 'alaviss', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2013, 7, 8, 2, 12, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a96e255421225d3d62c90e5ed173dcabeb6bfdc2', 'committer_username': 'alaviss', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2013, 7, 8, 2, 12, 33, tzinfo=datetime.timezone.utc)}]",,4961280,,User,,88,,0,43

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
14010023,webkit-old,haiku/webkit-old,,12,24,18,745,234157,2,4,2,"[{'id': 476138109, 'number': 35, 'closed': None, 'created': datetime.datetime(2020, 8, 31, 8, 9, 36, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 733, 'deletions': 589, 'state': 'open'}, {'id': 474123294, 'number': 34, 'closed': datetime.datetime(2020, 8, 27, 7, 31, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 26, 20, 0, 14, tzinfo=datetime.timezone.utc), 'time_taken': 41496.0, 'time_delta': '11:31:36', 'additions': 59, 'deletions': 234, 'state': 'closed'}]"
