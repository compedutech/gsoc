pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
964994958,Issue #11665: Create a robust method of surviving mutation suppression,"Resolves #11665 

Only the last commit is under review.

Proofs ->

- [x] [CI task](https://github.com/checkstyle/checkstyle/runs/7005315685?check_suite_focus=true) failing from 1 extra mutation in file
- [x] [CI task](https://github.com/checkstyle/checkstyle/runs/7005314642?check_suite_focus=true) failing from more than 1 extra mutation in file
- [x] [CI task](https://github.com/checkstyle/checkstyle/runs/7005316210?check_suite_focus=true) failing from 1 missing mutation in file
- [x] [CI task](https://github.com/checkstyle/checkstyle/runs/7005314199?check_suite_focus=true) failing from more than 1 missing mutation in file
- [x] Proof of parsing comments in suppression file, multiple line and single. Comments are present in multiple suppressions files, with no problem whatsoever.
- [x] Proof of same mutations from pitest.sh via cli (can just use grep/ sed/ diff). We may have been obfuscating multiple violations previously, we should keep this in mind when considering results.

[Here](https://www.diffchecker.com/ncsTkNgX) is the difference between old pitest suppressions and new pitest suppressions.
The topmost mutation `}` is due to https://github.com/hcoles/pitest/issues/688 (See [this](https://github.com/checkstyle/checkstyle/issues/11720#issuecomment-1163248051)) and the 6 added mutations were multiple mutations on the same line. Report is good according to me. A mix of `sed`, `awk`, `groovy` was used, report is accurate.


- [x] --list functionality ([CI task](https://github.com/checkstyle/checkstyle/runs/7005319100?check_suite_focus=true))",True,11731,https://api.github.com/repos/checkstyle/checkstyle/pulls/11731,https://github.com/checkstyle/checkstyle/pull/11731,closed,1346,4,16,1,1,108,0,1,[],2022-06-12 12:57:10+00:00,2022-06-25 13:23:52+00:00,1124802.0,"13 days, 0:26:42","[{'comment_id': 897790267, 'comment_body': 'This will be extracted to a script once we agree upon the version of groovy to use. Same for the others.', 'comment_created': datetime.datetime(2022, 6, 15, 10, 5, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 897947762, 'comment_body': 'Please extend current XML checks to this folder if they do not already apply.', 'comment_created': datetime.datetime(2022, 6, 15, 12, 58, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 897949323, 'comment_body': ""Let's make this one profile per line, for less diff later."", 'comment_created': datetime.datetime(2022, 6, 15, 13, 0, 1, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 897951891, 'comment_body': '`differenceBetweenSets` -> `setDifference`', 'comment_created': datetime.datetime(2022, 6, 15, 13, 2, 25, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 897953905, 'comment_body': 'I am starting to think that we may be better served by having this just output XML that can be copy-pasted into the suppression file (with appropriate indentation and all). @Vyom-Yadav what do you think?', 'comment_created': datetime.datetime(2022, 6, 15, 13, 4, 19, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 897957474, 'comment_body': ""Please use sdkman https://sdkman.io/sdks#groovy, let's also use a yml anchor or some other way to avoid too much copy paste."", 'comment_created': datetime.datetime(2022, 6, 15, 13, 7, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 898275528, 'comment_body': '@nick-mancuso Do we really need to hardcode 20+ odd profiles? What if we add a new one or remove an old one?', 'comment_created': datetime.datetime(2022, 6, 15, 18, 9, 33, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 898286165, 'comment_body': 'Good point, do you propose that we pull them from pom.xml?', 'comment_created': datetime.datetime(2022, 6, 15, 18, 22, 54, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 898380925, 'comment_body': ""Well I was thinking why couldn't we pull them from our `pitest.sh --list` or integrating that process in this groovy script. If we need to we can duplicate the same code, but I would hope we don't need to have 2 versions of the code doing the same thing."", 'comment_created': datetime.datetime(2022, 6, 15, 20, 17, 35, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 898387766, 'comment_body': 'This script is a complete replacement for pitest.sh, and already has `--list` functionality', 'comment_created': datetime.datetime(2022, 6, 15, 20, 26, 47, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 898387974, 'comment_body': '@rnveach ping', 'comment_created': datetime.datetime(2022, 6, 15, 20, 27, 1, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 898504371, 'comment_body': 'Then yes, this should go against the POM like the script does. I did not realize this is a replacement to `pitest.sh`.', 'comment_created': datetime.datetime(2022, 6, 15, 22, 58, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 898507974, 'comment_body': ""Then let's recreate `--list` implementation from pitest.sh here, and use this to build the set. Then we never have discrepancies."", 'comment_created': datetime.datetime(2022, 6, 15, 23, 5, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 898528892, 'comment_body': ""@Vyom-Yadav let's do something similar in new script to build set and list all profiles. This way, we never forget to add one.\r\n\r\nThanks @rnveach "", 'comment_created': datetime.datetime(2022, 6, 15, 23, 8, 52, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 898758362, 'comment_body': 'Done, removed the duplication, we use matrix now.', 'comment_created': datetime.datetime(2022, 6, 16, 6, 59, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 898806334, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 16, 7, 58, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 898806513, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 16, 7, 59, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 898827927, 'comment_body': 'Normal text is easier to read than XML, what about a flag like `--generate-suppression`, though reading XML directly is not a tough job, we can reduce the complexity of adding flags by just outputting XML directly.', 'comment_created': datetime.datetime(2022, 6, 16, 8, 23, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 898845874, 'comment_body': 'It already is, I checked `ant-phase-verify.xml`\r\nhttps://github.com/checkstyle/checkstyle/blob/c0c0fc0c4b965c67ac1c0aa52a8f10643ee5cf47/config/ant-phase-verify.xml#L60-L68\r\n\r\n`.ci` folder is nowhere in exclusion, please ping me if there are more XML checks, I will check their config too.\r\n\r\nEdit -\r\nCI failing below for spacing, line length also acts as an indicator for the same.', 'comment_created': datetime.datetime(2022, 6, 16, 8, 42, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 898848506, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 16, 8, 45, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 899088461, 'comment_body': ""Is there some easy way (like adding a method call to end of gstring or it's usage) to avoid such indentation?"", 'comment_created': datetime.datetime(2022, 6, 16, 13, 33, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 899089885, 'comment_body': 'Please add very simple Javadocs to these methods to help clarify responsibility of each.', 'comment_created': datetime.datetime(2022, 6, 16, 13, 34, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 899095741, 'comment_body': 'Please use `final` wherever possible.', 'comment_created': datetime.datetime(2022, 6, 16, 13, 40, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 899100715, 'comment_body': '`compareSurvivedAndSuppressedMutations` -> `compareMutations`?', 'comment_created': datetime.datetime(2022, 6, 16, 13, 45, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 899117515, 'comment_body': 'General comment here: can we declare the differences of sets at the beginning of this method, and make conditions/ branches simpler here, with one return point and one if/else chain?\r\n\r\nWhat exactly are our conditions? Please put them in Javadoc.\r\n\r\n1. There are mutations in report that are not in suppressions -> fail\r\n2. There are mutations in suppressions that are not in report, but they are all unstable -> pass (this condition could be boolean extracted as set difference -> stream -> findFirst)\r\n3. There are mutations in suppressions that are not in report -> fail\r\n4. Report and suppressions are equal -> pass\r\n\r\n', 'comment_created': datetime.datetime(2022, 6, 16, 14, 1, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 899119734, 'comment_body': 'Please use `other` or `that` for parameter name. Do we not need `@Override` here and on hashcode below?', 'comment_created': datetime.datetime(2022, 6, 16, 14, 3, 16, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 899126892, 'comment_body': ""Let's consider our audience (at least for the time being). If this will make life easier this summer, let's do it for now."", 'comment_created': datetime.datetime(2022, 6, 16, 14, 10, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 899140152, 'comment_body': 'Why do we not use shebang here?', 'comment_created': datetime.datetime(2022, 6, 16, 14, 21, 1, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 899143289, 'comment_body': 'resolved, as we are using sdkman instead.', 'comment_created': datetime.datetime(2022, 6, 16, 14, 23, 59, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 899150188, 'comment_body': '```\r\n➜  checkstyle git:(pull-11731) ✗ git diff | cat\r\ndiff --git a/.ci/pitest-suppressions/pitest-coding-2-suppressions.xml b/.ci/pitest-suppressions/pitest-coding-2-suppressions.xml\r\nindex ae1afa008..6681577e9 100644\r\n--- a/.ci/pitest-suppressions/pitest-coding-2-suppressions.xml\r\n+++ b/.ci/pitest-suppressions/pitest-coding-2-suppressions.xml\r\n@@ -15,7 +15,7 @@\r\n     <mutatedMethod>isCaseTokenWithAnotherCaseFollowing</mutatedMethod>\r\n     <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator>\r\n     <description>removed conditional - replaced equality check with true</description>\r\n-    <lineContent>result = findLastChildWhichContainsSpecifiedToken(</lineContent>\r\n+  <lineContent>result = findLastChildWhichContainsSpecifiedToken(</lineContent>\r\n   </mutation>\r\n \r\n   <mutation unstable=""false"">\r\n\r\n\r\n➜  checkstyle git:(pull-11731) ✗ mvn clean verify\r\n[INFO] Scanning for projects...\r\n[INFO] Inspecting build with total of 1 modules...\r\n[INFO] Installing Nexus Staging features:\r\n[INFO]   ... total of 1 executions of maven-deploy-plugin replaced with nexus-staging-maven-plugin\r\n[INFO] \r\n[INFO] ------------------< com.puppycrawl.tools:checkstyle >-------------------\r\n[INFO] Building checkstyle 10.4-SNAPSHOT\r\n[INFO] --------------------------------[ jar ]---------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:3.2.0:clean (default-clean) @ checkstyle ---\r\n[INFO] \r\n[INFO] --- tidy-maven-plugin:1.1.0:check (validate) @ checkstyle ---\r\n[INFO] \r\n[INFO] --- maven-enforcer-plugin:3.1.0:enforce (enforce-maven) @ checkstyle ---\r\n[INFO] \r\n[INFO] --- maven-enforcer-plugin:3.1.0:enforce (enforce-versions) @ checkstyle ---\r\n[INFO] \r\n[INFO] --- xml-maven-plugin:1.0.2:check-format (default) @ checkstyle ---\r\n[ERROR] /home/nick/IdeaProjects/checkstyle/./.ci/pitest-suppressions/pitest-coding-2-suppressions.xml:18,16: Insert 2 spaces. Expected 4 found 2 spaces before start element <lineContent>\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  1.132 s\r\n[INFO] Finished at: 2022-06-16T10:29:35-04:00\r\n[INFO] ------------------------------------------------------------------------\r\n[ERROR] Failed to execute goal org.codehaus.mojo:xml-maven-plugin:1.0.2:check-format (default) on project checkstyle: There are XML formatting violations. Check the above log for details. -> [Help 1]\r\n[ERROR] \r\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\r\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\r\n[ERROR] \r\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\r\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\r\n➜  checkstyle git:(pull-11731) ✗ \r\n\r\n\r\n```\r\n\r\nproof that xml-maven-plugin fails for poor formatting ^', 'comment_created': datetime.datetime(2022, 6, 16, 14, 30, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 900083636, 'comment_body': 'Resolved via discussion in discord.', 'comment_created': datetime.datetime(2022, 6, 17, 12, 46, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 900135339, 'comment_body': 'Done, added the `-g | --generate-suppression` flag', 'comment_created': datetime.datetime(2022, 6, 17, 13, 48, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 900135758, 'comment_body': 'Done, indentation is appropriate now.', 'comment_created': datetime.datetime(2022, 6, 17, 13, 48, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 900135846, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 6, 17, 13, 48, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 900138731, 'comment_body': 'Done, added `@Override` too.', 'comment_created': datetime.datetime(2022, 6, 17, 13, 52, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 900138887, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 17, 13, 52, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 900139038, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 17, 13, 52, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 900140174, 'comment_body': '> one return point and one if/else chain?\r\n\r\nOne `if-else` chain is not possible as we need to check both `survived - suppressed` and `suppressed - survived`.\r\n\r\nAdded conditions in javadoc.', 'comment_created': datetime.datetime(2022, 6, 17, 13, 53, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 900149655, 'comment_body': 'Please do `mutations(s)`, same idea below.', 'comment_created': datetime.datetime(2022, 6, 17, 14, 1, 30, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 900150415, 'comment_body': 'Please remove mention of flag here, it has nothing to do with this method.', 'comment_created': datetime.datetime(2022, 6, 17, 14, 1, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 900151707, 'comment_body': 'Can we just return the gstring directly?', 'comment_created': datetime.datetime(2022, 6, 17, 14, 2, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 900195227, 'comment_body': '> survived - suppressed and suppressed - survived\r\n\r\nCan we do:\r\n\r\n```\r\nfinal int exitcode;\r\nif (survived-suppressed is not empty) {\r\n    exitcode = 1\r\n    //print stuff\r\n}\r\nelse if (suppressed - survived is all unstable) {\r\n    exitcode = 0\r\n    // print stuff\r\n}\r\nelse if (suppressed - survived is not empty) {\r\n    exitcode = 1\r\n    // print stuff\r\n}\r\nelse {\r\n    exitcode = 0\r\n    // print stuff\r\n}\r\n\r\n```\r\n?', 'comment_created': datetime.datetime(2022, 6, 17, 14, 49, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 900874288, 'comment_body': 'This cannot be done as multiple branches can be true at the same time->\r\n```\r\nsurvived - suppressed is not empty -> true, survived mutations \r\n```\r\nand \r\n```\r\nsuppressed - survived is not empty -> true, unnecessary suppressions.\r\n```\r\nBoth these branches can be true at the same time for any profile, so refactoring to one `if-else` chain is not possible.', 'comment_created': datetime.datetime(2022, 6, 18, 12, 37, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 900878372, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 18, 12, 44, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 900878451, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 18, 12, 44, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 900878503, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 18, 12, 44, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 900933002, 'comment_body': ""> Both these branches can be true at the same time for any profile\r\n\r\nGood point. Then let's go with previous script's behavior:\r\n\r\n```\r\nint exitcode;\r\nif (no diff) {\r\n    exitcode = 0\r\n}\r\nelse if (diff is all unstable) {\r\n    exitcode = 0\r\n}\r\nelse {\r\n    // we know diff should fail execution\r\n    // show diff\r\n    exitcode = 1\r\n}\r\n\r\n```"", 'comment_created': datetime.datetime(2022, 6, 18, 14, 21, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 900933580, 'comment_body': '`toXmlString`?', 'comment_created': datetime.datetime(2022, 6, 18, 14, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 900935081, 'comment_body': 'Please put `node ->` on previous line', 'comment_created': datetime.datetime(2022, 6, 18, 14, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 900937250, 'comment_body': 'Why do we have mutable String here?', 'comment_created': datetime.datetime(2022, 6, 18, 14, 29, 1, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 901001163, 'comment_body': 'Not anymore, changed it.', 'comment_created': datetime.datetime(2022, 6, 18, 17, 56, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 901001185, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 18, 17, 57, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 901001189, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 18, 17, 57, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 901088391, 'comment_body': '`final int exitCode`, also please add preceding blank line for readability', 'comment_created': datetime.datetime(2022, 6, 19, 11, 11, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 901088734, 'comment_body': '```suggestion\r\n    final String mavenCommand = \'mvn --no-transfer-progress -e -P"" + profile\r\n            + \'"" clean test-compile org.pitest:pitest-maven:mutationCoverage\'\r\n```\r\nAlways `+ ""` on new line.', 'comment_created': datetime.datetime(2022, 6, 19, 11, 15, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 901089167, 'comment_body': '```suggestion\r\n    final Set<Mutation> survivedAndUnsuppressedMutations =\r\n            setDifference(survivedMutations, suppressedMutations)\r\n    final Set<Mutation> unnecessarySuppressions =\r\n            setDifference(suppressedMutations, survivedMutations)\r\n      \r\n    final int exitCode\r\n\r\n```', 'comment_created': datetime.datetime(2022, 6, 19, 11, 18, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 901090274, 'comment_body': 'Why?', 'comment_created': datetime.datetime(2022, 6, 19, 11, 26, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 901090321, 'comment_body': 'Why?', 'comment_created': datetime.datetime(2022, 6, 19, 11, 27, 15, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 901091082, 'comment_body': 'Please remove condition, this method is null safe. `final boolean isUnstable`', 'comment_created': datetime.datetime(2022, 6, 19, 11, 32, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 901091279, 'comment_body': '`containsOnlyStableMutations` -> `hasOnlyStableMutations`', 'comment_created': datetime.datetime(2022, 6, 19, 11, 34, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 901091340, 'comment_body': '`isUnstable`', 'comment_created': datetime.datetime(2022, 6, 19, 11, 34, 47, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 901092324, 'comment_body': 'Extend this comment to mention that we get line of source code from file itself.', 'comment_created': datetime.datetime(2022, 6, 19, 11, 42, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 901092925, 'comment_body': '`survivedAndUnsuppressedMutations` -> `survivingUnsuppressedMutations`\r\n\r\n`unnecessarySuppressions` -> `extraSuppressions` (we do not yet know if they are unnecessary)', 'comment_created': datetime.datetime(2022, 6, 19, 11, 47, 27, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 901093287, 'comment_body': 'I would prefer `surviving` to `survived` in all cases in this file.', 'comment_created': datetime.datetime(2022, 6, 19, 11, 50, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 901093889, 'comment_body': '`getSurvivedMutationsList` -> `getSurvivingMutationList` to be consistent with method naming (no need for plural)', 'comment_created': datetime.datetime(2022, 6, 19, 11, 55, 13, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 903659981, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 22, 12, 6, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903660068, 'comment_body': ""Done.\r\n\r\nEdit - Groovy doesn't let you place `+` on the next line (see [this](https://stackoverflow.com/q/5079797/17261574)), I used a multi-line string instead."", 'comment_created': datetime.datetime(2022, 6, 22, 12, 6, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903660168, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 22, 12, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903660369, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 22, 12, 7, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903660425, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 22, 12, 7, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903661070, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 22, 12, 8, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903661220, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 22, 12, 8, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903715854, 'comment_body': ""Mutations in suppression files don't have a line number associated with them, but mutations in the `mutations.xml` file have a line number associated with them. The line number is stored so that it can be given to the user when there are surviving mutations. So when the line number is not present, the default value of `lineNumber` is `-1` which is equivalent to `LINE_NUMBER_NOT_PRESENT_VALUE`.\r\n\r\nBut thinking further on it, this boolean condition is not required in the `equals()` or `compareTo()` method as we don't base it on line number, I removed it but the logic of `-1` line number is still there. \r\n\r\nI added a Javadoc comment to warn maintainers about this."", 'comment_created': datetime.datetime(2022, 6, 22, 13, 3, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903716316, 'comment_body': 'Reason mentioned in https://github.com/checkstyle/checkstyle/pull/11731#discussion_r903715854 (See above)', 'comment_created': datetime.datetime(2022, 6, 22, 13, 3, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903735724, 'comment_body': ""For some reason after changing the property name from `unstable` to `isUnstable`, it doesn't let me access it via `isUnstable()`, I get `Cannot find matching method Mutation#isUnstable(). Please check if the declared type is correct and if the method exists.`"", 'comment_created': datetime.datetime(2022, 6, 22, 13, 21, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903741210, 'comment_body': 'Not done, `isUnstable`.', 'comment_created': datetime.datetime(2022, 6, 22, 13, 25, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 903747441, 'comment_body': 'Sorry not done, I forget to delete the done comment, the reason is mentioned in https://github.com/checkstyle/checkstyle/pull/11731#discussion_r903735724', 'comment_created': datetime.datetime(2022, 6, 22, 13, 30, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903750259, 'comment_body': 'Does groovy remove `is` when generating getters? If so, you could just create your own getter (override)', 'comment_created': datetime.datetime(2022, 6, 22, 13, 33, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 903754496, 'comment_body': 'Is groovy not able to infer type?', 'comment_created': datetime.datetime(2022, 6, 22, 13, 36, 54, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 903754817, 'comment_body': 'Please remove this empty line', 'comment_created': datetime.datetime(2022, 6, 22, 13, 37, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 903756739, 'comment_body': 'Reason at https://github.com/checkstyle/checkstyle/pull/11731#discussion_r903735724 does not matter here :)', 'comment_created': datetime.datetime(2022, 6, 22, 13, 38, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 903757382, 'comment_body': '`unstableMutation` -> `unstableAttributeValue`', 'comment_created': datetime.datetime(2022, 6, 22, 13, 39, 30, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 903777401, 'comment_body': 'I created another getter, though groovy documentation mentions-\r\n\r\n> Note the special naming convention for record getters. They are the same name as the field (rather than the often common JavaBean convention of capitalized with a ""get"" prefix).\r\n\r\nDone.', 'comment_created': datetime.datetime(2022, 6, 22, 13, 54, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903778325, 'comment_body': 'Done now.', 'comment_created': datetime.datetime(2022, 6, 22, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903841983, 'comment_body': 'It is able to but I mentioned explicitly here, should I use def for all types except primitives and String?', 'comment_created': datetime.datetime(2022, 6, 22, 14, 44, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903842133, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 22, 14, 44, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903842221, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 22, 14, 44, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903873857, 'comment_body': '`if (!(flag == null || (flag == ""-g"" || flag == ""--generate-suppression""))) {`\r\n-->\r\n`if (flag != null && flag != ""-g"" && flag != ""--generate-suppression"") {`', 'comment_created': datetime.datetime(2022, 6, 22, 15, 6, 47, tzinfo=datetime.timezone.utc), 'commenter': 'baratali', 'type': 'User'}, {'comment_id': 903884208, 'comment_body': 'I meant in reference to `Collections.emptySet();`', 'comment_created': datetime.datetime(2022, 6, 22, 15, 14, 5, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 903901205, 'comment_body': 'maybe better to rename `getSurvivingMutationList` -> `getSurvivingMutations`?\r\n`List` part is a little confusing because the method returns Set.', 'comment_created': datetime.datetime(2022, 6, 22, 15, 25, 23, tzinfo=datetime.timezone.utc), 'commenter': 'baratali', 'type': 'User'}, {'comment_id': 903907932, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 22, 15, 29, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903908171, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 22, 15, 29, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903910867, 'comment_body': 'Why we need to execute  pitest by maven here ?\r\n\r\nThis script should be just analyze reports. No depending on maven ', 'comment_created': datetime.datetime(2022, 6, 22, 15, 31, 4, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 903915628, 'comment_body': 'This script generates and analyses the report, how else do we approach it? Generating reports separately and checking them separately? \r\nThis is what the previous bash script did.', 'comment_created': datetime.datetime(2022, 6, 22, 15, 34, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903922218, 'comment_body': 'We could generate report in CI job, then just analyze via script.', 'comment_created': datetime.datetime(2022, 6, 22, 15, 40, 15, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 903922560, 'comment_body': 'same as https://github.com/checkstyle/checkstyle/pull/11731/files#r903901205', 'comment_created': datetime.datetime(2022, 6, 22, 15, 40, 33, tzinfo=datetime.timezone.utc), 'commenter': 'baratali', 'type': 'User'}, {'comment_id': 903928566, 'comment_body': '>This is what the previous bash script did.\r\n\r\nWhat is problem with this modular concept ?\r\nIf we have problems with script we do not need to return pitest ', 'comment_created': datetime.datetime(2022, 6, 22, 15, 44, 32, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 903928843, 'comment_body': 'It would break the habit, till now we used to just run `./.ci/pitest.sh [profile]` to do the job for us, now we would add a step to this, it will make it executing difficult locally.', 'comment_created': datetime.datetime(2022, 6, 22, 15, 44, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903930825, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 22, 15, 46, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903930910, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 22, 15, 46, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 903938494, 'comment_body': '> What is problem with this modular concept ?\r\nIf we have problems with script we do not need to return pitest\r\n\r\nI have no problem with this, just give me a thumbs up and I will separate the script and the maven command.', 'comment_created': datetime.datetime(2022, 6, 22, 15, 52, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 904277251, 'comment_body': 'Please move it out, your script should be just report analyser.', 'comment_created': datetime.datetime(2022, 6, 22, 22, 5, 7, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 904607847, 'comment_body': 'Done, script now just analyzes the report.', 'comment_created': datetime.datetime(2022, 6, 23, 5, 55, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 905177853, 'comment_body': 'ci/pitest-survival-check.groovy', 'comment_created': datetime.datetime(2022, 6, 23, 15, 36, 45, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 905227958, 'comment_body': 'Renamed to `pitest-survival-check-xml.groovy` as CI runs both XML model type of suppression and previous HTML type of model (known as `pitest.sh`, now changed to `pitest-survival-check-html.sh`)\r\n\r\nThe idea of running both types of checking in parallel was suggested at https://github.com/checkstyle/checkstyle/issues/11720#issuecomment-1164365831', 'comment_created': datetime.datetime(2022, 6, 23, 16, 20, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 906629251, 'comment_body': '@nick-mancuso Please see the latest changes, since now we are not returning anything now (`System.exit` is not possible, CodeNarc code smell), the Javadoc comment is still present, if you insist I can add empty if branches with comments like `// do nothing`.', 'comment_created': datetime.datetime(2022, 6, 25, 3, 54, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 906637344, 'comment_body': 'Please suppress this rule and use previous approach, we can refine script later if we need to.', 'comment_created': datetime.datetime(2022, 6, 25, 5, 20, 13, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 906639818, 'comment_body': 'Done, added suppression.', 'comment_created': datetime.datetime(2022, 6, 25, 5, 50, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}]","[{'commit_sha': '0ab016962a98727c61b9319f01d3c02f9a7adda0', 'committer_username': 'Vyom-Yadav', 'committer_name': 'Vyom Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 10, 13, 19, tzinfo=datetime.timezone.utc)}]",Vyom Yadav,73882557,,User,,116,,24,105
992197289,Issue #11727: Include CDG Accelerator Plugin to boost pitest performance,"Resolves #11727 

---

### key
```diff
+ decreased execution time
- increased execution time
```

---

Compared with https://github.com/checkstyle/checkstyle/pull/11866

Run with accelerator: https://github.com/checkstyle/checkstyle/actions/runs/2640881429
Run without accelerator (#11866): https://github.com/checkstyle/checkstyle/actions/runs/2636912598
Run without licence: https://github.com/checkstyle/checkstyle/actions/runs/2641406919

```diff
@@ Profile                           New time               Previous time @@

+  pitest-annotation                 1m 44s                 2m 13s 
+  pitest-ant                        1m 42s                 1m 51s 
+  pitest-api                        2m 50s                 4m 30s 
+  pitest-blocks                     1m 54s                 3m 35s 
+  pitest-coding-1                   5m 58s                 6m 38s 
+  pitest-coding-2                   4m 7s                  6m 37s 
+  pitest-coding-require-this-check  15m 36s                16m 35s
+  pitest-common                     7m 32s                 7m 50s 
+  pitest-common-2                   4m 40s                 8m 23s 
+  pitest-design                     1m 54s                 3m 36s 
+  pitest-filters                    2m 44s                 3m 9s  
+  pitest-header                     2m 5s                  2m 26s 
+  pitest-imports                    2m 42s                 3m 43s 
+  pitest-indentation                4m 59s                 11m 36s
+  pitest-javadoc                    5m 43s                 10m 28s
+  pitest-main                       1m 49s                 3m 34s 
+  pitest-metrics                    1m 42s                 2m 24s 
+  pitest-misc                       3m 13s                 4m 21s 
+  pitest-modifier                   2m 39s                 2m 51s 
+  pitest-naming                     2m 21s                 4m 9s  
+  pitest-packagenamesloader         1m 7s                  1m 45s 
+  pitest-regexp                     2m 29s                 3m 28s 
+  pitest-sizes                      1m 57s                 3m 23s 
+  pitest-tree-walker                2m 51s                 4m 22s 
+  pitest-utils                      3m 17s                 6m 12s 
+  pitest-whitespace                 3m 9s                  3m 52s 
+  pitest-xpath                      4m 38s                 13m 36s
+  pitest-java-ast-visitor           3m 15s                 5m 24s 
```",True,11869,https://api.github.com/repos/checkstyle/checkstyle/pulls/11869,https://github.com/checkstyle/checkstyle/pull/11869,closed,18,0,5,1,6,0,0,1,[],2022-07-09 09:47:42+00:00,2022-07-09 18:56:30+00:00,32928.0,9:08:48,[],"[{'commit_sha': '73fecb09025995f381d26a431f3574defb7eafd2', 'committer_username': 'Vyom-Yadav', 'committer_name': 'Vyom Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 10, 13, 19, tzinfo=datetime.timezone.utc)}]",Vyom Yadav,73882557,,User,,116,,24,105
1038648269,minor: Resolve redundant 'if' statement IDEA inspection,Removes redundant `if` statement.,True,430,https://api.github.com/repos/checkstyle/sonar-checkstyle/pulls/430,https://github.com/checkstyle/sonar-checkstyle/pull/430,closed,1,5,1,1,1,0,0,0,[],2022-08-27 14:44:53+00:00,2022-08-27 19:11:58+00:00,16025.0,4:27:05,[],"[{'commit_sha': '0d9c59771911c0e98c01eb65b410861113ff3665', 'committer_username': 'Vyom-Yadav', 'committer_name': 'Vyom Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 10, 13, 19, tzinfo=datetime.timezone.utc)}]",Vyom Yadav,73882557,,User,,116,,24,105
1026570003,Issue #2160: Activate error-prone,"Resolves #2160

Enabling error-prone for the project, all `.*[\\/]resources[\\/].*` are excluded from error-prone evaluation.
https://errorprone.info/docs/flags

---

**Proof of Working:**

- `New surviving error(s) found:` https://github.com/checkstyle/checkstyle/runs/7965373088?check_suite_focus=true
- `Unnecessary suppressed error(s) found and should be removed:` https://github.com/checkstyle/checkstyle/runs/7965413923?check_suite_focus=true
- Both `New surviving error(s) found:` and `Unnecessary suppressed error(s) found and should be removed:` https://github.com/checkstyle/checkstyle/runs/7965481307?check_suite_focus=true

---

### Reason for adding `jvm.config` file:
`--add-exports` and `--add-opens` is required on JDK 16 and newer due to [JEP 396: Strongly Encapsulate JDK Internals by Default](https://openjdk.java.net/jeps/396)
",True,12063,https://api.github.com/repos/checkstyle/checkstyle/pulls/12063,https://github.com/checkstyle/checkstyle/pull/12063,closed,557,52,9,2,9,47,0,1,[],2022-08-15 15:14:53+00:00,2022-08-27 18:58:13+00:00,1050200.0,"12 days, 3:43:20","[{'comment_id': 946162246, 'comment_body': 'Do we need `\\` ? Can we have two arg tags ?', 'comment_created': datetime.datetime(2022, 8, 15, 21, 58, 3, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 946412629, 'comment_body': 'No, it needs to be with the `-Xplugin:ErrorProne`', 'comment_created': datetime.datetime(2022, 8, 16, 7, 12, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 946968096, 'comment_body': 'This form is good ?\r\n```\r\n<arg>-Xplugin:ErrorProne/arg>\r\n<arg>-XepExcludedPaths:.*[\\\\/]resources[\\\\/].*e</arg>\r\n```', 'comment_created': datetime.datetime(2022, 8, 16, 15, 57, 24, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 947496217, 'comment_body': ""No, it won't work, tried it."", 'comment_created': datetime.datetime(2022, 8, 17, 6, 24, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 947915882, 'comment_body': 'please move error prone to `verify` phase.\r\nhttps://github.com/google/error-prone/issues/985#issuecomment-378865047\r\n\r\nit is better to let compile phase do only compilation.\r\nPlease investigate way to skip error-prone, as we do it in special profile \r\nhttps://github.com/checkstyle/checkstyle/blob/9b57025cb9f9be38790d3c09b7273e3ef5170b9a/pom.xml#L2134-L2138', 'comment_created': datetime.datetime(2022, 8, 17, 13, 14, 45, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 948533597, 'comment_body': 'this will be first tool that we allow ""in-code and by-code"" suppression \r\nis there any benefit to use https://errorprone.info/docs/installation#command-line version to have options to control its behavior ? or we can have it as maven integration for now and consider moving it out as it become problematic.\r\nPlease share your thoughts.', 'comment_created': datetime.datetime(2022, 8, 17, 23, 48, 57, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 950335599, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 8, 19, 15, 47, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 950338419, 'comment_body': ""I don't see any reason for not using maven, we can achieve everything by using https://errorprone.info/docs/flags, invoking it via the command line will become very tedious very quickly, so I vote for sticking to maven."", 'comment_created': datetime.datetime(2022, 8, 19, 15, 50, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 950340236, 'comment_body': 'We need a permanent solution for it, there are a lot of Bug Patterns (Checks) in error-prone, and we cannot allow all, some names might even overlap with IDEA or PMD.', 'comment_created': datetime.datetime(2022, 8, 19, 15, 52, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 950473383, 'comment_body': 'Let’s introduce tool to via maven, we can come back to consider some system like we have for pitest as annotations become a nuisance.', 'comment_created': datetime.datetime(2022, 8, 19, 18, 36, 46, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 950635742, 'comment_body': 'Do we have a way to skip execution of errorprone  in `no-validations` profile?', 'comment_created': datetime.datetime(2022, 8, 20, 2, 20, 55, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 950635885, 'comment_body': 'One more reason to execute it not by maven plugin and keep suppression of stuff in separate file as we did for pitest.', 'comment_created': datetime.datetime(2022, 8, 20, 2, 22, 49, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 950635925, 'comment_body': 'Ok', 'comment_created': datetime.datetime(2022, 8, 20, 2, 23, 19, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 950646999, 'comment_body': 'Yes, it is present in the PR', 'comment_created': datetime.datetime(2022, 8, 20, 4, 26, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 950647240, 'comment_body': 'How are we exactly planning to do that? Error prone does not support individual suppressions by command line too, am I missing something here?', 'comment_created': datetime.datetime(2022, 8, 20, 4, 30, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 950693522, 'comment_body': 'Same as in pitest: get report from CLI, compare with known output, on any diff fail build', 'comment_created': datetime.datetime(2022, 8, 20, 13, 3, 45, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 950856584, 'comment_body': 'Still, we can skip command line, just set [`<failOnError>`](https://maven.apache.org/plugins/maven-compiler-plugin/compile-mojo.html#failOnError) to false, create a separate profile, execute it, get the results, our custom script will parse the results and pass or fail the build.', 'comment_created': datetime.datetime(2022, 8, 21, 14, 38, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 952076944, 'comment_body': 'I do not know why we allowed trailing comments previously, please place explanation of rule suppression above rule name. Can we fix others in a separate commit?', 'comment_created': datetime.datetime(2022, 8, 23, 2, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 952077979, 'comment_body': 'Can we enumerate files here instead of wildcard?', 'comment_created': datetime.datetime(2022, 8, 23, 2, 9, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 952082010, 'comment_body': 'Please wrap operator as we do for java code, `+ "" ` then text in all scripts and java code. Ex: `+ ""  (compile | test-compile)`. Also explain compile/ test-compile difference in javadoc.', 'comment_created': datetime.datetime(2022, 8, 23, 2, 14, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 952088718, 'comment_body': 'wrap operator.', 'comment_created': datetime.datetime(2022, 8, 23, 2, 20, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 952089112, 'comment_body': 'wrap operator.', 'comment_created': datetime.datetime(2022, 8, 23, 2, 21, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 952090208, 'comment_body': 'Do we need extra parenthesis here?', 'comment_created': datetime.datetime(2022, 8, 23, 2, 24, 14, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 952096618, 'comment_body': ""Why can't this be single line? Same for others below."", 'comment_created': datetime.datetime(2022, 8, 23, 2, 37, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 952096915, 'comment_body': 'Please explain this change.', 'comment_created': datetime.datetime(2022, 8, 23, 2, 38, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 952132639, 'comment_body': ""Can't be done in groovy, it does not use `;` to delimit statements, if we wrap `+` onto the next line, it won't compile."", 'comment_created': datetime.datetime(2022, 8, 23, 4, 13, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 952132696, 'comment_body': 'Same as https://github.com/checkstyle/checkstyle/pull/12063#discussion_r952132639', 'comment_created': datetime.datetime(2022, 8, 23, 4, 13, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 952132738, 'comment_body': 'Same as https://github.com/checkstyle/checkstyle/pull/12063#discussion_r952132639', 'comment_created': datetime.datetime(2022, 8, 23, 4, 13, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 952137631, 'comment_body': 'Done\r\n', 'comment_created': datetime.datetime(2022, 8, 23, 4, 26, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 952137690, 'comment_body': 'No, removed', 'comment_created': datetime.datetime(2022, 8, 23, 4, 27, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 952137744, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 23, 4, 27, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 952137904, 'comment_body': 'Explained compile and test-compile in javadoc', 'comment_created': datetime.datetime(2022, 8, 23, 4, 27, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 952138378, 'comment_body': ""Required on JDK 16 and newer due to [JEP 396: Strongly Encapsulate JDK Internals by Default](https://openjdk.java.net/jeps/396). Can't add comments in `jvm.config` file."", 'comment_created': datetime.datetime(2022, 8, 23, 4, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 952140539, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 8, 23, 4, 34, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 952432039, 'comment_body': 'Please add this to PR description, to let us easily come back to explanation later.', 'comment_created': datetime.datetime(2022, 8, 23, 10, 23, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 952621766, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 8, 23, 13, 22, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 952670193, 'comment_body': 'Sad that we have to do this, there has been no action at https://github.com/google/error-prone/issues/444.', 'comment_created': datetime.datetime(2022, 8, 23, 14, 2, 14, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 953414753, 'comment_body': ""I added a comment requesting for support, let's hope they support this in future releases."", 'comment_created': datetime.datetime(2022, 8, 24, 6, 52, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 956308033, 'comment_body': ""please make `profiles` uppercase since it's a constant"", 'comment_created': datetime.datetime(2022, 8, 26, 18, 20, 17, tzinfo=datetime.timezone.utc), 'commenter': 'baratali', 'type': 'User'}, {'comment_id': 956385803, 'comment_body': 'This fails if no arguments are passed\r\n```\r\n$ groovy error-prone-check.groovy\r\nCaught: java.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0\r\njava.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n        at error-prone-check.run(error-prone-check.groovy:18)\r\n```', 'comment_created': datetime.datetime(2022, 8, 26, 19, 32, 59, tzinfo=datetime.timezone.utc), 'commenter': 'baratali', 'type': 'User'}, {'comment_id': 956388087, 'comment_body': 'This needs a newline after `flag`. (and I would delete `\\n` at the start)\r\n```\r\n$ groovy error-prone-check.groovy asd\r\nCaught: java.lang.IllegalArgumentException:\r\nUnexpected argument: asdUsage groovy ./.ci/error-prone-check.groovy (compile | test-compile) [-g | --generate-suppression]\r\njava.lang.IllegalArgumentException:\r\nUnexpected argument: asdUsage groovy ./.ci/error-prone-check.groovy (compile | test-compile) [-g | --generate-suppression]\r\n        at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n...\r\n```', 'comment_created': datetime.datetime(2022, 8, 26, 19, 35, 54, tzinfo=datetime.timezone.utc), 'commenter': 'baratali', 'type': 'User'}, {'comment_id': 956390935, 'comment_body': 'same as the previous comment https://github.com/checkstyle/checkstyle/pull/12063#discussion_r956388087', 'comment_created': datetime.datetime(2022, 8, 26, 19, 39, 43, tzinfo=datetime.timezone.utc), 'commenter': 'baratali', 'type': 'User'}, {'comment_id': 956396502, 'comment_body': 'Also in Java, we write `static final`.', 'comment_created': datetime.datetime(2022, 8, 26, 19, 46, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 956578074, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 8, 27, 12, 40, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 956578113, 'comment_body': 'Now throws an exception.', 'comment_created': datetime.datetime(2022, 8, 27, 12, 40, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 956578119, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 8, 27, 12, 40, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 956578136, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 8, 27, 12, 41, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}]","[{'commit_sha': '80c459b667776b7c144fa26376232e19c2cffa17', 'committer_username': 'Vyom-Yadav', 'committer_name': 'Vyom Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 10, 13, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23e00fb10d42e7a9f4fd7e936948415ac81a5579', 'committer_username': 'Vyom-Yadav', 'committer_name': 'Vyom Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 10, 13, 19, tzinfo=datetime.timezone.utc)}]",Vyom Yadav,73882557,,User,,116,,24,105
1039309806,"Issue #12099: Add ArchUnit test to ensure fields in modules and utils are immutable, and modules are correctly annotated","#12099 

### A brief about the changes in this PR:

- There are 4 `ArchRules`, ArchUnit is just like English, so the rules are easy to understand.
  - `fieldsInUtilClassesShouldBeImmutable`
  - `fieldsInStatelessChecksShouldBeImmutable`
  - `classesWithImmutableFieldsShouldBeStateless`
  - `classesWithMutableFieldsShouldBeStateful`
-  Suppression list was added and populated.",True,12135,https://api.github.com/repos/checkstyle/checkstyle/pulls/12135,https://github.com/checkstyle/checkstyle/pull/12135,closed,474,2,2,1,2,123,0,1,[],2022-08-29 07:58:35+00:00,2022-09-12 18:43:21+00:00,1248286.0,"14 days, 10:44:46","[{'comment_id': 957305439, 'comment_body': 'Please explain how an enum is not immutable?', 'comment_created': datetime.datetime(2022, 8, 29, 13, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 957328065, 'comment_body': 'I thought utils had to end with `Util`?', 'comment_created': datetime.datetime(2022, 8, 29, 13, 21, 35, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 957330288, 'comment_body': ""It is interesting that these are not immutable. I understand they aren't but this means someone can hijack things and modify them. @romani Do we want to consider some type of paradigm switch?"", 'comment_created': datetime.datetime(2022, 8, 29, 13, 22, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 957332621, 'comment_body': 'Why is long/double separated from primitive types? They are immutable if they have `final` otherwise they are not immutable.', 'comment_created': datetime.datetime(2022, 8, 29, 13, 24, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 957479212, 'comment_body': 'It is, these were old suppression (redundant), I updated and verified the list. ', 'comment_created': datetime.datetime(2022, 8, 29, 15, 21, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 957479823, 'comment_body': 'Again, old suppression, updated the list.', 'comment_created': datetime.datetime(2022, 8, 29, 15, 21, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 957491856, 'comment_body': ""@Vyom-Yadav These items are actually immutable. They are a 0 length array, there is nothing to mutate.\r\nThese should be commented as a false positive.\r\n\r\n`TOKEN_IDS` is not immutable since it doesn't have a 0 length."", 'comment_created': datetime.datetime(2022, 8, 29, 15, 32, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 957494180, 'comment_body': 'BitSet is mutable.', 'comment_created': datetime.datetime(2022, 8, 29, 15, 34, 54, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 957544509, 'comment_body': ""Yes, they are, I mixed the concept of them being not final and not being thread-safe for read-write operations, but here it won't matter as they are final.\r\nDone."", 'comment_created': datetime.datetime(2022, 8, 29, 16, 20, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 957568544, 'comment_body': 'Separated zero-size arrays from actual violations.', 'comment_created': datetime.datetime(2022, 8, 29, 16, 47, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 957569492, 'comment_body': ""Let's fix violations in a separate PR, for now this can stay in suppression list."", 'comment_created': datetime.datetime(2022, 8, 29, 16, 48, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 957653885, 'comment_body': 'Agreed, leaving for discussion.', 'comment_created': datetime.datetime(2022, 8, 29, 18, 8, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 957900527, 'comment_body': 'Reason has to be added above.', 'comment_created': datetime.datetime(2022, 8, 30, 0, 31, 22, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 957901468, 'comment_body': 'What does default mean here?', 'comment_created': datetime.datetime(2022, 8, 30, 0, 34, 11, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 957901625, 'comment_body': 'Same? Why not just call this immutable types?', 'comment_created': datetime.datetime(2022, 8, 30, 0, 34, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 957902090, 'comment_body': 'Last comment, we talked about checks and immutable types. I assume if we try to move forward with it, its going to use similar code to this.\r\n\r\nWhy not just try to name this immutability test?', 'comment_created': datetime.datetime(2022, 8, 30, 0, 35, 53, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 958017205, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 8, 30, 5, 22, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 958017274, 'comment_body': 'Removed default.', 'comment_created': datetime.datetime(2022, 8, 30, 5, 22, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 958017325, 'comment_body': 'Removed default.', 'comment_created': datetime.datetime(2022, 8, 30, 5, 22, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 958017457, 'comment_body': 'Done, changed name.', 'comment_created': datetime.datetime(2022, 8, 30, 5, 23, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 962167763, 'comment_body': 'Can we add condition for zero size arrays here to avoid ` .that(are(not(zeroSizeArrays)))` below? It seems like in test methods, this should not be a separate condition.', 'comment_created': datetime.datetime(2022, 9, 3, 15, 17, 14, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 962169685, 'comment_body': 'If all `beSuppressed` conditions are basically the same (other than the collection we are checking), can we just make some static method where we pass in the name of the collection to build these conditions? \r\n\r\n`final  ArchCondition<JavaField> beSuppressed = getSuppressionCondition(SUPPRESSED_FIELDS_IN_UTIL_CLASSES);`\r\n\r\nOr, perhaps even more generically, we pass in a Predicate (java, not archunit).\r\n\r\n`final  ArchCondition<JavaField> beMessageKey = getSuppressionConditionByPredicate(it -> it.getName().startsWith(""MSG""));`', 'comment_created': datetime.datetime(2022, 9, 3, 15, 28, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 962170905, 'comment_body': 'I do not see logic here for annotation checking, what am I missing?', 'comment_created': datetime.datetime(2022, 9, 3, 15, 37, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 962171166, 'comment_body': '`javaFiled` -> `javaField`', 'comment_created': datetime.datetime(2022, 9, 3, 15, 38, 57, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 962171616, 'comment_body': 'I feel like checking for `isMutable` in `ImmutableFieldArchCondition` is strange... It feels like we should be checking for immutability if anything, or tweak class to be `MutableFieldArchcondition` and negate it.', 'comment_created': datetime.datetime(2022, 9, 3, 15, 41, 25, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 962171746, 'comment_body': 'Is it possible to get all classes by package, as for api/util package rule?', 'comment_created': datetime.datetime(2022, 9, 3, 15, 42, 41, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 962171884, 'comment_body': ""These private classes are not trivial, please add a javadoc to explain what's going on here."", 'comment_created': datetime.datetime(2022, 9, 3, 15, 44, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 962172254, 'comment_body': ""Let's avoid `Or` in our predicates, and rely on build in `.orShould` to keep predicates as simple as possible."", 'comment_created': datetime.datetime(2022, 9, 3, 15, 46, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 962294954, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 4, 11, 12, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 962295025, 'comment_body': 'Nothing, the variable name was incorrect, it only checks suppressions.', 'comment_created': datetime.datetime(2022, 9, 4, 11, 12, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 962295104, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 4, 11, 13, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 962295442, 'comment_body': ""We are getting the required classes only, the ones present in `utils` packages, but there are some classes we need to exclude, like `com.puppycrawl.tools.checkstyle.checks.javadoc.utils.TagInfo` that's why this condition is there."", 'comment_created': datetime.datetime(2022, 9, 4, 11, 15, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 962295509, 'comment_body': 'The variable name here was incorrect which caused the confusion, corrected now.', 'comment_created': datetime.datetime(2022, 9, 4, 11, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 962299120, 'comment_body': ""Done, made a separate class, didn't make a generic (`<T>`) one as it wasn't looking neat."", 'comment_created': datetime.datetime(2022, 9, 4, 11, 41, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 962299147, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 4, 11, 42, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 962299187, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 4, 11, 42, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 962309580, 'comment_body': 'Update ArchRule names in Javadocs', 'comment_created': datetime.datetime(2022, 9, 4, 12, 55, 43, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 962311613, 'comment_body': ""Let's try to keep conditions as simple as possible:\r\n\r\n```suggestion\r\n            .andShould(bePrivate)\r\n            .orShould(beMessageKeys)\r\n            .orShould(beSuppressed);\r\n```"", 'comment_created': datetime.datetime(2022, 9, 4, 13, 8, 43, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 962312596, 'comment_body': '`final DescribedPredicate<JavaField> moduleProperties = new ModulePropertyPredicate();`', 'comment_created': datetime.datetime(2022, 9, 4, 13, 14, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 962312795, 'comment_body': '`Are` -> `ShouldBe`', 'comment_created': datetime.datetime(2022, 9, 4, 13, 16, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 962313086, 'comment_body': '`beAddedToSuppressionList` -> `beSuppressedClass`', 'comment_created': datetime.datetime(2022, 9, 4, 13, 18, 20, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 962313147, 'comment_body': '`beSuppressed` -> `beSuppressedField`', 'comment_created': datetime.datetime(2022, 9, 4, 13, 18, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 962316985, 'comment_body': 'Please do this to avoid duplicated classes:\r\n```suggestion\r\n\r\n    private static final class ArchRuleSuppressionCondition<T extends HasName.AndFullName>\r\n            extends ArchCondition<T> {\r\n\r\n        private final Set<String> suppressions;\r\n\r\n        private ArchRuleSuppressionCondition(Set<String> suppressions,\r\n                                             String description) {\r\n            super(description);\r\n            this.suppressions = suppressions;\r\n        }\r\n\r\n        @Override\r\n        public void check(T item, ConditionEvents events) {\r\n            if (!suppressions.contains(item.getFullName())) {\r\n                final String message = String.format(\r\n                    Locale.ROOT, ""should %s or resolved."", getDescription());\r\n                events.add(SimpleConditionEvent.violated(item, message));\r\n            }\r\n        }\r\n    }\r\n\r\n```', 'comment_created': datetime.datetime(2022, 9, 4, 13, 44, 41, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 962317255, 'comment_body': 'I already tried this, AndFullName is package private.', 'comment_created': datetime.datetime(2022, 9, 4, 13, 46, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 962318767, 'comment_body': '> AndFullName is package private\r\n\r\nNo, this is not correct: https://github.com/TNG/ArchUnit/blob/c081b98f139546962c98c89f135f78edab27de49/archunit/src/main/java/com/tngtech/archunit/core/domain/properties/HasName.java#L33\r\n\r\nPlease try again.', 'comment_created': datetime.datetime(2022, 9, 4, 13, 57, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 962343662, 'comment_body': 'Thanks for clarifying :), done.', 'comment_created': datetime.datetime(2022, 9, 4, 17, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 962343680, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 4, 17, 6, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 962343684, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 4, 17, 6, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 962343693, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 4, 17, 7, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 962343698, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 4, 17, 7, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 962343706, 'comment_body': 'Both conditions are combined as `orShould(..)` will result in `(a && b && c) || d`, whereas we would like `a && b && (c || d)`.\r\n```java\r\nfinal ArchRule fieldsInStatelessChecksShouldBeImmutable = fields()                 \r\n    .that()                                                                        \r\n    .areDeclaredInClassesThat()                                                    \r\n    .areAnnotatedWith(StatelessCheck.class)                                        \r\n    .and(are(not(moduleProperties)))                                               \r\n    .should(BE_IMMUTABLE)                                                          \r\n    .andShould()                                                                   \r\n    .beFinal()                                                                     \r\n    .andShould()                                                                   \r\n    .bePrivate()                                                                   \r\n    .orShould()                                                                    \r\n    .haveNameStartingWith(""MSG"")                                                   \r\n    .orShould(beSuppressedField);                                                 \r\n```\r\nwill not give a violation for (missing final)\r\n```\r\npublic static String MSG_KEY = ""variable.declaration.usage.distance"";\r\n```\r\nwhereas the current `ArchRule` will. ', 'comment_created': datetime.datetime(2022, 9, 4, 17, 7, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 962343712, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 4, 17, 7, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 962945693, 'comment_body': '@Vyom-Yadav is there some benefit to having three rules in one unit test? I think it is better to keep paradigm of 1 rule == 1 unit test, especially with complicated rules.', 'comment_created': datetime.datetime(2022, 9, 5, 14, 8, 46, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 962949287, 'comment_body': ""Let's have two separate suppression lists, one for this rule and one for the below rule. We can use both lists in a given rule; we can filter by the 'other' list first with some ArchCondition like `shouldBeAnnotatedWith*OtherAnnotation*`."", 'comment_created': datetime.datetime(2022, 9, 5, 14, 12, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 962950304, 'comment_body': 'Separate lists will eliminate the need for these comments, otherwise we would need to update them to new name of rule.', 'comment_created': datetime.datetime(2022, 9, 5, 14, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 963171444, 'comment_body': ""https://github.com/checkstyle/checkstyle/pull/12135#discussion_r957902090\r\nI brought this up that we could have multiple tests that need mutability checks. I am ok with splitting things, but I don't think we should duplicate code."", 'comment_created': datetime.datetime(2022, 9, 6, 0, 58, 33, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 963176392, 'comment_body': 'There should be very little/ no code duplication; conditions can be extracted to fields in the test class.', 'comment_created': datetime.datetime(2022, 9, 6, 1, 17, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 965288934, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 7, 20, 54, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 965289580, 'comment_body': 'Created separate lists.', 'comment_created': datetime.datetime(2022, 9, 7, 20, 55, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 965289604, 'comment_body': 'Created separate lists.', 'comment_created': datetime.datetime(2022, 9, 7, 20, 55, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 966118319, 'comment_body': 'Please extract this to a boolean, maybe something like:\r\n`final boolean isEnumConstantOrEmptyArray = rawType.isEnum() || ZERO_SIZE_ARRAY_FIELDS.contains(javaField.getFullName()`', 'comment_created': datetime.datetime(2022, 9, 8, 15, 32, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 966120074, 'comment_body': 'Please extract this condition to a boolean as well, maybe just called `isImmutableType`', 'comment_created': datetime.datetime(2022, 9, 8, 15, 34, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 967348045, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 9, 18, 11, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967348116, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 9, 18, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967376223, 'comment_body': 'Should it be `.startsWith(""MSG_"")` ?\r\n\r\nPlease add note to the Javadoc explaining why all immutable fields should be private except for `MSG_XXX` fields.\r\n', 'comment_created': datetime.datetime(2022, 9, 9, 18, 51, 28, tzinfo=datetime.timezone.utc), 'commenter': 'pbludov', 'type': 'User'}, {'comment_id': 967384061, 'comment_body': 'mistype: `Map fo`', 'comment_created': datetime.datetime(2022, 9, 9, 19, 3, 31, tzinfo=datetime.timezone.utc), 'commenter': 'pbludov', 'type': 'User'}, {'comment_id': 967387352, 'comment_body': 'no op lambda can be replaced with `Function.identity()`', 'comment_created': datetime.datetime(2022, 9, 9, 19, 8, 37, tzinfo=datetime.timezone.utc), 'commenter': 'pbludov', 'type': 'User'}, {'comment_id': 967388365, 'comment_body': 'Should it be `.startsWith(""MSG_"")` ?', 'comment_created': datetime.datetime(2022, 9, 9, 19, 10, 19, tzinfo=datetime.timezone.utc), 'commenter': 'pbludov', 'type': 'User'}, {'comment_id': 967626659, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 10, 9, 39, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967626680, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 10, 9, 39, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967626724, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 10, 9, 39, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967626729, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 10, 9, 39, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967649326, 'comment_body': '```suggestion\r\n            final boolean isEnumConstantOrEmptyArray = rawType.isEnum()\r\n                || ZERO_SIZE_ARRAY_FIELDS.contains(javaField.getFullName());\r\n\r\n            if (!isEnumConstantOrEmptyArray) {\r\n```', 'comment_created': datetime.datetime(2022, 9, 10, 12, 58, 50, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 967654813, 'comment_body': 'My bad, fixed.', 'comment_created': datetime.datetime(2022, 9, 10, 13, 41, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967688715, 'comment_body': '`not following ....`', 'comment_created': datetime.datetime(2022, 9, 10, 18, 40, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967688881, 'comment_body': 'I think it would be better to make a direct connection and not use `{@code`\r\n`{@code testName}` => `{@link #testName}`', 'comment_created': datetime.datetime(2022, 9, 10, 18, 42, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967689059, 'comment_body': 'Same.', 'comment_created': datetime.datetime(2022, 9, 10, 18, 43, 58, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967689095, 'comment_body': 'I think this should be next to the other immutable fields and not between 2 suppression fields.', 'comment_created': datetime.datetime(2022, 9, 10, 18, 44, 31, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967689106, 'comment_body': 'Same.', 'comment_created': datetime.datetime(2022, 9, 10, 18, 44, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967689222, 'comment_body': 'Question: Should this be using `ModuleReflectionUtil#isCheckstyleModule`? For example, indentation package has some classes which are not checks. Or does it not make sense to add this?\r\n\r\n`ModuleReflectionUtil` is the definitive class we use to identify our type of classes. We should rely on it more than naming and/or packages.', 'comment_created': datetime.datetime(2022, 9, 10, 18, 46, 24, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967692721, 'comment_body': 'I think I am getting cross-eyed here, but all fields should be immutable period regardless of public/private etc... for Stateless.\r\n\r\nThere is a discrepancy here. Test is called `testFieldsInStatelessChecksShouldBeImmutable`. It does not mention the type of fields (private), so one would naturally assume there is no type requirement.\r\n\r\nIt seems to me `andShould(bePrivateExceptMessageKeys)` so should be a separate test but apply to all modules as there should be no direct communication between isolated checks.', 'comment_created': datetime.datetime(2022, 9, 10, 19, 17, 13, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967693255, 'comment_body': ""Similar to a previous item, we can't use `ModuleReflectionUtil#isCheckstyleModule`?"", 'comment_created': datetime.datetime(2022, 9, 10, 19, 22, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967693711, 'comment_body': 'Question: Does this pick up classes with no fields?', 'comment_created': datetime.datetime(2022, 9, 10, 19, 25, 26, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967694475, 'comment_body': ""Wouldn't this be better and easier to ready to split into like 3 different methods?\r\n`!isRawTypeImmutable || !isEnumConstantOrEmptyArray || !isParameterizedTypeImmutable`"", 'comment_created': datetime.datetime(2022, 9, 10, 19, 33, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967695114, 'comment_body': '`final` does not make a field immutable. An array list can be made final but you can still add new items to it.', 'comment_created': datetime.datetime(2022, 9, 10, 19, 40, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967695342, 'comment_body': ""Connected to an earlier comment, I don't think private and immutable should be directly connected."", 'comment_created': datetime.datetime(2022, 9, 10, 19, 42, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967751165, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 11, 3, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967751191, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 11, 3, 46, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967751203, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 11, 3, 46, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967751964, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 11, 3, 55, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967751966, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 11, 3, 55, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967754817, 'comment_body': ""Done, used `ModuleReflectionUtil#isCheckstyleModule`, also I have kept package as `com.puppycrawl.tools.checkstyle.checks` as we aren't checking filters and only checkstyle checks, all the new rules work around `@StatelessCheck` and `@FileStatefulCheck` so only `checks` package was imported."", 'comment_created': datetime.datetime(2022, 9, 11, 4, 27, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967754825, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2022, 9, 11, 4, 28, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967755292, 'comment_body': 'Yes, it does:\r\n```java\r\n@Override                                                                               \r\npublic boolean apply(JavaClass input) {                                                 \r\n    final Set<JavaField> fields = input.getFields();                                    \r\n    return fields.stream()                                                              \r\n        .filter(javaField -> {                                                          \r\n            return !ModulePropertyPredicate.isModuleProperty(javaField)                 \r\n                && !SUPPRESSED_FIELDS_IN_MODULES.contains(javaField.getFullName());     \r\n        })                                                                              \r\n        .allMatch(javaField -> {                                                        \r\n            final Set<JavaModifier> javaFieldModifiers = javaField.getModifiers();      \r\n            boolean result = javaFieldModifiers.contains(JavaModifier.FINAL)            \r\n                && ImmutableFieldArchCondition.isImmutable(javaField);                  \r\n            // \'MSG_\'s in checks are public as they are imported in test files.         \r\n            if (!javaField.getName().contains(""MSG_"")) {                                \r\n                result = result && javaFieldModifiers.contains(JavaModifier.PRIVATE);   \r\n            }                                                                           \r\n            return result;                                                              \r\n        });                                                                             \r\n}                                                                                       \r\n```\r\n`allMatch(..)` returns true if the stream is empty.', 'comment_created': datetime.datetime(2022, 9, 11, 4, 31, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967755484, 'comment_body': ""Yes, it doesn't for an array list, but it gives reference immutability for the field (not for data inside the field), so it will help in partially assuring immutability."", 'comment_created': datetime.datetime(2022, 9, 11, 4, 33, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967755637, 'comment_body': ""Immutability condition is being equally applied to all fields, it is just that `MSG_` are allowed to be private but other conditions before that are still applicable to them, it is just they are allowed to be public, if a `MSG_` isn't final, we will get a test failure."", 'comment_created': datetime.datetime(2022, 9, 11, 4, 35, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967755715, 'comment_body': 'Fields should be private see https://stackoverflow.com/q/28410386/14425335', 'comment_created': datetime.datetime(2022, 9, 11, 4, 36, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967794245, 'comment_body': 'The Javadoc mentions the conditions `isImmutable(..)` checks, but if you insist, I can modify the method.', 'comment_created': datetime.datetime(2022, 9, 11, 9, 33, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967819882, 'comment_body': '> `{@code testName} => {@link #testName}`\r\n> `{@link ImmutabilityTest#testFieldsInStatelessChecksShouldBeImmutable()}`\r\n\r\nDid we really need `ImmutabilityTest`?', 'comment_created': datetime.datetime(2022, 9, 11, 12, 31, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967820513, 'comment_body': '> all the new rules work around @StatelessCheck and @FileStatefulCheck so only checks package was imported.\r\n\r\nThis is technically missing `TreeWalker` which is a fileset check and must have an annotation present.\r\n\r\nAlso `ModuleReflectionUtil` has `isCheckstyleTreeWalkerCheck` and `isFileSetModule`.', 'comment_created': datetime.datetime(2022, 9, 11, 12, 34, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967821051, 'comment_body': ""> if a MSG_ isn't final\r\n\r\nWe only uppercase fields that are static/final. So all MSGs have to be static/final, otherwise they would be `msgXxx`.\r\n\r\nI also don't see how this applies to my comments. Private should be separate archunit as immutability doesn't care about modifier. We can have public immutabilities like the string messages.\r\n\r\nIf this or another test is skipping over public fields just because they are public for immutability questioning, then we can have mutable public fields which are breaking the stateless conditions.\r\n\r\nIf we are not skipping over public fields, but saying everything must be immutable and private, then separating out the tests makes things simplier and more specific but still doesn't take away from the original."", 'comment_created': datetime.datetime(2022, 9, 11, 12, 39, 7, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967821298, 'comment_body': 'Resolving.', 'comment_created': datetime.datetime(2022, 9, 11, 12, 40, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967824508, 'comment_body': 'I insist. The javadoc comments can be a bit simpler now.', 'comment_created': datetime.datetime(2022, 9, 11, 12, 57, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967825818, 'comment_body': 'I am re-thinking this over', 'comment_created': datetime.datetime(2022, 9, 11, 13, 5, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967826150, 'comment_body': ' https://stackoverflow.com/q/28410386/14425335\r\n> That is ONE reason why it is a good idea to keep the fields private. (**Obviously, this only applies to field whose types are mutable reference types.**)\r\n\r\nFields must be immutable for Stateless, regardless of public/private modifiers.\r\n\r\nLike I said in another comment, there should be a separate archunit for requiring private for modules, disconnected from immutability.', 'comment_created': datetime.datetime(2022, 9, 11, 13, 7, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967831713, 'comment_body': 'Ok, I think I got lost somewhere on immutability and not needing `final`. It does need `final` otherwise the value can be swapped out. Let me know if I led you astray in any other comments about this. I still stand by private/public/static has no connection to immutability. `MSG_` is still immutable since it is a final String.', 'comment_created': datetime.datetime(2022, 9, 11, 13, 47, 26, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 968147032, 'comment_body': 'I removed the thing about checking for public, private, should be fine now.', 'comment_created': datetime.datetime(2022, 9, 12, 8, 47, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 968147354, 'comment_body': 'Done, removed public, private part.', 'comment_created': datetime.datetime(2022, 9, 12, 8, 47, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 968147484, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 12, 8, 47, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 968148212, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 12, 8, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 968148620, 'comment_body': 'Done, removed public, private part.', 'comment_created': datetime.datetime(2022, 9, 12, 8, 48, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 968149002, 'comment_body': ""No, we don't, removed for all."", 'comment_created': datetime.datetime(2022, 9, 12, 8, 49, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 968698797, 'comment_body': '@Vyom-Yadav I was expecting `.checks` to be removed so we can pick up `TreeWalker`.', 'comment_created': datetime.datetime(2022, 9, 12, 17, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 968700734, 'comment_body': '@Vyom-Yadav This is done, but are we moving the `private` test to a new PR for ArchUnit?', 'comment_created': datetime.datetime(2022, 9, 12, 17, 25, 6, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 968708240, 'comment_body': 'We are picking up `TreeWalker`, see\r\n```java\r\n|| ModuleReflectionUtil.isFileSetModule(input.reflect()));\r\n```', 'comment_created': datetime.datetime(2022, 9, 12, 17, 30, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 968710901, 'comment_body': 'We can, feel free to edit https://github.com/checkstyle/checkstyle/issues/12099#issuecomment-1233749876, so that we can have a clearer goal.', 'comment_created': datetime.datetime(2022, 9, 12, 17, 32, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 968713947, 'comment_body': 'Just a conversation while waiting for the last item to be done ( https://github.com/checkstyle/checkstyle/pull/12135#discussion_r968698797 ),\r\n\r\n> MemberNameCheck\r\n\r\nI took a look at this, and this class has no annotation on it. It extends `AbstractAccessControlNameCheck` which also has no annotation on it. It also extends `AbstractNameCheck` which has `@StatelessCheck` on it.\r\n\r\nIs this violation solely because the annotation is on parent class, which is 2 level deep?', 'comment_created': datetime.datetime(2022, 9, 12, 17, 34, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 968716346, 'comment_body': '`TreeWalker` located in `com.puppycrawl.tools.checkstyle`.\r\n\r\nI am still seeing `.importPackages(""com.puppycrawl.tools.checkstyle.checks"")`. which excludes `TreeWalker`.', 'comment_created': datetime.datetime(2022, 9, 12, 17, 35, 58, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 968718557, 'comment_body': 'Added what I understand the `private` check to be as number 6 in the comment recommended.', 'comment_created': datetime.datetime(2022, 9, 12, 17, 37, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 968724247, 'comment_body': 'My bad, done.', 'comment_created': datetime.datetime(2022, 9, 12, 17, 42, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 968727447, 'comment_body': 'Violation is because the class itself has immutable fields (no fields in this case, not the inherited fields) and has no annotation.', 'comment_created': datetime.datetime(2022, 9, 12, 17, 45, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 968787477, 'comment_body': 'It has an annotation but not the main class itself. I assume that via reflection the annotation will show up, but I was curious if ArchUnit was not seeing the annotation?', 'comment_created': datetime.datetime(2022, 9, 12, 18, 41, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 969335881, 'comment_body': 'Yes, ArchUnit is not seeing it, it also has `@Inherited`, I will report this to ArchUnit team.', 'comment_created': datetime.datetime(2022, 9, 13, 8, 51, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}]","[{'commit_sha': 'ec8c7a30f5f7fdff12e7a881c35793437b0cefb8', 'committer_username': 'Vyom-Yadav', 'committer_name': 'Vyom Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 10, 13, 19, tzinfo=datetime.timezone.utc)}]",Vyom Yadav,73882557,,User,,116,,24,105
1043245454,Issue #12099: Add ArchUnit test to ensure classes in api package are not dependent on classes present in utils package,"#12099

### This PR contains:

1. A rule stating that classes in the API package are not dependent on classes in the utils package.
2. Suppression list containing classes that don't follow this rule.",True,12149,https://api.github.com/repos/checkstyle/checkstyle/pulls/12149,https://github.com/checkstyle/checkstyle/pull/12149,closed,86,5,3,1,1,14,0,1,[],2022-09-01 05:59:55+00:00,2022-09-10 01:18:25+00:00,760710.0,"8 days, 19:18:30","[{'comment_id': 961561732, 'comment_body': 'Can we add ArchRule#check to valid assert methods?', 'comment_created': datetime.datetime(2022, 9, 2, 11, 7, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 961635936, 'comment_body': 'ArchRule name should read like a rule, not a test: `final ArchRule ClassesInApiDoNotDependOnClassesInUtil`\r\n\r\nOur rule is that ""Classes in Api (package) Do Not Depend On Classes In Util (package)"". Or, maybe use a name that is closer to syntax of rule itself: `NoClassesInApiShouldDependOnClassesInUtil`', 'comment_created': datetime.datetime(2022, 9, 2, 12, 41, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 961637003, 'comment_body': '@Vyom-Yadav do you think it would be better to use `Set<Class<?>>`? This might help us to find problems in the future if we remove/ move/ change a class.', 'comment_created': datetime.datetime(2022, 9, 2, 12, 43, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 961787619, 'comment_body': ""There were two reasons why I didn't go for that:\r\n\r\n1. It will add a lot of imports if the suppression list is long.\r\n2. Not all classes are public, we won't be able to import them.\r\n(ex - `com.puppycrawl.tools.checkstyle.api.AutomaticBean$PatternConverter`)"", 'comment_created': datetime.datetime(2022, 9, 2, 15, 14, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 961790232, 'comment_body': 'Good point, changed to `noClassesInApiShouldDependOnClassesInUtil`', 'comment_created': datetime.datetime(2022, 9, 2, 15, 17, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 961802919, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 2, 15, 33, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 961866064, 'comment_body': 'Both good points, agreed.', 'comment_created': datetime.datetime(2022, 9, 2, 17, 1, 28, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 963080906, 'comment_body': ""Can you please add a reason to the comment on why we require such rule?\r\nIt's not very obvious."", 'comment_created': datetime.datetime(2022, 9, 5, 18, 15, 30, tzinfo=datetime.timezone.utc), 'commenter': 'baratali', 'type': 'User'}, {'comment_id': 963084140, 'comment_body': 'also it would be good to print useless suppressions, so it forces us to remove them if any.\r\nbut it can be implemented later, no need to do it right now :)', 'comment_created': datetime.datetime(2022, 9, 5, 18, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'baratali', 'type': 'User'}, {'comment_id': 965290903, 'comment_body': ""Let's implement it later, and do it in a separate issue where we would also make better formatting of errors if any."", 'comment_created': datetime.datetime(2022, 9, 7, 20, 56, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 965299376, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2022, 9, 7, 21, 8, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 965931860, 'comment_body': '@Vyom-Yadav , please create issue on this to not forget.\r\nOne day we will find contributor to make it happen.', 'comment_created': datetime.datetime(2022, 9, 8, 12, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 967664541, 'comment_body': '@Vyom-Yadav did we create issue on this?', 'comment_created': datetime.datetime(2022, 9, 10, 15, 2, 5, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 967665132, 'comment_body': 'Created at https://github.com/checkstyle/checkstyle/issues/12189', 'comment_created': datetime.datetime(2022, 9, 10, 15, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}]","[{'commit_sha': 'ffcbcd3065d13e97a724faf7ba726624a0204acd', 'committer_username': 'Vyom-Yadav', 'committer_name': 'Vyom Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 10, 13, 19, tzinfo=datetime.timezone.utc)}]",Vyom Yadav,73882557,,User,,116,,24,105
1045900467,Issue #12099: Add ArchUnit test enforcing the rule that checks only extend AbstractCheck or AbstractFileSetCheck or AbstractJavadocCheck,#12099 ,True,12170,https://api.github.com/repos/checkstyle/checkstyle/pulls/12170,https://github.com/checkstyle/checkstyle/pull/12170,closed,175,1,2,1,1,41,0,1,[],2022-09-05 04:25:30+00:00,2022-09-11 16:38:03+00:00,562353.0,"6 days, 12:12:33","[{'comment_id': 962482999, 'comment_body': 'I do not see list of suppression. As we have several abstract classes and unfortunately they are in use.\r\nWe should check direct extension , without any classes in the middle.\r\n\r\n\r\nWithout this strict rule, this validation is useless, as it is already true and restricted by compilation ', 'comment_created': datetime.datetime(2022, 9, 5, 5, 13, 1, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 962679273, 'comment_body': 'I corrected it, done.', 'comment_created': datetime.datetime(2022, 9, 5, 9, 12, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 962925664, 'comment_body': '\r\nhttps://docs.oracle.com/javase/tutorial/java/IandI/super.html\r\n\r\n`should(hasSuperclass(....))`\r\n\r\neven jarchunit use this terminology.', 'comment_created': datetime.datetime(2022, 9, 5, 13, 46, 36, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 962930718, 'comment_body': 'please add `AbstractJavadocCheck` to list of base class, all javadoc checks extending it, is is ""same"" as `AbstractCheck`.', 'comment_created': datetime.datetime(2022, 9, 5, 13, 52, 14, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 962970682, 'comment_body': ""@Vyom-Yadav let's create a completely new test for this one, maybe something like `ArchUnitSuperClassTest`?"", 'comment_created': datetime.datetime(2022, 9, 5, 14, 38, 1, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 962972633, 'comment_body': 'very good point, such tests might be like our Check, implemented by junitarch api. Extensive suppression list is good reason to not mix it with others.', 'comment_created': datetime.datetime(2022, 9, 5, 14, 40, 19, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 965220637, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 7, 19, 58, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 965220819, 'comment_body': 'Used `beSubclassOf(..)`', 'comment_created': datetime.datetime(2022, 9, 7, 19, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 965220893, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 7, 19, 58, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 965924549, 'comment_body': 'subclass means all hiearchy of classes.\r\n""Super"" is most precise term here', 'comment_created': datetime.datetime(2022, 9, 8, 12, 46, 2, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 965926847, 'comment_body': 'Super', 'comment_created': datetime.datetime(2022, 9, 8, 12, 47, 54, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 965929843, 'comment_body': 'beSubclassOf -> hasSupperClass\r\n\r\nor may be you have better name.', 'comment_created': datetime.datetime(2022, 9, 8, 12, 50, 21, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 965933570, 'comment_body': ""Can we use `beDirectSubclassOf(..)`? otherwise, we would have the problem of has/have, ArchUnit also doesn't use has/have analogy. Classes in checks package should has superclass is not the correct usage. "", 'comment_created': datetime.datetime(2022, 9, 8, 12, 53, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 966086519, 'comment_body': '>we would have the problem of has/hav\r\n\r\nWhat is a problem ?\r\nLets use `have`', 'comment_created': datetime.datetime(2022, 9, 8, 15, 4, 18, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 966090594, 'comment_body': 'https://www.google.com/amp/s/textranch.com/27619/it-should-have/or/it-should-has/amp/', 'comment_created': datetime.datetime(2022, 9, 8, 15, 7, 59, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 967300923, 'comment_body': 'It would be an ArchCondition for a Java Class which is singular, but not big of an issue, we can go with `have`.', 'comment_created': datetime.datetime(2022, 9, 9, 17, 18, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967314727, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 9, 17, 25, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967314787, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 9, 17, 25, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967697169, 'comment_body': '`haveSuperclass` -> `getSuperclassArchFor` and remove `LinguisticNaming` suppression.', 'comment_created': datetime.datetime(2022, 9, 10, 20, 1, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967697322, 'comment_body': '`either extend` => `have a super class of`.\r\nAdd `AbstractJavadocCheck`.', 'comment_created': datetime.datetime(2022, 9, 10, 20, 3, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967697476, 'comment_body': 'Again I think `ModuleReflectionUtil` should be a consideration here.', 'comment_created': datetime.datetime(2022, 9, 10, 20, 5, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967697595, 'comment_body': 'Does not mention javadoc. I thinking we should rename to `testChecksShouldBeSuperOfAllowedAbstractClass`.', 'comment_created': datetime.datetime(2022, 9, 10, 20, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967698718, 'comment_body': ""> expectedSuperclass\r\n\r\nShouldn't this be 2 words?"", 'comment_created': datetime.datetime(2022, 9, 10, 20, 17, 43, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967699480, 'comment_body': 'This is naming strategy of archunit\r\nTo make usage of method to be readable as English text.\r\nI think we should follow their naming.', 'comment_created': datetime.datetime(2022, 9, 10, 20, 26, 25, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 967699845, 'comment_body': 'Is it possible to reuse\r\nhttps://github.com/checkstyle/checkstyle/blob/78584f79f43a3b788a7d7d23203463b506f5ef5a/src/main/java/com/puppycrawl/tools/checkstyle/utils/ModuleReflectionUtil.java#L57\r\n\r\nspecial class provider.', 'comment_created': datetime.datetime(2022, 9, 10, 20, 31, 7, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 967700002, 'comment_body': 'Or our specific preticate\r\nhttps://github.com/checkstyle/checkstyle/blob/78584f79f43a3b788a7d7d23203463b506f5ef5a/src/main/java/com/puppycrawl/tools/checkstyle/utils/ModuleReflectionUtil.java#L75', 'comment_created': datetime.datetime(2022, 9, 10, 20, 32, 31, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 967700349, 'comment_body': 'Will linguistics fail on other words like `beSuperclassOf`? If it does, then lets consider this resolved for now.', 'comment_created': datetime.datetime(2022, 9, 10, 20, 36, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967796874, 'comment_body': 'We need to use `beSubclassOf`, but that can mean subclass at any level, should we go with `beDirectSubclassOf` ?', 'comment_created': datetime.datetime(2022, 9, 11, 9, 54, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967800413, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 11, 10, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967800418, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 11, 10, 22, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967800471, 'comment_body': 'Renamed to `testChecksShouldHaveAllowedAbstractClassAsSuperclass` ', 'comment_created': datetime.datetime(2022, 9, 11, 10, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967800476, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 11, 10, 22, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967827086, 'comment_body': ""`beDirectSubclassOf` I am good with this if it matches archunit's naming strategy and resolves linguistics."", 'comment_created': datetime.datetime(2022, 9, 11, 13, 14, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967827405, 'comment_body': 'Same comment as in other PR that we are missing some ""checks"" but specifying package.\r\n\r\nMaybe I missed conversation, but why aren\'t we applying this to the filters, and such?', 'comment_created': datetime.datetime(2022, 9, 11, 13, 17, 5, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967827558, 'comment_body': 'Partially done, but opened up a new comment below.', 'comment_created': datetime.datetime(2022, 9, 11, 13, 18, 6, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967831339, 'comment_body': 'We initially discussed checks to extend `AbstractCheck` and ......\r\nIf we create a rule for filters, etc, I think that should be a different PR. Can we go forward with:\r\n```java\r\nreturn ModuleReflectionUtil.isValidCheckstyleClass(clazz)       \r\n    && (ModuleReflectionUtil.isCheckstyleTreeWalkerCheck(clazz) \r\n    || ModuleReflectionUtil.isFileSetModule(clazz));            \r\n```', 'comment_created': datetime.datetime(2022, 9, 11, 13, 44, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967831598, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 11, 13, 46, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967833269, 'comment_body': 'Yes, and I am fine with another PR for other modules, but it seems like it would be rewriting this from checks to modules with the changes.', 'comment_created': datetime.datetime(2022, 9, 11, 13, 56, 53, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967833442, 'comment_body': 'Technically this should be indented +4 because of the `(`.', 'comment_created': datetime.datetime(2022, 9, 11, 13, 58, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 967834730, 'comment_body': 'Agreed, logic will be almost the same, but we can discuss it separately.', 'comment_created': datetime.datetime(2022, 9, 11, 14, 6, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 967835920, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 11, 14, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}]","[{'commit_sha': '8695e634eae44a53d339e9055cb45170a9ae4fb1', 'committer_username': 'Vyom-Yadav', 'committer_name': 'Vyom Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 10, 13, 19, tzinfo=datetime.timezone.utc)}]",Vyom Yadav,73882557,,User,,116,,24,105
1052290460,Issue #12099: Add ArchUnit test to detect cycles in packages,"#12099 

Link to documentation about freezing arch rules: https://www.archunit.org/userguide/html/000_Index.html#_configuration

ViolationStore was created using property `freeze.store.default.allowStoreCreation=true`, default is `false` as we do not want it to be created in CI pipeline.

example of failure in test from diff: https://github.com/checkstyle/checkstyle/pull/12190/commits/4b61c26b93ced426126756e97a2d9454ea9a9338
",True,12190,https://api.github.com/repos/checkstyle/checkstyle/pulls/12190,https://github.com/checkstyle/checkstyle/pull/12190,closed,2871,2,8,1,12,36,0,1,[],2022-09-10 17:05:57+00:00,2022-09-18 20:15:36+00:00,702579.0,"8 days, 3:09:39","[{'comment_id': 972919804, 'comment_body': 'Please do this: imagine you are a new contributor, and execution of this test has generated a new suppression. \r\n\r\nThen, in the issue, place links and information about the concept of this test and links to freeze documentation that would help you to understand why suppression was generated. After that, place a Javadoc here that explains how this test works, and a link to your comment in the issue.', 'comment_created': datetime.datetime(2022, 9, 16, 11, 20, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 973404645, 'comment_body': 'Yes, it good idea to read details in actual test class. Hints on how to interpretate is also good.\r\n\r\nWhat is the process if we ok to allow extra cycle? ', 'comment_created': datetime.datetime(2022, 9, 16, 21, 28, 17, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 973584456, 'comment_body': '@romani @nrmancuso Please take a look at the javadoc. ', 'comment_created': datetime.datetime(2022, 9, 17, 13, 8, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 973587418, 'comment_body': 'does it mean that test will always pass and just update freeze file, so will enforce no cycles by simple PR review and noticing a diff - I am ok.\r\n\r\nIf user forget to place freeze file to commit, CI will fail as it will detect  a git-diff.', 'comment_created': datetime.datetime(2022, 9, 17, 13, 40, 57, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 973587762, 'comment_body': 'Yes, for any new violation, the store will be automatically updated, if the user commits the changes in the store, they will be seen and reviewed in the PR.\r\n\r\n> If user forget to place freeze file to commit, CI will fail as it will detect a git-diff.\r\n\r\nYes', 'comment_created': datetime.datetime(2022, 9, 17, 13, 44, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 973587926, 'comment_body': 'please mention in javadoc that change in freeze file need to be placed in commit.\r\nAny change in freeze file should be committed and shared in PR to let mentors approve new cycle and guide contributor on how to avoid it.', 'comment_created': datetime.datetime(2022, 9, 17, 13, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 973588762, 'comment_body': '> Whenever a new violation is introduced, the test will pass successfully but the frozen violations will be updated. In that case, developers should check if the new violation is expected or not. In both cases create a separate commit in the PR for discussing changes in the violation store.\r\n\r\nAdded this para to the javadoc.', 'comment_created': datetime.datetime(2022, 9, 17, 13, 55, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 973589418, 'comment_body': 'Whenever new cycle is introduced or removed', 'comment_created': datetime.datetime(2022, 9, 17, 14, 1, 55, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 973589692, 'comment_body': 'violations store will be updated, It is highly recommended to avoid new cycles and, and it is preferred to remove them. In both cases store file should be placed to commit for review by maintainers.', 'comment_created': datetime.datetime(2022, 9, 17, 14, 5, 1, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 973590914, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 17, 14, 17, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 973590918, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 17, 14, 17, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 973613249, 'comment_body': 'In both cases put update in commit for discussion ', 'comment_created': datetime.datetime(2022, 9, 17, 18, 10, 6, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 973614713, 'comment_body': 'What about:\r\nIn both cases update the commit for discussing changes in the violation store.', 'comment_created': datetime.datetime(2022, 9, 17, 18, 26, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 973615835, 'comment_body': '\'Update commit\' for sounds strange .\r\nWe need some sort on ""include in commit""', 'comment_created': datetime.datetime(2022, 9, 17, 18, 39, 55, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 973615848, 'comment_body': 'The suppressions generated by this tool are like the metadata generator; most contributors will never know/care about such changes and should commit all changes in one commit, and it is doubtful they will even see this comment until a reviewer points it out. It is responsibility of reviewer to catch extension of freeze file and question why we extended cycles.', 'comment_created': datetime.datetime(2022, 9, 17, 18, 40, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 973616576, 'comment_body': ""Yes, lets agree on some reasonable wording, and let's merge this PR"", 'comment_created': datetime.datetime(2022, 9, 17, 18, 47, 41, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 973616622, 'comment_body': ' In both cases commit the changes for further discussion.', 'comment_created': datetime.datetime(2022, 9, 17, 18, 48, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 973616686, 'comment_body': 'Good ', 'comment_created': datetime.datetime(2022, 9, 17, 18, 48, 43, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 973619100, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 17, 19, 17, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 973620639, 'comment_body': '> 7999d2d1\r\n\r\nQuestion: Are we required to use such naming?', 'comment_created': datetime.datetime(2022, 9, 17, 19, 35, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 973621321, 'comment_body': '`Tests that there are no cycles in the package` => `Tests that have no cycles in the package`', 'comment_created': datetime.datetime(2022, 9, 17, 19, 43, 35, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 973621425, 'comment_body': 'Question: I have not been part of the conversation but CI will fail on unstaged changes after run, right?', 'comment_created': datetime.datetime(2022, 9, 17, 19, 44, 51, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 973621778, 'comment_body': '`testSlicesShouldBeFreeOfCycle` => `testSlicesShouldBeFreeOfCycles`', 'comment_created': datetime.datetime(2022, 9, 17, 19, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 973621831, 'comment_body': '`slicesShouldBeFreeOfCycle` => `slicesShouldBeFreeOfCycles`', 'comment_created': datetime.datetime(2022, 9, 17, 19, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 973622143, 'comment_body': 'Yes ', 'comment_created': datetime.datetime(2022, 9, 17, 19, 53, 9, tzinfo=datetime.timezone.utc), 'commenter': 'romani', 'type': 'User'}, {'comment_id': 973657832, 'comment_body': ""Why? Isn't `Tests that there are no cycles in the package dependencies` correct?"", 'comment_created': datetime.datetime(2022, 9, 18, 4, 22, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 973657836, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 18, 4, 22, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 973657838, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 18, 4, 23, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 973658363, 'comment_body': ""It was automatically generated by ArchUnit, didn't try changing it. Changed now, and it works perfectly fine."", 'comment_created': datetime.datetime(2022, 9, 18, 4, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 973719126, 'comment_body': ""Sorry one more thing I just noticed, do we really need this date? We won't be updating it right?"", 'comment_created': datetime.datetime(2022, 9, 18, 13, 11, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 973719908, 'comment_body': '""that there"" sounds very odd and I would say it is not proper. ""That there"" is more like you are pointing to a specific thing (noun) like ""that there doggy in the window"" but you don\'t really follow up with a noun to point to. The replacement text sounds more natural to me. ""Tests which have"" would also be acceptable.\r\n\r\nhttps://brians.wsu.edu/2016/05/25/this-here-that-there/', 'comment_created': datetime.datetime(2022, 9, 18, 13, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 973752501, 'comment_body': '`Tests that have no`, in this `Test` is acting as a noun, similar to `Boys that have no`, whereas we should be using `Test` as a verb.', 'comment_created': datetime.datetime(2022, 9, 18, 17, 32, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 973753032, 'comment_body': ""No, I don't think so, these are comments most proly, so I removed them."", 'comment_created': datetime.datetime(2022, 9, 18, 17, 36, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 973753042, 'comment_body': 'Your original sentence is not using Test as a verb. It is also a noun.\r\n\r\nPlease suggest a sentence if you don\'t want to use my wording, but ""that there"" still has to change. I have not been convinced otherwise and I keep re-reading it.', 'comment_created': datetime.datetime(2022, 9, 18, 17, 37, 6, tzinfo=datetime.timezone.utc), 'commenter': 'rnveach', 'type': 'User'}, {'comment_id': 973753265, 'comment_body': 'Nick suggested `Detects cycles in package dependencies`, is that fine?', 'comment_created': datetime.datetime(2022, 9, 18, 17, 39, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 973757730, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 18, 18, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}]","[{'commit_sha': '5075bd194f602bb753cf6b40b4970a29d7b33388', 'committer_username': 'Vyom-Yadav', 'committer_name': 'Vyom Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 10, 13, 19, tzinfo=datetime.timezone.utc)}]",Vyom Yadav,73882557,,User,,116,,24,105
1053007860,Issue #12164: Enable Checker Framework,Resolves #12164 ,True,12194,https://api.github.com/repos/checkstyle/checkstyle/pulls/12194,https://github.com/checkstyle/checkstyle/pull/12194,closed,13535,6,15,1,7,5,0,1,[],2022-09-12 09:08:53+00:00,2022-09-17 16:34:38+00:00,458745.0,"5 days, 7:25:45","[{'comment_id': 968284257, 'comment_body': 'Please add meminital and maxmem properties to all profiles.', 'comment_created': datetime.datetime(2022, 9, 12, 11, 10, 59, tzinfo=datetime.timezone.utc), 'commenter': 'nrmancuso', 'type': 'User'}, {'comment_id': 968311662, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 12, 11, 43, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 973571003, 'comment_body': 'We suppress every groovy script, removal of this is better, we will most probably use groovy only for writing scripts.', 'comment_created': datetime.datetime(2022, 9, 17, 10, 44, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 973591298, 'comment_body': 'Unstable violation', 'comment_created': datetime.datetime(2022, 9, 17, 14, 22, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}, {'comment_id': 973591378, 'comment_body': 'Unstable violation.', 'comment_created': datetime.datetime(2022, 9, 17, 14, 23, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Vyom-Yadav', 'type': 'User'}]","[{'commit_sha': 'ca2a030f4f8276719a727425af0b8e02ba0389b1', 'committer_username': 'Vyom-Yadav', 'committer_name': 'Vyom Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 10, 13, 19, tzinfo=datetime.timezone.utc)}]",Vyom Yadav,73882557,,User,,116,,24,105

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
12499251,checkstyle,checkstyle/checkstyle,Java,3649,8267,222,475,13981,905,3,47,"[{'id': 1626542565, 'number': 14090, 'closed': datetime.datetime(2024, 6, 28, 3, 59, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 2, 3, 30, 35, tzinfo=datetime.timezone.utc), 'time_taken': 18059320.0, 'time_delta': '209 days, 0:28:40', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 1567674565, 'number': 13919, 'closed': datetime.datetime(2023, 10, 21, 14, 5, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 21, 8, 44, 42, tzinfo=datetime.timezone.utc), 'time_taken': 19257.0, 'time_delta': '5:20:57', 'additions': 3, 'deletions': 7, 'state': 'closed'}, {'id': 1527415578, 'number': 13766, 'closed': datetime.datetime(2023, 9, 23, 13, 49, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 23, 13, 20, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1741.0, 'time_delta': '0:29:01', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1510095017, 'number': 13728, 'closed': datetime.datetime(2023, 9, 23, 12, 51, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 11, 10, 53, 43, tzinfo=datetime.timezone.utc), 'time_taken': 1043851.0, 'time_delta': '12 days, 1:57:31', 'additions': 76, 'deletions': 36, 'state': 'closed'}, {'id': 1469063640, 'number': 13543, 'closed': datetime.datetime(2024, 5, 25, 3, 9, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 9, 17, 51, 20, tzinfo=datetime.timezone.utc), 'time_taken': 25003091.0, 'time_delta': '289 days, 9:18:11', 'additions': 202, 'deletions': 6, 'state': 'closed'}, {'id': 1456798574, 'number': 13492, 'closed': datetime.datetime(2023, 9, 14, 12, 45, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 31, 18, 25, 24, tzinfo=datetime.timezone.utc), 'time_taken': 3867634.0, 'time_delta': '44 days, 18:20:34', 'additions': 5, 'deletions': 14, 'state': 'closed'}, {'id': 1263071033, 'number': 12795, 'closed': None, 'created': datetime.datetime(2023, 3, 4, 12, 59, 28, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 140, 'deletions': 72, 'state': 'open'}, {'id': 1220519359, 'number': 12686, 'closed': datetime.datetime(2023, 2, 11, 4, 41, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 29, 7, 10, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1114289.0, 'time_delta': '12 days, 21:31:29', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 1192094165, 'number': 12614, 'closed': datetime.datetime(2023, 2, 5, 0, 5, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 10, 9, 48, 48, tzinfo=datetime.timezone.utc), 'time_taken': 2211388.0, 'time_delta': '25 days, 14:16:28', 'additions': 55, 'deletions': 49, 'state': 'closed'}, {'id': 1191909380, 'number': 12612, 'closed': datetime.datetime(2023, 1, 10, 7, 3, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 10, 7, 1, 3, tzinfo=datetime.timezone.utc), 'time_taken': 118.0, 'time_delta': '0:01:58', 'additions': 0, 'deletions': 6, 'state': 'closed'}, {'id': 1181630592, 'number': 12573, 'closed': datetime.datetime(2023, 1, 2, 5, 15, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 1, 5, 7, 2, tzinfo=datetime.timezone.utc), 'time_taken': 86918.0, 'time_delta': '1 day, 0:08:38', 'additions': 1, 'deletions': 4, 'state': 'closed'}, {'id': 1180749205, 'number': 12559, 'closed': datetime.datetime(2022, 12, 30, 16, 2, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 30, 7, 26, 36, tzinfo=datetime.timezone.utc), 'time_taken': 30954.0, 'time_delta': '8:35:54', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1162457329, 'number': 12525, 'closed': datetime.datetime(2022, 12, 15, 1, 4, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 13, 8, 0, 30, tzinfo=datetime.timezone.utc), 'time_taken': 147841.0, 'time_delta': '1 day, 17:04:01', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1162232992, 'number': 12523, 'closed': datetime.datetime(2023, 1, 10, 19, 27, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 13, 5, 16, 19, tzinfo=datetime.timezone.utc), 'time_taken': 2470246.0, 'time_delta': '28 days, 14:10:46', 'additions': 17, 'deletions': 5, 'state': 'closed'}, {'id': 1110389024, 'number': 12366, 'closed': datetime.datetime(2022, 12, 13, 5, 17, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 4, 5, 21, 15, tzinfo=datetime.timezone.utc), 'time_taken': 3369363.0, 'time_delta': '38 days, 23:56:03', 'additions': 25, 'deletions': 12, 'state': 'closed'}, {'id': 1102562790, 'number': 12349, 'closed': datetime.datetime(2022, 10, 28, 14, 22, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 28, 3, 48, 26, tzinfo=datetime.timezone.utc), 'time_taken': 38071.0, 'time_delta': '10:34:31', 'additions': 14, 'deletions': 22, 'state': 'closed'}, {'id': 1091690280, 'number': 12313, 'closed': datetime.datetime(2022, 10, 21, 4, 59, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 19, 3, 46, 11, tzinfo=datetime.timezone.utc), 'time_taken': 177214.0, 'time_delta': '2 days, 1:13:34', 'additions': 83, 'deletions': 136, 'state': 'closed'}, {'id': 1073752128, 'number': 12244, 'closed': datetime.datetime(2022, 10, 16, 11, 17, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 2, 5, 46, 51, tzinfo=datetime.timezone.utc), 'time_taken': 1229441.0, 'time_delta': '14 days, 5:30:41', 'additions': 1559, 'deletions': 1666, 'state': 'closed'}, {'id': 1063736865, 'number': 12223, 'closed': datetime.datetime(2022, 10, 2, 5, 50, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 22, 7, 5, 22, tzinfo=datetime.timezone.utc), 'time_taken': 859482.0, 'time_delta': '9 days, 22:44:42', 'additions': 41, 'deletions': 27, 'state': 'closed'}, {'id': 1060340717, 'number': 12218, 'closed': datetime.datetime(2022, 9, 19, 15, 12, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 19, 13, 48, 57, tzinfo=datetime.timezone.utc), 'time_taken': 5007.0, 'time_delta': '1:23:27', 'additions': 16, 'deletions': 0, 'state': 'closed'}, {'id': 1060309363, 'number': 12217, 'closed': datetime.datetime(2022, 9, 20, 1, 47, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 19, 13, 23, 36, tzinfo=datetime.timezone.utc), 'time_taken': 44632.0, 'time_delta': '12:23:52', 'additions': 20, 'deletions': 19, 'state': 'closed'}, {'id': 1059570173, 'number': 12215, 'closed': datetime.datetime(2022, 9, 19, 15, 20, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 18, 15, 36, 34, tzinfo=datetime.timezone.utc), 'time_taken': 85432.0, 'time_delta': '23:43:52', 'additions': 117, 'deletions': 31, 'state': 'closed'}, {'id': 1058366224, 'number': 12206, 'closed': datetime.datetime(2022, 9, 19, 2, 31, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 16, 8, 50, 8, tzinfo=datetime.timezone.utc), 'time_taken': 236471.0, 'time_delta': '2 days, 17:41:11', 'additions': 2862, 'deletions': 2, 'state': 'closed'}, {'id': 1058362629, 'number': 12205, 'closed': datetime.datetime(2022, 9, 19, 2, 30, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 16, 8, 46, 39, tzinfo=datetime.timezone.utc), 'time_taken': 236652.0, 'time_delta': '2 days, 17:44:12', 'additions': 2864, 'deletions': 11, 'state': 'closed'}, {'id': 1053007860, 'number': 12194, 'closed': datetime.datetime(2022, 9, 17, 16, 34, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 12, 9, 8, 53, tzinfo=datetime.timezone.utc), 'time_taken': 458745.0, 'time_delta': '5 days, 7:25:45', 'additions': 13535, 'deletions': 6, 'state': 'closed'}, {'id': 1052290460, 'number': 12190, 'closed': datetime.datetime(2022, 9, 18, 20, 15, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 10, 17, 5, 57, tzinfo=datetime.timezone.utc), 'time_taken': 702579.0, 'time_delta': '8 days, 3:09:39', 'additions': 2871, 'deletions': 2, 'state': 'closed'}, {'id': 1049688485, 'number': 12184, 'closed': datetime.datetime(2022, 9, 15, 13, 44, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 8, 7, 50, 3, tzinfo=datetime.timezone.utc), 'time_taken': 626058.0, 'time_delta': '7 days, 5:54:18', 'additions': 81, 'deletions': 6, 'state': 'closed'}, {'id': 1045900467, 'number': 12170, 'closed': datetime.datetime(2022, 9, 11, 16, 38, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 5, 4, 25, 30, tzinfo=datetime.timezone.utc), 'time_taken': 562353.0, 'time_delta': '6 days, 12:12:33', 'additions': 175, 'deletions': 1, 'state': 'closed'}, {'id': 1045673156, 'number': 12163, 'closed': datetime.datetime(2022, 9, 13, 16, 16, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 4, 10, 32, 32, tzinfo=datetime.timezone.utc), 'time_taken': 798255.0, 'time_delta': '9 days, 5:44:15', 'additions': 65, 'deletions': 0, 'state': 'closed'}, {'id': 1044477217, 'number': 12154, 'closed': datetime.datetime(2022, 9, 5, 14, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 2, 4, 23, 10, tzinfo=datetime.timezone.utc), 'time_taken': 294470.0, 'time_delta': '3 days, 9:47:50', 'additions': 24, 'deletions': 7, 'state': 'closed'}, {'id': 1044182745, 'number': 12152, 'closed': datetime.datetime(2022, 9, 2, 9, 48, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 1, 20, 10, 38, tzinfo=datetime.timezone.utc), 'time_taken': 49101.0, 'time_delta': '13:38:21', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 1043245454, 'number': 12149, 'closed': datetime.datetime(2022, 9, 10, 1, 18, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 1, 5, 59, 55, tzinfo=datetime.timezone.utc), 'time_taken': 760710.0, 'time_delta': '8 days, 19:18:30', 'additions': 86, 'deletions': 5, 'state': 'closed'}, {'id': 1039577633, 'number': 12137, 'closed': datetime.datetime(2022, 8, 31, 9, 23, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 29, 11, 56, 42, tzinfo=datetime.timezone.utc), 'time_taken': 163597.0, 'time_delta': '1 day, 21:26:37', 'additions': 603, 'deletions': 6, 'state': 'closed'}, {'id': 1039309806, 'number': 12135, 'closed': datetime.datetime(2022, 9, 12, 18, 43, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 29, 7, 58, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1248286.0, 'time_delta': '14 days, 10:44:46', 'additions': 474, 'deletions': 2, 'state': 'closed'}, {'id': 1035029768, 'number': 12098, 'closed': datetime.datetime(2022, 12, 28, 13, 55, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 24, 6, 22, 46, tzinfo=datetime.timezone.utc), 'time_taken': 10913588.0, 'time_delta': '126 days, 7:33:08', 'additions': 53, 'deletions': 55, 'state': 'closed'}, {'id': 1026570003, 'number': 12063, 'closed': datetime.datetime(2022, 8, 27, 18, 58, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 15, 15, 14, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1050200.0, 'time_delta': '12 days, 3:43:20', 'additions': 557, 'deletions': 52, 'state': 'closed'}, {'id': 1025868566, 'number': 12061, 'closed': datetime.datetime(2022, 8, 24, 11, 13, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 14, 19, 12, 2, tzinfo=datetime.timezone.utc), 'time_taken': 835308.0, 'time_delta': '9 days, 16:01:48', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1025863562, 'number': 12060, 'closed': datetime.datetime(2022, 8, 24, 11, 15, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 14, 18, 37, 30, tzinfo=datetime.timezone.utc), 'time_taken': 837484.0, 'time_delta': '9 days, 16:38:04', 'additions': 2, 'deletions': 1770, 'state': 'closed'}, {'id': 1025253135, 'number': 12055, 'closed': datetime.datetime(2022, 8, 16, 10, 8, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 12, 18, 12, 23, tzinfo=datetime.timezone.utc), 'time_taken': 316589.0, 'time_delta': '3 days, 15:56:29', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1023887646, 'number': 12051, 'closed': datetime.datetime(2022, 8, 11, 15, 38, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 11, 13, 48, 3, tzinfo=datetime.timezone.utc), 'time_taken': 6617.0, 'time_delta': '1:50:17', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 1022184590, 'number': 12048, 'closed': datetime.datetime(2022, 8, 10, 12, 38, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 10, 3, 43, 57, tzinfo=datetime.timezone.utc), 'time_taken': 32075.0, 'time_delta': '8:54:35', 'additions': 6, 'deletions': 4, 'state': 'closed'}, {'id': 1022170923, 'number': 12047, 'closed': datetime.datetime(2022, 8, 10, 12, 35, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 10, 3, 20, 30, tzinfo=datetime.timezone.utc), 'time_taken': 33295.0, 'time_delta': '9:14:55', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1022168285, 'number': 12046, 'closed': datetime.datetime(2022, 8, 10, 13, 5, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 10, 3, 14, 47, tzinfo=datetime.timezone.utc), 'time_taken': 35467.0, 'time_delta': '9:51:07', 'additions': 42, 'deletions': 29, 'state': 'closed'}, {'id': 1021611213, 'number': 12045, 'closed': datetime.datetime(2022, 8, 10, 11, 13, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 9, 14, 40, 23, tzinfo=datetime.timezone.utc), 'time_taken': 74014.0, 'time_delta': '20:33:34', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1019963512, 'number': 12044, 'closed': datetime.datetime(2022, 8, 16, 3, 3, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 8, 8, 14, 39, tzinfo=datetime.timezone.utc), 'time_taken': 672532.0, 'time_delta': '7 days, 18:48:52', 'additions': 20, 'deletions': 20, 'state': 'closed'}, {'id': 1019511879, 'number': 12041, 'closed': datetime.datetime(2022, 8, 10, 13, 23, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 7, 10, 1, 43, tzinfo=datetime.timezone.utc), 'time_taken': 271329.0, 'time_delta': '3 days, 3:22:09', 'additions': 23, 'deletions': 9, 'state': 'closed'}, {'id': 1019330323, 'number': 12038, 'closed': datetime.datetime(2022, 8, 15, 10, 26, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 6, 12, 9, 10, tzinfo=datetime.timezone.utc), 'time_taken': 771437.0, 'time_delta': '8 days, 22:17:17', 'additions': 5, 'deletions': 14, 'state': 'closed'}, {'id': 1019326561, 'number': 12037, 'closed': datetime.datetime(2022, 8, 13, 11, 4, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 6, 11, 46, 55, tzinfo=datetime.timezone.utc), 'time_taken': 602270.0, 'time_delta': '6 days, 23:17:50', 'additions': 5, 'deletions': 14, 'state': 'closed'}, {'id': 1018293040, 'number': 12035, 'closed': datetime.datetime(2022, 8, 6, 17, 54, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 5, 6, 14, 49, tzinfo=datetime.timezone.utc), 'time_taken': 128393.0, 'time_delta': '1 day, 11:39:53', 'additions': 1, 'deletions': 11, 'state': 'closed'}, {'id': 1018288686, 'number': 12034, 'closed': datetime.datetime(2022, 8, 6, 15, 13, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 5, 6, 7, 52, tzinfo=datetime.timezone.utc), 'time_taken': 119148.0, 'time_delta': '1 day, 9:05:48', 'additions': 2, 'deletions': 20, 'state': 'closed'}, {'id': 1018260902, 'number': 12033, 'closed': datetime.datetime(2022, 8, 5, 10, 53, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 5, 5, 18, 50, tzinfo=datetime.timezone.utc), 'time_taken': 20070.0, 'time_delta': '5:34:30', 'additions': 2, 'deletions': 11, 'state': 'closed'}, {'id': 1017302751, 'number': 12031, 'closed': datetime.datetime(2022, 8, 10, 13, 21, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 4, 9, 47, 45, tzinfo=datetime.timezone.utc), 'time_taken': 531253.0, 'time_delta': '6 days, 3:34:13', 'additions': 37, 'deletions': 10, 'state': 'closed'}, {'id': 1017236426, 'number': 12030, 'closed': datetime.datetime(2022, 8, 9, 12, 17, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 4, 8, 51, 2, tzinfo=datetime.timezone.utc), 'time_taken': 444412.0, 'time_delta': '5 days, 3:26:52', 'additions': 14, 'deletions': 9, 'state': 'closed'}, {'id': 1016945951, 'number': 12029, 'closed': datetime.datetime(2022, 8, 10, 13, 11, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 4, 1, 22, 58, tzinfo=datetime.timezone.utc), 'time_taken': 560888.0, 'time_delta': '6 days, 11:48:08', 'additions': 8, 'deletions': 3673, 'state': 'closed'}, {'id': 1016934740, 'number': 12028, 'closed': datetime.datetime(2022, 8, 4, 15, 27, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 4, 0, 56, 42, tzinfo=datetime.timezone.utc), 'time_taken': 52265.0, 'time_delta': '14:31:05', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1015853536, 'number': 12026, 'closed': datetime.datetime(2022, 8, 5, 21, 12, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 3, 5, 28, 43, tzinfo=datetime.timezone.utc), 'time_taken': 229435.0, 'time_delta': '2 days, 15:43:55', 'additions': 10, 'deletions': 22, 'state': 'closed'}, {'id': 1015477630, 'number': 12025, 'closed': datetime.datetime(2022, 8, 3, 9, 32, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 2, 18, 50, 14, tzinfo=datetime.timezone.utc), 'time_taken': 52950.0, 'time_delta': '14:42:30', 'additions': 49, 'deletions': 9, 'state': 'closed'}, {'id': 1015437517, 'number': 12024, 'closed': datetime.datetime(2022, 8, 3, 1, 36, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 2, 18, 7, 33, tzinfo=datetime.timezone.utc), 'time_taken': 26942.0, 'time_delta': '7:29:02', 'additions': 74, 'deletions': 37, 'state': 'closed'}, {'id': 1015215548, 'number': 12023, 'closed': datetime.datetime(2022, 8, 11, 1, 49, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 2, 14, 45, 50, tzinfo=datetime.timezone.utc), 'time_taken': 730996.0, 'time_delta': '8 days, 11:03:16', 'additions': 12, 'deletions': 9, 'state': 'closed'}, {'id': 1015179832, 'number': 12021, 'closed': datetime.datetime(2022, 8, 3, 10, 6, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 2, 14, 16, 17, tzinfo=datetime.timezone.utc), 'time_taken': 71400.0, 'time_delta': '19:50:00', 'additions': 5, 'deletions': 11, 'state': 'closed'}, {'id': 1014673088, 'number': 12018, 'closed': datetime.datetime(2022, 8, 2, 15, 23, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 2, 6, 30, 43, tzinfo=datetime.timezone.utc), 'time_taken': 31964.0, 'time_delta': '8:52:44', 'additions': 4, 'deletions': 54, 'state': 'closed'}, {'id': 1011911920, 'number': 12005, 'closed': datetime.datetime(2022, 7, 30, 1, 26, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 29, 12, 10, 14, tzinfo=datetime.timezone.utc), 'time_taken': 47780.0, 'time_delta': '13:16:20', 'additions': 21, 'deletions': 26, 'state': 'closed'}, {'id': 1011898218, 'number': 12004, 'closed': datetime.datetime(2022, 7, 30, 1, 27, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 29, 11, 53, 33, tzinfo=datetime.timezone.utc), 'time_taken': 48845.0, 'time_delta': '13:34:05', 'additions': 725, 'deletions': 730, 'state': 'closed'}, {'id': 1009957872, 'number': 12000, 'closed': datetime.datetime(2022, 7, 28, 18, 52, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 27, 18, 5, 11, tzinfo=datetime.timezone.utc), 'time_taken': 89249.0, 'time_delta': '1 day, 0:47:29', 'additions': 30, 'deletions': 30, 'state': 'closed'}, {'id': 1009901131, 'number': 11999, 'closed': datetime.datetime(2022, 7, 27, 16, 59, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 27, 16, 57, 28, tzinfo=datetime.timezone.utc), 'time_taken': 106.0, 'time_delta': '0:01:46', 'additions': 1, 'deletions': 7020, 'state': 'closed'}, {'id': 1009886525, 'number': 11998, 'closed': datetime.datetime(2022, 7, 27, 16, 48, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 27, 16, 40, 37, tzinfo=datetime.timezone.utc), 'time_taken': 493.0, 'time_delta': '0:08:13', 'additions': 1, 'deletions': 7020, 'state': 'closed'}, {'id': 1009665333, 'number': 11996, 'closed': datetime.datetime(2022, 7, 27, 16, 48, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 27, 13, 25, 57, tzinfo=datetime.timezone.utc), 'time_taken': 12146.0, 'time_delta': '3:22:26', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 1006485388, 'number': 11982, 'closed': datetime.datetime(2022, 7, 26, 8, 35, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 24, 7, 22, 25, tzinfo=datetime.timezone.utc), 'time_taken': 177194.0, 'time_delta': '2 days, 1:13:14', 'additions': 1, 'deletions': 7004, 'state': 'closed'}, {'id': 1006417949, 'number': 11981, 'closed': datetime.datetime(2022, 7, 29, 6, 28, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 23, 20, 43, 35, tzinfo=datetime.timezone.utc), 'time_taken': 467089.0, 'time_delta': '5 days, 9:44:49', 'additions': 1784, 'deletions': 111, 'state': 'closed'}, {'id': 1006415563, 'number': 11980, 'closed': datetime.datetime(2022, 7, 28, 15, 27, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 23, 20, 23, 26, tzinfo=datetime.timezone.utc), 'time_taken': 414242.0, 'time_delta': '4 days, 19:04:02', 'additions': 156, 'deletions': 3, 'state': 'closed'}, {'id': 1006411330, 'number': 11979, 'closed': datetime.datetime(2022, 7, 27, 2, 48, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 23, 19, 50, 53, tzinfo=datetime.timezone.utc), 'time_taken': 284273.0, 'time_delta': '3 days, 6:57:53', 'additions': 231, 'deletions': 6, 'state': 'closed'}, {'id': 1006411043, 'number': 11978, 'closed': datetime.datetime(2022, 7, 28, 15, 24, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 23, 19, 48, 22, tzinfo=datetime.timezone.utc), 'time_taken': 416148.0, 'time_delta': '4 days, 19:35:48', 'additions': 4091, 'deletions': 5, 'state': 'closed'}, {'id': 1006410506, 'number': 11977, 'closed': datetime.datetime(2022, 7, 27, 3, 22, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 23, 19, 43, 47, tzinfo=datetime.timezone.utc), 'time_taken': 286740.0, 'time_delta': '3 days, 7:39:00', 'additions': 616, 'deletions': 4, 'state': 'closed'}, {'id': 1006409147, 'number': 11976, 'closed': datetime.datetime(2022, 7, 27, 16, 0, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 23, 19, 32, 48, tzinfo=datetime.timezone.utc), 'time_taken': 332832.0, 'time_delta': '3 days, 20:27:12', 'additions': 238, 'deletions': 4, 'state': 'closed'}, {'id': 1006407586, 'number': 11975, 'closed': datetime.datetime(2022, 7, 26, 14, 23, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 23, 19, 20, 52, tzinfo=datetime.timezone.utc), 'time_taken': 241333.0, 'time_delta': '2 days, 19:02:13', 'additions': 87, 'deletions': 4, 'state': 'closed'}, {'id': 1006406759, 'number': 11974, 'closed': datetime.datetime(2022, 7, 27, 15, 59, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 23, 19, 14, 33, tzinfo=datetime.timezone.utc), 'time_taken': 333910.0, 'time_delta': '3 days, 20:45:10', 'additions': 223, 'deletions': 5, 'state': 'closed'}, {'id': 1006398344, 'number': 11972, 'closed': datetime.datetime(2022, 8, 21, 9, 27, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 23, 18, 16, 8, tzinfo=datetime.timezone.utc), 'time_taken': 2473874.0, 'time_delta': '28 days, 15:11:14', 'additions': 106, 'deletions': 73, 'state': 'closed'}, {'id': 1006322379, 'number': 11969, 'closed': datetime.datetime(2022, 7, 26, 14, 45, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 23, 9, 50, 40, tzinfo=datetime.timezone.utc), 'time_taken': 276916.0, 'time_delta': '3 days, 4:55:16', 'additions': 11, 'deletions': 9, 'state': 'closed'}, {'id': 1006316690, 'number': 11967, 'closed': datetime.datetime(2022, 7, 27, 9, 24, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 23, 9, 13, 12, tzinfo=datetime.timezone.utc), 'time_taken': 346256.0, 'time_delta': '4 days, 0:10:56', 'additions': 1, 'deletions': 13, 'state': 'closed'}, {'id': 1006285901, 'number': 11966, 'closed': datetime.datetime(2022, 7, 31, 17, 34, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 23, 5, 55, 27, tzinfo=datetime.timezone.utc), 'time_taken': 733120.0, 'time_delta': '8 days, 11:38:40', 'additions': 1, 'deletions': 20, 'state': 'closed'}, {'id': 1006284132, 'number': 11965, 'closed': datetime.datetime(2022, 7, 27, 9, 0, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 23, 5, 43, 4, tzinfo=datetime.timezone.utc), 'time_taken': 357425.0, 'time_delta': '4 days, 3:17:05', 'additions': 1, 'deletions': 10, 'state': 'closed'}, {'id': 1005947721, 'number': 11964, 'closed': datetime.datetime(2022, 7, 26, 23, 43, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 22, 16, 0, 32, tzinfo=datetime.timezone.utc), 'time_taken': 373362.0, 'time_delta': '4 days, 7:42:42', 'additions': 31, 'deletions': 9, 'state': 'closed'}, {'id': 1005944171, 'number': 11963, 'closed': datetime.datetime(2022, 7, 27, 8, 47, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 22, 15, 56, 19, tzinfo=datetime.timezone.utc), 'time_taken': 406274.0, 'time_delta': '4 days, 16:51:14', 'additions': 1, 'deletions': 11, 'state': 'closed'}, {'id': 1005918164, 'number': 11962, 'closed': datetime.datetime(2022, 7, 28, 15, 29, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 22, 15, 29, 14, tzinfo=datetime.timezone.utc), 'time_taken': 518408.0, 'time_delta': '6 days, 0:00:08', 'additions': 2, 'deletions': 14, 'state': 'closed'}, {'id': 1002834498, 'number': 11957, 'closed': datetime.datetime(2022, 7, 27, 12, 35, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 19, 43, 26, tzinfo=datetime.timezone.utc), 'time_taken': 579119.0, 'time_delta': '6 days, 16:51:59', 'additions': 177, 'deletions': 4, 'state': 'closed'}, {'id': 1002825918, 'number': 11956, 'closed': datetime.datetime(2022, 7, 28, 13, 48, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 19, 37, 51, tzinfo=datetime.timezone.utc), 'time_taken': 670228.0, 'time_delta': '7 days, 18:10:28', 'additions': 78, 'deletions': 4, 'state': 'closed'}, {'id': 1002824941, 'number': 11955, 'closed': datetime.datetime(2022, 7, 27, 5, 32, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 19, 37, 13, tzinfo=datetime.timezone.utc), 'time_taken': 554119.0, 'time_delta': '6 days, 9:55:19', 'additions': 258, 'deletions': 4, 'state': 'closed'}, {'id': 1002812681, 'number': 11954, 'closed': datetime.datetime(2022, 7, 27, 5, 16, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 19, 29, 15, tzinfo=datetime.timezone.utc), 'time_taken': 553644.0, 'time_delta': '6 days, 9:47:24', 'additions': 240, 'deletions': 4, 'state': 'closed'}, {'id': 1002805654, 'number': 11953, 'closed': datetime.datetime(2022, 7, 28, 13, 49, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 19, 24, 46, tzinfo=datetime.timezone.utc), 'time_taken': 671065.0, 'time_delta': '7 days, 18:24:25', 'additions': 204, 'deletions': 4, 'state': 'closed'}, {'id': 1002768750, 'number': 11952, 'closed': datetime.datetime(2022, 7, 26, 14, 25, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 19, 0, 44, tzinfo=datetime.timezone.utc), 'time_taken': 501870.0, 'time_delta': '5 days, 19:24:30', 'additions': 726, 'deletions': 4, 'state': 'closed'}, {'id': 1002764832, 'number': 11951, 'closed': datetime.datetime(2022, 7, 27, 5, 44, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 18, 58, 16, tzinfo=datetime.timezone.utc), 'time_taken': 557163.0, 'time_delta': '6 days, 10:46:03', 'additions': 32, 'deletions': 3, 'state': 'closed'}, {'id': 1002758637, 'number': 11950, 'closed': datetime.datetime(2022, 7, 28, 12, 21, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 18, 54, 10, tzinfo=datetime.timezone.utc), 'time_taken': 667660.0, 'time_delta': '7 days, 17:27:40', 'additions': 393, 'deletions': 4, 'state': 'closed'}, {'id': 1002755449, 'number': 11949, 'closed': datetime.datetime(2022, 7, 26, 14, 21, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 18, 52, 1, tzinfo=datetime.timezone.utc), 'time_taken': 502180.0, 'time_delta': '5 days, 19:29:40', 'additions': 294, 'deletions': 4, 'state': 'closed'}, {'id': 1002751789, 'number': 11948, 'closed': datetime.datetime(2022, 7, 27, 5, 19, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 18, 49, 39, tzinfo=datetime.timezone.utc), 'time_taken': 556191.0, 'time_delta': '6 days, 10:29:51', 'additions': 186, 'deletions': 4, 'state': 'closed'}, {'id': 1002738652, 'number': 11947, 'closed': datetime.datetime(2022, 7, 26, 14, 26, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 18, 40, 56, tzinfo=datetime.timezone.utc), 'time_taken': 503155.0, 'time_delta': '5 days, 19:45:55', 'additions': 213, 'deletions': 4, 'state': 'closed'}, {'id': 1002726697, 'number': 11946, 'closed': datetime.datetime(2022, 7, 24, 3, 30, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 18, 33, 6, tzinfo=datetime.timezone.utc), 'time_taken': 291452.0, 'time_delta': '3 days, 8:57:32', 'additions': 104, 'deletions': 7, 'state': 'closed'}, {'id': 1002715327, 'number': 11944, 'closed': datetime.datetime(2022, 7, 27, 5, 25, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 18, 25, 35, tzinfo=datetime.timezone.utc), 'time_taken': 557989.0, 'time_delta': '6 days, 10:59:49', 'additions': 60, 'deletions': 4, 'state': 'closed'}, {'id': 1002713150, 'number': 11943, 'closed': datetime.datetime(2022, 7, 28, 15, 16, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 18, 24, 10, tzinfo=datetime.timezone.utc), 'time_taken': 679957.0, 'time_delta': '7 days, 20:52:37', 'additions': 87, 'deletions': 4, 'state': 'closed'}, {'id': 1002709181, 'number': 11942, 'closed': datetime.datetime(2022, 7, 28, 15, 18, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 18, 21, 37, tzinfo=datetime.timezone.utc), 'time_taken': 680218.0, 'time_delta': '7 days, 20:56:58', 'additions': 122, 'deletions': 3, 'state': 'closed'}, {'id': 1002705866, 'number': 11941, 'closed': datetime.datetime(2022, 7, 27, 5, 40, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 18, 19, 25, tzinfo=datetime.timezone.utc), 'time_taken': 559285.0, 'time_delta': '6 days, 11:21:25', 'additions': 50, 'deletions': 3, 'state': 'closed'}, {'id': 1002703653, 'number': 11940, 'closed': datetime.datetime(2022, 7, 27, 5, 38, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 18, 17, 54, tzinfo=datetime.timezone.utc), 'time_taken': 559214.0, 'time_delta': '6 days, 11:20:14', 'additions': 862, 'deletions': 6, 'state': 'closed'}, {'id': 1002264219, 'number': 11938, 'closed': datetime.datetime(2022, 7, 22, 15, 57, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 14, 0, 39, tzinfo=datetime.timezone.utc), 'time_taken': 179799.0, 'time_delta': '2 days, 1:56:39', 'additions': 1, 'deletions': 7004, 'state': 'closed'}, {'id': 1002260840, 'number': 11937, 'closed': datetime.datetime(2022, 7, 22, 15, 29, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 13, 58, 50, tzinfo=datetime.timezone.utc), 'time_taken': 178262.0, 'time_delta': '2 days, 1:31:02', 'additions': 1, 'deletions': 7004, 'state': 'closed'}, {'id': 1002258488, 'number': 11936, 'closed': datetime.datetime(2022, 7, 23, 9, 13, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 13, 57, 37, tzinfo=datetime.timezone.utc), 'time_taken': 242129.0, 'time_delta': '2 days, 19:15:29', 'additions': 1, 'deletions': 7004, 'state': 'closed'}, {'id': 1002257078, 'number': 11935, 'closed': datetime.datetime(2022, 7, 23, 18, 17, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 13, 56, 52, tzinfo=datetime.timezone.utc), 'time_taken': 274831.0, 'time_delta': '3 days, 4:20:31', 'additions': 1, 'deletions': 7004, 'state': 'closed'}, {'id': 1002255949, 'number': 11934, 'closed': datetime.datetime(2022, 7, 23, 18, 17, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 13, 56, 16, tzinfo=datetime.timezone.utc), 'time_taken': 274881.0, 'time_delta': '3 days, 4:21:21', 'additions': 1, 'deletions': 7004, 'state': 'closed'}, {'id': 1002254479, 'number': 11933, 'closed': datetime.datetime(2022, 7, 23, 9, 50, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 13, 55, 28, tzinfo=datetime.timezone.utc), 'time_taken': 244520.0, 'time_delta': '2 days, 19:55:20', 'additions': 1, 'deletions': 7004, 'state': 'closed'}, {'id': 1002253091, 'number': 11932, 'closed': datetime.datetime(2022, 7, 22, 16, 3, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 13, 54, 42, tzinfo=datetime.timezone.utc), 'time_taken': 180539.0, 'time_delta': '2 days, 2:08:59', 'additions': 1, 'deletions': 7004, 'state': 'closed'}, {'id': 1002251043, 'number': 11931, 'closed': datetime.datetime(2022, 7, 23, 5, 43, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 13, 53, 35, tzinfo=datetime.timezone.utc), 'time_taken': 229803.0, 'time_delta': '2 days, 15:50:03', 'additions': 1, 'deletions': 7004, 'state': 'closed'}, {'id': 1002245254, 'number': 11930, 'closed': datetime.datetime(2022, 7, 23, 5, 56, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 13, 50, 23, tzinfo=datetime.timezone.utc), 'time_taken': 230751.0, 'time_delta': '2 days, 16:05:51', 'additions': 1, 'deletions': 7004, 'state': 'closed'}, {'id': 1002216510, 'number': 11929, 'closed': datetime.datetime(2022, 7, 22, 14, 25, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 13, 34, 51, tzinfo=datetime.timezone.utc), 'time_taken': 175834.0, 'time_delta': '2 days, 0:50:34', 'additions': 21, 'deletions': 19, 'state': 'closed'}, {'id': 1001794391, 'number': 11928, 'closed': datetime.datetime(2022, 7, 27, 1, 17, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 8, 29, 31, tzinfo=datetime.timezone.utc), 'time_taken': 578875.0, 'time_delta': '6 days, 16:47:55', 'additions': 78, 'deletions': 4, 'state': 'closed'}, {'id': 1001759433, 'number': 11927, 'closed': datetime.datetime(2022, 7, 26, 12, 30, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 8, 1, 46, tzinfo=datetime.timezone.utc), 'time_taken': 534517.0, 'time_delta': '6 days, 4:28:37', 'additions': 240, 'deletions': 4, 'state': 'closed'}, {'id': 1000695533, 'number': 11923, 'closed': datetime.datetime(2022, 7, 19, 13, 25, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 19, 12, 8, 16, tzinfo=datetime.timezone.utc), 'time_taken': 4620.0, 'time_delta': '1:17:00', 'additions': 34, 'deletions': 19, 'state': 'closed'}, {'id': 1000645889, 'number': 11922, 'closed': datetime.datetime(2022, 7, 22, 13, 56, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 19, 11, 17, 19, tzinfo=datetime.timezone.utc), 'time_taken': 268744.0, 'time_delta': '3 days, 2:39:04', 'additions': 35, 'deletions': 9, 'state': 'closed'}, {'id': 1000515122, 'number': 11921, 'closed': datetime.datetime(2022, 7, 27, 12, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 19, 9, 10, 49, tzinfo=datetime.timezone.utc), 'time_taken': 704831.0, 'time_delta': '8 days, 3:47:11', 'additions': 1, 'deletions': 19, 'state': 'closed'}, {'id': 999738166, 'number': 11917, 'closed': datetime.datetime(2022, 7, 27, 8, 30, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 18, 18, 15, 34, tzinfo=datetime.timezone.utc), 'time_taken': 742475.0, 'time_delta': '8 days, 14:14:35', 'additions': 5, 'deletions': 15, 'state': 'closed'}, {'id': 999459518, 'number': 11915, 'closed': datetime.datetime(2022, 7, 20, 20, 47, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 18, 14, 16, 2, tzinfo=datetime.timezone.utc), 'time_taken': 196262.0, 'time_delta': '2 days, 6:31:02', 'additions': 1, 'deletions': 10, 'state': 'closed'}, {'id': 999409129, 'number': 11914, 'closed': datetime.datetime(2022, 7, 24, 2, 20, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 18, 13, 35, 52, tzinfo=datetime.timezone.utc), 'time_taken': 477856.0, 'time_delta': '5 days, 12:44:16', 'additions': 1, 'deletions': 11, 'state': 'closed'}, {'id': 999364112, 'number': 11913, 'closed': datetime.datetime(2022, 7, 22, 14, 12, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 18, 12, 59, 59, tzinfo=datetime.timezone.utc), 'time_taken': 349929.0, 'time_delta': '4 days, 1:12:09', 'additions': 6, 'deletions': 18, 'state': 'closed'}, {'id': 998700191, 'number': 11911, 'closed': datetime.datetime(2022, 7, 18, 18, 16, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 17, 18, 8, 47, tzinfo=datetime.timezone.utc), 'time_taken': 86880.0, 'time_delta': '1 day, 0:08:00', 'additions': 1, 'deletions': 7009, 'state': 'closed'}, {'id': 998700066, 'number': 11910, 'closed': datetime.datetime(2022, 7, 18, 13, 36, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 17, 18, 8, 8, tzinfo=datetime.timezone.utc), 'time_taken': 70105.0, 'time_delta': '19:28:25', 'additions': 1, 'deletions': 7009, 'state': 'closed'}, {'id': 998699788, 'number': 11909, 'closed': datetime.datetime(2022, 7, 18, 13, 10, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 17, 18, 6, 58, tzinfo=datetime.timezone.utc), 'time_taken': 68613.0, 'time_delta': '19:03:33', 'additions': 1, 'deletions': 7009, 'state': 'closed'}, {'id': 998699604, 'number': 11908, 'closed': datetime.datetime(2022, 7, 18, 13, 10, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 17, 18, 5, 59, tzinfo=datetime.timezone.utc), 'time_taken': 68655.0, 'time_delta': '19:04:15', 'additions': 1, 'deletions': 7009, 'state': 'closed'}, {'id': 998698834, 'number': 11907, 'closed': datetime.datetime(2022, 7, 18, 14, 16, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 17, 18, 2, 12, tzinfo=datetime.timezone.utc), 'time_taken': 72836.0, 'time_delta': '20:13:56', 'additions': 1, 'deletions': 7009, 'state': 'closed'}, {'id': 998691791, 'number': 11906, 'closed': datetime.datetime(2022, 7, 18, 12, 22, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 17, 17, 20, 55, tzinfo=datetime.timezone.utc), 'time_taken': 68507.0, 'time_delta': '19:01:47', 'additions': 26, 'deletions': 10, 'state': 'closed'}, {'id': 998661041, 'number': 11904, 'closed': datetime.datetime(2022, 7, 20, 5, 31, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 17, 14, 58, 4, tzinfo=datetime.timezone.utc), 'time_taken': 225193.0, 'time_delta': '2 days, 14:33:13', 'additions': 1, 'deletions': 315, 'state': 'closed'}, {'id': 998390843, 'number': 11899, 'closed': datetime.datetime(2022, 7, 27, 1, 15, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 16, 9, 32, 50, tzinfo=datetime.timezone.utc), 'time_taken': 920582.0, 'time_delta': '10 days, 15:43:02', 'additions': 23, 'deletions': 26, 'state': 'closed'}, {'id': 998385167, 'number': 11898, 'closed': datetime.datetime(2022, 7, 21, 9, 29, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 16, 8, 55, 45, tzinfo=datetime.timezone.utc), 'time_taken': 434005.0, 'time_delta': '5 days, 0:33:25', 'additions': 40, 'deletions': 9, 'state': 'closed'}, {'id': 996741646, 'number': 11894, 'closed': datetime.datetime(2022, 7, 15, 22, 36, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 14, 14, 21, 11, tzinfo=datetime.timezone.utc), 'time_taken': 116095.0, 'time_delta': '1 day, 8:14:55', 'additions': 41, 'deletions': 19, 'state': 'closed'}, {'id': 996312730, 'number': 11892, 'closed': datetime.datetime(2022, 7, 16, 22, 7, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 14, 7, 21, 59, tzinfo=datetime.timezone.utc), 'time_taken': 225954.0, 'time_delta': '2 days, 14:45:54', 'additions': 20, 'deletions': 10, 'state': 'closed'}, {'id': 996274595, 'number': 11891, 'closed': datetime.datetime(2022, 7, 21, 9, 25, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 14, 6, 37, 22, tzinfo=datetime.timezone.utc), 'time_taken': 614900.0, 'time_delta': '7 days, 2:48:20', 'additions': 18, 'deletions': 36, 'state': 'closed'}, {'id': 996253652, 'number': 11890, 'closed': datetime.datetime(2022, 7, 15, 22, 12, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 14, 6, 9, 26, tzinfo=datetime.timezone.utc), 'time_taken': 144159.0, 'time_delta': '1 day, 16:02:39', 'additions': 21, 'deletions': 20, 'state': 'closed'}, {'id': 995439658, 'number': 11888, 'closed': datetime.datetime(2022, 7, 15, 21, 55, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 13, 12, 31, 19, tzinfo=datetime.timezone.utc), 'time_taken': 206679.0, 'time_delta': '2 days, 9:24:39', 'additions': 28, 'deletions': 10, 'state': 'closed'}, {'id': 992309603, 'number': 11873, 'closed': datetime.datetime(2022, 7, 16, 18, 41, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 9, 21, 46, 49, tzinfo=datetime.timezone.utc), 'time_taken': 593707.0, 'time_delta': '6 days, 20:55:07', 'additions': 1331, 'deletions': 10, 'state': 'closed'}, {'id': 992206281, 'number': 11870, 'closed': datetime.datetime(2022, 7, 13, 3, 47, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 9, 10, 53, 21, tzinfo=datetime.timezone.utc), 'time_taken': 320030.0, 'time_delta': '3 days, 16:53:50', 'additions': 15, 'deletions': 49, 'state': 'closed'}, {'id': 992197289, 'number': 11869, 'closed': datetime.datetime(2022, 7, 9, 18, 56, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 9, 9, 47, 42, tzinfo=datetime.timezone.utc), 'time_taken': 32928.0, 'time_delta': '9:08:48', 'additions': 18, 'deletions': 0, 'state': 'closed'}, {'id': 991475143, 'number': 11864, 'closed': datetime.datetime(2022, 7, 12, 12, 2, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 8, 10, 16, 56, tzinfo=datetime.timezone.utc), 'time_taken': 351929.0, 'time_delta': '4 days, 1:45:29', 'additions': 14, 'deletions': 30, 'state': 'closed'}, {'id': 991376536, 'number': 11863, 'closed': datetime.datetime(2022, 7, 8, 13, 26, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 8, 8, 50, 46, tzinfo=datetime.timezone.utc), 'time_taken': 16565.0, 'time_delta': '4:36:05', 'additions': 56, 'deletions': 10, 'state': 'closed'}, {'id': 990263269, 'number': 11861, 'closed': datetime.datetime(2022, 7, 9, 18, 28, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 7, 13, 42, 52, tzinfo=datetime.timezone.utc), 'time_taken': 189930.0, 'time_delta': '2 days, 4:45:30', 'additions': 1, 'deletions': 22, 'state': 'closed'}, {'id': 990203722, 'number': 11860, 'closed': datetime.datetime(2022, 7, 8, 13, 25, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 7, 13, 2, 45, tzinfo=datetime.timezone.utc), 'time_taken': 87736.0, 'time_delta': '1 day, 0:22:16', 'additions': 32, 'deletions': 10, 'state': 'closed'}, {'id': 990170779, 'number': 11859, 'closed': datetime.datetime(2022, 7, 11, 13, 1, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 7, 12, 40, 13, tzinfo=datetime.timezone.utc), 'time_taken': 346902.0, 'time_delta': '4 days, 0:21:42', 'additions': 1, 'deletions': 11, 'state': 'closed'}, {'id': 989291908, 'number': 11854, 'closed': datetime.datetime(2022, 7, 12, 4, 51, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 6, 20, 23, 14, tzinfo=datetime.timezone.utc), 'time_taken': 462487.0, 'time_delta': '5 days, 8:28:07', 'additions': 1, 'deletions': 12, 'state': 'closed'}, {'id': 989162694, 'number': 11853, 'closed': datetime.datetime(2022, 7, 9, 18, 26, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 6, 18, 55, 37, tzinfo=datetime.timezone.utc), 'time_taken': 257445.0, 'time_delta': '2 days, 23:30:45', 'additions': 46, 'deletions': 19, 'state': 'closed'}, {'id': 988782032, 'number': 11850, 'closed': datetime.datetime(2022, 7, 8, 8, 2, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 6, 13, 2, 44, tzinfo=datetime.timezone.utc), 'time_taken': 154777.0, 'time_delta': '1 day, 18:59:37', 'additions': 1, 'deletions': 7094, 'state': 'closed'}, {'id': 988227059, 'number': 11849, 'closed': datetime.datetime(2022, 7, 9, 18, 34, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 6, 5, 51, 38, tzinfo=datetime.timezone.utc), 'time_taken': 304990.0, 'time_delta': '3 days, 12:43:10', 'additions': 3, 'deletions': 23, 'state': 'closed'}, {'id': 988105790, 'number': 11848, 'closed': datetime.datetime(2022, 7, 8, 13, 19, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 6, 3, 19, 5, tzinfo=datetime.timezone.utc), 'time_taken': 208821.0, 'time_delta': '2 days, 10:00:21', 'additions': 35, 'deletions': 23, 'state': 'closed'}, {'id': 986727155, 'number': 11842, 'closed': datetime.datetime(2022, 7, 8, 10, 19, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 4, 18, 7, 49, tzinfo=datetime.timezone.utc), 'time_taken': 317501.0, 'time_delta': '3 days, 16:11:41', 'additions': 1, 'deletions': 7092, 'state': 'closed'}, {'id': 986725940, 'number': 11841, 'closed': datetime.datetime(2022, 7, 8, 8, 50, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 4, 18, 5, 57, tzinfo=datetime.timezone.utc), 'time_taken': 312295.0, 'time_delta': '3 days, 14:44:55', 'additions': 1, 'deletions': 7093, 'state': 'closed'}, {'id': 986725189, 'number': 11840, 'closed': datetime.datetime(2022, 7, 6, 14, 46, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 4, 18, 4, 52, tzinfo=datetime.timezone.utc), 'time_taken': 160920.0, 'time_delta': '1 day, 20:42:00', 'additions': 1, 'deletions': 7092, 'state': 'closed'}, {'id': 986724487, 'number': 11839, 'closed': datetime.datetime(2022, 7, 9, 18, 42, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 4, 18, 3, 49, tzinfo=datetime.timezone.utc), 'time_taken': 434312.0, 'time_delta': '5 days, 0:38:32', 'additions': 1, 'deletions': 7092, 'state': 'closed'}, {'id': 986723511, 'number': 11838, 'closed': datetime.datetime(2022, 7, 23, 18, 52, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 4, 18, 2, 14, tzinfo=datetime.timezone.utc), 'time_taken': 1644597.0, 'time_delta': '19 days, 0:49:57', 'additions': 1, 'deletions': 7092, 'state': 'closed'}, {'id': 986722479, 'number': 11837, 'closed': datetime.datetime(2022, 7, 6, 3, 59, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 4, 18, 0, 27, tzinfo=datetime.timezone.utc), 'time_taken': 122321.0, 'time_delta': '1 day, 9:58:41', 'additions': 1, 'deletions': 7093, 'state': 'closed'}, {'id': 986721981, 'number': 11836, 'closed': datetime.datetime(2022, 7, 6, 3, 19, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 4, 17, 59, 22, tzinfo=datetime.timezone.utc), 'time_taken': 120019.0, 'time_delta': '1 day, 9:20:19', 'additions': 1, 'deletions': 7092, 'state': 'closed'}, {'id': 986715795, 'number': 11835, 'closed': datetime.datetime(2022, 7, 7, 13, 47, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 4, 17, 46, 14, tzinfo=datetime.timezone.utc), 'time_taken': 244895.0, 'time_delta': '2 days, 20:01:35', 'additions': 1, 'deletions': 7092, 'state': 'closed'}, {'id': 986715395, 'number': 11834, 'closed': datetime.datetime(2022, 7, 8, 5, 6, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 4, 17, 45, 33, tzinfo=datetime.timezone.utc), 'time_taken': 300057.0, 'time_delta': '3 days, 11:20:57', 'additions': 1, 'deletions': 7092, 'state': 'closed'}, {'id': 986714822, 'number': 11833, 'closed': datetime.datetime(2022, 7, 7, 13, 4, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 4, 17, 44, 35, tzinfo=datetime.timezone.utc), 'time_taken': 242409.0, 'time_delta': '2 days, 19:20:09', 'additions': 1, 'deletions': 7092, 'state': 'closed'}, {'id': 986714402, 'number': 11832, 'closed': datetime.datetime(2022, 7, 7, 12, 40, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 4, 17, 43, 52, tzinfo=datetime.timezone.utc), 'time_taken': 241003.0, 'time_delta': '2 days, 18:56:43', 'additions': 1, 'deletions': 7092, 'state': 'closed'}, {'id': 986713716, 'number': 11831, 'closed': datetime.datetime(2022, 7, 6, 20, 23, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 4, 17, 42, 36, tzinfo=datetime.timezone.utc), 'time_taken': 182448.0, 'time_delta': '2 days, 2:40:48', 'additions': 1, 'deletions': 7092, 'state': 'closed'}, {'id': 986494755, 'number': 11830, 'closed': datetime.datetime(2022, 7, 6, 18, 53, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 4, 13, 43, 1, tzinfo=datetime.timezone.utc), 'time_taken': 191420.0, 'time_delta': '2 days, 5:10:20', 'additions': 1, 'deletions': 7114, 'state': 'closed'}, {'id': 986399231, 'number': 11829, 'closed': datetime.datetime(2022, 7, 4, 14, 18, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 4, 12, 15, 13, tzinfo=datetime.timezone.utc), 'time_taken': 7424.0, 'time_delta': '2:03:44', 'additions': 47, 'deletions': 69, 'state': 'closed'}, {'id': 986236629, 'number': 11828, 'closed': datetime.datetime(2022, 7, 12, 4, 52, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 4, 9, 42, 2, tzinfo=datetime.timezone.utc), 'time_taken': 673824.0, 'time_delta': '7 days, 19:10:24', 'additions': 10, 'deletions': 10, 'state': 'closed'}, {'id': 985809515, 'number': 11826, 'closed': datetime.datetime(2022, 7, 12, 2, 43, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 3, 20, 30, 24, tzinfo=datetime.timezone.utc), 'time_taken': 713564.0, 'time_delta': '8 days, 6:12:44', 'additions': 7, 'deletions': 56, 'state': 'closed'}, {'id': 985793310, 'number': 11825, 'closed': datetime.datetime(2022, 7, 3, 20, 52, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 3, 18, 52, 18, tzinfo=datetime.timezone.utc), 'time_taken': 7234.0, 'time_delta': '2:00:34', 'additions': 13, 'deletions': 10, 'state': 'closed'}, {'id': 985655098, 'number': 11820, 'closed': datetime.datetime(2022, 7, 3, 12, 10, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 3, 6, 30, 52, tzinfo=datetime.timezone.utc), 'time_taken': 20393.0, 'time_delta': '5:39:53', 'additions': 10, 'deletions': 11, 'state': 'closed'}, {'id': 985574741, 'number': 11814, 'closed': datetime.datetime(2022, 7, 4, 9, 44, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 2, 18, 53, 18, tzinfo=datetime.timezone.utc), 'time_taken': 139891.0, 'time_delta': '1 day, 14:51:31', 'additions': 1, 'deletions': 7063, 'state': 'closed'}, {'id': 985574626, 'number': 11813, 'closed': datetime.datetime(2022, 7, 4, 9, 44, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 2, 18, 52, 36, tzinfo=datetime.timezone.utc), 'time_taken': 139920.0, 'time_delta': '1 day, 14:52:00', 'additions': 1, 'deletions': 7063, 'state': 'closed'}, {'id': 985574531, 'number': 11812, 'closed': datetime.datetime(2022, 7, 4, 9, 44, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 2, 18, 51, 58, tzinfo=datetime.timezone.utc), 'time_taken': 139947.0, 'time_delta': '1 day, 14:52:27', 'additions': 1, 'deletions': 7063, 'state': 'closed'}, {'id': 985574353, 'number': 11811, 'closed': datetime.datetime(2022, 7, 4, 9, 44, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 2, 18, 50, 51, tzinfo=datetime.timezone.utc), 'time_taken': 140004.0, 'time_delta': '1 day, 14:53:24', 'additions': 1, 'deletions': 7063, 'state': 'closed'}, {'id': 985571779, 'number': 11810, 'closed': datetime.datetime(2022, 7, 3, 18, 52, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 2, 18, 34, 19, tzinfo=datetime.timezone.utc), 'time_taken': 87498.0, 'time_delta': '1 day, 0:18:18', 'additions': 1, 'deletions': 7063, 'state': 'closed'}, {'id': 985566074, 'number': 11809, 'closed': datetime.datetime(2022, 7, 3, 16, 20, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 2, 17, 59, 57, tzinfo=datetime.timezone.utc), 'time_taken': 80435.0, 'time_delta': '22:20:35', 'additions': 15, 'deletions': 11, 'state': 'closed'}, {'id': 984529723, 'number': 11803, 'closed': datetime.datetime(2022, 7, 3, 12, 16, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 1, 5, 5, 31, tzinfo=datetime.timezone.utc), 'time_taken': 198684.0, 'time_delta': '2 days, 7:11:24', 'additions': 1, 'deletions': 14, 'state': 'closed'}, {'id': 984521073, 'number': 11802, 'closed': datetime.datetime(2022, 7, 2, 18, 0, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 1, 4, 49, 49, tzinfo=datetime.timezone.utc), 'time_taken': 133821.0, 'time_delta': '1 day, 13:10:21', 'additions': 1, 'deletions': 7063, 'state': 'closed'}, {'id': 984520416, 'number': 11801, 'closed': datetime.datetime(2022, 7, 3, 6, 31, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 1, 4, 48, 24, tzinfo=datetime.timezone.utc), 'time_taken': 178994.0, 'time_delta': '2 days, 1:43:14', 'additions': 1, 'deletions': 7063, 'state': 'closed'}, {'id': 983517638, 'number': 11800, 'closed': datetime.datetime(2022, 7, 3, 14, 14, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 30, 8, 16, 16, tzinfo=datetime.timezone.utc), 'time_taken': 280682.0, 'time_delta': '3 days, 5:58:02', 'additions': 3, 'deletions': 18, 'state': 'closed'}, {'id': 983322022, 'number': 11799, 'closed': datetime.datetime(2022, 7, 1, 6, 51, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 30, 3, 52, 14, tzinfo=datetime.timezone.utc), 'time_taken': 97147.0, 'time_delta': '1 day, 2:59:07', 'additions': 3, 'deletions': 13, 'state': 'closed'}, {'id': 983276443, 'number': 11798, 'closed': datetime.datetime(2022, 7, 3, 18, 58, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 30, 2, 14, 14, tzinfo=datetime.timezone.utc), 'time_taken': 319472.0, 'time_delta': '3 days, 16:44:32', 'additions': 39, 'deletions': 11, 'state': 'closed'}, {'id': 983269709, 'number': 11797, 'closed': datetime.datetime(2022, 7, 3, 7, 7, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 30, 1, 58, 26, tzinfo=datetime.timezone.utc), 'time_taken': 277746.0, 'time_delta': '3 days, 5:09:06', 'additions': 6, 'deletions': 31, 'state': 'closed'}, {'id': 982180232, 'number': 11792, 'closed': datetime.datetime(2022, 7, 1, 10, 59, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 29, 6, 46, 51, tzinfo=datetime.timezone.utc), 'time_taken': 187950.0, 'time_delta': '2 days, 4:12:30', 'additions': 14, 'deletions': 35, 'state': 'closed'}, {'id': 981289751, 'number': 11791, 'closed': datetime.datetime(2022, 7, 1, 21, 26, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 28, 11, 38, 46, tzinfo=datetime.timezone.utc), 'time_taken': 294453.0, 'time_delta': '3 days, 9:47:33', 'additions': 36, 'deletions': 13, 'state': 'closed'}, {'id': 980426001, 'number': 11787, 'closed': datetime.datetime(2022, 6, 30, 2, 36, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 19, 4, 50, tzinfo=datetime.timezone.utc), 'time_taken': 199913.0, 'time_delta': '2 days, 7:31:53', 'additions': 1, 'deletions': 7063, 'state': 'closed'}, {'id': 979916792, 'number': 11781, 'closed': datetime.datetime(2022, 6, 30, 3, 53, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 11, 9, 44, tzinfo=datetime.timezone.utc), 'time_taken': 233018.0, 'time_delta': '2 days, 16:43:38', 'additions': 1, 'deletions': 7063, 'state': 'closed'}, {'id': 979880732, 'number': 11780, 'closed': datetime.datetime(2022, 7, 1, 4, 31, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 10, 33, 48, tzinfo=datetime.timezone.utc), 'time_taken': 323845.0, 'time_delta': '3 days, 17:57:25', 'additions': 1, 'deletions': 7063, 'state': 'closed'}, {'id': 979850008, 'number': 11779, 'closed': datetime.datetime(2022, 6, 30, 2, 36, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 10, 6, 34, tzinfo=datetime.timezone.utc), 'time_taken': 232183.0, 'time_delta': '2 days, 16:29:43', 'additions': 1, 'deletions': 7063, 'state': 'closed'}, {'id': 979847749, 'number': 11778, 'closed': datetime.datetime(2022, 7, 1, 5, 6, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 10, 4, 40, tzinfo=datetime.timezone.utc), 'time_taken': 327685.0, 'time_delta': '3 days, 19:01:25', 'additions': 1, 'deletions': 7063, 'state': 'closed'}, {'id': 979843780, 'number': 11777, 'closed': datetime.datetime(2022, 6, 30, 2, 35, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 10, 1, 12, tzinfo=datetime.timezone.utc), 'time_taken': 232457.0, 'time_delta': '2 days, 16:34:17', 'additions': 1, 'deletions': 7063, 'state': 'closed'}, {'id': 979839938, 'number': 11776, 'closed': datetime.datetime(2022, 6, 30, 2, 35, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 9, 57, 41, tzinfo=datetime.timezone.utc), 'time_taken': 232643.0, 'time_delta': '2 days, 16:37:23', 'additions': 1, 'deletions': 7063, 'state': 'closed'}, {'id': 979723130, 'number': 11775, 'closed': datetime.datetime(2022, 6, 28, 16, 8, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 8, 10, 3, tzinfo=datetime.timezone.utc), 'time_taken': 115097.0, 'time_delta': '1 day, 7:58:17', 'additions': 1, 'deletions': 13, 'state': 'closed'}, {'id': 979707852, 'number': 11774, 'closed': datetime.datetime(2022, 7, 2, 4, 19, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 7, 54, 47, tzinfo=datetime.timezone.utc), 'time_taken': 419107.0, 'time_delta': '4 days, 20:25:07', 'additions': 9, 'deletions': 43, 'state': 'closed'}, {'id': 979246183, 'number': 11771, 'closed': datetime.datetime(2022, 6, 29, 6, 54, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 26, 8, 25, 48, tzinfo=datetime.timezone.utc), 'time_taken': 253736.0, 'time_delta': '2 days, 22:28:56', 'additions': 1, 'deletions': 7064, 'state': 'closed'}, {'id': 979243246, 'number': 11770, 'closed': datetime.datetime(2022, 6, 30, 2, 34, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 26, 8, 8, 11, tzinfo=datetime.timezone.utc), 'time_taken': 325583.0, 'time_delta': '3 days, 18:26:23', 'additions': 1, 'deletions': 7064, 'state': 'closed'}, {'id': 979210952, 'number': 11769, 'closed': datetime.datetime(2022, 6, 26, 13, 36, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 26, 4, 38, 17, tzinfo=datetime.timezone.utc), 'time_taken': 32301.0, 'time_delta': '8:58:21', 'additions': 2, 'deletions': 20, 'state': 'closed'}, {'id': 979209993, 'number': 11768, 'closed': datetime.datetime(2022, 6, 26, 4, 37, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 26, 4, 30, 31, tzinfo=datetime.timezone.utc), 'time_taken': 406.0, 'time_delta': '0:06:46', 'additions': 2, 'deletions': 18, 'state': 'closed'}, {'id': 977903640, 'number': 11763, 'closed': datetime.datetime(2022, 6, 25, 10, 48, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 24, 5, 5, 42, tzinfo=datetime.timezone.utc), 'time_taken': 106994.0, 'time_delta': '1 day, 5:43:14', 'additions': 36, 'deletions': 39, 'state': 'closed'}, {'id': 977895093, 'number': 11762, 'closed': datetime.datetime(2022, 6, 24, 14, 16, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 24, 4, 47, 24, tzinfo=datetime.timezone.utc), 'time_taken': 34117.0, 'time_delta': '9:28:37', 'additions': 38, 'deletions': 683, 'state': 'closed'}, {'id': 966907371, 'number': 11739, 'closed': datetime.datetime(2022, 6, 24, 10, 46, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 14, 13, 3, 35, tzinfo=datetime.timezone.utc), 'time_taken': 855788.0, 'time_delta': '9 days, 21:43:08', 'additions': 489, 'deletions': 0, 'state': 'closed'}, {'id': 965004764, 'number': 11732, 'closed': datetime.datetime(2022, 6, 15, 23, 5, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 12, 13, 44, 30, tzinfo=datetime.timezone.utc), 'time_taken': 292866.0, 'time_delta': '3 days, 9:21:06', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 964994958, 'number': 11731, 'closed': datetime.datetime(2022, 6, 25, 13, 23, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 12, 12, 57, 10, tzinfo=datetime.timezone.utc), 'time_taken': 1124802.0, 'time_delta': '13 days, 0:26:42', 'additions': 1346, 'deletions': 4, 'state': 'closed'}, {'id': 960390088, 'number': 11707, 'closed': datetime.datetime(2022, 6, 11, 11, 34, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 7, 13, 23, 9, tzinfo=datetime.timezone.utc), 'time_taken': 339087.0, 'time_delta': '3 days, 22:11:27', 'additions': 278, 'deletions': 27, 'state': 'closed'}, {'id': 957219359, 'number': 11694, 'closed': datetime.datetime(2022, 6, 4, 4, 8, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 3, 8, 45, 6, tzinfo=datetime.timezone.utc), 'time_taken': 69824.0, 'time_delta': '19:23:44', 'additions': 24, 'deletions': 11, 'state': 'closed'}, {'id': 948549704, 'number': 11672, 'closed': datetime.datetime(2023, 11, 30, 20, 19, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 26, 18, 17, 24, tzinfo=datetime.timezone.utc), 'time_taken': 47786550.0, 'time_delta': '553 days, 2:02:30', 'additions': 750, 'deletions': 102, 'state': 'closed'}, {'id': 943623620, 'number': 11663, 'closed': datetime.datetime(2022, 5, 22, 19, 31, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 22, 10, 48, 54, tzinfo=datetime.timezone.utc), 'time_taken': 31350.0, 'time_delta': '8:42:30', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 917417391, 'number': 11571, 'closed': datetime.datetime(2022, 5, 10, 3, 59, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 24, 11, 30, 32, tzinfo=datetime.timezone.utc), 'time_taken': 1355320.0, 'time_delta': '15 days, 16:28:40', 'additions': 23, 'deletions': 13, 'state': 'closed'}, {'id': 913011480, 'number': 11551, 'closed': datetime.datetime(2022, 4, 23, 14, 5, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 19, 11, 49, 8, tzinfo=datetime.timezone.utc), 'time_taken': 353768.0, 'time_delta': '4 days, 2:16:08', 'additions': 32, 'deletions': 21, 'state': 'closed'}, {'id': 900232714, 'number': 11512, 'closed': datetime.datetime(2022, 4, 8, 1, 46, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 5, 13, 41, 43, tzinfo=datetime.timezone.utc), 'time_taken': 216278.0, 'time_delta': '2 days, 12:04:38', 'additions': 0, 'deletions': 6, 'state': 'closed'}, {'id': 890183486, 'number': 11468, 'closed': datetime.datetime(2022, 6, 8, 13, 33, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 26, 8, 8, 48, tzinfo=datetime.timezone.utc), 'time_taken': 6413058.0, 'time_delta': '74 days, 5:24:18', 'additions': 547, 'deletions': 128, 'state': 'closed'}, {'id': 890182300, 'number': 11467, 'closed': datetime.datetime(2022, 3, 26, 8, 7, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 26, 8, 4, 30, tzinfo=datetime.timezone.utc), 'time_taken': 166.0, 'time_delta': '0:02:46', 'additions': 256, 'deletions': 45, 'state': 'closed'}, {'id': 890175923, 'number': 11466, 'closed': datetime.datetime(2022, 3, 26, 8, 3, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 26, 7, 37, 51, tzinfo=datetime.timezone.utc), 'time_taken': 1552.0, 'time_delta': '0:25:52', 'additions': 256, 'deletions': 45, 'state': 'closed'}, {'id': 888626475, 'number': 11461, 'closed': datetime.datetime(2022, 3, 25, 4, 35, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 24, 17, 15, 16, tzinfo=datetime.timezone.utc), 'time_taken': 40838.0, 'time_delta': '11:20:38', 'additions': 521, 'deletions': 217, 'state': 'closed'}, {'id': 885184176, 'number': 11451, 'closed': datetime.datetime(2022, 3, 21, 23, 22, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 21, 18, 40, 23, tzinfo=datetime.timezone.utc), 'time_taken': 16944.0, 'time_delta': '4:42:24', 'additions': 2, 'deletions': 3, 'state': 'closed'}, {'id': 885170755, 'number': 11450, 'closed': datetime.datetime(2022, 3, 22, 15, 19, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 21, 18, 25, 46, tzinfo=datetime.timezone.utc), 'time_taken': 75207.0, 'time_delta': '20:53:27', 'additions': 310, 'deletions': 244, 'state': 'closed'}, {'id': 884101159, 'number': 11443, 'closed': datetime.datetime(2022, 4, 2, 3, 56, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 20, 5, 17, 17, tzinfo=datetime.timezone.utc), 'time_taken': 1118361.0, 'time_delta': '12 days, 22:39:21', 'additions': 86, 'deletions': 17, 'state': 'closed'}, {'id': 884017411, 'number': 11437, 'closed': datetime.datetime(2022, 3, 19, 19, 2, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 19, 17, 41, 11, tzinfo=datetime.timezone.utc), 'time_taken': 4895.0, 'time_delta': '1:21:35', 'additions': 3, 'deletions': 35, 'state': 'closed'}, {'id': 883218914, 'number': 11431, 'closed': datetime.datetime(2022, 3, 19, 12, 34, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 18, 8, 34, 34, tzinfo=datetime.timezone.utc), 'time_taken': 100796.0, 'time_delta': '1 day, 3:59:56', 'additions': 148, 'deletions': 71, 'state': 'closed'}, {'id': 883204936, 'number': 11430, 'closed': datetime.datetime(2022, 3, 19, 13, 7, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 18, 8, 13, 39, tzinfo=datetime.timezone.utc), 'time_taken': 104035.0, 'time_delta': '1 day, 4:53:55', 'additions': 49, 'deletions': 99, 'state': 'closed'}, {'id': 883175027, 'number': 11429, 'closed': datetime.datetime(2022, 3, 19, 13, 9, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 18, 7, 23, 29, tzinfo=datetime.timezone.utc), 'time_taken': 107175.0, 'time_delta': '1 day, 5:46:15', 'additions': 16, 'deletions': 34, 'state': 'closed'}, {'id': 882315099, 'number': 11424, 'closed': datetime.datetime(2022, 3, 17, 13, 31, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 17, 10, 36, 58, tzinfo=datetime.timezone.utc), 'time_taken': 10463.0, 'time_delta': '2:54:23', 'additions': 55, 'deletions': 55, 'state': 'closed'}, {'id': 880421454, 'number': 11420, 'closed': datetime.datetime(2022, 3, 16, 1, 28, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 15, 17, 6, 18, tzinfo=datetime.timezone.utc), 'time_taken': 30105.0, 'time_delta': '8:21:45', 'additions': 299, 'deletions': 167, 'state': 'closed'}, {'id': 880202283, 'number': 11418, 'closed': datetime.datetime(2022, 3, 15, 17, 4, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 15, 13, 45, 38, tzinfo=datetime.timezone.utc), 'time_taken': 11930.0, 'time_delta': '3:18:50', 'additions': 189, 'deletions': 2, 'state': 'closed'}, {'id': 878760711, 'number': 11413, 'closed': datetime.datetime(2022, 3, 15, 12, 53, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 14, 8, 22, 36, tzinfo=datetime.timezone.utc), 'time_taken': 102676.0, 'time_delta': '1 day, 4:31:16', 'additions': 1652, 'deletions': 239, 'state': 'closed'}, {'id': 878157204, 'number': 11398, 'closed': datetime.datetime(2022, 3, 19, 13, 26, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 12, 12, 14, 57, tzinfo=datetime.timezone.utc), 'time_taken': 609093.0, 'time_delta': '7 days, 1:11:33', 'additions': 177, 'deletions': 16, 'state': 'closed'}, {'id': 875622330, 'number': 11383, 'closed': datetime.datetime(2022, 3, 23, 19, 39, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 9, 18, 42, 49, tzinfo=datetime.timezone.utc), 'time_taken': 1212977.0, 'time_delta': '14 days, 0:56:17', 'additions': 179, 'deletions': 15, 'state': 'closed'}, {'id': 872468808, 'number': 11369, 'closed': datetime.datetime(2022, 3, 19, 16, 18, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 6, 14, 27, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1129903.0, 'time_delta': '13 days, 1:51:43', 'additions': 143, 'deletions': 176, 'state': 'closed'}, {'id': 841469363, 'number': 11299, 'closed': datetime.datetime(2022, 2, 12, 19, 49, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 7, 8, 52, 19, tzinfo=datetime.timezone.utc), 'time_taken': 471405.0, 'time_delta': '5 days, 10:56:45', 'additions': 155, 'deletions': 5, 'state': 'closed'}, {'id': 841010502, 'number': 11290, 'closed': datetime.datetime(2022, 2, 6, 16, 16, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 6, 6, 59, 42, tzinfo=datetime.timezone.utc), 'time_taken': 33408.0, 'time_delta': '9:16:48', 'additions': 0, 'deletions': 3, 'state': 'closed'}, {'id': 840487592, 'number': 11282, 'closed': datetime.datetime(2022, 2, 4, 22, 47, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 4, 17, 59, 52, tzinfo=datetime.timezone.utc), 'time_taken': 17284.0, 'time_delta': '4:48:04', 'additions': 0, 'deletions': 2, 'state': 'closed'}, {'id': 837606661, 'number': 11270, 'closed': datetime.datetime(2022, 2, 20, 8, 40, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 1, 19, 33, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1602410.0, 'time_delta': '18 days, 13:06:50', 'additions': 127, 'deletions': 62, 'state': 'closed'}, {'id': 836463424, 'number': 11264, 'closed': datetime.datetime(2022, 3, 9, 13, 46, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 31, 18, 49, 23, tzinfo=datetime.timezone.utc), 'time_taken': 3178619.0, 'time_delta': '36 days, 18:56:59', 'additions': 129, 'deletions': 7, 'state': 'closed'}, {'id': 835325036, 'number': 11254, 'closed': datetime.datetime(2022, 2, 27, 11, 23, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 30, 10, 2, 49, tzinfo=datetime.timezone.utc), 'time_taken': 2424060.0, 'time_delta': '28 days, 1:21:00', 'additions': 89, 'deletions': 11, 'state': 'closed'}, {'id': 830090903, 'number': 11231, 'closed': datetime.datetime(2024, 3, 2, 12, 6, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 24, 7, 56, 33, tzinfo=datetime.timezone.utc), 'time_taken': 66370182.0, 'time_delta': '768 days, 4:09:42', 'additions': 1265, 'deletions': 42, 'state': 'closed'}, {'id': 827275358, 'number': 11223, 'closed': datetime.datetime(2022, 1, 29, 22, 33, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 20, 8, 24, 49, tzinfo=datetime.timezone.utc), 'time_taken': 828546.0, 'time_delta': '9 days, 14:09:06', 'additions': 286, 'deletions': 86, 'state': 'closed'}, {'id': 825473468, 'number': 11216, 'closed': datetime.datetime(2022, 1, 18, 20, 2, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 18, 13, 8, 54, tzinfo=datetime.timezone.utc), 'time_taken': 24827.0, 'time_delta': '6:53:47', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 824160666, 'number': 11210, 'closed': datetime.datetime(2022, 1, 17, 5, 38, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 17, 4, 33, 12, tzinfo=datetime.timezone.utc), 'time_taken': 3929.0, 'time_delta': '1:05:29', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 824144580, 'number': 11209, 'closed': datetime.datetime(2022, 1, 17, 5, 34, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 17, 4, 6, 19, tzinfo=datetime.timezone.utc), 'time_taken': 5296.0, 'time_delta': '1:28:16', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 823714935, 'number': 11198, 'closed': datetime.datetime(2022, 2, 7, 3, 59, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 15, 18, 33, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1934749.0, 'time_delta': '22 days, 9:25:49', 'additions': 59, 'deletions': 3, 'state': 'closed'}, {'id': 823535957, 'number': 11196, 'closed': datetime.datetime(2022, 1, 16, 7, 18, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 15, 7, 24, 4, tzinfo=datetime.timezone.utc), 'time_taken': 86089.0, 'time_delta': '23:54:49', 'additions': 43, 'deletions': 0, 'state': 'closed'}, {'id': 822680550, 'number': 11195, 'closed': datetime.datetime(2022, 1, 15, 22, 36, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 14, 13, 34, 2, tzinfo=datetime.timezone.utc), 'time_taken': 118970.0, 'time_delta': '1 day, 9:02:50', 'additions': 974, 'deletions': 974, 'state': 'closed'}, {'id': 818499475, 'number': 11177, 'closed': datetime.datetime(2022, 1, 12, 18, 19, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 11, 9, 48, 51, tzinfo=datetime.timezone.utc), 'time_taken': 117063.0, 'time_delta': '1 day, 8:31:03', 'additions': 799, 'deletions': 0, 'state': 'closed'}, {'id': 811835774, 'number': 11133, 'closed': datetime.datetime(2022, 1, 29, 23, 10, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 30, 8, 4, 42, tzinfo=datetime.timezone.utc), 'time_taken': 2646325.0, 'time_delta': '30 days, 15:05:25', 'additions': 185, 'deletions': 32, 'state': 'closed'}, {'id': 810003573, 'number': 11112, 'closed': datetime.datetime(2022, 1, 18, 19, 20, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 26, 11, 38, 51, tzinfo=datetime.timezone.utc), 'time_taken': 2014922.0, 'time_delta': '23 days, 7:42:02', 'additions': 201, 'deletions': 68, 'state': 'closed'}, {'id': 807718772, 'number': 11085, 'closed': datetime.datetime(2021, 12, 31, 7, 2, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 21, 17, 6, 30, tzinfo=datetime.timezone.utc), 'time_taken': 827780.0, 'time_delta': '9 days, 13:56:20', 'additions': 165, 'deletions': 2, 'state': 'closed'}, {'id': 805311479, 'number': 11051, 'closed': datetime.datetime(2022, 3, 9, 13, 48, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 17, 12, 6, 31, tzinfo=datetime.timezone.utc), 'time_taken': 7090908.0, 'time_delta': '82 days, 1:41:48', 'additions': 166, 'deletions': 149, 'state': 'closed'}, {'id': 803692843, 'number': 11048, 'closed': datetime.datetime(2021, 12, 19, 5, 14, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 15, 17, 28, 46, tzinfo=datetime.timezone.utc), 'time_taken': 301516.0, 'time_delta': '3 days, 11:45:16', 'additions': 162, 'deletions': 107, 'state': 'closed'}, {'id': 799612777, 'number': 11020, 'closed': datetime.datetime(2021, 12, 20, 21, 45, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 10, 6, 29, 12, tzinfo=datetime.timezone.utc), 'time_taken': 918986.0, 'time_delta': '10 days, 15:16:26', 'additions': 87, 'deletions': 27, 'state': 'closed'}, {'id': 790144283, 'number': 10989, 'closed': datetime.datetime(2021, 12, 9, 22, 12, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 28, 17, 58, 27, tzinfo=datetime.timezone.utc), 'time_taken': 965616.0, 'time_delta': '11 days, 4:13:36', 'additions': 129, 'deletions': 85, 'state': 'closed'}, {'id': 789350422, 'number': 10980, 'closed': datetime.datetime(2021, 11, 27, 16, 56, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 26, 8, 8, 11, tzinfo=datetime.timezone.utc), 'time_taken': 118120.0, 'time_delta': '1 day, 8:48:40', 'additions': 125, 'deletions': 125, 'state': 'closed'}, {'id': 774909609, 'number': 10930, 'closed': datetime.datetime(2022, 1, 17, 19, 34, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 7, 5, 19, 38, tzinfo=datetime.timezone.utc), 'time_taken': 6185674.0, 'time_delta': '71 days, 14:14:34', 'additions': 2562, 'deletions': 8, 'state': 'closed'}, {'id': 770199020, 'number': 10915, 'closed': datetime.datetime(2021, 11, 6, 20, 58, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 1, 5, 57, 3, tzinfo=datetime.timezone.utc), 'time_taken': 486083.0, 'time_delta': '5 days, 15:01:23', 'additions': 36, 'deletions': 36, 'state': 'closed'}, {'id': 765174641, 'number': 10904, 'closed': datetime.datetime(2022, 3, 1, 16, 43, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 25, 7, 40, 8, tzinfo=datetime.timezone.utc), 'time_taken': 11005395.0, 'time_delta': '127 days, 9:03:15', 'additions': 306, 'deletions': 11, 'state': 'closed'}, {'id': 764938900, 'number': 10903, 'closed': datetime.datetime(2021, 10, 25, 8, 16, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 24, 20, 4, 9, tzinfo=datetime.timezone.utc), 'time_taken': 43946.0, 'time_delta': '12:12:26', 'additions': 9, 'deletions': 31, 'state': 'closed'}, {'id': 763449116, 'number': 10887, 'closed': datetime.datetime(2021, 11, 21, 5, 27, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 21, 16, 31, tzinfo=datetime.timezone.utc), 'time_taken': 2638572.0, 'time_delta': '30 days, 12:56:12', 'additions': 429, 'deletions': 42, 'state': 'closed'}, {'id': 748110234, 'number': 10840, 'closed': datetime.datetime(2021, 11, 11, 21, 39, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 2, 11, 47, 14, tzinfo=datetime.timezone.utc), 'time_taken': 3491527.0, 'time_delta': '40 days, 9:52:07', 'additions': 93, 'deletions': 11, 'state': 'closed'}, {'id': 742821410, 'number': 10825, 'closed': datetime.datetime(2021, 10, 20, 12, 57, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 26, 7, 20, 19, tzinfo=datetime.timezone.utc), 'time_taken': 2093812.0, 'time_delta': '24 days, 5:36:52', 'additions': 1289, 'deletions': 26, 'state': 'closed'}, {'id': 736888318, 'number': 10805, 'closed': datetime.datetime(2021, 10, 25, 1, 54, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 18, 11, 3, 36, tzinfo=datetime.timezone.utc), 'time_taken': 3163874.0, 'time_delta': '36 days, 14:51:14', 'additions': 77, 'deletions': 16, 'state': 'closed'}, {'id': 722156876, 'number': 10759, 'closed': datetime.datetime(2021, 9, 4, 14, 52, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 30, 4, 51, 30, tzinfo=datetime.timezone.utc), 'time_taken': 468048.0, 'time_delta': '5 days, 10:00:48', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 661626505, 'number': 10071, 'closed': datetime.datetime(2021, 10, 20, 13, 9, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 4, 10, 0, 9, tzinfo=datetime.timezone.utc), 'time_taken': 11934582.0, 'time_delta': '138 days, 3:09:42', 'additions': 186, 'deletions': 104, 'state': 'closed'}, {'id': 653649146, 'number': 10046, 'closed': datetime.datetime(2021, 10, 24, 19, 1, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 26, 11, 45, 28, tzinfo=datetime.timezone.utc), 'time_taken': 13072568.0, 'time_delta': '151 days, 7:16:08', 'additions': 205, 'deletions': 18, 'state': 'closed'}, {'id': 648530154, 'number': 10021, 'closed': datetime.datetime(2021, 12, 17, 7, 5, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 20, 7, 35, 15, tzinfo=datetime.timezone.utc), 'time_taken': 18228636.0, 'time_delta': '210 days, 23:30:36', 'additions': 181, 'deletions': 1, 'state': 'closed'}, {'id': 636031680, 'number': 9996, 'closed': datetime.datetime(2021, 5, 16, 14, 2, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 9, 16, 16, 4, tzinfo=datetime.timezone.utc), 'time_taken': 596785.0, 'time_delta': '6 days, 21:46:25', 'additions': 122, 'deletions': 23, 'state': 'closed'}, {'id': 624046841, 'number': 9942, 'closed': datetime.datetime(2021, 6, 12, 23, 14, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 27, 7, 13, 48, tzinfo=datetime.timezone.utc), 'time_taken': 4032037.0, 'time_delta': '46 days, 16:00:37', 'additions': 137, 'deletions': 4, 'state': 'closed'}, {'id': 596456396, 'number': 9666, 'closed': datetime.datetime(2021, 3, 27, 13, 48, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 19, 11, 14, 48, tzinfo=datetime.timezone.utc), 'time_taken': 700422.0, 'time_delta': '8 days, 2:33:42', 'additions': 11, 'deletions': 11, 'state': 'closed'}, {'id': 591698415, 'number': 9383, 'closed': datetime.datetime(2021, 3, 24, 1, 40, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 12, 13, 53, 58, tzinfo=datetime.timezone.utc), 'time_taken': 992792.0, 'time_delta': '11 days, 11:46:32', 'additions': 158, 'deletions': 7, 'state': 'closed'}, {'id': 584941782, 'number': 9349, 'closed': datetime.datetime(2021, 4, 13, 13, 53, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 4, 16, 27, 55, tzinfo=datetime.timezone.utc), 'time_taken': 3446718.0, 'time_delta': '39 days, 21:25:18', 'additions': 52, 'deletions': 11, 'state': 'closed'}, {'id': 581449577, 'number': 9334, 'closed': datetime.datetime(2021, 4, 1, 14, 24, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 28, 4, 19, 16, tzinfo=datetime.timezone.utc), 'time_taken': 2801088.0, 'time_delta': '32 days, 10:04:48', 'additions': 406, 'deletions': 63, 'state': 'closed'}, {'id': 576366613, 'number': 9308, 'closed': datetime.datetime(2021, 2, 27, 15, 5, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 19, 10, 45, 1, tzinfo=datetime.timezone.utc), 'time_taken': 706827.0, 'time_delta': '8 days, 4:20:27', 'additions': 210, 'deletions': 2, 'state': 'closed'}, {'id': 568230323, 'number': 9239, 'closed': datetime.datetime(2021, 3, 2, 11, 0, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 5, 9, 45, 55, tzinfo=datetime.timezone.utc), 'time_taken': 2164472.0, 'time_delta': '25 days, 1:14:32', 'additions': 185, 'deletions': 22, 'state': 'closed'}, {'id': 564584168, 'number': 9222, 'closed': datetime.datetime(2021, 2, 5, 7, 20, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 31, 4, 59, 20, tzinfo=datetime.timezone.utc), 'time_taken': 440474.0, 'time_delta': '5 days, 2:21:14', 'additions': 398, 'deletions': 407, 'state': 'closed'}, {'id': 550839394, 'number': 9160, 'closed': datetime.datetime(2021, 2, 15, 15, 48, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 7, 5, 51, 1, tzinfo=datetime.timezone.utc), 'time_taken': 3405477.0, 'time_delta': '39 days, 9:57:57', 'additions': 214, 'deletions': 20, 'state': 'closed'}, {'id': 548354607, 'number': 9153, 'closed': datetime.datetime(2021, 1, 30, 15, 58, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 4, 16, 58, 20, tzinfo=datetime.timezone.utc), 'time_taken': 2242833.0, 'time_delta': '25 days, 23:00:33', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 545676233, 'number': 9136, 'closed': datetime.datetime(2021, 2, 16, 15, 6, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 26, 9, 41, 25, tzinfo=datetime.timezone.utc), 'time_taken': 4512286.0, 'time_delta': '52 days, 5:24:46', 'additions': 67, 'deletions': 35, 'state': 'closed'}, {'id': 537975500, 'number': 9099, 'closed': datetime.datetime(2021, 1, 7, 5, 13, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 12, 10, 5, 32, tzinfo=datetime.timezone.utc), 'time_taken': 2228852.0, 'time_delta': '25 days, 19:07:32', 'additions': 162, 'deletions': 2, 'state': 'closed'}, {'id': 535818860, 'number': 9095, 'closed': datetime.datetime(2020, 12, 12, 9, 34, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 10, 10, 11, tzinfo=datetime.timezone.utc), 'time_taken': 170634.0, 'time_delta': '1 day, 23:23:54', 'additions': 133, 'deletions': 0, 'state': 'closed'}, {'id': 534450035, 'number': 9087, 'closed': datetime.datetime(2020, 12, 10, 10, 9, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 8, 13, 26, 22, tzinfo=datetime.timezone.utc), 'time_taken': 160980.0, 'time_delta': '1 day, 20:43:00', 'additions': 32, 'deletions': 0, 'state': 'closed'}, {'id': 528936852, 'number': 9045, 'closed': datetime.datetime(2020, 12, 3, 13, 42, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 28, 11, 44, 16, tzinfo=datetime.timezone.utc), 'time_taken': 439122.0, 'time_delta': '5 days, 1:58:42', 'additions': 84, 'deletions': 1, 'state': 'closed'}, {'id': 528903815, 'number': 9044, 'closed': datetime.datetime(2020, 11, 28, 7, 14, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 28, 7, 7, 2, tzinfo=datetime.timezone.utc), 'time_taken': 443.0, 'time_delta': '0:07:23', 'additions': 50, 'deletions': 9, 'state': 'closed'}, {'id': 528726090, 'number': 9042, 'closed': datetime.datetime(2020, 12, 2, 15, 52, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 27, 17, 32, 35, tzinfo=datetime.timezone.utc), 'time_taken': 425984.0, 'time_delta': '4 days, 22:19:44', 'additions': 22, 'deletions': 0, 'state': 'closed'}, {'id': 528489550, 'number': 9036, 'closed': datetime.datetime(2020, 12, 3, 4, 44, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 27, 9, 14, 11, tzinfo=datetime.timezone.utc), 'time_taken': 502222.0, 'time_delta': '5 days, 19:30:22', 'additions': 22, 'deletions': 2, 'state': 'closed'}, {'id': 526690190, 'number': 9024, 'closed': datetime.datetime(2020, 11, 26, 12, 2, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 24, 18, 56, 55, tzinfo=datetime.timezone.utc), 'time_taken': 147919.0, 'time_delta': '1 day, 17:05:19', 'additions': 34, 'deletions': 0, 'state': 'closed'}]"
57127895,sonar-checkstyle,checkstyle/sonar-checkstyle,Java,69,171,17,45,780,18,1,0,"[{'id': 1038648269, 'number': 430, 'closed': datetime.datetime(2022, 8, 27, 19, 11, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 27, 14, 44, 53, tzinfo=datetime.timezone.utc), 'time_taken': 16025.0, 'time_delta': '4:27:05', 'additions': 1, 'deletions': 5, 'state': 'closed'}]"
