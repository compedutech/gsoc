pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
998403342,[GSoC] Add `SearchNotes()` function,"## Pull Request template

## Purpose / Description
Prep commit for notes browser

## Fixes

## Approach
Add a similar method to `searchCards()` that calls the `findNotes()` function from Collection.

## How Has This Been Tested?

Manually on my phone.

Please describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration (SDK version(s), emulator or physical, etc)

## Learning (optional, can help others)
_Describe the research stage_

_Links to blog posts, patterns, libraries or addons used to solve this problem_

## Checklist
_Please, go through these checks before submitting the PR._

- [x] You have not changed whitespace unnecessarily (it makes diffs hard to read)
- [x] You have a descriptive commit message with a short title (first line, max 50 chars).
- [x] Your code follows the style of the project (e.g. never omit braces in `if` statements) 
- [x] You have commented your code, particularly in hard-to-understand areas
- [x] You have performed a self-review of your own code
- [ ] UI changes: include screenshots of all affected screens (in particular showing any new or changed strings)
- [ ] UI Changes: You have tested your change using the [Google Accessibility Scanner](https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.auditor)
",True,11867,https://api.github.com/repos/ankidroid/Anki-Android/pulls/11867,https://github.com/ankidroid/Anki-Android/pull/11867,closed,40,0,1,1,6,1,0,0,[],2022-07-16 10:55:35+00:00,2022-07-17 21:20:34+00:00,123899.0,"1 day, 10:24:59","[{'comment_id': 922916579, 'comment_body': '%d notes technically', 'comment_created': datetime.datetime(2022, 7, 18, 0, 25, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}]","[{'commit_sha': '70a63767d50cfb2095632f0da5c1b1233b72f6c8', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}]",Akshit Sinha,86671025,,User,,42,,18,74
1006314884,Modify `findNotes()` to use V16 `searchNotes()` function,"Modify SearchNotes to be able to use both legacy and V16 functions

## Pull Request template

## Purpose / Description
Add support for using new backend method `searchNotes()`

## Approach
By checking the schema version, the newer function is used on using V16. The newer `searchNotes()` function includes a parameter for sorting, which is not supported in legacy.

`findNotes()` function is modified in `Collection` so that V16 can be used when enabled

## How Has This Been Tested?

On my phone by enabling V16 backend in settings.

## Checklist
_Please, go through these checks before submitting the PR._

- [x] You have not changed whitespace unnecessarily (it makes diffs hard to read)
- [x] You have a descriptive commit message with a short title (first line, max 50 chars).
- [x] Your code follows the style of the project (e.g. never omit braces in `if` statements) 
- [x] You have commented your code, particularly in hard-to-understand areas
- [x] You have performed a self-review of your own code
- [ ] UI changes: include screenshots of all affected screens (in particular showing any new or changed strings)
- [ ] UI Changes: You have tested your change using the [Google Accessibility Scanner](https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.auditor)
",True,11908,https://api.github.com/repos/ankidroid/Anki-Android/pulls/11908,https://github.com/ankidroid/Anki-Android/pull/11908,closed,56,15,3,4,3,7,0,0,[],2022-07-23 09:02:16+00:00,2022-08-18 21:17:09+00:00,2290493.0,"26 days, 12:14:53","[{'comment_id': 928259761, 'comment_body': ""```\r\n    @JvmOverloads\r\n    open fun findNotes(query: String?, order: SortOrder = SortOrder.NoOrdering()): List<Long> {\r\n```\r\nKotlin has default parameter. I believe in this case it's more relevant than overriding\r\n\r\nAlso, I'd love a comment indicating that this second parameter is useful only for the overridden function, i.e. when in V16"", 'comment_created': datetime.datetime(2022, 7, 24, 13, 39, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 928330326, 'comment_body': '```suggestion\r\n                get_config(""noteSortType"", null as String?) ?: ""noteFld"",\r\n```\r\n\r\nNotes mode uses different ordering key - found in collection.py in desktop code.', 'comment_created': datetime.datetime(2022, 7, 24, 23, 56, 37, tzinfo=datetime.timezone.utc), 'commenter': 'dae', 'type': 'User'}, {'comment_id': 928330539, 'comment_body': 'Also, does AnkiDroid expose a way to change the value of that config entry? ', 'comment_created': datetime.datetime(2022, 7, 24, 23, 57, 58, tzinfo=datetime.timezone.utc), 'commenter': 'dae', 'type': 'User'}, {'comment_id': 928343931, 'comment_body': 'For cards yes. For note no. But I assume the same code can be used depending on card or note mode. ', 'comment_created': datetime.datetime(2022, 7, 25, 1, 12, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 933918779, 'comment_body': 'Sorry, I should have noticed this last time:\r\n```suggestion\r\n                get_config(""browserNoteSortBackwards"", false) ?: false,\r\n```', 'comment_created': datetime.datetime(2022, 7, 31, 3, 18, 1, tzinfo=datetime.timezone.utc), 'commenter': 'dae', 'type': 'User'}, {'comment_id': 933918859, 'comment_body': 'Why is query nullable?', 'comment_created': datetime.datetime(2022, 7, 31, 3, 19, 15, tzinfo=datetime.timezone.utc), 'commenter': 'dae', 'type': 'User'}, {'comment_id': 942022466, 'comment_body': 'The `findNotes` function initially had a nullable string, so I did not think of changing it', 'comment_created': datetime.datetime(2022, 8, 10, 5, 10, 57, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}]","[{'commit_sha': '3e1f6766ed6329fe2c68f364f3322c96862935a7', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a48c107a2b6848d87934dbb22d0ffb8d558afc7', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44098539329cbb2c78b6d88e20e2eb195c972ff7', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bf6785ca9e96af4f9cc78559797f5eaecd18d5d', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}]",Akshit Sinha,86671025,,User,,42,,18,74
1027222168,[GSoC] Add ability to browse one Card per Note in Browser,"## Pull Request template

## Purpose / Description
Add the functionality to see only one card per note when enabled, following upstream Anki Note mode of the Browser. Especially helpful when you have for example a lot of cloze deletions in one note, with this feature you can choose to see only one card instead of all of them.

## Fixes
Fixes #7939 

## Approach
By creating a variable to keep track of whether the browser is currently in Cards mode or Notes mode, different `Search` functions (committed earlier) are called accordingly. Part 1 of this commit just introduces the feature to view one card by note, further commits will include accommodating the column headers and their values (eg: avg. ease) to correctly display the values accordingly.

## How Has This Been Tested?

https://user-images.githubusercontent.com/86671025/185841802-0512a40c-e7c2-4bc5-9865-e5f71247c1ab.mp4

## Checklist
_Please, go through these checks before submitting the PR._

- [x] You have not changed whitespace unnecessarily (it makes diffs hard to read)
- [x] You have a descriptive commit message with a short title (first line, max 50 chars).
- [x] Your code follows the style of the project (e.g. never omit braces in `if` statements) 
- [x] You have commented your code, particularly in hard-to-understand areas
- [x] You have performed a self-review of your own code
- [x] UI changes: include screenshots of all affected screens (in particular showing any new or changed strings)
- [ ] UI Changes: You have tested your change using the [Google Accessibility Scanner](https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.auditor)
",True,12035,https://api.github.com/repos/ankidroid/Anki-Android/pulls/12035,https://github.com/ankidroid/Anki-Android/pull/12035,closed,258,44,12,9,14,48,1,0,[{'name': 'Strings'}],2022-08-16 06:53:25+00:00,2022-09-04 19:02:09+00:00,1685324.0,"19 days, 12:08:44","[{'comment_id': 946566822, 'comment_body': ""Extract the string to a resource.\r\n\r\nI think the name needs work. At the very least it should be `Show notes`\r\n\r\nIdeally I'd want a toggle between notes and cards. I think we're at the stage where we may want a settings screen"", 'comment_created': datetime.datetime(2022, 8, 16, 9, 53, 25, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 946567122, 'comment_body': ""don't use `m` prefixes for new code"", 'comment_created': datetime.datetime(2022, 8, 16, 9, 53, 44, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 946573619, 'comment_body': ""This shouldn't be the first item in the list, it's confusing for me"", 'comment_created': datetime.datetime(2022, 8, 16, 10, 0, 36, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 947457623, 'comment_body': 'I would ideally look for a toggle as well. The question is where to put it? There can be a line below the toggle explaining the action: ""Toggle showing cards/notes""\r\nShould I replace the ""show cards/show notes"" by a single ""toggle cards/notes"" which opens up a dialog style menu?', 'comment_created': datetime.datetime(2022, 8, 17, 5, 15, 12, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 950789997, 'comment_body': 'I\'d have an ""options"" menu item which opens up a dialog\n\nThen a toggle with text on either side', 'comment_created': datetime.datetime(2022, 8, 21, 5, 39, 26, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 950815293, 'comment_body': 'So, ideally we would want both this and truncate to be in the options menu right?\r\n', 'comment_created': datetime.datetime(2022, 8, 21, 9, 26, 54, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 950889409, 'comment_body': 'Can you please use `if (isInCardsMode)`. Negation add extra complexity to the reading feature. Especially when you try to think about the ""else"" case and that would read as ""if we are not in the case where we are not in cards mode... oh, that means if we are in card mode"".', 'comment_created': datetime.datetime(2022, 8, 21, 19, 24, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 950889716, 'comment_body': 'Implementor choice:\r\n```Kotlin\r\n@androidx.annotation.StringRes  val subtitleId = if (isInCardsMode)\r\n                R.plurals.card_browser_subtitle\r\n            else \r\n                R.plurals.card_browser_subtitle_notes_mode\r\n            return resources.getQuantityString(subtitleId, count, count)\r\n```\r\n', 'comment_created': datetime.datetime(2022, 8, 21, 19, 27, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 953112905, 'comment_body': 'Yep!', 'comment_created': datetime.datetime(2022, 8, 23, 21, 10, 59, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 955528048, 'comment_body': ""As noted in discord I believe, it may be nice to have it as a preference recorded between run. It's perfectly fine for a first commit. Can you just add a TODO?\xa0"", 'comment_created': datetime.datetime(2022, 8, 26, 0, 42, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955530222, 'comment_body': ""I admit I don't understand why you add it in a first commit and remove it in the next.\r\nDo you want us to squash it? I believe you can squash yourself and force push then.\r\nOtherwise, please don't add code you'll delete, so that I don't spend time reviewing it"", 'comment_created': datetime.datetime(2022, 8, 26, 0, 47, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955530820, 'comment_body': '""Mode"" is vague, we probably consider plenty of things to be a mode.\r\n`switchCardOrNote` would be fine. We already know we are in the browser anyway', 'comment_created': datetime.datetime(2022, 8, 26, 0, 48, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955534273, 'comment_body': ""Please, don't resolve without either applying the correction or answering why you reject it."", 'comment_created': datetime.datetime(2022, 8, 26, 0, 52, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955535408, 'comment_body': ""Or if `onRestoreInstanceState` is always executed on start, then just do a `lateinit` instead of a default value that's not meaningful for us\r\n"", 'comment_created': datetime.datetime(2022, 8, 26, 0, 54, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955536911, 'comment_body': 'Let\'s simplify it to ""inCardsMode"". For a boolean, `isAdjective`\xa0is not more descriptive than `adjective`.', 'comment_created': datetime.datetime(2022, 8, 26, 0, 56, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955538778, 'comment_body': 'Nit\r\n```Kotlin\r\nval searchTask =\r\n                if (isInCardsMode) {\r\n                    SearchCards(\r\n                        searchText!!,\r\n                        if (mOrder == CARD_ORDER_NONE) NoOrdering() else UseCollectionOrdering(),\r\n                        numCardsToRender(),\r\n                        mColumn1Index,\r\n                        mColumn2Index\r\n                    )\r\n                } else {\r\n                    SearchNotes(\r\n                        searchText!!,\r\n                        numCardsToRender(),\r\n                        mColumn1Index,\r\n                        mColumn2Index\r\n                    )\r\n                }\r\n// We use searchCardsHandler in both case since `notes` are implemented as a single card by note\r\n            TaskManager.launchCollectionTask(searchTask, mSearchCardsHandler)\r\n```\r\n\r\nNot only to avoid repeating the function call, but to explain why the name state cards on the handler while the task may be note', 'comment_created': datetime.datetime(2022, 8, 26, 0, 59, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955550367, 'comment_body': 'Please just add a note if you disagree instead of resolving silently', 'comment_created': datetime.datetime(2022, 8, 26, 1, 16, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955554840, 'comment_body': ""Now it seems clear you can put this value as lateinit\r\n\r\nWhile you are touching the whole CardBrowser, do you think you can split this OnCollectionLoaded into multiple parts? It's generally bad practice for functions to be that long.  And I certainly hope we can find part of it that makes sense as a separate function with a meaningful name. \r\nEven better, if part of it is similar to other function, we can try to reduce duplicated code. "", 'comment_created': datetime.datetime(2022, 8, 26, 1, 21, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955556544, 'comment_body': 'Maybe this could be in a first commit, or a separate PR to merge first. This way, each commit is atomic. I could review ""note browser"" without having to consider truncating at the same time. \r\nPlus, I guess it would ensure that this first commit would create the new UI for the change. And then the ""note browser"" commit would simply reuse existing UI', 'comment_created': datetime.datetime(2022, 8, 26, 1, 23, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955567118, 'comment_body': ""Can you add `@IdRes ` before the val, to indicate it's a resource id?"", 'comment_created': datetime.datetime(2022, 8, 26, 1, 37, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955567832, 'comment_body': 'Since there can only be two cases, I believe `newCardsMode = selectedButtonId == R.id.select_cards_mode` would be perfect and simpler to read.', 'comment_created': datetime.datetime(2022, 8, 26, 1, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955568488, 'comment_body': ""I believe that this positive case is so long that it's totally worth it to make it its own function. Both functions will be far easier to read"", 'comment_created': datetime.datetime(2022, 8, 26, 1, 39, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955570790, 'comment_body': 'With Kotlin, we can avoid the cascade by using `builder.apply` or `build.run` and then calling each method one after the other. If you use `run` you can put `create` inside of it and return the result of this expression\r\n', 'comment_created': datetime.datetime(2022, 8, 26, 1, 42, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955571253, 'comment_body': 'Is ""toggle"" a usual way to present such a choice? I\'m not a native speaker so may easily get it wrong here. I find it surprising.', 'comment_created': datetime.datetime(2022, 8, 26, 1, 43, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 956441027, 'comment_body': 'Apologies, I forgot to reply to comments. Will take more care next time!', 'comment_created': datetime.datetime(2022, 8, 26, 20, 54, 25, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 956442431, 'comment_body': 'Apologies, I agree with your suggestion, and have applied it in the latest commit', 'comment_created': datetime.datetime(2022, 8, 26, 20, 57, 1, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 956442801, 'comment_body': 'Sounds good. I will look into it!', 'comment_created': datetime.datetime(2022, 8, 26, 20, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 956449286, 'comment_body': 'Yes, toggle is a fine way to present the choice I think, and desktop uses the same phrase, so I believe it should be fine', 'comment_created': datetime.datetime(2022, 8, 26, 21, 9, 59, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 956465095, 'comment_body': '`lateinit` will not work with a `Boolean` type though. so I will have to initialse it even if it gets overwritten by `onCollectionLoaded`', 'comment_created': datetime.datetime(2022, 8, 26, 21, 45, 49, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 956572911, 'comment_body': 'You can use `.edit { }` here', 'comment_created': datetime.datetime(2022, 8, 27, 11, 41, 6, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 956572918, 'comment_body': 'ditto', 'comment_created': datetime.datetime(2022, 8, 27, 11, 41, 15, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 956573069, 'comment_body': 'hardcoded string needs to be extracted', 'comment_created': datetime.datetime(2022, 8, 27, 11, 43, 2, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 956573135, 'comment_body': 'Use `MaterialDialog` if feasible for consistency with the rest of the code.\r\n\r\nIf this is not feasible, add a code comment explaining why', 'comment_created': datetime.datetime(2022, 8, 27, 11, 44, 2, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 956573174, 'comment_body': 'Ideally add a `comment=` attribute here', 'comment_created': datetime.datetime(2022, 8, 27, 11, 44, 31, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 956720936, 'comment_body': '`edit` calls `apply` at the end of the call\r\n\r\n```suggestion\r\n        sharedPrefs.edit { putBoolean(""inCardsMode"", newCardsMode) }\r\n```', 'comment_created': datetime.datetime(2022, 8, 28, 12, 29, 11, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 956721641, 'comment_body': 'Welp that was dumb of me 😅 ', 'comment_created': datetime.datetime(2022, 8, 28, 12, 33, 56, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 956722030, 'comment_body': ""Don't beat yourself up - the point of code reviews is knowledge transfer, this should encourage learning!"", 'comment_created': datetime.datetime(2022, 8, 28, 12, 36, 49, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 956722659, 'comment_body': ""Wasn't the default for `isTruncated` false?"", 'comment_created': datetime.datetime(2022, 8, 28, 12, 41, 10, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 956723037, 'comment_body': ""Yes, slipped my mind while writing the statement for both of them. Nice catch! I'll fix all of these in a second and push"", 'comment_created': datetime.datetime(2022, 8, 28, 12, 43, 48, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 956726447, 'comment_body': 'Could do with a `NeedsTest` for the default', 'comment_created': datetime.datetime(2022, 8, 28, 13, 8, 23, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 956726718, 'comment_body': ""nitpick (style): add in named parameters if you're adding in a boolean parameter"", 'comment_created': datetime.datetime(2022, 8, 28, 13, 10, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 962042577, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 9, 2, 22, 15, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 962044951, 'comment_body': ""Not blocking: I think we can make it lateinit. There shouldn't be a default value. And it's initialized in onCollectionLoaded"", 'comment_created': datetime.datetime(2022, 9, 2, 22, 22, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 962047152, 'comment_body': 'I think `newCardsMode` can remains inside `positiveButtonClick`. It does not seems it needs to be persisted between two function call', 'comment_created': datetime.datetime(2022, 9, 2, 22, 29, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 962050227, 'comment_body': 'you also need to add comments in the other occurance of ""Cards"" in stats. \r\nProbably ""Notes"" to if we use it somewhere else', 'comment_created': datetime.datetime(2022, 9, 2, 22, 38, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 962108809, 'comment_body': ""That's done 👍 "", 'comment_created': datetime.datetime(2022, 9, 3, 5, 53, 11, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 962108907, 'comment_body': ""I get this error \r\n`'lateinit' modifier is not allowed on properties of primitive types`"", 'comment_created': datetime.datetime(2022, 9, 3, 5, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 962351881, 'comment_body': '```suggestion\r\n        sharedPrefs.edit { this.putBoolean(""isTruncated"", newTruncateValue) }\r\n```', 'comment_created': datetime.datetime(2022, 9, 4, 18, 27, 14, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}]","[{'commit_sha': '0968fde9aabfeb2a978d15d1e269aa4044a3519a', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f9256ca6cfb594ad3b0539d4293962e8e5de1d6', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8234618ef10c9fce57ee516ebdf2d531764bb00e', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e9619ffdaa0ac69f3723d53ad85d0342659b400', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a97aabb4c42196455362db5c790c56ae105c2fd', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0523d44ee97c3b70c8cefb7691d1ca7dac210ffb', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5399f3d7f168118e9988ce4d8327820921f7e315', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8613cf2f56e533482a93fb72b5cbb227fe5856e4', 'committer_username': 'Arthur-Milchior', 'committer_name': 'Arthur Milchior', 'committer_email': 'arthur@milchior.fr', 'commit_date': datetime.datetime(2010, 8, 7, 22, 59, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0082fcbdbffc09534a80115bf2940789431e9285', 'committer_username': 'Arthur-Milchior', 'committer_name': 'Arthur Milchior', 'committer_email': 'arthur@milchior.fr', 'commit_date': datetime.datetime(2010, 8, 7, 22, 59, 33, tzinfo=datetime.timezone.utc)}]",Akshit Sinha,86671025,,User,,42,,18,74
1049547522,[GSoC] Show Avg Ease in note mode,"## Pull Request template

## Purpose / Description
Follow up to #12035. User can now switch to showing just one card per note, but, the columns still show data for the card alone. As mentioned in the Anki Docs [here](https://docs.ankiweb.net/browsing.html#columns), a few columns display slightly different data in notes mode. This PR tackles displaying avg ease.

## Approach
Create a function for a `Card` to return the average ease of its note, and if `inCardsMode` is not true, (i.e. browser is in notes mode), we return the avg ease to the column header.

## How Has This Been Tested?

Manually on mobile device, Unit test added as well

## Checklist
_Please, go through these checks before submitting the PR._

- [x] You have a descriptive commit message with a short title (first line, max 50 chars).
- [x] You have commented your code, particularly in hard-to-understand areas
- [x] You have performed a self-review of your own code
- [ ] UI changes: include screenshots of all affected screens (in particular showing any new or changed strings)
- [ ] UI Changes: You have tested your change using the [Google Accessibility Scanner](https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.auditor)
",True,12339,https://api.github.com/repos/ankidroid/Anki-Android/pulls/12339,https://github.com/ankidroid/Anki-Android/pull/12339,closed,88,15,7,3,0,26,0,0,[],2022-09-08 05:41:21+00:00,2022-09-12 19:03:03+00:00,393702.0,"4 days, 13:21:42","[{'comment_id': 965665826, 'comment_body': ""What's the need to convert it to a mutable list?"", 'comment_created': datetime.datetime(2022, 9, 8, 8, 33, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ShridharGoel', 'type': 'User'}, {'comment_id': 965666720, 'comment_body': 'Can be made more readable.', 'comment_created': datetime.datetime(2022, 9, 8, 8, 34, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ShridharGoel', 'type': 'User'}, {'comment_id': 965704320, 'comment_body': 'There is no such need, I see, will convert to just a list then 👍 ', 'comment_created': datetime.datetime(2022, 9, 8, 9, 10, 30, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 965728967, 'comment_body': 'Not even `toList()` was required, could have been left as `ArrayList`.', 'comment_created': datetime.datetime(2022, 9, 8, 9, 34, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ShridharGoel', 'type': 'User'}, {'comment_id': 965729517, 'comment_body': 'According to Kotlin style guidelines, if you are not using brackets, then the statement should be on the same line as the condition.', 'comment_created': datetime.datetime(2022, 9, 8, 9, 34, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ShridharGoel', 'type': 'User'}, {'comment_id': 966157469, 'comment_body': ""Design: This shouldn' be in `libAnki`, this should be in `com.ichi2.anki.servicelayer.CardService`"", 'comment_created': datetime.datetime(2022, 9, 8, 16, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 966157920, 'comment_body': 'We should return `null` here instead, try not to return magic constants, because it means developers need to read documentation carefully, rather than relying on the type system to guide them.', 'comment_created': datetime.datetime(2022, 9, 8, 16, 10, 29, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 966158910, 'comment_body': '⚠️ Design: keep this non-global, it makes the app state much harder to reason about', 'comment_created': datetime.datetime(2022, 9, 8, 16, 11, 25, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 966160055, 'comment_body': 'Remove the variable and supply it directly in the assertion. Do this for all\r\n```suggestion\r\n        assertEquals(156, note.firstCard().avgEaseOfNote())\r\n```', 'comment_created': datetime.datetime(2022, 9, 8, 16, 12, 32, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 966160924, 'comment_body': 'you can use \r\n\r\n`for ((i, card) in note.cards().withIndex()) {` (i will be 0-based)', 'comment_created': datetime.datetime(2022, 9, 8, 16, 13, 27, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 966162440, 'comment_body': 'Can this be changed to \r\n\r\n```kotlin\r\nnote.cards()[n].apply {\r\n    type = Consts.CARD_TYPE_NEW\r\n    flush()\r\n}\r\n```', 'comment_created': datetime.datetime(2022, 9, 8, 16, 15, 3, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 966180618, 'comment_body': ""As mentioned in Discord, I don't like code rewrites but I feel this shows a more readable and more succinct method of doing this\r\n\r\n```kotlin\r\nfun avgEaseOfNote(): Int? {\r\n    val nonNewCards = note().cards().filter { it.type != Consts.CARD_TYPE_NEW }\r\n    if (nonNewCards.isEmpty()) {\r\n        return null\r\n    }\r\n    return nonNewCards.map { it.factor / 10 }.average().toInt()\r\n}\r\n```"", 'comment_created': datetime.datetime(2022, 9, 8, 16, 34, 9, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 966414730, 'comment_body': ""I'm sorry but I'm not fine with this for multiple reasons.\r\n\r\nIf we decide to call `note()` then i believe we should put the core of the method in `Notes.kt` and just call it. `fun avgEaseOfNote() = note().avgEase()`.\r\n\r\nAlso, I believe `/10` should be outside of the map. Not because it will ensure we divide a single time. But mostly because we are losing the last digit of precision each time. Instead, we can average first with best data we have and then remove the last digit.\r\nExcept if you followed upstream code. In this case, I'd really want you to document, probably in code, at least in commit message, the name of the upstream function you are porting, so that I can go compare myself.\r\n\r\nImplementor choice:\r\nI prefer \r\n```Kotlin\r\nreturn \r\n    if (nonNewCards.isEmpty()) {\r\n        null\r\n    } else {\r\n      nonNewCards.map { it.factor / 10 }.average().toInt()\r\n  }\r\n```\r\nI'd even consider calling `average` directly and check whether it returns Double.NaN, but it does not seems to add any readability.\r\n\r\nFinally, and most important, this makes a query for the note and one for each card. This means that this computation will be quite slow, especially once you put it in a list of cards. \r\nI believe in this case, a direct sqlite query would be justified. Good news is that `AVG` returns null on an empty set.\r\n\r\nAdmittedly, the real ideal would be to be able to get all required informations simultaneously with the findNote queries, but that would require so much extra work (and probably must be done through Rust) that I clearly I won't block on this, and won't require this in the foreseeable future"", 'comment_created': datetime.datetime(2022, 9, 8, 20, 58, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 967769706, 'comment_body': "">Also, I believe /10 should be outside of the map. Not because it will ensure we divide a single time. But mostly because we are losing the last digit of precision each time. Instead, we can average first with best data we have and then remove the last digit.\r\n\r\nI just followed the implementation of ease that is given here. Although I can't find the upstream equivalent, on manually checking the avg ease on desktop and on ankidroid, they were exactly the same. I'll check again with `/ 10` outside the map, and if the results are the same, I'll apply that.\r\nEDIT: It is, suggestion applied.\r\n\r\nhttps://github.com/ankidroid/Anki-Android/blob/c744c99c41f02f7f6b476c1d4cacf58ec6f86eff/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.kt#L2322-L2328"", 'comment_created': datetime.datetime(2022, 9, 11, 6, 45, 4, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 967791227, 'comment_body': 'Putting it in `Note.kt` as suggested by Arthur, is that fine?', 'comment_created': datetime.datetime(2022, 9, 11, 9, 11, 53, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 967792537, 'comment_body': ""`NoteService.kt`. It's not part of `libAnki`"", 'comment_created': datetime.datetime(2022, 9, 11, 9, 21, 27, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 967793101, 'comment_body': 'What would I have to do to pass this value to `Cache` then?', 'comment_created': datetime.datetime(2022, 9, 11, 9, 25, 36, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 967864674, 'comment_body': 'Implementor choice:\r\n`avgEase(note())`', 'comment_created': datetime.datetime(2022, 9, 11, 17, 52, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 967865176, 'comment_body': 'This explain how we got the value for a single card. My question was really about how upstream compute the average.\r\nBut I understand that it may be a hard question since it requires to navigate the upstream code, potentially in rust', 'comment_created': datetime.datetime(2022, 9, 11, 17, 56, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 967865287, 'comment_body': 'I’d still love to get at least a TODO asking to do it in sql directly if you don’t feel doing it here', 'comment_created': datetime.datetime(2022, 9, 11, 17, 57, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 967866853, 'comment_body': 'Got it 👍 ', 'comment_created': datetime.datetime(2022, 9, 11, 18, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 967867949, 'comment_body': ""@Arthur-Milchior I believe I've overcomplicated this and we can go with a `Boolean`.\r\n\r\nI presume the cache is cleared and a new search is performed when the note -> card switch is made?"", 'comment_created': datetime.datetime(2022, 9, 11, 18, 18, 50, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 967872759, 'comment_body': 'Yes, a new search is performed every time the switch is made\r\n', 'comment_created': datetime.datetime(2022, 9, 11, 18, 54, 36, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 967878833, 'comment_body': 'The question is probably for @viciousAegis not for me. Vicious Aegis knows the code far better than me.\r\nI agree that I don’t understand the need for the function here, so I’m totally fine with a simple Boolean.\r\n\r\nI don’t understand how YOU had overcomplicated things, but I guess\u202fI miss a suggestion you had made about it', 'comment_created': datetime.datetime(2022, 9, 11, 19, 43, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 967892127, 'comment_body': 'This is not related to `note` at all. So if we decide to use it, I\u202fbelieve it should be in some ""util"" class somewhere.', 'comment_created': datetime.datetime(2022, 9, 11, 21, 42, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 968031969, 'comment_body': 'is `CollectionsUtil` a good place for this?', 'comment_created': datetime.datetime(2022, 9, 12, 6, 37, 41, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}]","[{'commit_sha': 'b5397d897f40a95f8258c13a631d293fc09bf61d', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c627028bc54d45f7c89032f209e9b8f42619ee19', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8020c32736e8249fa75e06a7460e81f1811cab46', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}]",Akshit Sinha,86671025,,User,,42,,18,74
1055772434,[GSoC] Show Avg Interval in Notes Mode (follow up to #12035),"## Pull Request template

## Purpose / Description
Continuation of #12035. Adds functionality to see average interval of note in notes mode of browser.

## Approach
Create a function to average the intervals of non-new and non-learning cards

## How Has This Been Tested?

Unit Test added and tested on device.

## Checklist
_Please, go through these checks before submitting the PR._

- [x] You have a descriptive commit message with a short title (first line, max 50 chars).
- [x] You have commented your code, particularly in hard-to-understand areas
- [x] You have performed a self-review of your own code
- [ ] UI changes: include screenshots of all affected screens (in particular showing any new or changed strings)
- [ ] UI Changes: You have tested your change using the [Google Accessibility Scanner](https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.auditor)
",True,12396,https://api.github.com/repos/ankidroid/Anki-Android/pulls/12396,https://github.com/ankidroid/Anki-Android/pull/12396,closed,68,5,3,1,5,5,0,0,[],2022-09-14 09:43:21+00:00,2022-09-17 16:47:37+00:00,284656.0,"3 days, 7:04:16","[{'comment_id': 970580653, 'comment_body': ""We shouldn't have dependencies from Card -> `NoteService`\r\n\r\nDefine these as extensions on `Card` within the `NoteService` file"", 'comment_created': datetime.datetime(2022, 9, 14, 9, 50, 58, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 970581467, 'comment_body': ""quick 'javadoc' explaining what a null return means"", 'comment_created': datetime.datetime(2022, 9, 14, 9, 51, 41, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 970581931, 'comment_body': ""I'd call this `queryAvgIntervalForNotes` - work occurs, and `get` implies that it's a quick operation"", 'comment_created': datetime.datetime(2022, 9, 14, 9, 52, 8, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 970585731, 'comment_body': 'What is the format for doing that?', 'comment_created': datetime.datetime(2022, 9, 14, 9, 55, 18, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 973590403, 'comment_body': ""Personally, I'd even go with \r\n```kotlin\r\n    fun avgInterval(note: Note) = \r\n        note.\r\n        cards().\r\n        filter { it.type != Consts.CARD_TYPE_NEW && it.type != Consts.CARD_TYPE_LRN }.\r\n        average { it.ivl }?.\r\n        toInt()\r\n```\r\nor even\r\n```Kotlin\r\n    fun Note.avgInterval() =\r\n        cards().\r\n        filter { it.type != Consts.CARD_TYPE_NEW && it.type != Consts.CARD_TYPE_LRN }.\r\n        average { it.ivl }?.\r\n        toInt()\r\n```"", 'comment_created': datetime.datetime(2022, 9, 17, 14, 12, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}]","[{'commit_sha': '3e280379bd40c0fa8bd5065febe3ed9bebe1a0b0', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}]",Akshit Sinha,86671025,,User,,42,,18,74
1055777718,[GSoC] Show number of cards in Notes Mode (follow up to #12035),"## Pull Request template

## Purpose / Description
Continuation of #12035. Follow upstream to show number of cards on the `Card` option of browser.

## Approach
use `note().numberOfCards` to show number of cards for that note

## How Has This Been Tested?

Manually on device.

## Checklist
_Please, go through these checks before submitting the PR._

- [x] You have a descriptive commit message with a short title (first line, max 50 chars).
- [x] You have commented your code, particularly in hard-to-understand areas
- [x] You have performed a self-review of your own code
- [ ] UI changes: include screenshots of all affected screens (in particular showing any new or changed strings)
- [ ] UI Changes: You have tested your change using the [Google Accessibility Scanner](https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.auditor)
",True,12397,https://api.github.com/repos/ankidroid/Anki-Android/pulls/12397,https://github.com/ankidroid/Anki-Android/pull/12397,closed,1,1,1,1,0,1,0,0,[],2022-09-14 09:47:29+00:00,2022-09-17 17:37:06+00:00,287377.0,"3 days, 7:49:37","[{'comment_id': 973610278, 'comment_body': ""Nit: i'd have used a toString. Formatted string for just one element seems strange. But that's really a preference, I know no best practice about it"", 'comment_created': datetime.datetime(2022, 9, 17, 17, 36, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}]","[{'commit_sha': '7134846d727d7c683c8e5030091d9232c05faac8', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}]",Akshit Sinha,86671025,,User,,42,,18,74
1055780416,[GSoC] Show date of last changed card of given note in notes mode (follow up to #12035),"## Pull Request template

## Purpose / Description
Continuation of #12035. Following upstream, show date of when note was last changed in notes mode.

## Approach
Use `note().mod` in notes mode

## How Has This Been Tested?

physically on device.

## Checklist
_Please, go through these checks before submitting the PR._

- [x] You have a descriptive commit message with a short title (first line, max 50 chars).
- [x] You have commented your code, particularly in hard-to-understand areas
- [x] You have performed a self-review of your own code
- [ ] UI changes: include screenshots of all affected screens (in particular showing any new or changed strings)
- [ ] UI Changes: You have tested your change using the [Google Accessibility Scanner](https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.auditor)
",True,12398,https://api.github.com/repos/ankidroid/Anki-Android/pulls/12398,https://github.com/ankidroid/Anki-Android/pull/12398,closed,1,1,1,1,0,0,0,0,[],2022-09-14 09:49:34+00:00,2022-09-17 17:34:23+00:00,287089.0,"3 days, 7:44:49",[],"[{'commit_sha': '38b93f27326b8d65c24c3d48220f5bfe655bc6a1', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}]",Akshit Sinha,86671025,,User,,42,,18,74
1055782391,[GSoC] Show total lapses of note of card in notes mode (follow up to #12035),"## Pull Request template

## Purpose / Description
Continuation of #12035. Show total lapses of the note in notes mode

## Approach
Show sum of lapses of all cards in notes mode.

## How Has This Been Tested?
Manually on device.

## Checklist
_Please, go through these checks before submitting the PR._

- [x] You have a descriptive commit message with a short title (first line, max 50 chars).
- [x] You have commented your code, particularly in hard-to-understand areas
- [x] You have performed a self-review of your own code
- [ ] UI changes: include screenshots of all affected screens (in particular showing any new or changed strings)
- [ ] UI Changes: You have tested your change using the [Google Accessibility Scanner](https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.auditor)
",True,12399,https://api.github.com/repos/ankidroid/Anki-Android/pulls/12399,https://github.com/ankidroid/Anki-Android/pull/12399,closed,8,1,2,1,1,9,0,0,[],2022-09-14 09:51:05+00:00,2022-09-16 11:26:08+00:00,178503.0,"2 days, 1:35:03","[{'comment_id': 970589333, 'comment_body': ""ditto - don't depend on `NoteService`. Instead, define this as an extension function in `NoteService`"", 'comment_created': datetime.datetime(2022, 9, 14, 9, 58, 18, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 970591143, 'comment_body': 'Optional: I believe you could extract to `(if (inCardMode) card.lapses else card.totalLapsesOfNote()).toString()`', 'comment_created': datetime.datetime(2022, 9, 14, 9, 59, 43, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 972278483, 'comment_body': '`fun totalLaspses(note: Note) = note.cards.sumOf {it.lapses}`\r\nor maybe even\r\n`fun totalLapses(note: Note) = note.cards().sumOf(Card::lapses)`\r\n\r\n', 'comment_created': datetime.datetime(2022, 9, 15, 17, 54, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 972278748, 'comment_body': ""Same todo as above. Or just change the TODO to indicate its valid for all functions below that uses `.cards()`.\r\n\r\nBy the way, why don't you directly do it in SQL?\xa0You don't know how to write a query? You don't know the schema?"", 'comment_created': datetime.datetime(2022, 9, 15, 17, 54, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 972282975, 'comment_body': ""The code seems right. However, I don't understand many choices you made:\r\n* Why `Card.totalLapsesOfNote()` as an extension function and not directly a function in `Card` class (same question for `totalLapsesOfNote` in `Note` class.\r\n* Why `totalLapses` is a function in object while `totalLapsesOfNote` is not?\xa0I don't see a difference that justify this change.\r\n\r\nGenerally, I'd love to see consistency in code, not to be surprised, and here I fail"", 'comment_created': datetime.datetime(2022, 9, 15, 17, 59, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 972499229, 'comment_body': ""I know SQL, but I have not spent enough time with the schema to know where and how to make a query yet. I also feel like I should put more emphasis on filter sheets for now, as that project requires a lot more commitment. I will add a TODO here, and if/when I do find time, I'll make the change myself"", 'comment_created': datetime.datetime(2022, 9, 15, 23, 43, 6, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 972554571, 'comment_body': ""`Card` is part of libAnki, you don't want functions in that library which aren't part of upstream.\r\n\r\nIn the past, we added additional functionality out of necessity, and it was a massive pain to migrate this additional functionality to V16. I strongly want to discourage divergence from happening again."", 'comment_created': datetime.datetime(2022, 9, 16, 2, 24, 17, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 972895797, 'comment_body': 'Edit done.', 'comment_created': datetime.datetime(2022, 9, 16, 10, 46, 27, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 972922944, 'comment_body': ""Then I believe we should at least have a discussion about the best way to add features that should naturally be in Card and are not due to technical purpose instead of being due to logical purpose.\r\nIf we want to call it a servicelayer, at least, let's call it a CardService.  And let's document at the top of the file the meaning of this new file.\r\n\r\nI'll create a new issue to discuss this, as it's clearly not blocking this PR.\r\nI believe however that the other questions are still relevant. Why some extensions and some are not extension. Why some are in the objects and some other not"", 'comment_created': datetime.datetime(2022, 9, 16, 11, 24, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}]","[{'commit_sha': '2f6b5c26fc6f0ee0a16c02d558fc40082e02a78d', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}]",Akshit Sinha,86671025,,User,,42,,18,74
1055785413,[GSoC] Show total reviews in note mode (follow up to #12035),"## Pull Request template

## Purpose / Description
Continuation of #12035. Show total number of reviews for the given note in note mode.

## Approach
Create function to sum the review count of all cards in the note.

## How Has This Been Tested?
Physically on my device.

## Checklist
_Please, go through these checks before submitting the PR._

- [x] You have a descriptive commit message with a short title (first line, max 50 chars).
- [x] You have commented your code, particularly in hard-to-understand areas
- [x] You have performed a self-review of your own code
- [ ] UI changes: include screenshots of all affected screens (in particular showing any new or changed strings)
- [ ] UI Changes: You have tested your change using the [Google Accessibility Scanner](https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.auditor)
",True,12400,https://api.github.com/repos/ankidroid/Anki-Android/pulls/12400,https://github.com/ankidroid/Anki-Android/pull/12400,closed,6,1,2,2,2,0,0,0,[],2022-09-14 09:53:25+00:00,2022-09-16 12:48:07+00:00,183282.0,"2 days, 2:54:42",[],"[{'commit_sha': '2815f02627ee729bb8528674698586c66f81e299', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05a04f5a92a37acfcaf089f7070f6aef78685b1d', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}]",Akshit Sinha,86671025,,User,,42,,18,74
1070316339,Export selected cards from Browser,"## Pull Request template

## Purpose / Description
Add functionality to be able to select cards/notes in the browser and export them from the browser themselves

## Fixes
Fixes #8045

## Approach
With the new backend (see https://github.com/ankidroid/Anki-Android/pull/8159#issuecomment-1186151840), exporting selected cards and notes is supported. This PR handles the UI of exporting selected cards, and adds this case to utilise the functionality being provided by collectionV16.

## How Has This Been Tested?
### Exporting

https://user-images.githubusercontent.com/86671025/192843998-dce39526-6bc3-4358-96cc-3a20f287e1f1.mp4
### Importing

https://user-images.githubusercontent.com/86671025/192843979-3e780d71-76fb-4ca7-9da9-6222aebde173.mp4


## Checklist
_Please, go through these checks before submitting the PR._

- [x] You have a descriptive commit message with a short title (first line, max 50 chars).
- [x] You have commented your code, particularly in hard-to-understand areas
- [x] You have performed a self-review of your own code
- [x] UI changes: include screenshots of all affected screens (in particular showing any new or changed strings)
- [ ] UI Changes: You have tested your change using the [Google Accessibility Scanner](https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.auditor)
",True,12524,https://api.github.com/repos/ankidroid/Anki-Android/pulls/12524,https://github.com/ankidroid/Anki-Android/pull/12524,closed,227,49,9,10,5,34,1,0,[{'name': 'Strings'}],2022-09-28 17:02:12+00:00,2022-10-13 19:59:40+00:00,1306648.0,"15 days, 2:57:28","[{'comment_id': 982669932, 'comment_body': '`cardIds` and `noteIds` are mutually exclusive. \r\n\r\nCould you either:\r\n* have two methods\r\n* accept an object, which can either be constructed with NoteIds or CardIds, but not both', 'comment_created': datetime.datetime(2022, 9, 28, 17, 13, 32, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 982739186, 'comment_body': ""`getLongArray` already returns null if the key is not here. \r\nSo `bundle?.getLongArray(key)` is exactly the same method, but simpler. I don't believe the method is actually useful here"", 'comment_created': datetime.datetime(2022, 9, 28, 18, 31, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 982740378, 'comment_body': 'For the sake of the consistency, it would be nice to split `exportAnkiPackage` in two. Ones which deck a non-nullable `DeckId` and one that takes nothing. ', 'comment_created': datetime.datetime(2022, 9, 28, 18, 33, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 982743144, 'comment_body': ""There is a lot of code duplicated from `fun exportApkg` and with the method below. Do you think you'd have a way to refactor. Extract in `exportApkg` the part that is specific to deck in a separate methods, the part that is specific to whole collection in a separate method, and finally the part that is used everywhere in a last method. "", 'comment_created': datetime.datetime(2022, 9, 28, 18, 36, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 982745464, 'comment_body': ""For the sake of the consistency, I believe it would be nicer to either:\r\n* have two distinct functions for deck and whole collection or\r\n* to have a single function that takes as argument an `anki.import_export.ExportLimit?`, since this is sufficient to determine what to export; and you can still use the data encoded in it even if you're not in the back-end"", 'comment_created': datetime.datetime(2022, 9, 28, 18, 39, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 982746281, 'comment_body': ""There is a lot of code duplicated from fun exportApkg and with the method below. Do you think you'd have a way to refactor. Extract in exportApkg the part that is specific to deck in a separate methods, the part that is specific to whole collection in a separate method, and finally the part that is used everywhere in a last method."", 'comment_created': datetime.datetime(2022, 9, 28, 18, 40, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 982751701, 'comment_body': '`map` already returns a list, so `toList` seems useless here.', 'comment_created': datetime.datetime(2022, 9, 28, 18, 46, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 982752176, 'comment_body': '`forEach` followed by a `add` could be simply transformed into a `map(col::getCard)`', 'comment_created': datetime.datetime(2022, 9, 28, 18, 47, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 982752414, 'comment_body': 'What does Anki do here? Could do with a `@NeedsTest`', 'comment_created': datetime.datetime(2022, 9, 28, 18, 47, 52, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 982753772, 'comment_body': ""I'm sorry, but plenty of things in it are not correct.\r\n"", 'comment_created': datetime.datetime(2022, 9, 28, 18, 49, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 982754020, 'comment_body': 'Can you please add some javadoc. While the name seems clear, actually, there is one point that is not clear from the name itself: what occurs if card from the same notes are selected multiple times.\r\nSo either:\r\n*  you should add the assumption that we have at most one card by note (this is the case with your code)\r\n* you should note that there may be duplicate\r\n* you should return a set instead of a list, ensuring unicity', 'comment_created': datetime.datetime(2022, 9, 28, 18, 49, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 982754863, 'comment_body': 'AnkiDroid stores cards through CardCache. Which means that we probably already have the whole card object. This is especially possible because, if you manually selected the cards, then the cards had been loaded. (Admittedly, you may be able to do some ""select all"", so it may not be useful all of the time). So I\'d appreciate if you could use `mCheckedCards`\xa0instead', 'comment_created': datetime.datetime(2022, 9, 28, 18, 50, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 982757875, 'comment_body': 'For the sake of the consistency, I believe `selectedNoteIds` and `selectedCardIds` should either be both properties or both functions.\r\nSince we already have a property, lets keep with property for both', 'comment_created': datetime.datetime(2022, 9, 28, 18, 52, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 982758912, 'comment_body': 'Could you please also add javadoc', 'comment_created': datetime.datetime(2022, 9, 28, 18, 53, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 982758915, 'comment_body': 'this should be reducable:\r\n\r\n```\r\nval selectedCards = selectedCardIds.map { col.getCard(it) }\r\n```', 'comment_created': datetime.datetime(2022, 9, 28, 18, 53, 56, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 982759872, 'comment_body': ""The type already indicate it's a list of longs. Please only add in javadoc what can't be easily inferred from the type system. There should be no case where the developer can read the javadoc and not the type itself"", 'comment_created': datetime.datetime(2022, 9, 28, 18, 55, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 982760092, 'comment_body': 'use a named arg instead of true/false', 'comment_created': datetime.datetime(2022, 9, 28, 18, 55, 23, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 982763214, 'comment_body': 'Use `<plurals>`, not `card(s)`', 'comment_created': datetime.datetime(2022, 9, 28, 18, 59, 2, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 982763478, 'comment_body': 'Again, does this want to be a plural', 'comment_created': datetime.datetime(2022, 9, 28, 18, 59, 17, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 983130830, 'comment_body': 'Okay, will do', 'comment_created': datetime.datetime(2022, 9, 29, 6, 52, 20, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 983132579, 'comment_body': '`getNotes()` returns a set, thus ensuring no duplicate notes exist. I will refactor this in the next commit and make it clearer', 'comment_created': datetime.datetime(2022, 9, 29, 6, 54, 28, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 983347727, 'comment_body': ""Making this plural will then require additional logic to change this title frequently every time we check multiple cards, or uncheck to just one card.\r\nOther options like `Delete notes` and `suspend cards` don't use plurals either and I am not sure if the extra work is worth the change"", 'comment_created': datetime.datetime(2022, 9, 29, 10, 14, 41, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 983373451, 'comment_body': 'the `getNotes()` function returns a set of Notes from a given collection of Cards, to use this function i used a list of Cards instead of `mCheckedCards`', 'comment_created': datetime.datetime(2022, 9, 29, 10, 35, 30, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 985093173, 'comment_body': 'I fear that David had two distinct questions. The test is not ""what upstream does"". This can be checked quickly by running anki and selecting ""export"",\r\nand here is the answer:\r\n\r\n![2022-10-01-142026_562x200_scrot](https://user-images.githubusercontent.com/357361/193409339-a90249db-e205-4c29-bc58-9bd39f522f10.png)\r\n\r\n\r\nBut we probably would want a test that ensure that given this or that value we end up in the right state.\r\n\r\nOne huge difference is that Anki UI allows to always select a deck, or select the whole collection, even if you did start from the main window\'s menu or from a specific deck. You can select a single note and decide to export the whole collection...\r\nOn the other hand, our UI currently suppose that you selected what you wanted to export. I find our UI better in this case, more intuitive. So I don\'t believe that trying to follow upstream and offering plenty of options unrelated to what the user selected is a good idea. ', 'comment_created': datetime.datetime(2022, 10, 1, 12, 21, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 985094003, 'comment_body': 'Even if we squash in the end, what would really help me to review quickly is to have small atomic commits.\r\nOnce I understand what is going on, this change is really simple to understand. But I had to take some time to realize that you were extracting a part of a function. It could have been done by itself in a first commit, reviewed in ten seconds, and then I could concentrate on more meaningful change, with a git diff that would be simpler to read', 'comment_created': datetime.datetime(2022, 10, 1, 12, 30, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 985098266, 'comment_body': 'You could directly put the `val ` here. No need to declare the exportPath first, before defining it.', 'comment_created': datetime.datetime(2022, 10, 1, 13, 12, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 985098574, 'comment_body': ""It seems this line is the only difference between card and note. So really, I'd appreciate if you could factorize it. I'm pretty sure this could take a limit as input already, and be used even for deck the day we are defaulting to the legacy schema. \r\nIf we can't factor it already, we could at least extract the whole part that is computing the path in a separate method we reuse"", 'comment_created': datetime.datetime(2022, 10, 1, 13, 15, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 985099113, 'comment_body': ""@viciousAegis there may be a compromise here.\r\n\r\nIt's important that we directly introduce plural in the string because otherwise we are going to mess with CrowdIn, and, more importantly, with translators work. So, I agree with David, we should use plural immediately.\r\nWe can choose not to use the plural right now if it's too hard. Just put a todo in the code, and always give 10 as an argument to force the use of plural until we are ready to change singular/plural"", 'comment_created': datetime.datetime(2022, 10, 1, 13, 19, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 985242064, 'comment_body': ""Nope. You don't know if the deck you are exporting, `did`, is the current deck."", 'comment_created': datetime.datetime(2022, 10, 2, 13, 43, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 985242994, 'comment_body': 'It feels like the three functions could be a single function, taking as argument ""deckName"", ""cards"", ""notes"", or even ""All Decks"" in the first example. \r\nThis means that you can still use a single function such as `getExportFileName` that has no conditional and deals with all apkgs', 'comment_created': datetime.datetime(2022, 10, 2, 13, 51, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 985247564, 'comment_body': 'I think the cards are accessible from the cache; so you can simply gets the cards from the cache if you need them. \r\n', 'comment_created': datetime.datetime(2022, 10, 2, 14, 26, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 985389982, 'comment_body': ""This is the original code that was already present, haven't changed it"", 'comment_created': datetime.datetime(2022, 10, 3, 5, 31, 3, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 986355696, 'comment_body': ""This should be extracted to a function in a service, with a comment that we can do much better with performance here.\r\n\r\n(I don't think this matters much, as it's an uncommon feature), this will also block the UI, and should have a TODO to fix this"", 'comment_created': datetime.datetime(2022, 10, 4, 1, 20, 22, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 986838374, 'comment_body': 'done 👍 \r\n', 'comment_created': datetime.datetime(2022, 10, 4, 13, 3, 15, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}]","[{'commit_sha': '202c463584df757a3c179e0705e56a02fddce863', 'committer_username': 'Arthur-Milchior', 'committer_name': 'Arthur Milchior', 'committer_email': 'arthur@milchior.fr', 'commit_date': datetime.datetime(2010, 8, 7, 22, 59, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a2273c6a6c79c13510858653d45ae3bfaa24afa', 'committer_username': 'Arthur-Milchior', 'committer_name': 'Arthur Milchior', 'committer_email': 'arthur@milchior.fr', 'commit_date': datetime.datetime(2010, 8, 7, 22, 59, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d59f9d4147cd3ab4c3ecf523972c5ef8b4ea3d1', 'committer_username': 'Arthur-Milchior', 'committer_name': 'Arthur Milchior', 'committer_email': 'arthur@milchior.fr', 'commit_date': datetime.datetime(2010, 8, 7, 22, 59, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4acc9f8f29010642b5ef43aa544c836de0c8f62b', 'committer_username': 'Arthur-Milchior', 'committer_name': 'Arthur Milchior', 'committer_email': 'arthur@milchior.fr', 'commit_date': datetime.datetime(2010, 8, 7, 22, 59, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '958616ac60fd92c640a2d0247aa4d7cca75e5492', 'committer_username': 'Arthur-Milchior', 'committer_name': 'Arthur Milchior', 'committer_email': 'arthur@milchior.fr', 'commit_date': datetime.datetime(2010, 8, 7, 22, 59, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06022c02125194b305477fe6d7aafaa2152a3b27', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07e8ccd8eb4a04c0468a8c40826f048812cab8da', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47ee648481dabb9efa90eba3c176683b0a43fc81', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca3af8573edffc41a0cbb4475d3896292cdacdd4', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4f0129282a1b78123f19bec29a68f1c6f65df26', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}]",Akshit Sinha,86671025,,User,,42,,18,74
978706249,Change flag colors for light and dark themes for better accesibility ,"## Pull Request template

## Purpose / Description
To make the text on flagged cards more readable

## Fixes
Fixes #11671 
## Approach
Choose shades of colors that pass the accessibility scanner

## How Has This Been Tested?

### Before
![1655962500220](https://user-images.githubusercontent.com/86671025/175663824-4399842b-1101-492d-ad84-ff93bcef9347.jpeg)

### After
### Light mode
![1656102804254](https://user-images.githubusercontent.com/86671025/175663514-8be1258c-6bfc-4922-abc6-d0861972b0ba.jpeg)

### Dark mode - only the orange color doesn't pass accessibility, but if I make it any darker it wouldn't be a shade of orange anymore so left it there
![1656102804261](https://user-images.githubusercontent.com/86671025/175663540-6fb6f029-f8b8-4828-accb-524024a13aa6.jpeg)


## Learning (optional, can help others)
_Describe the research stage_

_Links to blog posts, patterns, libraries or addons used to solve this problem_

## Checklist
_Please, go through these checks before submitting the PR._

- [x] You have not changed whitespace unnecessarily (it makes diffs hard to read)
- [x] You have a descriptive commit message with a short title (first line, max 50 chars).
- [x] Your code follows the style of the project (e.g. never omit braces in `if` statements) 
- [x] You have commented your code, particularly in hard-to-understand areas
- [x] You have performed a self-review of your own code
- [x] UI changes: include screenshots of all affected screens (in particular showing any new or changed strings)
- [x] UI Changes: You have tested your change using the [Google Accessibility Scanner](https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.auditor)
",True,11687,https://api.github.com/repos/ankidroid/Anki-Android/pulls/11687,https://github.com/ankidroid/Anki-Android/pull/11687,closed,46,28,10,3,9,1,0,0,[],2022-06-24 20:38:20+00:00,2022-06-28 16:11:49+00:00,329609.0,"3 days, 19:33:29","[{'comment_id': 907505536, 'comment_body': 'Can we extract these ""reviewer"" constants to resources?', 'comment_created': datetime.datetime(2022, 6, 27, 15, 17, 17, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}]","[{'commit_sha': '18a19e97ae58a06d0aee762c6ab05ff525b3aa0a', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0c53ff0d78425fc816e58122fc7bad4b6bd619d', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adca928e550b102b2309570128b70e7f99fa3221', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}]",Akshit Sinha,86671025,,User,,42,,18,74
979874528,[GSoC] Filter Sheet: Create function to retrieve names of all models,"## Pull Request template

## Purpose / Description
Create a function to return the names of all the note models being used

## Fixes
Fixes _Link to the issues._

## Approach
Create a new function to return a list of names of all the models

## How Has This Been Tested?
TODO
Please describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration (SDK version(s), emulator or physical, etc)

## Learning (optional, can help others)
_Describe the research stage_

_Links to blog posts, patterns, libraries or addons used to solve this problem_

## Checklist
_Please, go through these checks before submitting the PR._

- [x] You have not changed whitespace unnecessarily (it makes diffs hard to read)
- [x] You have a descriptive commit message with a short title (first line, max 50 chars).
- [x] Your code follows the style of the project (e.g. never omit braces in `if` statements) 
- [x] You have commented your code, particularly in hard-to-understand areas
- [x] You have performed a self-review of your own code
- [ ] UI changes: include screenshots of all affected screens (in particular showing any new or changed strings)
- [ ] UI Changes: You have tested your change using the [Google Accessibility Scanner](https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.auditor)
",True,11712,https://api.github.com/repos/ankidroid/Anki-Android/pulls/11712,https://github.com/ankidroid/Anki-Android/pull/11712,closed,16,1,3,1,1,0,0,0,[],2022-06-27 10:27:57+00:00,2022-06-27 11:25:21+00:00,3444.0,0:57:24,[],"[{'commit_sha': 'fab170394f48bf84d331a23a11756cd5a203ff76', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}]",Akshit Sinha,86671025,,User,,42,,18,74
980466413,[GSoC] Filter Sheet: Add filters for flags,"## Pull Request template

## Purpose / Description
To add a filter sheet, currently having filters based on flags

## Approach
Create bottom sheet for filter options

## How Has This Been Tested?

<img width=""330"" alt=""image"" src=""https://user-images.githubusercontent.com/86671025/178108408-75eca742-83c8-48bb-bb46-f60756fd16e4.png"">

<img width=""327"" alt=""image"" src=""https://user-images.githubusercontent.com/86671025/178108419-2885b774-8044-4522-99fd-c6334746a877.png"">


https://user-images.githubusercontent.com/86671025/176043866-6ddca45f-00b6-4d15-8921-1965324e3a12.mp4


Please describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration (SDK version(s), emulator or physical, etc)

## Learning (optional, can help others)
_Describe the research stage_

_Links to blog posts, patterns, libraries or addons used to solve this problem_

## Checklist
_Please, go through these checks before submitting the PR._

- [x] You have not changed whitespace unnecessarily (it makes diffs hard to read)
- [x] You have a descriptive commit message with a short title (first line, max 50 chars).
- [x] Your code follows the style of the project (e.g. never omit braces in `if` statements) 
- [x] You have commented your code, particularly in hard-to-understand areas
- [x] You have performed a self-review of your own code
- [x] UI changes: include screenshots of all affected screens (in particular showing any new or changed strings)
- [ ] UI Changes: You have tested your change using the [Google Accessibility Scanner](https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.auditor)
",True,11713,https://api.github.com/repos/ankidroid/Anki-Android/pulls/11713,https://github.com/ankidroid/Anki-Android/pull/11713,closed,561,0,18,12,17,64,0,0,[],2022-06-27 19:50:01+00:00,2022-07-15 14:54:49+00:00,1537488.0,"17 days, 19:04:48","[{'comment_id': 907837422, 'comment_body': ""Implementor choice\r\n\r\n\r\nI'd do \r\n```kotlin\r\nmSearchTerms = filterQuery.toString().let {\r\n  mSearchview!!.setQuery(it, true)\r\n}\r\n```\r\nto avoid forcing a non null when you already know it's non null. \r\n"", 'comment_created': datetime.datetime(2022, 6, 27, 22, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 907838693, 'comment_body': ""Can you please document here what is deprecated and why we still chose to use it? I don't see deprecation warning when I remove it.\r\n"", 'comment_created': datetime.datetime(2022, 6, 27, 22, 9, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 907844567, 'comment_body': ""Is there a reason for the name of the file and of the class to differ?\r\nIf this is because you will use many classes, I'd prefer if you:\r\n* create a subfolder, and hence a package, that deals with the entire filter sheet \r\n* add one class by file \r\n\r\nWhen reviewing your code, it'll be really easier for me to remember in which context I am if I can trust that the name of the file is also the class your code is in.\r\nIt'll also be easier to read, since when a method use some code of another file, I can easily ask my IDE to show me both files side by side. With a single file when I want to read to two positions, it's sometime harder, especially if the file is too big"", 'comment_created': datetime.datetime(2022, 6, 27, 22, 19, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 907846489, 'comment_body': 'I would like that someone who discover this files without context can immediately know that it\'s related to the browser.\r\nIt can be either by moving things inside a ""browser"" subdirectory. Or by adding it to the class name. Or at very least, by having a javadoc explaining of what this is a the bottom sheet fragment of. \r\nSomeone reading this class without context would have a hard time figuring out whether it\'s what they were looking for or not', 'comment_created': datetime.datetime(2022, 6, 27, 22, 21, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 907848524, 'comment_body': 'I think an enum class would be more justified.\r\nAs far as I can tell you never need it to be a string. And even if you were needing it to be a string, we can still use enum classes.\r\n\r\nUsing an enum would allow to ensure:\r\n* the exact same list is used everywhere. No typo. No forgotten flag.\r\n* If one day there are more flags, we have a single place to change all flags related values\r\n* when doing an enumeration you can simply uses [`values()`]https://kotlinlang.org/docs/enum-classes.html#working-with-enum-constants\r\n* you can even put together in the constructor of the enum the index and the name if you want', 'comment_created': datetime.datetime(2022, 6, 27, 22, 25, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 907850691, 'comment_body': ""When you'll use an enum, you can pass it a value in its argement. It'll avoid having to do a long repetitive when."", 'comment_created': datetime.datetime(2022, 6, 27, 22, 29, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 907854232, 'comment_body': ""I had a remark on https://github.com/ankidroid/Anki-Android/pull/11663#discussion_r906887228 that also applies here.\r\nIf their work is done quickly enough that you can use the query creator instead of manually creating the query, even better. But in the meantime, I'd appreciate for the code to be slightly shorter"", 'comment_created': datetime.datetime(2022, 6, 27, 22, 35, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 907860341, 'comment_body': 'Who is ""you"". Second person seems to come from a documentation, not from the way we usually do javadoc here', 'comment_created': datetime.datetime(2022, 6, 27, 22, 47, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 907865233, 'comment_body': 'I think it would be nice to save the set of selected flags in an object that would be our ""model"" (even if ankidroid has not been good at all at following any standard design for its UI).\r\nWith this object also in charge of generating the part of the query related to the flags.\r\n\r\nThat\'s not a huge difference by itself, especially for flags. But separating the object in its own class may be helpful when we\'ll deal with deck and hierarchies questions.', 'comment_created': datetime.datetime(2022, 6, 27, 22, 55, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 907867785, 'comment_body': ""I'm pretty sure this is wrong. You probably do NOT want to be creating a new bottom sheet fragment here. Plus than means that you're using a new `flagSearchItems` that is always empty, so the condition must always be false"", 'comment_created': datetime.datetime(2022, 6, 27, 23, 1, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 907869993, 'comment_body': 'We probably want upper case for the first letter, as most commands I believe', 'comment_created': datetime.datetime(2022, 6, 27, 23, 5, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 907870372, 'comment_body': 'Please be consistent. Use plural here since you used it everywhere else', 'comment_created': datetime.datetime(2022, 6, 27, 23, 6, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 907870711, 'comment_body': ""probably want it to be a const, since it never change and don't seems to be related to an object instance specifically"", 'comment_created': datetime.datetime(2022, 6, 27, 23, 7, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 907872162, 'comment_body': ""Why do you add them in firs commit to delete them in third. I feel like I'm missing something"", 'comment_created': datetime.datetime(2022, 6, 27, 23, 9, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 908006824, 'comment_body': 'These files are not actually being used right now because we only have filters for flags, so it was failing lint checks\r\nI deleted all the unrelated media for now and will add them back with the concerned filter', 'comment_created': datetime.datetime(2022, 6, 28, 3, 59, 20, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 908007311, 'comment_body': ""This is copied from upstream Anki, it also uses `Card State` in singular. If that isn't a problem I will change it"", 'comment_created': datetime.datetime(2022, 6, 28, 4, 0, 42, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 908008792, 'comment_body': 'Yes, this was some old code that got copied while cherry picking, removed it', 'comment_created': datetime.datetime(2022, 6, 28, 4, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 908052465, 'comment_body': ""No, sorry; I refactored the code to rename the file, but it for some reason didn't rename the class. Fixed it."", 'comment_created': datetime.datetime(2022, 6, 28, 5, 39, 52, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 908053083, 'comment_body': ""I was testing some features in my local branch which were deprecated, didn't end up using them. Forgot to remove the suppression. This shouldn't be here, fixed it."", 'comment_created': datetime.datetime(2022, 6, 28, 5, 41, 1, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 908320791, 'comment_body': ""These constants need to use our string resources, as they're displayed in the GUI"", 'comment_created': datetime.datetime(2022, 6, 28, 10, 34, 32, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 908321022, 'comment_body': ""These shouldn't be suppressed"", 'comment_created': datetime.datetime(2022, 6, 28, 10, 34, 48, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 908321333, 'comment_body': 'Could you add a quick comment that `name` is displayed in the GUI', 'comment_created': datetime.datetime(2022, 6, 28, 10, 35, 11, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 908322154, 'comment_body': ""I don't think this comment is useful\r\n```suggestion\r\n```"", 'comment_created': datetime.datetime(2022, 6, 28, 10, 36, 6, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 908322259, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2022, 6, 28, 10, 36, 14, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 908322333, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2022, 6, 28, 10, 36, 18, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 908322654, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2022, 6, 28, 10, 36, 43, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 908323915, 'comment_body': 'This is repeated a lot and we could get a lot of readability from extracting this to a helper extension method somewhere in the `utils` package\r\n\r\n```kotlin\r\n    @ColorInt\r\n    fun Fragment.getThemedColor(@AttrRes attribute: Int): Int {\r\n        return Themes.getColorFromAttr(\r\n            activity,\r\n            attribute\r\n        )\r\n    }\r\n```', 'comment_created': datetime.datetime(2022, 6, 28, 10, 38, 12, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 908326037, 'comment_body': 'Agreed - no issue here with storing the `FilterItemFlag` here', 'comment_created': datetime.datetime(2022, 6, 28, 10, 40, 48, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 908327033, 'comment_body': ""Use `StringBuilder`, `StringBuffer` is synchronized, which means a performance hit that we don't need"", 'comment_created': datetime.datetime(2022, 6, 28, 10, 41, 55, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 908331975, 'comment_body': '`mLastClickTime` is going to be a common pattern, and we should abstract this out into a helper method if at all possible', 'comment_created': datetime.datetime(2022, 6, 28, 10, 47, 51, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 908335581, 'comment_body': 'Removed it.', 'comment_created': datetime.datetime(2022, 6, 28, 10, 52, 13, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 908335693, 'comment_body': ""Use the same Anki Desktop strings. We'll be unifying our translation mechanisms"", 'comment_created': datetime.datetime(2022, 6, 28, 10, 52, 19, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 908337710, 'comment_body': ""I'm pushing a new commit which uses an enum class instead of this class, as Arthur suggested. I'll put in a comment there"", 'comment_created': datetime.datetime(2022, 6, 28, 10, 54, 44, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 908360362, 'comment_body': ""I am using an enum class as such now, and the following doesn't work:\r\n```kotlin\r\nenum class Flags(val flagName: String, val flagNumber: Int) {\r\n        RED(R.string.menu_flag_card_one.toString(), 1),\r\n        ORANGE(R.string.menu_flag_card_two.toString(), 2),\r\n        GREEN(R.string.menu_flag_card_three.toString(), 3),\r\n        BLUE(R.string.menu_flag_card_four.toString(), 4),\r\n        PINK(R.string.menu_flag_card_five.toString(), 5),\r\n        TURQUOISE(R.string.menu_flag_card_six.toString(), 6),\r\n        PURPLE(R.string.menu_flag_card_seven.toString(), 7)\r\n    }\r\n```\r\nHow do I access string resources in an enum class"", 'comment_created': datetime.datetime(2022, 6, 28, 11, 21, 10, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 908375293, 'comment_body': '```kotlin\r\n    enum class Flags(@StringRes private val flagNameRes: Int, val flagNumber: Int) {\r\n        RED(R.string.menu_flag_card_one, 1),\r\n        ORANGE(R.string.menu_flag_card_two, 2),\r\n        GREEN(R.string.menu_flag_card_three, 3),\r\n        BLUE(R.string.menu_flag_card_four, 4),\r\n        PINK(R.string.menu_flag_card_five, 5),\r\n        TURQUOISE(R.string.menu_flag_card_six, 6),\r\n        PURPLE(R.string.menu_flag_card_seven, 7);\r\n        \r\n        fun getFlagName(context: Context): String = context.getString(flagNameRes)\r\n    }\r\n```\r\n', 'comment_created': datetime.datetime(2022, 6, 28, 11, 39, 9, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 908376629, 'comment_body': 'Okay, committing this in a short while. ', 'comment_created': datetime.datetime(2022, 6, 28, 11, 40, 40, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 908405193, 'comment_body': 'Done 👍 ', 'comment_created': datetime.datetime(2022, 6, 28, 12, 14, 5, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 908422606, 'comment_body': 'Once i create them, should I open a different PR for the helper methods or commit them here only?', 'comment_created': datetime.datetime(2022, 6, 28, 12, 32, 44, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 908423831, 'comment_body': 'It is giving me the following error: \r\n```\r\nType mismatch.\r\nRequired:\r\nString?\r\nFound:\r\nUnit\r\nType mismatch.\r\nRequired:\r\nString?\r\nFound:\r\nUnit\r\n```', 'comment_created': datetime.datetime(2022, 6, 28, 12, 33, 57, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 908466969, 'comment_body': ""Hmm... let's not block this PR on refactoring. Let's split into a different PR"", 'comment_created': datetime.datetime(2022, 6, 28, 13, 15, 55, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 908467662, 'comment_body': '```suggestion\r\n        /*\r\n```', 'comment_created': datetime.datetime(2022, 6, 28, 13, 16, 34, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 908468794, 'comment_body': 'These need to be in `02-strings.xml`, not `strings.xml`', 'comment_created': datetime.datetime(2022, 6, 28, 13, 17, 41, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 908472823, 'comment_body': '(off-topic: renamed this class to stop this from happening: https://github.com/ankidroid/Anki-Android/pull/11720)', 'comment_created': datetime.datetime(2022, 6, 28, 13, 21, 27, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 908485836, 'comment_body': 'All done', 'comment_created': datetime.datetime(2022, 6, 28, 13, 32, 24, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 910095434, 'comment_body': ""@Arthur-Milchior I'm a little confused on how this would be implemented, can you elaborate?"", 'comment_created': datetime.datetime(2022, 6, 29, 15, 16, 17, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 912528013, 'comment_body': 'Hungarian notation should be avoided.', 'comment_created': datetime.datetime(2022, 7, 3, 19, 28, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ShridharGoel', 'type': 'User'}, {'comment_id': 912528018, 'comment_body': 'Same.', 'comment_created': datetime.datetime(2022, 7, 3, 19, 28, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ShridharGoel', 'type': 'User'}, {'comment_id': 913148163, 'comment_body': ""A little bit of context maybe. We used to use Hungarian notation in java. It was changed when moving to Kotlin. If I recall correctly one of the reason for the difference is that `mFlagRecyclerView` would also be the name of the getter and potentially of the setter, and while it was acceptable as an internal name for a private property, we don't want to use it when we do a normal standard access to the value.  Or to state it another way, this notation helped distinguish quickly the property from the getter/setter, and this is not useful anymore.\r\n\r\n"", 'comment_created': datetime.datetime(2022, 7, 4, 16, 49, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 913148893, 'comment_body': 'Agreed with Brayan, it would be nice to have an option for ""no flag"". Nice catch @BrayanDSO ', 'comment_created': datetime.datetime(2022, 7, 4, 16, 50, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 913150768, 'comment_body': ""Implementor choice.\r\nI'd do:\r\n```\r\n   override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ) = \r\n      inflater.inflate(R.layout.filter_bottom_sheet, container, false).apply {...}\r\n```\r\nTo avoid repeating `view` thrice.\r\nI love Kotlin way to state that you are getting the view and returning it after applying some changes to it"", 'comment_created': datetime.datetime(2022, 7, 4, 16, 55, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 913152625, 'comment_body': ""Implementor choice:\r\n* I'd use `.apply {...}` to avoid repeating `mFlagRecyclerView` each time"", 'comment_created': datetime.datetime(2022, 7, 4, 16, 59, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 913153700, 'comment_body': 'Agreed. Both with having a simple version now and then finding out what to abstract later', 'comment_created': datetime.datetime(2022, 7, 4, 17, 2, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 913159890, 'comment_body': 'You can now apply the request from the link above. Examples for how to create such queries is on https://github.com/ankidroid/Anki-Android/blob/main/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.kt#L1310', 'comment_created': datetime.datetime(2022, 7, 4, 17, 18, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 913182427, 'comment_body': 'I think instead of a number, it would be nice that the second argument is a anki.search.Flag.\r\nideally, I\'d even argue to use those Flags directly. However, we can not totally do it because it contains ""unrecognized"" which we don\'t want, and don\'t contains the android resource id', 'comment_created': datetime.datetime(2022, 7, 4, 18, 1, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 914279720, 'comment_body': ""I beg your pardon, but I\xa0don't see the added value of this comment and the comment below. It seems like it essentially repeats the overridden documentation.\r\nIn this case, if I understand correctly, this create the view for the flag number `viewType + 1`. This may already be more specific to this case if I got it right"", 'comment_created': datetime.datetime(2022, 7, 5, 23, 24, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 914279892, 'comment_body': 'Nit: I think you can remove the newline here', 'comment_created': datetime.datetime(2022, 7, 5, 23, 24, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 917253429, 'comment_body': 'EDIT: Done!\r\n~How can I create an `anki.search.Flag`? Can you guide me to some resources, thanks!~', 'comment_created': datetime.datetime(2022, 7, 9, 10, 40, 55, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 917398028, 'comment_body': ""Nit: I think `flagIcon` should also be annotated with a Res, even if it's not a string res, I suppose there is also an appropriate annotation.\r\n\r\nAlso, `flagNumber` is not really a good description, since it's not a number anymore."", 'comment_created': datetime.datetime(2022, 7, 10, 13, 40, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 917401149, 'comment_body': ""Nit: I'd love No_FLAG to appear first. So that it's the 0-th element of the enum, and flag 1 is in position 1 and so on. Also, this would ensure that it's consistant with SearchNode.Flag"", 'comment_created': datetime.datetime(2022, 7, 10, 14, 4, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 917402371, 'comment_body': 'Are you using the current color to determine whether the flag is currently selected or not?\r\nDoes it still work if you move from night to day mode? I assume so because I assume everything is discarded during such a change, is it the case? \r\n\r\nI\'d strongly to eventually move to a model that save currently selected value, so that we have a boolean whose only meaning is ""is it selected"" instead of using a side effect of a view property\r\n', 'comment_created': datetime.datetime(2022, 7, 10, 14, 13, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 917402710, 'comment_body': ""Nit: I'd love to see the true and false case factorized.\r\n\r\nE.g. to have\r\n```\r\n@Res val backgroundColor = if (selected) R.attr.filterItemBackgroundSelected else R.attr.filterItemBackground\r\n            flagRecyclerView[position].setBackgroundColor(\r\n￼                Themes.getColorFromAttr(\r\n￼                    activity,\r\n￼                    R.attr.filterItemBackground\r\n￼                )\r\n￼            )\r\n```\r\n\r\nwith `Res` being the appropiate type of resource annotation. Avoid duplicate code, independently of having a common method to perform those changes"", 'comment_created': datetime.datetime(2022, 7, 10, 14, 16, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 917402745, 'comment_body': 'Also, on desktop, the ""no flag"" option is first', 'comment_created': datetime.datetime(2022, 7, 10, 14, 16, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 917434243, 'comment_body': ""Oh right. It should have been `also`, not `let`. As you wanted the variable to be assigned to the string and not the `setQuery`'s output.\r\n\r\nAnyway, not very important here. My bad"", 'comment_created': datetime.datetime(2022, 7, 10, 18, 59, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 922241330, 'comment_body': ""Is there a reason for it to implement `CollectionGetter`. Otherwise, I'd consider either:\r\n`val col: Collection = CollectionHelper.getInstance().getCol(activity)`\r\nor \r\n```\r\nval col : Collection\r\n        get() = CollectionHelper.getInstance().getCol(activity)\r\n```"", 'comment_created': datetime.datetime(2022, 7, 15, 14, 49, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}]","[{'commit_sha': '138d40775fae01e3e1927fae66050139a2bbde78', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e77ead621bae2124152cbc13efd3f9a226948b4', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c9980c6aa58641316ae22ffcebd521410e89238', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07f1c723967d682aeaf8c0271b4d42b68b1b5fa2', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9da1ca538bb2b9763b09b03ecb3b8fa0149d9c9c', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4e048eda35a161df9a85f0d899f4a5fe922e14f', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2611e43f041b7caf683eeae0a4e5d73a3a7b8551', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfa9e4712c0c75ddef17cec5b8d56e1a371c2242', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1cc64e0cbf145c57b464b1a376f4221d54bf281', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da27142ffc12d598e3c5158fa5a435294e6621fb', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47b8dea774b54ca53d7e7ac210673bd87cbbd37a', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d7eac4816373946898558598588cac963dde5f8', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}]",Akshit Sinha,86671025,,User,,42,,18,74
998133293,Add `getThemedColor` helper function,"## Pull Request template

## Purpose / Description

As suggested by David in this [comment](https://github.com/ankidroid/Anki-Android/pull/11713#discussion_r908323915)

> This is repeated a lot and we could get a lot of readability from extracting this to a helper extension method somewhere in the utils package
```kotlin
    @ColorInt
    fun Fragment.getThemedColor(@AttrRes attribute: Int): Int {
        return Themes.getColorFromAttr(
            activity,
            attribute
        )
    }
```

## Checklist
_Please, go through these checks before submitting the PR._

- [x] You have not changed whitespace unnecessarily (it makes diffs hard to read)
- [x] You have a descriptive commit message with a short title (first line, max 50 chars).
- [x] Your code follows the style of the project (e.g. never omit braces in `if` statements) 
- [x] You have commented your code, particularly in hard-to-understand areas
- [x] You have performed a self-review of your own code
- [ ] UI changes: include screenshots of all affected screens (in particular showing any new or changed strings)
- [ ] UI Changes: You have tested your change using the [Google Accessibility Scanner](https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.auditor)
",True,11863,https://api.github.com/repos/ankidroid/Anki-Android/pulls/11863,https://github.com/ankidroid/Anki-Android/pull/11863,closed,45,27,2,1,2,4,0,0,[],2022-07-15 20:28:36+00:00,2022-07-18 18:41:56+00:00,252800.0,"2 days, 22:13:20","[{'comment_id': 922823511, 'comment_body': ""(optional): I'd prefer it as `this.activity` here"", 'comment_created': datetime.datetime(2022, 7, 17, 12, 10, 19, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 922823571, 'comment_body': 'This is a general utility, not just for `FilterSheet`', 'comment_created': datetime.datetime(2022, 7, 17, 12, 10, 46, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 922862266, 'comment_body': 'Optional:\r\nReplace `: Int {return` by  `=`', 'comment_created': datetime.datetime(2022, 7, 17, 16, 32, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 922863870, 'comment_body': 'I believe it could be in com.ichi2.themes.Themes , since it uses its method and is dealing with Themes.', 'comment_created': datetime.datetime(2022, 7, 17, 16, 48, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}]","[{'commit_sha': 'a179b217b082239ac5652f03f8c8bbeacfc96253', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}]",Akshit Sinha,86671025,,User,,42,,18,74
998427707,Fix Flag Colors on App Bar,"## Pull Request template

## Purpose / Description
`ic_flag_transparent.xml` was already being used for the flag icon on the app bar, and using it for the  `No flag` option in the filter sheet broke it.

## Fixes
Fixes #11868 

## Approach
Revert `ic_flag_transparent.xml` to its original state, and use a different drawable resource for the `No flag` option

## How Has This Been Tested?

<img width=""723"" alt=""image"" src=""https://user-images.githubusercontent.com/86671025/179357085-fa3d218c-a451-460e-b864-a614bf0cd9de.png"">

<img width=""302"" alt=""image"" src=""https://user-images.githubusercontent.com/86671025/179357095-668542c0-6c0f-414c-a179-f6480cf9d878.png"">


Please describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration (SDK version(s), emulator or physical, etc)

## Learning (optional, can help others)
_Describe the research stage_

_Links to blog posts, patterns, libraries or addons used to solve this problem_

## Checklist
_Please, go through these checks before submitting the PR._

- [x] You have not changed whitespace unnecessarily (it makes diffs hard to read)
- [x] You have a descriptive commit message with a short title (first line, max 50 chars).
- [x] Your code follows the style of the project (e.g. never omit braces in `if` statements) 
- [x] You have commented your code, particularly in hard-to-understand areas
- [x] You have performed a self-review of your own code
- [x] UI changes: include screenshots of all affected screens (in particular showing any new or changed strings)
- [ ] UI Changes: You have tested your change using the [Google Accessibility Scanner](https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.auditor)
",True,11870,https://api.github.com/repos/ankidroid/Anki-Android/pulls/11870,https://github.com/ankidroid/Anki-Android/pull/11870,closed,1,2,2,1,0,0,0,0,[],2022-07-16 13:35:07+00:00,2022-07-17 19:27:55+00:00,107568.0,"1 day, 5:52:48",[],"[{'commit_sha': 'cfcd5592811415a3265f852da5668b4fc97388d9', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}]",Akshit Sinha,86671025,,User,,42,,18,74
998566701,Fix Apply button crashing on no selection,"## Pull Request template

## Purpose / Description
`col.buildSearchString` was getting an empty node, thus raising the error. This takes care of it by returning early if the search is empty.
 Side Note: Should `buildSearchString` handle empty nodes?

## Fixes
Fixes #11872 

## Approach
This takes care of it by returning an empty string early if the search is empty, so `buildSearchString` is not called

## How Has This Been Tested?

Manually on my phone

https://user-images.githubusercontent.com/86671025/179385476-99fa997d-e242-474e-b113-a8abf151d195.mp4


Please describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration (SDK version(s), emulator or physical, etc)

## Learning (optional, can help others)
_Describe the research stage_

_Links to blog posts, patterns, libraries or addons used to solve this problem_

## Checklist
_Please, go through these checks before submitting the PR._

- [x] You have not changed whitespace unnecessarily (it makes diffs hard to read)
- [x] You have a descriptive commit message with a short title (first line, max 50 chars).
- [x] Your code follows the style of the project (e.g. never omit braces in `if` statements) 
- [x] You have commented your code, particularly in hard-to-understand areas
- [x] You have performed a self-review of your own code
- [x] UI changes: include screenshots of all affected screens (in particular showing any new or changed strings)
- [ ] UI Changes: You have tested your change using the [Google Accessibility Scanner](https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.auditor)
",True,11875,https://api.github.com/repos/ankidroid/Anki-Android/pulls/11875,https://github.com/ankidroid/Anki-Android/pull/11875,closed,7,1,1,1,3,0,0,0,[],2022-07-17 05:41:46+00:00,2022-07-17 13:03:43+00:00,26517.0,7:21:57,[],"[{'commit_sha': '984b76ed799cbefc0bd150919a1bd2b6335840c7', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}]",Akshit Sinha,86671025,,User,,42,,18,74
1045446784,[GSOC] Convert `FlagsAdapter` to Inner Class,"## Pull Request template

## Purpose / Description
As described by Arthur in this [comment](https://github.com/ankidroid/Anki-Android/pull/12145#issuecomment-1230825051):
>But, if it's not to hard, I believe it'll be easier to read the history if you make classes internal first (potentially in a first PR that can be reviewed quickly) and then add the new feature. This way, this will avoid to add and remove parameters, and add code to move it immediately after

## Approach
Make `FlagsAdapter` an inner class so that it can access variables created in `FilterSheetBottomFragment`, and also removes the need to have a separate listener, and other useful refactors.

## Checklist
_Please, go through these checks before submitting the PR._

- [x] You have a descriptive commit message with a short title (first line, max 50 chars).
- [x] You have commented your code, particularly in hard-to-understand areas
- [x] You have performed a self-review of your own code
- [ ] UI changes: include screenshots of all affected screens (in particular showing any new or changed strings)
- [ ] UI Changes: You have tested your change using the [Google Accessibility Scanner](https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.auditor)
",True,12297,https://api.github.com/repos/ankidroid/Anki-Android/pulls/12297,https://github.com/ankidroid/Anki-Android/pull/12297,closed,46,53,1,2,0,5,0,0,[],2022-09-03 10:26:30+00:00,2022-09-03 13:24:37+00:00,10687.0,2:58:07,"[{'comment_id': 962135333, 'comment_body': ""You don't need to take a context anymore, you have access to the one from the outer class"", 'comment_created': datetime.datetime(2022, 9, 3, 10, 31, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 962135678, 'comment_body': ""This seems to be new. If you just want to convert to inner, I don't think it should be here"", 'comment_created': datetime.datetime(2022, 9, 3, 10, 34, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 962135804, 'comment_body': ""I'd have a preference to keep `onFlagItemClicked` above `fun bind` just so that reviewing becomes easier with less scrolling to do  in github"", 'comment_created': datetime.datetime(2022, 9, 3, 10, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 962135964, 'comment_body': ' This is new too, and so does not compile', 'comment_created': datetime.datetime(2022, 9, 3, 10, 37, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 962135983, 'comment_body': 'This seems unrelated to current change', 'comment_created': datetime.datetime(2022, 9, 3, 10, 37, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}]","[{'commit_sha': '8fe1133cdd3048d31fc534069bd69538e0acb5a4', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '827b45725fdab62a4438b21ef91ded92128fb5a2', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}]",Akshit Sinha,86671025,,User,,42,,18,74
1035046225,[GSoC] Make Filters persistent in Filter Sheet,"## Pull Request template

## Purpose / Description
The current functionality for filters does not allow them to stay persistent, i.e, if I select some filters, apply them, and open the sheet again, those filters get reset. This PR improves on that and allows filters to stay persistent unless explicitly cleared.

Minor refactoring has also been performed.

## Approach
By passing in the `flagSearchItems` list to the `FlagsAdapter` class, It can check whether a filter is selected or not during the view binding, and depending on that, the selected/unselected look is set.

## How Has This Been Tested?

https://user-images.githubusercontent.com/86671025/186949439-7d82618f-f380-4ad0-b280-fe33308c8c33.mp4


## Checklist
_Please, go through these checks before submitting the PR._

- [x] You have a descriptive commit message with a short title (first line, max 50 chars).
- [x] You have commented your code, particularly in hard-to-understand areas
- [x] You have performed a self-review of your own code
- [x] UI changes: include screenshots of all affected screens (in particular showing any new or changed strings)
- [ ] UI Changes: You have tested your change using the [Google Accessibility Scanner](https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.auditor)
",True,12145,https://api.github.com/repos/ankidroid/Anki-Android/pulls/12145,https://github.com/ankidroid/Anki-Android/pull/12145,closed,120,56,2,8,8,37,0,0,[],2022-08-24 06:43:40+00:00,2022-09-07 14:07:48+00:00,1236248.0,"14 days, 7:24:08","[{'comment_id': 955464036, 'comment_body': ""I'd appreciate if you could list all of the change in behavior.\r\nMy understanding is that, now, if you unselected everything, the search would not be applied, and you corrected that? Right? Or does it have other impact?\r\n\r\nThis is the kind of things that I'd love to see in an atomic commit. If I get it right, it's self contained, can get a proper explanation of the behavior changes, and that would help have the remaining of the commit quick to read and understand"", 'comment_created': datetime.datetime(2022, 8, 25, 22, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955472170, 'comment_body': ""Could you clarify what user action corresponding to dismissing? Clicking outside of the sheet? Dragging the sheet down? \r\nActually, can you also show video of both of those case ?\xa0I don't believe it was in your screenshot? (However, I'm quite happy with the result when I test it locally)\r\n\r\nI don't think that anything should be done in this case. My intuition"", 'comment_created': datetime.datetime(2022, 8, 25, 22, 32, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955473158, 'comment_body': 'Can you please add javadoc on top of `dataset` and `selectedList`?\r\nI guess i should have asked for it on `dataSet` earlier, because ""data"" is very vague as far as word go. Plus, I\'m not a fan of a variable named ""set"" that\'s not a set (especially since you capitalized ""Set"", indicating that it\'s not the single word ""dataset"")\r\n\r\nBecause while I could have an intuiton of the meaning of `dataSet` as the set of selected data, now that i see that it\'s different, I can\'t guess what the variable contains', 'comment_created': datetime.datetime(2022, 8, 25, 22, 34, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955475429, 'comment_body': 'You can transform ViewHolder into an ""inner class"", so that you can access everything from FlagsAdapter and don\'t need to send it as argument to bind', 'comment_created': datetime.datetime(2022, 8, 25, 22, 40, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955482096, 'comment_body': ""Please remove. I don't disagree with this change in general, but I\xa0don't believe it should be in a commit that otherwise don't affect this file"", 'comment_created': datetime.datetime(2022, 8, 25, 22, 55, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955485456, 'comment_body': ""`selectedFlags` or `selectedElements`. The fact that it's a list is already in the type of the value, and is not an information that is very useful to understand the meaning of the content of the list.\r\nInstead, javadoc should indicate that it contains up to date information about selection"", 'comment_created': datetime.datetime(2022, 8, 25, 23, 1, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955486387, 'comment_body': ""Why does it need to be Mutable? Do you plan to use it later?\r\n\r\nFYI MutableList inherits from List. So you can take as argument a list and receive a mutable list. This only mean that the current class won't initiate mutation. But the list can be modified elsewhere.\r\n\r\nTo be honest, I now believe that the onFlagItemClicked could be in the ViewHolder, since it's actually only used there, in which case it would makes sense to have this be Mutable."", 'comment_created': datetime.datetime(2022, 8, 25, 23, 3, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955486450, 'comment_body': 'I would suggest using a general ""collection"" instead of a list. While I\'m fine with implementing it by a list with only 8 elements, when we go with decks, note type, and tags (if we use them, I don\'t recall), the set is big enough that having something more efficient would be nice.\r\n\r\nAnd I still hope that will be able to use the same code, abstracting Flags away (i.e. moving them as type parameters) to avoid repeating code. So I\'m reviewing this code assuming that instead of Flags we can have types with hundreds or even thousands of values for huge collection', 'comment_created': datetime.datetime(2022, 8, 25, 23, 4, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955488761, 'comment_body': ""Similarly, you could move `isSelected` inside `FlagsAdapter` since it's only used there. This would allow it to take less parameters since it only uses the FlagsAdapter's parameter `flagSearchItems`"", 'comment_created': datetime.datetime(2022, 8, 25, 23, 9, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 955654075, 'comment_body': 'irrelevant line change', 'comment_created': datetime.datetime(2022, 8, 26, 5, 8, 46, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 955655476, 'comment_body': 'Would a `Set` work here?', 'comment_created': datetime.datetime(2022, 8, 26, 5, 12, 13, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 955657843, 'comment_body': 'A 1-line comment would be a nice to have here', 'comment_created': datetime.datetime(2022, 8, 26, 5, 18, 1, tzinfo=datetime.timezone.utc), 'commenter': 'david-allison', 'type': 'User'}, {'comment_id': 956006207, 'comment_body': 'Got it, apologies!', 'comment_created': datetime.datetime(2022, 8, 26, 12, 46, 22, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 956022797, 'comment_body': 'I\'ll explain everything here as well as add 1-line comments in the code to make it clearer.\r\nThe current behaviour is as follows:\r\n\r\n`Apply` button: Create a query with currently selected filters, and close the filter sheet\r\n`Clear` button: Clear the selected filters, search with no filters applied to show all the cards and close the filter sheet\r\n`Cancel` button: Close the filter sheet (cancel the action of selecting filters). The selected filters will remain selected. The same behaviour as clicking out of the filter sheet.\r\n\r\n>My understanding is that, now, if you unselected everything, the search would not be applied, and you corrected that? Right? Or does it have other impact?\r\n\r\nIf everything is unselected, the query sent to `searchCards()` would be `""""`, which would result in all the cards being shown, which would be expected behaviour of having not selected any filters. The `Clear` button is basically a shortcut for this.\r\n\r\n', 'comment_created': datetime.datetime(2022, 8, 26, 13, 5, 26, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 956028428, 'comment_body': '>Could you clarify what user action corresponding to dismissing? Clicking outside of the sheet? Dragging the sheet down?\r\n\r\nYes, you are correct, both of those constitute dismissing. I will add video of both actions. \r\nthe `Cancel` button calls `dismiss()` so that also does the same thing. And yes, nothing is done in this case', 'comment_created': datetime.datetime(2022, 8, 26, 13, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 956031377, 'comment_body': ""I'll update variable names and add javadoc to both of them to make it clearer what they represent"", 'comment_created': datetime.datetime(2022, 8, 26, 13, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 956163186, 'comment_body': 'Yes, Set works. I will change it accordingly.', 'comment_created': datetime.datetime(2022, 8, 26, 15, 27, 54, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 957688042, 'comment_body': ""It's not clear to who was the question. Personally, I'm fine with set. Simply, I didn't want to forbid the use of list in the case of Flags, and since the specific kind of collection did not seem important, I decided to ask for Collection. \r\nI actually suspect that List are betters for short sequences, such as flags, as iterating over each element may be faster than hashing, but no big deal one way or another"", 'comment_created': datetime.datetime(2022, 8, 29, 18, 49, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 957724190, 'comment_body': 'This should be in the first commit, the comment and the code should be added together.\r\nCan you interactively rebase to do so?\r\n\r\nAlso, please replace `flag` by `[currFlag]` to be explicit about which flag you mention', 'comment_created': datetime.datetime(2022, 8, 29, 19, 34, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 957727050, 'comment_body': ""You don't need context anymore. you already have access to it since you're a inner class of a fragment."", 'comment_created': datetime.datetime(2022, 8, 29, 19, 38, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 957742228, 'comment_body': 'Since you search those view multiple time, it would make sense to put them in a class value to avoid searching again each time you select a new flag', 'comment_created': datetime.datetime(2022, 8, 29, 19, 57, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 957744379, 'comment_body': ""Actually, this only need to be applied if it was not empty and now it is empty. Since changing UI is expensive, and I can imagine a user clicking on many filters one after the other, I'd appreciate if you also add a boolean `wasEmpty` that checked whether it was empty before you add the element; then you'd do `if (wasEmpty) {} else if (flagSearchItems.isEmpty()){}`"", 'comment_created': datetime.datetime(2022, 8, 29, 20, 0, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 957745187, 'comment_body': ""I'd appreciate if you could add it in the CL where the need appeared. (unless it's already merged)"", 'comment_created': datetime.datetime(2022, 8, 29, 20, 1, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 957745636, 'comment_body': 'Why did you remove the javadoc? only the todo should be removed I believe. (And you can remove it in the CL where the change occurred)', 'comment_created': datetime.datetime(2022, 8, 29, 20, 2, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 962134423, 'comment_body': 'There isn\'t any ""need"" as such, only that it has been tested on my phone visually, but not run through a unit test to make sure that it in fact is working correctly', 'comment_created': datetime.datetime(2022, 9, 3, 10, 20, 55, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 962174310, 'comment_body': 'This code is only run the first time the filter sheet is opened, to check if there were any filters that were selected when the sheet was closed last.', 'comment_created': datetime.datetime(2022, 9, 3, 16, 3, 34, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 962200002, 'comment_body': ""`itemView` is not necessarily a new object. That's the point of recycler view, reusing the view that disappear to put it with new content in a view that appears.\r\nThat means that it may have already background color `filterItemBackgroundSelected`. Even if it's not selected. \r\nSo you need to do an `else` and put back the unselected color.\r\n\r\nAnd since it's really the same if/else than in `onFlagItemClicked`, you should probably create an extra function that set the colors and is used by both `onFlagItemClicked` and `bind`"", 'comment_created': datetime.datetime(2022, 9, 3, 20, 42, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 962200386, 'comment_body': ""I fear a was not clear.\r\nI don't mean you search it multiple time in this function. I meant you search them multiple time in the class. \r\n\r\nLine `232` in `onFlagItemClicked` you have `val filterHeader = flagsButton.findViewById<TextView>(R.id.filterByFlagsText)`\r\nAs far as I understand the way this view works, each call will return exactly the same object. So you can put this object as a member of the class instead, this ensure you'll only need to search it only once. \r\n\r\nAnd same with the view below.\r\n\r\nYou can do this with the filter icon too"", 'comment_created': datetime.datetime(2022, 9, 3, 20, 47, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 962340648, 'comment_body': ""It isn't exactly the same if/else, `onFlagClicked` sets background to selected if it isn't selected previously, while in `bind`, the background is set to selected if it _is_ selected previously, to account for persistence. So they can't be merged into a single function.\r\nI will add an `else` to the `if` statement in `bind`"", 'comment_created': datetime.datetime(2022, 9, 4, 16, 38, 53, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 962342064, 'comment_body': 'Got it 👍 \r\n', 'comment_created': datetime.datetime(2022, 9, 4, 16, 51, 34, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 962342221, 'comment_body': ""I beg your pardon, but I believe that you can still create a function.\r\nThis function can take a `val selected: Boolean`, that indicates whether the color should indicate selection.\r\nIt'll be call with `isSelected(currFlag)` in `bind` and with `!isSelected(item)` in `onFlagItemClicked`"", 'comment_created': datetime.datetime(2022, 9, 4, 16, 52, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 962342955, 'comment_body': 'I see, understood.\r\n', 'comment_created': datetime.datetime(2022, 9, 4, 17, 0, 27, tzinfo=datetime.timezone.utc), 'commenter': 'viciousAegis', 'type': 'User'}, {'comment_id': 962344665, 'comment_body': ""Ideally, I'd like the var name to indicate it's related to flag, since you'll probably need similar views for the other categories.\r\nBut if we refactor later, that won't be a big deal anyway, so fine by me"", 'comment_created': datetime.datetime(2022, 9, 4, 17, 16, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 962344681, 'comment_body': 'Why ""button"" while it\'s a layout. It does not seems to be shaped like a button.', 'comment_created': datetime.datetime(2022, 9, 4, 17, 16, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 962345240, 'comment_body': 'No need for this new line. Seems to indicate the last icon is different from the previous views.', 'comment_created': datetime.datetime(2022, 9, 4, 17, 23, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 962347748, 'comment_body': ""By the way, I don't believe this one was really useful to add as a variable here, since it's used only in `onViewCreated` only, and is executed only once. This is different from the other variables that are used in all click "", 'comment_created': datetime.datetime(2022, 9, 4, 17, 47, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}, {'comment_id': 962348038, 'comment_body': 'I feel like I was really unclear. In this case, it adds complexity. The goal was to remove some', 'comment_created': datetime.datetime(2022, 9, 4, 17, 49, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Arthur-Milchior', 'type': 'User'}]","[{'commit_sha': '1b180373a946a0ce4544ab065a19ab377b31cbad', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2848908b7953f5a8bf096a46f697af9934573f4d', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62b952593b79ea2adadffc714f94e43f77a9fc6d', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e529a11e03c3a7935eea2127f08e28cff9c07fc8', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4408521d28edb7bb69aa04744dea23666f99477', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0019d998ba41d1869684f6062c35a8f8a161a675', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd824c036bd3a30a11204920b0a6404de4cd42b29', 'committer_username': 'Arthur-Milchior', 'committer_name': 'Arthur Milchior', 'committer_email': 'arthur@milchior.fr', 'commit_date': datetime.datetime(2010, 8, 7, 22, 59, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0728f584a3dc79168fa7276e107aa65017407f4', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}]",Akshit Sinha,86671025,,User,,42,,18,74
1052879653,Fix Filter sheet item colors not updating,"## Pull Request template

## Purpose / Description
in #12145, filters were made persistent, but an oversight from me lead the colors to not be updated when needed. This small refactor fixes it.

## Approach
Move the function calls to set colors above return statement.

## How Has This Been Tested?
On my device

### Before
https://user-images.githubusercontent.com/86671025/189594797-6df158aa-9ff3-4ed9-a01c-fd0418dc91d0.mp4

### After

https://user-images.githubusercontent.com/86671025/189594827-ff140930-c11d-4c5e-bbe7-3ab2a7065726.mp4




## Checklist
_Please, go through these checks before submitting the PR._

- [x] You have a descriptive commit message with a short title (first line, max 50 chars).
- [x] You have commented your code, particularly in hard-to-understand areas
- [x] You have performed a self-review of your own code
- [ ] UI changes: include screenshots of all affected screens (in particular showing any new or changed strings)
- [ ] UI Changes: You have tested your change using the [Google Accessibility Scanner](https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.auditor)
",True,12378,https://api.github.com/repos/ankidroid/Anki-Android/pulls/12378,https://github.com/ankidroid/Anki-Android/pull/12378,closed,4,4,1,1,0,0,0,0,[],2022-09-12 07:10:19+00:00,2022-09-12 12:18:21+00:00,18482.0,5:08:02,[],"[{'commit_sha': '7e4ba000e992304507633b2fa6b11c735d34fe84', 'committer_username': 'viciousAegis', 'committer_name': 'Akshit Sinha', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 29, 14, 12, 58, tzinfo=datetime.timezone.utc)}]",Akshit Sinha,86671025,,User,,42,,18,74

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
7716883,Anki-Android,ankidroid/Anki-Android,Kotlin,2173,8284,155,521,19475,294,19,42,"[{'id': 1070316339, 'number': 12524, 'closed': datetime.datetime(2022, 10, 13, 19, 59, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 28, 17, 2, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1306648.0, 'time_delta': '15 days, 2:57:28', 'additions': 227, 'deletions': 49, 'state': 'closed'}, {'id': 1055785413, 'number': 12400, 'closed': datetime.datetime(2022, 9, 16, 12, 48, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 14, 9, 53, 25, tzinfo=datetime.timezone.utc), 'time_taken': 183282.0, 'time_delta': '2 days, 2:54:42', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 1055782391, 'number': 12399, 'closed': datetime.datetime(2022, 9, 16, 11, 26, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 14, 9, 51, 5, tzinfo=datetime.timezone.utc), 'time_taken': 178503.0, 'time_delta': '2 days, 1:35:03', 'additions': 8, 'deletions': 1, 'state': 'closed'}, {'id': 1055780416, 'number': 12398, 'closed': datetime.datetime(2022, 9, 17, 17, 34, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 14, 9, 49, 34, tzinfo=datetime.timezone.utc), 'time_taken': 287089.0, 'time_delta': '3 days, 7:44:49', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1055777718, 'number': 12397, 'closed': datetime.datetime(2022, 9, 17, 17, 37, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 14, 9, 47, 29, tzinfo=datetime.timezone.utc), 'time_taken': 287377.0, 'time_delta': '3 days, 7:49:37', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1055772434, 'number': 12396, 'closed': datetime.datetime(2022, 9, 17, 16, 47, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 14, 9, 43, 21, tzinfo=datetime.timezone.utc), 'time_taken': 284656.0, 'time_delta': '3 days, 7:04:16', 'additions': 68, 'deletions': 5, 'state': 'closed'}, {'id': 1052879653, 'number': 12378, 'closed': datetime.datetime(2022, 9, 12, 12, 18, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 12, 7, 10, 19, tzinfo=datetime.timezone.utc), 'time_taken': 18482.0, 'time_delta': '5:08:02', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1049547522, 'number': 12339, 'closed': datetime.datetime(2022, 9, 12, 19, 3, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 8, 5, 41, 21, tzinfo=datetime.timezone.utc), 'time_taken': 393702.0, 'time_delta': '4 days, 13:21:42', 'additions': 88, 'deletions': 15, 'state': 'closed'}, {'id': 1045446784, 'number': 12297, 'closed': datetime.datetime(2022, 9, 3, 13, 24, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 3, 10, 26, 30, tzinfo=datetime.timezone.utc), 'time_taken': 10687.0, 'time_delta': '2:58:07', 'additions': 46, 'deletions': 53, 'state': 'closed'}, {'id': 1035046225, 'number': 12145, 'closed': datetime.datetime(2022, 9, 7, 14, 7, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 24, 6, 43, 40, tzinfo=datetime.timezone.utc), 'time_taken': 1236248.0, 'time_delta': '14 days, 7:24:08', 'additions': 120, 'deletions': 56, 'state': 'closed'}, {'id': 1027222168, 'number': 12035, 'closed': datetime.datetime(2022, 9, 4, 19, 2, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 16, 6, 53, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1685324.0, 'time_delta': '19 days, 12:08:44', 'additions': 258, 'deletions': 44, 'state': 'closed'}, {'id': 1006314884, 'number': 11908, 'closed': datetime.datetime(2022, 8, 18, 21, 17, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 23, 9, 2, 16, tzinfo=datetime.timezone.utc), 'time_taken': 2290493.0, 'time_delta': '26 days, 12:14:53', 'additions': 56, 'deletions': 15, 'state': 'closed'}, {'id': 998566701, 'number': 11875, 'closed': datetime.datetime(2022, 7, 17, 13, 3, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 17, 5, 41, 46, tzinfo=datetime.timezone.utc), 'time_taken': 26517.0, 'time_delta': '7:21:57', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 998427707, 'number': 11870, 'closed': datetime.datetime(2022, 7, 17, 19, 27, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 16, 13, 35, 7, tzinfo=datetime.timezone.utc), 'time_taken': 107568.0, 'time_delta': '1 day, 5:52:48', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 998403342, 'number': 11867, 'closed': datetime.datetime(2022, 7, 17, 21, 20, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 16, 10, 55, 35, tzinfo=datetime.timezone.utc), 'time_taken': 123899.0, 'time_delta': '1 day, 10:24:59', 'additions': 40, 'deletions': 0, 'state': 'closed'}, {'id': 998133293, 'number': 11863, 'closed': datetime.datetime(2022, 7, 18, 18, 41, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 15, 20, 28, 36, tzinfo=datetime.timezone.utc), 'time_taken': 252800.0, 'time_delta': '2 days, 22:13:20', 'additions': 45, 'deletions': 27, 'state': 'closed'}, {'id': 980466413, 'number': 11713, 'closed': datetime.datetime(2022, 7, 15, 14, 54, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 19, 50, 1, tzinfo=datetime.timezone.utc), 'time_taken': 1537488.0, 'time_delta': '17 days, 19:04:48', 'additions': 561, 'deletions': 0, 'state': 'closed'}, {'id': 979874528, 'number': 11712, 'closed': datetime.datetime(2022, 6, 27, 11, 25, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 10, 27, 57, tzinfo=datetime.timezone.utc), 'time_taken': 3444.0, 'time_delta': '0:57:24', 'additions': 16, 'deletions': 1, 'state': 'closed'}, {'id': 979122435, 'number': 11701, 'closed': datetime.datetime(2022, 12, 2, 19, 36, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 25, 19, 27, 27, tzinfo=datetime.timezone.utc), 'time_taken': 13824545.0, 'time_delta': '160 days, 0:09:05', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 978706249, 'number': 11687, 'closed': datetime.datetime(2022, 6, 28, 16, 11, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 24, 20, 38, 20, tzinfo=datetime.timezone.utc), 'time_taken': 329609.0, 'time_delta': '3 days, 19:33:29', 'additions': 46, 'deletions': 28, 'state': 'closed'}, {'id': 972090297, 'number': 11663, 'closed': datetime.datetime(2022, 12, 4, 15, 36, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 20, 11, 15, 22, tzinfo=datetime.timezone.utc), 'time_taken': 14444469.0, 'time_delta': '167 days, 4:21:09', 'additions': 1488, 'deletions': 1, 'state': 'closed'}, {'id': 880701067, 'number': 10538, 'closed': datetime.datetime(2022, 6, 25, 13, 38, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 15, 20, 57, 8, tzinfo=datetime.timezone.utc), 'time_taken': 8786503.0, 'time_delta': '101 days, 16:41:43', 'additions': 112, 'deletions': 4, 'state': 'closed'}, {'id': 867896564, 'number': 10414, 'closed': datetime.datetime(2022, 3, 1, 16, 49, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 1, 14, 0, 57, tzinfo=datetime.timezone.utc), 'time_taken': 10091.0, 'time_delta': '2:48:11', 'additions': 31, 'deletions': 9, 'state': 'closed'}, {'id': 862153219, 'number': 10389, 'closed': datetime.datetime(2022, 2, 27, 14, 33, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 24, 7, 34, 54, tzinfo=datetime.timezone.utc), 'time_taken': 284315.0, 'time_delta': '3 days, 6:58:35', 'additions': 59, 'deletions': 3, 'state': 'closed'}, {'id': 858698564, 'number': 10365, 'closed': datetime.datetime(2022, 2, 20, 21, 10, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 19, 22, 6, 8, tzinfo=datetime.timezone.utc), 'time_taken': 83074.0, 'time_delta': '23:04:34', 'additions': 20, 'deletions': 0, 'state': 'closed'}, {'id': 853376982, 'number': 10350, 'closed': datetime.datetime(2022, 2, 17, 14, 50, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 15, 15, 9, 37, tzinfo=datetime.timezone.utc), 'time_taken': 171645.0, 'time_delta': '1 day, 23:40:45', 'additions': 9, 'deletions': 8, 'state': 'closed'}, {'id': 845120019, 'number': 10325, 'closed': datetime.datetime(2022, 2, 12, 12, 14, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 10, 11, 47, 19, tzinfo=datetime.timezone.utc), 'time_taken': 174409.0, 'time_delta': '2 days, 0:26:49', 'additions': 87, 'deletions': 2, 'state': 'closed'}, {'id': 842669833, 'number': 10316, 'closed': datetime.datetime(2022, 2, 17, 17, 17, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 8, 10, 54, 10, tzinfo=datetime.timezone.utc), 'time_taken': 800572.0, 'time_delta': '9 days, 6:22:52', 'additions': 15, 'deletions': 1, 'state': 'closed'}]"
