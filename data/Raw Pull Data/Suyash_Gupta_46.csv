pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
980436098,added callback specs,"I've added callback schema according OpenAPI v3 specs. Kindly review it and suggest necessary changes, if required. ",False,176,https://api.github.com/repos/ga4gh/task-execution-schemas/pulls/176,https://github.com/ga4gh/task-execution-schemas/pull/176,open,37,1,1,3,4,22,0,0,[],2022-06-27 19:15:40+00:00,,0.0,,"[{'comment_id': 912999341, 'comment_body': ""That's quite a mouthful. Perhaps better: `tesCallbackStatus`?"", 'comment_created': datetime.datetime(2022, 7, 4, 13, 20, 15, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 913004980, 'comment_body': ""Note that this should probably _not_ be shared together with other info when users call, e.g., `GET /tasks/{task_id}`. As there are, unfortunately, no separate models/schemas for `POST`ing a task request and `GET`ting info associated with a task, I'm afraid you can only document that in the description for now (and probably should)."", 'comment_created': datetime.datetime(2022, 7, 4, 13, 26, 38, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 913006540, 'comment_body': 'Also, perhaps it is unnecessary, here, to be explicit about what the `callback_url` can be used for. Possibly there will be other uses for it in the future.', 'comment_created': datetime.datetime(2022, 7, 4, 13, 28, 20, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 913007016, 'comment_body': 'Please add a description.', 'comment_created': datetime.datetime(2022, 7, 4, 13, 28, 52, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 913011811, 'comment_body': 'Perhaps better to use `204/NoContent`? I feel that `202` implies that there is still something to do on the listener side. While that _may_ be the case, it is not necessarily so, and from the server side we do not want to tie any explicit or implicit expections to what the listener does with the callback info. All we want to hear from the listener is: ""Understood your request, don\'t worry about me"".\r\n\r\nSee here, e.g., for more info on `202`: https://metamug.com/article/status-codes-for-rest-api.html#2xx-content', 'comment_created': datetime.datetime(2022, 7, 4, 13, 34, 35, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 915790702, 'comment_body': ""I've mentioned the chages you suggested. Please check if anything else needs to be stated."", 'comment_created': datetime.datetime(2022, 7, 7, 12, 1, 9, tzinfo=datetime.timezone.utc), 'commenter': 'sgalpha01', 'type': 'User'}, {'comment_id': 915791166, 'comment_body': 'Added the description', 'comment_created': datetime.datetime(2022, 7, 7, 12, 1, 46, tzinfo=datetime.timezone.utc), 'commenter': 'sgalpha01', 'type': 'User'}, {'comment_id': 915792118, 'comment_body': 'Yes, you are right about that status code `204` is more suitable in this context. Thank You', 'comment_created': datetime.datetime(2022, 7, 7, 12, 2, 57, tzinfo=datetime.timezone.utc), 'commenter': 'sgalpha01', 'type': 'User'}, {'comment_id': 916910938, 'comment_body': ""Two minor wording issues:\r\n> Note that the URL _can_ be provided (instead of: Note that the URL _should_ be provided)\r\n\r\n> _but it MUST NOT_ be displayed (instead of: _and it won't_ be displayed)"", 'comment_created': datetime.datetime(2022, 7, 8, 15, 10, 59, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 918684914, 'comment_body': 'API is an interface. I suggest changing it to `TES server` ', 'comment_created': datetime.datetime(2022, 7, 12, 8, 18, 47, tzinfo=datetime.timezone.utc), 'commenter': 'aniewielska', 'type': 'User'}, {'comment_id': 918688215, 'comment_body': 'I think we should return the callback URL together with the rest of task payload. Other information contained in the task details can be equally sensitive. The only element to think about is whether it should be returned only in FULL or already in BASIC (probably BASIC makes more sense).', 'comment_created': datetime.datetime(2022, 7, 12, 8, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'aniewielska', 'type': 'User'}, {'comment_id': 918690333, 'comment_body': 'For consistency we should call this parameter (`task_id`) just `id` as it is called elsewhere.', 'comment_created': datetime.datetime(2022, 7, 12, 8, 24, 28, tzinfo=datetime.timezone.utc), 'commenter': 'aniewielska', 'type': 'User'}, {'comment_id': 967847761, 'comment_body': 'Looks to me like the `schemas` are listed in alphabetical order, so the `tesCallbackStatus` should be inserted as the first schema, before `tesCancelTaskResponse` instead.', 'comment_created': datetime.datetime(2022, 9, 11, 15, 35, 20, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 967848635, 'comment_body': 'Inconsistent with `task_id` mentioned just above among the `required` properties. Change here or above.', 'comment_created': datetime.datetime(2022, 9, 11, 15, 41, 40, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 967943620, 'comment_body': 'Yup, sorry I missed it :)', 'comment_created': datetime.datetime(2022, 9, 12, 2, 36, 20, tzinfo=datetime.timezone.utc), 'commenter': 'sgalpha01', 'type': 'User'}, {'comment_id': 976605106, 'comment_body': ""This cool feature was mentioned at the GA4GH call, so I took a peek... I'm curious, how is authentication supposed to work for the callback url?"", 'comment_created': datetime.datetime(2022, 9, 21, 14, 44, 32, tzinfo=datetime.timezone.utc), 'commenter': 'coverbeck', 'type': 'User'}, {'comment_id': 976669162, 'comment_body': 'github allows a simple password for webhooks but does not require it. I wonder if the callback should be an object instead of a single url:\r\n```json\r\n""callback"": {\r\n  ""url"": ""your url goes here"",\r\n  ""headers"": [\r\n   { ""key"":""value""}\r\n  ]\r\n}\r\n```', 'comment_created': datetime.datetime(2022, 9, 21, 15, 36, 50, tzinfo=datetime.timezone.utc), 'commenter': 'patmagee', 'type': 'User'}, {'comment_id': 976700551, 'comment_body': 'The idea here was not to put callback url behind extra authentication (the URL itself might be a secret?) and additionally advise consumers of the callback to verify the information by hitting the GET endpoint. ', 'comment_created': datetime.datetime(2022, 9, 21, 15, 59, 26, tzinfo=datetime.timezone.utc), 'commenter': 'aniewielska', 'type': 'User'}, {'comment_id': 976713292, 'comment_body': '@aniewielska thanks for the clarification. I wonder if it would still potentially make sense to make this an object to future proof in the case of wanting to add additional access mechanisms in the future', 'comment_created': datetime.datetime(2022, 9, 21, 16, 7, 58, tzinfo=datetime.timezone.utc), 'commenter': 'patmagee', 'type': 'User'}, {'comment_id': 976767142, 'comment_body': ""> The idea here was not to put callback url behind extra authentication (the URL itself might be a secret?) and additionally advise consumers of the callback to verify the information by hitting the GET endpoint.\r\n\r\nI think it would be nice to have your clarification in the spec. \r\n\r\nI'm still slightly concerned about needing to expose a public callback url without auth, and I think Patrick's proposal addresses that, but I don't feel too strongly (and I'm not a reviewer anyway, just lurking :) )."", 'comment_created': datetime.datetime(2022, 9, 21, 16, 43, 51, tzinfo=datetime.timezone.utc), 'commenter': 'coverbeck', 'type': 'User'}, {'comment_id': 976773944, 'comment_body': ""How will the the callback know which TES server is making the request? Is the callback expected to look at the Origin header (but I don't think that's guaranteed to be set)?\r\n"", 'comment_created': datetime.datetime(2022, 9, 21, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'coverbeck', 'type': 'User'}, {'comment_id': 977391591, 'comment_body': 'Good points here, thanks. Agree with future proofing by making it an object and extending the description to clarify that clients should verify the info from the callback and that the callback URL may include a secret', 'comment_created': datetime.datetime(2022, 9, 22, 8, 59, 39, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}]","[{'commit_sha': 'ee7e1bdd2ca4378a90cdfafff0beab3055fbdb27', 'committer_username': 'sgalpha01', 'committer_name': 'Suyash Gupta', 'committer_email': 'suyash.gupta@research.iiit.ac.in', 'commit_date': datetime.datetime(2018, 8, 17, 23, 2, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07d8791bbfc4b872b7569971ea8dbc40568b98ec', 'committer_username': 'sgalpha01', 'committer_name': 'Suyash Gupta', 'committer_email': 'suyash.gupta@research.iiit.ac.in', 'commit_date': datetime.datetime(2018, 8, 17, 23, 2, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0f59642c323e02d4b4b7315aeede0de4f3874aa', 'committer_username': 'sgalpha01', 'committer_name': 'Suyash Gupta', 'committer_email': 'suyash.gupta@research.iiit.ac.in', 'commit_date': datetime.datetime(2018, 8, 17, 23, 2, 4, tzinfo=datetime.timezone.utc)}]",Suyash Gupta,42481964,suyash.gupta@research.iiit.ac.in,User,,25,,25,12
1018099245,accept callback_url,,False,39,https://api.github.com/repos/elixir-cloud-aai/tesk-api/pulls/39,https://github.com/elixir-cloud-aai/tesk-api/pull/39,open,36,2,3,2,1,0,0,0,[],2022-08-04 23:25:04+00:00,,0.0,,[],"[{'commit_sha': '7214a95d9119492d39e4ea1a45aa9385782f4cf0', 'committer_username': 'sgalpha01', 'committer_name': 'Suyash Gupta', 'committer_email': 'suyash.gupta@research.iiit.ac.in', 'commit_date': datetime.datetime(2018, 8, 17, 23, 2, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3cda2bb568b5e5cc861d962238920defb096f6e', 'committer_username': 'sgalpha01', 'committer_name': 'Suyash Gupta', 'committer_email': 'suyash.gupta@research.iiit.ac.in', 'commit_date': datetime.datetime(2018, 8, 17, 23, 2, 4, tzinfo=datetime.timezone.utc)}]",Suyash Gupta,42481964,suyash.gupta@research.iiit.ac.in,User,,25,,25,12
1052188318,added callback sender,Updated taskmaster to take `callback_url` and send notifications to the callback receiver on status change.,False,39,https://api.github.com/repos/elixir-cloud-aai/tesk-core/pulls/39,https://github.com/elixir-cloud-aai/tesk-core/pull/39,open,89,7,3,1,1,10,0,0,[],2022-09-10 07:58:02+00:00,,0.0,,"[{'comment_id': 967850642, 'comment_body': 'Better to check explicitly with `if callback_url is not None:`', 'comment_created': datetime.datetime(2022, 9, 11, 15, 57, 6, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 967851070, 'comment_body': 'I think the code is obvious enough that it doesn\'t need a comment. I think the same goes for all other places where you call `callback.send()`, perhaps with the exception of this comment in the `taskmaster` module:\r\n\r\n```\r\n            # send ""SYSTEM_ERROR"" to callback receiver if taskmaster completes\r\n            # but the output filer fails\r\n```', 'comment_created': datetime.datetime(2022, 9, 11, 16, 0, 37, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 967851072, 'comment_body': 'Not quite sure why you process the task name. Is the processed version the one that the user knows (i.e., the one that is returned when `POST`ing a new task)?', 'comment_created': datetime.datetime(2022, 9, 11, 16, 0, 38, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 967851174, 'comment_body': 'Again, better to compare explicity against `None`, i.e., if `self.callback is not None [...]`. Same below.', 'comment_created': datetime.datetime(2022, 9, 11, 16, 1, 43, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 967852416, 'comment_body': ""I don't quite understand this code. At this stage, `CallbackSender` misses required information, the URL and the task name. Now, it appears that this is filled in when `newParser()` is called. But when does that happen? And who/what sets the environment variable `CALLBACK_URL` and when? And can you be sure that `data['executors'][0]['metadata']['labels']['taskmaster-name']` is always set and correct when `newParser()` is called? And can you be sure that `callback.url` and `callback.task_id` are always set (and correctly) whenever `callback.send` is called?"", 'comment_created': datetime.datetime(2022, 9, 11, 16, 11, 1, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 967854292, 'comment_body': ""Also, setting `callback` as a global and changing it in `newParser()` is quite a side effect. Wouldn't it be better to add a setter method to `CallbackSender` and call that somewhere (ideally not in `newParser()` itself, but in the context where `newParser()` is called?"", 'comment_created': datetime.datetime(2022, 9, 11, 16, 27, 4, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 967855562, 'comment_body': 'I guess instead of a `while` loop you could use a `for` loop with `range(number_of_retries)`. That way you could get rid of `retries` and manual incrementing. You could also use `break` instead of `sent = True` and get rid of `sent`.', 'comment_created': datetime.datetime(2022, 9, 11, 16, 36, 51, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 967855761, 'comment_body': 'Might be good to log something here.', 'comment_created': datetime.datetime(2022, 9, 11, 16, 37, 26, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 967855797, 'comment_body': 'What is the task ID is not set?', 'comment_created': datetime.datetime(2022, 9, 11, 16, 37, 59, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 967856265, 'comment_body': 'At this point you already have a callback instance. Why not use that?', 'comment_created': datetime.datetime(2022, 9, 11, 16, 41, 43, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}]","[{'commit_sha': 'fbe68aa06717f92ef5d7be60ff111012b714f5fa', 'committer_username': 'sgalpha01', 'committer_name': 'Suyash Gupta', 'committer_email': 'suyash.gupta@research.iiit.ac.in', 'commit_date': datetime.datetime(2018, 8, 17, 23, 2, 4, tzinfo=datetime.timezone.utc)}]",Suyash Gupta,42481964,suyash.gupta@research.iiit.ac.in,User,,25,,25,12

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
54993677,task-execution-schemas,ga4gh/task-execution-schemas,,28,80,37,18,299,47,21,10,"[{'id': 980436098, 'number': 176, 'closed': None, 'created': datetime.datetime(2022, 6, 27, 19, 15, 40, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 37, 'deletions': 1, 'state': 'open'}]"
110129447,tesk-api,elixir-cloud-aai/tesk-api,Java,18,7,29,11,177,14,13,3,"[{'id': 1018099245, 'number': 39, 'closed': None, 'created': datetime.datetime(2022, 8, 4, 23, 25, 4, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 36, 'deletions': 2, 'state': 'open'}]"
128085890,tesk-core,elixir-cloud-aai/tesk-core,Python,13,2,31,18,425,4,11,1,"[{'id': 1052188318, 'number': 39, 'closed': None, 'created': datetime.datetime(2022, 9, 10, 7, 58, 2, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 89, 'deletions': 7, 'state': 'open'}]"
