pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
381560344,[nteract/web] Alpha webapp layout,"This PR is for issue #4956.

Changes made so far by this PR.
- Implemented following components
     - Sidebar
     - BinderMenu
     - StatusLine
     - Console
- Implemented GitHub API to fetch the files and contents.

### Demo
![final](https://user-images.githubusercontent.com/29037312/77571890-16187a80-6ef4-11ea-9f7c-d505d22c3b7d.gif)


",True,4966,https://api.github.com/repos/nteract/nteract/pulls/4966,https://github.com/nteract/nteract/pull/4966,closed,834,103,11,12,6,7,1,1,[{'name': 'app:web'}],2020-02-28 19:37:32+00:00,2020-04-09 05:23:26+00:00,3491154.0,"40 days, 9:45:54","[{'comment_id': 403765926, 'comment_body': ""When I was trying this locally, this line of code threw an exception when I clicked on a folder (not a file).\r\n\r\n```\r\nUnhandled Rejection (InvalidCharacterError): Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.\r\n```"", 'comment_created': datetime.datetime(2020, 4, 5, 22, 30, 12, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 403767045, 'comment_body': 'I am unable to see this toggle in the footer when I launch the application. Do you need to do something special to enable it?', 'comment_created': datetime.datetime(2020, 4, 5, 22, 39, 32, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 403767156, 'comment_body': 'Do we want this here? It ends up causing the contents of the selected file to render on top of the notebook which seems unideal.', 'comment_created': datetime.datetime(2020, 4, 5, 22, 40, 33, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 405211032, 'comment_body': 'Github API returns an `object` when for file type and `array of objects` for folder type. I have added the logic to handle it differently for both the cases.\r\n\r\nFor file type, it stores it to `fileContent`, and for folder type, it should display the list of sub files and folders, which I will prefer to do in a separate PR. I have added a TODO in detail. ', 'comment_created': datetime.datetime(2020, 4, 8, 1, 45, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}, {'comment_id': 405219917, 'comment_body': 'I have checked its working. I guess what happens is that when the `NotebookApp` is rendered, it overlaps the footer implemented in this PR. \r\n\r\nI am not sure how to fix it; I will have to look at how the `NotebookApp` footer is implemented.', 'comment_created': datetime.datetime(2020, 4, 8, 2, 17, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}, {'comment_id': 405219951, 'comment_body': 'Ideally, we will render the files only through Github API and only send the changes to Mybinder instance.\r\nRendering can have two cases:\r\n\r\n- We want to render a notebook; It can be edited.\r\n- We want to render any other file type; I will suggest initially we keep it read/view only, and maybe in the future, we can think of supporting the editing. It arguable, but for me, the reason for that is to keep the focus on the notebooks only and perhaps role the editing other files if required.\r\n\r\nThis again should be done in a separate PR; for now, I will only console it out and add a TODO for it. \r\n', 'comment_created': datetime.datetime(2020, 4, 8, 2, 18, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}, {'comment_id': 405234298, 'comment_body': 'I have raised an issue for this: https://github.com/nteract/nteract/issues/5042', 'comment_created': datetime.datetime(2020, 4, 8, 3, 15, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}]","[{'commit_sha': 'ed812e07c5f1c0ecf18e51d2db32cc69e660717c', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '894e29c14877cb940b566ad3cbc84fab30712df3', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '726f75d4fbcb2eab8c020a29a2635e159634e386', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '202b619fed4c19860c6369e5052662c3ba1dd31f', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fa54eff1a3ac77f29e34ddb8a67a0e3b2f8a175', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4754a9f249610db49c4a668f4baff6309ab41c9f', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '261cb4975db5fcc44e832dd8169513e7b6d0c6ad', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01d7b410e43c280fbb894d92f21acb6f66841b15', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75e23854f4ab049c3631e23932da786887034893', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eae22b051aae2e3f3d27636d1b663006e421ddc4', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c1808d7cb3cf059fb16cd71256962b635a00ec7', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44ba8d9b4fc3c802db16c216e9fd4a0731eb671c', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}]",Raman Tehlan,29037312,ramantehlan@gmail.com,User,,61,,2,87
436846098,[nteract/web] New layout and OAuth in @nteract/web,"![Screenshot_2020-06-25 Screenshot(1)](https://user-images.githubusercontent.com/29037312/85700067-a89a0700-b6f9-11ea-9958-2b52c523b943.png)
This PR is to introduce new components to [nteract/web](https://github.com/nteract/nteract/tree/master/applications/web) and also integrate Github to make application functional. 

### UI/UX Integration
The list of components that needs to be created and added is given below, more might be added later:

- [x] Layout
- [x] BinderMenu
- [x] Input
- [x] Menu
- [x] Button 
- [x] Avatar
- [x] Dialog
- [x] Landing Page
- [x] Auth page
- [x] Editor `Using @nteract/editor | Later we can use @nteract/monaco-editor `
- [x] Console
- [x] FileExplorer
- [ ] Notification `will be taken from nteract legacy lib, yet to be implemented`
- [ ] Notebook rendering.

### Github Integration
This PR will also allow OAuth authentication with Github, and fetch user public info. 

- [x] Complete authentication
- [x] Fetch user's public info
- [x] Fetch public files and folders 
- [x] List and create a fork for repo
- [ ] Save back changes to the repo or the fork 

### MyBinder Integration
- [ ] Launch MyBinder instance on start
- [ ] Communicate with JupyterServer. Fetch info like sessions etc.
- [ ] Connect console(iterm.js) to MyBinder instance
- [ ] Execute the command on MyBinder instance


### Other Tasks

- [x] Move new Github OAuth application to the official Github account.
- [ ] Host the `play-oauth-server` from the official account on [vercel](https://vercel.com/). 
- [ ] Update the callback method in Github OAuth to `play.nteract.com/auth` after the first beta release.

### Important Repos

- [play-oauth-server](https://github.com/nteract/play-oauth-server): The OAuth server for Github, Gitlab(not yet implemented) etc.
- [UI-web](github.com/nteract/ui-web/): Storybook for new components.

> Linked to issue #4956, #5043, #5042 and successor of PR #4966 
",True,5167,https://api.github.com/repos/nteract/nteract/pulls/5167,https://github.com/nteract/nteract/pull/5167,closed,1817,824,20,35,31,14,1,1,[{'name': 'app:web'}],2020-06-19 02:01:50+00:00,2020-07-25 20:41:44+00:00,3177594.0,"36 days, 18:39:54","[{'comment_id': 443155287, 'comment_body': ""We can use @nteract/monaco-editor here so we don't introduce another dependency. See the examples in the Jupyter extension for example."", 'comment_created': datetime.datetime(2020, 6, 20, 19, 47, 24, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 443155376, 'comment_body': 'This renders everything inside an editor, including notebooks.  ', 'comment_created': datetime.datetime(2020, 6, 20, 19, 48, 48, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 443155572, 'comment_body': ""This file shouldn't be under the pages directory.\r\n\r\nAlso, we generally try and stay away from `utils` folders. It seems like these functions should be implemented as anonymous functions in the main page."", 'comment_created': datetime.datetime(2020, 6, 20, 19, 52, 11, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 443185425, 'comment_body': 'I have added a TODO for it. We will eventually render notebooks differently using the nteract core lib. ', 'comment_created': datetime.datetime(2020, 6, 21, 6, 6, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}, {'comment_id': 443185672, 'comment_body': ""when using @nteract/monaco-editor, it is raising a known issue. Next.js doesn't support css import from node_modules, as mentioned [here](https://github.com/vercel/next.js/blob/master/errors/css-npm.md). \r\n![gscreenshot_2020-06-21-113053](https://user-images.githubusercontent.com/29037312/85218000-cf7fd280-b3b3-11ea-8bf5-eaaa53d15aff.png)\r\n"", 'comment_created': datetime.datetime(2020, 6, 21, 6, 10, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}, {'comment_id': 443186868, 'comment_body': 'I agree. I have moved the functions to the main page.', 'comment_created': datetime.datetime(2020, 6, 21, 6, 28, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}, {'comment_id': 448703444, 'comment_body': 'For consistency with the rest of the nteract UX, considering using the CSS variables that are included in @nteract/styles.', 'comment_created': datetime.datetime(2020, 7, 2, 1, 47, 14, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 448704845, 'comment_body': 'Nit: Indentation.', 'comment_created': datetime.datetime(2020, 7, 2, 1, 52, 48, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 448704945, 'comment_body': 'Maybe the default values should be for the nteract/examples here?', 'comment_created': datetime.datetime(2020, 7, 2, 1, 53, 13, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 448709008, 'comment_body': ""If Monaco is giving us trouble here, I'd prefer we use the @nteract/editor package instead of introducing another editor dependency into the project."", 'comment_created': datetime.datetime(2020, 7, 2, 2, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 448709763, 'comment_body': 'We discussed this during our 1:1 but you can store the token in local storage and listen for changes in local storage and update the UI without having users double click.\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/storage/onChanged', 'comment_created': datetime.datetime(2020, 7, 2, 2, 13, 2, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 454249819, 'comment_body': 'Done. :) ', 'comment_created': datetime.datetime(2020, 7, 14, 10, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}, {'comment_id': 455277487, 'comment_body': ""I tried following along this(below link) fix for it, but couldn't. Leaving the link here to come back to it later.\r\n\r\nhttps://dev.to/swyx/how-to-add-monaco-editor-to-a-next-js-app-ha3\r\n"", 'comment_created': datetime.datetime(2020, 7, 15, 19, 4, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}, {'comment_id': 455975052, 'comment_body': 'Thank you for pointing it out. :)\r\n\r\n I have created a TODO for it and will do it in the end, using a VS Code or Atom extension for the whole project. ', 'comment_created': datetime.datetime(2020, 7, 16, 18, 6, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}]","[{'commit_sha': '860c7ce7fd84bcf320bfa27090ef06d3b449d0d1', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d04818af27ce1f2f219ffda1b56509de09b4692', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec56587eab1324c84d5152803d6afe508e8b6f65', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ee5cb66497d98c41d07456aeee39efc5837a832', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6fb2e8b43a8e6c965d3ee921ca9b70d4b4dde28', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a5cf6dfbb77c683aae779391f58adb2622b6022', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '148ab403141216c77f66ca74c5bac3b7dab55277', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b86386e0b849ff9af8d879872f4f35cfe13266c6', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90f8544c853f695ea0bdaaeac20d79e9a49f803d', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6016851c60f2f258035ef29935d28f1a6d756d34', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8783971b64a8a1d04b3f013700acb78dc30ae287', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d6a976d7e28148cfe9c273fe8c1d7431886a4e4', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b16312bfec04689568b03e5e5e4e3cb98b417a93', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4ec0dd5a8da92495a561f4224b8471656c62002', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68ce8cb8782929f2733420cb67a0f45a30ad6c4f', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2193de04cc1fd85e0943ddb5e5ea319dd9d598a0', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef95df1aac6e6d9acbd2efd6276e08103e1327dc', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f80df1e9c6ad2254d3efff4fdb051eacd3db0760', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea7efa3ef87b03ac2601464514033008283ca77f', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f199451d2c734062423615c2efb95acf94aeca2f', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '501f3c79cc2c6ccf9f0a6e7197d4c8f3251f64d1', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7383bb33f8474eb66ab2831b0d6fd6a9636b58d3', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aef97624356870dbb7866b440a8835b6dd77db0c', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5746455552164d5f1a0825a0f5c0d0eb60ffd68a', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef48e68e21b117318009a1ecb1895ee52d364014', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29ba70b2036ec05dd15b8dde06dea345f0670ab8', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e6f048188df0466bfc8a402db2d125889d5ed69', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cce8f2bb0c3f3424bbd4b12cba24a485e5aece42', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea650c4f9321f99d3b17f7ad300059a99ea3f312', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd13acbdd209ec717c4147b737cffbfa63787a86', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cddcee41fc6fd26d1a3d013df139ede5bcccb57a', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '247d52a96d4c6c22f6c3e80beeb1cae2526431e9', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd67a0917f3f01cdf9011afd19d15f6376caf42b', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f6dd4d3893706c765cdf9591f739665c626d46d', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b3a9d50013c13d66188d2911c349f60e9230824', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}]",Raman Tehlan,29037312,ramantehlan@gmail.com,User,,61,,2,87
459444903,[nteract/web] Save/upload to Github and other improvements.,"This PR is to save back changes to the repo or the fork. 

It will also make the following changes: 

- [x] Save back changes to the repo or the fork.


> Successor of PR #5167",True,5240,https://api.github.com/repos/nteract/nteract/pulls/5240,https://github.com/nteract/nteract/pull/5240,closed,327,95,2,7,7,15,1,1,[{'name': 'app:web'}],2020-07-30 17:47:03+00:00,2020-08-05 19:55:37+00:00,526114.0,"6 days, 2:08:34","[{'comment_id': 464111962, 'comment_body': 'I have added a TODO to identify the language when the file is opened and update this value.', 'comment_created': datetime.datetime(2020, 8, 2, 19, 3, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}, {'comment_id': 464112083, 'comment_body': 'This function is not complete, but it will be used to get file type and update the mode/language type in the editor. ', 'comment_created': datetime.datetime(2020, 8, 2, 19, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}, {'comment_id': 464112280, 'comment_body': 'These functions will be moved to a separate util folder since they all are used to work with Github API and are not part of the main component. ', 'comment_created': datetime.datetime(2020, 8, 2, 19, 6, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}, {'comment_id': 464112983, 'comment_body': 'I am using the console as a placeholder, this can later be replaced with the notification component. ', 'comment_created': datetime.datetime(2020, 8, 2, 19, 12, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}, {'comment_id': 464133870, 'comment_body': ""Let's go ahead and remove the code if it is not being used. Thanks."", 'comment_created': datetime.datetime(2020, 8, 2, 23, 3, 33, tzinfo=datetime.timezone.utc), 'commenter': 'willingc', 'type': 'User'}, {'comment_id': 464134091, 'comment_body': ""Let's add a comment above line 610 to mention the TODO."", 'comment_created': datetime.datetime(2020, 8, 2, 23, 5, 44, tzinfo=datetime.timezone.utc), 'commenter': 'willingc', 'type': 'User'}, {'comment_id': 464134217, 'comment_body': 'Add above line 416 with a message similar to ""TODO update when using notification system""', 'comment_created': datetime.datetime(2020, 8, 2, 23, 7, 9, tzinfo=datetime.timezone.utc), 'commenter': 'willingc', 'type': 'User'}, {'comment_id': 464134285, 'comment_body': 'Let\'s add a comment above lines with a console.log message similar to ""TODO update when using notification system""', 'comment_created': datetime.datetime(2020, 8, 2, 23, 8, tzinfo=datetime.timezone.utc), 'commenter': 'willingc', 'type': 'User'}, {'comment_id': 464188162, 'comment_body': 'It will be used in the next step when will connect binder to nteract web/play. However, that comment is irrelevant now, so I will update it. ', 'comment_created': datetime.datetime(2020, 8, 3, 4, 28, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}, {'comment_id': 464785877, 'comment_body': ""We should add a 'catch' error handler here."", 'comment_created': datetime.datetime(2020, 8, 4, 4, 4, 5, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 464786074, 'comment_body': 'Nit: let\'s make this a little more helpful. For example: ""Auto commit from nteract web""', 'comment_created': datetime.datetime(2020, 8, 4, 4, 4, 55, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 464786343, 'comment_body': ""I don't think you need to wrap this in a promise. You can just make the method async and await the calls inside a try-catch."", 'comment_created': datetime.datetime(2020, 8, 4, 4, 6, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 464786884, 'comment_body': ""This 'Head' component can probably be exported from another file and used here."", 'comment_created': datetime.datetime(2020, 8, 4, 4, 8, 19, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 464787384, 'comment_body': 'We can use async/await in this event handler.', 'comment_created': datetime.datetime(2020, 8, 4, 4, 10, 12, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 464787535, 'comment_body': ""Let's use endsWith for a stricter check."", 'comment_created': datetime.datetime(2020, 8, 4, 4, 10, 41, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}]","[{'commit_sha': '2b2b10165aae166dffdb6da3ce917151438da7ac', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f78c843f2a462454d90d2f501d04d7cba11ea21', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01637c5f8008cf3538efac4736ffb6fae80a6807', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7039c668d9d092ccae8c41e013c6bba2273aa18', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1cb93ad2a1c971993a11fb093cc22f19e019ab2', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c6647d541268fb6214c2a578721786a2bd0ff34', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70441972824c94ba68335f77658292a3d1c88a91', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}]",Raman Tehlan,29037312,ramantehlan@gmail.com,User,,61,,2,87
463605174,[nteract/web] Add project details in main and landing page,"This is to add helpful information about the project, and usage in the main and landing page. 

![landing page](https://user-images.githubusercontent.com/29037312/89456945-3d286800-d782-11ea-870c-7b7e9c5ce6bd.png)
![main page](https://user-images.githubusercontent.com/29037312/89456950-3e599500-d782-11ea-9bff-6865d60a97f9.png)


> This will close #5227",True,5246,https://api.github.com/repos/nteract/nteract/pulls/5246,https://github.com/nteract/nteract/pull/5246,closed,71,9,3,8,5,11,1,1,[{'name': 'app:web'}],2020-08-05 19:45:27+00:00,2020-08-08 10:30:30+00:00,225903.0,"2 days, 14:45:03","[{'comment_id': 466045574, 'comment_body': 'Does this have an extra space on the line?', 'comment_created': datetime.datetime(2020, 8, 5, 22, 47, 18, tzinfo=datetime.timezone.utc), 'commenter': 'willingc', 'type': 'User'}, {'comment_id': 466046166, 'comment_body': 'I would put the first sentence in its own paragraph.\r\n\r\nAlso, MyBinder should be changed to Binder. ', 'comment_created': datetime.datetime(2020, 8, 5, 22, 49, 14, tzinfo=datetime.timezone.utc), 'commenter': 'willingc', 'type': 'User'}, {'comment_id': 466046412, 'comment_body': 'Perhaps remove ""in seconds"" and replace with ""quickly"" in case the docker build is slow.', 'comment_created': datetime.datetime(2020, 8, 5, 22, 50, tzinfo=datetime.timezone.utc), 'commenter': 'willingc', 'type': 'User'}, {'comment_id': 466047137, 'comment_body': '```suggestion\r\n                        nteract play is an awesome environment for you to reproduce a notebook project quickly and edit a notebook without installing additional software. It takes just a few seconds to get started.\r\n\r\n```', 'comment_created': datetime.datetime(2020, 8, 5, 22, 52, 8, tzinfo=datetime.timezone.utc), 'commenter': 'willingc', 'type': 'User'}, {'comment_id': 466047247, 'comment_body': '```suggestion\r\n                          <li>Connect to the GitHub to save back your changes. </li>\r\n\r\n```', 'comment_created': datetime.datetime(2020, 8, 5, 22, 52, 31, tzinfo=datetime.timezone.utc), 'commenter': 'willingc', 'type': 'User'}, {'comment_id': 466047473, 'comment_body': '```suggestion\r\n                          <li>Share the above link to your network so they can reproduce your notebook. </li>\r\n\r\n```', 'comment_created': datetime.datetime(2020, 8, 5, 22, 53, 11, tzinfo=datetime.timezone.utc), 'commenter': 'willingc', 'type': 'User'}, {'comment_id': 466568998, 'comment_body': 'Yup, fixed it. :sweat_smile: ', 'comment_created': datetime.datetime(2020, 8, 6, 17, 23, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}, {'comment_id': 466640828, 'comment_body': 'Considering moving these to a separate file to override crowding the layout page.', 'comment_created': datetime.datetime(2020, 8, 6, 19, 34, 57, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 466641445, 'comment_body': 'Is an empty string the best check here? Perhaps we should be doing a `!fileContent`.', 'comment_created': datetime.datetime(2020, 8, 6, 19, 36, 1, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 466641911, 'comment_body': ""Let's move these to the same file the other components are in."", 'comment_created': datetime.datetime(2020, 8, 6, 19, 36, 46, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 466821901, 'comment_body': '```suggestion\r\n                          <li>Connect to GitHub to save back your changes. </li>\r\n\r\n```', 'comment_created': datetime.datetime(2020, 8, 7, 5, 1, 41, tzinfo=datetime.timezone.utc), 'commenter': 'willingc', 'type': 'User'}]","[{'commit_sha': '53782458b509b32fb9ce7cc1bcd5de532183bb62', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fde8242ca4390f1b77bff8b9ea4c4490a165bb5', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c297c28efcec06f98edbdbf9a41557ff4309c60', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70907022da8edb3a42bada3aa88e8c74922c2834', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3c38beecf541e12cd06b43959c9714f944889b5', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '026d355406971d87479edfe87808800d2e15b2a6', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc24abf51295cb1345817e60ae8f726bab30ae7c', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '244f21128e2fb4e2f088886d139f747760ec4bd2', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}]",Raman Tehlan,29037312,ramantehlan@gmail.com,User,,61,,2,87
463666236,[nteract/web] Add language detection for editor and move functions out of main file.,"This PR is to add multiple language support to nteract web editor by identifying the language of active/opened file and update it in codeMirror mode.

This PR also moves out abstract function out of main file, to util files. 

The three files created are:
1. **helper.ts**: To store general helper function like getLanguage. 
2. **Github.ts**: To store Github related function like createCommit, upload etc. 
3. **Icons.tsx**: To move out icons from the main file, so they can be used in other pages if required. 

> This closes #5248 ",True,5249,https://api.github.com/repos/nteract/nteract/pulls/5249,https://github.com/nteract/nteract/pull/5249,closed,246,278,5,9,6,20,1,1,[{'name': 'app:web'}],2020-08-05 22:04:00+00:00,2020-08-10 23:43:45+00:00,437985.0,"5 days, 1:39:45","[{'comment_id': 466031801, 'comment_body': ""Adding support for all the languages at once will be a little hard, so we will keep adding support for more language as we move ahead. It's very easy to add it. we just need to add a case here with the extensions as its value and assign language based on these [supported modes](https://codemirror.net/mode/) on code mirror."", 'comment_created': datetime.datetime(2020, 8, 5, 22, 8, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}, {'comment_id': 466032622, 'comment_body': 'I was a little confused about moving them to components or to util folder, but I decided to move it to util as there is no new component we are introducing in this file. ', 'comment_created': datetime.datetime(2020, 8, 5, 22, 10, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}, {'comment_id': 466049502, 'comment_body': ""```suggestion\r\n   let extension = fileName.split('.').pop()\r\n\r\n```"", 'comment_created': datetime.datetime(2020, 8, 5, 22, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'willingc', 'type': 'User'}, {'comment_id': 466049604, 'comment_body': '```suggestion\r\n   setLang( getLanguage( extension ) )\r\n\r\n```', 'comment_created': datetime.datetime(2020, 8, 5, 22, 59, 4, tzinfo=datetime.timezone.utc), 'commenter': 'willingc', 'type': 'User'}, {'comment_id': 466049918, 'comment_body': '```suggestion\r\n    // This gets the fork of the active repo\r\n```', 'comment_created': datetime.datetime(2020, 8, 5, 23, 0, 5, tzinfo=datetime.timezone.utc), 'commenter': 'willingc', 'type': 'User'}, {'comment_id': 466050296, 'comment_body': 'Do we need to check if credentials are sufficient to create a fork here?', 'comment_created': datetime.datetime(2020, 8, 5, 23, 1, 22, tzinfo=datetime.timezone.utc), 'commenter': 'willingc', 'type': 'User'}, {'comment_id': 466050476, 'comment_body': '```suggestion\r\n// checkFork performs 3 checks\r\n```', 'comment_created': datetime.datetime(2020, 8, 5, 23, 1, 51, tzinfo=datetime.timezone.utc), 'commenter': 'willingc', 'type': 'User'}, {'comment_id': 466050629, 'comment_body': '```suggestion\r\n// B: If fork exists.\r\n```', 'comment_created': datetime.datetime(2020, 8, 5, 23, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'willingc', 'type': 'User'}, {'comment_id': 466051322, 'comment_body': '```suggestion\r\nexport const getLanguage =  (extension: string) =>  {\r\n```', 'comment_created': datetime.datetime(2020, 8, 5, 23, 4, 20, tzinfo=datetime.timezone.utc), 'commenter': 'willingc', 'type': 'User'}, {'comment_id': 466051402, 'comment_body': '```suggestion\r\n      switch( extension.toLowerCase() ) {\r\n```', 'comment_created': datetime.datetime(2020, 8, 5, 23, 4, 40, tzinfo=datetime.timezone.utc), 'commenter': 'willingc', 'type': 'User'}, {'comment_id': 466052124, 'comment_body': 'I would try to order the most frequently used extensions python, javascript, julia, etc. earlier in the case statements to prevent unnecessary extra checks.', 'comment_created': datetime.datetime(2020, 8, 5, 23, 6, 47, tzinfo=datetime.timezone.utc), 'commenter': 'willingc', 'type': 'User'}, {'comment_id': 466594354, 'comment_body': ""Thank you for pointing it out. \r\n\r\nWe are checking the `GitHub token`, which is the only **user** credential required to do the fork. We check it every time we fetch the user info(on the loading of the page), if ever the token is invalid, it is removed. If no token is present, save option won't be rendered, hence the fork can't be initiated. \r\n\r\nAnd If the owner and repo are missing, or it doesn't exist, it will throw an error. \r\n"", 'comment_created': datetime.datetime(2020, 8, 6, 18, 7, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}, {'comment_id': 466596113, 'comment_body': 'Good point! Fixed now. :+1: ', 'comment_created': datetime.datetime(2020, 8, 6, 18, 10, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}, {'comment_id': 466647398, 'comment_body': ""Let's replace all these `new Promise` invocations in the file with async/await.\r\n\r\n```\r\nexport const listForks = async (owner, repo) => {\r\n    const octo = new Octokit();\r\n    const  data = await octo.repos.listForks({ owner, repo });\r\n    return data;\r\n}\r\n```"", 'comment_created': datetime.datetime(2020, 8, 6, 19, 47, 21, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 466647773, 'comment_body': ""Let's also add types to the function signatures where possible.\r\n\r\n```\r\nlistForks = (owner: string, repo: string)\r\n```"", 'comment_created': datetime.datetime(2020, 8, 6, 19, 48, 6, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 466648329, 'comment_body': ""Let's use an npm package for this (I'm sure it exists!) instead of bringing this complexity into our codebase."", 'comment_created': datetime.datetime(2020, 8, 6, 19, 49, 12, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 467495112, 'comment_body': ""Let's make this two explicit invocations.\r\n\r\n```\r\nconst commit = await octo.git.createCommit();\r\nreturn commit.data;\r\n```"", 'comment_created': datetime.datetime(2020, 8, 8, 19, 11, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 467495198, 'comment_body': ""Assign this mode to a constant so there's no magic numbers in the code."", 'comment_created': datetime.datetime(2020, 8, 8, 19, 12, 15, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 468242102, 'comment_body': ""Sure, but what's the benefit of doing that? "", 'comment_created': datetime.datetime(2020, 8, 10, 23, 34, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}, {'comment_id': 468242691, 'comment_body': 'Clearer to read.', 'comment_created': datetime.datetime(2020, 8, 10, 23, 35, 46, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}]","[{'commit_sha': '5f15c4d7d76a335d2e7369bec468e937625d6e62', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5a92380a629fd6bf800b95e99d698575ca73f8d', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b47668b93784f3ba15f04141a18e4754d28cb69', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02ca539d36f3bc3b6c942c1cadba0d0dc0669d91', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41889a702831c6df98f6404c2f58e3d0e3cc89a3', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca2117560643ca76df563a161f77fbef952bab3d', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c966aa045c63ca3972b4ad82d5f73009b3fc531e', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76094626f356d9d68febc5e56890973ce47d7cbb', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ffd276253162f0226ab08bcf2857b20e141b266', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}]",Raman Tehlan,29037312,ramantehlan@gmail.com,User,,61,,2,87
464783412,[nteract/web] Replace routes with query,This PR adds the query to the main page instead of routes to working with repo details.,True,5251,https://api.github.com/repos/nteract/nteract/pulls/5251,https://github.com/nteract/nteract/pull/5251,closed,18,19,2,5,3,2,1,1,[{'name': 'app:web'}],2020-08-07 19:33:45+00:00,2020-08-11 00:04:24+00:00,275439.0,"3 days, 4:30:39","[{'comment_id': 467496229, 'comment_body': 'Nit: You probably want the `e.preventDefault()` at the top of the function here.', 'comment_created': datetime.datetime(2020, 8, 8, 19, 24, 57, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 467496278, 'comment_body': ""If we're no longer using `getPath` can we remove it from our sources?"", 'comment_created': datetime.datetime(2020, 8, 8, 19, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}]","[{'commit_sha': '658fb64fbe8ea296b44593ff006234c2b3f80e11', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8e35f3422cd71be1a2feaa057067238f5c423fd', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd87678ce365783b26e0721368d99319eed006b2e', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47283baa9dacb57ae1978f645040d97d811639f9', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf6b964bc5fbd94a7bf34c8be72e2d6a38e6ccb2', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}]",Raman Tehlan,29037312,ramantehlan@gmail.com,User,,61,,2,87
468260177,[nteract/web] Clean Code | Fix Formatting,This PR is to fix formatting of the code and add useful information for developers to work with nteract/web project. ,True,5261,https://api.github.com/repos/nteract/nteract/pulls/5261,https://github.com/nteract/nteract/pull/5261,closed,869,885,25,3,0,0,1,1,[{'name': 'app:web'}],2020-08-15 04:47:35+00:00,2020-08-16 23:35:36+00:00,154081.0,"1 day, 18:48:01",[],"[{'commit_sha': '994e60fdb409129c04e28b8d9cd14f30793aa013', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '142de45928b686b55ce0b8e26d26937780045865', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '051bf949c210014081994aa4bf5697fe3f2189dd', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}]",Raman Tehlan,29037312,ramantehlan@gmail.com,User,,61,,2,87
465792979,[nteract/web] Add notebook component and wrap up for beta and GSoC.,"
![ss](https://user-images.githubusercontent.com/29037312/92236832-db1f6780-eed3-11ea-9017-cb46afb91c36.png)



This PR is to finish adding all the tasks required to launch it as beta and wrap up the GSoC period. 

### UI/UX Integration
The list of components that needs to be created and added is given below, more might be added later:

- [x] Layout
- [x] BinderMenu
- [x] Input
- [x] Menu
- [x] Button 
- [x] Avatar
- [x] Dialog
- [x] Landing Page
- [x] Auth page
- [x] Editor `Using @nteract/editor | Later we can use @nteract/monaco-editor `
- [x] Console
- [x] FileExplorer
- [x] Notification `Using new component | Later we can use nteract legacy lib`
- [x] Notebook rendering.

### Github Integration
This PR will also allow OAuth authentication with Github, and fetch user public info. 

- [x] Complete authentication
- [x] Fetch user's public info
- [x] Fetch public files and folders 
- [x] List and create a fork for repo
- [x] Save back changes to the repo or the fork 

### MyBinder Integration
- [x] Launch MyBinder instance on start.
- [x] Communicate with JupyterServer. Fetch info like sessions etc.
- [x] Execute the command on MyBinder instance
- [x] Fetch content from Github and not jupyter server.
- [x] Save back changes done to the notebook.

",True,5257,https://api.github.com/repos/nteract/nteract/pulls/5257,https://github.com/nteract/nteract/pull/5257,closed,661,355,14,40,30,16,1,1,[{'name': 'app:web'}],2020-08-11 00:12:51+00:00,2020-09-27 17:02:48+00:00,4121397.0,"47 days, 16:49:57","[{'comment_id': 484134913, 'comment_body': ""Is there a reason for this change? For consistency with the other components in this package, we should keep this as a class component (or make all the others functional components but that's a bigger change)."", 'comment_created': datetime.datetime(2020, 9, 7, 0, 30, 43, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 484134951, 'comment_body': 'Good catch!', 'comment_created': datetime.datetime(2020, 9, 7, 0, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 484135002, 'comment_body': 'Remove this `console.log`.', 'comment_created': datetime.datetime(2020, 9, 7, 0, 31, 19, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 484135272, 'comment_body': 'Any reason for this rename? The previous naming scheme is a lot clearer.', 'comment_created': datetime.datetime(2020, 9, 7, 0, 33, 24, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 484135321, 'comment_body': 'See above about maintaining the `Input` naming here. If there is a conflict with another component consider something more descriptive instead of an abbreviation.', 'comment_created': datetime.datetime(2020, 9, 7, 0, 34, 1, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 484135539, 'comment_body': 'We don\'t have to prefix the API with `gh` here. Since all these APIs are under the github file, they can all be used under the same namespace. Such as:\r\n\r\n```\r\nimport * as gh from ""./github"";\r\n\r\ngh.listForks();\r\n```', 'comment_created': datetime.datetime(2020, 9, 7, 0, 35, 42, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 484135698, 'comment_body': 'Run formatting over this file.', 'comment_created': datetime.datetime(2020, 9, 7, 0, 36, 59, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 484135915, 'comment_body': ""I don't think you need this as there's no bitwise logic in the next line."", 'comment_created': datetime.datetime(2020, 9, 7, 0, 39, 3, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 484137458, 'comment_body': ""You don't need all the render fragments here.\r\n\r\n```\r\nif (contentFlag) {\r\n  return <NotebookApp contentRef={contentRef} />\r\n}\r\n```"", 'comment_created': datetime.datetime(2020, 9, 7, 0, 50, 46, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 484137745, 'comment_body': 'Nit: Remove this.', 'comment_created': datetime.datetime(2020, 9, 7, 0, 53, 8, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 484138101, 'comment_body': 'We try to avoid the `moment`dependency in the codebase since it is quite large. Based on the usage here, you can use the standard `Date` object here and some string formatting. Take a look at the example in [this status bar](https://github.com/nteract/nteract/blob/main/packages/notebook-app-component/src/derived-components/status-bar.tsx) which takes advantage of a smaller library.', 'comment_created': datetime.datetime(2020, 9, 7, 0, 55, 58, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 484138238, 'comment_body': 'This can be properly typed. You probably want the type `ContentRecord` here.', 'comment_created': datetime.datetime(2020, 9, 7, 0, 56, 57, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 484138287, 'comment_body': 'Type this as well. You can find the type in the next/router package.', 'comment_created': datetime.datetime(2020, 9, 7, 0, 57, 21, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 484138546, 'comment_body': 'Nit: Can condense this if-statement into a single message?', 'comment_created': datetime.datetime(2020, 9, 7, 0, 59, 10, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 484138725, 'comment_body': 'Nit: use `previousProvider` instead of `providerP` here fo more clarity.', 'comment_created': datetime.datetime(2020, 9, 7, 1, 0, 25, tzinfo=datetime.timezone.utc), 'commenter': 'captainsafia', 'type': 'User'}, {'comment_id': 484878815, 'comment_body': ""It's a big task, which can be achieved in different PR. so I will keep it as a class component. \r\n"", 'comment_created': datetime.datetime(2020, 9, 8, 12, 32, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ramantehlan', 'type': 'User'}]","[{'commit_sha': '4f43f98a16f68ac6c281a8a5a52c92d155c20b87', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4920e5717fefe77a310f77738e03dc534415272', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b502d836af8e1c60932e28467ba2e337aa292fb', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bfece1b4854c61154421d641630d480f344e143', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24072fb946b81dc26b6e9b82a59b956eeede1dfa', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30de7676c40a84a56af27900c09652110356b5cd', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3df7d4b6db0e4afbbe3a141e4b35aa18d2f5bd1', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ed4ca28ffc47f00527f1ddafa91173f1b4e045d', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ba8b89488cc2a95349dbf6b910b6b8b1e751b25', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '585dd8cb94de3881a209e4fd6f2d54b4eb92d3d2', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c121e58f93c1fcc347443883b25bb67179834c51', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf15afd07ecc83eaef51d9505776defca499d6b6', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc7d2cf4e9efb07276d35e111537b874528de569', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac96384a1797d915c167fffe8686741f83091069', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29ffa0b2728d93c89a29fa7e29d9d9ce9650107a', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '499a216ba1dd3ee600c5d2e37cedddf0856c0411', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36c6f79087acda55f9c59870b6e2cbb5581cc739', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1d67a1c278467d99de191ded3e75834565e22ae', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '979b46821462a963047b99415f14db6f2a11c0ef', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd296d44f0f2ef8eeaee69a28e048862626644b70', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da2be777fbddb242b6e21565fd179c55d3b85294', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2d0abc6c88472c2b9ac3e324d973a9aeceac50b', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef569ee0353a01ca45d02a71073b1ca8b7dbfbfa', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af7293d5b7b6c3aa9078b9ea47635b1b7c31cac6', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef1b2e7b9bf771e901034369fc6f0a66bafac32f', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '429d523f396e7b060662bcf14f2263b04804c4a2', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '394494a6bb323fce2387dfd6d52bb2beb2a3c52f', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a01643c696929b69e2bf88add3d71c5a2a735212', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '621748714279c7074469c2e9768a1924ad49f9a6', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bd1022fe3ec40984aa53e55df23f75fc6a9209c', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '637a7097121e1fac2d0f9c5f36f47570124ecec4', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15fa6e4a06fefe4ce44c3580d6f0b78f75aee2b5', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f61edcf5843821141d7939ac077ef15847c4f858', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '687a5745d8f8d4e8dddb97442c133c9dc084194b', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1731b1a73ac09dfa5d9e754e0622cfc0b6f9516', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81c1b1e99d41050ade39c43bc11c73d3639057a5', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7900efd1e1ef97b8e97a9e50249d6daed1db2643', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f7a8d7df403e584f3f17c6f53f72381e415d5f6', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd7c305d47af21f4335a7bdc0e12f7ea00aa804f', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee80a60fb1256e5576f16b19a09f526b4247a5f4', 'committer_username': 'ramantehlan', 'committer_name': 'Raman Tehlan', 'committer_email': 'ramantehlan@gmail.com', 'commit_date': datetime.datetime(2017, 5, 29, 9, 28, 13, tzinfo=datetime.timezone.utc)}]",Raman Tehlan,29037312,ramantehlan@gmail.com,User,,61,,2,87

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
37496521,nteract,nteract/nteract,TypeScript,553,6192,149,180,11273,192,137,25,"[{'id': 533266973, 'number': 5397, 'closed': None, 'created': datetime.datetime(2020, 12, 6, 21, 8, 47, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 857, 'deletions': 327, 'state': 'open'}, {'id': 468260177, 'number': 5261, 'closed': datetime.datetime(2020, 8, 16, 23, 35, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 15, 4, 47, 35, tzinfo=datetime.timezone.utc), 'time_taken': 154081.0, 'time_delta': '1 day, 18:48:01', 'additions': 869, 'deletions': 885, 'state': 'closed'}, {'id': 465792979, 'number': 5257, 'closed': datetime.datetime(2020, 9, 27, 17, 2, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 11, 0, 12, 51, tzinfo=datetime.timezone.utc), 'time_taken': 4121397.0, 'time_delta': '47 days, 16:49:57', 'additions': 661, 'deletions': 355, 'state': 'closed'}, {'id': 464783412, 'number': 5251, 'closed': datetime.datetime(2020, 8, 11, 0, 4, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 7, 19, 33, 45, tzinfo=datetime.timezone.utc), 'time_taken': 275439.0, 'time_delta': '3 days, 4:30:39', 'additions': 18, 'deletions': 19, 'state': 'closed'}, {'id': 463666236, 'number': 5249, 'closed': datetime.datetime(2020, 8, 10, 23, 43, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 5, 22, 4, tzinfo=datetime.timezone.utc), 'time_taken': 437985.0, 'time_delta': '5 days, 1:39:45', 'additions': 246, 'deletions': 278, 'state': 'closed'}, {'id': 463605174, 'number': 5246, 'closed': datetime.datetime(2020, 8, 8, 10, 30, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 5, 19, 45, 27, tzinfo=datetime.timezone.utc), 'time_taken': 225903.0, 'time_delta': '2 days, 14:45:03', 'additions': 71, 'deletions': 9, 'state': 'closed'}, {'id': 459444903, 'number': 5240, 'closed': datetime.datetime(2020, 8, 5, 19, 55, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 30, 17, 47, 3, tzinfo=datetime.timezone.utc), 'time_taken': 526114.0, 'time_delta': '6 days, 2:08:34', 'additions': 327, 'deletions': 95, 'state': 'closed'}, {'id': 436846098, 'number': 5167, 'closed': datetime.datetime(2020, 7, 25, 20, 41, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 19, 2, 1, 50, tzinfo=datetime.timezone.utc), 'time_taken': 3177594.0, 'time_delta': '36 days, 18:39:54', 'additions': 1817, 'deletions': 824, 'state': 'closed'}, {'id': 386433865, 'number': 4984, 'closed': datetime.datetime(2020, 3, 11, 16, 12, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 11, 1, 5, 13, tzinfo=datetime.timezone.utc), 'time_taken': 54444.0, 'time_delta': '15:07:24', 'additions': 9, 'deletions': 1, 'state': 'closed'}, {'id': 386156763, 'number': 4982, 'closed': datetime.datetime(2020, 3, 10, 21, 54, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 10, 14, 11, 24, tzinfo=datetime.timezone.utc), 'time_taken': 27804.0, 'time_delta': '7:43:24', 'additions': 11, 'deletions': 0, 'state': 'closed'}, {'id': 381560344, 'number': 4966, 'closed': datetime.datetime(2020, 4, 9, 5, 23, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 28, 19, 37, 32, tzinfo=datetime.timezone.utc), 'time_taken': 3491154.0, 'time_delta': '40 days, 9:45:54', 'additions': 834, 'deletions': 103, 'state': 'closed'}, {'id': 378625570, 'number': 4947, 'closed': datetime.datetime(2020, 3, 6, 18, 50, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 22, 19, 53, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1119389.0, 'time_delta': '12 days, 22:56:29', 'additions': 60, 'deletions': 1, 'state': 'closed'}, {'id': 378536646, 'number': 4946, 'closed': datetime.datetime(2020, 3, 5, 22, 13, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 22, 1, 48, 16, tzinfo=datetime.timezone.utc), 'time_taken': 1110325.0, 'time_delta': '12 days, 20:25:25', 'additions': 12, 'deletions': 5, 'state': 'closed'}, {'id': 377538212, 'number': 4938, 'closed': datetime.datetime(2020, 2, 27, 16, 40, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 20, 4, 6, 31, tzinfo=datetime.timezone.utc), 'time_taken': 650024.0, 'time_delta': '7 days, 12:33:44', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 373461646, 'number': 4920, 'closed': datetime.datetime(2020, 2, 19, 23, 43, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 11, 3, 50, 37, tzinfo=datetime.timezone.utc), 'time_taken': 762802.0, 'time_delta': '8 days, 19:53:22', 'additions': 9, 'deletions': 14, 'state': 'closed'}]"
