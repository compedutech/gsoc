pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
674857228,Read receipts,"<!-- What's this PR for?  (Just a link to an issue is fine.) -->
#3618
",True,18935,https://api.github.com/repos/zulip/zulip/pulls/18935,https://github.com/zulip/zulip/pull/18935,closed,690,11,26,4,17,43,2,0,"[{'name': 'size: XL'}, {'name': 'integration review'}]",2021-06-21 20:28:20+00:00,2022-08-12 20:16:35+00:00,36028095.0,"416 days, 23:48:15","[{'comment_id': 655777051, 'comment_body': 'How did you confirm that this works with the partial indexes?  It seems very possible to me that it does not and we need to create an index for this purpose.\r\n\r\nOh, I see this comment is copied.  I would expect this to not have a good index.', 'comment_created': datetime.datetime(2021, 6, 21, 23, 44, 42, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 655777576, 'comment_body': ""That said, I don't think we need an index for this operation -- we're fetching with a given `message_id`, which does have a nice index, and it's fine to scan all the matches.  So I think we should just replace the comment with one warning that this operation likely does not have an index, so should only be used for queries where another good index is already used."", 'comment_created': datetime.datetime(2021, 6, 21, 23, 46, 6, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 655777911, 'comment_body': ""This looks about right to me!  I think we might need additional filtering to exclude deactivated users; I think that a UX question I don't understand clearly."", 'comment_created': datetime.datetime(2021, 6, 21, 23, 47, 10, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 655778447, 'comment_body': 'This should be something like `GET /message/{message_id}/read_receipts`, to follow `REST` conventions.', 'comment_created': datetime.datetime(2021, 6, 21, 23, 48, 36, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 655779401, 'comment_body': ""I think `show_read_indicators` is probably a better name.\r\n\r\nI'd also consider clarifying the interface between this and `read_indicators.js`, to try to do the `rows.js` logic here only."", 'comment_created': datetime.datetime(2021, 6, 21, 23, 51, 28, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 656516693, 'comment_body': ""I'm confused about excluding deactivated users. Since their read activity was before their deactivation, we may have to show their read receipts too. Like we presumably show deactivated users' mentions in messages before their account deactivation.\r\n\r\n"", 'comment_created': datetime.datetime(2021, 6, 22, 19, 24, 53, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 656516893, 'comment_body': ""Oh, I'm not very familiar with partial indices. I thought this would be the same as `where_unread`, and got the comment from it. Will change the comment and spend a bit of time reading about partial indices. Thanks! :slightly_smiling_face: "", 'comment_created': datetime.datetime(2021, 6, 22, 19, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 663542174, 'comment_body': ""Did this in a different commit to make it easier to remove in case we decide we don't want to filter."", 'comment_created': datetime.datetime(2021, 7, 4, 18, 45, 49, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 663542406, 'comment_body': 'Changed to `show_read_receipts` and moved the `rows.js` logic to this.', 'comment_created': datetime.datetime(2021, 7, 4, 18, 47, 58, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 663542566, 'comment_body': ""Ok, changed. Thanks, didn't know."", 'comment_created': datetime.datetime(2021, 7, 4, 18, 49, 1, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 663542639, 'comment_body': ""Changed the comment to\r\n```\r\n        # It is likely that this operation doesn't have an index. So,\r\n        # use this only for queries where another good index is present."", 'comment_created': datetime.datetime(2021, 7, 4, 18, 49, 45, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 663549076, 'comment_body': ""I'll try to add tests and remove this. Any ideas on how to test the logic in `read_receipts.js` would be very helpful."", 'comment_created': datetime.datetime(2021, 7, 4, 19, 52, 22, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 842249244, 'comment_body': 'I merged this first commit as fa563c34c805e3f573704a3e0029dc1055d2115c.', 'comment_created': datetime.datetime(2022, 4, 5, 0, 56, 25, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 848792479, 'comment_body': ""What's the thinking behind excluding bots here? I'm not sure it's likely that bots would be returned by the API in question at all."", 'comment_created': datetime.datetime(2022, 4, 12, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 848794999, 'comment_body': ""What's the thinking behind this compressed data structure?\r\n\r\nWe may in the future want to add support for clicking on a name in this widget open that user's basic profile popover to get more information on the user, so we're likely to want to include the `user_id`, but it seems like we could just skip this step entirely?"", 'comment_created': datetime.datetime(2022, 4, 12, 19, 24, 6, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 848795244, 'comment_body': ""What's the thinking behind doing this vs. having a `data-simplebar` declaration in the modal itself?"", 'comment_created': datetime.datetime(2022, 4, 12, 19, 24, 26, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 848885767, 'comment_body': 'Comments should be on their own line. Also, we should exclude the sender too, right?  \r\n', 'comment_created': datetime.datetime(2022, 4, 12, 21, 30, 30, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 848894966, 'comment_body': 'We likely want to exclude any rows with `UserMessage.flags.historical` set, since those will be cases where the user with said flag was not a recipient of the message at the time it was sent.', 'comment_created': datetime.datetime(2022, 4, 12, 21, 40, 48, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 851084182, 'comment_body': ""I'm removing this`filter` in the next revision since we are excluding the author in the API itself and [want](https://chat.zulip.org/#narrow/stream/378-api-design/topic/read.20receipts/near/1365286) to display the current user."", 'comment_created': datetime.datetime(2022, 4, 15, 6, 21, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 851100673, 'comment_body': ""It might look like a bug when a user has reacted to a message thus creating a `UserMessage` with `historical` flag but do not appear in read receipts.\r\n\r\nFor now, I didn't commit any changes in this respect thinking it might need some discussion. If we did want to exclude these, is it correct to use: `.exclude(flags=UserMessage.flags.historical)`?"", 'comment_created': datetime.datetime(2022, 4, 15, 7, 5, 9, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 851116100, 'comment_body': ""We were excluding the sender... Maybe you meant current user? But we don't need to exclude either one -- sender is now excluded in the API; we [want](https://chat.zulip.org/#narrow/stream/378-api-design/topic/read.20receipts/near/1365286) to show current user."", 'comment_created': datetime.datetime(2022, 4, 15, 7, 31, 41, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 851118288, 'comment_body': 'Continued this discussion about bots at https://chat.zulip.org/#narrow/stream/378-api-design/topic/read.20receipts/near/1365694', 'comment_created': datetime.datetime(2022, 4, 15, 7, 36, 23, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 851118348, 'comment_body': 'Not sure how I ended up with this compressed data structure. Makes most sense to just skip this step. Removed this part of the code.', 'comment_created': datetime.datetime(2022, 4, 15, 7, 36, 33, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 851148463, 'comment_body': ""We are adding the read receipts list after the modal has been created. Using `data-simplebar` declaration in the modal itself would render all the simplebar specific wrappers before we fetch and render read receipts.\r\n\r\nUsing `.append` to add read receipts list in the above code is adding the list as a sibling element to the simplebar wrapper. We might work around that with help of some CSS selectors specific to simplebar but I'm afraid they might change later. And this feels a bit clean."", 'comment_created': datetime.datetime(2022, 4, 15, 8, 36, 35, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 851189456, 'comment_body': ""If we decide to exclude bots, I think we are going to do it in the backend. So, I've removed this here."", 'comment_created': datetime.datetime(2022, 4, 15, 10, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 851821404, 'comment_body': 'Yep, thanks!', 'comment_created': datetime.datetime(2022, 4, 18, 0, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 852371746, 'comment_body': ""Yes, we should make this change. I think that's how `django-bitfield` works, but worth checking its documentation."", 'comment_created': datetime.datetime(2022, 4, 18, 19, 57, 4, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 852372141, 'comment_body': 'Also, please extend one of the tests to cover this case, as well as the excluding the message sender in the API response.\r\n\r\n(Possibly just extending an existing test with more setup).', 'comment_created': datetime.datetime(2022, 4, 18, 19, 57, 40, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 852372318, 'comment_body': ""Yeah, we've settled on just excluding the sender in the API, and nothing here, thanks for confirming."", 'comment_created': datetime.datetime(2022, 4, 18, 19, 57, 59, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 852373779, 'comment_body': ""OK I guess the point is that we're rendering an empty modal while waiting for the network response. I think that's OK, but we should use `loading.js` to add a loading indicator while waiting for the server to return the data.\r\n\r\n@ganpa3 or @sahil839 can help if you need it, but I think it's a pretty simple library."", 'comment_created': datetime.datetime(2022, 4, 18, 20, 0, 19, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 852374302, 'comment_body': 'Sounds good!', 'comment_created': datetime.datetime(2022, 4, 18, 20, 1, 4, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 852374417, 'comment_body': 'Sounds good.', 'comment_created': datetime.datetime(2022, 4, 18, 20, 1, 16, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 852410268, 'comment_body': 'I decided this felt cleaner than the `F` query, though forgot to remove the import.', 'comment_created': datetime.datetime(2022, 4, 18, 20, 57, 36, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 852954612, 'comment_body': 'We [have a loading indicator](https://github.com/zulip/zulip/pull/18935/commits/42b86dd522f2f92fb3f3bb835479389294141f96#diff-2a478878505fa314bc9821ae5e3b5ac0bdaccf1b76ee3864ac9b69905858d3daR19) already. Do you mean something else? :thinking: ', 'comment_created': datetime.datetime(2022, 4, 19, 11, 49, 24, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 855093976, 'comment_body': 'Yeah, added that change. I came up with that `.exclude(flags=UserMessage.flags.historical)` looking at `django-bitfield` docs but was confused by us using `where_unread` etc and was wondering if we should be doing something like that.\r\n\r\nFor tests, added `test_historical_usermessages_read_flag_isnt_considered` taking advantage of reactions to create a historical `UserMessage`. Could you check if it looks right?\r\n\r\nExcluding message sender case was already covered in the last lines of `test_stream_message` and `test_personal_message`.', 'comment_created': datetime.datetime(2022, 4, 21, 11, 40, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 855099444, 'comment_body': ""Agreed it's a lot cleaner. Removed the `F` import."", 'comment_created': datetime.datetime(2022, 4, 21, 11, 47, 17, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 856617383, 'comment_body': 'I think this is probably moot, because we seem to have decided to not filter historical anyway :). We should keep the test though, just change which result it is expecting.', 'comment_created': datetime.datetime(2022, 4, 22, 22, 38, 43, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 856617551, 'comment_body': 'The link got broken due to rebase; where does the loading indicator appear?', 'comment_created': datetime.datetime(2022, 4, 22, 22, 39, 17, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 857056298, 'comment_body': 'It appears like this while it waits for fetching read receipts\r\n\r\n![image](https://user-images.githubusercontent.com/44665669/164953563-a041b611-a6ba-4fcf-a2fe-7323e395b88b.png)\r\n', 'comment_created': datetime.datetime(2022, 4, 24, 2, 33, 10, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 857058261, 'comment_body': 'I guess it doesn\'t make much sense to show ""This message has been...."" line especially now that we want to show number of people who read the message. Not it\'d just look like \r\n![image](https://user-images.githubusercontent.com/44665669/164954303-67ef8d6b-3c45-4d1e-a1fd-72e358b72aee.png)\r\n', 'comment_created': datetime.datetime(2022, 4, 24, 3, 0, 10, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 858124860, 'comment_body': 'This should be hidden for spectators, who have no access to the relevant API endpoint. I think this can be done by just adding `class=""hidden-for-spectators""` to the `li` element.', 'comment_created': datetime.datetime(2022, 4, 26, 0, 32, 22, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 858125005, 'comment_body': 'Yeah, the second screenshot is much nicer.', 'comment_created': datetime.datetime(2022, 4, 26, 0, 32, 50, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 858356955, 'comment_body': 'Added this class.', 'comment_created': datetime.datetime(2022, 4, 26, 7, 9, 47, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}]","[{'commit_sha': '652da02b74da7f824aec30994d1ffe885bba5b51', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbef03eb1bc1a4de11f3134a493dc68b14c9ba6e', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05cabc8a241070fdbaa6cc83f9ad7840a52dbc0a', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13041e03935775697d5aa511bb7c1a5dbbca627e', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}]",Dinesh Ch,44665669,,User,,29,,19,20
552906892,Add typing indicators for streams.,"Fixes #11152

This is almost done. Things left to be done are

- [x] Fix and add few frontend tests.
- [x] Document the new arguments `stream_id` and `topic` for `api/v1/typing` in `zerver/openapi/zulip.yaml`.
- [x] Send typing notification only if the topic already exists as we want to show typing notification only in a topic narrow.

Sending a request to streams with 0 or 1 subscriber(only sender) won't throw any error. Do we want to return any error for that?

",False,17040,https://api.github.com/repos/zulip/zulip/pulls/17040,https://github.com/zulip/zulip/pull/17040,closed,302,79,13,6,24,50,4,0,"[{'name': 'size: XL'}, {'name': 'has conflicts'}, {'name': 'post release'}, {'name': 'chat.zulip.org review'}]",2021-01-11 17:41:02+00:00,2023-09-28 21:40:20+00:00,85550358.0,"990 days, 3:59:18","[{'comment_id': 555318753, 'comment_body': ""I would prefer to just have a separate action function for stream notifications, so that you don't need the optional parameters and the conditional logic.  Two simple functions are better than one complex one, and we're not really sharing any useful logic here.\r\n\r\nI would also consider just having a new `type` (no pun intended) for the event with the value `stream_typing`, so that the documentation piece is easier here (again, no Union types would be needed)."", 'comment_created': datetime.datetime(2021, 1, 11, 20, 29, 43, tzinfo=datetime.timezone.utc), 'commenter': 'showell', 'type': 'User'}, {'comment_id': 563624308, 'comment_body': ""Yes, having a different type would make it simpler and separating the function will make it seem less complex. Will make the required changes.\r\n\r\n(Thought I'd make the changes and ask for another review soon but not I'm getting a chance to work on this as most of my time is going into academics. Leaving an update since it's been 2weeks..:)"", 'comment_created': datetime.datetime(2021, 1, 25, 10, 43, 23, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 565572114, 'comment_body': 'I think this should probably be the same error message as the previous one, to avoid making our translators do extra strings for no reason.', 'comment_created': datetime.datetime(2021, 1, 27, 19, 21, 33, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 565573242, 'comment_body': ""Let's use the `access_stream_...` methods, called from the view function -- that's our standard approach to security.\r\n\r\nI think it's also wise to do a preparatory refactoring commit to move the `start|stop` validation into the view function -- I think you can do it in `REQ` with `check_string_in`."", 'comment_created': datetime.datetime(2021, 1, 27, 19, 23, 25, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 565574091, 'comment_body': 'Yeah, I think the separate function makes sense, with a bit of preparatory refactoring to avoid duplicating code.', 'comment_created': datetime.datetime(2021, 1, 27, 19, 24, 51, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 574000628, 'comment_body': ""Separated the function. There wasn't much duplicate code. \r\n\r\nAlso added `type` `stream_typing`."", 'comment_created': datetime.datetime(2021, 2, 10, 19, 8, 47, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 574000832, 'comment_body': ""Changed to do validation using `access_stream_by_id`.\r\n\r\nYes, It can be done using `REQ` with `check_string_in`. Added a preparatory commit. One thing to notice here is doing it in `REQ` would raise error just saying `Invalid op`but we'll miss the verbose error `Invalid 'op' value (should be start or stop` we were returning."", 'comment_created': datetime.datetime(2021, 2, 10, 19, 9, 2, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 574001092, 'comment_body': 'Changed all errors regarding this to ""Bad arguments. Should have \'to\' or both \'stream_id\' and \'topic\'.""', 'comment_created': datetime.datetime(2021, 2, 10, 19, 9, 15, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 575826465, 'comment_body': 'Perhaps it would  be cleaner to write this somewhat like this?\r\n```\r\n    if any([\r\n        notification_to and (to_stream or to_topic),\r\n        not notification_to and not(to_stream and to_topic)\r\n    ]):\r\n        return json_error(bad_arguments_error)\r\n\r\n    if notification_to:\r\n        check_send_typing_notification(user_profile, notification_to, operator)\r\n    else:\r\n        check_send_stream_typing_notification(user_profile, operator, to_stream, to_topic)\r\n```', 'comment_created': datetime.datetime(2021, 2, 14, 15, 46, 34, tzinfo=datetime.timezone.utc), 'commenter': 'mateuszmandera', 'type': 'User'}, {'comment_id': 579703271, 'comment_body': ""I haven't added/modified tests here as it's intended to test `typing_status.js` to which this PR makes no changes. But we make use of this module to send start/stop requests from client which only extends the possible values for `status.current_recipient` to also be an object consisting `stream_id` and `topic`. since we only check if current recipient is equal to previous recipient, adding tests to include recipient format of object:`stream_id, topic` will be redundant and won't add much value I think.\r\n\r\nWill add few tests to also include that format for `current_recipient` if you think it's necessary."", 'comment_created': datetime.datetime(2021, 2, 20, 20, 12, 16, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 593954771, 'comment_body': 'Added this space(and below) intentionally to make it look good in API docs with each of start, stop separated as a different chunk.', 'comment_created': datetime.datetime(2021, 3, 14, 20, 17, 16, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 605729553, 'comment_body': 'I don\'t think this last change is correct or necessary -- one can narrow to a topic that doesn\'t exist, and if you do so at the same time as another user who is typing a message to that proposed new topic (E.g. someone said ""Let\'s continue here"" with a link), not adding this check will result in typing notifications working for those users.\r\n\r\n(Well, we\'d need to test the display UI in the empty narrow view for the topic, but that\'s it).', 'comment_created': datetime.datetime(2021, 4, 1, 15, 2, 37, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 605730233, 'comment_body': 'This string should be tagged for translation.  \r\n\r\nThough I think cleaner would be to just move this conditional into the HTML template rendered by `render_typing_notifications`.', 'comment_created': datetime.datetime(2021, 4, 1, 15, 3, 36, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 605731787, 'comment_body': ""This refactor to the `update_typist_dct` interface would be nice if extracted as a prep commit.\r\n\r\nI'd also call this `set_typing_state(key, typist)`."", 'comment_created': datetime.datetime(2021, 4, 1, 15, 5, 38, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 605732956, 'comment_body': ""We're going to want this to be a `get_topic_key(stream_id, topic)` -- topics are case-insensitive, and we'll want to implement that in only one place."", 'comment_created': datetime.datetime(2021, 4, 1, 15, 7, 16, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 605733467, 'comment_body': ""I'm not sure you actually need to duplicate these functions -- can't we just have whatever is calling them fetch the key and call `kickstart_inbound_timer(key, delay, callback)`?"", 'comment_created': datetime.datetime(2021, 4, 1, 15, 7, 59, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 605755997, 'comment_body': 'I think if you clean up this commit, we can probably just merge this at the beginning of the branch as a small feature / refactoring.\r\n\r\nOh, and use the unicode `...` character; it looks nicer than 3 dots.', 'comment_created': datetime.datetime(2021, 4, 1, 15, 38, 23, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 605757414, 'comment_body': ""I don't think we need this function -- we should just do `access_stream_by_id` in the views code (as is our usual policy) and then pass the `Stream` object to `do_send_stream_typing_notification`. (which can then just access `stream.id`)."", 'comment_created': datetime.datetime(2021, 4, 1, 15, 40, 10, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 606786850, 'comment_body': ""We don't need a `Stream` object anywhere. `do_send_stream_typing_notification` just uses `stream_id`. Moving that `access_stream_by_id` check to the view function and removing this function."", 'comment_created': datetime.datetime(2021, 4, 4, 11, 17, 25, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 606847644, 'comment_body': ""Do you mean this: https://en.wikipedia.org/wiki/Ellipsis ? It seems to have the dots closer. `__user__ is typing...` too had 3 dots. That too should be changed I think?(perhaps in a different commit)\r\n\r\nSince I wasn't sure if you meant the ellipsis character and it looked odd to me, I left the that as three dots.\r\n\r\nI cleaned up the commit, moved the conditional to the `.hbs` template, and added it for translation."", 'comment_created': datetime.datetime(2021, 4, 4, 20, 3, 25, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 607295985, 'comment_body': 'Look like this in the empty narrow view: ![image](https://user-images.githubusercontent.com/44665669/113619636-db086580-9676-11eb-805c-4a7687b540a7.png)\r\n', 'comment_created': datetime.datetime(2021, 4, 5, 19, 55, 3, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 607296899, 'comment_body': ""`add_typist` works for both if `key` is extracted out. So we don't need this refactor now!"", 'comment_created': datetime.datetime(2021, 4, 5, 19, 56, 34, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 607297121, 'comment_body': 'Added a `get_topic_key` that does a `topic.toLowerCase()` and also rename `get_key` to `get_pms_key`.', 'comment_created': datetime.datetime(2021, 4, 5, 19, 56, 50, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 607298817, 'comment_body': ""Yes, agreed, that's a lot of duplication. Changed to fetch the key and call `kickstart_inbound_timer(key, delay, callback)` as suggested."", 'comment_created': datetime.datetime(2021, 4, 5, 19, 59, 6, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 608074322, 'comment_body': 'Replaced the 3-dots with the Unicode … character. It looked odd in the code editor, so I was confused. \r\n\r\nYes, the … character looks nicer :)\r\nComparison: (1st is unicode … char, and the second is our previous 3 dots.)\r\n![image](https://user-images.githubusercontent.com/44665669/113758314-529acb00-9731-11eb-95bc-3638f4324f44.png)\r\n', 'comment_created': datetime.datetime(2021, 4, 6, 18, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 608402925, 'comment_body': 'I think we can just have the example without text.', 'comment_created': datetime.datetime(2021, 4, 7, 7, 22, 58, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 608404569, 'comment_body': 'Should say ""Required for the ""stream"" type"" or something to that effect.', 'comment_created': datetime.datetime(2021, 4, 7, 7, 25, 43, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 608405422, 'comment_body': ""To what extent do these error strings match the errors the `send_message` API gives for the same parameter error?  Ideally, we'd try to match that to avoid making translators do extra work for this endpoint."", 'comment_created': datetime.datetime(2021, 4, 7, 7, 27, 3, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 608406352, 'comment_body': 'Can you do query count assertions in these new tests as well?  They are somewhat important given that this is a high-volume endpoint.', 'comment_created': datetime.datetime(2021, 4, 7, 7, 28, 21, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 608406958, 'comment_body': 'This is out of date, I think.', 'comment_created': datetime.datetime(2021, 4, 7, 7, 29, 17, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 608407429, 'comment_body': 'Is this comment intended to be here?', 'comment_created': datetime.datetime(2021, 4, 7, 7, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 608412904, 'comment_body': 'I\'d like to have this be a `typing` event, not a `stream_typing` event.  To do that, we need to do the following:\r\n* Reorder this branch so that the frontend work to at least make `server_events.js` not crash when seeing a `typing` event with a `stream_id` field in it and no `recipient_user_profiles` field will work.  (It can ignore them in that first commit).  \r\n* Add a new client_capability, called `stream_typing_notifications`, that is plumbed through exactly the same way that `bulk_message_deletion` is.  You can even do this as a new first commit (with it not having a functional effect in that commit, and then the main commit for typing indicators would just do that).\r\n* Then do this backend commit, with this line having `type=""typing""`, and logic in `zerver/tornado/event_queue.py` to use a `process_typing_event` little function that only adds the `typing` events that have a `stream_id` field in them if `client.stream_typing_notifications`.  It should let you simplify the API documentation changes as well.\r\n\r\nI think with that set of changes, I\'d be happy to merge this series through having the complete backend.', 'comment_created': datetime.datetime(2021, 4, 7, 7, 38, 27, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 608413903, 'comment_body': 's/msg/message/ -- we try to avoid using abberviations.', 'comment_created': datetime.datetime(2021, 4, 7, 7, 39, 57, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 608415545, 'comment_body': 'The `return null` might be better written as a `throw new Error(""Unexpected message type"");`', 'comment_created': datetime.datetime(2021, 4, 7, 7, 42, 22, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 608416510, 'comment_body': 'Can you add a comment on why this check will produce correct results?  It strikes me as a bit hacky.', 'comment_created': datetime.datetime(2021, 4, 7, 7, 43, 48, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 615426743, 'comment_body': 'Removed, was experimenting in the initial versions and forgot to remove.', 'comment_created': datetime.datetime(2021, 4, 18, 17, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 615426755, 'comment_body': ""The description now is:\r\n>Topic to which message is being typed. Required for the 'stream' type.\r\n            Ignored in case of 'private' type."", 'comment_created': datetime.datetime(2021, 4, 18, 17, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 615426777, 'comment_body': 'yes, changed.', 'comment_created': datetime.datetime(2021, 4, 18, 17, 6, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 615426890, 'comment_body': ""Sure, added those. It isn't clear to me how those help so I skipped them at the time of writing those thinking I'd ask about them later but forgot. Could you provide more data/ pointers to understand how query count assertions in tests help? \r\n\r\nTo make sure what I had done is right: I just checked the length of `queries` with a `print` and added an assert to that value. Is it what is to be done, or there's something else for me to do to make sure 12 queries are run?"", 'comment_created': datetime.datetime(2021, 4, 18, 17, 7, 29, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 615426960, 'comment_body': ""For the empty `to` list I think it'd be better to go with `Empty 'to' list` since the `send_message` says `Message must have recipients`(this might not be clear but will change to this if you think it's fine as it could let us make translators avoid extra work) for private and `Missing stream` for stream types(this should be OK, but we are having to write an extra string for private message case which will require translators work).\r\n\r\nChanged the other two to `Cannot send to multiple streams` and `Missing topic` which match with those of `send_message`."", 'comment_created': datetime.datetime(2021, 4, 18, 17, 7, 52, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 615427658, 'comment_body': 'Okay, changed. looks better now.', 'comment_created': datetime.datetime(2021, 4, 18, 17, 14, 28, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 615429548, 'comment_body': ""It could've been written better as:\r\n```\r\n        try {\r\n            JSON.parse(key);  // Key is a JSON string for streams typing\r\n        }\r\n        catch {\r\n            pms_typists = pms_typists.concat(typists);\r\n        }\r\n```\r\n\r\nChanged."", 'comment_created': datetime.datetime(2021, 4, 18, 17, 30, 43, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 615429785, 'comment_body': "" > logic in `zerver/tornado/event_queue.py` to use a `process_typing_event` little function that only adds the `typing` events that have a `stream_id` field in them if `client.stream_typing_notifications`.\r\n \r\n \r\n We could also tweak `accepts_event` return `False` in case of `stream_id` with `client.stream_typing_notifications` set to `False`. That seems better to me as `process_typing_event` does a bit of duplication from `process_event`. But for now I added `process_typing_event` as you suggested. I'd like to know what you think about the other approach and if there are any issues possible with that approach.\r\n \r\n\r\n"", 'comment_created': datetime.datetime(2021, 4, 18, 17, 33, 36, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 616284700, 'comment_body': 'Yeah, I think your `accepts_event` strategy is a better way to do this.', 'comment_created': datetime.datetime(2021, 4, 20, 1, 43, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 616284940, 'comment_body': ""Yeah, that's the right way to do it.  It's worth printing the queries once nicely one-per-line and pasting the result here, so we can confirm that we're not doing something obviously in a loop."", 'comment_created': datetime.datetime(2021, 4, 20, 1, 43, 45, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 616285264, 'comment_body': 'Cool; you might want the same in `send_typing_notification_based_on_message_type`?', 'comment_created': datetime.datetime(2021, 4, 20, 1, 44, 45, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 617007847, 'comment_body': ""Just realised that we do not need to throw any error in both cases:\r\n* The `return null` in case of `get_recipient` is intended. Getting the message type to be something else than private or stream means that we aren't talking to anybody and aren't interested in sending any updates to the server. That'll be taken care of by `typing_status.update` if we send it `null` through `get_recipient`.\r\n* I (previously) implemented `send_typing_notification_based_on_message_type` badly by using `compose_state.get_message_type()` to figure out `message_type`. This would lead to bugs. One such is when code in `typing_status` tells this function to send a stoped typing request to server, this will do nothing if the compose box was closed by user. It should instead use the existence of `stream_id` in `to`. \r\n\r\nMade the required changes in each case."", 'comment_created': datetime.datetime(2021, 4, 20, 20, 24, 24, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 617274642, 'comment_body': 'My previous code was inefficient in fetching users IDs. It was running a query of each user, just to get user ID. Changed it now to use an existing function `get_user_ids_for_streams`. \r\n\r\nThese are the queries: (Not sure why there\'s a client = Mobile query, I presume it\'s somehow related to `self.api_post` of tests)\r\n\r\n0 SELECT ""zerver_userprofile"".""id"", ""zerver_userprofile"".""password"", ""zerver_userprofile"".""last_login"", ""zerver_userprofile"".""is_superuser"", ""zerver_userprofile"".""delivery_email"", ""zerver_userprofile"".""email"", ""zerver_userprofile"".""realm_id"", ""zerver_userprofile"".""recipient_id"", ""zerver_userprofile"".""full_name"", ""zerver_userprofile"".""date_joined"", ""zerver_userprofile"".""tos_version"", ""zerver_userprofile"".""api_key"", ""zerver_userprofile"".""is_staff"", ""zerver_userprofile"".""is_active"", ""zerver_userprofile"".""is_billing_admin"", ""zerver_userprofile"".""is_bot"", ""zerver_userprofile"".""bot_type"", ""zerver_userprofile"".""bot_owner_id"", ""zerver_userprofile"".""role"", ""zerver_userprofile"".""long_term_idle"", ""zerver_userprofile"".""last_active_message_id"", ""zerver_userprofile"".""is_mirror_dummy"", ""zerver_userprofile"".""can_forge_sender"", ""zerver_userprofile"".""can_create_users"", ""zerver_userprofile"".""enable_stream_desktop_notifications"", ""zerver_userprofile"".""enable_stream_email_notifications"", ""zerver_userprofile"".""enable_stream_push_notifications"", ""zerver_userprofile"".""enable_stream_audible_notifications"", ""zerver_userprofile"".""notification_sound"", ""zerver_userprofile"".""wildcard_mentions_notify"", ""zerver_userprofile"".""enable_desktop_notifications"", ""zerver_userprofile"".""pm_content_in_desktop_notifications"", ""zerver_userprofile"".""enable_sounds"", ""zerver_userprofile"".""enable_offline_email_notifications"", ""zerver_userprofile"".""message_content_in_email_notifications"", ""zerver_userprofile"".""enable_offline_push_notifications"", ""zerver_userprofile"".""enable_online_push_notifications"", ""zerver_userprofile"".""desktop_icon_count_display"", ""zerver_userprofile"".""enable_digest_emails"", ""zerver_userprofile"".""enable_login_emails"", ""zerver_userprofile"".""realm_name_in_notifications"", ""zerver_userprofile"".""presence_enabled"", ""zerver_userprofile"".""last_reminder"", ""zerver_userprofile"".""rate_limits"", ""zerver_userprofile"".""default_sending_stream_id"", ""zerver_userprofile"".""default_events_register_stream_id"", ""zerver_userprofile"".""default_all_public_streams"", ""zerver_userprofile"".""enter_sends"", ""zerver_userprofile"".""left_side_userlist"", ""zerver_userprofile"".""default_language"", ""zerver_userprofile"".""default_view"", ""zerver_userprofile"".""dense_mode"", ""zerver_userprofile"".""fluid_layout_width"", ""zerver_userprofile"".""high_contrast_mode"", ""zerver_userprofile"".""translate_emoticons"", ""zerver_userprofile"".""twenty_four_hour_time"", ""zerver_userprofile"".""starred_message_counts"", ""zerver_userprofile"".""color_scheme"", ""zerver_userprofile"".""demote_inactive_streams"", ""zerver_userprofile"".""timezone"", ""zerver_userprofile"".""emojiset"", ""zerver_userprofile"".""avatar_source"", ""zerver_userprofile"".""avatar_version"", ""zerver_userprofile"".""avatar_hash"", ""zerver_userprofile"".""tutorial_status"", ""zerver_userprofile"".""onboarding_steps"", ""zerver_userprofile"".""zoom_token"", ""zerver_realm"".""id"", ""zerver_realm"".""name"", ""zerver_realm"".""description"", ""zerver_realm"".""string_id"", ""zerver_realm"".""date_created"", ""zerver_realm"".""deactivated"", ""zerver_realm"".""deactivated_redirect"", ""zerver_realm"".""emails_restricted_to_domains"", ""zerver_realm"".""invite_required"", ""zerver_realm"".""max_invites"", ""zerver_realm"".""disallow_disposable_email_addresses"", ""zerver_realm"".""authentication_methods"", ""zerver_realm"".""inline_image_preview"", ""zerver_realm"".""inline_url_embed_preview"", ""zerver_realm"".""digest_emails_enabled"", ""zerver_realm"".""digest_weekday"", ""zerver_realm"".""send_welcome_emails"", ""zerver_realm"".""message_content_allowed_in_email_notifications"", ""zerver_realm"".""mandatory_topics"", ""zerver_realm"".""add_emoji_by_admins_only"", ""zerver_realm"".""name_changes_disabled"", ""zerver_realm"".""email_changes_disabled"", ""zerver_realm"".""avatar_changes_disabled"", ""zerver_realm"".""create_stream_policy"", ""zerver_realm"".""invite_to_realm_policy"", ""zerver_realm"".""invite_to_stream_policy"", ""zerver_realm"".""move_messages_between_streams_policy"", ""zerver_realm"".""user_group_edit_policy"", ""zerver_realm"".""private_message_policy"", ""zerver_realm"".""wildcard_mention_policy"", ""zerver_realm"".""email_address_visibility"", ""zerver_realm"".""waiting_period_threshold"", ""zerver_realm"".""allow_message_deleting"", ""zerver_realm"".""message_content_delete_limit_seconds"", ""zerver_realm"".""allow_message_editing"", ""zerver_realm"".""message_content_edit_limit_seconds"", ""zerver_realm"".""allow_edit_history"", ""zerver_realm"".""allow_community_topic_editing"", ""zerver_realm"".""default_twenty_four_hour_time"", ""zerver_realm"".""default_language"", ""zerver_realm"".""notifications_stream_id"", ""zerver_realm"".""signup_notifications_stream_id"", ""zerver_realm"".""message_retention_days"", ""zerver_realm"".""message_visibility_limit"", ""zerver_realm"".""first_visible_message_id"", ""zerver_realm"".""org_type"", ""zerver_realm"".""plan_type"", ""zerver_realm"".""bot_creation_policy"", ""zerver_realm"".""upload_quota_gb"", ""zerver_realm"".""video_chat_provider"", ""zerver_realm"".""giphy_rating"", ""zerver_realm"".""default_code_block_language"", ""zerver_realm"".""icon_source"", ""zerver_realm"".""icon_version"", ""zerver_realm"".""logo_source"", ""zerver_realm"".""logo_version"", ""zerver_realm"".""night_logo_source"", ""zerver_realm"".""night_logo_version"" FROM ""zerver_userprofile"" INNER JOIN ""zerver_realm"" ON (""zerver_userprofile"".""realm_id"" = ""zerver_realm"".""id"") WHERE ""zerver_userprofile"".""api_key"" = \'B7mRHbe3e8yHJOOuBKk6cf5fWnO2Bsj6\' LIMIT 21\r\n\r\n1 SELECT ""zerver_client"".""id"", ""zerver_client"".""name"" FROM ""zerver_client"" WHERE ""zerver_client"".""name"" = \'ZulipMobile\' LIMIT 21\r\n\r\n2 SELECT ""zerver_stream"".""id"", ""zerver_stream"".""name"", ""zerver_stream"".""realm_id"", ""zerver_stream"".""date_created"", ""zerver_stream"".""deactivated"", ""zerver_stream"".""description"", ""zerver_stream"".""rendered_description"", ""zerver_stream"".""recipient_id"", ""zerver_stream"".""invite_only"", ""zerver_stream"".""history_public_to_subscribers"", ""zerver_stream"".""is_web_public"", ""zerver_stream"".""stream_post_policy"", ""zerver_stream"".""is_in_zephyr_realm"", ""zerver_stream"".""email_token"", ""zerver_stream"".""message_retention_days"", ""zerver_stream"".""first_message_id"", ""zerver_realm"".""id"", ""zerver_realm"".""name"", ""zerver_realm"".""description"", ""zerver_realm"".""string_id"", ""zerver_realm"".""date_created"", ""zerver_realm"".""deactivated"", ""zerver_realm"".""deactivated_redirect"", ""zerver_realm"".""emails_restricted_to_domains"", ""zerver_realm"".""invite_required"", ""zerver_realm"".""max_invites"", ""zerver_realm"".""disallow_disposable_email_addresses"", ""zerver_realm"".""authentication_methods"", ""zerver_realm"".""inline_image_preview"", ""zerver_realm"".""inline_url_embed_preview"", ""zerver_realm"".""digest_emails_enabled"", ""zerver_realm"".""digest_weekday"", ""zerver_realm"".""send_welcome_emails"", ""zerver_realm"".""message_content_allowed_in_email_notifications"", ""zerver_realm"".""mandatory_topics"", ""zerver_realm"".""add_emoji_by_admins_only"", ""zerver_realm"".""name_changes_disabled"", ""zerver_realm"".""email_changes_disabled"", ""zerver_realm"".""avatar_changes_disabled"", ""zerver_realm"".""create_stream_policy"", ""zerver_realm"".""invite_to_realm_policy"", ""zerver_realm"".""invite_to_stream_policy"", ""zerver_realm"".""move_messages_between_streams_policy"", ""zerver_realm"".""user_group_edit_policy"", ""zerver_realm"".""private_message_policy"", ""zerver_realm"".""wildcard_mention_policy"", ""zerver_realm"".""email_address_visibility"", ""zerver_realm"".""waiting_period_threshold"", ""zerver_realm"".""allow_message_deleting"", ""zerver_realm"".""message_content_delete_limit_seconds"", ""zerver_realm"".""allow_message_editing"", ""zerver_realm"".""message_content_edit_limit_seconds"", ""zerver_realm"".""allow_edit_history"", ""zerver_realm"".""allow_community_topic_editing"", ""zerver_realm"".""default_twenty_four_hour_time"", ""zerver_realm"".""default_language"", ""zerver_realm"".""notifications_stream_id"", ""zerver_realm"".""signup_notifications_stream_id"", ""zerver_realm"".""message_retention_days"", ""zerver_realm"".""message_visibility_limit"", ""zerver_realm"".""first_visible_message_id"", ""zerver_realm"".""org_type"", ""zerver_realm"".""plan_type"", ""zerver_realm"".""bot_creation_policy"", ""zerver_realm"".""upload_quota_gb"", ""zerver_realm"".""video_chat_provider"", ""zerver_realm"".""giphy_rating"", ""zerver_realm"".""default_code_block_language"", ""zerver_realm"".""icon_source"", ""zerver_realm"".""icon_version"", ""zerver_realm"".""logo_source"", ""zerver_realm"".""logo_version"", ""zerver_realm"".""night_logo_source"", ""zerver_realm"".""night_logo_version"" FROM ""zerver_stream"" INNER JOIN ""zerver_realm"" ON (""zerver_stream"".""realm_id"" = ""zerver_realm"".""id"") WHERE (""zerver_stream"".""id"" = 1 AND ""zerver_stream"".""realm_id"" = 2) LIMIT 21\r\n\r\n3 SELECT ""zerver_subscription"".""id"", ""zerver_subscription"".""user_profile_id"", ""zerver_subscription"".""recipient_id"", ""zerver_subscription"".""active"", ""zerver_subscription"".""is_user_active"", ""zerver_subscription"".""role"", ""zerver_subscription"".""is_muted"", ""zerver_subscription"".""color"", ""zerver_subscription"".""pin_to_top"", ""zerver_subscription"".""desktop_notifications"", ""zerver_subscription"".""audible_notifications"", ""zerver_subscription"".""push_notifications"", ""zerver_subscription"".""email_notifications"", ""zerver_subscription"".""wildcard_mentions_notify"" FROM ""zerver_subscription"" WHERE (""zerver_subscription"".""active"" AND ""zerver_subscription"".""recipient_id"" = 120 AND ""zerver_subscription"".""user_profile_id"" = 10) LIMIT 21\r\n\r\n4 SELECT ""zerver_recipient"".""type_id"", ""zerver_subscription"".""user_profile_id"" FROM ""zerver_subscription"" INNER JOIN ""zerver_recipient"" ON (""zerver_subscription"".""recipient_id"" = ""zerver_recipient"".""id"") INNER JOIN ""zerver_userprofile"" ON (""zerver_subscription"".""user_profile_id"" = ""zerver_userprofile"".""id"") WHERE (""zerver_subscription"".""active"" AND ""zerver_recipient"".""type"" = 2 AND ""zerver_recipient"".""type_id"" IN (1) AND ""zerver_userprofile"".""is_active"") ORDER BY ""zerver_recipient"".""type_id"" ASC', 'comment_created': datetime.datetime(2021, 4, 21, 7, 37, 27, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 617281346, 'comment_body': ""Ok, done.\r\n\r\n* I didn't make any commit for `server_events.js` to not crash when seeing `typing` event with a `stream_id` field but instead set the `client.stream_typing_notifications` to `False` and made it `True` in the frontend commit as the goal was to be able to merge the backend changes without any side effects and making changes to `server_events.js` felt unnecessary since we have `client.stream_typing_notifications`. \r\n* Added a new client_capability. This is the new first commit.\r\n* Changed `stream_typing` event to `typing`."", 'comment_created': datetime.datetime(2021, 4, 21, 7, 47, 30, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 618641586, 'comment_body': 'Added these to test our new `client_capability` functionality. Is it a correct way to test something like this?', 'comment_created': datetime.datetime(2021, 4, 22, 18, 25, 25, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}]","[{'commit_sha': '04419e0d95d1ced8ce64d2f6e7f2667f48c991d2', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2fac855d98647e4e6651d8d4351c3eb94d0bbb9', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ce7cdece25ff31a857ce6600745844ca6c54aa0', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6367f9728fafa215a0e2f0ad27e267cea7efe4d9', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e7aaecb2afb38b904913e126dcb3254d0407e6d', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d17e43411f25abd8a39db03e603ce8eac9ac1c9', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}]",Dinesh Ch,44665669,,User,,29,,19,20
687010337,user_settings: Add settings to configure sending typing notifications and read receipts,"Currently added only typing notifications settings. ~Will add a commit for read receipts soon.~(added)
<!-- What's this PR for?  (Just a link to an issue is fine.) -->


**Testing plan:** <!-- How have you tested? -->
Verified through UI.

**GIFs or screenshots:** <!-- If a UI change.  See:
  https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
  -->
[image](https://user-images.githubusercontent.com/44665669/125130191-3a668d80-e11e-11eb-9520-d505e0158b2b.png)
![image](https://user-images.githubusercontent.com/44665669/125173601-bc69bb80-e1dd-11eb-9d87-4a701bb77877.png)


<!-- Also be sure to make clear, coherent commits:
  https://zulip.readthedocs.io/en/latest/contributing/version-control.html
  -->
",True,19200,https://api.github.com/repos/zulip/zulip/pulls/19200,https://github.com/zulip/zulip/pull/19200,closed,357,12,20,7,6,25,1,0,[{'name': 'size: XL'}],2021-07-09 19:59:51+00:00,2021-10-08 00:42:34+00:00,7792963.0,"90 days, 4:42:43","[{'comment_id': 667185103, 'comment_body': ""It might be worthwhile to rephrase these but I'm unsure what would be nicer."", 'comment_created': datetime.datetime(2021, 7, 9, 20, 4, 17, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 667308222, 'comment_body': 'May be we can deduplicate some code here, as there are gonna be more setting and `presence_enabled` is already thre. Not sure about which will be more readable, but we can try.', 'comment_created': datetime.datetime(2021, 7, 10, 8, 7, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 667365482, 'comment_body': ""Yea, that's a good idea. Made that refactor. Does it look right to you?\r\n\r\nAbout the `presence_enabled` setting, we can add it to the `privacy_settings` array I created once we change the URL it relies on."", 'comment_created': datetime.datetime(2021, 7, 10, 17, 41, 30, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 667517322, 'comment_body': 'This is also fine, but we can do something similar to what we do in `settings_notifications.js` https://github.com/zulip/zulip/blob/9fec1fb16d98da9e9dbb44a19ea87b562bc82935/static/js/settings_notifications.js#L79', 'comment_created': datetime.datetime(2021, 7, 11, 18, 14, 6, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 667527101, 'comment_body': ""This string is causing the failure. I think [this regex](https://github.com/zulip/zulip/blob/master/tools/lib/capitalization.py#L181) that checks for capitalization errors is buggy but I'd expect the above `I'm` strings to fail too.\r\n\r\nAny ideas here?"", 'comment_created': datetime.datetime(2021, 7, 11, 19, 43, 2, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 667527201, 'comment_body': ""Yeah, that's nicer. Changed. But had to add an `if` for `presence_enabled` which would be eliminated on merging the settings endpoints."", 'comment_created': datetime.datetime(2021, 7, 11, 19, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 667534620, 'comment_body': 'It’s easy to misparse “to” as “messages to” rather than “display to”. I propose\r\n\r\n* Let subscribers see when I’m typing messages in streams\r\n* Let recipients see when I’m typing private messages\r\n* Let senders see when I’ve read private messages', 'comment_created': datetime.datetime(2021, 7, 11, 20, 58, 4, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 667534760, 'comment_body': ""There’s a specific [exclusion](https://github.com/zulip/zulip/blob/9fec1fb16d98da9e9dbb44a19ea87b562bc82935/tools/lib/capitalization.py#L77) for “I'm”; add one for “I've”."", 'comment_created': datetime.datetime(2021, 7, 11, 20, 59, 41, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 668100642, 'comment_body': ""Those sound good to me. Changed.\r\n\r\n> Let senders see when I’ve read private messages\r\n\r\nMade this 'Let other users see when I've read messages' as we are allowing everyone who has access to the message to see read receipts. "", 'comment_created': datetime.datetime(2021, 7, 12, 16, 56, 47, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 668459146, 'comment_body': 'Thanks! That fixed it.', 'comment_created': datetime.datetime(2021, 7, 13, 6, 18, 47, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 668471927, 'comment_body': 'Did you mean to drop the “private”? And I think we need to be more specific than “other users”—maybe “participants”?', 'comment_created': datetime.datetime(2021, 7, 13, 6, 42, 57, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 668718987, 'comment_body': ""Yes, as we show read receipts in streams too. (#18935 is the PR for that, and there's some discussion [at czo here](https://chat.zulip.org/#narrow/stream/101-design/topic/typing.20indicators.20and.20read.20receipts))\r\n\r\nChanged 'other users' to 'participants'. It is more specific but sounds a bit odd to me (probably it's just me. I think we can stick to it)."", 'comment_created': datetime.datetime(2021, 7, 13, 12, 34, 25, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 676194840, 'comment_body': 'I think this is a good place to do this check to keep everything simple. It would also allow us to extend this for `send_stream_typing_notifications` easily.', 'comment_created': datetime.datetime(2021, 7, 25, 19, 58, 24, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 676195440, 'comment_body': 'Does it make sense to do it this way? The other option of raising an error might break things in other clients.\r\n\r\nAlso, this string might benefit a bit from rephrasing it to be more concise.', 'comment_created': datetime.datetime(2021, 7, 25, 20, 3, 47, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 678706464, 'comment_body': 'Can you ask about this question in the ""api design"" stream?  \r\n\r\nI would probably prefer to raise an error if the client sent one of these notices in violation of the configuration; we should just make sure to check with client developers that doing so will not break anything.', 'comment_created': datetime.datetime(2021, 7, 28, 22, 58, 30, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 678706911, 'comment_body': ""Yeah, I think that's a reasonable interface."", 'comment_created': datetime.datetime(2021, 7, 28, 22, 59, 32, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 678707104, 'comment_body': 'These should have API changelog entries, `**Changes**` notes, etc.', 'comment_created': datetime.datetime(2021, 7, 28, 23, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 678707303, 'comment_body': 'Also we should have ""typing notifications"" link to the /help/ docs for the feature.', 'comment_created': datetime.datetime(2021, 7, 28, 23, 0, 27, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 680102745, 'comment_body': ""We don't seem to have a /help page for typing notifications. I think we only have [API docs](https://chat.zulip.org/api/set-typing-status) and [developer docs](https://zulip.readthedocs.io/en/latest/subsystems/typing-indicators.html) (We'll probably have to tweak this once we merge stream typing notifications PR)\r\n\r\nI guess we should add one soon?"", 'comment_created': datetime.datetime(2021, 7, 30, 17, 15, 33, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 680189925, 'comment_body': 'Changed to raise errors.\r\n\r\n(for later reference: link to the discussion: https://chat.zulip.org/#narrow/stream/378-api-design/topic/typing.20notifications.20endpoint', 'comment_created': datetime.datetime(2021, 7, 30, 20, 2, 31, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 680190027, 'comment_body': 'Thanks for confirming!', 'comment_created': datetime.datetime(2021, 7, 30, 20, 2, 46, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 681942211, 'comment_body': 'Oh! we actually have /help [page for typing notifications](https://chat.zulip.org/help/status-and-availability#typing-notifications) but it is hidden as a subsection in [status-and-availability](https://chat.zulip.org/help/status-and-availability).\r\n\r\nLinked ""typing notifications"" to those docs and rebased the PR to match to bump latest `API_FEATURE_LEVEL`.', 'comment_created': datetime.datetime(2021, 8, 3, 16, 59, 29, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 682667865, 'comment_body': 'Should these be moved to `user_settings` object above? Do we want to keep a copy here too with text like the following?\r\n```\r\n  **Changes**: Deprecated in Zulip 5.0 (feature level 89). Clients\r\n  connecting to newer servers should declare the `user_settings_object`\r\n  client capability and access the `user_settings` object.\r\n````', 'comment_created': datetime.datetime(2021, 8, 4, 14, 25, 36, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 724624084, 'comment_body': ""Good question, but I don't think it's necessary -- we already make clear in the top-level description that clients will need the `user_settings_object` capability."", 'comment_created': datetime.datetime(2021, 10, 8, 0, 41, 47, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 724624163, 'comment_body': 'I added links to that in all of the places we talk about them, for clarity.  ', 'comment_created': datetime.datetime(2021, 10, 8, 0, 42, 5, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': 'bb3953e02cafbfd2bf95bc8a7018752261936e43', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47da35336639866e351ec7c54b6a0da9a02aabf7', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b68f264c6d11417d3f69b722d77d344294b81c1', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d2b8f5ca96357c58e2ca90282af9f926e708a9e', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cea88c1a5743f297c843869b8f8493e28d987d2', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b41918e74eb6f44803a1a4de0bd8d860909aaeb5', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58184c21700ef68585ffe16b46644f77d9837f64', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}]",Dinesh Ch,44665669,,User,,29,,19,20
708983727,user_settings: Create _legacy dicts for existing settings.,"Since 84742a0, all settings are sent in `user_settings`
dictionary which were previously sent inline with other
fields in /register response. We want to be able to
distinguish the previous legacy settings from the new
ones we'll add by storing them all in `property_types`
which can used to aggregate all the settings to be sent
in `user_settings` dictionary and the `_legacy` ones
could be used to send them inline with other values
if client doesn't have `user_settings_object` client
capability.

See https://chat.zulip.org/#narrow/stream/378-api-design/topic/user.20settings.20response.20in.20.2Fregister
to understand this better.

<!-- What's this PR for?  (Just a link to an issue is fine.) -->


**Testing plan:** <!-- How have you tested? -->
automated tests
",True,19561,https://api.github.com/repos/zulip/zulip/pulls/19561,https://github.com/zulip/zulip/pull/19561,closed,79,66,10,2,8,13,1,0,[{'name': 'size: XL'}],2021-08-11 13:52:49+00:00,2021-09-07 17:19:07+00:00,2345178.0,"27 days, 3:26:18","[{'comment_id': 686857252, 'comment_body': 'I think having this would keep us more organized and function names like [do_change_notification_settings](https://github.com/zulip/zulip/blob/master/zerver/lib/actions.py#L5018) and some instances where we use this make more sense with it named as `notification_setting_types` instead of `notification_settings_legacy`.', 'comment_created': datetime.datetime(2021, 8, 11, 13, 56, 56, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 686859588, 'comment_body': 'Should we rename this and [`do_set_user_display_setting`](https://github.com/zulip/zulip/blob/master/zerver/lib/actions.py#L5077) to something like `do_set_user_setting`?', 'comment_created': datetime.datetime(2021, 8, 11, 13, 59, 20, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 686895478, 'comment_body': 'I agree we should rename this.', 'comment_created': datetime.datetime(2021, 8, 11, 14, 37, 27, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 686897077, 'comment_body': 'We have not updated the code for event type `update_display_settings` to use `display_settings_legacy`.', 'comment_created': datetime.datetime(2021, 8, 11, 14, 39, 12, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 686902782, 'comment_body': 'And as we are doing this, we would also need to make sure that the old event (`update_display_settings` and `update_global_notifications`) should be sent only if the settings belong to legacy dicts.', 'comment_created': datetime.datetime(2021, 8, 11, 14, 45, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 687999029, 'comment_body': 'oops, fixed. Changed `tornado.event_queue.accepts_event` for the second comment. Thanks! ', 'comment_created': datetime.datetime(2021, 8, 12, 18, 47, 8, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 687999169, 'comment_body': 'Okay, will add a new commit for that tomorrow.', 'comment_created': datetime.datetime(2021, 8, 12, 18, 47, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 688568744, 'comment_body': ""This is a bit odd and confusing as we included notification settings into `property_types` and then excluding them here because we have separate functions for each of them.\r\n\r\nThe major difference/barrier blocking us from being able to unify the functions is `do_change_notification_settings` creates a `RealmAuditLog` entry but the other doesn't. And then we are also sending legacy events `update_global_notifications` and `update_display_settings` from those functions but that should be easy to handle with a few `if`, `else`s.\r\n\r\nAny ideas here? Is it useful to create `RealmAuditLog` entries for other setting changes too?"", 'comment_created': datetime.datetime(2021, 8, 13, 14, 43, 31, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 688570890, 'comment_body': ""Done. Changed it `do_set_user_setting` but it's confusing to not include notification settings in that. I've talked about an issue with moving the `do_change_notification_settings` code to this function [here](https://github.com/zulip/zulip/pull/19561#discussion_r688568744). Any ideas/thoughts appreciated! :)"", 'comment_created': datetime.datetime(2021, 8, 13, 14, 46, 38, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 688937440, 'comment_body': ""I discussed this with Tim a few days back, he said that we should have a RealmAuditLog entry for all the settings. But I think we can wait for Tim's confirmation on this as we would need to decide whether we want to have a new event type which will be used for both settings or we will use the type used for notification setting for all the settings."", 'comment_created': datetime.datetime(2021, 8, 14, 14, 34, 20, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 688937904, 'comment_body': 'I think instead of doing this, we can simply add an if condition in `do_set_user_setting`, etc. since it only depends on setting and not on client or anything else.', 'comment_created': datetime.datetime(2021, 8, 14, 14, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 688980977, 'comment_body': ""Ah, that's much better. Thanks, changed. Could you take a look?"", 'comment_created': datetime.datetime(2021, 8, 14, 19, 4, 42, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 689293324, 'comment_body': 'Looks good.', 'comment_created': datetime.datetime(2021, 8, 16, 7, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}]","[{'commit_sha': '430c5cb8e7a87b42a77e8e0fd52306af84a4c2a4', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9443e01a5d4110e084deb4c59c06888d34315a3b', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}]",Dinesh Ch,44665669,,User,,29,,19,20
673924304,test_example: Add a few more common testing methods.,"Adds an example to illustrate the use of:
* self.settings()
* self.assertLogs()
* self.assert_in_success_response()

<!-- What's this PR for?  (Just a link to an issue is fine.) -->

",True,18921,https://api.github.com/repos/zulip/zulip/pulls/18921,https://github.com/zulip/zulip/pull/18921,closed,51,2,2,2,1,0,1,0,[{'name': 'size: L'}],2021-06-19 19:36:26+00:00,2021-06-20 11:16:35+00:00,56409.0,15:40:09,[],"[{'commit_sha': '948f6fcb14ec2c76214cc068678f22ec5f2182b8', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71bb3005970d371c25843856d39431b520a1848c', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}]",Dinesh Ch,44665669,,User,,29,,19,20
684435735,test_example.py: Add a new example to demonstrate mocking.,"Took the help of our mocking docs:
https://zulip.readthedocs.io/en/latest/testing/testing-with-django.html#testing-with-mocks
and rewrote a part of
test_message_edit.EditMessageTest.test_edit_message_content_limit
using mock.patch().

some discussion at: https://chat.zulip.org/#narrow/stream/43-automated-testing/topic/test_example.2Epy
<!-- What's this PR for?  (Just a link to an issue is fine.) -->
<!-- Also be sure to make clear, coherent commits:
  https://zulip.readthedocs.io/en/latest/contributing/version-control.html
  -->
",True,19139,https://api.github.com/repos/zulip/zulip/pulls/19139,https://github.com/zulip/zulip/pull/19139,closed,95,0,1,1,1,0,0,0,[],2021-07-06 14:37:46+00:00,2021-07-08 14:04:20+00:00,170794.0,"1 day, 23:26:34",[],"[{'commit_sha': '96ed0ad443d7c88bf91d89786931e287d8b86d1f', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}]",Dinesh Ch,44665669,,User,,29,,19,20
692821617,node_tests: Add a mock_template example test.,"<!-- What's this PR for?  (Just a link to an issue is fine.) -->


**Testing plan:** <!-- How have you tested? -->
`./tools/test-js-with-node example8.js`

<!-- Also be sure to make clear, coherent commits:
  https://zulip.readthedocs.io/en/latest/contributing/version-control.html
  -->
",True,19316,https://api.github.com/repos/zulip/zulip/pulls/19316,https://github.com/zulip/zulip/pull/19316,closed,92,2,3,2,0,0,1,0,[{'name': 'size: L'}],2021-07-19 18:15:29+00:00,2021-07-22 13:47:47+00:00,243138.0,"2 days, 19:32:18",[],"[{'commit_sha': 'ced78b54c35f5038c38d493382b54031cd3e7db3', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f21827b175a2364262268cc207f828df172869c1', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}]",Dinesh Ch,44665669,,User,,29,,19,20
698992497,node_tests: Rewrite example8.js. ,some discussion at https://chat.zulip.org/#narrow/stream/43-automated-testing/topic/test_example.2Epy/near/1236349,True,19421,https://api.github.com/repos/zulip/zulip/pulls/19421,https://github.com/zulip/zulip/pull/19421,closed,184,53,4,4,1,9,1,0,[{'name': 'size: XL'}],2021-07-28 20:26:53+00:00,2021-10-07 23:33:10+00:00,6145577.0,"71 days, 3:06:17","[{'comment_id': 678633965, 'comment_body': ""This seems to be a mistake I made in dba21d2. I think it's worth mentioning @timabbott regarding this."", 'comment_created': datetime.datetime(2021, 7, 28, 20, 36, 44, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 679341210, 'comment_body': 'Can you adjust the tests to verify this bug fix as well?', 'comment_created': datetime.datetime(2021, 7, 29, 17, 15, 40, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 679341762, 'comment_body': 'I guess by this I mean one in the actual typing subsystem tests.', 'comment_created': datetime.datetime(2021, 7, 29, 17, 16, 27, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 679360244, 'comment_body': ""We don't seem to have tests for this file. Will try to open a new PR adding a `typing_events.js` in frontend_tests with a copy of this example test and add a few new ones for other functions in `static/js/typing_events.js`."", 'comment_created': datetime.datetime(2021, 7, 29, 17, 43, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 680553045, 'comment_body': 'This looks good to me.  I assume the speed penalty here is negligible, correct?', 'comment_created': datetime.datetime(2021, 8, 1, 19, 10, 24, tzinfo=datetime.timezone.utc), 'commenter': 'showell', 'type': 'User'}, {'comment_id': 681029718, 'comment_body': ""Yes, I don't see much difference. Using `time`:\r\nBefore change:\r\n```\r\nreal    0m14.797s\r\nuser    0m16.543s\r\nsys     0m0.647s\r\n```\r\nAfter:\r\n```\r\nreal    0m15.721s\r\nuser    0m17.538s\r\nsys     0m0.629s\r\n```\r\n(example8.js isn't included in that but that shouldn't affect anything)"", 'comment_created': datetime.datetime(2021, 8, 2, 14, 40, 54, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 681866447, 'comment_body': 'Added a `typing_events.js` test file with the test for this here itself as another commit. ', 'comment_created': datetime.datetime(2021, 8, 3, 15, 24, 46, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 724603538, 'comment_body': ""Hmm, that penalty doesn't look completely negligible; I've just reproduced that it is like a 5-10% penalty on my system.  \r\n\r\n(Could we instead just do some reworking of this in just the `i18n.ts` test?)\r\n\r\n"", 'comment_created': datetime.datetime(2021, 10, 7, 23, 36, 1, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 727797865, 'comment_body': 'Yes, thinking in terms of percentages makes it look a bit significant to me too. Opened #19957', 'comment_created': datetime.datetime(2021, 10, 13, 7, 57, 10, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}]","[{'commit_sha': '55b2b1c25d4c7642156c78ba56919a928994ad2c', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d3dc7426de3b0deffc07b40047f9f5dc4d52bc7', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efe5fcde5168447c47078918890fe4348aa84216', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55512a4247b456896f8861f6efeaf491c1d2b04e', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}]",Dinesh Ch,44665669,,User,,29,,19,20
668497646,Notify user when messages are not being marked as read,"<!-- What's this PR for?  (Just a link to an issue is fine.) -->
#18768

**Testing plan:** <!-- How have you tested? -->
Manually tested moving around in different kinds of narrows. 

**Screenshot:**
![image](https://user-images.githubusercontent.com/44665669/121742053-f5e6d280-cb1c-11eb-9979-12bb005520cf.png)",False,18807,https://api.github.com/repos/zulip/zulip/pulls/18807,https://github.com/zulip/zulip/pull/18807,closed,137,84,18,5,11,3,4,0,"[{'name': 'area: message feed (uncategorized)'}, {'name': 'priority: high'}, {'name': 'size: XL'}, {'name': 'has conflicts'}]",2021-06-11 19:43:12+00:00,2022-02-11 23:18:53+00:00,21180941.0,"245 days, 3:35:41","[{'comment_id': 650248581, 'comment_body': ""I think it's better to have this at the start of `recent_topics.show()` instead of tracking down all its callers."", 'comment_created': datetime.datetime(2021, 6, 11, 20, 30, 3, tzinfo=datetime.timezone.utc), 'commenter': 'showell', 'type': 'User'}, {'comment_id': 650385211, 'comment_body': ""Yeah, I agree that's a much better place.  Moved it there."", 'comment_created': datetime.datetime(2021, 6, 12, 12, 3, 18, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 650422351, 'comment_body': ""Mentioned the reason for `narrow_state.filter() !== undefined` check in commit message:\r\n```\r\nThe `narrow_state.filter() !== undefined` filter check in\r\nmessage_scroll.js might seem redundant and actually is\r\nif there wasn't a race condition between the `scroll_timer`\r\nand switching to recent topics. Without that, scrolling a\r\nbit in don't-mark-as-read mode and immediately switching\r\nto recent topics would show the banner because of the\r\ntimer leading to execution of 'show banner' code.\r\n\r\nIf you're wondering why it isn't an issue for other narrows,\r\nthe timer gets reset on moving to a different narrow.\r\n```"", 'comment_created': datetime.datetime(2021, 6, 12, 18, 47, 54, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}]","[{'commit_sha': '661c5334cd6686253103c5f8b265f4bdf8efdcf9', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '233e77b0c72e4d5c79211c43bb317d37ff4ee809', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cc7519b8250c5d01268694ad27eadc2629c3995', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24d0fde6279b6ea9bbb097dbaf38bee606a2aa3e', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7481a626700d26b329e427902362a4fed57ac0ad', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}]",Dinesh Ch,44665669,,User,,29,,19,20
701689545,messages_view: Notify user when messages are not being marked as read.,"Notifies user when messages are not being marked as read
through a banner that lets them mark all messages in
the narrow as read.

Fixes: #18768

This is another PR working on #18768 but with a different UX. see https://github.com/zulip/zulip/pull/18807#issuecomment-888544905 

(The other PR #18807 allows a bit more functionality by marking only the messages above selected message and marks the remaining messages on scrolling through them. But we wanted to try this simpler version than that.)

<!-- What's this PR for?  (Just a link to an issue is fine.) -->


**Testing plan:** <!-- How have you tested? -->
Tested by moving into search narrow and to different narrows. Checked the button is working.

**GIFs or screenshots:** <!-- If a UI change.  See:
  https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
  -->

![image](https://user-images.githubusercontent.com/44665669/127906531-f9d01102-ef38-474e-abcc-702218b5327d.png)

<!-- Also be sure to make clear, coherent commits:
  https://zulip.readthedocs.io/en/latest/contributing/version-control.html
  -->
",True,19462,https://api.github.com/repos/zulip/zulip/pulls/19462,https://github.com/zulip/zulip/pull/19462,closed,104,15,14,3,13,0,3,0,"[{'name': 'area: message feed (uncategorized)'}, {'name': 'priority: high'}, {'name': 'size: XL'}]",2021-08-02 18:27:00+00:00,2022-02-18 22:48:32+00:00,17295692.0,"200 days, 4:21:32",[],"[{'commit_sha': '778cd648a1016310fdee61f5862e9376ab4694e7', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20a58b62acbec82ee57591772ecc01ce0b5dd568', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14d013d64aa0462a546e11dd741de375f90a234b', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}]",Dinesh Ch,44665669,,User,,29,,19,20
678556004,Reformat timestamp tooltip content.,"<!-- What's this PR for?  (Just a link to an issue is fine.) -->
 Reformats to a format like: `5/19/17, 2:42:53 AM IST (UTC+5.5)` as suggested in https://github.com/zulip/zulip/pull/18856#discussion_r659098020.

One thing to note here is, I didn't use `at` as suggested(`{date} at {time}`) to keep it nicer in all languages. For example, `.toLocaleTimeString(undefined, options)` returns ` ١٢:١٥:٣٠` when user's locale is 'ar-EG'. In such cases showing `at` in English would be odd and literal translations for 'at' in different languages might not fit there.

So, this PR uses `.toLocaleString` which adds a `,` after date part for English based locales.

**Testing plan:** <!-- How have you tested? -->
Automated tests plus a bit of manual testing.

**GIFs or screenshots:** <!-- If a UI change.  See:
  https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
  -->
![image](https://user-images.githubusercontent.com/44665669/123554500-ee226180-d79d-11eb-9423-f43fbb852d0f.png)


<!-- Also be sure to make clear, coherent commits:
  https://zulip.readthedocs.io/en/latest/contributing/version-control.html
  -->
",True,19026,https://api.github.com/repos/zulip/zulip/pulls/19026,https://github.com/zulip/zulip/pull/19026,closed,33,40,3,2,2,6,1,0,[{'name': 'size: L'}],2021-06-27 17:49:09+00:00,2021-07-01 18:46:25+00:00,349036.0,"4 days, 0:57:16","[{'comment_id': 659355323, 'comment_body': ""Used `undefined` as the `locale` to  use users' browser default locale. The locale setting we can get from `page_params.request_language` is just language but not locale. Using that might give `GMT+5:30` kind of timezone string for different locales. (for eg: `en-IN` works well in Indian timezone but not `en`)"", 'comment_created': datetime.datetime(2021, 6, 27, 17, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 659355462, 'comment_body': ""There's some discussion about this at https://chat.zulip.org/#narrow/stream/49-development-help/topic/Inconsistent.20timezone.20abbreviation"", 'comment_created': datetime.datetime(2021, 6, 27, 17, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 660802930, 'comment_body': '> How I\'d expect us to handle that is to pass something like `$t(""{date} at {time}"", ...)`, so that translators can translate the way to separate the date from the time in their translation. Can you try something like that?\r\n\r\nYes. A screenshot:\r\n![image](https://user-images.githubusercontent.com/44665669/123838078-35892900-d929-11eb-93b2-55642115f913.png)\r\n', 'comment_created': datetime.datetime(2021, 6, 29, 16, 58, 57, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 662620079, 'comment_body': 'This incorrectly doubles the minus sign for negative offsets (“UTC--7”). Also, the standard format for fractional-hour zones is “UTC+05:30”, not “UTC+5.5” (and especially not “[UTC+5.666666666666667](https://en.wikipedia.org/wiki/UTC%2B05:40)”!).', 'comment_created': datetime.datetime(2021, 7, 1, 22, 9, 27, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 662762716, 'comment_body': 'This [broke](https://chat.zulip.org/#narrow/stream/6-frontend/topic/timerender.20test/near/1223966) the other tests for users who aren’t in the `UTC` time zone. You need to restore `process.env.TZ` to its original value, not delete it.', 'comment_created': datetime.datetime(2021, 7, 2, 6, 15, 7, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 693317278, 'comment_body': 'Forgot to update, fixed this in 6c7526002f19c357d2e01c27282c4cf35c0624c2.', 'comment_created': datetime.datetime(2021, 8, 21, 7, 10, 13, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}]","[{'commit_sha': 'd60264580197e561269ec3ee7bc9ae884dfbeddc', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57f989e3ff47d394e39090db156f3f017700b7c4', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}]",Dinesh Ch,44665669,,User,,29,,19,20
670717597,Improve user interactions with message timestamp.,"<!-- What's this PR for?  (Just a link to an issue is fine.) -->
Fixes #18699

**Testing plan:** <!-- How have you tested? -->
Verified changes manually in the UI.

from the issue:
>  We should make sure that we topic editing properly updates this field; depending on the details, I can imagine this not working by default.

This is working by default as `render` is being called again after changing topic. (`render` consists of our line of code to render URL now.)

**GIFs or screenshots:** <!-- If a UI change.  See:
  https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
  -->
![image](https://user-images.githubusercontent.com/44665669/122117027-fb595b00-ce43-11eb-8cc2-a885b055cf31.png)
The underline below the timestamp is because of `<a>`. Didn't try to remove as it conveys that the time stamp is a permanent link that can be clicked/copied.

<!-- Also be sure to make clear, coherent commits:
  https://zulip.readthedocs.io/en/latest/contributing/version-control.html
  -->
",True,18856,https://api.github.com/repos/zulip/zulip/pulls/18856,https://github.com/zulip/zulip/pull/18856,closed,75,49,4,3,6,29,1,0,[{'name': 'size: XL'}],2021-06-15 20:17:36+00:00,2021-06-26 01:11:59+00:00,881663.0,"10 days, 4:54:23","[{'comment_id': 653068735, 'comment_body': 'We should try to avoid adding `delegate` unless necessary. You can achieve the same behavior here by adding `tippy-zulip-tooltip` class to `.message_time` element. `data-tippy-placement=""top""` for placement.', 'comment_created': datetime.datetime(2021, 6, 16, 21, 32, 5, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 653527847, 'comment_body': ""Got it, changed. I was confused by this comment:\r\n```\r\n        // Add elements here which are not displayed on\r\n        // initial load but are displayed later through\r\n        // some means.\r\n```\r\nand thought it's necessary to add `delegate`."", 'comment_created': datetime.datetime(2021, 6, 17, 12, 43, 10, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 653676891, 'comment_body': 'I think it would be better to add all 3 properties in the `timerender.js` code, since then the implementation of this tooltip is concentrated in one place.', 'comment_created': datetime.datetime(2021, 6, 17, 15, 28, 8, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 653678881, 'comment_body': ""Can you post a screenshot of what the Tippy tooltip looks like?  We may also want to play with a 2-line format, which wasn't possible with `title` but would likely look nicer here.\r\n\r\n"", 'comment_created': datetime.datetime(2021, 6, 17, 15, 29, 59, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 653800991, 'comment_body': 'Posted while opening PR. This is how it looks with the changes:\r\n![image](https://user-images.githubusercontent.com/44665669/122441743-7b560100-cfbb-11eb-8c07-bd57e8848657.png)\r\n\r\nWill try doing a double line format and post a screenshot soon.', 'comment_created': datetime.datetime(2021, 6, 17, 17, 43, 38, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 653801850, 'comment_body': 'That makes sense to me. Changed.', 'comment_created': datetime.datetime(2021, 6, 17, 17, 44, 34, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 653808436, 'comment_body': 'This, corresponding topic title bar(June 10 in image) isn\'t showing a tooltip but just showing a text select cursor(`I`). Not sure how to fix this. Will try. Changing it back to `title` for now.\r\n![image](https://user-images.githubusercontent.com/44665669/122448748-b9a2ee80-cfc2-11eb-9cc6-aaa1ed289ce9.png)\r\n@amanagr Do you have any ideas here? This is the code I placed here:\r\n```\r\n    elem.addClass(""tippy-zulip-tooltip"");\r\n    elem.attr(""data-tippy-placement"", ""top"");\r\n    return elem.attr(""data-tippy-content"", rendered_time.formal_time_str);\r\n```', 'comment_created': datetime.datetime(2021, 6, 17, 17, 53, 18, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 653857806, 'comment_body': '2-line format:\r\nDo you want us to try one of these?\r\n![image](https://user-images.githubusercontent.com/44665669/122457057-e0195780-cfcb-11eb-96b1-bad7368881e3.png)\r\n![image](https://user-images.githubusercontent.com/44665669/122457220-0e973280-cfcc-11eb-9a9d-83920872a1ea.png)\r\n(The second looks good to my eyes :)', 'comment_created': datetime.datetime(2021, 6, 17, 19, 2, 36, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 653994412, 'comment_body': 'https://github.com/zulip/zulip/pull/18856#discussion_r653068735 will fix it. I mean just add the class directly to element instead in the js file.', 'comment_created': datetime.datetime(2021, 6, 17, 22, 7, 33, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 654576071, 'comment_body': ""The `elem` is being created through js there. I also tried adding it to the parent in the template and setting those `attr`s to parent, but it didn't work.\r\n\r\nI'm not sure how we add the class changes the behaviour. It worked perfectly for the message timestamp this way.\r\n\r\nFWIW, the `div` that tippy adds is being added to the page but it's just not visible as shown in below screenshot:\r\n![image](https://user-images.githubusercontent.com/44665669/122594785-1e268200-d085-11eb-8e7f-ab252576c3c6.png)\r\n\r\nI wonder if this has something to do with CSS.\r\n\r\n(I think we can merge this PR for now as this PR is mainly focused on message timestamp.)"", 'comment_created': datetime.datetime(2021, 6, 18, 17, 9, 24, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 654577250, 'comment_body': ""oops, sorry, I didn't push this yesterday. (I probably forgot the `-f` option and assumed I pushed it :grimacing: ) "", 'comment_created': datetime.datetime(2021, 6, 18, 17, 11, 19, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 654726607, 'comment_body': 'Yeah, we should replace that comment.', 'comment_created': datetime.datetime(2021, 6, 19, 0, 55, 4, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 654727447, 'comment_body': 'I think maybe we just want to use a nicer date format, like:\r\n```\r\nSaturday, June 3 at {time} # if current year\r\nSaturday, June 3, 2019 at {time} # if another yet\r\n```\r\n\r\nAnd then the other thing I notice is that we probably want the popover centered when the right sidebar is present, which is a TippyJS configuration thing @amanagr may need to help with.', 'comment_created': datetime.datetime(2021, 6, 19, 1, 2, 51, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 654753912, 'comment_body': 'Do we want to avoid timezone specific `(UTC+5.5)` part?', 'comment_created': datetime.datetime(2021, 6, 19, 5, 57, 32, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 655618982, 'comment_body': 'Sorry for the confusion: I think we want the timezone indication, which confirms for you the current timezone being used for messages in Zulip.  @alya thoughts on where to put it?  I can imagine spelling it out as e.g. \r\n\r\n`United States/Los Angeles (UTC +5.5)`  on a second line, if we want to be maximally unambiguous.', 'comment_created': datetime.datetime(2021, 6, 21, 18, 38, 57, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 655619819, 'comment_body': ""One theory is that the `timerender` elements get live-updated when e.g. the date changes, and maybe that live-update logic isn't working properly.  We should investigate that possibility; when you change `data-tippy-content`, that doesn't update the popovers logic properly, and you need to do an `instance.setContent` (I think)."", 'comment_created': datetime.datetime(2021, 6, 21, 18, 40, 27, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 655672105, 'comment_body': ""Hmm, usually this would be the user's time zone, right? If so, I'd be inclined to keep it short, e.g. `Saturday, June 3 at {time} PDT # if current year` or `Saturday, June 3 at {time} PDT (UTC -7) # if current year`.\r\n\r\n\r\n"", 'comment_created': datetime.datetime(2021, 6, 21, 20, 10, 9, tzinfo=datetime.timezone.utc), 'commenter': 'alya', 'type': 'User'}, {'comment_id': 655673166, 'comment_body': ""Okay. Showing full timezone string to keep it unambiguous makes sense to me. There's also another question of whether we want to show the full month or just an abbreviation to keep the content short. I asked the same in zulip at [frontend>timestamp title disappears on opening message link](https://chat.zulip.org/#narrow/stream/6-frontend/topic/timestamp.20title.20disappears.20on.20opening.20message.20link/near/1214524) thinking we can discuss everything there. Feels like a full month name is better.\r\n\r\nI'll do some iterations on this with full month string and complete timezone string in different line orders and post there for us to have a better picture to decide what to go with :slightly_smiling_face:  "", 'comment_created': datetime.datetime(2021, 6, 21, 20, 11, 58, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 655679276, 'comment_body': ""Yeah, I think it's a good idea to show the timezone abbreviation to keep it short. If we are going with the abbreviation, we'll need the `(UTC -7)` part to keep timezones like `IST` less ambiguous."", 'comment_created': datetime.datetime(2021, 6, 21, 20, 22, 47, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 656491497, 'comment_body': ""It actually seems to be some CSS thing of `.recipient_row_date` or its parents but I'm not sure what property of those is keeping this tooltip hidden.\r\n\r\nUsing `appendTo: () => document.body,` in tippy configurations renders it. This also renders the tooltip in centre when right sidebar is present for the timestamp. So, I think we can use `appendTo: () => document.body` for both.\r\n\r\n"", 'comment_created': datetime.datetime(2021, 6, 22, 18, 45, 12, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 657438000, 'comment_body': 'Fixes #18960', 'comment_created': datetime.datetime(2021, 6, 23, 20, 27, 50, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 657438931, 'comment_body': ""This is to avoid showing two UTCs here in time strings like: `7:12:53 AM UTC (UTC+0)`\r\n\r\n(Posted before seeing that `.toLocaleString` isn't [consistent](https://chat.zulip.org/#narrow/stream/6-frontend/topic/timestamp.20title.20disappears.20on.20opening.20message.20link/near/1217231). Resolving this conversation.)"", 'comment_created': datetime.datetime(2021, 6, 23, 20, 29, 19, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 658349441, 'comment_body': 'Sounds good!', 'comment_created': datetime.datetime(2021, 6, 24, 23, 22, 8, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 658962129, 'comment_body': ""@amanagr can you help with this? The comment was added in 9c6f5d5946cb605538062028a7feded43931c13d. I'm not sure what it is meant for. Maybe I'm missing something here. "", 'comment_created': datetime.datetime(2021, 6, 25, 18, 31, 56, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 659081551, 'comment_body': '~It is for special case elements which have different properties than `tippy-zulip-tooltip` class provides. I will change the comment.~\r\n\r\nYou can add any class in `target` which then will be used in the element to show tippy styled tooltips on hover.', 'comment_created': datetime.datetime(2021, 6, 25, 23, 28, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 659082885, 'comment_body': 'Opened #19016', 'comment_created': datetime.datetime(2021, 6, 25, 23, 34, 29, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 659098020, 'comment_body': 'After some discussion with @alya, I think we should try the 1-line:\r\n\r\n""{date} at {time}"" format, using the shorter timezone indications of `PST (UTC+N)`.  Given the fact that we are displaying the time in the user\'s own timezone always, it is probably unnecessary to show full timezone string here.\r\n\r\n', 'comment_created': datetime.datetime(2021, 6, 26, 1, 10, 18, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 659098383, 'comment_body': ""Does this actually fix #18960?  I'd expect that issue to be a flatpickr configuration thing."", 'comment_created': datetime.datetime(2021, 6, 26, 1, 13, 12, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 659207366, 'comment_body': ""oops, sorry. I miss read that. since this wasn't considering 24 hour time setting I probably assumed it's for this with a quick glance."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 16, 25, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}]","[{'commit_sha': 'c10e56698c1459d25f1377a1083a7d5f7772bb6c', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '177dd05d0b6e51b0cd1453d6ce83a10f04707b96', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'afe64041677a93dda6d203122885f7599931d467', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}]",Dinesh Ch,44665669,,User,,29,,19,20
682054838,<time>: Reformat and use tippyjs tooltip.,"<!-- What's this PR for?  (Just a link to an issue is fine.) -->
czo discussion: https://chat.zulip.org/#narrow/stream/6-frontend/topic/.3Ctime.3E.20widget.20tooltip.2E

**GIFs or screenshots:** <!-- If a UI change.  See:
  https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
  -->
![image](https://user-images.githubusercontent.com/44665669/124168229-79fbfc80-dac2-11eb-8500-cbe82140b7fe.png)
![image](https://user-images.githubusercontent.com/44665669/124168269-8a13dc00-dac2-11eb-8ff3-752680914486.png)


<!-- Also be sure to make clear, coherent commits:
  https://zulip.readthedocs.io/en/latest/contributing/version-control.html
  -->
",True,19086,https://api.github.com/repos/zulip/zulip/pulls/19086,https://github.com/zulip/zulip/pull/19086,closed,80,21,6,2,5,16,1,0,[{'name': 'size: XL'}],2021-07-01 17:49:35+00:00,2021-07-06 01:11:05+00:00,372090.0,"4 days, 7:21:30","[{'comment_id': 662486414, 'comment_body': ""It would've been great to avoid this `delegate` call but the `appendTo: () => document.body` arg is important as appending it to `parent` would only render a part of the tooltip."", 'comment_created': datetime.datetime(2021, 7, 1, 17, 52, 42, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 662541914, 'comment_body': ""I think this can be `time` (for the HTML element) rather than the class, but we should limit this delegate to `.rendered_markdown` if we're doing that."", 'comment_created': datetime.datetime(2021, 7, 1, 19, 30, 3, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 662545427, 'comment_body': 'After playing with this for a bit, I think we want:\r\n* ""Everyone sees this in their own timezone."" as the first line\r\n* ""Your time zone: {timezone}"" as the second line.\r\n\r\nWe need to tag these two lines for translation.\r\n', 'comment_created': datetime.datetime(2021, 7, 1, 19, 36, 49, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 662547033, 'comment_body': ""I also noticed a bug that PST gets displayed as `Your time zone: PDT (UTC--7)` for me -- that double negative seems like a bug.\r\n\r\nI think we should extract the logic for producing the timezone to display to a function that just does that, rather than duplicating it between here are the `message_time` tooltip, and then write a unit test suite for it with PST included in it, so that we're setup to readily fix any future bugs of this form that we find.  \r\n\r\nThen this function can mostly just call that and then rendering a small template for generating the 2-line HTML structure.\r\n\r\nMaybe we can call that template `static/templates/tooltips/markdown_time_element.hbs`"", 'comment_created': datetime.datetime(2021, 7, 1, 19, 40, 6, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 662547053, 'comment_body': ""We should use underscore delimiters in variable names, since that's our coding convention."", 'comment_created': datetime.datetime(2021, 7, 1, 19, 40, 9, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 662631431, 'comment_body': 'From my [comment](https://github.com/zulip/zulip/pull/19026#pullrequestreview-697689895) on the other PR:\r\n\r\n> Also, the standard format for fractional-hour zones is “UTC+05:30”, not “UTC+5.5” (and especially not “[UTC+5.666666666666667](https://en.wikipedia.org/wiki/UTC%2B05:40)”!).', 'comment_created': datetime.datetime(2021, 7, 1, 22, 41, 3, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 662632040, 'comment_body': 'If this is HTML, its name needs to be marked `_html` and its interpolated strings need to be escaped.', 'comment_created': datetime.datetime(2021, 7, 1, 22, 42, 47, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 663183288, 'comment_body': 'Extracted that to a template `static/templates/markdown_time_tooltip.hbs`.', 'comment_created': datetime.datetime(2021, 7, 2, 18, 22, 31, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 663184321, 'comment_body': 'Extracted that logic to a function. See 2nd commit. Now, it shows “UTC+05:30” instead of “UTC+5.5” and also not “UTC+5.666666666666667"".  @andersk Can you take a look?', 'comment_created': datetime.datetime(2021, 7, 2, 18, 24, 59, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 663184465, 'comment_body': 'Sorry about that, changed.', 'comment_created': datetime.datetime(2021, 7, 2, 18, 25, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 663184995, 'comment_body': ""Yes, that's much better. changed."", 'comment_created': datetime.datetime(2021, 7, 2, 18, 26, 35, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 663185600, 'comment_body': '![image](https://user-images.githubusercontent.com/44665669/124315236-45a34180-db91-11eb-8ca5-67b58f175a82.png)\r\n![image](https://user-images.githubusercontent.com/44665669/124315258-52c03080-db91-11eb-83d0-c439cf1d8304.png)\r\n', 'comment_created': datetime.datetime(2021, 7, 2, 18, 28, 2, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 663186319, 'comment_body': ""Using template is giving these `\\n`s but it isn't effecting the UI. Should we be concerned about it?"", 'comment_created': datetime.datetime(2021, 7, 2, 18, 29, 39, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 663236371, 'comment_body': 'There are still many bugs here. UTC-07:00 is incorrectly displayed as “UTC-7:0”, and UTC-03:30 is incorrectly displayed as “UTC-4:-30”(!).\r\n\r\nWe should let `Intl.DateTimeFormat` or `date-fns` compute this for us, and not try to reimplement any timezone-related algorithms ourselves. (If that means we need to slightly change the format, that’s fine.)', 'comment_created': datetime.datetime(2021, 7, 2, 20, 35, 35, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 663391873, 'comment_body': ""Now changed to use `format` of `date-fns`. There wasn't a need to change the format. We can still show something like `IST (UTC+05:30)`.\r\n\r\n"", 'comment_created': datetime.datetime(2021, 7, 3, 17, 57, 32, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 664174912, 'comment_body': ""No, it's not a problem to have newline characters in the HTML."", 'comment_created': datetime.datetime(2021, 7, 6, 1, 11, 39, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '6ce2662df50f10f6694c74b77fdfd8d0550d547c', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7ec1dce0f7bc226ed053363a00bf34450f8c968', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}]",Dinesh Ch,44665669,,User,,29,,19,20
669104705,tippyjs: Fix blueslip error on popover add emoji reaction hover.,"This tippyjs event listener was active on 'add emoji reaction'
option in sender's popover menu of a message but it was only
intended for the add reaction button in message reactions bar
at bottom of a message.

Both of those having common selector `.reaction_button` caused
errors in tippyjs near `observer.observe` having wrong args.

Edited the css selector to be more specific to only target
add reaction button in reactions row of message.

This was introduced in 99e6f25.

<!-- What's this PR for?  (Just a link to an issue is fine.) -->


**Testing plan:** <!-- How have you tested? -->
verified the error didn't persist after the chnage

**GIFs or screenshots:** <!-- If a UI change.  See:
  https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
  -->
error screenshot before fix:
![image](https://user-images.githubusercontent.com/44665669/121819864-15ad0080-ccad-11eb-8a73-552c2dd13788.png)


<!-- Also be sure to make clear, coherent commits:
  https://zulip.readthedocs.io/en/latest/contributing/version-control.html
  -->
cc: @amanagr ",True,18824,https://api.github.com/repos/zulip/zulip/pulls/18824,https://github.com/zulip/zulip/pull/18824,closed,1,1,1,1,3,0,1,0,[{'name': 'size: XS'}],2021-06-13 19:39:47+00:00,2021-06-14 05:31:57+00:00,35530.0,9:52:10,[],"[{'commit_sha': '282c2694665cb839d3fb3e6535cbef08c50c3297', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}]",Dinesh Ch,44665669,,User,,29,,19,20
692384900,tippy: Fix blueslip error on edit history timestamp hover.,"The timestamp in edit history ui also has .message_time.
We had a tippy hover event attached to .message_time
whose code assumes it to belong to an actual message
which caused an error on hovering the message timestamp
in edit history.

This commit fixes it by making the selector more specific.

<!-- What's this PR for?  (Just a link to an issue is fine.) -->


**Testing plan:** <!-- How have you tested? -->
Checked the error didn't occur after the change.

**GIFs or screenshots:** <!-- If a UI change.  See:
  https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
  -->


<!-- Also be sure to make clear, coherent commits:
  https://zulip.readthedocs.io/en/latest/contributing/version-control.html
  -->
",True,19305,https://api.github.com/repos/zulip/zulip/pulls/19305,https://github.com/zulip/zulip/pull/19305,closed,1,1,1,1,1,0,1,0,[{'name': 'size: XS'}],2021-07-19 08:20:03+00:00,2021-07-19 16:34:52+00:00,29689.0,8:14:49,[],"[{'commit_sha': 'fbf713c4b21bf780dabad62c54eef1c46fb97ed0', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}]",Dinesh Ch,44665669,,User,,29,,19,20
682980191,recent_topics_timestamp: Fix tooltip.,"d779a1c tweaked `get_full_datetime` to return a string instead
of a {date, time} object. This function is used for recent topics
too but wasn't fixed to use the string.

This resulted in showing 'undefined undefined' in tooltip.

<!-- What's this PR for?  (Just a link to an issue is fine.) -->


**Testing plan:** <!-- How have you tested? -->
verified manually

**GIFs or screenshots:** <!-- If a UI change.  See:
  https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
  -->
![image](https://user-images.githubusercontent.com/44665669/124346059-52a84b00-dbfa-11eb-9b2c-a9cbb1ce38bc.png)
![image](https://user-images.githubusercontent.com/44665669/124346067-62279400-dbfa-11eb-9967-f708ed701ad2.png)



<!-- Also be sure to make clear, coherent commits:
  https://zulip.readthedocs.io/en/latest/contributing/version-control.html
  -->
",True,19108,https://api.github.com/repos/zulip/zulip/pulls/19108,https://github.com/zulip/zulip/pull/19108,closed,3,6,2,1,1,0,0,0,[],2021-07-03 06:58:40+00:00,2021-07-03 10:59:56+00:00,14476.0,4:01:16,[],"[{'commit_sha': 'a559fb9381572fe9214ec2c1284ed846817d97f3', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}]",Dinesh Ch,44665669,,User,,29,,19,20
715166558,compose_box: Add button to go the narrow message is being composed to.,"<!-- What's this PR for?  (Just a link to an issue is fine.) -->
https://chat.zulip.org/#narrow/stream/101-design/topic/narrow.20to.20topic.2Fpms.20when.20composing/near/1243044

**Testing plan:** <!-- How have you tested? -->
Tested in the UI to see every case works.

**GIFs or screenshots:** <!-- If a UI change.  See:
  https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
  -->
posted a gif at https://chat.zulip.org/#narrow/stream/137-feedback/topic/narrow.20to.20topic.2Fpms.20when.20composing/near/1247911. (Its size is bigger than what GitHub allows.)

<!-- Also be sure to make clear, coherent commits:
  https://zulip.readthedocs.io/en/latest/contributing/version-control.html
  -->
",True,19590,https://api.github.com/repos/zulip/zulip/pulls/19590,https://github.com/zulip/zulip/pull/19590,closed,148,0,14,2,29,31,1,0,[{'name': 'size: XL'}],2021-08-18 14:54:21+00:00,2022-04-28 19:59:46+00:00,21877525.0,"253 days, 5:05:25","[{'comment_id': 812633699, 'comment_body': ""3. The color is the same as the others in the top row(expand, close). I wonder if it's because of the thickness that it looks different from the others? \r\n\r\nAre you comparing it with the bottom buttons like 'attach', 'preview` etc? The hover on them is a different color."", 'comment_created': datetime.datetime(2022, 2, 23, 8, 1, 15, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 825598169, 'comment_body': 'Why do we need this change? We want outlines on `:focus` to help keyboard users.', 'comment_created': datetime.datetime(2022, 3, 14, 5, 14, 2, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 825598749, 'comment_body': ""This commit doesn't make sense on its own. You can squash it to the commit which actually uses the function."", 'comment_created': datetime.datetime(2022, 3, 14, 5, 15, 58, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 825599348, 'comment_body': 'We can use the fontawesome icon here - https://fontawesome.com/v4/icon/arrow-circle-o-left', 'comment_created': datetime.datetime(2022, 3, 14, 5, 17, 49, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 825599512, 'comment_body': 'We want focus outline here for the icon.', 'comment_created': datetime.datetime(2022, 3, 14, 5, 18, 18, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 825600418, 'comment_body': 'Can you fix the `tab` order? After pressing `Shift+tab` in the compose textarea, the focus should go to topic / pm input field.', 'comment_created': datetime.datetime(2022, 3, 14, 5, 20, 50, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 825824764, 'comment_body': 'We got it from @terpimost which we liked most from a [few variations](https://chat.zulip.org/#narrow/stream/101-design/topic/narrow.20to.20topic.2Fpms.20when.20composing/near/1316093). The fontawesome one looks a bit different. Do we want that?', 'comment_created': datetime.datetime(2022, 3, 14, 11, 0, 51, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 825841158, 'comment_body': 'Oh. We were getting the outlines on clicking too. I and @alya thought its a bug. Will remove this change then. Is there a way to hide it on clicks? Do we need an outline for clicks too?', 'comment_created': datetime.datetime(2022, 3, 14, 11, 20, 56, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 825981601, 'comment_body': ""What should be the correct order? I've moved this line up and set class `order-1` to make `Shift+tab` go to topic. Then `Shift+tab` again takes focus to stream, then to this icon, then to the other ones in right(close, expand). Is this fine?"", 'comment_created': datetime.datetime(2022, 3, 14, 14, 2, 38, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 825983888, 'comment_body': 'Thought this would make it easy to review with less changes in the actual commit. Shall I squah it to the commit using it?', 'comment_created': datetime.datetime(2022, 3, 14, 14, 4, 58, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 826013108, 'comment_body': 'Hmm, yeah. It looked odd for us previously due to the padding. We thought we should remove it. \r\n![image](https://user-images.githubusercontent.com/44665669/158193083-091dc3e7-17bc-494c-9c49-bbc15fb85c49.png)\r\n\r\n\r\n@alya Seems like we should make sure to have an outline. Does this look fine with the outline? (Reduced padding to 1px, fontsize to 18px, and also edited the SVG icon to be centre framed.)\r\n![image](https://user-images.githubusercontent.com/44665669/158228182-15bd020a-a4fa-45c6-8a74-0238e84f9947.png)\r\n\r\nThe other on the right seem ok me being as is\r\n![image](https://user-images.githubusercontent.com/44665669/158193381-9adc43c6-b5a8-4301-92a2-acf7b54e553b.png)\r\nRemoving that other CSS removing outline for this...', 'comment_created': datetime.datetime(2022, 3, 14, 14, 31, 33, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 826219562, 'comment_body': 'Removed the commit adding this.', 'comment_created': datetime.datetime(2022, 3, 14, 17, 40, 53, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 826636629, 'comment_body': ""The compose box formatting buttons have outlines with the keyboard but not when you click on them, and I think that's the behavior we want."", 'comment_created': datetime.datetime(2022, 3, 15, 7, 5, 5, tzinfo=datetime.timezone.utc), 'commenter': 'alya', 'type': 'User'}, {'comment_id': 826637334, 'comment_body': 'Hm, could you post screenshots of the two versions (compose box with the current icon and compose box with the FontAwesome icon) next to each other?', 'comment_created': datetime.datetime(2022, 3, 15, 7, 6, 25, tzinfo=datetime.timezone.utc), 'commenter': 'alya', 'type': 'User'}, {'comment_id': 826637816, 'comment_body': 'Can we just have outlines with the keyboard but not on click?', 'comment_created': datetime.datetime(2022, 3, 15, 7, 7, 21, tzinfo=datetime.timezone.utc), 'commenter': 'alya', 'type': 'User'}, {'comment_id': 826905472, 'comment_body': ""Yes, a commit with an empty function doesn't help."", 'comment_created': datetime.datetime(2022, 3, 15, 12, 16, 4, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 826906080, 'comment_body': 'Using `a` tag instead of `button` here should solve this.', 'comment_created': datetime.datetime(2022, 3, 15, 12, 16, 47, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 826908322, 'comment_body': ""We don't need this extra margin if we are not showing the button for pms."", 'comment_created': datetime.datetime(2022, 3, 15, 12, 19, 34, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 826913305, 'comment_body': 'The icon looks too glued to the topic input box in this iteration. We need more left margin. The 1px padding around the icon for the outline looks good.', 'comment_created': datetime.datetime(2022, 3, 15, 12, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 826913504, 'comment_body': 'The tab order looks correct now.', 'comment_created': datetime.datetime(2022, 3, 15, 12, 25, 45, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 827698601, 'comment_body': 'Fixed. Forgot to remove this while removing previous pms specific changes.', 'comment_created': datetime.datetime(2022, 3, 16, 7, 29, 18, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 827699721, 'comment_body': 'Does this look good? \r\n![image](https://user-images.githubusercontent.com/44665669/158538571-22cbee98-881b-4380-b390-aa7ee63de92a.png)\r\nadded `margin: 3px`.\r\n![image](https://user-images.githubusercontent.com/44665669/158538674-790bcc1e-d0c2-468b-9fdf-c5f23508db01.png)\r\n', 'comment_created': datetime.datetime(2022, 3, 16, 7, 31, 6, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 827701764, 'comment_body': ""@alya Yes, changed to that behavior. Thanks @amanagr, I didn't know changing to `a` tag fixes it. How does it work? Shouldn't we be able to achieve this behavior on anything with styling on `:focus-visible`? (It didn't work for button for me)"", 'comment_created': datetime.datetime(2022, 3, 16, 7, 34, 15, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 827704612, 'comment_body': 'Yes, that solved this, thanks!', 'comment_created': datetime.datetime(2022, 3, 16, 7, 38, 47, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 827704974, 'comment_body': 'Squashed them.', 'comment_created': datetime.datetime(2022, 3, 16, 7, 39, 22, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 827708401, 'comment_body': 'Sure, FontAwesome followed by current:\r\n![image](https://user-images.githubusercontent.com/44665669/158540820-30f889a8-4c90-459f-b91d-927122e44b19.png)\r\n![image](https://user-images.githubusercontent.com/44665669/158540735-bd49de72-c354-4bbf-acee-713e2dcc2440.png)\r\n', 'comment_created': datetime.datetime(2022, 3, 16, 7, 44, 40, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 838117359, 'comment_body': '`Narrow to message recipient` would be better. ', 'comment_created': datetime.datetime(2022, 3, 30, 4, 55, 8, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 839161161, 'comment_body': 'Ok, changed the tooltip wording to that.', 'comment_created': datetime.datetime(2022, 3, 31, 4, 38, 46, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}, {'comment_id': 842030362, 'comment_body': ""Cool, thanks! I think the current icon looks better, so let's stick with that."", 'comment_created': datetime.datetime(2022, 4, 4, 18, 31, 42, tzinfo=datetime.timezone.utc), 'commenter': 'alya', 'type': 'User'}, {'comment_id': 842216585, 'comment_body': ""This isn't a blocker for test-deploying this, but we should use `util.same_topic` or similar to do this check; topics and stream names are both case-insensitive."", 'comment_created': datetime.datetime(2022, 4, 4, 23, 31, 8, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 842364980, 'comment_body': 'Ok, changed to\r\n```js\r\nfunction composing_to_current_topic_narrow() {\r\n    return (\r\n        util.lower_same(compose_state.stream_name(), narrow_state.stream() || """") &&\r\n        util.lower_same(compose_state.topic(), narrow_state.topic() || """")\r\n    );\r\n}', 'comment_created': datetime.datetime(2022, 4, 5, 5, 31, 13, tzinfo=datetime.timezone.utc), 'commenter': 'chdinesh1089', 'type': 'User'}]","[{'commit_sha': '43107e1424b2e2d67a2bfd8c136dd46684c2df36', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68572e6bc8c5e235423283ad484560d7de7ff3b9', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}]",Dinesh Ch,44665669,,User,,29,,19,20
697237161,Replace remaining logging mocks with assertLogs.,"<!-- What's this PR for?  (Just a link to an issue is fine.) -->
Closes #15331

I think this completes the migration of logging mocks to `assertLogs`. The ones left are either used to assert a logging call isn't made, or some sort of strategic mocking like [this](https://github.com/zulip/zulip/blob/master/zerver/tests/test_decorators.py#L561), or somehow necessary for eg. [to check `stack_info` is set `True`](https://github.com/zulip/zulip/blob/master/zerver/webhooks/github/tests.py#L485).


<!-- Also be sure to make clear, coherent commits:
  https://zulip.readthedocs.io/en/latest/contributing/version-control.html
  -->
",True,19392,https://api.github.com/repos/zulip/zulip/pulls/19392,https://github.com/zulip/zulip/pull/19392,closed,143,143,5,5,2,1,1,0,[{'name': 'size: XL'}],2021-07-26 18:01:52+00:00,2021-07-26 21:46:01+00:00,13449.0,3:44:09,"[{'comment_id': 676965613, 'comment_body': ""I think probably the important part is just moving this out of the top level, so that importing this file doesn't result in that change occurring."", 'comment_created': datetime.datetime(2021, 7, 26, 21, 44, 34, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': 'cfb983e08143470a5c0bdbf2efa3e02275eb9056', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82407626aef0da5ae3141d60c2fd9352a750405b', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a50e88bc4fbe4e125534fae806a17bb2ba5160dd', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fefa64e4a843c77652631296f9d0ead757c98f2f', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55eb7df09f6bc549537f4fc7c044fac453cc8390', 'committer_username': 'chdinesh1089', 'committer_name': 'Dinesh Ch', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 1, 8, 9, 32, tzinfo=datetime.timezone.utc)}]",Dinesh Ch,44665669,,User,,29,,19,20

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
43160685,zulip,zulip/zulip,Python,7617,21007,375,1133,60276,2479,28,801,"[{'id': 898269551, 'number': 21668, 'closed': None, 'created': datetime.datetime(2022, 4, 3, 11, 35, 49, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 141, 'deletions': 6, 'state': 'open'}, {'id': 877652378, 'number': 21394, 'closed': None, 'created': datetime.datetime(2022, 3, 11, 17, 15, 36, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 368, 'deletions': 33, 'state': 'open'}, {'id': 873321513, 'number': 21338, 'closed': datetime.datetime(2022, 3, 7, 20, 44, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 7, 16, 35, 56, tzinfo=datetime.timezone.utc), 'time_taken': 14920.0, 'time_delta': '4:08:40', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 871369267, 'number': 21317, 'closed': datetime.datetime(2022, 3, 4, 9, 48, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 4, 6, 41, 21, tzinfo=datetime.timezone.utc), 'time_taken': 11202.0, 'time_delta': '3:06:42', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 870765589, 'number': 21305, 'closed': datetime.datetime(2022, 3, 3, 18, 17, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 3, 16, 17, 5, tzinfo=datetime.timezone.utc), 'time_taken': 7226.0, 'time_delta': '2:00:26', 'additions': 22, 'deletions': 1, 'state': 'closed'}, {'id': 868872102, 'number': 21286, 'closed': datetime.datetime(2022, 3, 2, 17, 57, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 2, 5, 34, tzinfo=datetime.timezone.utc), 'time_taken': 44590.0, 'time_delta': '12:23:10', 'additions': 50, 'deletions': 33, 'state': 'closed'}, {'id': 824513524, 'number': 20815, 'closed': datetime.datetime(2022, 1, 17, 14, 46, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 17, 12, 2, 15, tzinfo=datetime.timezone.utc), 'time_taken': 9828.0, 'time_delta': '2:43:48', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 803015655, 'number': 20572, 'closed': datetime.datetime(2021, 12, 15, 6, 25, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 15, 3, 25, 38, tzinfo=datetime.timezone.utc), 'time_taken': 10796.0, 'time_delta': '2:59:56', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 757125311, 'number': 19957, 'closed': datetime.datetime(2021, 10, 13, 16, 49, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 13, 7, 56, 21, tzinfo=datetime.timezone.utc), 'time_taken': 31992.0, 'time_delta': '8:53:12', 'additions': 6, 'deletions': 5, 'state': 'closed'}, {'id': 748091470, 'number': 19892, 'closed': datetime.datetime(2021, 10, 4, 1, 47, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 2, 9, 33, 34, tzinfo=datetime.timezone.utc), 'time_taken': 144848.0, 'time_delta': '1 day, 16:14:08', 'additions': 5, 'deletions': 7, 'state': 'closed'}, {'id': 731369250, 'number': 19707, 'closed': datetime.datetime(2021, 9, 10, 17, 25, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 10, 11, 16, 14, tzinfo=datetime.timezone.utc), 'time_taken': 22174.0, 'time_delta': '6:09:34', 'additions': 0, 'deletions': 16, 'state': 'closed'}, {'id': 715166558, 'number': 19590, 'closed': datetime.datetime(2022, 4, 28, 19, 59, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 14, 54, 21, tzinfo=datetime.timezone.utc), 'time_taken': 21877525.0, 'time_delta': '253 days, 5:05:25', 'additions': 148, 'deletions': 0, 'state': 'closed'}, {'id': 708983727, 'number': 19561, 'closed': datetime.datetime(2021, 9, 7, 17, 19, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 11, 13, 52, 49, tzinfo=datetime.timezone.utc), 'time_taken': 2345178.0, 'time_delta': '27 days, 3:26:18', 'additions': 79, 'deletions': 66, 'state': 'closed'}, {'id': 701689545, 'number': 19462, 'closed': datetime.datetime(2022, 2, 18, 22, 48, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 18, 27, tzinfo=datetime.timezone.utc), 'time_taken': 17295692.0, 'time_delta': '200 days, 4:21:32', 'additions': 104, 'deletions': 15, 'state': 'closed'}, {'id': 698992497, 'number': 19421, 'closed': datetime.datetime(2021, 10, 7, 23, 33, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 28, 20, 26, 53, tzinfo=datetime.timezone.utc), 'time_taken': 6145577.0, 'time_delta': '71 days, 3:06:17', 'additions': 184, 'deletions': 53, 'state': 'closed'}, {'id': 697237161, 'number': 19392, 'closed': datetime.datetime(2021, 7, 26, 21, 46, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 26, 18, 1, 52, tzinfo=datetime.timezone.utc), 'time_taken': 13449.0, 'time_delta': '3:44:09', 'additions': 143, 'deletions': 143, 'state': 'closed'}, {'id': 692821617, 'number': 19316, 'closed': datetime.datetime(2021, 7, 22, 13, 47, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 18, 15, 29, tzinfo=datetime.timezone.utc), 'time_taken': 243138.0, 'time_delta': '2 days, 19:32:18', 'additions': 92, 'deletions': 2, 'state': 'closed'}, {'id': 692384900, 'number': 19305, 'closed': datetime.datetime(2021, 7, 19, 16, 34, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 8, 20, 3, tzinfo=datetime.timezone.utc), 'time_taken': 29689.0, 'time_delta': '8:14:49', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 687010337, 'number': 19200, 'closed': datetime.datetime(2021, 10, 8, 0, 42, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 19, 59, 51, tzinfo=datetime.timezone.utc), 'time_taken': 7792963.0, 'time_delta': '90 days, 4:42:43', 'additions': 357, 'deletions': 12, 'state': 'closed'}, {'id': 685729370, 'number': 19168, 'closed': datetime.datetime(2021, 7, 8, 14, 10, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 6, 36, 43, tzinfo=datetime.timezone.utc), 'time_taken': 27209.0, 'time_delta': '7:33:29', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 684435735, 'number': 19139, 'closed': datetime.datetime(2021, 7, 8, 14, 4, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 14, 37, 46, tzinfo=datetime.timezone.utc), 'time_taken': 170794.0, 'time_delta': '1 day, 23:26:34', 'additions': 95, 'deletions': 0, 'state': 'closed'}, {'id': 682980191, 'number': 19108, 'closed': datetime.datetime(2021, 7, 3, 10, 59, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 3, 6, 58, 40, tzinfo=datetime.timezone.utc), 'time_taken': 14476.0, 'time_delta': '4:01:16', 'additions': 3, 'deletions': 6, 'state': 'closed'}, {'id': 682054838, 'number': 19086, 'closed': datetime.datetime(2021, 7, 6, 1, 11, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 1, 17, 49, 35, tzinfo=datetime.timezone.utc), 'time_taken': 372090.0, 'time_delta': '4 days, 7:21:30', 'additions': 80, 'deletions': 21, 'state': 'closed'}, {'id': 678556004, 'number': 19026, 'closed': datetime.datetime(2021, 7, 1, 18, 46, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 27, 17, 49, 9, tzinfo=datetime.timezone.utc), 'time_taken': 349036.0, 'time_delta': '4 days, 0:57:16', 'additions': 33, 'deletions': 40, 'state': 'closed'}, {'id': 674857228, 'number': 18935, 'closed': datetime.datetime(2022, 8, 12, 20, 16, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 20, 28, 20, tzinfo=datetime.timezone.utc), 'time_taken': 36028095.0, 'time_delta': '416 days, 23:48:15', 'additions': 690, 'deletions': 11, 'state': 'closed'}, {'id': 673924304, 'number': 18921, 'closed': datetime.datetime(2021, 6, 20, 11, 16, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 19, 19, 36, 26, tzinfo=datetime.timezone.utc), 'time_taken': 56409.0, 'time_delta': '15:40:09', 'additions': 51, 'deletions': 2, 'state': 'closed'}, {'id': 670717597, 'number': 18856, 'closed': datetime.datetime(2021, 6, 26, 1, 11, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 20, 17, 36, tzinfo=datetime.timezone.utc), 'time_taken': 881663.0, 'time_delta': '10 days, 4:54:23', 'additions': 75, 'deletions': 49, 'state': 'closed'}, {'id': 669104705, 'number': 18824, 'closed': datetime.datetime(2021, 6, 14, 5, 31, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 13, 19, 39, 47, tzinfo=datetime.timezone.utc), 'time_taken': 35530.0, 'time_delta': '9:52:10', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 668497646, 'number': 18807, 'closed': datetime.datetime(2022, 2, 11, 23, 18, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 19, 43, 12, tzinfo=datetime.timezone.utc), 'time_taken': 21180941.0, 'time_delta': '245 days, 3:35:41', 'additions': 137, 'deletions': 84, 'state': 'closed'}, {'id': 638350650, 'number': 18429, 'closed': datetime.datetime(2021, 5, 10, 20, 56, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 10, 20, 7, 21, tzinfo=datetime.timezone.utc), 'time_taken': 2926.0, 'time_delta': '0:48:46', 'additions': 0, 'deletions': 32, 'state': 'closed'}, {'id': 552906892, 'number': 17040, 'closed': datetime.datetime(2023, 9, 28, 21, 40, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 11, 17, 41, 2, tzinfo=datetime.timezone.utc), 'time_taken': 85550358.0, 'time_delta': '990 days, 3:59:18', 'additions': 302, 'deletions': 79, 'state': 'closed'}, {'id': 528994490, 'number': 16801, 'closed': datetime.datetime(2020, 11, 30, 2, 8, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 28, 18, 53, 23, tzinfo=datetime.timezone.utc), 'time_taken': 112498.0, 'time_delta': '1 day, 7:14:58', 'additions': 7, 'deletions': 2, 'state': 'closed'}, {'id': 493764459, 'number': 16424, 'closed': datetime.datetime(2020, 9, 28, 17, 54, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 27, 19, 16, 26, tzinfo=datetime.timezone.utc), 'time_taken': 81508.0, 'time_delta': '22:38:28', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 488827701, 'number': 16369, 'closed': datetime.datetime(2020, 9, 17, 20, 41, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 17, 17, 38, 17, tzinfo=datetime.timezone.utc), 'time_taken': 11005.0, 'time_delta': '3:03:25', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 481116391, 'number': 16312, 'closed': datetime.datetime(2020, 9, 9, 17, 14, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 7, 7, 11, 11, tzinfo=datetime.timezone.utc), 'time_taken': 208986.0, 'time_delta': '2 days, 10:03:06', 'additions': 5, 'deletions': 2, 'state': 'closed'}, {'id': 480530514, 'number': 16305, 'closed': datetime.datetime(2020, 9, 9, 17, 38, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 5, 14, 49, 26, tzinfo=datetime.timezone.utc), 'time_taken': 355754.0, 'time_delta': '4 days, 2:49:14', 'additions': 23, 'deletions': 22, 'state': 'closed'}, {'id': 475907181, 'number': 16236, 'closed': datetime.datetime(2020, 8, 31, 1, 44, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 30, 12, 48, 23, tzinfo=datetime.timezone.utc), 'time_taken': 46585.0, 'time_delta': '12:56:25', 'additions': 21, 'deletions': 780, 'state': 'closed'}, {'id': 470315547, 'number': 16166, 'closed': datetime.datetime(2020, 8, 21, 11, 41, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 19, 17, 37, 45, tzinfo=datetime.timezone.utc), 'time_taken': 151424.0, 'time_delta': '1 day, 18:03:44', 'additions': 6, 'deletions': 3, 'state': 'closed'}, {'id': 468339497, 'number': 16145, 'closed': datetime.datetime(2020, 8, 27, 18, 45, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 15, 16, 35, 34, tzinfo=datetime.timezone.utc), 'time_taken': 1044602.0, 'time_delta': '12 days, 2:10:02', 'additions': 632, 'deletions': 752, 'state': 'closed'}, {'id': 467405463, 'number': 16130, 'closed': datetime.datetime(2020, 8, 13, 23, 24, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 13, 14, 1, 4, tzinfo=datetime.timezone.utc), 'time_taken': 33792.0, 'time_delta': '9:23:12', 'additions': 70, 'deletions': 72, 'state': 'closed'}, {'id': 464577706, 'number': 16065, 'closed': datetime.datetime(2020, 8, 11, 17, 44, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 7, 12, 28, 56, tzinfo=datetime.timezone.utc), 'time_taken': 364522.0, 'time_delta': '4 days, 5:15:22', 'additions': 575, 'deletions': 1962, 'state': 'closed'}, {'id': 461134920, 'number': 16011, 'closed': datetime.datetime(2020, 8, 4, 21, 42, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 1, 13, 57, 27, tzinfo=datetime.timezone.utc), 'time_taken': 287086.0, 'time_delta': '3 days, 7:44:46', 'additions': 149, 'deletions': 9, 'state': 'closed'}, {'id': 458475855, 'number': 15976, 'closed': datetime.datetime(2020, 7, 30, 23, 44, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 29, 14, 26, 23, tzinfo=datetime.timezone.utc), 'time_taken': 119882.0, 'time_delta': '1 day, 9:18:02', 'additions': 349, 'deletions': 0, 'state': 'closed'}, {'id': 450861237, 'number': 15834, 'closed': datetime.datetime(2020, 7, 17, 12, 50, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 17, 7, 23, 27, tzinfo=datetime.timezone.utc), 'time_taken': 19638.0, 'time_delta': '5:27:18', 'additions': 3, 'deletions': 4, 'state': 'closed'}, {'id': 449515447, 'number': 15805, 'closed': None, 'created': datetime.datetime(2020, 7, 15, 14, 24, 4, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 416, 'deletions': 125, 'state': 'open'}, {'id': 439322497, 'number': 15553, 'closed': datetime.datetime(2020, 7, 29, 0, 17, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 24, 16, 39, 8, tzinfo=datetime.timezone.utc), 'time_taken': 2965091.0, 'time_delta': '34 days, 7:38:11', 'additions': 59, 'deletions': 77, 'state': 'closed'}, {'id': 438441087, 'number': 15535, 'closed': datetime.datetime(2020, 7, 27, 0, 10, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 23, 9, 26, 53, tzinfo=datetime.timezone.utc), 'time_taken': 2904244.0, 'time_delta': '33 days, 14:44:04', 'additions': 529, 'deletions': 6, 'state': 'closed'}, {'id': 437268967, 'number': 15473, 'closed': datetime.datetime(2020, 6, 19, 19, 55, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 19, 19, 45, 16, tzinfo=datetime.timezone.utc), 'time_taken': 609.0, 'time_delta': '0:10:09', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 436709158, 'number': 15452, 'closed': datetime.datetime(2020, 6, 18, 20, 6, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 18, 19, 8, 16, tzinfo=datetime.timezone.utc), 'time_taken': 3504.0, 'time_delta': '0:58:24', 'additions': 10, 'deletions': 71, 'state': 'closed'}, {'id': 436666473, 'number': 15449, 'closed': None, 'created': datetime.datetime(2020, 6, 18, 17, 36, 43, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 55, 'deletions': 6, 'state': 'open'}, {'id': 436038412, 'number': 15429, 'closed': datetime.datetime(2020, 6, 17, 22, 24, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 17, 19, 1, 16, tzinfo=datetime.timezone.utc), 'time_taken': 12179.0, 'time_delta': '3:22:59', 'additions': 11, 'deletions': 8, 'state': 'closed'}, {'id': 435925894, 'number': 15423, 'closed': datetime.datetime(2020, 9, 25, 23, 16, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 17, 15, 23, 35, tzinfo=datetime.timezone.utc), 'time_taken': 8668363.0, 'time_delta': '100 days, 7:52:43', 'additions': 69, 'deletions': 79, 'state': 'closed'}, {'id': 434563873, 'number': 15386, 'closed': datetime.datetime(2020, 6, 16, 1, 6, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 15, 14, 5, 39, tzinfo=datetime.timezone.utc), 'time_taken': 39647.0, 'time_delta': '11:00:47', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 433991995, 'number': 15357, 'closed': datetime.datetime(2020, 6, 13, 11, 20, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 13, 11, 0, 44, tzinfo=datetime.timezone.utc), 'time_taken': 1189.0, 'time_delta': '0:19:49', 'additions': 8, 'deletions': 3, 'state': 'closed'}, {'id': 433886327, 'number': 15339, 'closed': datetime.datetime(2020, 6, 12, 23, 20, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 12, 21, 11, 16, tzinfo=datetime.timezone.utc), 'time_taken': 7771.0, 'time_delta': '2:09:31', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 432554585, 'number': 15294, 'closed': datetime.datetime(2020, 6, 10, 21, 38, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 10, 16, 1, 25, tzinfo=datetime.timezone.utc), 'time_taken': 20246.0, 'time_delta': '5:37:26', 'additions': 12, 'deletions': 27, 'state': 'closed'}, {'id': 431897303, 'number': 15274, 'closed': datetime.datetime(2020, 6, 10, 0, 31, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 9, 15, 46, 6, tzinfo=datetime.timezone.utc), 'time_taken': 31536.0, 'time_delta': '8:45:36', 'additions': 492, 'deletions': 11, 'state': 'closed'}, {'id': 430242248, 'number': 15250, 'closed': datetime.datetime(2020, 6, 14, 20, 19, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 7, 17, 41, 9, tzinfo=datetime.timezone.utc), 'time_taken': 614308.0, 'time_delta': '7 days, 2:38:28', 'additions': 224, 'deletions': 0, 'state': 'closed'}, {'id': 426796848, 'number': 15183, 'closed': datetime.datetime(2020, 6, 9, 0, 42, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 2, 19, 53, 24, tzinfo=datetime.timezone.utc), 'time_taken': 535724.0, 'time_delta': '6 days, 4:48:44', 'additions': 133, 'deletions': 99, 'state': 'closed'}, {'id': 424690785, 'number': 15129, 'closed': None, 'created': datetime.datetime(2020, 5, 28, 19, 33, 32, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 174, 'deletions': 192, 'state': 'open'}, {'id': 420360371, 'number': 15031, 'closed': datetime.datetime(2020, 5, 25, 0, 27, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 19, 20, 55, 2, tzinfo=datetime.timezone.utc), 'time_taken': 444738.0, 'time_delta': '5 days, 3:32:18', 'additions': 12, 'deletions': 5, 'state': 'closed'}, {'id': 406047709, 'number': 14662, 'closed': datetime.datetime(2020, 4, 24, 0, 50, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 20, 12, 58, 8, tzinfo=datetime.timezone.utc), 'time_taken': 301941.0, 'time_delta': '3 days, 11:52:21', 'additions': 77, 'deletions': 2, 'state': 'closed'}, {'id': 405543666, 'number': 14636, 'closed': None, 'created': datetime.datetime(2020, 4, 18, 18, 53, 20, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 188, 'deletions': 78, 'state': 'open'}, {'id': 395096581, 'number': 14386, 'closed': datetime.datetime(2020, 5, 2, 21, 34, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 28, 13, 33, 32, tzinfo=datetime.timezone.utc), 'time_taken': 3052831.0, 'time_delta': '35 days, 8:00:31', 'additions': 115, 'deletions': 39, 'state': 'closed'}, {'id': 393181683, 'number': 14323, 'closed': datetime.datetime(2020, 3, 25, 22, 59, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 24, 18, 22, 8, tzinfo=datetime.timezone.utc), 'time_taken': 103050.0, 'time_delta': '1 day, 4:37:30', 'additions': 18, 'deletions': 18, 'state': 'closed'}, {'id': 392623883, 'number': 14308, 'closed': datetime.datetime(2020, 6, 4, 0, 44, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 23, 20, 31, 59, tzinfo=datetime.timezone.utc), 'time_taken': 6235934.0, 'time_delta': '72 days, 4:12:14', 'additions': 97, 'deletions': 37, 'state': 'closed'}, {'id': 392403802, 'number': 14301, 'closed': datetime.datetime(2020, 3, 23, 23, 3, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 23, 14, 0, 24, tzinfo=datetime.timezone.utc), 'time_taken': 32569.0, 'time_delta': '9:02:49', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 390346282, 'number': 14235, 'closed': datetime.datetime(2020, 6, 14, 23, 21, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 18, 10, 20, 38, tzinfo=datetime.timezone.utc), 'time_taken': 7650032.0, 'time_delta': '88 days, 13:00:32', 'additions': 200, 'deletions': 11, 'state': 'closed'}, {'id': 389644452, 'number': 14221, 'closed': datetime.datetime(2020, 3, 22, 18, 43, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 17, 6, 11, 53, tzinfo=datetime.timezone.utc), 'time_taken': 477086.0, 'time_delta': '5 days, 12:31:26', 'additions': 168, 'deletions': 14, 'state': 'closed'}, {'id': 378614590, 'number': 13999, 'closed': datetime.datetime(2020, 3, 23, 0, 15, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 22, 17, 53, 33, tzinfo=datetime.timezone.utc), 'time_taken': 2528506.0, 'time_delta': '29 days, 6:21:46', 'additions': 33, 'deletions': 44, 'state': 'closed'}, {'id': 372798852, 'number': 13861, 'closed': datetime.datetime(2020, 2, 11, 22, 4, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 9, 7, 4, 57, tzinfo=datetime.timezone.utc), 'time_taken': 226759.0, 'time_delta': '2 days, 14:59:19', 'additions': 158, 'deletions': 6, 'state': 'closed'}, {'id': 359240008, 'number': 13610, 'closed': datetime.datetime(2020, 3, 23, 0, 31, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 4, 19, 23, 2, tzinfo=datetime.timezone.utc), 'time_taken': 6757680.0, 'time_delta': '78 days, 5:08:00', 'additions': 179, 'deletions': 18, 'state': 'closed'}, {'id': 340479049, 'number': 13397, 'closed': datetime.datetime(2019, 11, 20, 19, 3, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 11, 13, 14, 2, 59, tzinfo=datetime.timezone.utc), 'time_taken': 622816.0, 'time_delta': '7 days, 5:00:16', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 336380187, 'number': 13366, 'closed': None, 'created': datetime.datetime(2019, 11, 4, 16, 56, 11, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 47, 'deletions': 48, 'state': 'open'}, {'id': 322918233, 'number': 13231, 'closed': datetime.datetime(2019, 10, 7, 3, 44, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 9, 30, 18, 38, 56, tzinfo=datetime.timezone.utc), 'time_taken': 551143.0, 'time_delta': '6 days, 9:05:43', 'additions': 4, 'deletions': 0, 'state': 'closed'}]"
