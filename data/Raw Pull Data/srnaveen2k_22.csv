pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
664987669,Refactor I2C,closes #190,True,191,https://api.github.com/repos/fossasia/pslab-python/pulls/191,https://github.com/fossasia/pslab-python/pull/191,closed,337,107,2,1,0,2,0,0,[],2021-06-08 14:47:41+00:00,2021-06-10 07:14:27+00:00,145606.0,"1 day, 16:26:46","[{'comment_id': 648414180, 'comment_body': ""Does I2CMaster actually need to inherit from I2CPrimitive? Doesn't look like it uses anything from it, as far as I can tell."", 'comment_created': datetime.datetime(2021, 6, 9, 15, 17, 58, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}, {'comment_id': 648576492, 'comment_body': 'I moved `I2CMaster._status` to `I2CPrimitive`. \r\n\r\nAlso i have a plan to keep all I2C Sub-commands in I2CPrimitive.\r\nLike:\r\n```python3\r\nclass I2CPrimitive:\r\n    _MIN_BRGVAL\r\n    _MAX_BRGVAL\r\n    def _init(): pass #handles I2C Sub-command CP.I2C_INIT\r\n    def _configure(brgvar: int): pass #handles I2C Sub-command CP.I2C_CONFIG\r\n\r\nclass I2CMaster(I2CPrimitive):\r\n    def configure(frequency: int): pass #calls I2CPrimitive._configure\r\n```', 'comment_created': datetime.datetime(2021, 6, 9, 18, 39, 32, tzinfo=datetime.timezone.utc), 'commenter': 'nkpro2000sr', 'type': 'User'}]","[{'commit_sha': '1756ea83474366ab9a29a7e573ab7f95986edb48', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}]",NAVEEN S R,56086391,srnaveen2k@yahoo.com,User,,22,,0,7
668920343,Add busio.I2C,closes #193 ,True,194,https://api.github.com/repos/fossasia/pslab-python/pulls/194,https://github.com/fossasia/pslab-python/pull/194,closed,267,34,2,4,1,8,0,0,[],2021-06-12 17:40:04+00:00,2021-06-17 07:36:10+00:00,395766.0,"4 days, 13:56:06","[{'comment_id': 651825927, 'comment_body': ""I wouldn't call these dummy methods, but since they aren't public they don't actually need docstrings."", 'comment_created': datetime.datetime(2021, 6, 15, 14, 5, 14, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}, {'comment_id': 651827974, 'comment_body': 'This is more or less the same as `I2CMaster.scan`. I wonder if there is a way to factor them into a common method.', 'comment_created': datetime.datetime(2021, 6, 15, 14, 7, 36, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}, {'comment_id': 651835411, 'comment_body': 'Is there any reason for this method to be called after object instantiation? If not, I would prefer this being in the actual `__init__` method.', 'comment_created': datetime.datetime(2021, 6, 15, 14, 15, 11, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}, {'comment_id': 651893626, 'comment_body': 'pydocstyle considers dunder method as public.\r\n\r\n```\r\npslab/bus/busio.py:62 in public method `__enter__`:\r\n        D105: Missing docstring in magic method\r\n```', 'comment_created': datetime.datetime(2021, 6, 15, 15, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nkpro2000sr', 'type': 'User'}, {'comment_id': 651894756, 'comment_body': 'I seperated it because of I2CMaster.scan has logger and the address range for both differs.\r\n\r\nWe can reduce code duplication by:\r\n```python3\r\nclass I2CPrimitive:\r\n    def _scan(self, start=1, end=128) -> List[int]:\r\n        addrs = []\r\n        for address in range(start, end):  # 0 is the general call address.\r\n            slave = I2CSlave(address, self._device)\r\n            if slave.ping():\r\n                addrs.append(address)\r\n        return addrs\r\n\r\nclass I2CMaster:\r\n    def scan(self):\r\n        addrs = self._scan()\r\n        for address in addrs:\r\n            logger.info(f""Response from slave on {hex(address)} ({sensors.get(address, \'None\')})."")\r\n        return addrs\r\n\r\n# busio.py\r\nclass I2C:\r\n    def scan(self):\r\n        return self._scan(0x08, 0x77)\r\n```', 'comment_created': datetime.datetime(2021, 6, 15, 15, 15, 54, tzinfo=datetime.timezone.utc), 'commenter': 'nkpro2000sr', 'type': 'User'}, {'comment_id': 651907786, 'comment_body': 'Huh, TIL. Just refer to these as context managers in the docstrings, then.', 'comment_created': datetime.datetime(2021, 6, 15, 15, 29, 32, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}, {'comment_id': 651912839, 'comment_body': 'If we move `I2CPrimitive._init` to `I2CPrimitive.__init__` then I2C will be initialized every type I2CSlave object is created.', 'comment_created': datetime.datetime(2021, 6, 15, 15, 35, 5, tzinfo=datetime.timezone.utc), 'commenter': 'nkpro2000sr', 'type': 'User'}, {'comment_id': 651914032, 'comment_body': 'Good point üëç ', 'comment_created': datetime.datetime(2021, 6, 15, 15, 36, 16, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}]","[{'commit_sha': '50d424848985f9195aa541b5c3cb6d9fcb4c2aae', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81c8bb8e780ac5f421b3b0e813974ed14d058fcf', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96bdbbfd13aee7a6bd20d1f3a5d64a1b557e5ed7', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8796533ba3a2ce8e39da2b07714611818871c2b', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}]",NAVEEN S R,56086391,srnaveen2k@yahoo.com,User,,22,,0,7
682189317,Refactor SPI & Add busio.SPI,"closes #196 

* [x] `pslab.bus.spi.SPI{Primitive,Master,Slave}`.
* [x] Improvement in set_gain in PGA.
* [x] Writing Tests.
* [x] Add busio.SPI.",True,199,https://api.github.com/repos/fossasia/pslab-python/pulls/199,https://github.com/fossasia/pslab-python/pull/199,closed,1269,194,28,10,2,15,0,0,[],2021-07-01 21:50:24+00:00,2021-08-02 12:50:32+00:00,2732408.0,"31 days, 15:00:08","[{'comment_id': 662839299, 'comment_body': 'Perhaps these could be _underscored? Or are they intended to be modified by the user?', 'comment_created': datetime.datetime(2021, 7, 2, 8, 33, 7, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}, {'comment_id': 662840199, 'comment_body': 'Should we provide `write*` methods as well, for symmetry with these `read*` methods?', 'comment_created': datetime.datetime(2021, 7, 2, 8, 34, 26, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}, {'comment_id': 662840694, 'comment_body': 'I think `exchange*` is a more accurate name for these methods.', 'comment_created': datetime.datetime(2021, 7, 2, 8, 35, 12, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}, {'comment_id': 662845001, 'comment_body': 'After sending a primary command byte, it is mandatory to send a secondary command byte. Sending only a single command byte puts the device in an undefined state. We should check that the `bits` parameter is valid before sending the primary command byte.', 'comment_created': datetime.datetime(2021, 7, 2, 8, 41, 40, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}, {'comment_id': 663210746, 'comment_body': ""I thought, it is not needed to prefix with underscore since we have `__all__`.\r\n\r\nIt's all constants, since all of these in capital letters."", 'comment_created': datetime.datetime(2021, 7, 2, 19, 28, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nkpro2000sr', 'type': 'User'}, {'comment_id': 663211226, 'comment_body': '`write*` will be simply `transfer*` without returning what we read.\r\nFor sake of symmetry, we can add these methods :+1:.\r\n', 'comment_created': datetime.datetime(2021, 7, 2, 19, 29, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nkpro2000sr', 'type': 'User'}, {'comment_id': 663211293, 'comment_body': 'I named it `transfer*` because it is mentioned like this in documentation. Also, with reference to https://www.arduino.cc/en/Reference/SPITransfer which has same functionality as ours.', 'comment_created': datetime.datetime(2021, 7, 2, 19, 29, 32, tzinfo=datetime.timezone.utc), 'commenter': 'nkpro2000sr', 'type': 'User'}, {'comment_id': 663214223, 'comment_body': 'I think `__all__` only affects the behavior of `from pslab.bus.spi import *`. If someone does `from pslab.bus import spi` they will be visible. ', 'comment_created': datetime.datetime(2021, 7, 2, 19, 36, 38, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}, {'comment_id': 663214376, 'comment_body': 'Makes sense :+1:', 'comment_created': datetime.datetime(2021, 7, 2, 19, 37, 5, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}, {'comment_id': 663347612, 'comment_body': 'Yeah, I will change it :+1:', 'comment_created': datetime.datetime(2021, 7, 3, 10, 20, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nkpro2000sr', 'type': 'User'}, {'comment_id': 663544952, 'comment_body': 'Would I change SPIPrimitive too, since it is not intended for user? ', 'comment_created': datetime.datetime(2021, 7, 4, 19, 12, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nkpro2000sr', 'type': 'User'}, {'comment_id': 663545673, 'comment_body': 'But we have to do something for `spi.List` and `spi.SerialHandler` too.', 'comment_created': datetime.datetime(2021, 7, 4, 19, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nkpro2000sr', 'type': 'User'}, {'comment_id': 663980713, 'comment_body': ""Some namespace pollution is all but inevitable, let's just do what we can to minimize it. No need to do anything about imported names."", 'comment_created': datetime.datetime(2021, 7, 5, 14, 40, 3, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}, {'comment_id': 663989770, 'comment_body': 'So the changes are:\r\n```\r\ni2c.I2CPrimitive -> i2c._I2CPrimitive\r\nspi.SPIPrimitive -> spi._SPIPrimitive\r\nspi.PPRE -> spi._PPRE\r\nspi.SPRE -> spi._SPRE\r\nspi.CKE -> spi._CKE\r\nspi.CKP -> spi._CKP\r\nspi.SMP -> spi._SMP\r\n```', 'comment_created': datetime.datetime(2021, 7, 5, 14, 53, 46, tzinfo=datetime.timezone.utc), 'commenter': 'nkpro2000sr', 'type': 'User'}, {'comment_id': 665167271, 'comment_body': 'Perhaps a `SPI.get_parameters` method is in order?', 'comment_created': datetime.datetime(2021, 7, 7, 8, 41, 16, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}]","[{'commit_sha': 'c64f77531b80dc898fce84271037cda6aa6d38c2', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a5d948bd4a6137a70fb9da42fe713a70a50482b', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '240656e52a8fb8971e9d4b5cb8e5f1c3cbec8cf8', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6db4b184890e8f7c863c172cb9bfe5a3326ac991', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3292a3df0cd058cdfdde815145748aabacbc9926', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71fbce3b5b8eab5ed772088e40f92972f847b8fb', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52260ceeb07a363ce374ff98757c1936bc74a117', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec623031d69b2b55df6e4783acc0c1b45777be1b', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f021ed1aa24759a7890f145468abe7e8474da17', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c6ea78b4326153fdf4555fa27a9918ef0748968', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}]",NAVEEN S R,56086391,srnaveen2k@yahoo.com,User,,22,,0,7
682189317,Refactor SPI & Add busio.SPI,"closes #196 

* [x] `pslab.bus.spi.SPI{Primitive,Master,Slave}`.
* [x] Improvement in set_gain in PGA.
* [x] Writing Tests.
* [x] Add busio.SPI.",True,199,https://api.github.com/repos/fossasia/pslab-python/pulls/199,https://github.com/fossasia/pslab-python/pull/199,closed,1269,194,28,10,2,15,0,0,[],2021-07-01 21:50:24+00:00,2021-08-02 12:50:32+00:00,2732408.0,"31 days, 15:00:08","[{'comment_id': 662839299, 'comment_body': 'Perhaps these could be _underscored? Or are they intended to be modified by the user?', 'comment_created': datetime.datetime(2021, 7, 2, 8, 33, 7, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}, {'comment_id': 662840199, 'comment_body': 'Should we provide `write*` methods as well, for symmetry with these `read*` methods?', 'comment_created': datetime.datetime(2021, 7, 2, 8, 34, 26, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}, {'comment_id': 662840694, 'comment_body': 'I think `exchange*` is a more accurate name for these methods.', 'comment_created': datetime.datetime(2021, 7, 2, 8, 35, 12, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}, {'comment_id': 662845001, 'comment_body': 'After sending a primary command byte, it is mandatory to send a secondary command byte. Sending only a single command byte puts the device in an undefined state. We should check that the `bits` parameter is valid before sending the primary command byte.', 'comment_created': datetime.datetime(2021, 7, 2, 8, 41, 40, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}, {'comment_id': 663210746, 'comment_body': ""I thought, it is not needed to prefix with underscore since we have `__all__`.\r\n\r\nIt's all constants, since all of these in capital letters."", 'comment_created': datetime.datetime(2021, 7, 2, 19, 28, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nkpro2000sr', 'type': 'User'}, {'comment_id': 663211226, 'comment_body': '`write*` will be simply `transfer*` without returning what we read.\r\nFor sake of symmetry, we can add these methods :+1:.\r\n', 'comment_created': datetime.datetime(2021, 7, 2, 19, 29, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nkpro2000sr', 'type': 'User'}, {'comment_id': 663211293, 'comment_body': 'I named it `transfer*` because it is mentioned like this in documentation. Also, with reference to https://www.arduino.cc/en/Reference/SPITransfer which has same functionality as ours.', 'comment_created': datetime.datetime(2021, 7, 2, 19, 29, 32, tzinfo=datetime.timezone.utc), 'commenter': 'nkpro2000sr', 'type': 'User'}, {'comment_id': 663214223, 'comment_body': 'I think `__all__` only affects the behavior of `from pslab.bus.spi import *`. If someone does `from pslab.bus import spi` they will be visible. ', 'comment_created': datetime.datetime(2021, 7, 2, 19, 36, 38, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}, {'comment_id': 663214376, 'comment_body': 'Makes sense :+1:', 'comment_created': datetime.datetime(2021, 7, 2, 19, 37, 5, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}, {'comment_id': 663347612, 'comment_body': 'Yeah, I will change it :+1:', 'comment_created': datetime.datetime(2021, 7, 3, 10, 20, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nkpro2000sr', 'type': 'User'}, {'comment_id': 663544952, 'comment_body': 'Would I change SPIPrimitive too, since it is not intended for user? ', 'comment_created': datetime.datetime(2021, 7, 4, 19, 12, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nkpro2000sr', 'type': 'User'}, {'comment_id': 663545673, 'comment_body': 'But we have to do something for `spi.List` and `spi.SerialHandler` too.', 'comment_created': datetime.datetime(2021, 7, 4, 19, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nkpro2000sr', 'type': 'User'}, {'comment_id': 663980713, 'comment_body': ""Some namespace pollution is all but inevitable, let's just do what we can to minimize it. No need to do anything about imported names."", 'comment_created': datetime.datetime(2021, 7, 5, 14, 40, 3, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}, {'comment_id': 663989770, 'comment_body': 'So the changes are:\r\n```\r\ni2c.I2CPrimitive -> i2c._I2CPrimitive\r\nspi.SPIPrimitive -> spi._SPIPrimitive\r\nspi.PPRE -> spi._PPRE\r\nspi.SPRE -> spi._SPRE\r\nspi.CKE -> spi._CKE\r\nspi.CKP -> spi._CKP\r\nspi.SMP -> spi._SMP\r\n```', 'comment_created': datetime.datetime(2021, 7, 5, 14, 53, 46, tzinfo=datetime.timezone.utc), 'commenter': 'nkpro2000sr', 'type': 'User'}, {'comment_id': 665167271, 'comment_body': 'Perhaps a `SPI.get_parameters` method is in order?', 'comment_created': datetime.datetime(2021, 7, 7, 8, 41, 16, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}]","[{'commit_sha': 'c64f77531b80dc898fce84271037cda6aa6d38c2', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a5d948bd4a6137a70fb9da42fe713a70a50482b', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '240656e52a8fb8971e9d4b5cb8e5f1c3cbec8cf8', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6db4b184890e8f7c863c172cb9bfe5a3326ac991', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3292a3df0cd058cdfdde815145748aabacbc9926', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71fbce3b5b8eab5ed772088e40f92972f847b8fb', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52260ceeb07a363ce374ff98757c1936bc74a117', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec623031d69b2b55df6e4783acc0c1b45777be1b', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f021ed1aa24759a7890f145468abe7e8474da17', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c6ea78b4326153fdf4555fa27a9918ef0748968', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}]",NAVEEN S R,56086391,srnaveen2k@yahoo.com,User,,22,,0,7
714578606,Refactor UART,"- [x] Refactor UART
- [x] Add tests",True,202,https://api.github.com/repos/fossasia/pslab-python/pulls/202,https://github.com/fossasia/pslab-python/pull/202,closed,414,69,10,4,1,0,0,0,[],2021-08-17 21:28:47+00:00,2021-08-19 15:33:02+00:00,151455.0,"1 day, 18:04:15",[],"[{'commit_sha': '453481c1fe8e278c127fe36f776d7beaae451e05', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84baa01117722e763f5011a7a86a88b00e0d5b17', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b89629d255c920935cd761079200c160a61492a', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd0796cb67ce7564711037d4823595b1051c325b', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}]",NAVEEN S R,56086391,srnaveen2k@yahoo.com,User,,22,,0,7
716164880,Add busio.UART,,True,203,https://api.github.com/repos/fossasia/pslab-python/pulls/203,https://github.com/fossasia/pslab-python/pull/203,closed,216,4,1,1,0,2,0,0,[],2021-08-19 18:28:42+00:00,2021-08-24 08:57:02+00:00,397700.0,"4 days, 14:28:20","[{'comment_id': 694546074, 'comment_body': 'Here, `stop=0` means a single stop bit, and `stop=1` means two stop bits, correct? I think the value of `stop` should be the actual number of stop bits, i.e. 1 or 2, not 0 or 1.', 'comment_created': datetime.datetime(2021, 8, 24, 6, 40, 43, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}, {'comment_id': 694547980, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 8, 24, 6, 44, 4, tzinfo=datetime.timezone.utc), 'commenter': 'bessman', 'type': 'User'}]","[{'commit_sha': '4ae7e31e4ec1fd8fd16696bf6baeea785fd5fa9e', 'committer_username': 'nkpro2000sr', 'committer_name': 'NAVEEN S R', 'committer_email': 'srnaveen2k@yahoo.com', 'commit_date': datetime.datetime(2019, 10, 2, 16, 37, 44, tzinfo=datetime.timezone.utc)}]",NAVEEN S R,56086391,srnaveen2k@yahoo.com,User,,22,,0,7

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
60861946,pslab-python,fossasia/pslab-python,Python,227,1625,24,25,463,10,3,3,"[{'id': 718001203, 'number': 204, 'closed': datetime.datetime(2021, 8, 24, 6, 51, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 23, 16, 51, 12, tzinfo=datetime.timezone.utc), 'time_taken': 50399.0, 'time_delta': '13:59:59', 'additions': 15, 'deletions': 21, 'state': 'closed'}, {'id': 716164880, 'number': 203, 'closed': datetime.datetime(2021, 8, 24, 8, 57, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 19, 18, 28, 42, tzinfo=datetime.timezone.utc), 'time_taken': 397700.0, 'time_delta': '4 days, 14:28:20', 'additions': 216, 'deletions': 4, 'state': 'closed'}, {'id': 714578606, 'number': 202, 'closed': datetime.datetime(2021, 8, 19, 15, 33, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 17, 21, 28, 47, tzinfo=datetime.timezone.utc), 'time_taken': 151455.0, 'time_delta': '1 day, 18:04:15', 'additions': 414, 'deletions': 69, 'state': 'closed'}, {'id': 682189317, 'number': 199, 'closed': datetime.datetime(2021, 8, 2, 12, 50, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 1, 21, 50, 24, tzinfo=datetime.timezone.utc), 'time_taken': 2732408.0, 'time_delta': '31 days, 15:00:08', 'additions': 1269, 'deletions': 194, 'state': 'closed'}, {'id': 668920343, 'number': 194, 'closed': datetime.datetime(2021, 6, 17, 7, 36, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 12, 17, 40, 4, tzinfo=datetime.timezone.utc), 'time_taken': 395766.0, 'time_delta': '4 days, 13:56:06', 'additions': 267, 'deletions': 34, 'state': 'closed'}, {'id': 664987669, 'number': 191, 'closed': datetime.datetime(2021, 6, 10, 7, 14, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 14, 47, 41, tzinfo=datetime.timezone.utc), 'time_taken': 145606.0, 'time_delta': '1 day, 16:26:46', 'additions': 337, 'deletions': 107, 'state': 'closed'}, {'id': 579616750, 'number': 169, 'closed': datetime.datetime(2021, 2, 25, 10, 17, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 24, 21, 18, 42, tzinfo=datetime.timezone.utc), 'time_taken': 46730.0, 'time_delta': '12:58:50', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 507873181, 'number': 147, 'closed': datetime.datetime(2020, 12, 29, 11, 39, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 21, 21, 25, 44, tzinfo=datetime.timezone.utc), 'time_taken': 5926449.0, 'time_delta': '68 days, 14:14:09', 'additions': 705, 'deletions': 1, 'state': 'closed'}, {'id': 497725829, 'number': 139, 'closed': datetime.datetime(2020, 10, 11, 18, 0, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 5, 9, 40, 17, tzinfo=datetime.timezone.utc), 'time_taken': 548407.0, 'time_delta': '6 days, 8:20:07', 'additions': 482, 'deletions': 105, 'state': 'closed'}]"
