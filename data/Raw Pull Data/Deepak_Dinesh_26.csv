pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
948154808,benchmarks in other.py refactored,"benchmarks refactored
- raw_sql  moved to other_benchmarks/raw_sql",True,11,https://api.github.com/repos/django/django-asv/pulls/11,https://github.com/django/django-asv/pull/11,closed,27,36,7,1,0,2,0,0,[],2022-05-26 11:18:18+00:00,2022-06-04 07:30:34+00:00,763936.0,"8 days, 20:12:16","[{'comment_id': 887674988, 'comment_body': 'Do we still need `OneFileld` in `benchmarks/models.py` once this is moved here?', 'comment_created': datetime.datetime(2022, 6, 2, 7, 56, 11, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 888597206, 'comment_body': 'I have removed it ', 'comment_created': datetime.datetime(2022, 6, 3, 4, 21, 51, tzinfo=datetime.timezone.utc), 'commenter': 'deepakdinesh1123', 'type': 'User'}]","[{'commit_sha': 'e57861fa98b4248a6ea95cc3dea74def21d2cf4d', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
948161645,benchmarks in bench_templates.py refactored,"benchmarks refactored
- template_compile moved to template_benchmarks/template_compilation
- template_render and template_render_simple moved to template_benchmarks/template_render
- templates moved to template_benchmarks/template_render/templates",True,12,https://api.github.com/repos/django/django-asv/pulls/12,https://github.com/django/django-asv/pull/12,closed,78,461,19,3,3,2,0,0,[],2022-05-26 11:26:19+00:00,2022-06-03 07:52:26+00:00,678367.0,"7 days, 20:26:07","[{'comment_id': 887678079, 'comment_body': '```suggestion\r\n            ""objects1"": [object(), object(), object(), object(), object()],\r\n```\r\n\r\nWe\'re not reusing these objects so I think we can create them as part of the setup. ', 'comment_created': datetime.datetime(2022, 6, 2, 7, 59, 28, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 888590485, 'comment_body': 'I have made the changes', 'comment_created': datetime.datetime(2022, 6, 3, 4, 0, 8, tzinfo=datetime.timezone.utc), 'commenter': 'deepakdinesh1123', 'type': 'User'}]","[{'commit_sha': 'be84ff7de6e37b69a478894ef6d83b842c1910a3', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d0e47ff9b9ae63a26d46e7297e590db190b0251', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '236542ea4b75ff2ea6192ecf7faaf2ca5c4e25f8', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
948167624,benchmarks in forms.py refactored,"benchmarks refactored
- form_clean moved to form_benchmarks/form_clean
- form_create moved to form_benchmarks/form_create
- small_form_render moved to form_benchmarks/form_render
- large_form_render moved to form_benchmarks/form_render
- selectdatewidget moved to form_benchmarks/select_date_widget",True,13,https://api.github.com/repos/django/django-asv/pulls/13,https://github.com/django/django-asv/pull/13,closed,71,45,8,1,1,0,0,0,[],2022-05-26 11:32:24+00:00,2022-06-02 06:56:14+00:00,588230.0,"6 days, 19:23:50",[],"[{'commit_sha': '625cef0e930d63a5f0d4e32920ae8bf1891e5d1c', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
948180809,benchmarks in bench_models.py refactored,"benchmarks refactored
- model_creation moved to model_benchmarks/model_create
- model_save_new moved to model_benchmarks/model_save_new
- model_save_existing moved to model_benchmarks/model_save_existing",True,14,https://api.github.com/repos/django/django-asv/pulls/14,https://github.com/django/django-asv/pull/14,closed,73,47,12,1,0,0,0,0,[],2022-05-26 11:48:48+00:00,2022-06-04 07:22:37+00:00,761629.0,"8 days, 19:33:49",[],"[{'commit_sha': '2daafda26a28768c7554759dbfb7468f8a52dffd', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
956058754,benchmarks in query.py refactored,,True,20,https://api.github.com/repos/django/django-asv/pulls/20,https://github.com/django/django-asv/pull/20,closed,5846,330,47,2,2,29,0,0,[],2022-06-02 15:33:09+00:00,2022-07-06 19:15:07+00:00,2950918.0,"34 days, 3:41:58","[{'comment_id': 888147659, 'comment_body': 'Do we need this? Both here and in other benchmarks.', 'comment_created': datetime.datetime(2022, 6, 2, 16, 18, 22, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 888150004, 'comment_body': 'Do we need to create these records in the database before running this benchmark?', 'comment_created': datetime.datetime(2022, 6, 2, 16, 20, 58, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 888198689, 'comment_body': ""Can we have this line repeated 10 times rather than running in a `for` loop?  \n\nWith the loop we're then benchmarking cpythons `for` which will have a small(?) overhead. "", 'comment_created': datetime.datetime(2022, 6, 2, 17, 16, 17, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 888610978, 'comment_body': 'I have changed it', 'comment_created': datetime.datetime(2022, 6, 3, 5, 1, 35, tzinfo=datetime.timezone.utc), 'commenter': 'deepakdinesh1123', 'type': 'User'}, {'comment_id': 888611000, 'comment_body': 'No, the records can be created while running the benchmark, I have removed it', 'comment_created': datetime.datetime(2022, 6, 3, 5, 1, 40, tzinfo=datetime.timezone.utc), 'commenter': 'deepakdinesh1123', 'type': 'User'}, {'comment_id': 888611160, 'comment_body': 'I have removed the self.book_count from this benchmark and others too. is this what you were suggesting?', 'comment_created': datetime.datetime(2022, 6, 3, 5, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'deepakdinesh1123', 'type': 'User'}, {'comment_id': 888665861, 'comment_body': ""That's right, there are other benchmarks with this same line. "", 'comment_created': datetime.datetime(2022, 6, 3, 6, 55, 1, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 888682862, 'comment_body': 'I think I have removed all of them.', 'comment_created': datetime.datetime(2022, 6, 3, 7, 21, 18, tzinfo=datetime.timezone.utc), 'commenter': 'deepakdinesh1123', 'type': 'User'}, {'comment_id': 888696410, 'comment_body': 'This benchmark is rather quick (0.000189seconds). Can we repeat it so we it (10x say) to give a longer duration, i fear with it being so quick it will become subject to noise.  \r\n\r\nSee https://github.com/smithdc1/django-asv/runs/6720503551?check_suite_focus=true#step:5:71', 'comment_created': datetime.datetime(2022, 6, 3, 7, 39, 18, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 888697354, 'comment_body': ""Same here, let's repeat it 10x\r\n\r\nhttps://github.com/smithdc1/django-asv/runs/6720503551?check_suite_focus=true#step:5:69"", 'comment_created': datetime.datetime(2022, 6, 3, 7, 40, 35, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 888697879, 'comment_body': 'Can we repeat this 10x as well? Maybe it needs a different title each time? \r\n\r\nhttps://github.com/smithdc1/django-asv/runs/6720503551?check_suite_focus=true#step:5:68', 'comment_created': datetime.datetime(2022, 6, 3, 7, 41, 15, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 888699097, 'comment_body': 'This one is rather quick too. Could we repeat this 2x / 3x? That should get us into the `ns` range. \r\n\r\nhttps://github.com/smithdc1/django-asv/runs/6720503551?check_suite_focus=true#step:5:63', 'comment_created': datetime.datetime(2022, 6, 3, 7, 42, 53, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 888700782, 'comment_body': ""It would be good to repeat this one too; however it's already over multiple lines and will become quite long to write it out in full. \r\n\r\nMaybe in this case the pragmatic approach is to add a for loop and do this for `range(0,10) like in the setup? "", 'comment_created': datetime.datetime(2022, 6, 3, 7, 45, 8, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 888702471, 'comment_body': ""https://github.com/smithdc1/django-asv/runs/6720503551?check_suite_focus=true#step:5:61\r\n\r\nThis benchmark is super quick too. I wonder if we could delete each item in turn? Not sure if that gives a materially different flow on Django's side to delete all. \r\n"", 'comment_created': datetime.datetime(2022, 6, 3, 7, 47, 27, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 889010649, 'comment_body': ""To delete each item in turn I used the following method\r\n\r\n```python\r\nclass QueryDelete:\r\n    def setup(self):\r\n        bench_setup(migrate=True)\r\n        self.objects = Book.objects.all()\r\n\r\n    def time_query_delete(self):\r\n        for obj in self.objects:\r\n            obj.delete()\r\n```\r\nbut I am getting the following error `ValueError: Book object can't be deleted because its id attribute is set to None.`. Putting the self.objects statement in `time_query_delete` works fine"", 'comment_created': datetime.datetime(2022, 6, 3, 14, 41, 51, tzinfo=datetime.timezone.utc), 'commenter': 'deepakdinesh1123', 'type': 'User'}, {'comment_id': 889062702, 'comment_body': ""ok, let's not worry about it for now. "", 'comment_created': datetime.datetime(2022, 6, 3, 15, 41, 27, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 889496176, 'comment_body': 'Do we need to increment the `id` here? ', 'comment_created': datetime.datetime(2022, 6, 4, 6, 57, 27, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 893382419, 'comment_body': '```suggestion\r\n        for i in range(3000):\r\n```', 'comment_created': datetime.datetime(2022, 6, 9, 11, 22, 2, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 893382586, 'comment_body': '```suggestion\r\n        for i in range(10):\r\n```', 'comment_created': datetime.datetime(2022, 6, 9, 11, 22, 13, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 893382742, 'comment_body': '```suggestion\r\n        for i in range(10):\r\n```', 'comment_created': datetime.datetime(2022, 6, 9, 11, 22, 24, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 893382984, 'comment_body': '```suggestion\r\n        for i in range(10):\r\n```', 'comment_created': datetime.datetime(2022, 6, 9, 11, 22, 40, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 893383149, 'comment_body': '```suggestion\r\n        for i in range(10):\r\n```', 'comment_created': datetime.datetime(2022, 6, 9, 11, 22, 50, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 893383299, 'comment_body': '```suggestion\r\n        for i in range(1000):\r\n```', 'comment_created': datetime.datetime(2022, 6, 9, 11, 23, 2, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 893383520, 'comment_body': '```suggestion\r\n        for i in range(1000):\r\n```', 'comment_created': datetime.datetime(2022, 6, 9, 11, 23, 15, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 893386318, 'comment_body': 'What is the difference between this benchmark and `time_query_raw`?', 'comment_created': datetime.datetime(2022, 6, 9, 11, 26, 37, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 894509073, 'comment_body': 'The `query_raw_deferred` benchmark only queries a single field while `query_raw` queries all the field, if you feel that the benchmarks are redundant I will remove one of them', 'comment_created': datetime.datetime(2022, 6, 10, 13, 13, 2, tzinfo=datetime.timezone.utc), 'commenter': 'deepakdinesh1123', 'type': 'User'}, {'comment_id': 894874302, 'comment_body': ""If they are different that's great, I couldn't see where though. Could you explain where the difference you mentioned is in this PR?\n\nI really don't know much at all about the ORM so I'm interested to learn!  "", 'comment_created': datetime.datetime(2022, 6, 10, 20, 39, 44, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 897777912, 'comment_body': 'I further looked into this the only difference between these two is that the `MultiField` object returned by `list(MultiField.objects.raw(""select id from query_raw_deferred_multifield""))` does not contain the data in the other fields but when they are accessed(`Multifield.field1`)  a call is made to extract them. I also checked if they contain the same values by using the `==` operator and the result was `True`. So I guess I was wrong. Should I remove one of them?', 'comment_created': datetime.datetime(2022, 6, 15, 9, 53, 3, tzinfo=datetime.timezone.utc), 'commenter': 'deepakdinesh1123', 'type': 'User'}, {'comment_id': 904112452, 'comment_body': ""Ah OK so it sounds like you are seeing the deferall taking place let's have both. "", 'comment_created': datetime.datetime(2022, 6, 22, 18, 37, 12, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}]","[{'commit_sha': '85721ad74170bc3808b2d8ca53c59e6976913e45', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1837e216f6b88401ef46cf28e6ae87b0aceae2f3', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
958341839,benchmarks in bench_urls.py refactored and other_benchmarks.raw_sql benchmark fixed,,True,25,https://api.github.com/repos/django/django-asv/pulls/25,https://github.com/django/django-asv/pull/25,closed,187,151,19,2,0,3,0,0,[],2022-06-05 04:09:15+00:00,2022-06-09 12:40:24+00:00,376269.0,"4 days, 8:31:09","[{'comment_id': 890484309, 'comment_body': '```suggestion\r\n        for i in range(100):\r\n```', 'comment_created': datetime.datetime(2022, 6, 6, 19, 36, 18, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 890485869, 'comment_body': '```suggestion\r\n        for i in range(100):\r\n```', 'comment_created': datetime.datetime(2022, 6, 6, 19, 38, 25, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 890488303, 'comment_body': ""Let's merge this as a separate PR. Let's keep this one to just the url changes. "", 'comment_created': datetime.datetime(2022, 6, 6, 19, 40, 44, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}]","[{'commit_sha': 'afaa1753a27b3e69fc2045dc65d7baa1d3bb4c1a', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3acd41d7ff6abbdd6b36433fea494d361219734', 'committer_username': 'smithdc1', 'committer_name': 'David Smith', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 19, 21, 10, 34, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
957552389,query all converters benchmark added,,True,21,https://api.github.com/repos/django/django-asv/pulls/21,https://github.com/django/django-asv/pull/21,closed,27,0,4,2,1,0,0,0,[],2022-06-03 14:53:39+00:00,2022-06-03 15:09:41+00:00,962.0,0:16:02,[],"[{'commit_sha': '2dc0f2bf07a2abafd509f2d5bdaac6f0a0d6e3ea', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c07772fc3c40493a1291e842c5657ea3256596b', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
957565688,query annotate benchmark added,,True,22,https://api.github.com/repos/django/django-asv/pulls/22,https://github.com/django/django-asv/pull/22,closed,98,0,5,4,1,0,0,0,[],2022-06-03 15:08:11+00:00,2022-06-03 15:40:17+00:00,1926.0,0:32:06,[],"[{'commit_sha': 'd068413bbac121ae332839826e7bff4a7ccea534', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '120e6c9d34fba84dd1ded6d5c0095dc801c45a80', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d5cb7f436575336a663740af9979110f0750e6b', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72c13d86c0737fb8a9a3ebe555f5c91a1f5550d9', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
957625725,query complex filter benchmark added,,True,23,https://api.github.com/repos/django/django-asv/pulls/23,https://github.com/django/django-asv/pull/23,closed,101,0,5,2,0,1,0,0,[],2022-06-03 16:09:42+00:00,2022-06-03 20:47:39+00:00,16677.0,4:37:57,"[{'comment_id': 889130571, 'comment_body': '```suggestion\n            Book.objects.complex_filter({""pk"": ""1""})\nBook.objects.complex_filter({""pk"": ""2""})\n...\n```\n\nCan we write this out over 10 lines? \n', 'comment_created': datetime.datetime(2022, 6, 3, 16, 27, 16, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}]","[{'commit_sha': '058d4e5e62a46de6b50cbe3443b71f5361e14c2e', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8301e90cb501cab77ab3288ca19411aa99ca4eaf', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
958029506,query dates benchmark added,"```python
list(Book.objects.dates(""created_date"", ""year"", ""ASC""))
list(Book.objects.dates(""created_date"", ""year"", ""DESC""))
list(Book.objects.dates(""created_date"", ""month"", ""ASC""))
list(Book.objects.dates(""created_date"", ""month"", ""DESC""))
list(Book.objects.dates(""created_date"", ""day"", ""ASC""))
list(Book.objects.dates(""created_date"", ""day"", ""DESC""))
```

Should I add separate benchmarks for different queries?",True,24,https://api.github.com/repos/django/django-asv/pulls/24,https://github.com/django/django-asv/pull/24,closed,28,0,4,1,1,0,0,0,[],2022-06-04 01:37:34+00:00,2022-06-04 06:59:12+00:00,19298.0,5:21:38,[],"[{'commit_sha': '2a0c1726fb19a7f93049d8ee2847de40843852d4', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
958893289,query_delete_related benchmark added,,True,26,https://api.github.com/repos/django/django-asv/pulls/26,https://github.com/django/django-asv/pull/26,closed,46,0,4,1,0,1,0,0,[],2022-06-06 09:43:21+00:00,2022-06-09 11:20:36+00:00,265035.0,"3 days, 1:37:15","[{'comment_id': 890120999, 'comment_body': '```suggestion\r\n        for i in range(10):\r\n```', 'comment_created': datetime.datetime(2022, 6, 6, 12, 56, 56, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}]","[{'commit_sha': '2bc634728676bd9a808492e6d837bd02e552cdac', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
958900640,query distinct benchmark added,,True,27,https://api.github.com/repos/django/django-asv/pulls/27,https://github.com/django/django-asv/pull/27,closed,101,0,5,1,0,0,0,0,[],2022-06-06 09:51:56+00:00,2022-06-06 12:56:37+00:00,11081.0,3:04:41,[],"[{'commit_sha': '754ddb6085efc6fd0781a5ff60775cd6b7100e89', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
961857719,raw_sql benchmark fixed,,True,28,https://api.github.com/repos/django/django-asv/pulls/28,https://github.com/django/django-asv/pull/28,closed,1,1,1,1,0,0,0,0,[],2022-06-08 15:55:37+00:00,2022-06-09 11:21:15+00:00,69938.0,19:25:38,[],"[{'commit_sha': '2803b0d04c106f536b296d0b69204775736d7f67', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
961887803,query exclude benchmark added,,True,29,https://api.github.com/repos/django/django-asv/pulls/29,https://github.com/django/django-asv/pull/29,closed,101,0,5,2,0,0,0,0,[],2022-06-08 16:20:59+00:00,2022-06-09 11:19:52+00:00,68333.0,18:58:53,[],"[{'commit_sha': '72e011450427ae1706b03ab7139a6b8809740986', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a26c501928cac9d04cf49321135c08193943606b', 'committer_username': 'smithdc1', 'committer_name': 'David Smith', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 19, 21, 10, 34, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
961900377,query exists benchmark added,,True,30,https://api.github.com/repos/django/django-asv/pulls/30,https://github.com/django/django-asv/pull/30,closed,104,0,5,1,0,0,0,0,[],2022-06-08 16:31:24+00:00,2022-06-09 11:12:03+00:00,67239.0,18:40:39,[],"[{'commit_sha': 'e98013dd20a0aca8aaed0ff3d77af2bd1ab99774', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
964131186,query filter benchmark added,,True,32,https://api.github.com/repos/django/django-asv/pulls/32,https://github.com/django/django-asv/pull/32,closed,101,0,5,2,0,0,0,0,[],2022-06-10 13:28:30+00:00,2022-06-15 16:35:18+00:00,443208.0,"5 days, 3:06:48",[],"[{'commit_sha': 'f8e0f4bfeca14bb95addc92c5778735a253fca89', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '068477902b9bf2257e35f9ebd4f2baf99f33d467', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
964163859,query_in_bulk benchmark added,,True,33,https://api.github.com/repos/django/django-asv/pulls/33,https://github.com/django/django-asv/pull/33,closed,96,0,5,1,0,0,0,0,[],2022-06-10 13:48:11+00:00,2022-06-10 20:37:06+00:00,24535.0,6:48:55,[],"[{'commit_sha': '94cd5d83f33593a7cbca6d5dbaacaf8bc2da9a5f', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
967989456,query latest benchmark added,,True,36,https://api.github.com/repos/django/django-asv/pulls/36,https://github.com/django/django-asv/pull/36,closed,104,0,5,1,0,0,0,0,[],2022-06-15 10:32:18+00:00,2022-06-15 16:34:15+00:00,21717.0,6:01:57,[],"[{'commit_sha': 'f6c599aad39f438a1e42d8befbbb24a37b05c3c5', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
969236154,Benchmark workflow modified to commit results and publish-results workflow added,"- publish-results workflow now publishes the benchmarks results to the `gh-pages` branch
- benchmarks.yml workflow now runs the benchmarks against the last 10 commits and since `--skip-existing` option is used the exiting benchmarks won't run again",True,38,https://api.github.com/repos/django/django-asv/pulls/38,https://github.com/django/django-asv/pull/38,closed,42,11,4,3,3,10,0,0,[],2022-06-16 11:55:57+00:00,2022-06-21 19:46:41+00:00,460244.0,"5 days, 7:50:44","[{'comment_id': 901056195, 'comment_body': ""The results shared for these systems are all very similar. I'm not sure we need to test on all systems right now. Can we just use Ubuntu for now and can discuss adding the others as a separate PR. \n\nI'm thinking about the environmental impact of running the same thing three times where it is rather unlikely we will see any difference. \n\nI'd be much more interested in seeing results for multiple python versions. "", 'comment_created': datetime.datetime(2022, 6, 19, 6, 44, 22, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 901056369, 'comment_body': 'What is this step in the workflow doing doing? ', 'comment_created': datetime.datetime(2022, 6, 19, 6, 46, 7, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 901066437, 'comment_body': ""I think we can run it for just a single commit each day. \n\nI think at some point we can then change it to run only once a week. (But let's leave it at daily while we're doing lots of work here)  "", 'comment_created': datetime.datetime(2022, 6, 19, 8, 13, 38, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 901083136, 'comment_body': 'trying to run `asv gh-pages` directly gave me an error saying that gh-pages is behind origin and I need to pull first, so I added the `--rewrite` option which makes sure that only one commit exists in the branch, instead of adding a new commit. This could be a problem, so I have changed it and added a `git fetch` before pushing', 'comment_created': datetime.datetime(2022, 6, 19, 10, 30, 25, tzinfo=datetime.timezone.utc), 'commenter': 'deepakdinesh1123', 'type': 'User'}, {'comment_id': 901083143, 'comment_body': 'I have added versions 3.10, 3.9, and 3.8. Please let me know which versions I should add', 'comment_created': datetime.datetime(2022, 6, 19, 10, 30, 34, tzinfo=datetime.timezone.utc), 'commenter': 'deepakdinesh1123', 'type': 'User'}, {'comment_id': 901121441, 'comment_body': 'Great stuff getting this working  👏', 'comment_created': datetime.datetime(2022, 6, 19, 15, 14, 56, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 901131680, 'comment_body': ""```suggestion\n          message: 'Results for ubuntu-22.04 added [skip ci].'\n```\n"", 'comment_created': datetime.datetime(2022, 6, 19, 16, 44, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 901131920, 'comment_body': 'Maybe we could do this without a 3rd party action but I think if it works it is OK for now. ', 'comment_created': datetime.datetime(2022, 6, 19, 16, 45, 58, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 901146737, 'comment_body': ""Ah. \n\nI guess we only want this bit if we are running on the `main` cron job. If it's a pull request we should skip it so the job doesn't fail. \n\nAs it stands I think the tests will fail for every pr? 🤔\n"", 'comment_created': datetime.datetime(2022, 6, 19, 19, 14, 5, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 901691180, 'comment_body': 'I have skipped it on pull_requests, since `publish_results` and the `pages-build-deployment` actions were also being called every time, I changed them such that they only run when the event is not a pull_request. I had to use `workflow_call` to do this as `workflow_dispatch` requires an access token.', 'comment_created': datetime.datetime(2022, 6, 20, 13, 57, 7, tzinfo=datetime.timezone.utc), 'commenter': 'deepakdinesh1123', 'type': 'User'}]","[{'commit_sha': 'effc6f3a50fa6201f545fe9b9fa4f706c78dc1db', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '672fbb8502c2fdddbf3c356c497acc2cfbfd0e61', 'committer_username': 'smithdc1', 'committer_name': 'David Smith', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 19, 21, 10, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '934254cc489ab5ff7f5a308b04b95e1661002532', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
980280341,step added to cache Django folder,closes #46 ,True,48,https://api.github.com/repos/django/django-asv/pulls/48,https://github.com/django/django-asv/pull/48,closed,19,14,15,2,1,1,0,0,[],2022-06-27 16:31:42+00:00,2022-06-28 04:26:22+00:00,42880.0,11:54:40,"[{'comment_id': 908017012, 'comment_body': 'Ah. I see the spaces are being added by pre-commit vs the asv style. \n\nCan we run the linter  in the action before committing the results?', 'comment_created': datetime.datetime(2022, 6, 28, 4, 25, 48, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}]","[{'commit_sha': '10caa367cb55e8a4084ee0f589371a73bd96d997', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '927afc02b8d56a99847b7655662ee4bc1f48b5b4', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
985695315,Benchmarking procedure changed to reduce noise,"I have modified the benchmark workflows according to the [workflow file](https://github.com/jaimergp/scikit-image/blob/main/.github/workflows/benchmarks.yml) mentioned in this [article](https://labs.quansight.org/blog/2021/08/github-actions-benchmarks/) shared by @smithdc1.

I will also add the results history in a separate PR, by running the benchmarks using the same method.",True,53,https://api.github.com/repos/django/django-asv/pulls/53,https://github.com/django/django-asv/pull/53,closed,20,14,6,2,2,1,0,0,[],2022-07-03 10:51:32+00:00,2022-07-06 19:10:25+00:00,289133.0,"3 days, 8:18:53","[{'comment_id': 913430372, 'comment_body': ""I think we'd just want one of their approaches rather than all three discussed in the article?"", 'comment_created': datetime.datetime(2022, 7, 5, 6, 32, 31, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}]","[{'commit_sha': 'dabcbc9748231a3c01f99c4fbd62501b77411c63', 'committer_username': 'smithdc1', 'committer_name': 'David Smith', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 19, 21, 10, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0107867c33fa3153f4e9eb453ec77af4c70d602d', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
1005286491,Fixed #33862 -- Added workflow to run the ASV benchmarks for labeled PR.,"I have added a workflow that runs the benchmarks in [​smithdc1/django-asv](https://github.com/smithdc1/django-asv) against a pull request when it is labeled with the label `benchmark`. If the performance has not changed significantly, a pull request status message `Benchmarking Result - BENCHMARKS NOT CHANGED SIGNIFICANTLY` is added, if the performance has decreased a pull request status message  `Benchmarking Result - SOME BENCHMARKS HAVE CHANGED SIGNIFICANTLY. PERFORMANCE DECREASED` is added.


ticket-33862",True,15866,https://api.github.com/repos/django/django/pulls/15866,https://github.com/django/django/pull/15866,closed,41,0,1,1,14,10,0,0,[],2022-07-22 06:52:14+00:00,2022-09-06 15:58:07+00:00,4007153.0,"46 days, 9:05:53","[{'comment_id': 927350336, 'comment_body': ""IMO we shouldn't depend on users repositories. I would like to see both moved to the Django org."", 'comment_created': datetime.datetime(2022, 7, 22, 7, 0, 41, tzinfo=datetime.timezone.utc), 'commenter': 'felixxm', 'type': 'User'}, {'comment_id': 927353974, 'comment_body': 'Do we need to use anything external? Is it not enough to call `exit 1` when performance decreased?\r\n```\r\n          if grep -q ""PERFORMANCE DECREASED"" out.txt;\r\n          then\r\n            echo ""::set-output name=BENCHMARK-RESULT::SOME BENCHMARKS HAVE CHANGED SIGNIFICANTLY. PERFORMANCE DECREASED""\r\n            exit 1\r\n          else \r\n            echo ""::set-output name=BENCHMARK-RESULT::BENCHMARKS NOT CHANGED SIGNIFICANTLY""\r\n          fi\r\n```\r\n', 'comment_created': datetime.datetime(2022, 7, 22, 7, 6, 26, tzinfo=datetime.timezone.utc), 'commenter': 'felixxm', 'type': 'User'}, {'comment_id': 927364908, 'comment_body': '@smithdc1  had mentioned in this [comment](https://github.com/smithdc1/django-asv/issues/55#issuecomment-1188640603) to check if it was possible for the benchmark results to appear in the checks of the pull request, so I was using a third party action to achieve that behavior. Should I remove it and have the workflow fail if the performance has decreased?\r\n\r\n![Screenshot (49)](https://user-images.githubusercontent.com/52698821/180384594-2e4006b2-cc7c-4690-b650-1209a8d2a156.png)\r\n', 'comment_created': datetime.datetime(2022, 7, 22, 7, 22, 3, tzinfo=datetime.timezone.utc), 'commenter': 'deepakdinesh1123', 'type': 'User'}, {'comment_id': 927374046, 'comment_body': ""We can always merge PR with a failed action, so I'd prefer to fail when performance decreased."", 'comment_created': datetime.datetime(2022, 7, 22, 7, 33, 47, tzinfo=datetime.timezone.utc), 'commenter': 'felixxm', 'type': 'User'}, {'comment_id': 927393229, 'comment_body': ""Yes, that's on the TODO list. Opening the PR as-is enables us to see everything required. "", 'comment_created': datetime.datetime(2022, 7, 22, 7, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'carltongibson', 'type': 'User'}, {'comment_id': 927543903, 'comment_body': 'I have removed the action. The `Run Benchmarks` step now fails when performance is decreased', 'comment_created': datetime.datetime(2022, 7, 22, 11, 3, 27, tzinfo=datetime.timezone.utc), 'commenter': 'deepakdinesh1123', 'type': 'User'}, {'comment_id': 933786449, 'comment_body': 'We\'d need to add a ""benchmark"" label. ', 'comment_created': datetime.datetime(2022, 7, 30, 10, 44, 54, tzinfo=datetime.timezone.utc), 'commenter': 'smithdc1', 'type': 'User'}, {'comment_id': 942270651, 'comment_body': 'I added the label. ', 'comment_created': datetime.datetime(2022, 8, 10, 10, 8, 33, tzinfo=datetime.timezone.utc), 'commenter': 'carltongibson', 'type': 'User'}, {'comment_id': 942296420, 'comment_body': '```suggestion\r\n          repository: django/django-asv\r\n```', 'comment_created': datetime.datetime(2022, 8, 10, 10, 38, 37, tzinfo=datetime.timezone.utc), 'commenter': 'carltongibson', 'type': 'User'}, {'comment_id': 942301944, 'comment_body': 'Use `ubuntu-latest`.', 'comment_created': datetime.datetime(2022, 8, 10, 10, 45, 21, tzinfo=datetime.timezone.utc), 'commenter': 'felixxm', 'type': 'User'}]","[{'commit_sha': 'a7bd09bfb7e9c8956535865d71a4c0acd10ccde6', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23
1023668330,request response benchmarks added,"I have added two request-response benchmarks 
- default middleware 
- HTTP methods

",True,65,https://api.github.com/repos/django/django-asv/pulls/65,https://github.com/django/django-asv/pull/65,closed,157,0,12,1,3,0,0,0,[],2022-08-11 10:02:58+00:00,2022-08-23 14:53:08+00:00,1054210.0,"12 days, 4:50:10",[],"[{'commit_sha': '43c0b479400f20a9b97240d884831ee58156bcef', 'committer_username': 'deepakdinesh1123', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 9, 9, 22, 15, tzinfo=datetime.timezone.utc)}]",,52698821,,User,,32,,38,23

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
326437422,django-asv,django/django-asv,Python,12,36,9,7,743,10,4,2,"[{'id': 1042184644, 'number': 69, 'closed': datetime.datetime(2024, 2, 17, 5, 6, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 31, 9, 59, 8, tzinfo=datetime.timezone.utc), 'time_taken': 46206432.0, 'time_delta': '534 days, 19:07:12', 'additions': 44, 'deletions': 14, 'state': 'closed'}, {'id': 1035202437, 'number': 68, 'closed': datetime.datetime(2024, 2, 17, 5, 6, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 24, 9, 19, 20, tzinfo=datetime.timezone.utc), 'time_taken': 46813620.0, 'time_delta': '541 days, 19:47:00', 'additions': 61, 'deletions': 38, 'state': 'closed'}, {'id': 1035194892, 'number': 67, 'closed': datetime.datetime(2024, 2, 17, 5, 6, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 24, 9, 12, 27, tzinfo=datetime.timezone.utc), 'time_taken': 46814033.0, 'time_delta': '541 days, 19:53:53', 'additions': 14, 'deletions': 0, 'state': 'closed'}, {'id': 1033635530, 'number': 66, 'closed': datetime.datetime(2022, 8, 23, 14, 52, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 23, 4, 37, 13, tzinfo=datetime.timezone.utc), 'time_taken': 36932.0, 'time_delta': '10:15:32', 'additions': 76, 'deletions': 26, 'state': 'closed'}, {'id': 1023668330, 'number': 65, 'closed': datetime.datetime(2022, 8, 23, 14, 53, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 11, 10, 2, 58, tzinfo=datetime.timezone.utc), 'time_taken': 1054210.0, 'time_delta': '12 days, 4:50:10', 'additions': 157, 'deletions': 0, 'state': 'closed'}, {'id': 1023666806, 'number': 64, 'closed': datetime.datetime(2022, 8, 24, 6, 23, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 11, 10, 1, 23, tzinfo=datetime.timezone.utc), 'time_taken': 1110102.0, 'time_delta': '12 days, 20:21:42', 'additions': 15, 'deletions': 13, 'state': 'closed'}, {'id': 1009503129, 'number': 59, 'closed': datetime.datetime(2022, 7, 27, 11, 35, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 27, 10, 49, 40, tzinfo=datetime.timezone.utc), 'time_taken': 2775.0, 'time_delta': '0:46:15', 'additions': 80, 'deletions': 6, 'state': 'closed'}, {'id': 1009258507, 'number': 58, 'closed': datetime.datetime(2024, 2, 17, 5, 6, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 27, 6, 45, 26, tzinfo=datetime.timezone.utc), 'time_taken': 49242053.0, 'time_delta': '569 days, 22:20:53', 'additions': 125, 'deletions': 0, 'state': 'closed'}, {'id': 985695315, 'number': 53, 'closed': datetime.datetime(2022, 7, 6, 19, 10, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 3, 10, 51, 32, tzinfo=datetime.timezone.utc), 'time_taken': 289133.0, 'time_delta': '3 days, 8:18:53', 'additions': 20, 'deletions': 14, 'state': 'closed'}, {'id': 982629502, 'number': 51, 'closed': datetime.datetime(2022, 7, 2, 5, 34, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 29, 13, 48, 53, tzinfo=datetime.timezone.utc), 'time_taken': 229521.0, 'time_delta': '2 days, 15:45:21', 'additions': 39, 'deletions': 0, 'state': 'closed'}, {'id': 981611543, 'number': 49, 'closed': datetime.datetime(2022, 6, 28, 20, 34, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 28, 16, 7, 14, tzinfo=datetime.timezone.utc), 'time_taken': 16008.0, 'time_delta': '4:26:48', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 980280341, 'number': 48, 'closed': datetime.datetime(2022, 6, 28, 4, 26, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 16, 31, 42, tzinfo=datetime.timezone.utc), 'time_taken': 42880.0, 'time_delta': '11:54:40', 'additions': 19, 'deletions': 14, 'state': 'closed'}, {'id': 974538770, 'number': 45, 'closed': datetime.datetime(2022, 6, 29, 13, 27, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 22, 4, 43, 51, tzinfo=datetime.timezone.utc), 'time_taken': 636225.0, 'time_delta': '7 days, 8:43:45', 'additions': 50, 'deletions': 1, 'state': 'closed'}, {'id': 974484025, 'number': 44, 'closed': datetime.datetime(2022, 7, 2, 5, 32, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 22, 3, 39, 46, tzinfo=datetime.timezone.utc), 'time_taken': 870757.0, 'time_delta': '10 days, 1:52:37', 'additions': 56, 'deletions': 1, 'state': 'closed'}, {'id': 974478862, 'number': 43, 'closed': datetime.datetime(2022, 7, 2, 7, 58, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 22, 3, 34, 18, tzinfo=datetime.timezone.utc), 'time_taken': 879862.0, 'time_delta': '10 days, 4:24:22', 'additions': 117, 'deletions': 1, 'state': 'closed'}, {'id': 971412442, 'number': 41, 'closed': datetime.datetime(2022, 6, 19, 13, 41, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 19, 5, 39, 18, tzinfo=datetime.timezone.utc), 'time_taken': 28956.0, 'time_delta': '8:02:36', 'additions': 31, 'deletions': 0, 'state': 'closed'}, {'id': 971411350, 'number': 40, 'closed': datetime.datetime(2022, 6, 21, 5, 53, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 19, 5, 28, 52, tzinfo=datetime.timezone.utc), 'time_taken': 174298.0, 'time_delta': '2 days, 0:24:58', 'additions': 98, 'deletions': 0, 'state': 'closed'}, {'id': 971410526, 'number': 39, 'closed': datetime.datetime(2022, 6, 19, 6, 38, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 19, 5, 20, 34, tzinfo=datetime.timezone.utc), 'time_taken': 4647.0, 'time_delta': '1:17:27', 'additions': 30, 'deletions': 0, 'state': 'closed'}, {'id': 969236154, 'number': 38, 'closed': datetime.datetime(2022, 6, 21, 19, 46, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 16, 11, 55, 57, tzinfo=datetime.timezone.utc), 'time_taken': 460244.0, 'time_delta': '5 days, 7:50:44', 'additions': 42, 'deletions': 11, 'state': 'closed'}, {'id': 968062608, 'number': 37, 'closed': datetime.datetime(2022, 6, 15, 16, 34, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 15, 11, 39, 24, tzinfo=datetime.timezone.utc), 'time_taken': 17711.0, 'time_delta': '4:55:11', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 967989456, 'number': 36, 'closed': datetime.datetime(2022, 6, 15, 16, 34, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 15, 10, 32, 18, tzinfo=datetime.timezone.utc), 'time_taken': 21717.0, 'time_delta': '6:01:57', 'additions': 104, 'deletions': 0, 'state': 'closed'}, {'id': 966433012, 'number': 35, 'closed': datetime.datetime(2022, 6, 19, 6, 37, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 14, 4, 32, 30, tzinfo=datetime.timezone.utc), 'time_taken': 439477.0, 'time_delta': '5 days, 2:04:37', 'additions': 748, 'deletions': 0, 'state': 'closed'}, {'id': 964163859, 'number': 33, 'closed': datetime.datetime(2022, 6, 10, 20, 37, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 10, 13, 48, 11, tzinfo=datetime.timezone.utc), 'time_taken': 24535.0, 'time_delta': '6:48:55', 'additions': 96, 'deletions': 0, 'state': 'closed'}, {'id': 964131186, 'number': 32, 'closed': datetime.datetime(2022, 6, 15, 16, 35, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 10, 13, 28, 30, tzinfo=datetime.timezone.utc), 'time_taken': 443208.0, 'time_delta': '5 days, 3:06:48', 'additions': 101, 'deletions': 0, 'state': 'closed'}, {'id': 964110278, 'number': 31, 'closed': datetime.datetime(2022, 6, 16, 10, 6, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 10, 13, 7, 34, tzinfo=datetime.timezone.utc), 'time_taken': 507535.0, 'time_delta': '5 days, 20:58:55', 'additions': 759, 'deletions': 5, 'state': 'closed'}, {'id': 961900377, 'number': 30, 'closed': datetime.datetime(2022, 6, 9, 11, 12, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 8, 16, 31, 24, tzinfo=datetime.timezone.utc), 'time_taken': 67239.0, 'time_delta': '18:40:39', 'additions': 104, 'deletions': 0, 'state': 'closed'}, {'id': 961887803, 'number': 29, 'closed': datetime.datetime(2022, 6, 9, 11, 19, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 8, 16, 20, 59, tzinfo=datetime.timezone.utc), 'time_taken': 68333.0, 'time_delta': '18:58:53', 'additions': 101, 'deletions': 0, 'state': 'closed'}, {'id': 961857719, 'number': 28, 'closed': datetime.datetime(2022, 6, 9, 11, 21, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 8, 15, 55, 37, tzinfo=datetime.timezone.utc), 'time_taken': 69938.0, 'time_delta': '19:25:38', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 958900640, 'number': 27, 'closed': datetime.datetime(2022, 6, 6, 12, 56, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 6, 9, 51, 56, tzinfo=datetime.timezone.utc), 'time_taken': 11081.0, 'time_delta': '3:04:41', 'additions': 101, 'deletions': 0, 'state': 'closed'}, {'id': 958893289, 'number': 26, 'closed': datetime.datetime(2022, 6, 9, 11, 20, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 6, 9, 43, 21, tzinfo=datetime.timezone.utc), 'time_taken': 265035.0, 'time_delta': '3 days, 1:37:15', 'additions': 46, 'deletions': 0, 'state': 'closed'}, {'id': 958341839, 'number': 25, 'closed': datetime.datetime(2022, 6, 9, 12, 40, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 5, 4, 9, 15, tzinfo=datetime.timezone.utc), 'time_taken': 376269.0, 'time_delta': '4 days, 8:31:09', 'additions': 187, 'deletions': 151, 'state': 'closed'}, {'id': 958029506, 'number': 24, 'closed': datetime.datetime(2022, 6, 4, 6, 59, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 4, 1, 37, 34, tzinfo=datetime.timezone.utc), 'time_taken': 19298.0, 'time_delta': '5:21:38', 'additions': 28, 'deletions': 0, 'state': 'closed'}, {'id': 957625725, 'number': 23, 'closed': datetime.datetime(2022, 6, 3, 20, 47, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 3, 16, 9, 42, tzinfo=datetime.timezone.utc), 'time_taken': 16677.0, 'time_delta': '4:37:57', 'additions': 101, 'deletions': 0, 'state': 'closed'}, {'id': 957565688, 'number': 22, 'closed': datetime.datetime(2022, 6, 3, 15, 40, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 3, 15, 8, 11, tzinfo=datetime.timezone.utc), 'time_taken': 1926.0, 'time_delta': '0:32:06', 'additions': 98, 'deletions': 0, 'state': 'closed'}, {'id': 957552389, 'number': 21, 'closed': datetime.datetime(2022, 6, 3, 15, 9, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 3, 14, 53, 39, tzinfo=datetime.timezone.utc), 'time_taken': 962.0, 'time_delta': '0:16:02', 'additions': 27, 'deletions': 0, 'state': 'closed'}, {'id': 956058754, 'number': 20, 'closed': datetime.datetime(2022, 7, 6, 19, 15, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 2, 15, 33, 9, tzinfo=datetime.timezone.utc), 'time_taken': 2950918.0, 'time_delta': '34 days, 3:41:58', 'additions': 5846, 'deletions': 330, 'state': 'closed'}, {'id': 951706408, 'number': 16, 'closed': datetime.datetime(2022, 5, 31, 21, 32, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 31, 9, 8, 22, tzinfo=datetime.timezone.utc), 'time_taken': 44629.0, 'time_delta': '12:23:49', 'additions': 105, 'deletions': 21, 'state': 'closed'}, {'id': 948180809, 'number': 14, 'closed': datetime.datetime(2022, 6, 4, 7, 22, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 26, 11, 48, 48, tzinfo=datetime.timezone.utc), 'time_taken': 761629.0, 'time_delta': '8 days, 19:33:49', 'additions': 73, 'deletions': 47, 'state': 'closed'}, {'id': 948167624, 'number': 13, 'closed': datetime.datetime(2022, 6, 2, 6, 56, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 26, 11, 32, 24, tzinfo=datetime.timezone.utc), 'time_taken': 588230.0, 'time_delta': '6 days, 19:23:50', 'additions': 71, 'deletions': 45, 'state': 'closed'}, {'id': 948161645, 'number': 12, 'closed': datetime.datetime(2022, 6, 3, 7, 52, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 26, 11, 26, 19, tzinfo=datetime.timezone.utc), 'time_taken': 678367.0, 'time_delta': '7 days, 20:26:07', 'additions': 78, 'deletions': 461, 'state': 'closed'}, {'id': 948154808, 'number': 11, 'closed': datetime.datetime(2022, 6, 4, 7, 30, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 26, 11, 18, 18, tzinfo=datetime.timezone.utc), 'time_taken': 763936.0, 'time_delta': '8 days, 20:12:16', 'additions': 27, 'deletions': 36, 'state': 'closed'}, {'id': 939850530, 'number': 10, 'closed': datetime.datetime(2024, 2, 17, 5, 6, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 18, 11, 36, 6, tzinfo=datetime.timezone.utc), 'time_taken': 55272613.0, 'time_delta': '639 days, 17:30:13', 'additions': 51, 'deletions': 0, 'state': 'closed'}, {'id': 939614563, 'number': 9, 'closed': datetime.datetime(2024, 2, 17, 5, 6, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 18, 7, 38, 42, tzinfo=datetime.timezone.utc), 'time_taken': 55286857.0, 'time_delta': '639 days, 21:27:37', 'additions': 11, 'deletions': 0, 'state': 'closed'}, {'id': 939420946, 'number': 8, 'closed': datetime.datetime(2024, 2, 17, 5, 6, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 18, 1, 45, 46, tzinfo=datetime.timezone.utc), 'time_taken': 55308032.0, 'time_delta': '640 days, 3:20:32', 'additions': 50, 'deletions': 0, 'state': 'closed'}, {'id': 936688242, 'number': 7, 'closed': datetime.datetime(2022, 6, 2, 6, 48, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 15, 7, 14, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1553671.0, 'time_delta': '17 days, 23:34:31', 'additions': 35, 'deletions': 0, 'state': 'closed'}, {'id': 936685178, 'number': 6, 'closed': datetime.datetime(2022, 6, 1, 8, 3, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 15, 6, 51, 8, tzinfo=datetime.timezone.utc), 'time_taken': 1473147.0, 'time_delta': '17 days, 1:12:27', 'additions': 26, 'deletions': 0, 'state': 'closed'}, {'id': 929246304, 'number': 4, 'closed': datetime.datetime(2022, 5, 14, 14, 31, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 6, 1, 13, 36, tzinfo=datetime.timezone.utc), 'time_taken': 739094.0, 'time_delta': '8 days, 13:18:14', 'additions': 20, 'deletions': 0, 'state': 'closed'}, {'id': 927843152, 'number': 3, 'closed': datetime.datetime(2024, 2, 17, 5, 6, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 4, 16, 51, tzinfo=datetime.timezone.utc), 'time_taken': 56463318.0, 'time_delta': '653 days, 12:15:18', 'additions': 35, 'deletions': 0, 'state': 'closed'}, {'id': 913712776, 'number': 2, 'closed': datetime.datetime(2022, 5, 27, 13, 31, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 20, 2, 19, 13, tzinfo=datetime.timezone.utc), 'time_taken': 3237121.0, 'time_delta': '37 days, 11:12:01', 'additions': 113, 'deletions': 13, 'state': 'closed'}]"
4164482,django,django/django,Python,31388,78557,2302,3156,32845,239,28,239,"[{'id': 1005286491, 'number': 15866, 'closed': datetime.datetime(2022, 9, 6, 15, 58, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 22, 6, 52, 14, tzinfo=datetime.timezone.utc), 'time_taken': 4007153.0, 'time_delta': '46 days, 9:05:53', 'additions': 41, 'deletions': 0, 'state': 'closed'}]"
