pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
984020030,Extend the `livecheck` DSL to work for resources,"- [x] Have you followed the guidelines in our [Contributing](https://github.com/Homebrew/brew/blob/HEAD/CONTRIBUTING.md) document?
- [x] Have you checked to ensure there aren't other open [Pull Requests](https://github.com/Homebrew/brew/pulls) for the same change?
- [x] Have you added an explanation of what your changes do and why you'd like us to include them?
- [x] Have you written new tests for your changes? [Here's an example](https://github.com/Homebrew/brew/blob/HEAD/Library/Homebrew/test/PATH_spec.rb).
- [x] Have you successfully run `brew style` with your changes locally?
- [x] Have you successfully run `brew typecheck` with your changes locally?
- [x] Have you successfully run `brew tests` with your changes locally?

-----

This PR extends the `livecheck` DSL to work for resources as mentioned [here](https://github.com/Homebrew/gsoc/issues/49#issuecomment-1040520006).

---

As suggested by @nandahkrishna, I have verified `livecheck` DSL inside resource block by updating few resource blocks locally.

_For instance_: inside `Library/Taps/homebrew/homebrew-core/Formula/airshare.rb`, add the `livecheck` block inside the resource `aiohttp` like mentioned below:

```ruby
...
  resource ""aiohttp"" do
    url ""https://files.pythonhosted.org/packages/5a/86/5f63de7a202550269a617a5d57859a2961f3396ecd1739a70b92224766bc/aiohttp-3.8.1.tar.gz""
    sha256 ""fc5471e1a54de15ef71c1bc6ebe80d4dc681ea600e68bfd1cbce40427f0b7578""
    livecheck do
      url ""https://brew.sh/foo-1.0.tar.gz""
      regex(/foo/)
    end
  end
...
```

and from interactive ruby-shell (`brew irb`), run and check the following outputs:

```ruby
:airshare.f.resources[0].livecheck.class
:airshare.f.resources[0].livecheck.url
:airshare.f.resources[0].livecheck.regex
```

and it works as expected.

```
=> Livecheck
=> ""https://brew.sh/foo-1.0.tar.gz""
=> /foo/
```

---

Kindly, do let me know if I miss something or any further improvement that we can do here.
",True,13496,https://api.github.com/repos/Homebrew/brew/pulls/13496,https://github.com/Homebrew/brew/pull/13496,closed,77,12,3,12,2,3,2,0,"[{'name': 'gsoc-outreachy'}, {'name': 'outdated'}]",2022-06-30 15:52:17+00:00,2022-07-04 17:35:20+00:00,351783.0,"4 days, 1:43:03","[{'comment_id': 912027681, 'comment_body': '```suggestion\r\n  subject(:resource) { described_class.new(""test"") }\r\n  \r\n  let(:livecheck_resource) {\r\n    described_class.new do\r\n      url ""https://brew.sh/test-0.0.1.tgz""\r\n      sha256 ""0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef""\r\n\r\n      livecheck do\r\n        url ""https://brew.sh/foo-1.0.tar.gz""\r\n        regex(/foo/)\r\n      end\r\n    end\r\n  }\r\n```\r\n\r\nThe `Resource` object used in the tests below are duplicated, so there\'s something to be said for extracting it (as we do in the `livecheck_spec.rb`). The suggestion above also adds a `sha256`, to make it a bit more representative of `resource` blocks found in homebrew/core.', 'comment_created': datetime.datetime(2022, 7, 1, 14, 45, 55, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 912029582, 'comment_body': '```suggestion\r\n      expect(livecheck_resource.livecheck.url).to eq(""https://brew.sh/foo-1.0.tar.gz"")\r\n      expect(livecheck_resource.livecheck.regex).to eq(/foo/)\r\n```', 'comment_created': datetime.datetime(2022, 7, 1, 14, 48, 17, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 912029789, 'comment_body': '```suggestion\r\n      expect(livecheck_resource.livecheckable?).to be true\r\n```', 'comment_created': datetime.datetime(2022, 7, 1, 14, 48, 33, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}]","[{'commit_sha': 'ff63136c6f96f73f4641b4e5525e7d23fed3d7c0', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ba610707dff3fec62c35c94e942f8d6f6286deb', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7692098cd105ade885394e3bfd59fac168f892d4', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3b17ee7bf21c06c4c443f213389c9c09dfe24f0', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed37ee55a971079e0e52e9bdebb30df20dc0d40b', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8399c2638351484a047f538e5fbf5e6bf53dbef3', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbfbd196740bb2c9fdd69f3ae217708270a4bcc6', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a874d833f969a66a35f4196c1e3d937b82c7b188', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '090d71163b5ad51d7dfd6ef7c97b766fc3721877', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ab79e54233e3604459c40b68e180fb5477d2be0', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4197fc96e0c320deada07fd1d0107e06c1d1cd8', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e69345b9421aa3e884c10d6b5213a6a10a8c301c', 'committer_username': 'samford', 'committer_name': 'Sam Ford', 'committer_email': None, 'commit_date': datetime.datetime(2012, 3, 28, 19, 33, 25, tzinfo=datetime.timezone.utc)}]",Mohammad Zain Abbas,19189095,mohammadzainabbas@gmail.com,User,,135,,45,59
1009913458,Augment `brew livecheck` with a `--resources` option to check resources,"- [x] Have you followed the guidelines in our [Contributing](https://github.com/Homebrew/brew/blob/HEAD/CONTRIBUTING.md) document?
- [x] Have you checked to ensure there aren't other open [Pull Requests](https://github.com/Homebrew/brew/pulls) for the same change?
- [x] Have you added an explanation of what your changes do and why you'd like us to include them?
- [x] Have you written new tests for your changes? [Here's an example](https://github.com/Homebrew/brew/blob/HEAD/Library/Homebrew/test/PATH_spec.rb).
- [x] Have you successfully run `brew style` with your changes locally?
- [x] Have you successfully run `brew typecheck` with your changes locally?
- [x] Have you successfully run `brew tests` with your changes locally?

-----

This PR aims to extend the `brew livecheck` command to work for resources as well. 

---

I have added an option `-r` or `--resources` in `brew livecheck` command which do a livecheck for resources when given a particular Formulae.

_For instance_: inside `Library/Taps/homebrew/homebrew-core/Formula/influxdb.rb`, add the following livecheck block for `pkg-config-wrapper` resource:

```ruby
...
resource ""pkg-config-wrapper"" do
    url ""https://github.com/influxdata/pkg-config/archive/refs/tags/v0.2.11.tar.gz""
    sha256 ""52b22c151163dfb051fd44e7d103fc4cde6ae8ff852ffc13adeef19d21c36682""

    livecheck do
      url ""https://github.com/influxdata/pkg-config/tags""
      regex(%r{href=""/influxdata/pkg-config/archive/refs/tags/v(.*).tar.gz""}i)
      strategy :page_match
    end
  end
...
```
and then run the following command:

```bash
brew livecheck influxdb --resources
```

or 

```bash
brew livecheck influxdb -r
```

you will get the resources' information as well (as expected)

```txt
influxdb: 2.4.0 ==> 2.4.0
  pkg-config-wrapper: 0.2.11 ==> 0.2.12
  ui-assets: 2.4.0 ==> 2022-09-16
```

---

Also, this PR includes the implementation for resource information in the default, `--debug`, and `--json` output for resources (will be needing valuable feedback for this)

```bash
brew livecheck influxdb --resources --debug
``` 

will give us the below output

```txt
/usr/local/Homebrew/Library/Homebrew/brew.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/influxdb.rb

Formula:          influxdb
Livecheckable?:   Yes

URL (stable):     https://github.com/influxdata/influxdb.git
Strategy:         Git
Regex:            /^v?((?!9\.9\.9)\d+(?:\.\d+)+)$/i

Matched Versions:
1.8.0, 0.0.1, 0.0.2, 0.0.3, 0.0.4, 0.0.5, 0.0.6, 0.0.7, 0.0.8, 0.0.9, 0.1.0, 0.10.0, 0.10.1, 0.10.2, 0.10.3, 0.11.0, 0.11.1, 0.12.0, 0.12.1, 0.12.2, 0.13.0, 0.2.0, 0.3.0, 0.3.1, 0.3.2, 0.4.0, 0.4.1, 0.4.2, 0.4.3, 0.4.4, 0.5.0, 0.5.1, 0.5.10, 0.5.11, 0.5.12, 0.5.2, 0.5.3, 0.5.4, 0.5.5, 0.5.6, 0.5.7, 0.5.8, 0.5.9, 0.6.0, 0.6.1, 0.6.2, 0.6.3, 0.6.4, 0.6.5, 0.7.0, 0.7.1, 0.7.2, 0.7.3, 0.8.0, 0.8.1, 0.8.2, 0.8.3, 0.8.4, 0.8.5, 0.8.6, 0.8.7, 0.8.8, 0.9.0, 0.9.1, 0.9.2, 0.9.2.1, 0.9.3, 0.9.4, 0.9.4.1, 0.9.4.2, 0.9.5, 0.9.5.1, 0.9.6, 0.9.6.1, 1.0.0, 1.0.1, 1.0.2, 1.1.0, 1.1.1, 1.1.2, 1.1.3, 1.1.4, 1.1.5, 1.10.0, 1.2.0, 1.2.1, 1.2.2, 1.2.3, 1.2.4, 1.3.0, 1.3.1, 1.3.2, 1.3.3, 1.3.4, 1.3.5, 1.3.6, 1.3.7, 1.3.8, 1.3.9, 1.4.0, 1.4.1, 1.4.2, 1.4.3, 1.5.0, 1.5.1, 1.5.2, 1.5.3, 1.5.4, 1.5.5, 1.6.0, 1.6.1, 1.6.2, 1.6.3, 1.6.4, 1.6.5, 1.6.6, 1.7.0, 1.7.1, 1.7.10, 1.7.11, 1.7.2, 1.7.3, 1.7.4, 1.7.5, 1.7.6, 1.7.7, 1.7.8, 1.7.9, 1.8.1, 1.8.10, 1.8.2, 1.8.3, 1.8.4, 1.8.5, 1.8.6, 1.8.7, 1.8.8, 1.8.9, 1.9.0, 1.9.1, 1.9.2, 1.9.3, 1.9.4, 1.9.5, 1.9.6, 1.9.7, 1.9.8, 2.0.0, 2.0.1, 2.0.2, 2.0.3, 2.0.4, 2.0.5, 2.0.6, 2.0.7, 2.0.8, 2.0.9, 2.1.0, 2.1.1, 2.2.0, 2.3.0, 2.4.0


Resource:         pkg-config-wrapper
Livecheckable?:   Yes

URL:              https://github.com/influxdata/pkg-config/tags
Strategy:         PageMatch
Regex:            /href=""\/influxdata\/pkg-config\/archive\/refs\/tags\/v(.*).tar.gz""/i

Matched Versions:
0.2.12, 0.2.11, 0.2.10, 0.2.9, 0.2.8, 0.2.7, 0.2.6, 0.2.5, 0.2.4, 0.2.3


Resource:         ui-assets
Livecheckable?:   No

URL:              https://github.com/influxdata/ui/releases/download/OSS-Master/build.tar.gz
URL (processed):  https://github.com/influxdata/ui.git
Strategy:         Git

Matched Versions:
r, 2.1.0, 2.1.1, 2.1.2, 2022-09-01, 2022-09-16, 9.9.9.test, 2.0.5, 2.0.7, 2.0.8, 2.0.9

influxdb: 2.4.0 ==> 2.4.0
  pkg-config-wrapper: 0.2.11 ==> 0.2.12
  ui-assets: 2.4.0 ==> 2022-09-16
```

and 

```bash
brew livecheck influxdb --resources --json
```

will output the following

```json
[
  {
    ""formula"": ""influxdb"",
    ""version"": {
      ""current"": ""2.4.0"",
      ""latest"": ""2.4.0"",
      ""outdated"": false,
      ""newer_than_upstream"": false
    },
    ""resources"": [
      {
        ""resource"": ""pkg-config-wrapper"",
        ""version"": {
          ""current"": ""0.2.11"",
          ""latest"": ""0.2.12"",
          ""outdated"": true,
          ""newer_than_upstream"": false
        }
      },
      {
        ""resource"": ""ui-assets"",
        ""version"": {
          ""current"": ""2.4.0"",
          ""latest"": ""2022-09-16"",
          ""outdated"": true,
          ""newer_than_upstream"": false
        }
      }
    ]
  }
]
```

---

Kindly, do let me know if there's something missing or any further improvement that we can do here.",True,13613,https://api.github.com/repos/Homebrew/brew/pulls/13613,https://github.com/Homebrew/brew/pull/13613,closed,441,114,8,142,12,99,1,0,[{'name': 'outdated'}],2022-07-27 17:11:28+00:00,2022-10-02 17:31:18+00:00,5789990.0,"67 days, 0:19:50","[{'comment_id': 932162612, 'comment_body': '```suggestion\r\n             description: ""Also check resources for formulae.""\r\n```\r\nFrom what I\'ve seen, Casks don\'t have `resource` blocks.', 'comment_created': datetime.datetime(2022, 7, 28, 12, 34, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 932170383, 'comment_body': '```suggestion\r\n        if check_resources && formula_or_cask.resources.present?\r\n```\r\nIt might be better to simplify this condition here and remove the `else` branch where you have the ""No resources present"" output – I think it\'s clear enough that resources will be checked if the formula has any, the lack of resource outputs when specifying `-r` already tells us there aren\'t any resources for that formula. (Others may feel differently though.)', 'comment_created': datetime.datetime(2022, 7, 28, 12, 42, 44, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 932170882, 'comment_body': '```suggestion\r\n```\r\nRelated to the previous comment.', 'comment_created': datetime.datetime(2022, 7, 28, 12, 43, 15, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 932171956, 'comment_body': 'As discussed during our weekly meeting, we should refactor `resource_version` to accept a single resource and return the latest version information for it.', 'comment_created': datetime.datetime(2022, 7, 28, 12, 44, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 932181718, 'comment_body': 'You should be modifying the `info` hash for resources too before the JSON output is constructed, i.e., `info[:resources]` should contain this information, just like it does for formulae.', 'comment_created': datetime.datetime(2022, 7, 28, 12, 54, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 932186052, 'comment_body': 'Just like with `resource_version`, it might be better to have the method print the result for just a single resource. This might allow us to reuse `print_latest_version` with some modifications instead of creating a new method.', 'comment_created': datetime.datetime(2022, 7, 28, 12, 58, 13, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 932187592, 'comment_body': '```suggestion\r\n        when Formula, Resource\r\n```', 'comment_created': datetime.datetime(2022, 7, 28, 12, 59, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 932832203, 'comment_body': '```suggestion\r\n        puts ""Resource:          #{resource_name(resource, full_name: full_name)}""\r\n        puts ""Livecheckable?:    #{has_livecheckable ? ""Yes"" : ""No""}""\r\n```\r\n\r\nThis output should align with the existing style seen in `#latest_version` (namely, using `puts` here instead of `odebug`).', 'comment_created': datetime.datetime(2022, 7, 29, 3, 16, 2, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 932833273, 'comment_body': '```suggestion\r\n        puts ""  #{resource_s}: #{current_s} ==> #{latest_s}""\r\n```\r\n\r\nI tend to agree with Nanda\'s suggestion on Slack of simply indenting resources by two spaces, unless someone has a more compelling idea.', 'comment_created': datetime.datetime(2022, 7, 29, 3, 19, 18, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 933948028, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 7, 31, 8, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 933948063, 'comment_body': 'Okay, done.', 'comment_created': datetime.datetime(2022, 7, 31, 8, 25, 40, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 933948182, 'comment_body': 'Refactored `print_latest_version` to work for a single resource as well.', 'comment_created': datetime.datetime(2022, 7, 31, 8, 26, 32, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 933948306, 'comment_body': 'Okay ✅ ', 'comment_created': datetime.datetime(2022, 7, 31, 8, 27, 12, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 933948353, 'comment_body': 'Done ✅ ', 'comment_created': datetime.datetime(2022, 7, 31, 8, 27, 31, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 933948579, 'comment_body': 'Actually, I was using `has_resources` to check if we have any resources to print output for resources or not. But anyway, I have refracted the code as suggested. ', 'comment_created': datetime.datetime(2022, 7, 31, 8, 29, 40, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 934159501, 'comment_body': ""Don't forget to test formulae without using the `--resources` option, to ensure these changes don't break existing functionality.\r\n\r\nAt the moment, `package_or_resource_s` is defined conditionally, so the subsequent statements that use `+=` to append to what should be a string will produce an ```undefined method `+' for nil:NilClass``` error when `check_resource` is `false`. This needs to be handled in a way that `package_or_resource_s` is always defined."", 'comment_created': datetime.datetime(2022, 8, 1, 5, 52, 58, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 934168641, 'comment_body': ""`info[:meta][:livecheckable]` is currently giving me an `undefined method `[]' for nil:NilClass` error when testing `influxdb` using the instructions in the PR description. This occurs when livecheck attempts to print information for a resource:\r\n\r\n```\r\ninfluxdb: 2.3.0 ==> 2.3.0\r\nError: influxdb: undefined method `[]' for nil:NilClass\r\n```\r\n\r\nTo resolve this, you'll need to look into why `info[:meta]` is `nil` for a resource at this point. This may also explain why the `livecheckable` field is missing for resource objects in the verbose JSON output."", 'comment_created': datetime.datetime(2022, 8, 1, 6, 11, 48, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 934172529, 'comment_body': '```suggestion\r\n        puts ""\\n\\n""\r\n```\r\n\r\nIf you\'re simply looking to print a blank line, calling `puts` without an argument will accomplish this (you can see this approach used in `#latest_version`).\r\n\r\nThat said, what do we think about using a double blank line before resources to better separate the debug output? With a single blank line, resource output coming after the formula output (or another resource) tends to blend together and I feel like the extra blank line helps to keep it intelligible.', 'comment_created': datetime.datetime(2022, 8, 1, 6, 19, 17, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 934183402, 'comment_body': 'Up to this point, the output from `#print_latest_version` has come directly after the debug output without any separation:\r\n\r\n```\r\nMatched Versions:\r\n1.8.0, 0.0.1, 0.0.2, 0.0.3, 0.0.4, 0.0.5, 0.0.6, 0.0.7, 0.0.8, 0.0.9, 0.1.0, ..., 2.0.0, 2.0.1, 2.0.2, 2.0.3, 2.0.4, 2.0.5, 2.0.6, 2.0.7, 2.0.8, 2.0.9, 2.1.0, 2.1.1, 2.2.0, 2.3.0\r\ninfluxdb: 2.3.0 ==> 2.3.0\r\n```\r\n\r\nHowever, now that we may be printing multiple lines when checking resource versions, this can start to look a bit cramped:\r\n\r\n```\r\n...\r\n\r\nResource:          pkg-config-wrapper\r\nLivecheckable?:    Yes\r\n\r\nURL:              https://github.com/influxdata/pkg-config/tags\r\nStrategy:         PageMatch\r\nRegex:            /href=""\\/influxdata\\/pkg-config\\/archive\\/refs\\/tags\\/v(.*).tar.gz""/i\r\n\r\nMatched Versions:\r\n0.2.12, 0.2.11, 0.2.10, 0.2.9, 0.2.8, 0.2.7, 0.2.6, 0.2.5, 0.2.4, 0.2.3\r\n\r\nResource:          ui-assets\r\nLivecheckable?:    No\r\ninfluxdb: 2.3.0 ==> 2.3.0\r\n  pkg-config-wrapper: 0.2.11 ==> 0.2.12\r\n  ui-assets: 2.1.2 ==> 2.1.2\r\n```\r\n\r\nThere may be something to be said for printing a blank line before the output from `#print_latest_version` in the debug output:\r\n\r\n```suggestion\r\n        puts if debug\r\n        print_latest_version(info, verbose: verbose, ambiguous_cask: ambiguous_casks.include?(formula_or_cask), check_resource: false)\r\n```\r\n\r\nThis ends up looking like:\r\n\r\n```\r\n...\r\n\r\nResource:          ui-assets\r\nLivecheckable?:    No\r\n\r\ninfluxdb: 2.3.0 ==> 2.3.0\r\n  pkg-config-wrapper: 0.2.11 ==> 0.2.12\r\n  ui-assets: 2.1.2 ==> 2.1.2\r\n```', 'comment_created': datetime.datetime(2022, 8, 1, 6, 38, 22, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 934939915, 'comment_body': 'Oops, my bad. I missed it. Fixed the issue ✅', 'comment_created': datetime.datetime(2022, 8, 1, 21, 38, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 934946781, 'comment_body': 'Fixed the issue ✅ ', 'comment_created': datetime.datetime(2022, 8, 1, 21, 51, 7, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 934967886, 'comment_body': 'I tend to agree with you on this one.', 'comment_created': datetime.datetime(2022, 8, 1, 22, 31, 57, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 934971107, 'comment_body': 'Totally agreed! It was missing for Formulae/Cask as well. Initially, I added a blank space there, but later removed it in order to not change the debug output for Formulae/Cask. ', 'comment_created': datetime.datetime(2022, 8, 1, 22, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 935626127, 'comment_body': 'I think this entire block should be before you do\r\n```\r\ninfo[:resources] = resource_version_info if check_resources\r\n```\r\nand that line should be changed to\r\n```\r\ninfo[:resources] = resources_info if check_resources\r\n```\r\nAs you can see, we make these changes for formulae before the JSON output is returned.', 'comment_created': datetime.datetime(2022, 8, 2, 13, 53, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 935627864, 'comment_body': 'Perhaps we should do this only if `verbose` is `true` (for formulae/casks we exclude `:meta` if `verbose` is not `true`).', 'comment_created': datetime.datetime(2022, 8, 2, 13, 55, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 935629283, 'comment_body': '```suggestion\r\n              ambiguous_cask: false,\r\n```\r\nThis should simply be `false`. This argument makes sense only for formulae/casks.', 'comment_created': datetime.datetime(2022, 8, 2, 13, 56, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 935629525, 'comment_body': '```suggestion\r\n              resource: true,\r\n```', 'comment_created': datetime.datetime(2022, 8, 2, 13, 56, 30, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 935630391, 'comment_body': '```suggestion\r\n    sig { params(info: Hash, verbose: T::Boolean, ambiguous_cask: T::Boolean, resource: T::Boolean).void }\r\n    def print_latest_version(info, verbose:, ambiguous_cask: false, resource: false)\r\n```', 'comment_created': datetime.datetime(2022, 8, 2, 13, 57, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 935632425, 'comment_body': '```suggestion\r\n      package_or_resource_s = resource ? ""  "" : """"\r\n      package_or_resource_s += ""#{Tty.blue}#{info[:formula] || info[:cask] || info[:resource]}#{Tty.reset}""\r\n      package_or_resource_s += "" (cask)"" if ambiguous_cask\r\n      package_or_resource_s += "" (guessed)"" if !info[:meta][:livecheckable] && verbose\r\n```', 'comment_created': datetime.datetime(2022, 8, 2, 13, 58, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 935635957, 'comment_body': 'As discussed earlier on Slack, we should check _all_ resources, not just the ones with `livecheck` blocks.', 'comment_created': datetime.datetime(2022, 8, 2, 14, 1, 41, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 935636626, 'comment_body': '```suggestion\r\n        puts ""Livecheckable?:    #{resource.livecheckable? ? ""Yes"" : ""No""}""\r\n```', 'comment_created': datetime.datetime(2022, 8, 2, 14, 2, 13, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 935636954, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2022, 8, 2, 14, 2, 28, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 939700340, 'comment_body': 'Done ✅', 'comment_created': datetime.datetime(2022, 8, 7, 17, 39, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 947257009, 'comment_body': ""I don't think this should be removed – is there any particular reason to do so?"", 'comment_created': datetime.datetime(2022, 8, 16, 21, 16, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 947257214, 'comment_body': ""Similarly, this shouldn't be removed either."", 'comment_created': datetime.datetime(2022, 8, 16, 21, 16, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 947258353, 'comment_body': ""```suggestion\r\n            resource_version(\r\n              resource,\r\n              json:      json,\r\n              full_name: use_full_name,\r\n              verbose:   verbose,\r\n              debug:     debug,\r\n            )\r\n```\r\nIt might be sufficient to do just this since the `resource_info` variable is practically useless – it's just used to return the value that was assigned to it in the previous statement."", 'comment_created': datetime.datetime(2022, 8, 16, 21, 18, 5, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 947259906, 'comment_body': '```suggestion\r\n        puts ""Resource:         #{resource.name}""\r\n        puts ""Livecheckable?:   #{has_livecheckable ? ""Yes"" : ""No""}""\r\n```\r\nFor consistency with the formula debug output; the resource debug output wasn\'t properly aligned.', 'comment_created': datetime.datetime(2022, 8, 16, 21, 20, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 947263295, 'comment_body': 'You do not seem to have accounted for `livecheck` blocks in resources that contain `skip` – you should ensure that this behaviour is supported and identical to what happens with Formulae and Casks.', 'comment_created': datetime.datetime(2022, 8, 16, 21, 25, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 947268593, 'comment_body': 'It seems like the code to handle a blank latest version for resources is not present. This situation arises when a latest version could not be found and must be implemented just like for formulae. You might have to modify `resource_version` and maybe even `status_hash` to accommodate this behaviour.\r\n\r\nYou should also keep in mind that a formula\'s livecheck may error out with the ""unable to get versions"" message, but the resource results should still be presented if possible. This would mean you\'ll have to rearrange/modify the code that handles a formula\'s blank latest version and ensure that the resource information is also output, in addition to the `status_hash` result.', 'comment_created': datetime.datetime(2022, 8, 16, 21, 33, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 948131921, 'comment_body': ""Oops! my bad. I removed it because `brew typecheck` was giving me a warning here, but I guess it was before all the previous changes that I have done. Now, there's no issue with it. "", 'comment_created': datetime.datetime(2022, 8, 17, 15, 46, 34, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 950982090, 'comment_body': '```suggestion\r\n        print_latest_version(info, verbose: verbose, ambiguous_cask: ambiguous_casks.include?(formula_or_cask))\r\n```\r\n\r\nThe default `resource` argument value is `false`, so we can omit `resource: false` here and continue to use the pre-existing `#print_latest_version` call without modification.', 'comment_created': datetime.datetime(2022, 8, 22, 3, 22, 15, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 950988384, 'comment_body': '```suggestion\r\n```\r\n\r\nSimilar to the previous comment, the default `ambiguous_cask` argument value is `false`, so we can omit it in this call.', 'comment_created': datetime.datetime(2022, 8, 22, 3, 42, 7, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 951003532, 'comment_body': '```suggestion\r\n      package_or_resource_s += "" (guessed)"" if verbose && !info[:meta][:livecheckable]\r\n```\r\n\r\nThe behavior for resources should be the same as formulae in terms of the `(guessed)` output. That said, this suggested change will error because the `#resource_version` method isn\'t providing all the data we need in its return value. Basically, `#resource_version` should always return all of the data (since `#print_latest_version` needs `:meta` information) and `#run_checks` should take care of removing `:meta` from the resource hashes when the `--json` flag is set but the `--verbose` flag is not.\r\n\r\nYou\'ll need to remove a few early returns in `#resource_version` that are artificially restricting the returned data and add additional logic in `#run_checks` similar to the existing `info.except!(:meta) unless verbose` (but applying to each resource hash in the array, of course).\r\n\r\nIf this isn\'t clear, take a look at the return value from `#latest_version` and how it\'s handled in `#run_checks`.', 'comment_created': datetime.datetime(2022, 8, 22, 4, 30, 2, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 951005849, 'comment_body': '```suggestion\r\n        resource_version_info[:meta][:livecheckable] = has_livecheckable\r\n```\r\n\r\nThis value should align with the format of the existing JSON output. That is to say, this should be a boolean, not a ""Yes""/""No"" string. [A string value here may also cause some logic in `#print_latest_version` to work in an unexpected manner, as a string would be a ""truthy"" value.]', 'comment_created': datetime.datetime(2022, 8, 22, 4, 36, 47, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 951016824, 'comment_body': ""I also noticed that a resource `livecheck` block using `#skip` didn't work when I tested it, so I second this. At least at the moment, I believe we only need to concern ourselves with `skip` `livecheck` blocks for resources but, to achieve this, we will need to make changes to the `Livecheck::SkipConditions` module.\r\n\r\nOff the top of my head:\r\n\r\n* The `#formula_or_cask_skip` method should be updated to handle resources and it would probably make sense to rename it to `#package_or_resource_skip` (to align with the other changes here).\r\n* We will need a `RESOURCE_CHECKS` array (like the existing ones for formulae and casks) that simply includes `:package_or_resource_skip`.\r\n* `#skip_information`/`#referenced_skip_information`/`#print_skip_information` will need to be updated to handle resources as well.\r\n\r\nIf you have any questions about this while looking through the `SkipConditions` module, feel free to ask (e.g., on Slack)."", 'comment_created': datetime.datetime(2022, 8, 22, 5, 6, 38, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 952685118, 'comment_body': 'Make sense. Done ✅ ', 'comment_created': datetime.datetime(2022, 8, 23, 14, 14, 19, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 952687129, 'comment_body': ""Oh yeah! you are right. Sorry, I missed it. Thanks for pointing it out. I've made the suggested changes."", 'comment_created': datetime.datetime(2022, 8, 23, 14, 15, 55, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 973666923, 'comment_body': ""I wonder if we should modify `version_info` to include resource information as well (though I haven't tested a scenario where this condition is true)."", 'comment_created': datetime.datetime(2022, 9, 18, 6, 19, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 973667041, 'comment_body': 'The `meta` key is present even when you don\'t pass `--verbose`.\r\n```\r\n➜ brew lc -r --json influxdb\r\n[\r\n  {\r\n    ""formula"": ""influxdb"",\r\n    ""status"": ""error"",\r\n    ""messages"": [\r\n      ""Unable to get versions""\r\n    ],\r\n    ""meta"": {\r\n      ""livecheckable"": true\r\n    },\r\n    ""resources"": [\r\n      {\r\n        ""resource"": ""pkg-config-wrapper"",\r\n        ""version"": {\r\n          ""current"": ""0.2.11"",\r\n          ""latest"": ""0.2.12"",\r\n          ""newer_than_upstream"": false,\r\n          ""outdated"": true\r\n        },\r\n        ""meta"": {\r\n          ""url"": {\r\n            ""original"": ""https://github.com/influxdata/pkg-config/archive/refs/tags/v0.2.11.tar.gz"",\r\n            ""processed"": ""https://github.com/influxdata/pkg-config.git""\r\n          },\r\n          ""livecheckable"": false\r\n        }\r\n      },\r\n      {\r\n        ""resource"": ""ui-assets"",\r\n        ""version"": {\r\n          ""current"": ""2.4.0"",\r\n          ""latest"": ""2022-09-16"",\r\n          ""newer_than_upstream"": false,\r\n          ""outdated"": true\r\n        },\r\n        ""meta"": {\r\n          ""url"": {\r\n            ""original"": ""https://github.com/influxdata/ui/releases/download/OSS-Master/build.tar.gz"",\r\n            ""processed"": ""https://github.com/influxdata/ui.git""\r\n          },\r\n          ""livecheckable"": false\r\n        }\r\n      }\r\n    ]\r\n  }\r\n]\r\n```', 'comment_created': datetime.datetime(2022, 9, 18, 6, 21, 20, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 973728131, 'comment_body': 'I was thinking of including resource information to `version_info` too but I was not sure about the scenario in which this line execute, since the only time \r\n\r\n```ruby\r\nif version_info.is_a?(Hash) && version_info[:status] && version_info[:messages]\r\n```\r\nevaluates to `true` is when `latest_version` method returns a `Hash` from `status_hash` method (check below):\r\n\r\n```ruby\r\n...\r\n        if messages.is_a?(Array) && match_version_map.blank?\r\n          puts messages unless json\r\n          next if i + 1 < urls.length\r\n\r\n          return status_hash(formula_or_cask, ""error"", messages, full_name: full_name, verbose: verbose)\r\n        end\r\n...\r\n```\r\n\r\nHowever, I could include resource information to `version_info` if that\'s what you suggest', 'comment_created': datetime.datetime(2022, 9, 18, 14, 16, 12, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 973728410, 'comment_body': 'Are you sure that you are getting this output ? I ran the same command:\r\n\r\n```bash\r\nbrew lc -r --json influxdb\r\n```\r\n\r\nand got the expected output\r\n\r\n```json\r\n[\r\n  {\r\n    ""formula"": ""influxdb"",\r\n    ""version"": {\r\n      ""current"": ""2.4.0"",\r\n      ""latest"": ""2.4.0"",\r\n      ""outdated"": false,\r\n      ""newer_than_upstream"": false\r\n    },\r\n    ""resources"": [\r\n      {\r\n        ""resource"": ""pkg-config-wrapper"",\r\n        ""version"": {\r\n          ""current"": ""0.2.11"",\r\n          ""latest"": ""0.2.12"",\r\n          ""newer_than_upstream"": false,\r\n          ""outdated"": true\r\n        }\r\n      },\r\n      {\r\n        ""resource"": ""ui-assets"",\r\n        ""version"": {\r\n          ""current"": ""2.4.0"",\r\n          ""latest"": ""2022-09-16"",\r\n          ""newer_than_upstream"": false,\r\n          ""outdated"": true\r\n        }\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\n```', 'comment_created': datetime.datetime(2022, 9, 18, 14, 18, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 973728912, 'comment_body': 'This occurs when you modify the `livecheck` block of the formula to raise an error. I modified `influxdb`\'s `livecheck` to give an ""Unable to get versions"" message, as you can see in the output.', 'comment_created': datetime.datetime(2022, 9, 18, 14, 22, 25, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 973737946, 'comment_body': '> This occurs when you modify the `livecheck` block of the formula to raise an error. I modified `influxdb`\'s `livecheck` to give an ""Unable to get versions"" message, as you can see in the output.\r\n\r\nFixed ✅ Thanks for pointing it out.', 'comment_created': datetime.datetime(2022, 9, 18, 15, 30, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 975865311, 'comment_body': ""```suggestion\r\n          $stderr.puts e.backtrace if debug && !e.is_a?(Livecheck::Error)\r\n          print_resources_info(resource_version_info, verbose: verbose) if check_for_resources\r\n          nil\r\n        end\r\n```\r\n\r\nThis if/else implicitly returns a value but the addition of this `#print_resources_info` call would undermine that. Printing the resources information would also be a bit strange in this particular context if we're not printing information for the formula/cask before it (error information in this case), so there's something to be said for moving it into the `elsif !quiet` branch. This change would also make sure that this output respects the `--json` flag."", 'comment_created': datetime.datetime(2022, 9, 20, 22, 30, 17, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 976042530, 'comment_body': ""This is a small tweak but the `Resource` case should be moved after the cask case, partly for the sake of consistency but also because resources will be checked less frequently than formulae/casks (so it doesn't make sense as the first case)."", 'comment_created': datetime.datetime(2022, 9, 21, 5, 16, 2, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 976048945, 'comment_body': ""```suggestion\r\n      livecheck_regex = livecheck.regex\r\n      livecheck_strategy = livecheck.strategy\r\n      livecheck_strategy_block = livecheck.strategy_block\r\n```\r\n\r\nUnless I'm mistaken, `Resource#livecheck` should always return a `Livecheck` object, so we shouldn't need to use the safe navigation operator to guard against a bad value here (i.e., we don't use it in the comparable code in `#latest_version`). That is to say, if a resource doesn't contain a `livecheck` block, these methods will return their initial value of `nil`, as expected."", 'comment_created': datetime.datetime(2022, 9, 21, 5, 30, 1, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 976065755, 'comment_body': '```suggestion\r\n        return status_hash(resource, ""error"", [""Unable to get versions""], verbose: verbose) if res_latest.blank?\r\n```\r\n\r\n`Version` responds to `#blank?` and the related code in `#run_checks` simply uses `latest.blank?`, so I don\'t think we need to do string conversion here but correct me if I\'m wrong.', 'comment_created': datetime.datetime(2022, 9, 21, 6, 1, 35, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 976070243, 'comment_body': ""```suggestion\r\n        is_outdated = res_current < res_latest\r\n        is_newer_than_upstream = res_current > res_latest\r\n```\r\n\r\nThese values should simply mirror the logic in `#run_checks`. You seem to be incorrectly using the `head_only` logic for `is_outdated` and to have appended an unneeded `!is_newer_than_upstream` condition. Besides that, there's something to be said for having these values in the same order as in `#run_checks` (to increase predictability, reduce cognitive load, etc.)."", 'comment_created': datetime.datetime(2022, 9, 21, 6, 9, 30, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 976072128, 'comment_body': ""```suggestion\r\n            outdated:            is_outdated,\r\n            newer_than_upstream: is_newer_than_upstream,\r\n```\r\n\r\nAs above, let's put these in the same order as they appear in the related hash in `#run_checks`."", 'comment_created': datetime.datetime(2022, 9, 21, 6, 12, 38, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 976099923, 'comment_body': 'The JSON output for this object should have a similar format to the output for a formula cask. You seem to be placing some values in `resource_version_info[:meta][:livecheck]` when they should be in `resource_version_info[:meta]`. As mentioned before, the `#latest_version` method provides a clear example for you to follow and the existing JSON output is readily available for you to reference.\r\n\r\nFor example, this code currently produces the following JSON object:\r\n\r\n```json\r\n{\r\n  ""resource"": ""pkg-config-wrapper"",\r\n  ""version"": {\r\n    ""current"": ""0.2.11"",\r\n    ""latest"": ""0.2.12"",\r\n    ""outdated"": true,\r\n    ""newer_than_upstream"": false\r\n  },\r\n  ""meta"": {\r\n    ""url"": {\r\n      ""original"": ""https://github.com/influxdata/pkg-config/archive/refs/tags/v0.2.11.tar.gz"",\r\n      ""processed"": ""https://github.com/influxdata/pkg-config.git""\r\n    },\r\n    ""livecheckable"": true,\r\n    ""livecheck"": {\r\n      ""url"": {\r\n        ""original"": ""url"",\r\n        ""symbol"": ""url""\r\n      },\r\n      ""strategy"": ""Git"",\r\n      ""strategies"": [\r\n        ""Git"",\r\n        ""PageMatch""\r\n      ],\r\n      ""regex"": ""/^v?(\\\\d+(?:\\\\.\\\\d+)+)$/i""\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nNote that the use of `livecheck_url` instead of `original_url` in `res_livecheck[:url][:original]` causes a symbol value to simply be converted to a string in the JSON output (i.e., `url :url` produces `""original"": ""url""`). We have a separate `:symbol` value for that information, so `:original` should be the `original_url` string.\r\n\r\nReferencing existing output for a formula, this should instead be:\r\n\r\n```json\r\n{\r\n  ""resource"": ""pkg-config-wrapper"",\r\n  ""version"": {\r\n    ""current"": ""0.2.11"",\r\n    ""latest"": ""0.2.12"",\r\n    ""outdated"": true,\r\n    ""newer_than_upstream"": false\r\n  },\r\n  ""meta"": {\r\n    ""livecheckable"": true,\r\n    ""url"": {\r\n      ""symbol"": ""url"",\r\n      ""original"": ""https://github.com/influxdata/pkg-config/archive/refs/tags/v0.2.11.tar.gz"",\r\n      ""processed"": ""https://github.com/influxdata/pkg-config.git""\r\n    },\r\n    ""strategy"": ""Git"",\r\n    ""strategies"": [\r\n      ""Git"",\r\n      ""PageMatch""\r\n    ],\r\n    ""regex"": ""/^v?(\\\\d+(?:\\\\.\\\\d+)+)$/i""\r\n  }\r\n}\r\n```\r\n\r\nWhile you\'re addressing this, please try to make this part of the code as similar to the existing code in `#latest_version` as possible (i.e., minimizing the differences between the two will make it easier for me to refactor these in the near future). The existing code is relatively close but it currently diverges in seemingly unnecessary ways.', 'comment_created': datetime.datetime(2022, 9, 21, 6, 47, 31, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 976115662, 'comment_body': '```suggestion\r\n        elsif !quiet\r\n          onoe ""#{Tty.blue}#{resource.name}#{Tty.reset}: #{e}""\r\n```\r\n\r\nThis output should respect the `--quiet` flag, same as the related code in `#run_checks`. This will require us to pass in the `quiet` value, so you will need to update the `#resource_version` method parameters/signature and the related method call accordingly.', 'comment_created': datetime.datetime(2022, 9, 21, 7, 0, 49, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 976116965, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2022, 9, 21, 7, 1, 57, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 976117304, 'comment_body': '```suggestion\r\n```\r\n\r\nThis appears to be leftover from something you were doing.', 'comment_created': datetime.datetime(2022, 9, 21, 7, 2, 12, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 976118848, 'comment_body': ""Please move the `#resource_version` method after the `#latest_version` method. Checking resources is secondary to checking the formula/cask version, so it makes more sense for this to be after `#latest_version`.\r\n\r\n[This is something that I could take care of in a follow-up PR but handling this here will help to make the follow-up PR diff more easy to read (i.e., it's hard to see changes to a block of code if it's also moved, so it's better to do the move in this PR).]"", 'comment_created': datetime.datetime(2022, 9, 21, 7, 3, 34, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 976124633, 'comment_body': ""```suggestion\r\n        skip_message = if package_or_resource.livecheck.skip_msg.present?\r\n```\r\n\r\nAs mentioned above, the safe navigation operator shouldn't be necessary here, as this is always initialized to a `Livecheck` object."", 'comment_created': datetime.datetime(2022, 9, 21, 7, 10, 19, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 976124830, 'comment_body': '```suggestion\r\n        return {} if !package_or_resource.livecheck.skip? && skip_message.blank?\r\n```\r\n\r\nSame as above.', 'comment_created': datetime.datetime(2022, 9, 21, 7, 10, 35, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 976126202, 'comment_body': '```suggestion\r\n      # Skip conditions for resource.\r\n```\r\n\r\nThis simply aligns the comment with the other similar comments (i.e., adding the missing period).', 'comment_created': datetime.datetime(2022, 9, 21, 7, 12, 9, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 976161701, 'comment_body': ""Since you're passing URL strings to `#livecheck_url_to_string` (`cask_url`, `head_url`, `stable_url`), this will simply return the string as given and these tests will always pass (e.g., `cask_url == cask_url`). If you really want to test this, you'll need to pass in symbols instead (as in the preceding tests).\r\n\r\nWith that modification, the `:head`/`:stable` failures should  make it clear that the related code isn't working like you would expect."", 'comment_created': datetime.datetime(2022, 9, 21, 7, 50, 32, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 976164668, 'comment_body': ""The related tests suggest that using `url :stable` or `url :head` in a resource will use those formula URLs but this code appears to simply return the resource URL (i.e., it doesn't work as expected)."", 'comment_created': datetime.datetime(2022, 9, 21, 7, 53, 34, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 979327302, 'comment_body': 'Oh got it. Done ✅', 'comment_created': datetime.datetime(2022, 9, 24, 22, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 979327353, 'comment_body': 'Done ✅', 'comment_created': datetime.datetime(2022, 9, 24, 22, 55, 18, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 979327738, 'comment_body': ""Initially when I implemented the `resource_version` method, I was getting an error here for resources which do not have any `livecheck` blocks. That's why I used safe navigation operator here to avoid getting error in those cases. \r\n\r\nBut now, I have checked it again after removing the guards and it works. Not sure why it's working now without the safe navigation operator."", 'comment_created': datetime.datetime(2022, 9, 24, 23, 0, 41, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 979327837, 'comment_body': 'Oh yeah, you are right. Fixed ✅ ', 'comment_created': datetime.datetime(2022, 9, 24, 23, 1, 47, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 979327884, 'comment_body': 'Okay 👍 ', 'comment_created': datetime.datetime(2022, 9, 24, 23, 2, 19, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 979328799, 'comment_body': '> ```json\r\n> {\r\n>   ""resource"": ""pkg-config-wrapper"",\r\n>   ""version"": {\r\n>     ""current"": ""0.2.11"",\r\n>     ""latest"": ""0.2.12"",\r\n>     ""outdated"": true,\r\n>     ""newer_than_upstream"": false\r\n>   },\r\n>   ""meta"": {\r\n>     ""url"": {\r\n>       ""original"": ""https://github.com/influxdata/pkg-config/archive/refs/tags/v0.2.11.tar.gz"",\r\n>       ""processed"": ""https://github.com/influxdata/pkg-config.git""\r\n>     },\r\n>     ""livecheckable"": true,\r\n>     ""livecheck"": {\r\n>       ""url"": {\r\n>         ""original"": ""url"",\r\n>         ""symbol"": ""url""\r\n>       },\r\n>       ""strategy"": ""Git"",\r\n>       ""strategies"": [\r\n>         ""Git"",\r\n>         ""PageMatch""\r\n>       ],\r\n>       ""regex"": ""/^v?(\\\\d+(?:\\\\.\\\\d+)+)$/i""\r\n>     }\r\n>   }\r\n> }\r\n> ```\r\n\r\nI failed to reproduce this issue. It was working fine locally. i.e: I wasn\'t getting `resource_version_info[:meta][:livecheck][:url][:original] or [symbol] = \'url\'`\r\n\r\n```json\r\n{\r\n  ""resource"": ""pkg-config-wrapper"",\r\n  ...\r\n  ""meta"": {\r\n    ...\r\n    ""livecheckable"": true,\r\n    ""livecheck"": {\r\n      ""url"": {\r\n        ""original"": ""url"",\r\n        ""symbol"": ""url""\r\n      },\r\n      ""strategy"": ""Git"",\r\n      ...\r\n    }\r\n  }\r\n}\r\n\r\n``` \r\n\r\nHowever, I have fixed the issues with json output as suggested. Now, it\'s almost identical to `latest_version`\'s logic.', 'comment_created': datetime.datetime(2022, 9, 24, 23, 11, 22, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 979328883, 'comment_body': ""Updated `#resource_version` method and it's call ✅ "", 'comment_created': datetime.datetime(2022, 9, 24, 23, 13, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 979328994, 'comment_body': ""Oops! my bad. Turns out I had it removed locally but didn't commit the change. "", 'comment_created': datetime.datetime(2022, 9, 24, 23, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 979329015, 'comment_body': 'Oh okay, done ✅', 'comment_created': datetime.datetime(2022, 9, 24, 23, 14, 59, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 979333030, 'comment_body': 'Okay.', 'comment_created': datetime.datetime(2022, 9, 25, 0, 7, 1, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 979333045, 'comment_body': '✅', 'comment_created': datetime.datetime(2022, 9, 25, 0, 7, 29, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 979334228, 'comment_body': ""Yeah, I was getting errors for the `:head` / `:stable` after modification. \r\n\r\nI asked @nandahkrishna once that `:head` and `:stable` are implemented in `Formula` as a `SoftwareSpec`. And (to my knowledge) if we want to have the same for resources, we have to update the `Resource` DSL. And he told me:\r\n\r\n> `Resource`'s `:url` is considered `:stable` by default.\r\n\r\nAnd I took it in a sense that if I got `:stable` symbol, I can return `:url` for resource in `#livecheck_url_to_string` method. (kindly do correct me if I am mistaken --- which I think I most probably am)\r\n\r\nAnyways, I have removed tests for `:head` and `:stable` for the time being."", 'comment_created': datetime.datetime(2022, 9, 25, 0, 23, 11, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 979426265, 'comment_body': ""The `@livecheck` instance variable is set to a new `Livecheck` object when a `Resource` is initialized (regardless of whether a `livecheck` block is present in the resource) and `Livecheck` objects also have default instance variable values, so the only way I can imagine these calls failing is if `resource` isn't a `Resource` object. If I had to guess, maybe there weren't sufficient safeguards to protect against that situation at some point (or maybe something was broken while making tweaks to debug/test). Either way, it seems fine now."", 'comment_created': datetime.datetime(2022, 9, 25, 16, 8, 57, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 979427409, 'comment_body': ""> I asked @nandahkrishna once that :head and :stable are implemented in Formula as a SoftwareSpec. And (to my knowledge) if we want to have the same for resources, we have to update the Resource DSL. And he told me:\r\n> \r\n> > Resource's :url is considered :stable by default.\r\n>\r\n> And I took it in a sense that if I got :stable symbol, I can return :url for resource in #livecheck_url_to_string method. (kindly do correct me if I am mistaken --- which I think I most probably am)\r\n>\r\n> Anyways, I have removed tests for :head and :stable for the time being.\r\n\r\nI'm of the opinion that `url :head` and `url :stable` in resource `livecheck` blocks should work the same as casks, where `#livecheck_url_to_string` doesn't handle these symbols (i.e., implicitly returning `nil`). At least at present, neither casks nor resources respond to `#head` or `#stable` methods and they're not part of their DSLs, so using those values in the `livecheck` block shouldn't work.\r\n\r\nAt least to me, we shouldn't be trying to quietly correct this issue for users by substituting the resource `url`, as this will lead people to think that `url :head` and `url :stable` are valid and we don't want this mistake to propagate through homebrew/core. Ideally, we should enforce valid symbols with a Rubocop but that's something for a later PR because currently the related Rubocops only work for formulae (not casks or resources) and fixing that is a significant undertaking. [I have some in-progress work but it's currently blocked while I wait for #13233 to be finished/merged.]\r\n\r\nThat said, at least from my perspective, this comment and statement should be removed from `#livecheck_url_to_string` (so the method will implicitly return `nil` when these symbols are used in a resource `livecheck` block, same as casks).\r\n\r\n@nandahkrishna What do you think about this?"", 'comment_created': datetime.datetime(2022, 9, 25, 16, 18, 51, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 979428139, 'comment_body': ""This code should come after the main formula checks, as resource checks are secondary to the main formula check. Since this code comes before the main check, the debug output currently shows the resource information before the formula information, which isn't correct. For example, with my modified version of `influxdb` I'm seeing:\r\n\r\n```\r\nResource:         pkg-config-wrapper\r\nLivecheckable?:   Yes\r\n\r\nURL (url):        https://github.com/influxdata/pkg-config/archive/refs/tags/v0.2.11.tar.gz\r\nURL (processed):  https://github.com/influxdata/pkg-config.git\r\nStrategy:         Git\r\nRegex:            /^v?(\\d+(?:\\.\\d+)+)$/i\r\n\r\nMatched Versions:\r\n0.2.1, 0.1.0, 0.1.1, 0.2.0, 0.2.10, 0.2.11, 0.2.12, 0.2.2, 0.2.3, 0.2.4, 0.2.5, 0.2.6, 0.2.7, 0.2.8, 0.2.9\r\nFormula:          influxdb\r\nLivecheckable?:   Yes\r\n\r\nURL (stable):     https://github.com/influxdata/influxdb.git\r\nStrategy:         Git\r\nRegex:            /^v?((?!9\\.9\\.9)\\d+(?:\\.\\d+)+)$/i\r\n\r\nMatched Versions:\r\n1.8.0, 0.0.1, 0.0.2, 0.0.3, 0.0.4, 0.0.5, 0.0.6, 0.0.7, 0.0.8, 0.0.9, 0.1.0, 0.10.0, 0.10.1, 0.10.2, 0.10.3, 0.11.0, 0.11.1, 0.12.0, 0.12.1, 0.12.2, 0.13.0, 0.2.0, 0.3.0, 0.3.1, 0.3.2, 0.4.0, 0.4.1, 0.4.2, 0.4.3, 0.4.4, 0.5.0, 0.5.1, 0.5.10, 0.5.11, 0.5.12, 0.5.2, 0.5.3, 0.5.4, 0.5.5, 0.5.6, 0.5.7, 0.5.8, 0.5.9, 0.6.0, 0.6.1, 0.6.2, 0.6.3, 0.6.4, 0.6.5, 0.7.0, 0.7.1, 0.7.2, 0.7.3, 0.8.0, 0.8.1, 0.8.2, 0.8.3, 0.8.4, 0.8.5, 0.8.6, 0.8.7, 0.8.8, 0.9.0, 0.9.1, 0.9.2, 0.9.2.1, 0.9.3, 0.9.4, 0.9.4.1, 0.9.4.2, 0.9.5, 0.9.5.1, 0.9.6, 0.9.6.1, 1.0.0, 1.0.1, 1.0.2, 1.1.0, 1.1.1, 1.1.2, 1.1.3, 1.1.4, 1.1.5, 1.10.0, 1.2.0, 1.2.1, 1.2.2, 1.2.3, 1.2.4, 1.3.0, 1.3.1, 1.3.2, 1.3.3, 1.3.4, 1.3.5, 1.3.6, 1.3.7, 1.3.8, 1.3.9, 1.4.0, 1.4.1, 1.4.2, 1.4.3, 1.5.0, 1.5.1, 1.5.2, 1.5.3, 1.5.4, 1.5.5, 1.6.0, 1.6.1, 1.6.2, 1.6.3, 1.6.4, 1.6.5, 1.6.6, 1.7.0, 1.7.1, 1.7.10, 1.7.11, 1.7.2, 1.7.3, 1.7.4, 1.7.5, 1.7.6, 1.7.7, 1.7.8, 1.7.9, 1.8.1, 1.8.10, 1.8.2, 1.8.3, 1.8.4, 1.8.5, 1.8.6, 1.8.7, 1.8.8, 1.8.9, 1.9.0, 1.9.1, 1.9.2, 1.9.3, 1.9.4, 1.9.5, 1.9.6, 1.9.7, 1.9.8, 2.0.0, 2.0.1, 2.0.2, 2.0.3, 2.0.4, 2.0.5, 2.0.6, 2.0.7, 2.0.8, 2.0.9, 2.1.0, 2.1.1, 2.2.0, 2.3.0, 2.4.0\r\n\r\ninfluxdb: 2.4.0 ==> 2.4.0\r\n  pkg-config-wrapper: 0.2.11 ==> 0.2.12\r\n  ui-assets: skipped - Update manually\r\n```"", 'comment_created': datetime.datetime(2022, 9, 25, 16, 25, 23, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 979428807, 'comment_body': ""```suggestion\r\n      livecheck_url = livecheck.url\r\n```\r\n\r\nAs seen in `#latest_version`, the `livecheck_url` value should simply correspond to `livecheck.url` (i.e., we store the value in a variable to avoid repeatedly making a function call wherever `livecheck.url` is used). When it's set, it's the symbol/string from the `livecheck` block, otherwise it's the default `nil` value. That is to say, this shouldn't be falling back to the resource `url` because we handle that in subsequent code (i.e., when defining the `urls` variable)."", 'comment_created': datetime.datetime(2022, 9, 25, 16, 31, 7, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 979430341, 'comment_body': ""The presence of `:status`/`:messages` values doesn't always indicate a failure condition. For example, these values would be set for a skipped resource but that's not a failure state. The previous use of `Homebrew.failed = true` was fine from my perspective (i.e., it mimicked the behavior in `#run_checks`) but this is setting the failure state for more than it should.\r\n\r\n@nandahkrishna Can you elaborate on which scenarios you were thinking should be treated as a failure state with regard to resources? This may help to clarify where `Homebrew.failed = true` should be used outside of the `rescue` blocks."", 'comment_created': datetime.datetime(2022, 9, 25, 16, 43, 51, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 979434376, 'comment_body': ""I moved this before the `SkipConditions` logic for `Formula` as per @nandahkrishna's suggestion. i.e: we should still get the resources' info in case `Formula` was skipped. \r\n\r\nIf we want to achieve this, we might have to store the debug output in the hash returned by `#resource_version` method and later on print the debug output to console. Is this what should we do here ?"", 'comment_created': datetime.datetime(2022, 9, 25, 17, 20, 46, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 979437766, 'comment_body': 'After some thought, I agree with Sam on this – let\'s remove this comment and statement for consistency with the Cask behaviour. So in short, we will get the URL only if we use `:url`, and not `:stable` or `:head`.\r\n\r\nI was earlier concerned about `:stable` being valid in some sense (resources included in a formula are most likely ""stable"" by default), but the explanation that resources do not respond to the `head` and `stable` methods convinces me that we shouldn\'t quietly succeed by returning the `url`.', 'comment_created': datetime.datetime(2022, 9, 25, 17, 53, 25, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 979438027, 'comment_body': ""@mohammadzainabbas I believe there's a misunderstanding here. I think:\r\n* If a Formula is skipped, its resources don't matter (we can ignore checking them).\r\n* If a Formula's `livecheck` errors out, we should still attempt to show resource versions.\r\n\r\nThe resource outputs should always be printed after the formula output."", 'comment_created': datetime.datetime(2022, 9, 25, 17, 56, 5, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 979438584, 'comment_body': ""I wanted to make sure that an `Unable to get versions` for resources would be treated as a failure state. Prior to this change, we did not have an error status code if a formula's `livecheck` succeeded but a resource's failed. This was the only thing I had in mind so far about failure states for resources."", 'comment_created': datetime.datetime(2022, 9, 25, 18, 1, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 979442462, 'comment_body': 'Alright! I have removed this. Thank you @samford and @nandahkrishna for the explanation.', 'comment_created': datetime.datetime(2022, 9, 25, 18, 39, 33, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 979443454, 'comment_body': 'Oh okay, I have updated the code accordingly.', 'comment_created': datetime.datetime(2022, 9, 25, 18, 49, 41, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 979444091, 'comment_body': ""Just a naive idea, we can use `:status` to identify if the resource was skipped or was it due to some failed state, and mark `Homebrew.failed = true` in that case. This way we won't get false status code in case of a skipped resource. @samford and @nandahkrishna: what are your thoughts on this ?"", 'comment_created': datetime.datetime(2022, 9, 25, 18, 55, 29, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 979512160, 'comment_body': '> we can use `:status` to identify if the resource was skipped or was it due to some failed state, and mark `Homebrew.failed = true` in that case.\r\n\r\nYes, checking for a `:status` value of `""error""` was what I had in mind. However, this should arguably be handled somewhere after `#resource_version` is called in `#run_checks`, not in `#print_resources_info` (where setting `Homebrew.failed` would be an unexpected side effect).\r\n\r\nThe if/else after the `#resource_version` call also creates an error status hash, so you\'ll have to incorporate `Homebrew.failed = true` in a way that also handles that error status hash while still returning the value from the if/else (it\'s implicitly returned at the moment). If this explanation isn\'t entirely clear or you need additional clarification, just let me know.', 'comment_created': datetime.datetime(2022, 9, 26, 2, 19, 53, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 979781193, 'comment_body': ""> If I had to guess, maybe there weren't sufficient safeguards to protect against that situation at some point (or maybe something was broken while making tweaks to debug/test)\r\n\r\nYes, I noticed that `@livecheck = nil` was changed to `@livecheck = Livecheck.new(self)` in https://github.com/Homebrew/brew/pull/13753, which fixed the issue I was having initially."", 'comment_created': datetime.datetime(2022, 9, 26, 9, 28, 59, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 979787351, 'comment_body': '> However, this should arguably be handled somewhere after `#resource_version` is called in `#run_checks`\r\n\r\nIs this what you had in mind ?\r\n\r\n```ruby\r\ncheck_for_resources = check_resources && formula_or_cask.is_a?(Formula) && formula_or_cask.resources.present?\r\nif check_for_resources\r\n\r\n  resource_version_info = formula_or_cask.resources.map do |resource|\r\n    res_skip_info ||= SkipConditions.skip_information(resource, verbose: verbose)\r\n    if res_skip_info.present?\r\n      res_skip_info\r\n    else\r\n      res_version_info = resource_version(\r\n        resource,\r\n        json:    json,\r\n        debug:   debug,\r\n        quiet:   quiet,\r\n        verbose: verbose,\r\n      )\r\n      if res_version_info.empty?\r\n        status_hash(resource, ""error"", [""Unable to get versions""], verbose: verbose)\r\n      else\r\n        res_version_info\r\n      end\r\n    end\r\n  end.compact_blank\r\n\r\n  Homebrew.failed = true if resource_version_info.any? { |info| info[:status] == ""error"" }\r\nend\r\n```', 'comment_created': datetime.datetime(2022, 9, 26, 9, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 979809269, 'comment_body': 'Yes, you are right. I had to add this check initially when `@livecheck` was `nil` in `Resource` DSL (before https://github.com/Homebrew/brew/pull/13753) to avoid getting error on resources which had no `livecheck` blocks.', 'comment_created': datetime.datetime(2022, 9, 26, 9, 57, 17, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 980093358, 'comment_body': 'It looks like GitHub lost both of our comments (my response and your reply to it), so I\'ll quote it from the email/DM:\r\n\r\n> > However, this should arguably be handled somewhere after #resource_version is called in #run_checks\r\n>\r\n> Is this what you had in mind ?\r\n>\r\n> ```ruby\r\n> check_for_resources = check_resources && formula_or_cask.is_a?(Formula) && formula_or_cask.resources.present?\r\n> if check_for_resources\r\n>   resource_version_info = formula_or_cask.resources.map do |resource|\r\n>     res_skip_info ||= SkipConditions.skip_information(resource, verbose: verbose)\r\n>     if res_skip_info.present?\r\n>       res_skip_info\r\n>     else\r\n>       res_version_info = resource_version(\r\n>         resource,\r\n>         json:    json,\r\n>         debug:   debug,\r\n>         quiet:   quiet,\r\n>         verbose: verbose,\r\n>       )\r\n>       if res_version_info.empty?\r\n>         status_hash(resource, ""error"", [""Unable to get versions""], verbose: verbose)\r\n>       else\r\n>         res_version_info\r\n>       end\r\n>     end\r\n>   end.compact_blank\r\n> Homebrew.failed = true if resource_version_info.any? { |info| info[:status] == ""error"" }\r\n> end\r\n> ```\r\n\r\nYes, that\'s what I was thinking. From my limited testing, it appears to work as expected and would handle the scenario Nanda mentioned. Feel free to push a commit and I\'ll take a final pass through this PR.', 'comment_created': datetime.datetime(2022, 9, 26, 14, 17, 3, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 980331553, 'comment_body': 'I have pushed the change ✅', 'comment_created': datetime.datetime(2022, 9, 26, 17, 40, 24, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}]","[{'commit_sha': 'd8b0a130f10d724b409ad25c44c36d05405486e9', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1098765f64662b5bca40fd5e1d36de4827afacb', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04981d5387d97956101f85b69edc6cf87368c899', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68e46a39781ecbe6a726d440e7d71fc67fd17ae7', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2223a231cc6201316e1328aaa097706c77149cd1', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7156c95b825c79b4e42ffe8f3ab4cea8a6bee402', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59165ed3ec78466b0536f347dcbeb60cde7587cc', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ef6118ba06a5ae45b11681829cd925e424f92a8', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dba5754c9fbd44611f80d50380a29de1e60b43df', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad1a9b5970fd9186b40aa0ba2ffe0582b319f6d5', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82057003a7b548346291eb55d127617e35306289', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8320c89edf5c416cfe4ac88ad102177b519c4ac', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d231a34785d9e452f2ba7f80b4f536c924eb782', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4aa3cc6c972b681aa22f03ab719a9a98ad3ae7d9', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e8cf6c8f8dcf7a1c2f4abc34db9bebcc024c35c', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ee69e2c6351aa8f1dc0e2bcba3c084e7b5e5825', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7575170a0b63c0cb05f43580500a95fd1a332c4a', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96a7ff1019b017f10aab406eceaa2b99c3df02b5', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebf52091eb372171f529aff3324b6eb3af59c9c5', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54558f9bd333f723f06a0d10c5aa3e6c8b028cdb', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9708a850d98b6f53f59dd6cea52d6c5994a7192a', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc687c63587684b2cd2db1dd470c646e9f265931', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4a42d7d6668878cedf124124bd4d098bd874c13', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ee4f1a696e82d3f1c89313a4978ebce1a1d09b9', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a60cd0097334717a287142d77db9353bcaf6dd3b', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ce15eaa60dd5552c15f851252507cbce6a8d528', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43fcb5e563553d7450601950ed9fc97ab4e7b9ef', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e84cc8d116e6e921ce9a93fbf66cdd54cca12829', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eee457f8b97bb53fc76fad4694c255f1da10b9fe', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bebd03963884a9b686ff954be4f13e5c654b3d72', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32659afdbe0f4486ea1f6494882af0ffc86e9eaa', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '277761009540b7fc3f6d2fdbbe922903631b2890', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e72487c8b07e59cba0d3dd1b1ed45bedc73a2592', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73cf8fd2059464ee8de29097e1506a14e99d939a', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e3e9743ac4deb57117de84c625192638d7ee272', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f55f15d664b3ed5ee8639de985847382a70f614', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8c1c0c8412d8a1e6b64c15afeec198b8f21bcc9', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3dc1b9c231d9fb3b42ce7b4e2f2416863e7073ca', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08cd9cebbb50305285ba2a37bbaaa474e6baeb98', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23ec9142c9999726a70aae87922ff15f62d40d3d', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a9942d7fc1fa78e5f68eba544a16ec191320552', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b5a68ca9b85a39c0534dcb1459a2368afb41afd', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '825707a219faed0098353ecc3405ee99956f9bad', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '806f0be69af9d03c97e897c8918e86b45b572abb', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a91dbd4a962e57933fd61346d424eb6da7e3271f', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb2dcf7ea97b864c88a3f7e11a412b8d9a369a48', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ec81ac31ce270a75ec81a6240db4721c73d9145', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5beb7c177214e4e5774c4318c5f79a8bde39342a', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe94bfb0f1693a40454f23c448f63f8db360cb6d', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c074e8c020b5edc911f8034893130ebdb5c2c2a5', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4088c4683e3a38250e12e226a88ff9fef58dd3ed', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40bbbd601eca738725e192dd638cbc1e868b7171', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f8f852fbc86112ba5a8d7255bcda06e7a20cee5', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4de65099060a613a37bde2c225d419ef0981cbf6', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce202dc61c5924c1b5257c7bf3b6aa577095f61b', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b651fe475cf92475be66f5fe5129297dbbc084a9', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6daa22bc8ee1d6353bb80a54042dcb5fb4b3a1b2', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e718318eaf094fcd3c80b1b2863dc9d11b9d5950', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c4b9b7e147fdee27d3bdb1d28be79e87084e8b4', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87b8c7bb6d44830b94f1b2cf0e633e24cb934203', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '609485cdd77c020bca51cefc8ed85704e3e649c1', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bd747d41bbaf5704a7d14564532f630ecee76fc', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26cdf025063e8e9d3fa51faa301d255c07342c2a', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac614e29f9b411b8f845f7e630ae4c3064b24a7b', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d66ec1a81791bb692ebbe9f76eee11dec982870', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1abb51f2e8b19af77b029f550afb4d89f10e56a2', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd4a02ff349f7a8988394c2de6862a8decf48c23', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06d45fea8025510df709507d6919be53cd454c92', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '424c5bfce2f441d42a86a394d754ccb408a854d5', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b31dc7e873a4ca8dfa788ce17906fe7b6fa9ff1', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f79b5dee292257692148017529f6b25badc47cb', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7843775379bf300b81424314903adbc582ef397', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '105135ed912816a0cc958a83093d5de94befd5b3', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64de86bab5441bc1c08834e73bfb71abfab77417', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '495f8f2193d8477a03bb54c47ecb8b924365096a', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71648a5714fd00d312d2d61482a3b1dfd4fca675', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c825ab7dfe6680c7df630b97adf2b918a61eeeb1', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7855e18042267c3b755e49615a4c1ad25c77e9e9', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81a7d6edd732d903ab653400ee4a51d4d8fb896a', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb9bc93fae552ae4600c9c0b78ef8bd5d19d95a1', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '656b18b13a783274dba4c6578a1bd9babf146d1e', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6055f782184658dda1ac32678319152f81daf77b', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab4a2d781ec8178dbfcb3f7bf4c76ffaeb24446d', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b95a5188bff3601929082fed8d1b76a7e629f0df', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d83e181421d775e8fe1a2f9f554704b715972f3', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53b0d60f75a6b478e418d660ef7e3fb1145cb601', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c9ff722ae3466ffb56fcbbcd42b1290740c197e', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9598cc128c270bae68a6b6e6fb2d257ef92d060b', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b0574acb186e086ed85d6d84a6c457b615fced0', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3476493583bc00cf912db27efd75049010210d8d', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d90e0136afe652ecfe0f73214ee6b276408acf3', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eba3d5cf1c7873fabfc3bacdf29994c4e5f8495a', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ae71097eeab0501c9c2fea9cd22a5112294c1ff', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99a32700d2c6c5986944ec83395e0b1f74381ba8', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e15f0b22b9b025f5c6e8fe3cbc5f034d577e5768', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5ce5128158e8600095c67ab8fd7360e8ea1680f', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0355d76401c60a5b4dc900635868740ff261f9b', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ca2350e3561670d6fe5fa15da63d9534ed35e9d', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3f390740d570e73689bc76a64b428956ffff484', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be7dde6aace68c63e660bd262c2eebe7c86103c4', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '218652b8b3f5d6a3658804e692d773c92f7756cf', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a169d79fee435fd87ccdea750ac4c024b826a677', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1742a72a9616e59be4dcb3ad03c8dff6d9e4a959', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54e220c0f87aeca90a01896ef0b89a5463c22b8d', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '654ee76b24e7aad9c52c386fbdfa61ca40ca9c69', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9102d254d44fa58a6e0513133a94edac518b47f7', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30737e8365c298520b508b95b05f6a29543406d5', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1584b67b9cc21ff387424f4e21bbf05ef610ed7', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9f3d3d84bf419c0a3bd90526d157d2b328a15ad', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c111a5bc9dd3b9ca94d23b678f0ac9a8be955ace', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54c9338ed4bb944acb8f76cd5195c246de04b64d', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ae583c836e410dc59d72b13b87daa0ac5a2bdf4', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'beb4f02ae3f080e3e0e5904b17d3484fd60e2d80', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2979b2b1010af7e029b8f785b14ebf75653e539', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9377346bdf8f2d13d265b1b5fa39bb77ce998909', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '461ae7122942c43e4f91e45a6d5f8b09980b24b7', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '990f71367b196eb886855be1e083e28ef22ae220', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8496ca0416d9283a3a0d9a25583cdbd670b53aab', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a627565ac1c3c71f0dd87f7379ef41f01d7f9fe', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c06b80c2ca5f7d017529431352578c049c81731c', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e058da170633e001cefca16c8200b280ba4b949c', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8ef7bd0e9da68bb74d002c8410aa15211f331f8', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b1397d44d46368765a16dba2d5db9f6d78dbbb5', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d9c6ddb755d881756e2bd55c108ce13e92839f5', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37eef10b924a9e6fb1c907b5e1c3b1d512129f3e', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '980538b8b269392d877244db81ce0b5276a38e7c', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee1210a495eea3163b95f21df48933a7aa4de913', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '560680bfa3f60bcf7e5ec3800c043303277c2f3d', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d993fa642c9126e01662f0c1daa75b281371efa', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03c372ef52fa2fffe6d8677f563ddbcf1f95c714', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42d8c852aef752ffae16a833dcc839e563ea6ec8', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f74eb5b5b1172e8ecfb0fc03f3f3ddfc5e3ff8c', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae031041a28d12ba7da987ed7ca7161a9b925a07', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e26da060f09f41ef23777b362217b9ac2ff95bbc', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3cab15e935233ea5de0420a76c16dae3f80ba2f', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a81ef898834f29dce8ff7d92794d77e83dbb4256', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40b0070bebf6ef34435ebd521c14c5a3770fca34', 'committer_username': 'samford', 'committer_name': 'Sam Ford', 'committer_email': None, 'commit_date': datetime.datetime(2012, 3, 28, 19, 33, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ffeba6380035e190efdf7eb7a003dd51e356cea', 'committer_username': 'samford', 'committer_name': 'Sam Ford', 'committer_email': None, 'commit_date': datetime.datetime(2012, 3, 28, 19, 33, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb653c00d8152da765b56c0bb1ae7bba5bf7002d', 'committer_username': 'samford', 'committer_name': 'Sam Ford', 'committer_email': None, 'commit_date': datetime.datetime(2012, 3, 28, 19, 33, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd9c436d50c71eef58b3f9ba511e701cf27b377c', 'committer_username': 'samford', 'committer_name': 'Sam Ford', 'committer_email': None, 'commit_date': datetime.datetime(2012, 3, 28, 19, 33, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5c88419808c82983869ed09ecedfae3656bfe17', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9755b00fdc37827c8baf761d4877c8adf1d99eff', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}]",Mohammad Zain Abbas,19189095,mohammadzainabbas@gmail.com,User,,135,,45,59
1068581018,Update documentation for `brew livecheck`,"- [x] Have you followed the guidelines in our [Contributing](https://github.com/Homebrew/brew/blob/HEAD/CONTRIBUTING.md) document?
- [x] Have you checked to ensure there aren't other open [Pull Requests](https://github.com/Homebrew/brew/pulls) for the same change?
- [x] Have you added an explanation of what your changes do and why you'd like us to include them?
- [ ] Have you written new tests for your changes? [Here's an example](https://github.com/Homebrew/brew/blob/HEAD/Library/Homebrew/test/PATH_spec.rb).
- [x] Have you successfully run `brew style` with your changes locally?
- [x] Have you successfully run `brew typecheck` with your changes locally?
- [x] Have you successfully run `brew tests` with your changes locally?

#

This PR aims to update the documentation for `brew livecheck` (after https://github.com/Homebrew/brew/pull/13613 is merged).

@samford and @nandahkrishna, kindly have a look and let me know if we need to update some other documentation as well.",True,13933,https://api.github.com/repos/Homebrew/brew/pulls/13933,https://github.com/Homebrew/brew/pull/13933,closed,2,2,1,5,1,7,1,0,[{'name': 'outdated'}],2022-09-27 12:51:44+00:00,2022-10-03 04:03:23+00:00,486699.0,"5 days, 15:11:39","[{'comment_id': 983022601, 'comment_body': 'Resources are part of formulae, so I think we should leave this as-is (i.e., please revert this change). This paragraph is intended to be brief and very high level and any mention of resources is better left for later sections (in a minimal fashion).\r\n\r\nWhen I originally wrote this documentation, I received a fair amount of feedback around keeping things fairly brief for the sake of clarity, so I try to keep this in mind when considering revisions to this document.', 'comment_created': datetime.datetime(2022, 9, 29, 3, 7, 33, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 983029144, 'comment_body': ""```suggestion\r\n1. For formulae: Collect the `stable`, `head`, and `homepage` URLs, in that order (resources simply use their `url`). For casks: Collect the `url` and `homepage` URLs, in that order.\r\n```\r\n\r\nA few things here:\r\n\r\n* `head` originally came before `stable` but I switched this a while back and forgot to update this documentation, so good catch.\r\n* I still think the use of Oxford commas are useful here, as it clearly separates the list into three distinct parts (i.e., omitting the third comma makes it seem like `head` and `homepage` are grouped).\r\n* While `#checkable_urls` technically still uses `appcast` URLs in casks, I deliberately omitted that information from this documentation because `livecheck` blocks have replaced `appcast`. There are only ~50 casks at this point using `appcast` and it's simply that those haven't been updated yet. That is to say, `appcast` support is a legacy holdover and not something we need/want to advertise here.\r\n* Resources are part of formulae, so I think we can get away with a small parenthetical here. I don't think this part of the documentation should treat resources on the same level as formulae/casks, as resources are part of formulae and their checks are secondary to the main formula check.\r\n* With the previous point in mind, I don't see the bold styling as necessary/beneficial here and we can simply maintain the existing style."", 'comment_created': datetime.datetime(2022, 9, 29, 3, 25, 54, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 983041262, 'comment_body': 'These additions don\'t feel necessary to me and this doesn\'t feel like the right place for this information. `brew livecheck --help` explains the purpose of the `--resources` flag and that content is also included in the brew manpage.\r\n\r\nIt logically follows that resource information would be included in the output when the `--resources` flag is used, regardless of the output format (default, debug, or JSON). Keep in mind that `brew livecheck` is a developer command, so I don\'t see this as something that needs to be explained to anyone who would be using livecheck or this flag. Trying to avoid excessive ""hand-holding"" in this documentation was another bit of feedback I received while writing this, so that\'s something else I try to remember.\r\n\r\nThat said, this is another area that I feel should be left as-is (i.e., please revert this as well).', 'comment_created': datetime.datetime(2022, 9, 29, 3, 57, 45, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 985250723, 'comment_body': 'Oh got it.', 'comment_created': datetime.datetime(2022, 10, 2, 14, 50, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 985251149, 'comment_body': 'Okay, reverted ✅', 'comment_created': datetime.datetime(2022, 10, 2, 14, 53, 29, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 985283490, 'comment_body': ""```suggestion\r\nThe `brew livecheck` command finds the newest version of a formula or cask's software by checking upstream. Livecheck has [strategies](https://rubydoc.brew.sh/Homebrew/Livecheck/Strategy.html) to identify versions from various sources, such as Git repositories, websites, etc.\r\n```"", 'comment_created': datetime.datetime(2022, 10, 2, 19, 17, 13, tzinfo=datetime.timezone.utc), 'commenter': 'EricFromCanada', 'type': 'User'}, {'comment_id': 985304092, 'comment_body': 'Oops! Thanks for pointing it out. ', 'comment_created': datetime.datetime(2022, 10, 2, 22, 11, 24, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}]","[{'commit_sha': '07ac5bf3b60278dbff15d13dbd798d342588347e', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de2972d8b5efae29328295504693ac45a6bf5ad9', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50ccb96d7702dd5190ca6310d005f93b641029c8', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd66104f182eb90edc975676fa9b9d994a6021d00', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd4a4e3254152ea07b74e6419595ca8b8b291139', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}]",Mohammad Zain Abbas,19189095,mohammadzainabbas@gmail.com,User,,135,,45,59
1073882304,influxdb: add livecheck blocks for resources,"- [x] Have you followed the [guidelines for contributing](https://github.com/Homebrew/homebrew-core/blob/HEAD/CONTRIBUTING.md)?
- [x] Have you ensured that your commits follow the [commit style guide](https://docs.brew.sh/Formula-Cookbook#commit)?
- [x] Have you checked that there aren't other open [pull requests](https://github.com/Homebrew/homebrew-core/pulls) for the same formula update/change?
- [x] Have you built your formula locally with `brew install --build-from-source <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Is your test running fine `brew test <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Does your build pass `brew audit --strict <formula>` (after doing `brew install --build-from-source <formula>`)? If this is a new formula, does it pass `brew audit --new <formula>`?

-----

As stated in https://github.com/Homebrew/homebrew-core/pull/111257, after https://github.com/Homebrew/brew/pull/13613, it would be possible to use `brew livecheck` command for resources as well. 

While augmenting `brew livecheck` command, I tested the functionality on multiple different resources and formulae. `pkg-config-wrapper` was one of the resource which could benefit from such behaviour.

#

> Note: you can only test this functionality properly once https://github.com/Homebrew/brew/pull/13613 is merged successfully. Simply, run `brew livecheck influxdb -r` and you'd see the livecheck output for resources as well.

# 

As pointed out by @SMillerDev and @nandahkrishna, my earlier implementation was wrong as it was looking at the latest version. However, now it will fetch `pkg-config-wrapper` livecheck info from upstream repo version in `go.mod` of `influxdb` (as intended).

",False,112155,https://api.github.com/repos/Homebrew/homebrew-core/pulls/112155,https://github.com/Homebrew/homebrew-core/pull/112155,closed,10,0,1,1,6,0,4,0,"[{'name': 'go'}, {'name': 'rust'}, {'name': 'livecheck'}, {'name': 'CI-syntax-only'}]",2022-10-02 16:16:30+00:00,2022-12-21 10:04:59+00:00,6889709.0,"79 days, 17:48:29",[],"[{'commit_sha': 'b0eb12f9d1fc7fe2cb8f7820596cfe3f6a1993a8', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Mohammad Zain Abbas,19189095,mohammadzainabbas@gmail.com,User,,135,,45,59
1073885727,flux: add livecheck block for resource,"- [x] Have you followed the [guidelines for contributing](https://github.com/Homebrew/homebrew-core/blob/HEAD/CONTRIBUTING.md)?
- [x] Have you ensured that your commits follow the [commit style guide](https://docs.brew.sh/Formula-Cookbook#commit)?
- [x] Have you checked that there aren't other open [pull requests](https://github.com/Homebrew/homebrew-core/pulls) for the same formula update/change?
- [x] Have you built your formula locally with `brew install --build-from-source <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Is your test running fine `brew test <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Does your build pass `brew audit --strict <formula>` (after doing `brew install --build-from-source <formula>`)? If this is a new formula, does it pass `brew audit --new <formula>`?

-----

Similar to https://github.com/Homebrew/homebrew-core/pull/112155, now we will fetch `pkg-config-wrapper` livecheck info from upstream repo version in `go.mod` of `flux`.

@nandahkrishna kindly, have a look.",False,112156,https://api.github.com/repos/Homebrew/homebrew-core/pulls/112156,https://github.com/Homebrew/homebrew-core/pull/112156,closed,5,0,1,1,1,0,4,0,"[{'name': 'go'}, {'name': 'rust'}, {'name': 'livecheck'}, {'name': 'CI-syntax-only'}]",2022-10-02 16:30:31+00:00,2022-12-21 11:04:50+00:00,6892459.0,"79 days, 18:34:19",[],"[{'commit_sha': '99314e9e4cc81be9f5c6398a0c2620c394f39495', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Mohammad Zain Abbas,19189095,mohammadzainabbas@gmail.com,User,,135,,45,59
1059419644,v8 10.5.218.8,"Created with `brew bump-formula-pr`.

`resource` blocks may require updates.

",False,111013,https://api.github.com/repos/Homebrew/homebrew-core/pulls/111013,https://github.com/Homebrew/homebrew-core/pull/111013,closed,9,12,2,1,5,0,5,0,"[{'name': 'in progress'}, {'name': 'outdated'}, {'name': 'automerge-skip'}, {'name': 'bump-formula-pr'}, {'name': 'long build'}]",2022-09-17 23:41:29+00:00,2022-09-21 12:32:36+00:00,305467.0,"3 days, 12:51:07",[],"[{'commit_sha': '02dbfb62f015fba29096bf0a9523c5a23cd720b3', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}]",Mohammad Zain Abbas,19189095,mohammadzainabbas@gmail.com,User,,135,,45,59
1073895182,luvit: added livecheck block for resource `luvi`,"- [x] Have you followed the [guidelines for contributing](https://github.com/Homebrew/homebrew-core/blob/HEAD/CONTRIBUTING.md)?
- [x] Have you ensured that your commits follow the [commit style guide](https://docs.brew.sh/Formula-Cookbook#commit)?
- [x] Have you checked that there aren't other open [pull requests](https://github.com/Homebrew/homebrew-core/pulls) for the same formula update/change?
- [x] Have you built your formula locally with `brew install --build-from-source <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Is your test running fine `brew test <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Does your build pass `brew audit --strict <formula>` (after doing `brew install --build-from-source <formula>`)? If this is a new formula, does it pass `brew audit --new <formula>`?

-----

To update this resource, we needed to check `LUVI_VERSION` in `https://github.com/luvit/lit/raw/$(LIT_VERSION)/get-lit.sh`, that's why I reused the logic implemented in https://github.com/Homebrew/homebrew-core/pull/112157 to first fetch the correct `LIT_VERSION`, and then fetch the content of  `https://raw.githubusercontent.com/luvit/lit/#{LIT_VERSION}/get-lit.sh""` file to extract `LUVI_VERSION` information.

#

@nandahkrishna please have a look at this PR too. I have tested it locally, and it works as we intended.",False,112158,https://api.github.com/repos/Homebrew/homebrew-core/pulls/112158,https://github.com/Homebrew/homebrew-core/pull/112158,closed,10,0,1,1,1,0,5,0,"[{'name': 'lua'}, {'name': 'stale'}, {'name': 'outdated'}, {'name': 'livecheck'}, {'name': 'CI-syntax-only'}]",2022-10-02 17:10:48+00:00,2022-12-05 13:07:39+00:00,5515011.0,"63 days, 19:56:51",[],"[{'commit_sha': '1cead0248807739a88705d69a8d168ed1ab72960', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}]",Mohammad Zain Abbas,19189095,mohammadzainabbas@gmail.com,User,,135,,45,59
1073889190,luvit: add livecheck blocks for resources,"- [x] Have you followed the [guidelines for contributing](https://github.com/Homebrew/homebrew-core/blob/HEAD/CONTRIBUTING.md)?
- [x] Have you ensured that your commits follow the [commit style guide](https://docs.brew.sh/Formula-Cookbook#commit)?
- [x] Have you checked that there aren't other open [pull requests](https://github.com/Homebrew/homebrew-core/pulls) for the same formula update/change?
- [x] Have you built your formula locally with `brew install --build-from-source <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Is your test running fine `brew test <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Does your build pass `brew audit --strict <formula>` (after doing `brew install --build-from-source <formula>`)? If this is a new formula, does it pass `brew audit --new <formula>`?

-----

We will fetch `LIT_VERSION` livecheck information from the `Makefile` of `luvit`.

@nandahkrishna, please have a look at the added livecheck block.",False,112157,https://api.github.com/repos/Homebrew/homebrew-core/pulls/112157,https://github.com/Homebrew/homebrew-core/pull/112157,closed,21,0,1,1,2,5,4,0,"[{'name': 'lua'}, {'name': 'outdated'}, {'name': 'livecheck'}, {'name': 'CI-syntax-only'}]",2022-10-02 16:44:53+00:00,2022-12-21 21:04:29+00:00,6927576.0,"80 days, 4:19:36","[{'comment_id': 985470284, 'comment_body': 'We want the version our release depends on, not master', 'comment_created': datetime.datetime(2022, 10, 3, 7, 43, 8, tzinfo=datetime.timezone.utc), 'commenter': 'SMillerDev', 'type': 'User'}, {'comment_id': 985571434, 'comment_body': 'Yes, it was mentioned by @nandahkrishna as well.\r\n\r\nHowever, we need access to the Formula’s `livecheck` result inside the resources’ `livecheck` block (perhaps by way of a helper method), so that we can use the Formula’s latest URL and check the right _file_/_webpage_ for resource versions.\r\n', 'comment_created': datetime.datetime(2022, 10, 3, 9, 35, 58, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}, {'comment_id': 1045248946, 'comment_body': 'I think what is ment is to change the url to a pinned version:\r\n`https://raw.githubusercontent.com/luvit/luvit/2.18.1/Makefile`, or even better:\r\n`https://raw.githubusercontent.com/luvit/luvit/#{version}/Makefile`', 'comment_created': datetime.datetime(2022, 12, 11, 15, 5, 49, tzinfo=datetime.timezone.utc), 'commenter': 'iMichka', 'type': 'User'}, {'comment_id': 1051228708, 'comment_body': ""I definitely agree that we need to be checking a file from a release version (not the `master` branch) but using the `Makefile` for the current formula version would lead to a situation where livecheck returns a new version for the formula but the resource versions are for the _current_ release. As described in https://github.com/Homebrew/homebrew-core/pull/112155#issuecomment-1355090824, we need to check the file from the latest version reported by livecheck for the main formula check and that's what Mohammad is describing above.\r\n\r\nThis isn't possible at the moment because the latest version from livecheck is determined at runtime, not when the formula is parsed. We've discussed this issue internally and Nanda's working on Homebrew/brew changes to make it possible to reference the latest version from the main formula check in a resource `livecheck` block and should have some work up soon. In the interm time, we can't create an appropriate `livecheck` block for this resource until then."", 'comment_created': datetime.datetime(2022, 12, 16, 23, 14, 4, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}, {'comment_id': 1054577119, 'comment_body': '```suggestion\r\n        lit_version = page[regex, 1]\r\n        next if lit_version.blank?\r\n\r\n        get_lit_page = Homebrew::Livecheck::Strategy.page_content(\r\n          ""https://raw.githubusercontent.com/luvit/lit/#{lit_version}/get-lit.sh"",\r\n        )\r\n        next if get_lit_page[:content].blank?\r\n\r\n        get_lit_page[:content][/LUVI_VERSION:-v?(\\d+(?:\\.\\d+)+)/i, 1]\r\n```\r\n\r\nJust a few small tweaks and this should be good to go.', 'comment_created': datetime.datetime(2022, 12, 21, 16, 21, 7, tzinfo=datetime.timezone.utc), 'commenter': 'samford', 'type': 'User'}]","[{'commit_sha': 'edbb8028291b7b057b0cc8e8f2591f7d52021af3', 'committer_username': 'nandahkrishna', 'committer_name': 'Nanda H Krishna', 'committer_email': 'me@nandahkrishna.com', 'commit_date': datetime.datetime(2017, 11, 18, 13, 35, 10, tzinfo=datetime.timezone.utc)}]",Mohammad Zain Abbas,19189095,mohammadzainabbas@gmail.com,User,,135,,45,59
1062005788,Add livecheck block for resource `pkg-config-wrapper` for Formulae `influxdb` and `flux`,"- [x] Have you followed the [guidelines for contributing](https://github.com/Homebrew/homebrew-core/blob/HEAD/CONTRIBUTING.md)?
- [x] Have you ensured that your commits follow the [commit style guide](https://docs.brew.sh/Formula-Cookbook#commit)?
- [x] Have you checked that there aren't other open [pull requests](https://github.com/Homebrew/homebrew-core/pulls) for the same formula update/change?
- [x] Have you built your formula locally with `brew install --build-from-source <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Is your test running fine `brew test <formula>`, where `<formula>` is the name of the formula you're submitting?
- [x] Does your build pass `brew audit --strict <formula>` (after doing `brew install --build-from-source <formula>`)? If this is a new formula, does it pass `brew audit --new <formula>`?

-----

After merging https://github.com/Homebrew/brew/pull/13613, it would be possible to use `brew livecheck` command for resources as well. 

While augmenting `brew livecheck` command, I tested the functionality on multiple different resources and formulae. `pkg-config-wrapper` was one of the resource which could benefit from such behaviour.

---

> Note: you can only test this functionality properly once https://github.com/Homebrew/brew/pull/13613 is merged successfully. Simply, run `brew livecheck influxdb -r` and you'd see the livecheck output for resources as well.",False,111257,https://api.github.com/repos/Homebrew/homebrew-core/pulls/111257,https://github.com/Homebrew/homebrew-core/pull/111257,closed,35,0,2,4,1,3,4,0,"[{'name': 'go'}, {'name': 'rust'}, {'name': 'livecheck'}, {'name': 'CI-syntax-only'}]",2022-09-20 19:44:01+00:00,2022-10-02 16:20:02+00:00,1024561.0,"11 days, 20:36:01","[{'comment_id': 976103123, 'comment_body': ""This always takes the latest though, I don't think we can do that. AFAIK we need to use the one used in the upstream repo."", 'comment_created': datetime.datetime(2022, 9, 21, 6, 50, 13, tzinfo=datetime.timezone.utc), 'commenter': 'SMillerDev', 'type': 'User'}, {'comment_id': 976842045, 'comment_body': '@mohammadzainabbas You should be checking the `go.mod` of `influxdb` as mentioned in the comment, not just getting the latest version.', 'comment_created': datetime.datetime(2022, 9, 21, 18, 7, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nandahkrishna', 'type': 'User'}, {'comment_id': 985262565, 'comment_body': '@SMillerDev and @nandahkrishna, sorry for late response to this. I have realised my mistake, and fixed the issue in https://github.com/Homebrew/homebrew-core/pull/112155. I am closing this PR to keep my PR aligned with `Homebrew/core` style as pointed out by @carlocab earlier.', 'comment_created': datetime.datetime(2022, 10, 2, 16, 19, 59, tzinfo=datetime.timezone.utc), 'commenter': 'mohammadzainabbas', 'type': 'User'}]","[{'commit_sha': '45c7cb94b5f2bec38d5a715640cb462f049f292a', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '836b5de5023d340d6f9397da70c9624c42fdddd9', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ec040cd00ad53fc7f4ff022b2ec5ab9caa53160', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6553f8c55cf50e02cf3e6835f9d9a7da1b41a705', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}]",Mohammad Zain Abbas,19189095,mohammadzainabbas@gmail.com,User,,135,,45,59
1059440861,template-glib 3.36.0,"Created with `brew bump-formula-pr`.
",False,111021,https://api.github.com/repos/Homebrew/homebrew-core/pulls/111021,https://github.com/Homebrew/homebrew-core/pull/111021,closed,5,7,1,2,1,0,2,0,"[{'name': 'outdated'}, {'name': 'bump-formula-pr'}]",2022-09-18 02:28:56+00:00,2022-09-18 10:05:02+00:00,27366.0,7:36:06,[],"[{'commit_sha': 'e9ef2336931111ced42fe05a48ed1ce3c6224560', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdb709116f4d14d4ff284f2d6bdf5e0eb2964745', 'committer_username': 'carlocab', 'committer_name': 'Carlo Cabrera', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 23, 1, 38, 22, tzinfo=datetime.timezone.utc)}]",Mohammad Zain Abbas,19189095,mohammadzainabbas@gmail.com,User,,135,,45,59
762469726,Updated postman from 9.0.7 to 9.1.1,"**Important:** *Do not tick a checkbox if you haven’t performed its action.* Honesty is indispensable for a smooth review process.

_In the following questions `<cask>` is the token of the cask you're submitting._

After making all changes to a cask, verify:

- [x] The submission is for [a stable version](https://docs.brew.sh/Acceptable-Casks#stable-versions) or [documented exception](https://docs.brew.sh/Acceptable-Casks#but-there-is-no-stable-version).
- [x] `brew audit --cask <cask>` is error-free.
- [x] `brew style --fix <cask>` reports no offenses.

Additionally, **if adding a new cask**:

- [ ] Named the cask according to the [token reference](https://docs.brew.sh/Cask-Cookbook#token-reference).
- [ ] Checked the cask was not [already refused](https://github.com/Homebrew/homebrew-cask/search?q=is%3Aclosed&type=Issues).
- [ ] Checked the cask is submitted to [the correct repo](https://docs.brew.sh/Acceptable-Casks#finding-a-home-for-your-cask).
- [ ] `brew audit --new-cask <cask>` worked successfully.
- [x] `brew install --cask <cask>` worked successfully.
- [x] `brew uninstall --cask <cask>` worked successfully.
",True,112984,https://api.github.com/repos/Homebrew/homebrew-cask/pulls/112984,https://github.com/Homebrew/homebrew-cask/pull/112984,closed,2,2,1,2,1,0,1,0,[{'name': 'outdated'}],2021-10-20 15:27:31+00:00,2021-10-20 22:59:21+00:00,27110.0,7:31:50,[],"[{'commit_sha': 'a8c7c9e52357d002bb75cda143e60c7d6c84b0f5', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d5c0297705a8ad918f71586737208b36cccb885', 'committer_username': 'mohammadzainabbas', 'committer_name': 'Mohammad Zain Abbas', 'committer_email': 'mohammadzainabbas@gmail.com', 'commit_date': datetime.datetime(2016, 5, 4, 13, 54, 14, tzinfo=datetime.timezone.utc)}]",Mohammad Zain Abbas,19189095,mohammadzainabbas@gmail.com,User,,135,,45,59

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
53238813,brew,Homebrew/brew,Ruby,9515,40582,714,1203,41555,56,13,13,"[{'id': 1068581018, 'number': 13933, 'closed': datetime.datetime(2022, 10, 3, 4, 3, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 27, 12, 51, 44, tzinfo=datetime.timezone.utc), 'time_taken': 486699.0, 'time_delta': '5 days, 15:11:39', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1009913458, 'number': 13613, 'closed': datetime.datetime(2022, 10, 2, 17, 31, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 27, 17, 11, 28, tzinfo=datetime.timezone.utc), 'time_taken': 5789990.0, 'time_delta': '67 days, 0:19:50', 'additions': 441, 'deletions': 114, 'state': 'closed'}, {'id': 984020030, 'number': 13496, 'closed': datetime.datetime(2022, 7, 4, 17, 35, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 30, 15, 52, 17, tzinfo=datetime.timezone.utc), 'time_taken': 351783.0, 'time_delta': '4 days, 1:43:03', 'additions': 77, 'deletions': 12, 'state': 'closed'}, {'id': 984010285, 'number': 13495, 'closed': datetime.datetime(2022, 6, 30, 15, 44, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 30, 15, 43, 34, tzinfo=datetime.timezone.utc), 'time_taken': 61.0, 'time_delta': '0:01:01', 'additions': 67, 'deletions': 0, 'state': 'closed'}]"
52855516,homebrew-core,Homebrew/homebrew-core,Ruby,12276,13527,300,14233,511246,120,65,106,"[{'id': 1073895182, 'number': 112158, 'closed': datetime.datetime(2022, 12, 5, 13, 7, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 2, 17, 10, 48, tzinfo=datetime.timezone.utc), 'time_taken': 5515011.0, 'time_delta': '63 days, 19:56:51', 'additions': 10, 'deletions': 0, 'state': 'closed'}, {'id': 1073889190, 'number': 112157, 'closed': datetime.datetime(2022, 12, 21, 21, 4, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 2, 16, 44, 53, tzinfo=datetime.timezone.utc), 'time_taken': 6927576.0, 'time_delta': '80 days, 4:19:36', 'additions': 21, 'deletions': 0, 'state': 'closed'}, {'id': 1073885727, 'number': 112156, 'closed': datetime.datetime(2022, 12, 21, 11, 4, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 2, 16, 30, 31, tzinfo=datetime.timezone.utc), 'time_taken': 6892459.0, 'time_delta': '79 days, 18:34:19', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 1073882304, 'number': 112155, 'closed': datetime.datetime(2022, 12, 21, 10, 4, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 2, 16, 16, 30, tzinfo=datetime.timezone.utc), 'time_taken': 6889709.0, 'time_delta': '79 days, 17:48:29', 'additions': 10, 'deletions': 0, 'state': 'closed'}, {'id': 1062005788, 'number': 111257, 'closed': datetime.datetime(2022, 10, 2, 16, 20, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 20, 19, 44, 1, tzinfo=datetime.timezone.utc), 'time_taken': 1024561.0, 'time_delta': '11 days, 20:36:01', 'additions': 35, 'deletions': 0, 'state': 'closed'}, {'id': 1059440861, 'number': 111021, 'closed': datetime.datetime(2022, 9, 18, 10, 5, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 18, 2, 28, 56, tzinfo=datetime.timezone.utc), 'time_taken': 27366.0, 'time_delta': '7:36:06', 'additions': 5, 'deletions': 7, 'state': 'closed'}, {'id': 1059419644, 'number': 111013, 'closed': datetime.datetime(2022, 9, 21, 12, 32, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 17, 23, 41, 29, tzinfo=datetime.timezone.utc), 'time_taken': 305467.0, 'time_delta': '3 days, 12:51:07', 'additions': 9, 'deletions': 12, 'state': 'closed'}]"
3623050,homebrew-cask,Homebrew/homebrew-cask,Ruby,10638,20753,318,11493,246731,27,7,14,"[{'id': 1625962691, 'number': 161441, 'closed': datetime.datetime(2023, 12, 1, 16, 19, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 1, 16, 14, 12, tzinfo=datetime.timezone.utc), 'time_taken': 332.0, 'time_delta': '0:05:32', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 762469726, 'number': 112984, 'closed': datetime.datetime(2021, 10, 20, 22, 59, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 20, 15, 27, 31, tzinfo=datetime.timezone.utc), 'time_taken': 27110.0, 'time_delta': '7:31:50', 'additions': 2, 'deletions': 2, 'state': 'closed'}]"
