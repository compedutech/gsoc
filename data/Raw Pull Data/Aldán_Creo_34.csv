pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
676435424,Groundwork for the new search backend,"This PR doesn't add any new features to the Wagtail search app. It just consists of groundwork that will enable the future implementation of the new database search backends and models, which will come as a different PR for each specific database system (PostgreSQL, SQLite, and MySQL).",True,7281,https://api.github.com/repos/wagtail/wagtail/pulls/7281,https://github.com/wagtail/wagtail/pull/7281,closed,392,224,5,10,1,7,2,0,"[{'name': 'component:Search'}, {'name': 'GSOC'}]",2021-06-23 16:14:31+00:00,2021-06-29 12:32:24+00:00,505073.0,"5 days, 20:17:53","[{'comment_id': 657454738, 'comment_body': 'Does this conflict with the existing postgres search backend?', 'comment_created': datetime.datetime(2021, 6, 23, 20, 54, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kaedroho', 'type': 'User'}, {'comment_id': 657455501, 'comment_body': 'I think we could just set ``related_name`` to ""+"" since we never use the reverse side of this relation', 'comment_created': datetime.datetime(2021, 6, 23, 20, 56, 1, tzinfo=datetime.timezone.utc), 'commenter': 'kaedroho', 'type': 'User'}, {'comment_id': 657457969, 'comment_body': ""You can replace this file with:\r\n\r\n```python\r\nimport sys\r\nfrom wagtail.utils.deprecation import MovedDefinitionHandler, RemovedInWagtail216Warning\r\n\r\nMOVED_DEFINITIONS = {\r\n    'DatabaseSearchQueryCompiler': ('wagtail.search.backends.database', 'DatabaseSearchQueryCompiler'),\r\n    'DatabaseSearchResults': ('wagtail.search.backends.database', 'DatabaseSearchResults'),\r\n    'DatabaseSearchBackend': ('wagtail.search.backends.database', 'DatabaseSearchBackend'),\r\n    'SearchBackend': ('wagtail.search.backends.database', 'SearchBackend'),\r\n}\r\n\r\nsys.modules[__name__] = MovedDefinitionHandler(sys.modules[__name__], MOVED_DEFINITIONS, RemovedInWagtail216Warning)\r\n```\r\nWhich will re-export those classes here, and raise a deprecation warning if they are imported"", 'comment_created': datetime.datetime(2021, 6, 23, 21, 0, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kaedroho', 'type': 'User'}, {'comment_id': 657571064, 'comment_body': ""Good idea! I've changed that in the code, so that the Django ORM doesn't set up backwards navigability"", 'comment_created': datetime.datetime(2021, 6, 24, 1, 59, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ACMCMC', 'type': 'User'}, {'comment_id': 657576503, 'comment_body': ""I've changed that; however, I'm not able to see the deprecation warning... Is that normal? Maybe I'm not getting the deprecation warning because we're not in Wagtail 2.16 yet?"", 'comment_created': datetime.datetime(2021, 6, 24, 2, 16, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ACMCMC', 'type': 'User'}, {'comment_id': 657577213, 'comment_body': 'And are we sure we want to actually deprecate the `wagtail/search/backends/db` for the `wagtail/search/backends/database` imports?', 'comment_created': datetime.datetime(2021, 6, 24, 2, 18, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ACMCMC', 'type': 'User'}, {'comment_id': 658618364, 'comment_body': ""Yes, it does. I've added a check in the `ready` method of the `wagtail.search` app config, so that the generic relations to the `IndexEntry` model that will be used are not added if the `wagtail.contrib.postgres_search` app is already installed:\r\n\r\n```python3\r\ndef ready(self):\r\n        if not apps.is_installed('wagtail.contrib.postgres_search'):\r\n               # Add the generic relations\r\n```"", 'comment_created': datetime.datetime(2021, 6, 25, 9, 14, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ACMCMC', 'type': 'User'}]","[{'commit_sha': 'cab2c149e16130fa3acc7014f63bfa9054695160', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8cceeafa45447a68f7952c7e80892c4ecb2a943', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5fb04a5abbabe4867652ef6948b90ce55003ccd', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '066bbc146fcff7cc1eb21434d0e1bb990afa9714', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a80c1ff988601c140cba0e2318435fab03fdc93b', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b2e349c641c7d4b7379049c5ee3fb688c819dc0', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c4072d495a880f1948aff5da63fc98922658abb', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd63009e204035dfc46538e5b6eb962b1e92435b', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bb20eee5a48fe3ce81f9150faf4fd0203040801', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0addefea6b71046f322dbca0f11c77a348db560e', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}]",ACMCMC,20495460,,User,,91,,40,33
681643543,New PostgreSQL search backend,"This is the full implementation of the PostgreSQL backend for the search app. There's a new migration that will have to be edited later, when there's support for the MySQL and SQLite backends as well.",True,7305,https://api.github.com/repos/wagtail/wagtail/pulls/7305,https://github.com/wagtail/wagtail/pull/7305,closed,1306,29,23,2,1,4,2,0,"[{'name': 'component:Search'}, {'name': 'GSOC'}]",2021-07-01 09:01:54+00:00,2021-07-13 14:55:49+00:00,1058035.0,"12 days, 5:53:55","[{'comment_id': 667755245, 'comment_body': 'Looks like this is unused', 'comment_created': datetime.datetime(2021, 7, 12, 9, 4, 21, tzinfo=datetime.timezone.utc), 'commenter': 'kaedroho', 'type': 'User'}, {'comment_id': 667756513, 'comment_body': ""I think we should change ``postgres_search`` to ``'wagtail.contrib.postgres_search'`` since this is how it would be registered in settings files"", 'comment_created': datetime.datetime(2021, 7, 12, 9, 6, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kaedroho', 'type': 'User'}, {'comment_id': 668304134, 'comment_body': ""It's used in some tests (`wagtail.search.tests.test_backends.TestBackendLoader.test_get_search_backends_with_no_default_defined`, for example)"", 'comment_created': datetime.datetime(2021, 7, 12, 22, 43, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ACMCMC', 'type': 'User'}, {'comment_id': 668304301, 'comment_body': 'Changed! üôèüèª', 'comment_created': datetime.datetime(2021, 7, 12, 22, 44, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ACMCMC', 'type': 'User'}]","[{'commit_sha': '949ac388e23f147bcc610692a67f11b395262427', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46cb17b6c126f7a0483166e1ea8df7c9caf9d76d', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}]",ACMCMC,20495460,,User,,91,,40,33
706909154,SQLite Search Backend,This is the first version of the SQLite search backend. It mainly adds support for indexing and simple search queries.,True,7420,https://api.github.com/repos/wagtail/wagtail/pulls/7420,https://github.com/wagtail/wagtail/pull/7420,closed,1123,77,16,8,1,20,1,0,[{'name': 'GSOC'}],2021-08-09 22:59:51+00:00,2021-09-30 12:39:22+00:00,4455571.0,"51 days, 13:39:31","[{'comment_id': 693936913, 'comment_body': ""Looks like this should be a sub-class of https://github.com/wagtail/wagtail/blob/main/wagtail/search/query.py#L9, but instead, it's a sub-class of the ``SubQuery`` class defined in this file"", 'comment_created': datetime.datetime(2021, 8, 23, 12, 43, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kaedroho', 'type': 'User'}, {'comment_id': 693937123, 'comment_body': 'Minor: Should be `elif` here', 'comment_created': datetime.datetime(2021, 8, 23, 12, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'kaedroho', 'type': 'User'}, {'comment_id': 693937699, 'comment_body': ""Looks like we don't need to use `Tuple[]` here"", 'comment_created': datetime.datetime(2021, 8, 23, 12, 44, 53, tzinfo=datetime.timezone.utc), 'commenter': 'kaedroho', 'type': 'User'}, {'comment_id': 693946287, 'comment_body': ""Missing `Boost`: https://github.com/wagtail/wagtail/blob/main/wagtail/search/query.py#L56\r\n\r\nSince we don't support this in SQLite anyway, I think we could unwrap the search query:\r\n\r\n```python\r\nif isinstance(search_query, Boost):\r\n    return normalize(search_query.subquery)\r\n```"", 'comment_created': datetime.datetime(2021, 8, 23, 12, 56, 25, tzinfo=datetime.timezone.utc), 'commenter': 'kaedroho', 'type': 'User'}, {'comment_id': 693946898, 'comment_body': 'Should use `elif` here', 'comment_created': datetime.datetime(2021, 8, 23, 12, 57, 8, tzinfo=datetime.timezone.utc), 'commenter': 'kaedroho', 'type': 'User'}, {'comment_id': 693953731, 'comment_body': '``not_negated_subqueries`` is unused. Also I think we can only ignore ``MatchAll()`` that are negated here', 'comment_created': datetime.datetime(2021, 8, 23, 13, 6, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kaedroho', 'type': 'User'}, {'comment_id': 693953958, 'comment_body': ""Shouldn't this be checking ``not_negated_subqueries``?"", 'comment_created': datetime.datetime(2021, 8, 23, 13, 6, 40, tzinfo=datetime.timezone.utc), 'commenter': 'kaedroho', 'type': 'User'}, {'comment_id': 693956292, 'comment_body': 'TODO', 'comment_created': datetime.datetime(2021, 8, 23, 13, 9, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kaedroho', 'type': 'User'}, {'comment_id': 701987198, 'comment_body': 'Changed, thanks!', 'comment_created': datetime.datetime(2021, 9, 3, 15, 34, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ACMCMC', 'type': 'User'}, {'comment_id': 701987912, 'comment_body': 'Cool! I changed that :)', 'comment_created': datetime.datetime(2021, 9, 3, 15, 34, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ACMCMC', 'type': 'User'}, {'comment_id': 702005935, 'comment_body': 'Good idea! üôå', 'comment_created': datetime.datetime(2021, 9, 3, 15, 53, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ACMCMC', 'type': 'User'}, {'comment_id': 702014431, 'comment_body': ""That's true, it's not necessary now. I have changed it üôå"", 'comment_created': datetime.datetime(2021, 9, 3, 16, 7, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ACMCMC', 'type': 'User'}, {'comment_id': 702026425, 'comment_body': ""There is a different problem here, which is that `MatchAll()` subqueries should instead be removed when they are negated, and if there's a non-negated `MatchAll()` subquery, then we should return `MatchAll()`. I have corrected the code, thanks! ‚úåüèª"", 'comment_created': datetime.datetime(2021, 9, 3, 16, 27, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ACMCMC', 'type': 'User'}, {'comment_id': 702027094, 'comment_body': '(I responded to this issue in the previous comment)', 'comment_created': datetime.datetime(2021, 9, 3, 16, 28, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ACMCMC', 'type': 'User'}, {'comment_id': 702033561, 'comment_body': ""I'm not so sure about that... For example, `PlainText` is defined as:\r\nhttps://github.com/wagtail/wagtail/blob/45b7788c6df8aaeb98d2130248b0b000d3df4d4d/wagtail/search/query.py#L27"", 'comment_created': datetime.datetime(2021, 9, 3, 16, 39, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ACMCMC', 'type': 'User'}, {'comment_id': 702034998, 'comment_body': 'Yes, the TODO is there, but because ranking is not yet supported in the SQLite backend. Do you think I should remove that notice? Maybe I could modify the function to just raise a `NotImplementedError`.', 'comment_created': datetime.datetime(2021, 9, 3, 16, 42, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ACMCMC', 'type': 'User'}, {'comment_id': 702973890, 'comment_body': ""Yep, but it's a different class. ``SearchQuery`` in this file is different to the ``SearchQuery`` that is defined in ``wagtail.search.query``"", 'comment_created': datetime.datetime(2021, 9, 6, 15, 24, 21, tzinfo=datetime.timezone.utc), 'commenter': 'kaedroho', 'type': 'User'}, {'comment_id': 716667321, 'comment_body': 'To resolve https://github.com/wagtail/wagtail/pull/7420/files#r693936913, perhaps we could rename this to ``SearchQueryExpression`` so that the name no longer clashes with ``wagtail.search.query.SearchQuery``, what do you think?', 'comment_created': datetime.datetime(2021, 9, 27, 12, 59, 37, tzinfo=datetime.timezone.utc), 'commenter': 'kaedroho', 'type': 'User'}]","[{'commit_sha': '949ac388e23f147bcc610692a67f11b395262427', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46cb17b6c126f7a0483166e1ea8df7c9caf9d76d', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2aa0f3feb712e7525b9ddbd7098230bc3153d8f2', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfca52279dbf1def838a97725fdfe0c513b3af2d', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52b47f9ed370887ca60e79c76dcd6b3c44f65c73', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15005d571bee90df6070c0f56dba12b4a57c67a1', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '173c04062a653a44e50852613adc49872a49807c', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d44ab2e9af9ac506189c32513031f05c75cb490', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}]",ACMCMC,20495460,,User,,91,,40,33
715010169,MySQL Search Backend,"This PR adds the implementation of the MySQL search backend, which completes the implementation of the new backends for the out-of-the-box search capabilities that Wagtail will now have.",True,7445,https://api.github.com/repos/wagtail/wagtail/pulls/7445,https://github.com/wagtail/wagtail/pull/7445,closed,1032,3,8,4,5,3,1,0,[{'name': 'GSOC'}],2021-08-18 11:56:08+00:00,2021-10-11 09:40:40+00:00,4657472.0,"53 days, 21:44:32","[{'comment_id': 693964908, 'comment_body': ""The best practice in Python is to not use lists as default parameters since they are initialised only once and reused (so if it's modified in any way, the next call will get the modified list and not a fresh one).\r\n\r\n"", 'comment_created': datetime.datetime(2021, 8, 23, 13, 20, 37, tzinfo=datetime.timezone.utc), 'commenter': 'kaedroho', 'type': 'User'}, {'comment_id': 693969011, 'comment_body': ""Looks like ``title_norm`` isn't being used. Is it possible to create a separate ``MatchExpression`` for `body` and `title` and multiply the `title` by `title_norm`?\r\n\r\nin the postgres backend, it's done here: https://github.com/wagtail/wagtail/blob/1b50c744240b1f6ddaf5abd99c2ea26d17c5cdfb/wagtail/contrib/postgres_search/backend.py#L494\r\n\r\n\r\nAs a total guess (sorry if this is wrong!), but do you think something like this would work?\r\n\r\n```python\r\nscore_expression = (\r\n    MatchExpression(search_query, columns=['title'], output_field=FloatField()) * F('title_norm') +\r\n    MatchExpression(search_query, columns=['body'], output_field=FloatField())\r\n)\r\n```"", 'comment_created': datetime.datetime(2021, 8, 23, 13, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'kaedroho', 'type': 'User'}, {'comment_id': 724823721, 'comment_body': 'We need to query the `title` and `body` columns separately, and to do that, we have to use two separate `MatchExpression`s.', 'comment_created': datetime.datetime(2021, 10, 8, 8, 48, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ACMCMC', 'type': 'User'}]","[{'commit_sha': '42d6adeb7eff109e65086e25a9e604e57664fe7e', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23d2cc003ebe9ace4b6f95dd6b91eb819596f2ab', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf4bd7b4cd97451b320a144457248f87fd8a029d', 'committer_username': 'kaedroho', 'committer_name': 'Karl Hobley', 'committer_email': 'karl@kaed.uk', 'commit_date': datetime.datetime(2011, 9, 30, 21, 38, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3c11db8802561ee5e3cb904c1222628fe0d8f3a', 'committer_username': 'ACMCMC', 'committer_name': 'ACMCMC', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 16, 23, 1, 52, tzinfo=datetime.timezone.utc)}]",ACMCMC,20495460,,User,,91,,40,33

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
16479108,wagtail,wagtail/wagtail,Python,3754,17790,336,931,17770,974,54,135,"[{'id': 786751121, 'number': 7726, 'closed': datetime.datetime(2022, 1, 10, 19, 38, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 23, 8, 52, 54, tzinfo=datetime.timezone.utc), 'time_taken': 4185908.0, 'time_delta': '48 days, 10:45:08', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 715010169, 'number': 7445, 'closed': datetime.datetime(2021, 10, 11, 9, 40, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 11, 56, 8, tzinfo=datetime.timezone.utc), 'time_taken': 4657472.0, 'time_delta': '53 days, 21:44:32', 'additions': 1032, 'deletions': 3, 'state': 'closed'}, {'id': 706909154, 'number': 7420, 'closed': datetime.datetime(2021, 9, 30, 12, 39, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 22, 59, 51, tzinfo=datetime.timezone.utc), 'time_taken': 4455571.0, 'time_delta': '51 days, 13:39:31', 'additions': 1123, 'deletions': 77, 'state': 'closed'}, {'id': 681643543, 'number': 7305, 'closed': datetime.datetime(2021, 7, 13, 14, 55, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 1, 9, 1, 54, tzinfo=datetime.timezone.utc), 'time_taken': 1058035.0, 'time_delta': '12 days, 5:53:55', 'additions': 1306, 'deletions': 29, 'state': 'closed'}, {'id': 680462664, 'number': 7301, 'closed': datetime.datetime(2021, 7, 1, 9, 0, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 1, 17, 31, tzinfo=datetime.timezone.utc), 'time_taken': 114186.0, 'time_delta': '1 day, 7:43:06', 'additions': 1600, 'deletions': 224, 'state': 'closed'}, {'id': 680443726, 'number': 7300, 'closed': datetime.datetime(2021, 6, 30, 1, 15, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 0, 21, 58, tzinfo=datetime.timezone.utc), 'time_taken': 3230.0, 'time_delta': '0:53:50', 'additions': 3088, 'deletions': 888, 'state': 'closed'}, {'id': 676435424, 'number': 7281, 'closed': datetime.datetime(2021, 6, 29, 12, 32, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 23, 16, 14, 31, tzinfo=datetime.timezone.utc), 'time_taken': 505073.0, 'time_delta': '5 days, 20:17:53', 'additions': 392, 'deletions': 224, 'state': 'closed'}]"
