pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
683408841,Added primary trust anchor support,"I have worked on adding support for trust anchors in DRG using `rcgen` crate

Commands I have implemented

`drg trust create --app app12 --key-output app-private.key` => This adds the trust anchor to the application object and exports the private key.

`drg trust add --app app12 --device d7 --out device-cert.pem --key-output device-key.pem --ca-key app-private.key` 
This command takes in the application's private key and downloads the trust anchor. This is used to sign a CSR and finally outputs device-cert.pem and device-key.pem

`--days <number>` can also be specified for both the commands.
`--key-output` and `--out` are not mandatory, the certificate and key would be printed to console if not specified.

WIP #20 ",True,81,https://api.github.com/repos/drogue-iot/drg/pulls/81,https://github.com/drogue-iot/drg/pull/81,closed,644,3,8,9,2,44,0,0,[],2021-07-05 06:40:05+00:00,2021-07-16 06:00:14+00:00,948009.0,"10 days, 23:20:09","[{'comment_id': 666036110, 'comment_body': 'Explain that `--keyout` is the output file for the Root CA private key, and that it needs to be save and stored securely ', 'comment_created': datetime.datetime(2021, 7, 8, 9, 40, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666038594, 'comment_body': 'use snake case here to keep it consistent\r\n```suggestion\r\n    ca_key,\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 9, 43, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666039622, 'comment_body': 'i think `key-output` would be more intuitive as a command line parameter ', 'comment_created': datetime.datetime(2021, 7, 8, 9, 45, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666042141, 'comment_body': 'Make it more clear that this is an output file. E.g. : ""Output file for the private key. Later used to sign [...]""', 'comment_created': datetime.datetime(2021, 7, 8, 9, 48, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666053221, 'comment_body': '```suggestion\r\n        .validator(|s| s.parse::<u64>())\r\n```\r\nMaybe try some one liner in that spirit', 'comment_created': datetime.datetime(2021, 7, 8, 10, 3, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666053681, 'comment_body': '```suggestion\r\n        .help(""Number of days the certificate should be valid for."");\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 10, 4, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666064297, 'comment_body': ""weird behaviour : \r\n`drg trust create --days` works with the default value. I'd expect an error."", 'comment_created': datetime.datetime(2021, 7, 8, 10, 20, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666066594, 'comment_body': 'as you need app_id in both subcommands you can put that line once before the match', 'comment_created': datetime.datetime(2021, 7, 8, 10, 23, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666068552, 'comment_body': '```suggestion\r\n                if cert.is_empty() {\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 10, 26, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666071852, 'comment_body': 'metadata variable name is poorly chosen here, as it contains the whole object. ', 'comment_created': datetime.datetime(2021, 7, 8, 10, 31, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666073583, 'comment_body': ""if something was already in the spec it will get overwritten.. \r\nI added a crate to merge json opbjects, see [here](https://github.com/drogue-iot/drg/pull/80/files#diff-ce50905fef95e499d7a1d0a2961512d61281b3324580cbf220805a7b4bd82a80R186)\r\n\r\nIf you don't want to rebase your PR it's fine, but in that case add a TODO here\r\n"", 'comment_created': datetime.datetime(2021, 7, 8, 10, 33, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666074265, 'comment_body': 'i would do the parsing of all the arguments first, as if there is an issue there is no need to do a network call', 'comment_created': datetime.datetime(2021, 7, 8, 10, 34, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666076097, 'comment_body': 'typo : CommonName\r\n`get_certificate` is a weird name. if i am correct this actually generate a cert', 'comment_created': datetime.datetime(2021, 7, 8, 10, 37, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666077151, 'comment_body': ""I don't see the benefit of using a custom struct and a static method to create a certificate. Why not simply create a `generate_cert` function ?"", 'comment_created': datetime.datetime(2021, 7, 8, 10, 39, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666079043, 'comment_body': 'I am not sure if ""Cloud"" is necessary here. If not, i\'d put the app name here', 'comment_created': datetime.datetime(2021, 7, 8, 10, 42, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666080980, 'comment_body': 'Add a line that explains what is this key and what the user should do with it before printing the key', 'comment_created': datetime.datetime(2021, 7, 8, 10, 45, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666081845, 'comment_body': 'A confirmation would be neat here. Something like ""The private key file for the trust anchor was written at `<path>` ""', 'comment_created': datetime.datetime(2021, 7, 8, 10, 46, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666086697, 'comment_body': 'You can reduce a lot of `match`ing by bubbling up errors by returning a `Result` here', 'comment_created': datetime.datetime(2021, 7, 8, 10, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666088043, 'comment_body': '```suggestion\r\n    let ca_key_content= KeyPair::from_pem(&read_from_file(ca_key))\r\n        .map_err(|e| anyhow!(""Error reading CA key file. {}"", e))?;\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 10, 56, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666091906, 'comment_body': 'same here, replace the unsafe unwrap by using `?`', 'comment_created': datetime.datetime(2021, 7, 8, 11, 2, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666092243, 'comment_body': ""typo : device_temp\r\nAlso, it's a unsigned cert at this point, so the variable name is a bit confusing"", 'comment_created': datetime.datetime(2021, 7, 8, 11, 3, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666094172, 'comment_body': 'unsafe unwrap\r\n', 'comment_created': datetime.datetime(2021, 7, 8, 11, 6, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666094974, 'comment_body': 'Add a line that explains what is this cert and what the user should do with it before printing\r\n', 'comment_created': datetime.datetime(2021, 7, 8, 11, 7, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666095156, 'comment_body': 'printing a write confirmation would be nice', 'comment_created': datetime.datetime(2021, 7, 8, 11, 7, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666096203, 'comment_body': 'Same remarks for this one :)', 'comment_created': datetime.datetime(2021, 7, 8, 11, 9, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666262217, 'comment_body': ""Yes it's weird but I think it should not lead to error as default value is 365"", 'comment_created': datetime.datetime(2021, 7, 8, 14, 45, 14, tzinfo=datetime.timezone.utc), 'commenter': 'vedangj044', 'type': 'User'}, {'comment_id': 666265154, 'comment_body': 'Yeah, so the reason behind it is when we generate it using the `generate_certificate` function and then do \r\n`certificate.serialize_pem()` and `certificate.serialize_private_key_pem()`, we get an error that the value of the certificate was moved earlier. To avoid this I created a struct, and as we have a struct we can move repetitive parameters to it. \r\n', 'comment_created': datetime.datetime(2021, 7, 8, 14, 48, 27, tzinfo=datetime.timezone.utc), 'commenter': 'vedangj044', 'type': 'User'}, {'comment_id': 666270567, 'comment_body': 'Exactly, I was running away from it, but okay', 'comment_created': datetime.datetime(2021, 7, 8, 14, 54, 22, tzinfo=datetime.timezone.utc), 'commenter': 'vedangj044', 'type': 'User'}, {'comment_id': 666271462, 'comment_body': 'we are not expecting that the user does a \r\n`drg trust add > device-credentials.pem` right ?', 'comment_created': datetime.datetime(2021, 7, 8, 14, 55, 22, tzinfo=datetime.timezone.utc), 'commenter': 'vedangj044', 'type': 'User'}, {'comment_id': 666276208, 'comment_body': 'Actually, I was under the impression that a experience similar to openssl would seem familiar to the user. Reason why I left print statements and parameters names like that. ', 'comment_created': datetime.datetime(2021, 7, 8, 15, 0, 30, tzinfo=datetime.timezone.utc), 'commenter': 'vedangj044', 'type': 'User'}, {'comment_id': 666687175, 'comment_body': '`if cert == Value::Null` works', 'comment_created': datetime.datetime(2021, 7, 9, 5, 47, 54, tzinfo=datetime.timezone.utc), 'commenter': 'vedangj044', 'type': 'User'}, {'comment_id': 666755120, 'comment_body': 'yeah but in that case it feels like a flag, which is not the case. Please remove the default value from here so : \r\n`--days 65` works as expected (65 days)\r\n`--days` is invalid\r\nno argument use the default value of 365. ', 'comment_created': datetime.datetime(2021, 7, 9, 8, 3, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666762153, 'comment_body': 'You already use a reference to the certificate, it works fine without the struct : \r\nhttps://gist.github.com/jbtrystram/6e4645b4d22e598b6f768f4b0593d6fc', 'comment_created': datetime.datetime(2021, 7, 9, 8, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666765615, 'comment_body': 'If the user is familiar to openSSL then he will use openSSL directly to generate the certs. Drg aims to make things simpler to the user, so we should expect the user to think ""openssl is complicated stuff, thankfully drg takes care of this to me""', 'comment_created': datetime.datetime(2021, 7, 9, 8, 20, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666765951, 'comment_body': ""> we are not expecting that the user does a\r\n> `drg trust add > device-credentials.pem` right ?\r\n\r\nno we are not, still it's good to explain things. "", 'comment_created': datetime.datetime(2021, 7, 9, 8, 20, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666766577, 'comment_body': '@vedangj044 ^ this was supposed to be a review comment but instead i responded to an earlier thing. Please consider it !', 'comment_created': datetime.datetime(2021, 7, 9, 8, 21, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666805602, 'comment_body': 'Thanks!', 'comment_created': datetime.datetime(2021, 7, 9, 9, 20, 18, tzinfo=datetime.timezone.utc), 'commenter': 'vedangj044', 'type': 'User'}, {'comment_id': 666826578, 'comment_body': 'That const should be in trust.rs IMHO', 'comment_created': datetime.datetime(2021, 7, 9, 9, 52, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 666826929, 'comment_body': 'Okay ', 'comment_created': datetime.datetime(2021, 7, 9, 9, 53, 14, tzinfo=datetime.timezone.utc), 'commenter': 'vedangj044', 'type': 'User'}, {'comment_id': 667748341, 'comment_body': '```suggestion\r\n                let device_obj: Value = serde_json::from_str(&resp)?;\r\n```', 'comment_created': datetime.datetime(2021, 7, 12, 8, 55, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 667748664, 'comment_body': '```suggestion\r\n                let body_json: Value = serde_json::from_str(&body)?;\r\n```', 'comment_created': datetime.datetime(2021, 7, 12, 8, 55, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 667751483, 'comment_body': 'I would pass down an `Option` here and do default thing in `trust.rs` ', 'comment_created': datetime.datetime(2021, 7, 12, 8, 59, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 667753143, 'comment_body': 'Okay :+1: ', 'comment_created': datetime.datetime(2021, 7, 12, 9, 1, 22, tzinfo=datetime.timezone.utc), 'commenter': 'vedangj044', 'type': 'User'}, {'comment_id': 670218599, 'comment_body': 'Typo : `Common name`', 'comment_created': datetime.datetime(2021, 7, 15, 7, 47, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}]","[{'commit_sha': '72f0fe81084c1c8b28aaaf8976b0607cbc9d4079', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c1f26f45125b1bc5b6e6f19e2ee7d16fc55f5a7', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99130d992f40f264c2844ea63458749a9bf46a82', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9abac86becd5d501ddc3d6f190995036418e0f2', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8fad070b29e06e9707d62bd89535c0461d9689c', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5c9957df597e7eb456f02d3115458b85bba6770', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc53c9216498a1b3e3940284ad327586ba371738', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c581d994c0d3650b2c4e4ee797c8b03725a7691a', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58314c3180008049c2737067ca3efaff9214f084', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}]",Vedang Joshi,43697446,vedangj@cs.cmu.edu,User,,78,,0,33
691317449,Added --cert flag,"The flow looks like this

```
drg create app myapp
drg trust create --app myapp --key-output app.pem

drg create device d10 --app myappp --cert
drg trust add --app appmyapp --device d10 --ca-key app.pem
```",True,86,https://api.github.com/repos/drogue-iot/drg/pulls/86,https://github.com/drogue-iot/drg/pull/86,closed,35,26,4,2,2,2,0,0,[],2021-07-16 09:03:45+00:00,2021-07-19 13:40:48+00:00,275823.0,"3 days, 4:37:03","[{'comment_id': 671239859, 'comment_body': 'you can use variable shadowing instead of making the variable `mut` :\r\n ```suggestion\r\n                       let id = format!(""CN={}, O=Drogue IoT, OU={}"", id, app_id);\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 13, 7, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 672237024, 'comment_body': ""? I don't understand what's the point of this"", 'comment_created': datetime.datetime(2021, 7, 19, 12, 4, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}]","[{'commit_sha': 'a5179d2b7c3582c516f901ebb65c1eb2d28cfd57', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f96ec867e2af1096eae37a5a3f1db5bf8ffeacfd', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}]",Vedang Joshi,43697446,vedangj@cs.cmu.edu,User,,78,,0,33
694946893,Added ca key verification,"When we create device certificates, we first download the CA certificate from the application object, then use the private key provided by the user to sign the certificate. In this process, we didn't verify whether the private key provided was the correct one or not. 

In this PR using `x509-parser` crate we first verify that the public key in both the CA cert and private key should be the same, if not we throw a ""Wrong CA Key"" error.


",True,87,https://api.github.com/repos/drogue-iot/drg/pulls/87,https://github.com/drogue-iot/drg/pull/87,closed,32,1,3,2,1,8,0,0,[],2021-07-22 07:51:09+00:00,2021-07-26 07:11:09+00:00,343200.0,"3 days, 23:20:00","[{'comment_id': 675150792, 'comment_body': 'Matching on a boolean statement is a bit weird I think .. \r\n\r\n```suggestion\r\n    ca_public_key.eq(local_public_key)\r\n          .then(|| ()).ok_or(anyhow!(""Wrong CA key""))\r\n```\r\n\r\nhttps://doc.rust-lang.org/std/primitive.bool.html#method.then', 'comment_created': datetime.datetime(2021, 7, 22, 20, 46, 19, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 675156650, 'comment_body': ""You should generate the device certificate only once you're sure that every thing is OK. "", 'comment_created': datetime.datetime(2021, 7, 22, 20, 56, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 675159263, 'comment_body': 'So `ca_cert_perm` comes from the `app` object (pulled from drogue-cloud API) and you compare it to `ca_cert_fin` which was reconstructed from the `ca_cert_pem` + the private key the user passed as input. \r\nIf the key was not matching the cert, why `CertificateParams::from_ca_cert_pem(&ca_cert_pem, ca_key_content)` would not fail ? \r\nThanks in advance for the explanation :) ', 'comment_created': datetime.datetime(2021, 7, 22, 21, 0, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 675295987, 'comment_body': 'This looks concise. ', 'comment_created': datetime.datetime(2021, 7, 23, 4, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'vedangj044', 'type': 'User'}, {'comment_id': 675299475, 'comment_body': ""> If the key was not matching the cert, why CertificateParams::from_ca_cert_pem(&ca_cert_pem, ca_key_content) would not fail ?\r\n\r\nI agree with you, but there is no such validation in the `rcgen` crate. In the `rcgen` crate, it uses the certificate to get subj and issuer information. No public key validation is done.\r\nhttps://github.com/est31/rcgen/blob/master/src/lib.rs#L632\r\n\r\nIn community messages, rcgen guys want us to first use [verify_signature](https://docs.rs/x509-parser/0.9.2/x509_parser/certificate/struct.X509Certificate.html#method.verify_signature) before using `from_ca_cert_pem`\r\n\r\nBut in your case, we have to do many conversions just to create the right parameters to pass to `verify_signature` so it's okay to just validate the public key."", 'comment_created': datetime.datetime(2021, 7, 23, 4, 24, 59, tzinfo=datetime.timezone.utc), 'commenter': 'vedangj044', 'type': 'User'}, {'comment_id': 676329457, 'comment_body': 'Ok thanks ', 'comment_created': datetime.datetime(2021, 7, 26, 6, 40, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 676332067, 'comment_body': 'This error should be more helpful for the user. ""Invalid"" is more appropriate than ""Wrong"" in this context.', 'comment_created': datetime.datetime(2021, 7, 26, 6, 46, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 676338255, 'comment_body': ""It is a valid key but just not the correct one, so let's go with `Invalid CA key: trust anchor and private key mismatch`"", 'comment_created': datetime.datetime(2021, 7, 26, 6, 58, 16, tzinfo=datetime.timezone.utc), 'commenter': 'vedangj044', 'type': 'User'}]","[{'commit_sha': 'fe81194d2b05425dffbd7000f851066d48623ce3', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae5a5dc9436648013d830f16c3cab608ab3f5594', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}]",Vedang Joshi,43697446,vedangj@cs.cmu.edu,User,,78,,0,33
697544529,Added RSA key generation and algo parameter,"While creating trust anchors and device certificates this parameter helps specify a signature algorithm.
`drg trust add --device <device_name> --ca-key <key.pem> --algo ECDSA`

Users can also save a default algorithm choice to the context file, in the following manner.
`drg context set-default-algo ECDSA`

Currently, there are 3 possible values for `algo` parameter
- `ECDSA`
- `EdDSA`
- `RSA`

Initially `trust` commands look for specifying `algo` parameter, if it is absent current config file is searched for a default choice, if that is not present as well, `ECDSA` is used.
",True,89,https://api.github.com/repos/drogue-iot/drg/pulls/89,https://github.com/drogue-iot/drg/pull/89,closed,303,15,8,3,1,9,0,0,[],2021-07-27 05:21:04+00:00,2021-08-10 14:22:08+00:00,1242064.0,"14 days, 9:01:04","[{'comment_id': 678332104, 'comment_body': 'if the only différence is that one is optional and the other required then you could use only one, and `clone()` it to change the required state. \r\nSee my comment in the context subcommand', 'comment_created': datetime.datetime(2021, 7, 28, 14, 2, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 678333527, 'comment_body': '.arg(key_pair_algorithm.clone()\r\n\t\t.required(true))', 'comment_created': datetime.datetime(2021, 7, 28, 14, 4, 20, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 678336737, 'comment_body': 'Since you defined the `SignAlgo` enum, you could parse the value to a enum variant. It would be cleaner than handling a String all around :) ', 'comment_created': datetime.datetime(2021, 7, 28, 14, 7, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 681603930, 'comment_body': 'The problem with this is we have to specify `.long()` in one and not in another. But no issues I have made this change', 'comment_created': datetime.datetime(2021, 8, 3, 9, 42, 14, tzinfo=datetime.timezone.utc), 'commenter': 'vedangj044', 'type': 'User'}, {'comment_id': 683513492, 'comment_body': 'would it work with ""0.3.0"" ? (0.5.0 is not shipped in fedora)', 'comment_created': datetime.datetime(2021, 8, 5, 14, 35, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 683517708, 'comment_body': '```suggestion\r\nself.default_algo = Some( algo.as_ref().to_string())\r\n```', 'comment_created': datetime.datetime(2021, 8, 5, 14, 39, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 683630204, 'comment_body': 'No, but ""0.4.0"" works. Can we use that? I feel bad that I didn\'t notice it before and waited for 5.0 :)', 'comment_created': datetime.datetime(2021, 8, 5, 16, 56, 40, tzinfo=datetime.timezone.utc), 'commenter': 'vedangj044', 'type': 'User'}, {'comment_id': 683996089, 'comment_body': ""No don't worry, I'll submit an update for 0.5.0 :) "", 'comment_created': datetime.datetime(2021, 8, 6, 7, 2, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 683997949, 'comment_body': 'Okay, thanks!\r\n', 'comment_created': datetime.datetime(2021, 8, 6, 7, 5, 54, tzinfo=datetime.timezone.utc), 'commenter': 'vedangj044', 'type': 'User'}]","[{'commit_sha': 'aa157d91b34ca56b9e94c472e7356847645cfbc5', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fd18f9515f652f39ba2dbd8919392f43ac6ed4a', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7123bd7915008f802c69e5f61cf023331eb9b9bb', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}]",Vedang Joshi,43697446,vedangj@cs.cmu.edu,User,,78,,0,33
702043718,Added custom key support,"This pr added support for adding a custom private key generated using OpenSSL as a root key. This is still a draft. The reason of which is we need to manually specify the signature algorithm as well. 

To use custom keys
```
# RSA
openssl genrsa -out key.pem 2048

# ECDSA
openssl ecparam -name prime256v1 -genkey -noout -out key.pem

# Convert into pkcs8
openssl pkcs8 -topk8 -nocrypt -outform der -in key.pem > private.pk8

drg trust create --app app40  --key-input private.pk8
```",True,90,https://api.github.com/repos/drogue-iot/drg/pulls/90,https://github.com/drogue-iot/drg/pull/90,closed,131,32,7,3,0,9,0,0,[],2021-08-03 07:51:27+00:00,2021-08-11 12:27:32+00:00,707765.0,"8 days, 4:36:05","[{'comment_id': 682410697, 'comment_body': 'maybe this arg should conflicts with the keyout argument', 'comment_created': datetime.datetime(2021, 8, 4, 8, 38, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 682413006, 'comment_body': 'you can `map` the Option instead of matching only on Some\r\nhttps://doc.rust-lang.org/std/option/enum.Option.html#method.map', 'comment_created': datetime.datetime(2021, 8, 4, 8, 41, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 682414870, 'comment_body': 'is_some already returns a bool ...', 'comment_created': datetime.datetime(2021, 8, 4, 8, 44, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 682417316, 'comment_body': 'if you only need to do something on error you can use `map_err`', 'comment_created': datetime.datetime(2021, 8, 4, 8, 47, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 682418834, 'comment_body': 'read_from_der is calling `exit(1);` in case  of error, so why map the error ? You know it will exit anyway. Also, I think you can merge the two functions in one', 'comment_created': datetime.datetime(2021, 8, 4, 8, 49, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 682420127, 'comment_body': 'yes, actually this PR is more of rough work, because I wanted to ask about the `algo` thing. I would refractor it. ', 'comment_created': datetime.datetime(2021, 8, 4, 8, 50, 59, tzinfo=datetime.timezone.utc), 'commenter': 'vedangj044', 'type': 'User'}, {'comment_id': 686725049, 'comment_body': '```suggestion\r\n    if key_input.is_None() {\r\n```', 'comment_created': datetime.datetime(2021, 8, 11, 11, 3, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 686727743, 'comment_body': 'This leads to `value borrowed here after move` error', 'comment_created': datetime.datetime(2021, 8, 11, 11, 7, 50, tzinfo=datetime.timezone.utc), 'commenter': 'vedangj044', 'type': 'User'}, {'comment_id': 686781234, 'comment_body': 'Ha ok I see why, sorry i did not catch it earlier', 'comment_created': datetime.datetime(2021, 8, 11, 12, 27, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}]","[{'commit_sha': 'fb6fe886bdb05377638ec36e2628fac7a7f1ea87', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3160530dada09f2029f0407149fc3dd418cf9fdf', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4604de67c82f0694dc26ee4773d60dcce63f2cf7', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}]",Vedang Joshi,43697446,vedangj@cs.cmu.edu,User,,78,,0,33
706308344,Added test cases trust.rs,"This PR adds 3 test cases in the `trust.rs` file, which accounts for about 90% code coverage in trust.rs. The test cases are as follows:

`test_create_trust_anchor()`: Unit test for `create_trust_anchor()`. To pass this - the JSON response should be valid, the key should be written to a file, certificate should be a valid x509 cert.
 
`test_device_certificate`: Unit test for `create_device_certificate()`. To pass this - function should normally run and export certificate and key.

`test_key_certificate_mismatch`: `create_device_certificate()` is called but with a wrong CA key, it should terminate with an error.

#16 ",True,91,https://api.github.com/repos/drogue-iot/drg/pulls/91,https://github.com/drogue-iot/drg/pull/91,closed,87,0,3,1,0,0,0,0,[],2021-08-09 08:12:14+00:00,2021-08-10 14:28:40+00:00,108986.0,"1 day, 6:16:26",[],"[{'commit_sha': '2584af658199a8535183fa30b50e5519dbd0d870', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}]",Vedang Joshi,43697446,vedangj@cs.cmu.edu,User,,78,,0,33
651938348,Added trust anchor rfc,Added RFC for Trust Anchor feature in DRG.,True,9,https://api.github.com/repos/drogue-iot/rfcs/pulls/9,https://github.com/drogue-iot/rfcs/pull/9,closed,64,0,1,2,1,7,0,0,[],2021-05-25 07:01:41+00:00,2021-07-16 07:20:14+00:00,4493913.0,"52 days, 0:18:33","[{'comment_id': 638512170, 'comment_body': ""How about `drg trust create --app <app_name>` . I think it's easy to be confused on what you're actually creating vs. passing arguments on what you're going to trust."", 'comment_created': datetime.datetime(2021, 5, 25, 7, 7, 3, tzinfo=datetime.timezone.utc), 'commenter': 'lulf', 'type': 'User'}, {'comment_id': 638514563, 'comment_body': 'Right :+1: ', 'comment_created': datetime.datetime(2021, 5, 25, 7, 10, 54, tzinfo=datetime.timezone.utc), 'commenter': 'vedangj044', 'type': 'User'}, {'comment_id': 638750393, 'comment_body': '```suggestion\r\n- `--csr <csr_file>` - Users can use their own CSR.\r\n```', 'comment_created': datetime.datetime(2021, 5, 25, 12, 42, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 638753480, 'comment_body': '```suggestion\r\n`drg trust download device <device_name> --app <app_id> <file_name>`\r\n```\r\n\r\nwould be more explicit IMHO', 'comment_created': datetime.datetime(2021, 5, 25, 12, 46, 20, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 638753924, 'comment_body': '```suggestion\r\n`drg trust get app <app_name>` This command displays the list of all the thumbprints ( digest hash ) of all the root CAs.\r\n```\r\nto keep some consitency with other drg subcommands', 'comment_created': datetime.datetime(2021, 5, 25, 12, 47, 3, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 638755137, 'comment_body': '`$XDG_DATA_HOME` : https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html', 'comment_created': datetime.datetime(2021, 5, 25, 12, 48, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}, {'comment_id': 638758995, 'comment_body': 'This one is a pain to cross compile. Is there a pure rust crate that could do it ? Maybe look into `ring` and `webpki`\r\nhttps://github.com/briansmith/webpki', 'comment_created': datetime.datetime(2021, 5, 25, 12, 53, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jbtrystram', 'type': 'User'}]","[{'commit_sha': '6d85f66eccb667c69debe8e17476520646658557', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ab9abdf929d6e5358cd5515abbd67318711be0c', 'committer_username': 'vedangj044', 'committer_name': 'Vedang Joshi', 'committer_email': 'vedangj@cs.cmu.edu', 'commit_date': datetime.datetime(2018, 9, 29, 8, 56, 43, tzinfo=datetime.timezone.utc)}]",Vedang Joshi,43697446,vedangj@cs.cmu.edu,User,,78,,0,33

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
343774328,drg,drogue-iot/drg,Rust,5,11,5,9,312,23,7,2,"[{'id': 760056154, 'number': 103, 'closed': datetime.datetime(2021, 11, 8, 16, 1, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 18, 4, 36, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1855513.0, 'time_delta': '21 days, 11:25:13', 'additions': 238, 'deletions': 3, 'state': 'closed'}, {'id': 730673024, 'number': 99, 'closed': datetime.datetime(2021, 9, 10, 11, 13, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 9, 14, 55, 16, tzinfo=datetime.timezone.utc), 'time_taken': 73085.0, 'time_delta': '20:18:05', 'additions': 22, 'deletions': 20, 'state': 'closed'}, {'id': 706308344, 'number': 91, 'closed': datetime.datetime(2021, 8, 10, 14, 28, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 8, 12, 14, tzinfo=datetime.timezone.utc), 'time_taken': 108986.0, 'time_delta': '1 day, 6:16:26', 'additions': 87, 'deletions': 0, 'state': 'closed'}, {'id': 702043718, 'number': 90, 'closed': datetime.datetime(2021, 8, 11, 12, 27, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 3, 7, 51, 27, tzinfo=datetime.timezone.utc), 'time_taken': 707765.0, 'time_delta': '8 days, 4:36:05', 'additions': 131, 'deletions': 32, 'state': 'closed'}, {'id': 697544529, 'number': 89, 'closed': datetime.datetime(2021, 8, 10, 14, 22, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 5, 21, 4, tzinfo=datetime.timezone.utc), 'time_taken': 1242064.0, 'time_delta': '14 days, 9:01:04', 'additions': 303, 'deletions': 15, 'state': 'closed'}, {'id': 694975812, 'number': 88, 'closed': datetime.datetime(2021, 7, 26, 6, 58, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 22, 8, 37, 14, tzinfo=datetime.timezone.utc), 'time_taken': 339654.0, 'time_delta': '3 days, 22:20:54', 'additions': 6, 'deletions': 11, 'state': 'closed'}, {'id': 694946893, 'number': 87, 'closed': datetime.datetime(2021, 7, 26, 7, 11, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 22, 7, 51, 9, tzinfo=datetime.timezone.utc), 'time_taken': 343200.0, 'time_delta': '3 days, 23:20:00', 'additions': 32, 'deletions': 1, 'state': 'closed'}, {'id': 691317449, 'number': 86, 'closed': datetime.datetime(2021, 7, 19, 13, 40, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 9, 3, 45, tzinfo=datetime.timezone.utc), 'time_taken': 275823.0, 'time_delta': '3 days, 4:37:03', 'additions': 35, 'deletions': 26, 'state': 'closed'}, {'id': 687217920, 'number': 83, 'closed': datetime.datetime(2021, 7, 12, 7, 36, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 10, 18, 1, 15, tzinfo=datetime.timezone.utc), 'time_taken': 135334.0, 'time_delta': '1 day, 13:35:34', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 683408841, 'number': 81, 'closed': datetime.datetime(2021, 7, 16, 6, 0, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 6, 40, 5, tzinfo=datetime.timezone.utc), 'time_taken': 948009.0, 'time_delta': '10 days, 23:20:09', 'additions': 644, 'deletions': 3, 'state': 'closed'}, {'id': 625254456, 'number': 52, 'closed': datetime.datetime(2021, 4, 30, 7, 4, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 28, 13, 59, 19, tzinfo=datetime.timezone.utc), 'time_taken': 147912.0, 'time_delta': '1 day, 17:05:12', 'additions': 77, 'deletions': 18, 'state': 'closed'}, {'id': 624059710, 'number': 50, 'closed': datetime.datetime(2021, 5, 3, 8, 27, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 27, 7, 32, 36, tzinfo=datetime.timezone.utc), 'time_taken': 521716.0, 'time_delta': '6 days, 0:55:16', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 620047469, 'number': 47, 'closed': datetime.datetime(2021, 4, 22, 9, 34, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 21, 9, 48, 15, tzinfo=datetime.timezone.utc), 'time_taken': 85556.0, 'time_delta': '23:45:56', 'additions': 28, 'deletions': 0, 'state': 'closed'}, {'id': 617752620, 'number': 45, 'closed': datetime.datetime(2021, 4, 19, 10, 0, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 19, 7, 49, 8, tzinfo=datetime.timezone.utc), 'time_taken': 7871.0, 'time_delta': '2:11:11', 'additions': 58, 'deletions': 23, 'state': 'closed'}, {'id': 605391504, 'number': 28, 'closed': datetime.datetime(2021, 3, 31, 12, 27, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 31, 9, 31, 30, tzinfo=datetime.timezone.utc), 'time_taken': 10553.0, 'time_delta': '2:55:53', 'additions': 14, 'deletions': 6, 'state': 'closed'}, {'id': 603505414, 'number': 9, 'closed': datetime.datetime(2021, 3, 30, 14, 49, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 30, 8, 37, 5, tzinfo=datetime.timezone.utc), 'time_taken': 22366.0, 'time_delta': '6:12:46', 'additions': 99, 'deletions': 46, 'state': 'closed'}, {'id': 594410529, 'number': 4, 'closed': datetime.datetime(2021, 3, 18, 12, 32, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 17, 5, 18, 58, tzinfo=datetime.timezone.utc), 'time_taken': 112430.0, 'time_delta': '1 day, 7:13:50', 'additions': 246, 'deletions': 207, 'state': 'closed'}, {'id': 590759091, 'number': 2, 'closed': datetime.datetime(2021, 3, 14, 10, 53, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 11, 10, 43, 32, tzinfo=datetime.timezone.utc), 'time_taken': 259821.0, 'time_delta': '3 days, 0:10:21', 'additions': 108, 'deletions': 74, 'state': 'closed'}, {'id': 589350814, 'number': 1, 'closed': datetime.datetime(2021, 3, 10, 10, 8, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 10, 9, 44, 14, tzinfo=datetime.timezone.utc), 'time_taken': 1479.0, 'time_delta': '0:24:39', 'additions': 9, 'deletions': 7, 'state': 'closed'}]"
328989238,rfcs,drogue-iot/rfcs,,3,2,6,7,56,5,12,5,"[{'id': 736061805, 'number': 10, 'closed': datetime.datetime(2021, 11, 18, 13, 29, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 17, 5, 1, 1, tzinfo=datetime.timezone.utc), 'time_taken': 5387285.0, 'time_delta': '62 days, 8:28:05', 'additions': 59, 'deletions': 0, 'state': 'closed'}, {'id': 651938348, 'number': 9, 'closed': datetime.datetime(2021, 7, 16, 7, 20, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 25, 7, 1, 41, tzinfo=datetime.timezone.utc), 'time_taken': 4493913.0, 'time_delta': '52 days, 0:18:33', 'additions': 64, 'deletions': 0, 'state': 'closed'}]"
