pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1393386923,"settings_users: Migrate ""Manage user"" and ""Manage bot"" modal to full profile modal.","- Migrate Manage user to full profile modal.
- Migrate Manage bot to full profile modal.
- Disable the deactivate user button if the owner is the only user in the organization.
- Redirect edit pencil to manage user tab.

---------------
Fixes: #21806 

Czo: [Bot icon feedback](https://chat.zulip.org/#narrow/stream/137-feedback/topic/list.20of.20streams.20for.20another.20user)

------------------
**Screenshots and screen captures:**

<details>
<summary>Manage user:</summary>
<br>

![user_profile](https://github.com/zulip/zulip/assets/66828942/a5677019-c2d9-4c9e-a9d2-f16bd0867844)


</details>

<details>
<summary>Manage bot:</summary>
<br>

<img width=""547"" alt=""Screenshot 2023-07-20 at 9 45 51 PM"" src=""https://github.com/zulip/zulip/assets/66828942/e40674fd-36bb-4ecc-b750-b527563e8e41"">



</details>

<details>
<summary>Disabled button:</summary>
<br>


![deactivated_button](https://github.com/zulip/zulip/assets/66828942/327a256c-0dbe-4147-a89d-0c6dd18c94a8)



</details>

<details>
<summary>System bot:</summary>
<br>


<img width=""547"" alt=""Screenshot 2023-07-20 at 9 39 47 PM"" src=""https://github.com/zulip/zulip/assets/66828942/add05f56-d406-4a0c-9111-75757f79fa47"">




</details>

<details>
<summary>Edit Pencil:</summary>
<br>


![edit_pencil_to_manage_user](https://github.com/zulip/zulip/assets/66828942/ee343df6-8a10-4a30-a28a-1e527a2f56d1)




</details>

-----------------


<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26031,https://api.github.com/repos/zulip/zulip/pulls/26031,https://github.com/zulip/zulip/pull/26031,closed,283,121,13,15,19,33,2,0,"[{'name': 'size: XL'}, {'name': 'integration review'}]",2023-06-15 04:01:05+00:00,2023-09-11 17:39:00+00:00,7652275.0,"88 days, 13:37:55","[{'comment_id': 1264098817, 'comment_body': 'Let\'s double-check that this is okay for doing translations; most other uses of `defaultMessage` with interpolated strings have just the part that differs (""user"", ""bot"" in this case).', 'comment_created': datetime.datetime(2023, 7, 14, 19, 54, 17, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1264104117, 'comment_body': 'This seems like an awful lot of logic to have in a one-off click handler. That seems to be a pattern repeated throughout this file, but it might be worth considering whether this structure is best.', 'comment_created': datetime.datetime(2023, 7, 14, 20, 1, 11, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1264109244, 'comment_body': ""Yeah. Seeing this pattern all over again makes me even more suspicious. I wonder if there's not a way to push harder here and even better align the bot and user modals."", 'comment_created': datetime.datetime(2023, 7, 14, 20, 8, 56, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1264111947, 'comment_body': ""I'm interested in where `52vh` is coming from, much like the `60vh` value elsewhere in this PR. That should be documented even by a comment, but I would also be more comfortable seeing CSS information like this preserved in CSS files and accessed via a class."", 'comment_created': datetime.datetime(2023, 7, 14, 20, 10, 47, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1269696174, 'comment_body': 'Thanks for noticing, fixed it', 'comment_created': datetime.datetime(2023, 7, 20, 16, 20, 51, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1269697722, 'comment_body': 'I have given the explanation for this in the commit description, do let me know if you have any other thoughts or a better alternative to this', 'comment_created': datetime.datetime(2023, 7, 20, 16, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1269771330, 'comment_body': ""That's good, but there should be an explanation in the code here--if someone were to need to modify this in the future, don't make them hunt down a commit message :)"", 'comment_created': datetime.datetime(2023, 7, 20, 17, 36, 55, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1269976354, 'comment_body': ""Sure, that was just a draft with some changes. I wanted to get an early review, so I didn't finish the commits or the comments. I'll do so in the future :)"", 'comment_created': datetime.datetime(2023, 7, 20, 21, 17, 45, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1269977196, 'comment_body': 'I have explained the approach and everything in the commit description. Could you please review it once and let me know if you have a better alternative to structure this in a much better way?', 'comment_created': datetime.datetime(2023, 7, 20, 21, 19, 2, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1273779912, 'comment_body': 'Good comment here. Two things:\r\n\r\n1. You should probably put this one up by where you specify `height: 52vh`.\r\n2. You can just open the CSS comment on the first line with `/*, and then indent subsequent lines by three spaces, and then close the comment at the end of the last line after a space.', 'comment_created': datetime.datetime(2023, 7, 25, 16, 4, 10, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1273780762, 'comment_body': 'Is it necessary to use an `id` here? Would `class` not suffice?', 'comment_created': datetime.datetime(2023, 7, 25, 16, 4, 55, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1276733367, 'comment_body': 'Changed it.', 'comment_created': datetime.datetime(2023, 7, 27, 19, 25, 24, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1276735178, 'comment_body': 'Changed it, thanks for the suggestion ', 'comment_created': datetime.datetime(2023, 7, 27, 19, 27, 16, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1291440572, 'comment_body': 'Should these changes be in the later commit?\r\n\r\nIs the `cursor: pointer` here correct?', 'comment_created': datetime.datetime(2023, 8, 11, 14, 54, 41, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1292338085, 'comment_body': 'Changed the commit and `cursor: pointer` is required so that on hover the user should feel the pencil is clickable, do let me know if you want me to change it.', 'comment_created': datetime.datetime(2023, 8, 12, 15, 3, 38, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1296380557, 'comment_body': 'Is there a reason to change this to an ID instead of continuing to use a class?', 'comment_created': datetime.datetime(2023, 8, 16, 20, 13, 51, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1296382785, 'comment_body': 'actually the `user_profile_edit_button_icon` element was wrapped by the element having class `user_profile_edit_button` and we were using the parent element to set the CSS properties, but with new changes we have removed the parent element and now only the child element having id is left, so I replaced here the class with the child element id, if you want I can change the id to class.', 'comment_created': datetime.datetime(2023, 8, 16, 20, 16, 32, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1296410720, 'comment_body': 'Yeah, I think that would be the better route, especially since the element in question is just an icon (versus a bigger landmark kind of thing).', 'comment_created': datetime.datetime(2023, 8, 16, 20, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1297103107, 'comment_body': '@karlstolley Changed it, could you please review again, thanks :)', 'comment_created': datetime.datetime(2023, 8, 17, 11, 44, 19, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1320873381, 'comment_body': 'We should never do checks with `email` when we have a user ID; you want `people.is_my_user_id`', 'comment_created': datetime.datetime(2023, 9, 10, 22, 19, 19, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1320874066, 'comment_body': 'These functions seem to be duplicates of `dialog_widget.ts` with a few of the class names changed. I think it probably makes sense to define reusable functions in `loading.ts` that both can call. \r\n\r\nEDIT: Opened https://github.com/zulip/zulip/issues/26691 to track this as a follow-up.', 'comment_created': datetime.datetime(2023, 9, 10, 22, 24, 34, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1320874475, 'comment_body': ""This line seems to be lost in the migration. I think that's a bug?"", 'comment_created': datetime.datetime(2023, 9, 10, 22, 27, 15, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1320874826, 'comment_body': 'I think hiding the profile is probably the wrong feedback to give for a success -- it just doesn\'t feel nice and makes you reopen the widget to confirm your changes took effect. I think we might need to have a way to just show the successful save nicely, leaving the panel open.\r\n\r\nMight want to be combined with having the ""Save changes"" button be disabled when nothing is different yet.\r\n\r\nEDIT: Opened https://github.com/zulip/zulip/issues/26692 to track this as a follow-up.\r\n\r\n(This is not a regression -- the existing component also didn\'t give nice feedback).', 'comment_created': datetime.datetime(2023, 9, 10, 22, 30, 3, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1320875408, 'comment_body': ""Is there a reason you didn't do the hide/show operations here consistently in the `switch` statement below? That would be way easier to verify."", 'comment_created': datetime.datetime(2023, 9, 10, 22, 34, 41, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1320875496, 'comment_body': 'I would put `selector` in this name, to make clear that this is a string format selector, not some form of object.', 'comment_created': datetime.datetime(2023, 9, 10, 22, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1320875684, 'comment_body': 'I think this 3 should be ""manage-profile-tab"", right?', 'comment_created': datetime.datetime(2023, 9, 10, 22, 37, 33, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1320877933, 'comment_body': 'I feel like there has to be a cleaner solution than this commit for achieving its goals.', 'comment_created': datetime.datetime(2023, 9, 10, 22, 49, 22, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1320888857, 'comment_body': 'Not important since this gets removed later in the branch.', 'comment_created': datetime.datetime(2023, 9, 10, 23, 49, 8, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1320889328, 'comment_body': '``` diff\r\ndiff --git a/web/src/settings_users.js b/web/src/settings_users.js\r\nindex 5a7b795b8f..beab7abb09 100644\r\n--- a/web/src/settings_users.js\r\n+++ b/web/src/settings_users.js\r\n@@ -668,12 +668,12 @@ export function show_edit_user_info_modal(user_id, $container) {\r\n             .hide();\r\n     }\r\n \r\n-    const custom_profile_field_form = ""#edit-user-form .custom-profile-field-form"";\r\n-    $(custom_profile_field_form).empty();\r\n-    settings_account.append_custom_profile_fields(custom_profile_field_form, user_id);\r\n-    settings_account.initialize_custom_date_type_fields(custom_profile_field_form);\r\n+    const custom_profile_field_form_selector = ""#edit-user-form .custom-profile-field-form"";\r\n+    $(custom_profile_field_form_selector).empty();\r\n+    settings_account.append_custom_profile_fields(custom_profile_field_form_selector, user_id);\r\n+    settings_account.initialize_custom_date_type_fields(custom_profile_field_form_selector);\r\n     const fields_user_pills = settings_account.initialize_custom_user_type_fields(\r\n-        custom_profile_field_form,\r\n+        custom_profile_field_form_selector,\r\n         user_id,\r\n         true,\r\n         false,\r\n```', 'comment_created': datetime.datetime(2023, 9, 10, 23, 52, 15, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1320889623, 'comment_body': 'This seems to work, added it:\r\n``` diff\r\ncommit ef0f735472193fffdad9454baff83e3cb98d80c9 (HEAD -> main)\r\nAuthor: Tim Abbott <tabbott@zulip.com>\r\nDate:   Sun Sep 10 16:53:13 2023 -0700\r\n\r\n    user_profile: Centralize footer logic.\r\n\r\ndiff --git a/web/src/user_profile.js b/web/src/user_profile.js\r\nindex ef8441af2b..db4fcd7776 100644\r\n--- a/web/src/user_profile.js\r\n+++ b/web/src/user_profile.js\r\n@@ -158,7 +158,6 @@ function format_user_group_list_item(group) {\r\n }\r\n \r\n function render_user_stream_list(streams, user) {\r\n-    $(""#user-profile-modal .modal__footer"").hide();\r\n     streams.sort(compare_by_name);\r\n     const $container = $(""#user-profile-modal .user-stream-list"");\r\n     $container.empty();\r\n@@ -179,7 +178,6 @@ function render_user_stream_list(streams, user) {\r\n }\r\n \r\n function render_user_group_list(groups, user) {\r\n-    $(""#user-profile-modal .modal__footer"").hide();\r\n     groups.sort(compare_by_name);\r\n     const $container = $(""#user-profile-modal .user-group-list"");\r\n     $container.empty();\r\n@@ -206,7 +204,6 @@ function render_manage_profile_content(user) {\r\n     } else {\r\n         settings_users.show_edit_user_info_modal(user.user_id, $container);\r\n     }\r\n-    $(""#user-profile-modal .modal__footer"").show();\r\n }\r\n \r\n export function get_custom_profile_field_data(user, field, field_types) {\r\n@@ -363,13 +360,13 @@ export function show_user_profile(user, default_tab_key = ""profile-tab"") {\r\n         callback(_name, key) {\r\n             $("".tabcontent"").hide();\r\n             $(`#${CSS.escape(key)}`).show();\r\n+            $(""#user-profile-modal .modal__footer"").hide();\r\n             $(""#user-profile-modal .modal__body"").removeClass(""modal__body__manage_profile_height"");\r\n             $(""#user-profile-modal .manage-profile-tab-footer"").removeClass(\r\n                 ""modal__footer_wrapper"",\r\n             );\r\n             switch (key) {\r\n                 case ""profile-tab"":\r\n-                    $(""#user-profile-modal .modal__footer"").hide();\r\n                     initialize_user_type_fields(user);\r\n                     break;\r\n                 case ""user-profile-groups-tab"":\r\n@@ -382,6 +379,7 @@ export function show_user_profile(user, default_tab_key = ""profile-tab"") {\r\n                     render_user_stream_list(user_streams, user);\r\n                     break;\r\n                 case ""manage-profile-tab"":\r\n+                    $(""#user-profile-modal .modal__footer"").show();\r\n                     render_manage_profile_content(user);\r\n                     break;\r\n             }\r\n```', 'comment_created': datetime.datetime(2023, 9, 10, 23, 53, 59, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1320890075, 'comment_body': 'Verified the typeahead here was broken and adding this line back fixed it.', 'comment_created': datetime.datetime(2023, 9, 10, 23, 56, 40, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1320891691, 'comment_body': 'Changes this, and also rewrote the check for whether to show it to be more readable and include deactivated users; I tested and the modal seems to work fine for editing them (and in fact that\'s a useful feature at times):\r\n\r\n``` diff\r\ndiff --git a/web/src/user_profile.js b/web/src/user_profile.js\r\nindex 360c3bbf27..95fb4d3b0a 100644\r\n--- a/web/src/user_profile.js\r\n+++ b/web/src/user_profile.js\r\n@@ -292,10 +292,11 @@ export function show_user_profile(user, default_tab_key = ""profile-tab"") {\r\n         !user.is_system_bot &&\r\n         people.is_person_active(user.user_id);\r\n     const groups_of_user = user_groups.get_user_groups_of_user(user.user_id);\r\n+    // We currently have the main UI for editing your own profile in\r\n+    // settings, so can_manage_profile is artifically false for those.\r\n     const can_manage_profile =\r\n-        ((people.is_person_active(user.user_id) && page_params.is_admin) ||\r\n-            (user.is_bot && user.bot_owner_id && user.bot_owner_id === page_params.user_id)) &&\r\n-        user.is_system_bot !== true &&\r\n+        (people.can_admin_user(user) || page_params.is_admin) &&\r\n+        !user.is_system_bot &&\r\n         !people.is_my_user_id(user.user_id);\r\n     const args = {\r\n         user_id: user.user_id,\r\n```', 'comment_created': datetime.datetime(2023, 9, 11, 0, 5, 42, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1320891739, 'comment_body': 'Opened https://github.com/zulip/zulip/issues/26693 for some follow-ups for this.', 'comment_created': datetime.datetime(2023, 9, 11, 0, 6, 2, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': 'cc76d5a23d3449dc6475a6da8a57285d9293a68e', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28cdbbb0a0e3f323dbd1af664aa1c0af4b1690fe', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa768561aa8e766e27da215b7d268cf11f6a36bf', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a60f2def1f12dc80c6e583b188a62b0352fa207', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99074ab0a2de8185d8cc5531ac4c627da9e17225', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31a32c42e7279bc9a670ef6954cccc5e5d4f1f84', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be68bde8e4a4b9fc4b2e1631e08f16f36d8a979e', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11d24d01ae365cee9c7a897b824d54fc401c6ff3', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21e4062dbf6506ded114b6d90dd91ed86040f587', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b158e1993556182fceeffe86673beb152fde336e', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db506c3b5bef24de0ac0892f9d174e0489d854a5', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13c5e7659d2724591e5118705f1093cedf9dde81', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8111277928bef69fff847abc984d84167b79543', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6764a6da4891d8a9bef46298a461f44ea6010deb', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9fafb926a9ab527e28429d97e45ff6d399590bf', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}]",PALASH BADERIA,66828942,palash.baderia@outlook.com,User,,54,,55,43
1419822217,user_profile: Add subscribe widget to user profile.,"- [x] Add subscribe widget to user profile model.
- [x] Don't show the subscribe widget of other users to non-admin users.
- [x] Hide the subscribe widget for generic bots and deactivated users.

-------------------

Fixes: #18883 
CZO: [Topic](https://chat.zulip.org/#narrow/stream/101-design/topic/User.20profile.20popover.3A.20Subscribe.20widget.2E)

-----------
**Screenshots and screen captures:**

<details>
<summary>SS:</summary>

<img width=""522"" alt=""Screenshot 2023-09-09 at 1 39 22 PM"" src=""https://github.com/zulip/zulip/assets/66828942/2b05c5ea-d5e2-4182-bf39-8962fe517e0b"">


</details>

<details>
<summary>Overall DEMO:</summary>

![overall_demo](https://github.com/zulip/zulip/assets/66828942/fbb59712-017d-4844-af45-ba292cd36f67)



</details>

------------------

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26183,https://api.github.com/repos/zulip/zulip/pulls/26183,https://github.com/zulip/zulip/pull/26183,closed,163,20,7,6,13,26,4,0,"[{'name': 'area: channel settings'}, {'name': 'size: XL'}, {'name': 'area: popovers'}, {'name': 'integration review'}]",2023-07-04 15:10:19+00:00,2023-09-10 18:20:15+00:00,5886596.0,"68 days, 3:09:56","[{'comment_id': 1252207793, 'comment_body': ""If it's not too awkward, I recommend de-duplicating these two-liners into a function in `user_profile` called `maybe_update_user_profile_streams_list`."", 'comment_created': datetime.datetime(2023, 7, 4, 16, 19, 1, tzinfo=datetime.timezone.utc), 'commenter': 'showell', 'type': 'User'}, {'comment_id': 1252207937, 'comment_body': 'While this may reduce code duplication, I would prefer we had separate function for `get_subscribed_streams_for_user` and `get_unsubscribed_streams_for_user` for reading claring in code.', 'comment_created': datetime.datetime(2023, 7, 4, 16, 19, 14, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1252209320, 'comment_body': 'I am on path to remove `DropdownListWidget` from code. Once #26067 is merged. You can implement this using `tippy`.', 'comment_created': datetime.datetime(2023, 7, 4, 16, 20, 54, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1252210415, 'comment_body': 'I do plan to make a lot of abstraction in this code path. So, I am not sure it is the best idea for you to work on this right now.', 'comment_created': datetime.datetime(2023, 7, 4, 16, 21, 36, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1252213079, 'comment_body': 'Okay, then I will just make the other changes you suggested and will not change this to tippy for now ', 'comment_created': datetime.datetime(2023, 7, 4, 16, 25, 17, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1261799715, 'comment_body': '@amanagr since #26067 has been merged, should I continue working on this or do you still want to make some more changes?', 'comment_created': datetime.datetime(2023, 7, 12, 22, 55, 59, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1262017143, 'comment_body': 'There will be changes but I think you can implement this using tippy. ', 'comment_created': datetime.datetime(2023, 7, 13, 5, 49, 10, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1262875458, 'comment_body': ""We'll want to rework this to use the new `web/src/dropdown_widget` module; @amanagr is in the process of replacing all of them in the app as part of removing Bootstrap. Probably it makes sense to wait to do that rework until roughly next week, when he'll have migrated a few more of the existing one, since the API will improve when doing so, but you could also just try it and see if you run into any issues."", 'comment_created': datetime.datetime(2023, 7, 13, 17, 38, 39, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1262877041, 'comment_body': ""Let's call this `get_streams_for_user(user_ids)` and have it return an object with two keys `subscribed` and `can_subscribe`."", 'comment_created': datetime.datetime(2023, 7, 13, 17, 40, 15, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1262877726, 'comment_body': 'Oh you already covered this here: https://github.com/zulip/zulip/pull/26183/commits/04354524d506f339f6d2875e59970f9bc5e95374#r1262017143. OK.', 'comment_created': datetime.datetime(2023, 7, 13, 17, 40, 58, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1262879989, 'comment_body': ""Yeah, this isn't really a workable level of duplication. I'll post an idea for an interface that can be a prep PR."", 'comment_created': datetime.datetime(2023, 7, 13, 17, 43, 26, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1262884954, 'comment_body': 'So I think the code after `peer_data.bulk_remove_subscribers` in this helper should be moved to a `stream_events.process_subscriber_update(user_ids, stream_ids)`, which can also be called in the `peer_add` code path.\r\n\r\nYou can perhaps do that as a prep commit or mini prep PR, and then introduce a version of `overlays.is_user_profile_modal_open()` with an interface that returns the ID of the user whose profile modal is open, such that this commit would just extend `stream_events.process_subscriber_update` to check if the user ID for the modal is in the list  of `user_ids`, and if so, call your rerender function.\r\n\r\n(It might make sense to just do a prep PR for live update of that modal and then finish this with `dropdown_widget` on top of that)', 'comment_created': datetime.datetime(2023, 7, 13, 17, 47, 40, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1297699280, 'comment_body': ""I think it'd probably be worth inlining this logic into `subscriber_api.add_current_user_to_stream` function rather than duplicating it here -- if the `user_ids` list is `[people.my_current_user_id()`, then do this?"", 'comment_created': datetime.datetime(2023, 8, 17, 20, 18, 47, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1297699729, 'comment_body': ""(And then you wouldn't need this function, the caller could just call `subscriber_api.add_user_ids_to_stream`"", 'comment_created': datetime.datetime(2023, 8, 17, 20, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1297700418, 'comment_body': ""This should probably use sentence case; I'm not sure why this doesn't fail the capitalization linter."", 'comment_created': datetime.datetime(2023, 8, 17, 20, 20, 15, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1297700879, 'comment_body': ""Let's not add two new strings for these cases; do we even need an `error_message`, or could we just display the error the server sent?"", 'comment_created': datetime.datetime(2023, 8, 17, 20, 20, 52, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1297701003, 'comment_body': 'How did you pick these 1200s?', 'comment_created': datetime.datetime(2023, 8, 17, 20, 21, 3, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1297701406, 'comment_body': ""We've now removed the old widget, so you can migrate this PR."", 'comment_created': datetime.datetime(2023, 8, 17, 20, 21, 35, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1303443535, 'comment_body': 'We use 1200 for most of the alerts and banners in Zulip. Additionally, the ""remove subscription"" button also had a 1200s removal time. To maintain consistency with this pattern, I set the time to 1200. If you have anything else in your mind, do let me know.', 'comment_created': datetime.datetime(2023, 8, 23, 19, 15, 20, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1303443836, 'comment_body': 'Fixed, thanks for noticing', 'comment_created': datetime.datetime(2023, 8, 23, 19, 15, 40, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1303444007, 'comment_body': 'Sure, changed it', 'comment_created': datetime.datetime(2023, 8, 23, 19, 15, 51, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1303446347, 'comment_body': 'So if you use what the server sends then this is one of the cases I tested where in two window, I deactivated a user and then in the other I tried to subscribe that user to a stream, so for a general user the error shouldn\'t be like the below one (what the server has sent), instead we should give proper errors, that\'s why I added these, do let me know if you want me to make changes.\r\n\r\n\r\n<img width=""524"" alt=""Screenshot 2023-08-23 at 11 41 22 PM"" src=""https://github.com/zulip/zulip/assets/66828942/d4ccc226-cacb-4a5d-a349-eb8471401725"">\r\n\r\n', 'comment_created': datetime.datetime(2023, 8, 23, 19, 18, 31, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1308101047, 'comment_body': ""I agree that outcome is bad. I think the bug there is that `principal_to_user_profile` needs new error handling. Opened https://github.com/zulip/zulip/issues/26593 for the API bug there, but I think with those changes, we should just show the server error messages here; I think it's pretty unlikely for this code to fail in practice and it seems like a waste to ask translators to translate two additional strings for it."", 'comment_created': datetime.datetime(2023, 8, 29, 1, 24, 46, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1320071137, 'comment_body': ""Internationalization doesn't work that way -- you need the whole sentence in the string with a variable in it.\r\nhttps://zulip.readthedocs.io/en/latest/translating/internationalization.html\r\n\r\n(Different languages have different word orders)"", 'comment_created': datetime.datetime(2023, 9, 8, 16, 18, 10, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1320521139, 'comment_body': 'Thanks for pointing, fixed it.', 'comment_created': datetime.datetime(2023, 9, 9, 9, 5, 20, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1320837118, 'comment_body': 'This variable feels unnecessary, and is also badly named -- we have several local variables by the same name in the file.\r\n\r\nIt would not be crazy to have a `currently_active_user_id` variable instead of parsing it from the DOM every time, but I decided to go with the other approach since that\'s what we\'re already doing in other code paths. Here\'s the diff:\r\n\r\n``` diff\r\ndiff --git a/web/src/user_profile.js b/web/src/user_profile.js\r\nindex 5162684675..b58842bc91 100644\r\n--- a/web/src/user_profile.js\r\n+++ b/web/src/user_profile.js\r\n@@ -31,7 +31,6 @@ import * as util from ""./util"";\r\n \r\n let user_streams_list_widget;\r\n let user_profile_subscribe_widget;\r\n-let user_id;\r\n \r\n function compare_by_name(a, b) {\r\n     return util.strcmp(a.name, b.name);\r\n@@ -99,8 +98,9 @@ function change_state_of_subscribe_button(event, dropdown) {\r\n }\r\n \r\n export function get_user_unsub_streams() {\r\n+    const target_user_id = Number.parseInt($(""#user-profile-modal"").attr(""data-user-id""), 10);\r\n     return stream_data\r\n-        .get_streams_for_user(user_id)\r\n+        .get_streams_for_user(target_user_id)\r\n         .can_subscribe.filter((stream) => stream_data.can_subscribe_others(stream))\r\n         .map((stream) => ({\r\n             name: stream.name,\r\n@@ -250,7 +250,6 @@ function initialize_user_type_fields(user) {\r\n \r\n export function show_user_profile(user, default_tab_key = ""profile-tab"") {\r\n     popovers.hide_all();\r\n-    user_id = user.user_id;\r\n \r\n     const field_types = page_params.custom_profile_field_types;\r\n     const profile_data = page_params.custom_profile_fields\r\n@@ -372,6 +371,7 @@ export function register_click_handlers() {\r\n         e.preventDefault();\r\n         const stream_id = Number.parseInt(user_profile_subscribe_widget.value(), 10);\r\n         const sub = sub_store.get(stream_id);\r\n+        const target_user_id = Number.parseInt($(""#user-profile-modal"").attr(""data-user-id""), 10);\r\n         const $alert_box = $(""#user-profile-streams-tab .stream_list_info"");\r\n         function addition_success(data) {\r\n             if (Object.keys(data.subscribed).length > 0) {\r\n@@ -391,7 +391,12 @@ export function register_click_handlers() {\r\n         function addition_failure(xhr) {\r\n             ui_report.error("""", xhr, $alert_box, 1200);\r\n         }\r\n-        subscriber_api.add_user_ids_to_stream([user_id], sub, addition_success, addition_failure);\r\n+        subscriber_api.add_user_ids_to_stream(\r\n+            [target_user_id],\r\n+            sub,\r\n+            addition_success,\r\n+            addition_failure,\r\n+        );\r\n     });\r\n \r\n     $(""body"").on(""click"", ""#user-profile-modal .remove-subscription-button"", (e) => {\r\n```', 'comment_created': datetime.datetime(2023, 9, 10, 17, 50, 47, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': 'b33460d423cea853570cded0915f8dd2d7c65ad2', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00b9fdff7f1e74b945375f10243fd7e3551bd5c2', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b8bda2e9802c348b55c39858b5a5c7ad088e8a9', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff58b24c2457c2a2437f2454543652363a8730f5', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc0a90cfb2421dc1774575a3e8f23b5deb3574f9', 'committer_username': 'amanagr', 'committer_name': 'Aman Agrawal', 'committer_email': 'amanagr@zulip.com', 'commit_date': datetime.datetime(2017, 1, 14, 20, 19, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65ec3dfcef76d8498421b821ad5629094d61802c', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}]",PALASH BADERIA,66828942,palash.baderia@outlook.com,User,,54,,55,43
1454573820,user_profile: Render the streams list dynamically.,"- [x] Update the streams list of the user profile dynamically.
- This is a prep PR to continue to work further on #26183.
------------

Fixes: https://github.com/zulip/zulip/pull/26183#discussion_r1262884954

-----------

**Screenshots and screen captures:**

![user_profile_updates](https://github.com/zulip/zulip/assets/66828942/e8a8a27e-d8f7-4ae6-bcbe-a7ef8a9aca18)


<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26380,https://api.github.com/repos/zulip/zulip/pulls/26380,https://github.com/zulip/zulip/pull/26380,closed,104,41,7,5,10,22,2,0,"[{'name': 'size: XL'}, {'name': 'integration review'}]",2023-07-29 01:21:37+00:00,2023-08-22 18:56:42+00:00,2136905.0,"24 days, 17:35:05","[{'comment_id': 1278232124, 'comment_body': ""I don't see `can_subscribe` being used anywhere meaningfully. Do we need it?"", 'comment_created': datetime.datetime(2023, 7, 29, 4, 27, 6, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1278232158, 'comment_body': '`modalUserId` -> `user_id` in the other commits too.', 'comment_created': datetime.datetime(2023, 7, 29, 4, 27, 45, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1278287225, 'comment_body': 'So we need this to implement the subscribe widget, and so I changed this function as a prep commit for that.', 'comment_created': datetime.datetime(2023, 7, 29, 11, 24, 29, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1278604799, 'comment_body': 'Hey @amanagr , I am not sure what you mean over here, should I replace `modaUserId` with `user_id` or correct the commit description.', 'comment_created': datetime.datetime(2023, 7, 30, 19, 3, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1282046884, 'comment_body': '> , should I replace modaUserId with user_id \r\n\r\nYes.', 'comment_created': datetime.datetime(2023, 8, 2, 15, 9, 4, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1282047319, 'comment_body': 'Okay', 'comment_created': datetime.datetime(2023, 8, 2, 15, 9, 24, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1283493314, 'comment_body': 'Thanks for the suggestion, I have updated the PR, could you please review again, thanks :)', 'comment_created': datetime.datetime(2023, 8, 3, 17, 11, 30, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1287448762, 'comment_body': ""It'd be preferable to return `null` or `undefined` for this case, rather than 0, which is more in the number space of user IDs."", 'comment_created': datetime.datetime(2023, 8, 8, 17, 33, 18, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1287450212, 'comment_body': ""This feels a bit misleading of a name -- we haven't verified that the user can subscribe themselves to the stream -- just that they can see the stream's subscribers. It may happen to be equivalent in many cases, I guess? "", 'comment_created': datetime.datetime(2023, 8, 8, 17, 34, 50, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1287452748, 'comment_body': ""I think this is a weird abstraction boundary; can we have this function call `update_profile.update_user_profile_streams_list_for_user(user_id)` and have that function contain this the logic to return if there's nothing to do? It makes much more sense to me for the `user_profile` module to be the one responsible for deciding how to handle the event to updates its UI with that logic all in one place."", 'comment_created': datetime.datetime(2023, 8, 8, 17, 37, 28, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1287455006, 'comment_body': 'Hmm, I would have thought we\'d have this call be in the `server_events` code path, rather than here; see the ""new application feature"" tutorial for the multi-browser reasons why we generally don\'t want a click handler to do UI rendering updates like this.', 'comment_created': datetime.datetime(2023, 8, 8, 17, 39, 45, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1290686163, 'comment_body': 'Changed it', 'comment_created': datetime.datetime(2023, 8, 10, 21, 8, 43, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1290704182, 'comment_body': ""So, I reviewed some cases. If the user does not have permission to subscribe themselves to a certain stream, then that private stream doesn't appear in the can_subscribe_subs. In the end, the user can actually subscribe to all streams. However, if you believe there might be a more appropriate name for this, please let me know; I'll make the change accordingly."", 'comment_created': datetime.datetime(2023, 8, 10, 21, 32, 25, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1290704358, 'comment_body': 'Done, do let me know if you want me to make more change.', 'comment_created': datetime.datetime(2023, 8, 10, 21, 32, 40, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1290705927, 'comment_body': ""So I reviewed the code again and I realized we actually don't want this line over here since we are already handling the case of updating the stream_list when any server event happens so in case the user is unsubscribed then the `server_events_dispatch.js` file will update the stream_list so at last we don't want to do any change here and hence removed it."", 'comment_created': datetime.datetime(2023, 8, 10, 21, 34, 55, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1291923423, 'comment_body': 'Great, thanks!', 'comment_created': datetime.datetime(2023, 8, 12, 0, 39, 48, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1294026852, 'comment_body': 'I think the bug is you should be checking `else if (can_subscribe_others(sub)`.', 'comment_created': datetime.datetime(2023, 8, 14, 22, 27, 14, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1294035970, 'comment_body': '```diff --git a/web/src/stream_data.js b/web/src/stream_data.js\r\nindex f11d682b02..e91bbe2e1b 100644\r\n--- a/web/src/stream_data.js\r\n+++ b/web/src/stream_data.js\r\n@@ -369,7 +369,7 @@ export function get_streams_for_user(user_id) {\r\n         }\r\n         if (is_user_subscribed(sub.stream_id, user_id)) {\r\n             subscribed_subs.push(sub);\r\n-        } else {\r\n+        } else if (can_subscribe_others(sub)) {\r\n             can_subscribe_subs.push(sub);\r\n         }\r\n     }\r\ndiff --git a/web/tests/stream_data.test.js b/web/tests/stream_data.test.js\r\nindex 5b00cda434..ecb69203ac 100644\r\n--- a/web/tests/stream_data.test.js\r\n+++ b/web/tests/stream_data.test.js\r\n@@ -256,7 +256,12 @@ test(""get_streams_for_user"", () => {\r\n         denmark,\r\n         social,\r\n     ]);\r\n+    assert.deepEqual(stream_data.get_streams_for_user(test_user.user_id).can_subscribe, []);\r\n+\r\n+    // Verify can subscribe if we\'re an administrator.\r\n+    page_params.is_admin = true;\r\n     assert.deepEqual(stream_data.get_streams_for_user(test_user.user_id).can_subscribe, [world]);\r\n+    page_params.is_admin = false;\r\n });\r\n \r\n test(""renames"", () => {\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 22, 44, 53, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1294038462, 'comment_body': 'This needs more work -- I want this function to just call `user_profile.update_user_profile_streams_list_for_users(user_ids)`, and have all the logic that you currently have both here and `get_user_id_if_user_profile_modal_open` be in that one place, rather than split between three places in modules that are not responsible for the user profile modal.', 'comment_created': datetime.datetime(2023, 8, 14, 22, 48, 49, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1294038951, 'comment_body': 'I think this will also eliminate the need for the second commit entirely -- we can just check what modal is open directly inside `user_profile.js`.', 'comment_created': datetime.datetime(2023, 8, 14, 22, 49, 45, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1297095293, 'comment_body': 'Thanks for the suggestion, for the second commit I have replaced that with the implementation of the same function but inside the `user_profile.js`, and refactored the functions you mentioned above.', 'comment_created': datetime.datetime(2023, 8, 17, 11, 36, 13, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1297095615, 'comment_body': 'Thanks for the suggestion, I have made the suggested changes.', 'comment_created': datetime.datetime(2023, 8, 17, 11, 36, 34, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}]","[{'commit_sha': 'd310a12e5e6818abe37d56c5ca73685846fb6426', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e90b5592f6464449f25f2cd27a38185e931de55', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '940e667e837d084fc821427a270e9ad22534b96c', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acadfcdcf5e35079f370a6ba50eae872d7a6292c', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd819e030f09af3b57fec941e4dc1fd9d0ed667b', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}]",PALASH BADERIA,66828942,palash.baderia@outlook.com,User,,54,,55,43
1473046155,"search: Add title to the search bar when in ""sender:"" narrow & rewrite is_common_narrow.","- Display title to the search bar in `sender:` narrow:

    -   for me: Messages sent by you
    -   for any user: Messages sent by User

- Rewrite the `is_common_narrow`
---------------------

Fixes: #18690
Czo: [is_common_narrow topic](https://chat.zulip.org/#narrow/stream/6-frontend/topic/is_common_narrow.20rewrite)

--------------

**Screenshots and screen captures:**

<details>
<summary>Before:</summary>
<br>


<img width=""890"" alt=""Screenshot 2023-08-13 at 1 16 56 AM"" src=""https://github.com/zulip/zulip/assets/66828942/4a514dc3-cde2-4117-9c6b-1d80464f2173"">




</details>

<details>
<summary>After:</summary>
<br>


<img width=""890"" alt=""Screenshot 2023-08-13 at 1 12 08 AM"" src=""https://github.com/zulip/zulip/assets/66828942/27cbc540-2279-4157-975d-240f693c2d3a"">

-------------------

<img width=""890"" alt=""Screenshot 2023-08-13 at 1 12 14 AM"" src=""https://github.com/zulip/zulip/assets/66828942/baec1635-6724-47e8-9380-038d319f549e"">

</details>

-------------

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26483,https://api.github.com/repos/zulip/zulip/pulls/26483,https://github.com/zulip/zulip/pull/26483,closed,73,32,4,2,8,31,5,0,"[{'name': 'area: search'}, {'name': 'area: message feed (uncategorized)'}, {'name': 'priority: high'}, {'name': 'size: XL'}, {'name': 'integration review'}]",2023-08-12 19:47:18+00:00,2023-09-14 01:17:08+00:00,2784590.0,"32 days, 5:29:50","[{'comment_id': 1293430795, 'comment_body': ""I'm not sure about this function name. I lean towards something like `all_messages_of_conversation_included`. Maybe best to get consensus on this is the [#frontend discussion](https://chat.zulip.org/#narrow/stream/6-frontend/topic/is_common_narrow.20rewrite/near/1623803).\r\n\r\nAnd for the description, something like:\r\n> // Helper function that returns true for all filters that will include all the messages of a conversation.\r\n\r\nAlso, I think we'll want to use this helper function in `calc_can_mark_messages_read` as well. "", 'comment_created': datetime.datetime(2023, 8, 14, 13, 2, 27, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 1293436590, 'comment_body': 'This should be in `is_common_narrow` vs here in the helper function. That\'s because this filter doesn\'t always return all the messages in a conversation (unless they were all sent by the same person, which isn\'t something we can ever guarantee except in the one-on-one DM conversation with ourself :grin: ).\r\n\r\nI\'m also not sure why we\'re checking the validity of the sender operand here as we don\'t do that with any other term type above. If the sender is invalid, then we should be something similar to what we do with ""dm"" in this case.', 'comment_created': datetime.datetime(2023, 8, 14, 13, 8, 14, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 1293584470, 'comment_body': 'You\'ll want to look at where this is referenced in `web/scr/narrow.js` for how we handle ""dm"" (which is another common narrow view) when there\'s an invalid input. At the moment, these changes return the generic ""Search results"" in that case, which is what we do for ""dm-including"", which isn\'t a common narrow.', 'comment_created': datetime.datetime(2023, 8, 14, 14, 54, 58, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 1293588580, 'comment_body': ""Let's work to update this comment in the prep commit so that we don't list out all the filters here.\r\n\r\nAlso, the comment above `is_common_narrow` with the link to the paper document will become even more out of date with these changes, so we should figure out how we want to deal with that. We could either update that document or update the comment here to better describe what a common narrow is. Maybe worth bringing up in the CZO conversation about this refactor."", 'comment_created': datetime.datetime(2023, 8, 14, 14, 58, 9, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 1293598380, 'comment_body': 'I feel like writing a better comment here would be helpful with this refactor too.', 'comment_created': datetime.datetime(2023, 8, 14, 15, 4, 49, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 1298917750, 'comment_body': 'Updated your suggested name and comment, also started the discussion on the CZO : [Topic](https://chat.zulip.org/#narrow/stream/6-frontend/topic/is_common_narrow.20rewrite/near/1627628)', 'comment_created': datetime.datetime(2023, 8, 18, 23, 15, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1298920274, 'comment_body': 'Updated and thanks for the suggestion and insights.', 'comment_created': datetime.datetime(2023, 8, 18, 23, 16, 13, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1298920998, 'comment_body': 'updated the `narrow.js` similar to `dm`, thanks for the quick catch of the extra work', 'comment_created': datetime.datetime(2023, 8, 18, 23, 17, 21, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1298921401, 'comment_body': ""> Let's work to update this comment in the prep commit so that we don't list out all the filters here.\r\n\r\nI am not sure what you mean over here, could you please elaborate.\r\n\r\n> Also, the comment above is_common_narrow with the link to the paper document will become even more out of date with these changes, so we should figure out how we want to deal with that. We could either update that document or update the comment here to better describe what a common narrow is. Maybe worth bringing up in the CZO conversation about this refactor.\r\n\r\nStarted the discussion: [CZO](https://chat.zulip.org/#narrow/stream/6-frontend/topic/is_common_narrow.20rewrite/near/1627630)"", 'comment_created': datetime.datetime(2023, 8, 18, 23, 18, 48, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1298921550, 'comment_body': 'Updated the comment, do let me know if you want me to make anymore changes,', 'comment_created': datetime.datetime(2023, 8, 18, 23, 19, 23, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1305458501, 'comment_body': 'Before the refactor, both `is_common_narrow` and `calc_can_mark_messages_read` return true for this. I feel like there needs to be a clearer explanation of why it\'s not needed for `is_common_narrow`.\r\n\r\nThe ""All view"" mentioned here would definitely have all the messages in a conversation because it\'s all the messages that the user has access to, right?\r\n\r\nThere might be an argument where this is need in neither function, but I\'m not clear on the argument for why it\'s not in `is_common_narrow` when it has been since that function was introduced.', 'comment_created': datetime.datetime(2023, 8, 25, 9, 58, 11, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 1305462598, 'comment_body': ""This comment probably should remain in `calc_can_mark_messages_read`. I don't think we would ever want to standardize this helper function on `supports_collapsing_recipients` because that would totally break the logic for `is_common_narrow`."", 'comment_created': datetime.datetime(2023, 8, 25, 10, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 1305463921, 'comment_body': 'I think we should just remove this whole comment. If someone wants to know what the helper function does, then they can look at it directly. The current comment is inaccurate and hard to maintain.', 'comment_created': datetime.datetime(2023, 8, 25, 10, 3, 34, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 1305465193, 'comment_body': ""Again, let's just drop these comments completely. The code is pretty clear on what it's checking here and the comment above `is_common_narrow` explains what a common narrow is."", 'comment_created': datetime.datetime(2023, 8, 25, 10, 4, 58, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 1305467328, 'comment_body': ""Just reiterating that these comments aren't really needed, so let's not add a new one :)"", 'comment_created': datetime.datetime(2023, 8, 25, 10, 7, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 1305473188, 'comment_body': 'What happens here if the input is an invalid user? I see a bunch of blueslip warnings in the console when I test this in the dev environment.', 'comment_created': datetime.datetime(2023, 8, 25, 10, 13, 18, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 1306556264, 'comment_body': ""So We actually don't need the All view filter check for `is_common_narrow`, because the all view filter is actually the All messages narrow and for that the filter is `undefined`, thus there is no need to check for that in `is_common_narrow` because even if we do for all the cases where we use `is_common_narrow` function to check the first condition of the check is always whether the filter exists or not and it will fail and that point, now comes then how the special title will be implemented so we already take care of this inside the `narrrow.js` and `message_view_header.js` with two if cases.\r\n\r\nI have also checked manually each case just to see if there is any difference when we add this or remove and both times it was the same.\r\n\r\nwe need this inside `calc_can_mark_messages_read`, because the sole purpose of this function is to check whether to mark the messages as read or not so we actually want to mark messages as read in the all messages  narrow."", 'comment_created': datetime.datetime(2023, 8, 26, 19, 23, 29, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1306560160, 'comment_body': 'Changed it.', 'comment_created': datetime.datetime(2023, 8, 26, 20, 3, 43, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1306560194, 'comment_body': 'Got it, removed it thanks for the suggestion', 'comment_created': datetime.datetime(2023, 8, 26, 20, 3, 59, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1306560217, 'comment_body': 'Removed them.', 'comment_created': datetime.datetime(2023, 8, 26, 20, 4, 10, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1306561038, 'comment_body': 'So the behaviour of this and the `dm` filter are both the same If we type invalid user then it shows, `This user does not exist!`, do you want me to make any changes ?\r\n\r\n\r\n<img width=""767"" alt=""Screenshot 2023-08-27 at 1 42 00 AM"" src=""https://github.com/zulip/zulip/assets/66828942/d23ca2e8-a120-4872-ab66-6bf2349b4969"">\r\n', 'comment_created': datetime.datetime(2023, 8, 26, 20, 12, 39, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1307417876, 'comment_body': ""The warnings I was seeing are from the `dm` view with an unknown email/user, so this isn't an issue for this PR."", 'comment_created': datetime.datetime(2023, 8, 28, 13, 20, 46, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 1307486458, 'comment_body': 'Okay. I see that you\'ve worked on explaining this in the first commit message. But that commit message is very difficult to read and understand as it is. I suggest rewording it for clarity and simplicity.\r\n\r\nHere\'s a go at a revision from me:\r\n\r\n```console\r\nfilter: Create helper function that checks basic filter terms.\r\n\r\nCurrently, `is_common_narrow` relies on `calc_can_mark_messages_read`\r\nto check a number of filters that are ""common narrows"" (which means\r\nthey have a special message header title and different behavior when\r\nexiting a search view).\r\n\r\nCreates a helper function, `all_messages_of_conversation_included`,\r\nthat is used in both the above functions.\r\n\r\nThe check for an empty array of term types is unnecessary for\r\n`is_common_narrow` because the ""All messages"" view has an undefined\r\nfilter and the ""in-home"" term type used in the ""zhome"" message list\r\nis covered. So that empty array check is not moved to the helper\r\nfunction, and instead stays only in `calc_can_mark_messages_read`.\r\n\r\nThe helper function checks for a single term type (except in the case\r\nof topic, which is checked in combination with stream) that will return\r\nall the messages of a conversation.\r\n```', 'comment_created': datetime.datetime(2023, 8, 28, 14, 15, 51, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 1307499646, 'comment_body': 'Done, thanks for the effort :)', 'comment_created': datetime.datetime(2023, 8, 28, 14, 25, 38, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1314845892, 'comment_body': 'Porbably worth a comment here since this is the one non-single term filter we check in this function.\r\n\r\nNote that `[""topic""]` is not guaranteed to return all messages in the conversation because it will be limited by the user\'s message history.', 'comment_created': datetime.datetime(2023, 9, 4, 11, 49, 11, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 1314848779, 'comment_body': ""This comment is inaccurate as there are other filters would return all messages of a conversation. I think the function name is clear enough that we can probably don't need a comment here."", 'comment_created': datetime.datetime(2023, 9, 4, 11, 52, 19, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 1314851143, 'comment_body': 'Just a nit, since we\'re cleaning up this function, why don\'t we format these checks the same as the other ones in this function ...\r\n\r\n```js\r\n        if (_.isEqual(term_types, [""in-home""])) {\r\n            return true;\r\n        }\r\n\r\n        if (_.isEqual(term_types, [""in-all""])) {\r\n            return true;\r\n        }\r\n```', 'comment_created': datetime.datetime(2023, 9, 4, 11, 54, 48, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 1314994229, 'comment_body': 'Sure, added a comment, Do let me know if you want to change something else.', 'comment_created': datetime.datetime(2023, 9, 4, 14, 10, 6, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1314995162, 'comment_body': 'Sure, thanks for suggesting', 'comment_created': datetime.datetime(2023, 9, 4, 14, 11, 5, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1315115408, 'comment_body': 'Updates look good to me.', 'comment_created': datetime.datetime(2023, 9, 4, 16, 44, 54, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 1325207278, 'comment_body': 'This comment was just ""All view"", which was unclear; fixed it for merging.', 'comment_created': datetime.datetime(2023, 9, 14, 0, 36, 57, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': 'c0b8bcd376450dd70d4045ea292a46f6bf2d472b', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9cd835bfa6bf82532356d488e61e1a3525ee84d', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}]",PALASH BADERIA,66828942,palash.baderia@outlook.com,User,,54,,55,43
1371426392,upload_banner: Add a cancel button.,"-  Add a cancel button to the upload banner, replacing the previous close icon. Now, the cancel button is used to cancel the upload process, while the close icon is used to remove the upload banner without interrupting the upload

- To maintain consistency with other banners, the cancel button's dimensions and color have been adjusted to match the style of other buttons present in different banners.

--------------------------------

Fixes: #21156
CZO: [Thread](https://chat.zulip.org/#narrow/stream/137-feedback/topic/disable.20send.20while.20uploading)

---------------------------------

**Screenshots and screen captures:**

<details>
<summary>Demo:</summary>
<br>

![demo](https://github.com/zulip/zulip/assets/66828942/a2b16174-baf8-441a-8555-9dccf7d0d9cd)


</details>

<details>
<summary>New Banner:</summary>
<br>

![Screenshot from 2023-05-31 08-08-12](https://github.com/zulip/zulip/assets/66828942/a7c5415b-9b7c-4acc-a420-7cf622210f26)

</details>

<details>
<summary>Cancel Button:</summary>
<br>

![Screenshot from 2023-05-31 08-08-18](https://github.com/zulip/zulip/assets/66828942/1c331bf5-cdbf-4274-9a03-718c893ecc4c)


</details>

<details>
<summary>View Port changes:</summary>

- Full Screen:
<br>

![Screenshot from 2023-05-31 08-22-06](https://github.com/zulip/zulip/assets/66828942/cc1b3358-0f8a-4d39-8646-999c80b29ea2)

- Small screen:
<br>

![Screenshot from 2023-05-31 08-21-38](https://github.com/zulip/zulip/assets/66828942/17af7c09-4c60-4b66-9ea5-956c46295e77)

- Demo:
<br>


![view port ](https://github.com/zulip/zulip/assets/66828942/e35c6599-6c65-4dc8-8972-951f6be05521)


</details>

----------------------------------

<details>
<summary>Self-review checklist</summary>

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25848,https://api.github.com/repos/zulip/zulip/pulls/25848,https://github.com/zulip/zulip/pull/25848,closed,59,11,5,2,13,15,3,0,"[{'name': 'area: compose (misc)'}, {'name': 'size: L'}, {'name': 'integration review'}]",2023-05-31 04:02:02+00:00,2023-07-06 23:11:09+00:00,3179347.0,"36 days, 19:09:07","[{'comment_id': 1211076350, 'comment_body': ""Looking at these CSS changes, I don't believe these are at all necessary. If you look at a couple lines above, you'll find that the compose banners are styled based on the type of banner they are. (Alert, info, warning). One thing you'll notice is that the compose_banner_action_button for .info is missing, hence the missing style and color."", 'comment_created': datetime.datetime(2023, 5, 31, 4, 33, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Joelute', 'type': 'User'}, {'comment_id': 1211077745, 'comment_body': 'This looks wrong, please take a look at other compose banners.', 'comment_created': datetime.datetime(2023, 5, 31, 4, 36, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Joelute', 'type': 'User'}, {'comment_id': 1212566789, 'comment_body': 'Ah, I just noticed the class. Thanks for the heads-up. I have made the changes.', 'comment_created': datetime.datetime(2023, 6, 1, 4, 48, 35, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1212566904, 'comment_body': 'Fixed this.', 'comment_created': datetime.datetime(2023, 6, 1, 4, 48, 46, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1212757341, 'comment_body': 'I think here also `upload_banner_cancel_button` name would be less confusing.', 'comment_created': datetime.datetime(2023, 6, 1, 8, 3, 2, tzinfo=datetime.timezone.utc), 'commenter': 'brijsiyag', 'type': 'User'}, {'comment_id': 1213778502, 'comment_body': 'Changed it, @brijsiyag could you please review again, thanks :)', 'comment_created': datetime.datetime(2023, 6, 1, 23, 39, 35, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1225864734, 'comment_body': 'What are we doing about tests for `compose_banner_close_button` here, I can see only tests for `upload_banner_cancel_button`?', 'comment_created': datetime.datetime(2023, 6, 11, 16, 46, 49, tzinfo=datetime.timezone.utc), 'commenter': 'yogesh-sirsat', 'type': 'User'}, {'comment_id': 1230521004, 'comment_body': 'Added the tests for `upload_banner_close_button` also @yogesh-sirsat could you please review the PR, thanks :)', 'comment_created': datetime.datetime(2023, 6, 15, 6, 53, 36, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1234329207, 'comment_body': ""I still don't see the tests for `upload_banner_close_button`, can see only for `upload_banner_cancel_button`\r\n\r\nI have reviewed the PR and looks fine except for this above tests"", 'comment_created': datetime.datetime(2023, 6, 19, 18, 9, 28, tzinfo=datetime.timezone.utc), 'commenter': 'yogesh-sirsat', 'type': 'User'}, {'comment_id': 1235729202, 'comment_body': ""@yogesh-sirsat  , I have replaced the name 'upload_banner_close_button' with 'upload_banner_hide_button' as it seems closer to the actual functionality of the icon, and these are the tests for it. Furthermore, I have updated the commit description accordingly. Could you please review the PR? Thanks :)"", 'comment_created': datetime.datetime(2023, 6, 20, 19, 22, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1239031736, 'comment_body': ""It's confusing when we rename things with other changes, that's why we mostly do rename things work in separate commits, I'll suggest the same here too."", 'comment_created': datetime.datetime(2023, 6, 22, 21, 6, 53, tzinfo=datetime.timezone.utc), 'commenter': 'yogesh-sirsat', 'type': 'User'}, {'comment_id': 1239117235, 'comment_body': '@yogesh-sirsat created a separate commit for the rename, could you please review the PR, thanks :)', 'comment_created': datetime.datetime(2023, 6, 22, 23, 16, 4, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1252492857, 'comment_body': 'Can we use a variable  that checks if this is a banner which tracks uploading a file? I can imagine `is_banner_info` being used for a different banner in the future.', 'comment_created': datetime.datetime(2023, 7, 5, 3, 17, 27, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1254750050, 'comment_body': ""@amanagr , I have updated the code, but I feel like I didn't get your point clearly, could you please verify once if this is what you wanted or something else?"", 'comment_created': datetime.datetime(2023, 7, 6, 17, 51, 4, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1254890669, 'comment_body': 'Made a slight variable name change and how it should be procssed.', 'comment_created': datetime.datetime(2023, 7, 6, 20, 32, 50, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}]","[{'commit_sha': 'f09c4143c50a2c3f24a2f139105f331e28519b82', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9db2100bcb1805af71a02b7726e7247451de6ae', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}]",PALASH BADERIA,66828942,palash.baderia@outlook.com,User,,54,,55,43
1377487566,message_feed: Improve edited/moved tooltip.,"- [x] Change the text to:
- First line: Last {moved/edited} [date/time]. [note: no parens around date, don't capitalize date unless required by rules of English, i.e., ""today"", not ""Today""]
- Second line, shown only if edit history is enabled in the organization: Click to view edit history.

---

Fixes: #23075
----------------------

**Screenshots and screen captures:**

<details>
<summary>Before:</summary>
<br>


![Screenshot from 2023-06-04 07-59-56](https://github.com/zulip/zulip/assets/66828942/2c178eba-1851-40fe-8aa1-ee266e11e983)

<br>

![Screenshot from 2023-06-04 08-00-05](https://github.com/zulip/zulip/assets/66828942/ea0ba0f8-77a1-443e-b334-76b358b09b3d)

</details>

<details>
<summary>After:</summary>
<br>

![Screenshot from 2023-06-04 07-58-02](https://github.com/zulip/zulip/assets/66828942/fe89f587-ceb6-411b-9606-f69a21722a84)

<br>

![Screenshot from 2023-06-04 07-58-15](https://github.com/zulip/zulip/assets/66828942/ad7feb4e-4172-4dc8-afd1-2e46f1e0c932)

</details>

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [ ] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x]  Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25883,https://api.github.com/repos/zulip/zulip/pulls/25883,https://github.com/zulip/zulip/pull/25883,closed,49,4,4,1,15,16,4,0,"[{'name': 'priority: high'}, {'name': 'size: L'}, {'name': 'area: message feed (UI)'}, {'name': 'integration review'}]",2023-06-04 02:32:34+00:00,2023-07-12 00:33:06+00:00,3276032.0,"37 days, 22:00:32","[{'comment_id': 1216557622, 'comment_body': ""The tippy tooltip is here already, than we take it in tippy's onShow function and pass it again to tippy, Can we just remove it from here and calculate only in tippy ?\r\nI am not aware of how much work it will take. If there is not a cleaner approach to do this, I'm also okay with this approach."", 'comment_created': datetime.datetime(2023, 6, 4, 11, 3, 33, tzinfo=datetime.timezone.utc), 'commenter': 'brijsiyag', 'type': 'User'}, {'comment_id': 1216560889, 'comment_body': 'We can pass `realm_allow_edit_history` directly here in `edited_notice.hbs`, than there will be no need of `message_edit_notice.hbs` file and changes in the `tippy.js`.', 'comment_created': datetime.datetime(2023, 6, 4, 11, 6, 44, tzinfo=datetime.timezone.utc), 'commenter': 'brijsiyag', 'type': 'User'}, {'comment_id': 1222425322, 'comment_body': 'Hey @brijsiyag , I have made the necessary changes. Could you please review it again? Thanks!', 'comment_created': datetime.datetime(2023, 6, 8, 4, 3, 22, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1223001155, 'comment_body': ""Ooh, I just dug deep, and it appears that we are not importing edited_notice in any js/ts files, thus what I proposed would use variable drilling from the 4-5 upper level. and I think we don't want that.\r\nThanks @palashb01"", 'comment_created': datetime.datetime(2023, 6, 8, 12, 55, 24, tzinfo=datetime.timezone.utc), 'commenter': 'brijsiyag', 'type': 'User'}, {'comment_id': 1223002529, 'comment_body': ""Let's wait for mentor/maintainer to look into this."", 'comment_created': datetime.datetime(2023, 6, 8, 12, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'brijsiyag', 'type': 'User'}, {'comment_id': 1248111760, 'comment_body': ""Even I'm not sure about it."", 'comment_created': datetime.datetime(2023, 6, 30, 17, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'yogesh-sirsat', 'type': 'User'}, {'comment_id': 1248112261, 'comment_body': 'For now all other looks good to me.', 'comment_created': datetime.datetime(2023, 6, 30, 17, 25, 38, tzinfo=datetime.timezone.utc), 'commenter': 'yogesh-sirsat', 'type': 'User'}, {'comment_id': 1251231957, 'comment_body': ""Rather than `second_line`, maybe go with `hint_line_str` to parallel `edited_notice_str`, or something--it's just a good habit not to enumerate things in variables, so that future changes don't run into `third_line` or `fortieth_line` or something like that :)"", 'comment_created': datetime.datetime(2023, 7, 3, 19, 52, 9, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1251247348, 'comment_body': 'Is the `[""Today"", ""Yesterday""]` array going to work with internationalization and other language strings? A quick check against German in development suggests it\'s not: ""Last edited Heute um 2:47PM Uhr"" (and while German does capitalize nouns, _heute_ is an adverb, and therefore would not be capitalized).\r\n\r\nPerhaps what you need to do is try and match the string against the presence of a digit? Something like `if (!date.match(/\\d/)) {`, where [`.match()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match) will return `null` if there\'s no digit. In that case, it might possibly be safe to assume is an adverb like ""today"", ""heute"", ""hoy"" (Spanish), etc.', 'comment_created': datetime.datetime(2023, 7, 3, 20, 8, 15, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1254702729, 'comment_body': 'changed it', 'comment_created': datetime.datetime(2023, 7, 6, 17, 1, 52, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1254704573, 'comment_body': 'Thanks a lot for catching this bug. I didn\'t realize that the date I was obtaining was already internationalized in a different language, so ""today"" and ""tomorrow"" wouldn\'t work. thanks a lot for your solution. I have updated the code with the regex, and now it is working as expected regardless of the language.', 'comment_created': datetime.datetime(2023, 7, 6, 17, 3, 58, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1255970922, 'comment_body': ""Cool. Let's have you add a comment here explaining what that if condition is checking for, and why. It would also be good for someone, maybe @amanagr, to check this logic and make sure there aren't any edge cases being overlooked here."", 'comment_created': datetime.datetime(2023, 7, 7, 15, 5, 43, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1257135651, 'comment_body': 'Added the comment ', 'comment_created': datetime.datetime(2023, 7, 8, 7, 45, 57, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1257432228, 'comment_body': 'LGTM', 'comment_created': datetime.datetime(2023, 7, 9, 7, 47, 56, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1257432304, 'comment_body': 'Is it possible to use a template for this?', 'comment_created': datetime.datetime(2023, 7, 9, 7, 48, 21, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1258512809, 'comment_body': '@amanagr I have updated the PR, could you please review the PR, thanks :)', 'comment_created': datetime.datetime(2023, 7, 10, 16, 20, 14, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}]","[{'commit_sha': '1b21ea1fd77f30e015273d4aefe5770458ddf4a6', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}]",PALASH BADERIA,66828942,palash.baderia@outlook.com,User,,54,,55,43
1431671481,message_feed: Remove the view edit history option from the three-dot menu & add shortcut.,"- [x] Remove ""View edit history"" from the three-dot menu.
- [x] Update https://zulip.com/help/view-a-messages-edit-history accordingly
- [x] Add `Shift+H` as a keyboard shortcut to open the message edit history dialog.

--------------

Fixes: #23077

-------------

**Screenshots and screen captures:**

<details>
<summary>Before:</summary>
<br>

<img width=""243"" alt=""Screenshot 2023-07-12 at 10 37 58 PM"" src=""https://github.com/zulip/zulip/assets/66828942/de3e786d-08f1-420a-a4a4-49acf4a68a81"">

<br>

<img width=""779"" alt=""Screenshot 2023-07-12 at 10 37 34 PM"" src=""https://github.com/zulip/zulip/assets/66828942/48c8658a-fb70-4136-81dc-4e6b06c4648b"">


</details>

<details>
<summary>After:</summary>
<br>

<img width=""249"" alt=""Screenshot 2023-07-12 at 10 27 45 PM"" src=""https://github.com/zulip/zulip/assets/66828942/2a6ad194-df72-482d-9990-becd8c9b74db"">

<br>

<img width=""743"" alt=""Screenshot 2023-08-14 at 1 52 38 AM"" src=""https://github.com/zulip/zulip/assets/66828942/8b443d7f-c48c-4ece-8558-ac5441a37fee"">



</details>

<details>
<summary>Keyboard Shortcuts dialog:</summary>
<br>

<img width=""547"" alt=""Screenshot 2023-07-28 at 5 35 05 AM"" src=""https://github.com/zulip/zulip/assets/66828942/33578755-c601-4ffa-a6f0-beaaef6a291c"">



</details>


---------------

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26245,https://api.github.com/repos/zulip/zulip/pulls/26245,https://github.com/zulip/zulip/pull/26245,closed,24,48,7,3,12,18,6,0,"[{'name': 'priority: high'}, {'name': 'size: L'}, {'name': 'area: popovers'}, {'name': 'area: message feed (UI)'}, {'name': 'buddy review'}, {'name': 'maintainer review'}]",2023-07-12 17:12:36+00:00,2023-08-24 23:28:06+00:00,3737730.0,"43 days, 6:15:30","[{'comment_id': 1264247525, 'comment_body': 'I think we can make this more concise, how about:\r\n\r\n```suggestion\r\n    You will only see the **EDITED** or **MOVED** label\r\n    if the message has been moved or edited, and\r\n```', 'comment_created': datetime.datetime(2023, 7, 14, 23, 44, 34, tzinfo=datetime.timezone.utc), 'commenter': 'drrosa', 'type': 'User'}, {'comment_id': 1264252724, 'comment_body': ""Since this PR removes the other subheading, let's remove `### Via the main message feed` too, and make the instruction more explicit:\r\n\r\n```suggestion\r\n1. Click on the message's **EDITED** or **MOVED** label shown next to the user's name in the message feed.\r\n```"", 'comment_created': datetime.datetime(2023, 7, 15, 0, 7, 7, tzinfo=datetime.timezone.utc), 'commenter': 'drrosa', 'type': 'User'}, {'comment_id': 1265130200, 'comment_body': 'Sure, changed it.', 'comment_created': datetime.datetime(2023, 7, 17, 9, 59, 33, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1265130364, 'comment_body': 'Sounds good, made the change :)', 'comment_created': datetime.datetime(2023, 7, 17, 9, 59, 42, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1266025517, 'comment_body': ""@palashb01  (for future reference, it's helpful for the reviewer if you update the screenshots too)"", 'comment_created': datetime.datetime(2023, 7, 18, 0, 2, 1, tzinfo=datetime.timezone.utc), 'commenter': 'drrosa', 'type': 'User'}, {'comment_id': 1272676112, 'comment_body': 'I think this change is wrong -- my understanding is you\'ll see ""EDITED"" for messages that were either moved or edited without message edit history enabled, but you won\'t be able to click it to see edit history. Please test the behavior for both edited and moved messages and update this text.', 'comment_created': datetime.datetime(2023, 7, 24, 19, 39, 56, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1272676501, 'comment_body': 'This is not correct about the placement if the user sent two messages in a row.', 'comment_created': datetime.datetime(2023, 7, 24, 19, 40, 20, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1275311062, 'comment_body': '> my understanding is you\'ll see ""EDITED"" for messages that were either moved or edited without message edit history enabled, but you won\'t be able to click it to see edit history. \r\n\r\n@timabbott This is true if message edit history is enabled and then gets disabled, but the **EDITED** and **MOVED** labels will disappear after refreshing/restarting the app.', 'comment_created': datetime.datetime(2023, 7, 26, 17, 56, 42, tzinfo=datetime.timezone.utc), 'commenter': 'drrosa', 'type': 'User'}, {'comment_id': 1275313588, 'comment_body': ""Oh, sorry I missed that. How about\r\n```suggestion\r\n1. Click on the message's **EDITED** or **MOVED** label shown next to a user's name or to the left of each message in the message feed.\r\n```"", 'comment_created': datetime.datetime(2023, 7, 26, 17, 59, 16, tzinfo=datetime.timezone.utc), 'commenter': 'drrosa', 'type': 'User'}, {'comment_id': 1276945399, 'comment_body': 'Changed it, thanks for the suggestion.', 'comment_created': datetime.datetime(2023, 7, 27, 23, 58, 34, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1276946347, 'comment_body': ""@drrosa , this behavior has changed in this latest PR #26161 . With the new behavior, the edited notice will always be there if the message is moved or edited, irrespective of the organization's settings. However, if it is enabled, then for moved messages, the notice will be moved instead of edited."", 'comment_created': datetime.datetime(2023, 7, 28, 0, 1, 2, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1276985155, 'comment_body': ""@palashb01 Ah I see, thanks for clarifying. Okay then we should change this documentation to something like:\r\n\r\n```\r\n    You will only see the **EDITED** or **MOVED** label if the message has been\r\n    moved or edited, and edit history is enabled in the organization. If message edit\r\n    history is disabled, you'll see the **EDITED** label for messages that were either\r\n    moved or edited, but you won't be able to click the label to see edit history.\r\n```\r\n\r\n(please double-check for accuracy)"", 'comment_created': datetime.datetime(2023, 7, 28, 1, 21, 12, tzinfo=datetime.timezone.utc), 'commenter': 'drrosa', 'type': 'User'}, {'comment_id': 1277315409, 'comment_body': 'Done, thanks for the suggestion.', 'comment_created': datetime.datetime(2023, 7, 28, 9, 18, 6, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1300641401, 'comment_body': 'Maybe squash this into your docs commit? It seems like a related change to me.', 'comment_created': datetime.datetime(2023, 8, 21, 21, 2, 32, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1301465459, 'comment_body': 'Done, thanks for the suggestion :)', 'comment_created': datetime.datetime(2023, 8, 22, 10, 53, 29, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1304570709, 'comment_body': 'Another little nit--maybe wrap this line so that it matches the surrounding line-length.', 'comment_created': datetime.datetime(2023, 8, 24, 16, 9, 43, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1304576236, 'comment_body': ""I wonder if this is the right location for documenting this keyboard shortcut? To my mind, the history belongs up by the edit/view source and move shortcut lines. I'm curious to see what others thing--there doesn't seem to be a whole lot of rhyme or reason as to why things are ordered as they are here, but putting this at the very bottom doesn't seem quite right."", 'comment_created': datetime.datetime(2023, 8, 24, 16, 14, 29, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1304944863, 'comment_body': ""Yeah this is wrong. I'll do an initial tweak so that I feel comfortable merging the feature change, and also opened https://github.com/zulip/zulip/issues/26573 for related follow-up work here; @drrosa can take care of making this nice as a follow-up as he maintains our /help/ documentation. "", 'comment_created': datetime.datetime(2023, 8, 24, 22, 47, 51, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '23bbad09c18fdefb247ea1bd4bfe458c0396bf1a', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89c84c5296cbda87d587c57997fbb6c6ec2c6fcb', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f2818a09925011ca7af5c4f8f1245723ad467f3', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}]",PALASH BADERIA,66828942,palash.baderia@outlook.com,User,,54,,55,43
1414744849,message_feed: Fix edited notice to appear for disabled edit_history.,"This PR fixes the bug where the edited notice is not displayed for edited/moved messages when the edit_history is disabled for the organization. However, this is incorrect because the edited notice should still be shown for messages that are edited/moved, even if the edit_history is disabled. This issue occurred because the edit_history variable was not set in the message object when the edit_history is disabled. Therefore, in this case, we check for the availability of last_edit_timestr. If it is available, we display the edited notice. Since we cannot determine if the message was moved or edited, we show the edited notice for both cases.

-----------------

Fixes: [CZO](https://chat.zulip.org/#narrow/stream/9-issues/topic/edited.20notice.20disappears.20on.20refreshing)


-------------

<details>
<summary>Self-review checklist</summary>

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26161,https://api.github.com/repos/zulip/zulip/pulls/26161,https://github.com/zulip/zulip/pull/26161,closed,8,2,1,1,3,0,5,0,"[{'name': 'bug'}, {'name': 'area: message-editing'}, {'name': 'size: S'}, {'name': 'area: message feed (UI)'}, {'name': 'integration review'}]",2023-06-30 12:00:32+00:00,2023-07-01 00:33:45+00:00,45193.0,12:33:13,[],"[{'commit_sha': 'aad28ca564bb4c0d24ea2eb943ca84235da06008', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}]",PALASH BADERIA,66828942,palash.baderia@outlook.com,User,,54,,55,43
1366943191,tippy: Add delay for recipient bar icons.,"This commit adds a long hover delay [750,20] to recipient bar icons. Doing this prevents the situation when the tippy tooltips are left floating when the icons suddenly disappear as you enter the topics according to the organization settings and the references are removed. Adding an additional delay ensures that the icons disappear and then the tooltips appear.

---------------------------------------

Fixes: [CZO Thread](https://chat.zulip.org/#narrow/stream/9-issues/topic/tooltip.20present.20when.20reference.20not.20visible)

**Screenshots and screen captures:**

![tooltip_delay](https://github.com/zulip/zulip/assets/66828942/5f6dfdbb-fc7b-4c86-8458-fd97ee4d5283)


<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,25786,https://api.github.com/repos/zulip/zulip/pulls/25786,https://github.com/zulip/zulip/pull/25786,closed,1,0,1,1,4,0,2,0,"[{'name': 'size: XS'}, {'name': 'integration review'}]",2023-05-26 22:08:09+00:00,2023-05-28 22:22:08+00:00,173639.0,"2 days, 0:13:59",[],"[{'commit_sha': 'ba00a2e5dc822c2881580a38b45962cad5d1de1f', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}]",PALASH BADERIA,66828942,palash.baderia@outlook.com,User,,54,,55,43
1505393821,user_profile: Sort the stream list on update and Prevent unwanted reordering.,"This commit fixes the issue of reordering the stream list when the user unsubscribes from a stream. The issue was caused because, on rendering, we sorted the list by name but did not sort it while updating the stream list on any update.

--------

Fixes: [CZO Thread](https://chat.zulip.org/#narrow/stream/9-issues/topic/unsubscribing.20reorders.20streams)

--------

**Screenshots and screen captures:**

<details><summary>Before:</summary>

![before_stream](https://github.com/zulip/zulip/assets/66828942/f3b1dbab-3171-4a48-b6eb-42f459957c5e)

</details>
<details><summary>After:</summary>

![sort_stream](https://github.com/zulip/zulip/assets/66828942/432f28a9-4f06-4de8-8a9a-f676b464b3e7)

</details>

------------
<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",True,26654,https://api.github.com/repos/zulip/zulip/pulls/26654,https://github.com/zulip/zulip/pull/26654,closed,1,0,1,1,2,0,1,0,[{'name': 'size: XS'}],2023-09-06 23:02:39+00:00,2023-09-07 23:55:47+00:00,89588.0,"1 day, 0:53:08",[],"[{'commit_sha': '93a354b829c9273f1f795099b5a55f657280fb10', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}]",PALASH BADERIA,66828942,palash.baderia@outlook.com,User,,54,,55,43
1051803326,custom_profile_fields: Fix empty field choices issue of select field.,"While editing select type profile field, if we submit empty or zero
choices it fails silently, current implementation for this issue does
not work for some cases, and this commit will fix that.

This will disable dialog submit button in case of empty field choices.

Also removing code of all calls making to `update_choice_delete_btn`
as that function have no more use-case for empty field choices, still
keeping the function because it gets used in `settings_streams.js`..

<!-- Describe your pull request here.-->

Fixes: GH [comment](https://github.com/zulip/zulip/pull/22818#issuecomment-1239000262)<!-- Issue link, or clear description.-->

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

**Screenshot/Gifs**:
![field_choices](https://github.com/zulip/zulip/assets/41695888/4a0db4c0-8f2e-4077-b920-ee729a272db1)


**Self-review checklist**

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
",True,22903,https://api.github.com/repos/zulip/zulip/pulls/22903,https://github.com/zulip/zulip/pull/22903,closed,30,28,3,2,13,5,3,0,"[{'name': 'area: settings (admin/org)'}, {'name': 'size: L'}, {'name': 'integration review'}]",2022-09-09 16:53:45+00:00,2023-08-28 15:52:43+00:00,30495538.0,"352 days, 22:58:58","[{'comment_id': 1287439416, 'comment_body': 'I think we can name this something better like `atleast_one_choice_valid`, `atleast_one_non_empty_choice` or `non_empty_choice_present`.', 'comment_created': datetime.datetime(2023, 8, 8, 17, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 1288028596, 'comment_body': 'I don\'t think this is the correct function to have this code for showing/hiding the choice.\r\n\r\nTo be clear, the ""value"" here is to set the `data-value` attribute of the choice element and not the value inside the input.\r\n\r\nI think a more cleaner way to handle the display of delete buttons is to just hide the button for the new row (which I guess is handled using `create_choice_row` and `add_choice_row` functions) and then show the button for the row above the newly added row.', 'comment_created': datetime.datetime(2023, 8, 9, 6, 52, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 1296919729, 'comment_body': 'This comment is confusing. We do not show the delete button on the new choice, which is actually created after this code. ', 'comment_created': datetime.datetime(2023, 8, 17, 9, 16, 36, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 1298234037, 'comment_body': ""It is for the empty choice field after we type some text in it, we don't display the delete button of the very last bottom choice field(the extra empty one).\r\n\r\nI'll change it  to `Display delete button on text input in the extra empty choice field`"", 'comment_created': datetime.datetime(2023, 8, 18, 9, 31, 33, tzinfo=datetime.timezone.utc), 'commenter': 'yogesh-sirsat', 'type': 'User'}, {'comment_id': 1298473209, 'comment_body': '""extra empty choice"" still seems not clear enough without manually testing the UI. Probably being some more verbose and having something like below would be better -\r\n`Display delete buttons for all existing choices before creating the new row, which will not have the delete button so that there is at least one option present.`', 'comment_created': datetime.datetime(2023, 8, 18, 13, 46, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}]","[{'commit_sha': '5ab3b6735a6a425fe63a675019c156e19d28a6c8', 'committer_username': 'yogesh-sirsat', 'committer_name': 'Yogesh Sirsat', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 25, 15, 31, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f521a0d289aed14ade8b02b685fece29dac5ed8d', 'committer_username': 'yogesh-sirsat', 'committer_name': 'Yogesh Sirsat', 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 25, 15, 31, 8, tzinfo=datetime.timezone.utc)}]",Yogesh Sirsat,41695888,,User,,52,,29,6
1458754667,pm_list: Show empty conversations in left sidebar.,"- [x] Show a empty conversation in left sidebar, when the user is in view of the new conversation.

----------

Fixes: #22769
CZO: [Thread](https://chat.zulip.org/#narrow/stream/101-design/topic/Show.20empty.20conversations.20in.20left.20sidebar.20.2322769)

-----------

**Screenshots and screen captures:**

<details>
<summary>Demo:</summary>
<br>

![pm_conversation](https://github.com/zulip/zulip/assets/66828942/d35798d5-cddb-443c-b0ee-5e08f3bb3202)
</details>

-------------------
ToDo:

- Complete the similar implementation for topics also.

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",False,26396,https://api.github.com/repos/zulip/zulip/pulls/26396,https://github.com/zulip/zulip/pull/26396,closed,120,10,5,2,13,9,4,0,"[{'name': 'area: left sidebar (misc)'}, {'name': 'size: XL'}, {'name': 'has conflicts'}, {'name': 'completion candidate'}]",2023-08-01 20:55:42+00:00,2024-04-18 00:42:09+00:00,22477587.0,"260 days, 3:46:27","[{'comment_id': 1283011529, 'comment_body': ""Let's use `includes` instead of `some` since it is faster."", 'comment_created': datetime.datetime(2023, 8, 3, 10, 38, 1, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1283014883, 'comment_body': ""Let's rename this to `insert_empty_dm`"", 'comment_created': datetime.datetime(2023, 8, 3, 10, 41, 11, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1283015197, 'comment_body': '`remove_empty_dm`', 'comment_created': datetime.datetime(2023, 8, 3, 10, 41, 30, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1283484081, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 8, 3, 17, 1, 58, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1295270422, 'comment_body': 'It feels like a bit of an abstraction boundary failure to have this called from here.\r\n\r\nI would think that we should have `pm_list.handle_narrow_activated(current_filter);` be responsible for doing this work...', 'comment_created': datetime.datetime(2023, 8, 16, 0, 47, 56, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1295270767, 'comment_body': 'Given that this checks whether the (group) DM is already present before adding it, I think we could just call this function unconditionally when renarrowing, as suggested above?', 'comment_created': datetime.datetime(2023, 8, 16, 0, 48, 47, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1307300623, 'comment_body': 'Changed the code path, and made all the changes around `pm_list.handle_narrow_activated`, thanks for the suggestion.', 'comment_created': datetime.datetime(2023, 8, 28, 11, 25, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1307302489, 'comment_body': 'Got it, Thanks for the suggestion, I have made the suggested changes, and implemented changes around the handle_narrow_activated and handle_narrow_deactivated functions so that this is always called when renarrowing to dm narrow.', 'comment_created': datetime.datetime(2023, 8, 28, 11, 27, 5, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1390066771, 'comment_body': ""I don't love this object API. I think it'd be better to just have a function with this name return a `user_ids_array`, and have code that wants a `user_ids_string` out of it do the conversion via sorting+joining (we don't have a method for this, but it'd be easy to add a `people.ids_array_to_user_ids_string`), or `user_ids_string_to_ids_array` for the opposite direction.\r\n\r\n"", 'comment_created': datetime.datetime(2023, 11, 11, 0, 47, 22, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '2ca46b350113e61400e8ea8f64bf8c1a01850414', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8084c8b2e7b733eb28943d248070ac103ef8fc4f', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}]",PALASH BADERIA,66828942,palash.baderia@outlook.com,User,,54,,55,43
1396654673,stream_settings: Add not-subscribed tab to stream settings.,"- [x] Add a `Not Subscribed` tab to the stream settings that will contain all the streams the user is not subscribed to.
- [x] Display the text `No streams to show. View all streams` when no stream is available to show.
- [x] Changes the redirect links for `Browse streams` and `Browse 1 more stream` to the not-subscribed tab.
- [x] Hide the `Not subscribed` tab if the user is a guest user.

------------------

Fixes: #21869
Rebases and made some major changes to fix bugs: #21904

---------------

**Screenshots and screen captures:**

<details>
<summary>stream settings screenshots:</summary>

<br>

- When the user is not a guest.

![08117B5D-E8EB-4FC9-B1D9-0914CA3B5CE0](https://github.com/zulip/zulip/assets/66828942/981a140e-c5c4-44d9-b5d9-aabe119829df)

<br>

- When the user is a guest.

![F5D33907-2FDF-43A3-A0EB-259B77326713_4_5005_c](https://github.com/zulip/zulip/assets/66828942/6f9a25f9-c6d1-4e86-8298-4e1053b6133d)

<br>

- When no streams to show

<img width=""607"" alt=""Screenshot 2023-06-17 at 12 39 02 PM"" src=""https://github.com/zulip/zulip/assets/66828942/eee0c524-316d-4ff0-839d-019d343fc597"">


</details>

<details>
<summary>Demo:</summary>
<br>

![not-subscribed tab](https://github.com/zulip/zulip/assets/66828942/e83f5631-b87f-47b3-936a-aa055dae19b2)


</details>


-------------------

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",False,26049,https://api.github.com/repos/zulip/zulip/pulls/26049,https://github.com/zulip/zulip/pull/26049,closed,206,66,7,5,15,18,7,0,"[{'name': 'feedback wanted'}, {'name': 'area: channel settings'}, {'name': 'size: XL'}, {'name': 'has conflicts'}, {'name': 'new feature'}, {'name': 'integration review'}, {'name': 'chat.zulip.org review'}]",2023-06-17 07:10:30+00:00,2024-06-04 16:48:05+00:00,30533855.0,"353 days, 9:37:35","[{'comment_id': 1246331890, 'comment_body': 'Maybe `notsubscribed_streams_tab_empty_text` is more appropriate.', 'comment_created': datetime.datetime(2023, 6, 29, 8, 52, 19, tzinfo=datetime.timezone.utc), 'commenter': 'brijsiyag', 'type': 'User'}, {'comment_id': 1246337033, 'comment_body': ""We don't get private streams at client side from server right(If not subscribed)? But comment is saying we hide them at client side."", 'comment_created': datetime.datetime(2023, 6, 29, 8, 56, 23, tzinfo=datetime.timezone.utc), 'commenter': 'brijsiyag', 'type': 'User'}, {'comment_id': 1246361917, 'comment_body': '```js\r\n$("".no-streams-to-show"").children().hide();\r\nif (is_subscribed_stream_tab_active()) {\r\n    $("".subscribed_streams_tab_empty_text"").show();\r\n} else if (is_unsubscribed_stream_tab_active()) {\r\n    $("".unsubscribed_streams_tab_empty_text"").show();\r\n} else {\r\n    $("".all_streams_tab_empty_text"").show();\r\n}\r\n```', 'comment_created': datetime.datetime(2023, 6, 29, 9, 16, 26, tzinfo=datetime.timezone.utc), 'commenter': 'brijsiyag', 'type': 'User'}, {'comment_id': 1247493451, 'comment_body': 'Thanks a lot for the suggestion :)', 'comment_created': datetime.datetime(2023, 6, 30, 6, 39, 28, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1247493928, 'comment_body': 'Oops, my mistake thanks a lot for finding this error in comment I have mentioned the private streams part.', 'comment_created': datetime.datetime(2023, 6, 30, 6, 40, 11, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1247494053, 'comment_body': 'Yup, changed it', 'comment_created': datetime.datetime(2023, 6, 30, 6, 40, 22, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1255779917, 'comment_body': 'You are converting if-else block to switch case in between other changes, I think it should be done in a different commit. ', 'comment_created': datetime.datetime(2023, 7, 7, 12, 53, 30, tzinfo=datetime.timezone.utc), 'commenter': 'yogesh-sirsat', 'type': 'User'}, {'comment_id': 1255781389, 'comment_body': 'Same here, like I mentioned before.', 'comment_created': datetime.datetime(2023, 7, 7, 12, 54, 34, tzinfo=datetime.timezone.utc), 'commenter': 'yogesh-sirsat', 'type': 'User'}, {'comment_id': 1255785765, 'comment_body': 'Why renamed `$sub_row` to `$row`?', 'comment_created': datetime.datetime(2023, 7, 7, 12, 57, 59, tzinfo=datetime.timezone.utc), 'commenter': 'yogesh-sirsat', 'type': 'User'}, {'comment_id': 1255796409, 'comment_body': 'Why removed `.hide()` lines here?', 'comment_created': datetime.datetime(2023, 7, 7, 13, 6, 49, tzinfo=datetime.timezone.utc), 'commenter': 'yogesh-sirsat', 'type': 'User'}, {'comment_id': 1257266841, 'comment_body': ""I didn't make the intentional change, I added an else if case however on running the lint to fix the issues, it converted this to a switch case."", 'comment_created': datetime.datetime(2023, 7, 8, 13, 22, 49, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1257266873, 'comment_body': ""I didn't make the intentional change, I added an else if case however on running the lint to fix the issues, it converted this to a switch case."", 'comment_created': datetime.datetime(2023, 7, 8, 13, 23, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1257267532, 'comment_body': 'Since earlier, we used to have a separate tab only for subscribed streams, so having a ""sub_row"" (subscribed_row) seems correct. However, now we also have a tab for unsubscribed streams, so I made the row general for both instead of aligning it towards one side.\r\n', 'comment_created': datetime.datetime(2023, 7, 8, 13, 26, 16, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1257284847, 'comment_body': '""No-streams-to-show"" is the parent of all the ""empty-text"" elements. Therefore, instead of individually hiding each element in every if-else case, it is much better to hide all the elements beforehand and then only show the required element. This approach reduces code duplication as well.', 'comment_created': datetime.datetime(2023, 7, 8, 14, 45, 30, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1259315288, 'comment_body': 'Yeah, I know that can happen, I have experienced that before, what you can do is add this change in a separate commit manually.', 'comment_created': datetime.datetime(2023, 7, 11, 7, 35, 52, tzinfo=datetime.timezone.utc), 'commenter': 'yogesh-sirsat', 'type': 'User'}, {'comment_id': 1259317002, 'comment_body': 'okay.', 'comment_created': datetime.datetime(2023, 7, 11, 7, 37, 27, tzinfo=datetime.timezone.utc), 'commenter': 'yogesh-sirsat', 'type': 'User'}, {'comment_id': 1259319289, 'comment_body': 'Okay, looks good.', 'comment_created': datetime.datetime(2023, 7, 11, 7, 39, 26, tzinfo=datetime.timezone.utc), 'commenter': 'yogesh-sirsat', 'type': 'User'}, {'comment_id': 1261415538, 'comment_body': '@yogesh-sirsat , I have made the suggested changes, could you please review the PR, thanks :)', 'comment_created': datetime.datetime(2023, 7, 12, 16, 12, 46, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}]","[{'commit_sha': '12212cf20f95c364ba7149e0dfcd0b45e4a7d308', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '982e96bbc3afc46be2af4be7097aec2983014514', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a24ef5afce8974016f9b3edeea4a3eef08b2db46', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aabe45aab31c91d928f8c48811d9d4bdbe091fd7', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0a7d0c02ed8831effb7daf51607f6e5cd25229b', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}]",PALASH BADERIA,66828942,palash.baderia@outlook.com,User,,54,,55,43
1404311343,Hotkey: Fix cmd+return to send message in preview mode also on mac.,"- [x] Fix the behaviour of cmd+return to send the message in preview mode also.
--------------------
Fixes: [CZO](https://chat.zulip.org/#narrow/stream/9-issues/topic/ctrl.20.2B.20enter.20in.20preview.20mode.20.2321670)

----------------
<details>
<summary>Self-review checklist</summary>

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",False,26101,https://api.github.com/repos/zulip/zulip/pulls/26101,https://github.com/zulip/zulip/pull/26101,open,10,2,1,1,2,9,5,0,"[{'name': 'area: keyboard UI'}, {'name': 'size: S'}, {'name': 'area: message feed (UI)'}, {'name': 'integration review'}, {'name': 'completion candidate'}]",2023-06-23 00:40:18+00:00,,0.0,,"[{'comment_id': 1239666678, 'comment_body': ""Shouldn't we just move the value from `keydown_ctrl_mappings[13]` to `keydown_cmd_or_ctrl_mappings`? It seems that `ctrl_enter` is used for both Ctrl and Cmd."", 'comment_created': datetime.datetime(2023, 6, 23, 10, 43, 22, tzinfo=datetime.timezone.utc), 'commenter': 'shameondev', 'type': 'User'}, {'comment_id': 1239677291, 'comment_body': ""I had considered doing the same thing before, and everything was working, but I couldn't figure out why the `ctrl_enter` mapping is not written inside `keydown_cmd_or_ctrl_mappings`. Additionally, having the `ctrl_enter` mapping in both `keydown_ctrl_mappings` and `keydown_cmd_or_ctrl_mappings` would be duplicative, so I wrote this if-else condition. Please let me know if you would like me to revise the approach and include the mapping of `ctrl_enter` in `keydown_cmd_or_ctrl_mappings` instead of using the current method."", 'comment_created': datetime.datetime(2023, 6, 23, 10, 56, 8, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1239689947, 'comment_body': ""I'm not familiar with the historical context, but I believe shifting `ctrl_enter` to `keydown_cmd_or_ctrl_mappings` makes sense logically. However, it might require additional testing to ensure everything functions correctly."", 'comment_created': datetime.datetime(2023, 6, 23, 11, 10, 54, tzinfo=datetime.timezone.utc), 'commenter': 'shameondev', 'type': 'User'}, {'comment_id': 1239886843, 'comment_body': ""> I couldn't figure out why the `ctrl_enter` mapping is not written inside `keydown_cmd_or_ctrl_mappings`.\r\n\r\nIf I'm understanding correctly, the only mapping that needs to remain in `keydown_ctrl_mappings` is the escape one (`[`), because [at least in Firefox on MacOS](https://support.mozilla.org/en-US/kb/keyboard-shortcuts-perform-firefox-tasks-quickly), `Cmd` + `[` moves back through the browsing history. The same is true [in Chrome](https://support.google.com/chrome/answer/157179?hl=en&co=GENIE.Platform%3DDesktop#zippy=%2Ctab-window-shortcuts) and [Safari](https://support.apple.com/guide/safari/keyboard-and-other-shortcuts-cpsh003/mac).\r\n"", 'comment_created': datetime.datetime(2023, 6, 23, 14, 24, 50, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1240926652, 'comment_body': '@shameondev @karlstolley I have changed the mapping of `ctrl_enter` to `keydown_cmd_or_ctrl_mappings` and also fixed the case for `cmd+return` and `ctrl+enter` to send the message on preview, could you please review the PR, thanks :)', 'comment_created': datetime.datetime(2023, 6, 24, 19, 35, 51, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1266047501, 'comment_body': ""Can you explain the reasoning behind this change? I don't understand it at all; the case described in the comment should be where `isCmdOrCtrl && !e.shiftKey`, which is handled in the previous block."", 'comment_created': datetime.datetime(2023, 7, 18, 0, 39, 32, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1268055088, 'comment_body': ""Earlier, we expected `Ctrl+Enter` and `Cmd+Enter` on Mac to do the same thing. However, after moving the key value 13 from the `keydown_ctrl_mappings` to `keydown_cmd_or_ctrl_mappings`, the above block that checks `isCmdOrCtrl` will return false in case the pressed button is `Ctrl+Enter`. As a result, this block will never run and the message won't be sent. To address this issue, the 194th line adds a condition to check if the pressed combination of keys has a value of 13 (`Ctrl+Enter`). If this condition is true, it will return the hotkey, which is what we expect it to do."", 'comment_created': datetime.datetime(2023, 7, 19, 13, 12, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1268460476, 'comment_body': ""I'm still not sure I understand; why is the bug not that we should be computing `isCmdOrCtrl` differently, or adjusting the check for the previous block in some other way?"", 'comment_created': datetime.datetime(2023, 7, 19, 18, 4, 9, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1287116774, 'comment_body': ""@timabbott , thanks for the review. I think we don't need to change the `isCmdOrCtrl` function since the only Ctrl hotkey combination that we need to go into the if block is `Ctrl+enter`. Therefore, in the if condition itself, we can simply check if the pressed combination has an ASCII value of 13 and if `ctrlKey` is true. If this condition is true, then we are sure that it is `Ctrl+enter`, and thus, we allow it to go into the if block. Please let me know if you have something else in mind."", 'comment_created': datetime.datetime(2023, 8, 8, 13, 25, 26, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}]","[{'commit_sha': 'c66f640ef5aca136583ae43e28179e786cc29fec', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}]",PALASH BADERIA,66828942,palash.baderia@outlook.com,User,,54,,55,43
1490819132,drafts: Add a copy draft button.,"- [x] Add a copy draft button to the drafts panel.

Fixes: [CZO Thread](https://chat.zulip.org/#narrow/stream/137-feedback/topic/copy.20feature.3A.20drafts)

-------------

**Screenshots and screen captures:**

| Before:  |  After:  |
|---------|--------|
| <img width=""131"" alt=""Screenshot 2023-08-27 at 5 54 10 AM"" src=""https://github.com/zulip/zulip/assets/66828942/65ab4bfa-b640-4f81-8068-13522108de28""> | <img width=""116"" alt=""Screenshot 2023-08-30 at 2 07 04 AM"" src=""https://github.com/zulip/zulip/assets/66828942/aaa50ce9-7ec9-451a-b945-f893865c7c2f""> |

<details>
<summary>Demo:</summary>

![cn](https://github.com/zulip/zulip/assets/66828942/2d40cdca-4eff-4749-bc92-1ccd3b3eeb04)


</details>

---------------

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",False,26587,https://api.github.com/repos/zulip/zulip/pulls/26587,https://github.com/zulip/zulip/pull/26587,open,39,0,3,1,4,6,4,0,"[{'name': 'size: M'}, {'name': 'has conflicts'}, {'name': 'maintainer review'}, {'name': 'area: compose (drafts/network/echo)'}]",2023-08-27 00:26:41+00:00,,0.0,,"[{'comment_id': 1308866255, 'comment_body': '```suggestion\r\n                            <i class=""fa fa-copy fa-lg copy-overlay-message tippy-zulip-tooltip"" aria-hidden=""true"" data-tippy-content=""{{t \'Copy draft\' }}""></i>\r\n```\r\n\r\nYou should mark this user-facing string for translation. \r\n\r\nAlso, I suggest using the `data-tooltip-template-id` pattern instead of `data-tippy-content` to keep things consistent in this template.', 'comment_created': datetime.datetime(2023, 8, 29, 13, 57, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sbansal1999', 'type': 'User'}, {'comment_id': 1308878449, 'comment_body': '```suggestion\r\n            const draft_id = $draft_row.data(""draft-id"");\r\n```\r\n\r\nSince this is not a jQuery element, there is no need for the `$` prefix.', 'comment_created': datetime.datetime(2023, 8, 29, 14, 5, 46, tzinfo=datetime.timezone.utc), 'commenter': 'sbansal1999', 'type': 'User'}, {'comment_id': 1309330335, 'comment_body': 'Changed, Thanks for noticing', 'comment_created': datetime.datetime(2023, 8, 29, 20, 38, 38, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1309331121, 'comment_body': ""I have used the translation string, but I don't think using a template here would make sense because we generally use a template for strings that has shortcuts to show, but here we just have a static string."", 'comment_created': datetime.datetime(2023, 8, 29, 20, 39, 34, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1309783264, 'comment_body': 'Yeah, that also makes sense. :+1: ', 'comment_created': datetime.datetime(2023, 8, 30, 7, 4, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sbansal1999', 'type': 'User'}, {'comment_id': 1323520728, 'comment_body': 'I think we should get out of the habit of specifying opacity separately from the color, since we can express this as `hsl(0deg 0% 54% / 70%)`. Then we can replicate the color on the hover state.', 'comment_created': datetime.datetime(2023, 9, 12, 20, 22, 28, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}]","[{'commit_sha': 'bc0acd2f86137d6422cdb4580f32f9cb0018ff3b', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}]",PALASH BADERIA,66828942,palash.baderia@outlook.com,User,,54,,55,43
1306206574,topic_sidebar: Add tab switcher to filter topics by state.,"- [x]  Add a tab switcher to filter the topic based on their state.
- [x] If the topic list is already filtered with the search input, then only the filtered list of topics is further filtered based on the selected tab
- [x] Show the tab switcher only if there is atleast one resolved topic within a stream

-------------------------------------

Fixes: #24200

------------------------------------

**Screenshots and screen captures:**

<details>
<summary>Before:</summary>

![Screenshot from 2023-04-08 01-46-10](https://user-images.githubusercontent.com/66828942/230673255-c177923b-b502-4882-b178-b0eceb8625a1.png)

</details>

<details>
<summary>After:</summary>

![Screenshot from 2023-04-07 23-00-28](https://user-images.githubusercontent.com/66828942/230673403-84990d69-8ea9-46e8-a89d-5b5b598bfe39.png)

<br>

- **Demo**:

![mmm](https://user-images.githubusercontent.com/66828942/230673486-c70f212c-e32a-43f2-bd5f-ffc8b951896f.gif)

<br>

![demo_with](https://user-images.githubusercontent.com/66828942/233802171-422bce03-dd1b-40c7-9768-0b1ac7f52444.gif)


<br>

- **Demo with Input**:

![input](https://user-images.githubusercontent.com/66828942/230673616-1d1a1e62-765f-4db1-ae07-08c2594d4d82.gif)


</details>

<details>
<summary>internationalization:</summary>

| English | Russian |
|------------|-------------|
| ![Screenshot from 2023-04-07 23-00-28](https://user-images.githubusercontent.com/66828942/230673915-67e159ee-a0fa-4a36-bc8c-8d6c52cafb14.png) | ![Screenshot from 2023-04-07 23-02-58](https://user-images.githubusercontent.com/66828942/230673931-daeb73c8-d20e-4c1a-90c9-76f3b0def06a.png) |


</details>

-------------------------

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",False,25033,https://api.github.com/repos/zulip/zulip/pulls/25033,https://github.com/zulip/zulip/pull/25033,open,167,17,10,3,21,5,6,0,"[{'name': 'area: left sidebar (misc)'}, {'name': 'area: search'}, {'name': 'size: XL'}, {'name': 'has conflicts'}, {'name': 'new feature'}, {'name': 'integration review'}]",2023-04-07 20:27:36+00:00,,0.0,,"[{'comment_id': 1291515563, 'comment_body': ""Let's remove `new-style` class from here."", 'comment_created': datetime.datetime(2023, 8, 11, 15, 35, 34, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1291518072, 'comment_body': 'Let\'s extract `(topics_state === ""resolved"")` into a variable so that it is easier to read and we don\'t have do that calculation in a loop.', 'comment_created': datetime.datetime(2023, 8, 11, 15, 38, 25, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1292311436, 'comment_body': '@amanagr , so I am not sure why but I realized there is a class name called `tab-switcher` that the component->toggle adds to the div element which essentially has all the css content inside it, for all the other overlays it is working however for the resolved toggler, the CSS is not working, so basically if we remove `new-style` we have to copy-paste and adjust the tab-switcher css into the `left_sidebar.css` to make it work, so do let me know what you think about it.', 'comment_created': datetime.datetime(2023, 8, 12, 13, 44, 30, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1292313700, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 12, 13, 52, 28, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1295309054, 'comment_body': 'OK, we can clear than up later then.', 'comment_created': datetime.datetime(2023, 8, 16, 2, 9, 55, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}]","[{'commit_sha': '7792a0ef7fe1385f205ab38a019153cce5541492', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c152ea760b1e57d2443be95186fad299eff7d6ee', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4700d6b7e247532c0e0ef63b6f9f6cb9d765579c', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}]",PALASH BADERIA,66828942,palash.baderia@outlook.com,User,,54,,55,43
1169937863,deactivated_user: Change the empty PM / group PM view text and compose_box.,"**If the user is deactivated**:

- change empty PM/group PM view text.
- keep the compose_box closed and blocked for the PM with deactivated user or a group containing a deactivated user.
- block the compose_box in `all_message_narrow` and `recent conversations narrow` if the recipient of the selected message is deactivated.
- Change the text to:

       - pm-with:
         Line 1: You have no direct messages with {person}
         Line 2: [user's name] is no longer active in this organization.

      - group pm-with:
         Line 1: You have no direct messages with these users.
         Line 2: [user's name] is no longer active in this organization.

      - dm-including:
        Line 1: You have no direct messages including {person}.
        Line 2: [user's name] is no longer active in this organization.

- Keep the compose box as-is, rather than opening it up for the ""pm-with:"" search, as we currently do.
- Change the text of user status tooltip to `User is deactivated`

----------------------------------------

**Fixes** #23408. **Fixes** #22278.
**CZO:** [Thread](https://chat.zulip.org/#narrow/stream/101-design/topic/pm.20with.20deactivated.20user.20behaviour.20.2323899/near/1482943)

----------------------------------------
- **King Hamlit  is deactivated**

### DEMO: 

<details>
<summary>Before:</summary>
<br>

https://user-images.githubusercontent.com/66828942/208317489-803e886e-01e3-4157-8fd1-e0f2c3180f15.mp4
</details>

 

### After:

---------------------------------------------------

<details>
<summary>All message narrow:</summary>
<br>

![all_messages_narrow](https://user-images.githubusercontent.com/66828942/234410788-e95572c7-27e8-4cf5-bce7-b9d33a54b95f.gif)



</details>


<details>
<summary>pm-with-deactivated-user:</summary>
<br>


![pm_with_deactivated_user](https://user-images.githubusercontent.com/66828942/234410815-48edc420-3977-4d43-bf30-0b807ce394c6.gif)


</details>


<details>
<summary>group-pm-having-deactivated-user:</summary>
<br>


![group-pm](https://user-images.githubusercontent.com/66828942/234410878-4ff004c9-b987-49d1-bc21-71adf5213c12.gif)


</details>

<details>
<summary>narrow-banner-change:</summary>
<br>

![Screenshot from 2023-04-26 02-41-35](https://user-images.githubusercontent.com/66828942/234410950-dd2fd3b6-5893-41de-bfab-93bdc43c8423.png)



<br>

![Screenshot from 2023-04-26 02-41-43](https://user-images.githubusercontent.com/66828942/234410979-649c7357-7254-4396-a4e4-aa3a71834af5.png)

<br>

![Screenshot from 2023-04-26 03-06-15](https://user-images.githubusercontent.com/66828942/234411018-9a0a202a-d4de-41ab-9a12-2bcb8595c2d1.png)


</details>

<details>
<summary>User status tooltip:</summary>
<br>

![Screenshot from 2023-03-18 06-51-20](https://user-images.githubusercontent.com/66828942/226075726-6e8a59a4-9b3f-4e79-a141-40345e6216b7.png)


</details>

------------------------------

<details>
<summary>Self-review checklist</summary>


- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",False,23899,https://api.github.com/repos/zulip/zulip/pulls/23899,https://github.com/zulip/zulip/pull/23899,open,306,4,14,5,54,23,5,0,"[{'name': 'bug'}, {'name': 'size: XL'}, {'name': 'has conflicts'}, {'name': 'area: message feed (UI)'}, {'name': 'integration review'}]",2022-12-18 20:21:36+00:00,,0.0,,"[{'comment_id': 1052592749, 'comment_body': 'A comment here explaining that we close the compose box when narrowing to a deactivated user, else we expand it, would be nice', 'comment_created': datetime.datetime(2022, 12, 19, 20, 5, 35, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1052594479, 'comment_body': 'This line break removal is not needed so please restore it', 'comment_created': datetime.datetime(2022, 12, 19, 20, 7, 11, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1052601291, 'comment_body': 'Sure, I will do the expected changes.', 'comment_created': datetime.datetime(2022, 12, 19, 20, 16, 32, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1056854500, 'comment_body': 'This block of code is not needed I think, since this was checked immediately after enabling sending private messages', 'comment_created': datetime.datetime(2022, 12, 24, 17, 12, 30, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1056854668, 'comment_body': 'This block of code too seems extraneous for the same reason', 'comment_created': datetime.datetime(2022, 12, 24, 17, 14, 19, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1056855198, 'comment_body': 'Un-nesting this `if`, using `&&` should make this code more concise and readable', 'comment_created': datetime.datetime(2022, 12, 24, 17, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1056862134, 'comment_body': 'made the change, Thanks', 'comment_created': datetime.datetime(2022, 12, 24, 18, 33, 45, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1056862409, 'comment_body': 'Some of the node_tests are failing without this piece of code, I have attached the log also this was discussed on [CZO](https://chat.zulip.org/#narrow/stream/49-development-help/topic/.E2.9C.94.20node.20test.20for.20.2323899)\r\n\r\n![Screenshot from 2022-12-24 23-46-52](https://user-images.githubusercontent.com/66828942/209447750-33bcf2ad-2bfa-4cc7-b685-03878148694d.png)\r\n\r\nPlease do suggest, if some more changes are required, Thanks.\r\n', 'comment_created': datetime.datetime(2022, 12, 24, 18, 37, 35, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1056862447, 'comment_body': 'The same reason goes for this code snippet too.', 'comment_created': datetime.datetime(2022, 12, 24, 18, 38, 9, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1056887737, 'comment_body': ""Looks like you're removing the code blocks both above and below this comment. Remove just the one above. I've tested locally too, that works (node tests don't fail)"", 'comment_created': datetime.datetime(2022, 12, 25, 1, 5, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1056887742, 'comment_body': 'Just remove the code block above, not below this comment', 'comment_created': datetime.datetime(2022, 12, 25, 1, 5, 20, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1056990653, 'comment_body': 'Hey @N-Shar-ma ,Made the changes suggested by you, kindly review it  and suggest if any more changes  are required, Thanks.', 'comment_created': datetime.datetime(2022, 12, 25, 19, 33, 14, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1073188844, 'comment_body': ""Is this a real case? Deactivated users shouldn't be able to login, that would defeat the purpose of them being deactivated."", 'comment_created': datetime.datetime(2023, 1, 18, 7, 47, 29, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1073200949, 'comment_body': 'Yes, deactivated users are not allowed to log in, but in this case, an active user is trying to message a deactivated user and we are blocking the ability to send a message to a deactivated user.\r\n\r\n- A active user is logged in.\r\n- pm-with deactivated user.', 'comment_created': datetime.datetime(2023, 1, 18, 7, 59, 48, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1073261477, 'comment_body': 'oh yeah!', 'comment_created': datetime.datetime(2023, 1, 18, 9, 1, 28, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1073267610, 'comment_body': ""This could be a group PM too, right? In that case, we should check if any of the users are deactivated and give an appropriate message stating exactly who is deactivated. Also, we don't need to call `narrow_state.pm_ids_string()` twice here. "", 'comment_created': datetime.datetime(2023, 1, 18, 9, 7, 2, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1073270842, 'comment_body': 'You should check for the `trigger` inside `compose_actions.start` to verify if you should expand the compose box, instead of calling `expand_compose_box` in a different line.', 'comment_created': datetime.datetime(2023, 1, 18, 9, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1073306548, 'comment_body': 'Sure will look into all the suggested changes', 'comment_created': datetime.datetime(2023, 1, 18, 9, 42, 44, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1083269798, 'comment_body': ""Let's combine these two `if` conditions. Maybe add a `check_new_topic_or_pm_trigger()` to simplify reading it.\r\n\r\nAlso, we should update the compose box deactivated state once a user is deactivated or activated back."", 'comment_created': datetime.datetime(2023, 1, 21, 9, 50, 47, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1086422241, 'comment_body': 'Updated the PR with what I was thinking here.', 'comment_created': datetime.datetime(2023, 1, 25, 9, 54, 16, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1086423982, 'comment_body': 'Thanks a lot.', 'comment_created': datetime.datetime(2023, 1, 25, 9, 55, 43, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1175898552, 'comment_body': 'The parameter should be called `user_ids`, should it appears to expect a list? \r\n\r\nAlso the function name seems wrong, it should be `get_names_for_deactivated_users` or something like that, to hint the fact it expects a list.', 'comment_created': datetime.datetime(2023, 4, 25, 0, 14, 16, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1176557505, 'comment_body': ' Thanks for the suggestion, I have changed the name of the parameter and function, could you please review the PR, thanks :)', 'comment_created': datetime.datetime(2023, 4, 25, 13, 55, 44, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}]","[{'commit_sha': '40fb9dee75c1592b6aac0fea9c86945f0ab475a2', 'committer_username': 'amanagr', 'committer_name': 'Aman Agrawal', 'committer_email': 'amanagr@zulip.com', 'commit_date': datetime.datetime(2017, 1, 14, 20, 19, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c1c118bea7181936269b11b166441650afce95d', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '123d9a52631c866d6e4c4d2dad7b9943043aef6c', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbd5063a265066d57bec82dad3bdc9653c90b81c', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '833a030817b17240763107cd600d9e70a9e800d8', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}]",PALASH BADERIA,66828942,palash.baderia@outlook.com,User,,54,,55,43
1194696375,message_feed: Add Button `quote and reply` to the message bar.,"- [x] Add a `Quote and reply or forward` button in the message_header_bar.
- [x] Whenever the screen size goes below (1080px), hide the button.
- [x] Remove `Quote and reply or forward` button from three-dot message menu for screen width above 1080px.

--------------------------

Fixes: #23100

CZO: [Thread](https://chat.zulip.org/#narrow/stream/101-design/topic/quote-and-reply.20button.20.3A.2323100)

--------------------------

**Demo and Screenshots:**

<details>
<summary>Functionality:</summary>
<br>

![functionality](https://github.com/zulip/zulip/assets/66828942/b83737a8-d6a7-47b6-911a-3b5690c95a51)



</details>

<details>
<summary>Message container:</summary>
<br>

<img width=""861"" alt=""Screenshot 2023-09-08 at 11 45 36 AM"" src=""https://github.com/zulip/zulip/assets/66828942/df04d6dc-5c7a-4f28-8852-a29d5e2b2b03"">



</details>

<details>
<summary>Tooltip:</summary>
<br>

<img width=""265"" alt=""Screenshot 2023-09-08 at 11 45 56 AM"" src=""https://github.com/zulip/zulip/assets/66828942/58a5bcbd-ca5e-46d4-8a85-df22c3361552"">


</details>


<details>
<summary>View Port changes:</summary>
<br>

![port changes ](https://github.com/zulip/zulip/assets/66828942/f26a889d-3db5-41b2-b2cd-26a5ba296e08)



<br>

<br>

![port changes](https://github.com/zulip/zulip/assets/66828942/a97f53e3-2176-49a6-bf77-6c6026dc89d7)




</details>



<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>

- This is the new PR with latest changes and suggestions, because of some issues I had to close the last PR: [#23143](https://github.com/zulip/zulip/pull/23143)",False,24043,https://api.github.com/repos/zulip/zulip/pulls/24043,https://github.com/zulip/zulip/pull/24043,open,48,3,7,3,23,10,6,0,"[{'name': 'priority: high'}, {'name': 'size: L'}, {'name': 'has conflicts'}, {'name': 'area: message feed (UI)'}, {'name': 'UI experiment'}, {'name': 'chat.zulip.org review'}]",2023-01-12 03:04:29+00:00,,0.0,,"[{'comment_id': 1095265377, 'comment_body': 'This very likely needs similar logic in `dark_theme.css`.', 'comment_created': datetime.datetime(2023, 2, 3, 1, 45, 8, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1095265539, 'comment_body': 'Why does this need to change?', 'comment_created': datetime.datetime(2023, 2, 3, 1, 45, 28, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1095265683, 'comment_body': 'I think this can be indented 4 less.', 'comment_created': datetime.datetime(2023, 2, 3, 1, 45, 47, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1095266128, 'comment_body': ""This `nth-child` logic feels very hairy; how can I convince myself that it's correct."", 'comment_created': datetime.datetime(2023, 2, 3, 1, 46, 50, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1095269403, 'comment_body': 'This comment is confusing -- I think you want to say a lot more clearly that `compose_actions.quote_and_reply` acts on the currently selected message rather than taking a message parameter, so we need to select the target message before calling that.\r\n\r\nThe right fix may be to refactor that function to support taking a message parameter instead of doing this.', 'comment_created': datetime.datetime(2023, 2, 3, 1, 49, 53, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1095325244, 'comment_body': 'With the new icon, the gap between the `pencil/source code` and `quote and reply` looks smaller as compared to the gap between the others. To ensure the UI remains consistent, I changed it to 20px.\r\n\r\n**with 12px:**\r\n![Screenshot from 2023-02-03 09-04-53](https://user-images.githubusercontent.com/66828942/216507009-65bff6b4-ffb8-4a68-b604-e7aba73e9ee2.png)\r\n![Screenshot from 2023-02-03 09-05-01](https://user-images.githubusercontent.com/66828942/216507018-01daf178-6347-4802-ba21-ddeba0225b48.png)\r\n\r\n**with 20px:**\r\n![Screenshot from 2023-02-03 09-05-12](https://user-images.githubusercontent.com/66828942/216507048-f21a7094-50fa-4fb5-ad8c-8f5e94094cc7.png)\r\n![Screenshot from 2023-02-03 09-05-22](https://user-images.githubusercontent.com/66828942/216507063-49f2bc1f-6403-4fa3-b933-4c1e15de9630.png)\r\n', 'comment_created': datetime.datetime(2023, 2, 3, 3, 39, 48, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1095326846, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 2, 3, 3, 44, 41, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1095328030, 'comment_body': ""I don't think this logic needs to be in `dark_theme.css` since the hover effect works as expected in the dark theme as well.\r\n![hover](https://user-images.githubusercontent.com/66828942/216508010-f2b61b4e-d93a-4a98-a061-b70377860f06.gif)\r\n"", 'comment_created': datetime.datetime(2023, 2, 3, 3, 47, 54, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1098368721, 'comment_body': 'The `compose_actions.quote_and_reply` acts on the currently selected message. To make the clicked message the selected one, I fetch the closest row using `e.target` and then select that particular message for further functionality. To be more precise, I have changed the code. However, if you still feel that the function needs to be refactored to take a message parameter, could you please specify what type of message parameter you expect the function to take.', 'comment_created': datetime.datetime(2023, 2, 7, 9, 2, 1, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1132914850, 'comment_body': 'I used the `nth-child` approach since it takes the element from the start, and the respond_button is the second element to be removed. However, I found that there are some cases where this `nth-child` approach does not work. Therefore, I have replaced it and am now using just the classname to hide the button when the screen width is below 1080px.', 'comment_created': datetime.datetime(2023, 3, 10, 21, 44, 42, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}]","[{'commit_sha': '54c3d64775540da1e8fcd40667dbf9c1b8661f75', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dad671a8b606e4a9116bdf29a19b6b5c4e89071d', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ac62e90c0bc92f6770aa7ede47e7f46560b0c70', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}]",PALASH BADERIA,66828942,palash.baderia@outlook.com,User,,54,,55,43
1231133001,settings: Convert names to pills in organization settings.,"- [x] Convert the plan anchor tags to pills displaying the user's avatar with the proper user name.
- [x] Users, Bots, Bot owners, Deactivated users all are migrated to pills.
- [x] If the name is too long or the viewport becomes smaller, the user's name is trimmed and abbreviated with ellipsis `...`
- [x]  When the viewport goes below 'lg_min' (992px), the email column is dropped from all three tables: users, deactivated     
          users, and bots.
- [x] Show `no owner` as a plain text inside bots table.
- [x] Rename name column to `User`.
- [x] Adjust the column widths to improve the visibility of tables.
- [x] Change the color of the pills for the dark theme.
- [x] Change the default width of the user column from 100px to occupy 30% of the  space.
- [x] Add a tippy tooltip for name pills.

-------------

Fixes: #24229
CZO: [Thread](https://chat.zulip.org/#narrow/stream/101-design/topic/Convert.20name.20to.20avatar.20pills.20in.20settings.20.2324308)
for Rows issue: [Thread](https://chat.zulip.org/#narrow/stream/49-development-help/topic/Settings.20Table.20Rows.20CSS.20Transparency)

------------------

### Screenshots and screen captures:

<details>
<summary>Overall Changes:</summary>

![overall](https://user-images.githubusercontent.com/66828942/223624376-3a691ab7-e68e-45db-83aa-c4fa4f2131ea.gif)


</details>

<details>
<summary>User Pill:</summary>

| Light | Dark |
|---------|---------|
| ![Screenshot from 2023-03-08 10-30-39](https://user-images.githubusercontent.com/66828942/223624465-017f4579-5c50-47c6-ba2a-08315a5bb086.png) | ![Screenshot from 2023-03-08 10-30-26](https://user-images.githubusercontent.com/66828942/223624484-7b892bb7-f99b-4afb-968a-cc04bae79837.png) |



</details>

<details>
<summary>Ellipses Change:</summary>

<br>

![ellipsis_change](https://user-images.githubusercontent.com/66828942/223624607-19e7bc38-3713-4f71-8ca9-42387d61df5f.gif)


</details>

<details>
<summary>Users UI:</summary>

**Light:**

![Screenshot from 2023-03-08 10-32-45](https://user-images.githubusercontent.com/66828942/223624694-001e9f3c-ac6e-4454-987c-2de12eb03207.png)

<br/>

**Dark:**

![Screenshot from 2023-03-08 10-32-34](https://user-images.githubusercontent.com/66828942/223624711-48a7e22f-f157-4edf-b7ee-554aa77a915a.png)


</details>

<details>
<summary>Bots list:</summary>

**Light:**

 ![Screenshot from 2023-03-08 10-32-58](https://user-images.githubusercontent.com/66828942/223624813-062cbfe3-105d-4e35-88ee-604b70fbffc1.png)

<br/>

**Dark:**

![Screenshot from 2023-03-08 10-33-06](https://user-images.githubusercontent.com/66828942/223624841-8b44d4c9-522e-4869-974a-61ec08878be8.png)



</details>

<details>
<summary>View port changes:</summary>
<details>
<summary>Bots list:</summary>

![bots_change](https://user-images.githubusercontent.com/66828942/223625523-f5c2bdb7-9340-4fa2-98ff-a7cb52ce8b8f.gif)

</details>
<details>
<summary>Users list:</summary>

![users_change](https://user-images.githubusercontent.com/66828942/223625583-be251dbe-83ca-4eb2-bea9-13a68ec5d082.gif)


</details>
</details>

<details>
<summary>Tippy tooltip:</summary>
<br>

<img width=""214"" alt=""tooltip_name_pills"" src=""https://github.com/zulip/zulip/assets/66828942/d62dfdd1-b617-4555-aab1-9b74b2f2bd87"">

</details>


<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [ ] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",False,24308,https://api.github.com/repos/zulip/zulip/pulls/24308,https://github.com/zulip/zulip/pull/24308,closed,122,27,9,6,24,19,3,0,"[{'name': 'area: settings UI'}, {'name': 'size: XL'}, {'name': 'has conflicts'}]",2023-02-06 22:03:31+00:00,2024-08-06 07:01:32+00:00,47206681.0,"546 days, 8:58:01","[{'comment_id': 1133547356, 'comment_body': 'We try to avoid such unnecessary addition or removal of lines.', 'comment_created': datetime.datetime(2023, 3, 13, 7, 51, 1, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 1133557555, 'comment_body': 'In other pills we use `small_avatar_url_for_person`. And also, the `avatar_url` stores the small avatar url as mention in comments for `medium_avatar_url_for_person`, so this if-else block is also inconsistent I think.', 'comment_created': datetime.datetime(2023, 3, 13, 8, 3, 28, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 1133662250, 'comment_body': 'I can see that some of these properties are non-standard and may have some issues [here[(https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-line-clamp). Can we instead use flex layout? If there is no other way to make this work as expected, as we already use these properties in a couple of places, but we can try once. ', 'comment_created': datetime.datetime(2023, 3, 13, 9, 39, 45, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 1210900339, 'comment_body': 'Changed this to use flex layout. ', 'comment_created': datetime.datetime(2023, 5, 30, 22, 49, 59, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1210913345, 'comment_body': 'Removed it.', 'comment_created': datetime.datetime(2023, 5, 30, 23, 6, 7, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1210919134, 'comment_body': 'Simplified the if-else block and replaced `medium_avatar_url_for_person` with `small_avatar_url_for_person`. I had this block because the `user_object/bot_object` already had an `avatar_url` present, and in cases where this might be empty, I used `medium_avatar_url_for_person`.', 'comment_created': datetime.datetime(2023, 5, 30, 23, 10, 41, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1211053206, 'comment_body': 'Do we need this? I cannot see any change in behavior when removing it and I guess default outline value for span elements should be none.', 'comment_created': datetime.datetime(2023, 5, 31, 3, 42, 34, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 1211056655, 'comment_body': 'I think there is too much space between the name and icon here and it looks odd. Can you try having icon close to the name?\r\n![Screenshot from 2023-05-31 09-19-16](https://github.com/zulip/zulip/assets/35494118/30327104-9909-4aed-989c-b7cbf239386e)\r\n\r\n', 'comment_created': datetime.datetime(2023, 5, 31, 3, 50, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 1211169716, 'comment_body': 'I am also not sure whether we need `word-break`, `white-space` and `overflow` properties here as I cannot see any change in behavior after removing them and I guess it should not have an effect as `pill-container` does not contain any text directly. Can you please confirm this?', 'comment_created': datetime.datetime(2023, 5, 31, 6, 53, 15, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 1211195676, 'comment_body': 'We generally avoid using `!important`. Would be better to instead use a more specific selector.', 'comment_created': datetime.datetime(2023, 5, 31, 7, 13, 48, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 1211195841, 'comment_body': 'We generally avoid using `!important`. Would be better to instead use a more specific selector.', 'comment_created': datetime.datetime(2023, 5, 31, 7, 14, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 1211197302, 'comment_body': 'Here also you can avoid using `important` by using a more specific selector.', 'comment_created': datetime.datetime(2023, 5, 31, 7, 15, 25, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 1221811028, 'comment_body': 'The border is for the light theme. However, I have removed the outline because it is unnecessary.\r\n\r\n<img width=""137"" alt=""light_theme"" src=""https://github.com/zulip/zulip/assets/66828942/c8a702d3-a991-48dc-a410-7562ad345303"">\r\n\r\n', 'comment_created': datetime.datetime(2023, 6, 7, 15, 37, 28, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1221815121, 'comment_body': 'sure, I have changed it to this:\r\n\r\n<img width=""102"" alt=""deactivated"" src=""https://github.com/zulip/zulip/assets/66828942/9b365cb8-626f-43d0-9da3-e8c8599ecd5f"">\r\n', 'comment_created': datetime.datetime(2023, 6, 7, 15, 39, 25, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1221821282, 'comment_body': ""Thank you for bringing that to my attention. I have removed those values. I'm not entirely sure why I included them. Perhaps it was an oversight while migrating from webkit to flex layout. In any case, they have been removed now."", 'comment_created': datetime.datetime(2023, 6, 7, 15, 42, 31, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1221826928, 'comment_body': ""I have replaced it with a new ID. I'm not certain if this approach is correct or not. Please let me know if you have a better approach for this. Another approach that comes to mind is modifying the `app_components.css` file to include a check using `:not` to exclude applying the min-width to this specific column. However, I chose not to modify the `app_components.css` and instead added a new ID called `user_id_column`."", 'comment_created': datetime.datetime(2023, 6, 7, 15, 46, 21, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1221827298, 'comment_body': 'Same reason as above.', 'comment_created': datetime.datetime(2023, 6, 7, 15, 46, 36, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1224060102, 'comment_body': 'Would be better to use `small_avatar_url_for_person` here as well I guess.', 'comment_created': datetime.datetime(2023, 6, 9, 9, 20, 7, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 1227955972, 'comment_body': 'replaced it with `small_avatar_url_for_person`', 'comment_created': datetime.datetime(2023, 6, 13, 11, 16, 52, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}]","[{'commit_sha': '86a2debe1084d475f4f135b56854a6dc5e9a3d13', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4080452631e1fccf57ae22c8ea244b6146b5aa6', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3493a048764e2ade809f39ecb704ac5733dfa351', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2e3e545ca881f6295e9071589800e54ade91a8f', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7f06578007387f34dd3f15b9fc5561bd376f536', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73c197e429f3ef24287117585772635926536c43', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}]",PALASH BADERIA,66828942,palash.baderia@outlook.com,User,,54,,55,43
1273886508,organization_settings: Add dropdown to filter users list by role.,"- [x] Adds a dropdown in the `organization settings>users list` page to filter the users list by role.
- [x] By default the user_list will be sorted according to the role, from highest permissions to lowest permissions (Owners, Administrators, moderators, members, guests).
- [x] Dropdown works for different languages also.

----------------------------------

Fixes: #18617

--------------------------------

**Screenshots and screen captures:**

<details>
<summary>Users list header:</summary>
<br>

- Before:

![Screenshot from 2023-03-14 01-14-28](https://user-images.githubusercontent.com/66828942/224815658-412fdb40-815c-4cd2-a8a7-1eef1df1eaa1.png)

<br>

- After:

![Screenshot from 2023-03-31 05-22-38](https://user-images.githubusercontent.com/66828942/228989635-b3905e6f-a169-4ade-a1bc-f79560beb031.png)

<br>

- Narrow Screen:

![Screenshot from 2023-03-31 05-22-52](https://user-images.githubusercontent.com/66828942/228989661-ff260c3a-d5ed-4f9e-9884-2fec21da3c06.png)


</details>
<details>
<summary>Filter users list (demo):</summary>
<br>

- **English:**
![filter](https://user-images.githubusercontent.com/66828942/224816169-28200dc1-9de6-482d-a5d0-133a5c01a3aa.gif)


- **Other language:**

![fil](https://user-images.githubusercontent.com/66828942/224817080-8d38d06d-99e0-46ca-b981-6b420f894fc4.gif)

</details>

<details>
<summary>Default users list:</summary>
<br>

![Screenshot from 2023-03-14 01-18-26](https://user-images.githubusercontent.com/66828942/224816349-8804ca4e-fe2a-4c06-83aa-a329a2c907c9.png)


</details>

-----------------------------------------

- Difference from previous plan:
> The issue description said to implement a `multiSelectDropdown`, however, we have not tested the `multiSelectDropdownList` properly. So, we can just go ahead with the `singleSelectDropdown` for the first iteration and then migrate to multi once it has been tested properly.

-------------------------------------------

<details>
<summary>Self-review checklist</summary>

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/commit-discipline.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
</details>
",False,24671,https://api.github.com/repos/zulip/zulip/pulls/24671,https://github.com/zulip/zulip/pull/24671,closed,91,5,7,3,23,11,6,0,"[{'name': 'good first issue'}, {'name': 'area: settings (admin/org)'}, {'name': 'area: settings UI'}, {'name': 'size: L'}, {'name': 'has conflicts'}, {'name': 'completion candidate'}]",2023-03-13 19:58:45+00:00,2024-04-10 20:19:43+00:00,34042858.0,"394 days, 0:20:58","[{'comment_id': 1155801493, 'comment_body': 'Instead of hardcoding values, we can use the values from `setttings_config.user_role_values` object here.', 'comment_created': datetime.datetime(2023, 4, 3, 10, 52, 28, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 1156003105, 'comment_body': ""I don't think we need to add this function. The function is simple enough and is not re-used anywhere currently, and we can add this code directly in the `.filter` call below."", 'comment_created': datetime.datetime(2023, 4, 3, 13, 57, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 1156008205, 'comment_body': 'We already have `sort_role` defined in `settings_users.js`. I think you can just directly pass the existing sorting function in `init_sort` field as well.', 'comment_created': datetime.datetime(2023, 4, 3, 14, 1, 40, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 1156555290, 'comment_body': 'Changed it to use `setttings_config.user_role_values` to list all the roles, however we need the dropdown to list roles in a hierarchical order from higher level to lower level. Therefore,reversed the return value of the function before appending it. Additionally, we wanted to include the title `All roles` in the dropdown, so hardcoded it since it is not present in `user_role_values`. \r\n', 'comment_created': datetime.datetime(2023, 4, 3, 23, 45, 16, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1156555438, 'comment_body': 'Changed it.', 'comment_created': datetime.datetime(2023, 4, 3, 23, 45, 33, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1156555830, 'comment_body': 'Refactored the existing `sort_role` function to work with list_widget.', 'comment_created': datetime.datetime(2023, 4, 3, 23, 46, 17, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1292865493, 'comment_body': '@sahil839 , you mentioned above this comment:\r\n\r\n> Though, I am not sure about the approach here. I think we should only have a single filter function and it should consider all the filters available for the table - in this case both search input and the role dropdown rather than passing filter and then role_filter separately. \r\n\r\nso do you want me to combine this and the above `get_filtered_items` function together or do you have something else in mind\r\n\r\n', 'comment_created': datetime.datetime(2023, 8, 13, 22, 22, 48, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1293229909, 'comment_body': 'Yeah. Basically, a single function `get_filtered_items` should return the filtered list considering the search input and any other filters option present, which is role in this case.', 'comment_created': datetime.datetime(2023, 8, 14, 9, 32, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 1301495977, 'comment_body': '@sahil839 , just to confirm once before starting the work on this, so `settings_users.js` initiates the `list_widget` and sends 2 different filters option, `filterer` and `role_filterer`, and then we have two different filter functions as above, so do you want me to change the whole code path like merging both the search and filter option together from the starting, or just merge the above two functions so that we call only single function for the filter and leave everything same.', 'comment_created': datetime.datetime(2023, 8, 22, 11, 23, 29, tzinfo=datetime.timezone.utc), 'commenter': 'palashb01', 'type': 'User'}, {'comment_id': 1305404883, 'comment_body': 'I meant that `filterer` should be set to a single function which would check values for both search input and role dropdown and return the result accordingly. And the `filter.$element` should also be modified accordingly such that list is rendered on changing any one of search input or role dropdown.', 'comment_created': datetime.datetime(2023, 8, 25, 9, 9, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sahil839', 'type': 'User'}, {'comment_id': 1342221371, 'comment_body': 'Should this be using `dropdown_widget.js` instead of patching `list_widget.js`?', 'comment_created': datetime.datetime(2023, 10, 2, 1, 5, 3, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '6ce06c0503bc29c2ace6624424f98b2b23b27b25', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e0ad0e927974689c9e328e47ebbcd368b8032fe', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0578fbac0a1adc2e6f4db2827ab7d6ef7b04c35', 'committer_username': 'palashb01', 'committer_name': 'PALASH BADERIA', 'committer_email': 'palash.baderia@outlook.com', 'commit_date': datetime.datetime(2020, 6, 12, 11, 15, 3, tzinfo=datetime.timezone.utc)}]",PALASH BADERIA,66828942,palash.baderia@outlook.com,User,,54,,55,43

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
43160685,zulip,zulip/zulip,Python,7612,21000,376,1133,60212,2483,28,808,"[{'id': 1505393821, 'number': 26654, 'closed': datetime.datetime(2023, 9, 7, 23, 55, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 6, 23, 2, 39, tzinfo=datetime.timezone.utc), 'time_taken': 89588.0, 'time_delta': '1 day, 0:53:08', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1490819132, 'number': 26587, 'closed': None, 'created': datetime.datetime(2023, 8, 27, 0, 26, 41, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 39, 'deletions': 0, 'state': 'open'}, {'id': 1473046155, 'number': 26483, 'closed': datetime.datetime(2023, 9, 14, 1, 17, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 12, 19, 47, 18, tzinfo=datetime.timezone.utc), 'time_taken': 2784590.0, 'time_delta': '32 days, 5:29:50', 'additions': 73, 'deletions': 32, 'state': 'closed'}, {'id': 1458754667, 'number': 26396, 'closed': datetime.datetime(2024, 4, 18, 0, 42, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 20, 55, 42, tzinfo=datetime.timezone.utc), 'time_taken': 22477587.0, 'time_delta': '260 days, 3:46:27', 'additions': 120, 'deletions': 10, 'state': 'closed'}, {'id': 1454573820, 'number': 26380, 'closed': datetime.datetime(2023, 8, 22, 18, 56, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 29, 1, 21, 37, tzinfo=datetime.timezone.utc), 'time_taken': 2136905.0, 'time_delta': '24 days, 17:35:05', 'additions': 104, 'deletions': 41, 'state': 'closed'}, {'id': 1431671481, 'number': 26245, 'closed': datetime.datetime(2023, 8, 24, 23, 28, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 12, 17, 12, 36, tzinfo=datetime.timezone.utc), 'time_taken': 3737730.0, 'time_delta': '43 days, 6:15:30', 'additions': 24, 'deletions': 48, 'state': 'closed'}, {'id': 1419822217, 'number': 26183, 'closed': datetime.datetime(2023, 9, 10, 18, 20, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 4, 15, 10, 19, tzinfo=datetime.timezone.utc), 'time_taken': 5886596.0, 'time_delta': '68 days, 3:09:56', 'additions': 163, 'deletions': 20, 'state': 'closed'}, {'id': 1414744849, 'number': 26161, 'closed': datetime.datetime(2023, 7, 1, 0, 33, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 30, 12, 0, 32, tzinfo=datetime.timezone.utc), 'time_taken': 45193.0, 'time_delta': '12:33:13', 'additions': 8, 'deletions': 2, 'state': 'closed'}, {'id': 1404311343, 'number': 26101, 'closed': None, 'created': datetime.datetime(2023, 6, 23, 0, 40, 18, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 10, 'deletions': 2, 'state': 'open'}, {'id': 1396654673, 'number': 26049, 'closed': datetime.datetime(2024, 6, 4, 16, 48, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 17, 7, 10, 30, tzinfo=datetime.timezone.utc), 'time_taken': 30533855.0, 'time_delta': '353 days, 9:37:35', 'additions': 206, 'deletions': 66, 'state': 'closed'}, {'id': 1393386923, 'number': 26031, 'closed': datetime.datetime(2023, 9, 11, 17, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 15, 4, 1, 5, tzinfo=datetime.timezone.utc), 'time_taken': 7652275.0, 'time_delta': '88 days, 13:37:55', 'additions': 283, 'deletions': 121, 'state': 'closed'}, {'id': 1377487566, 'number': 25883, 'closed': datetime.datetime(2023, 7, 12, 0, 33, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 4, 2, 32, 34, tzinfo=datetime.timezone.utc), 'time_taken': 3276032.0, 'time_delta': '37 days, 22:00:32', 'additions': 49, 'deletions': 4, 'state': 'closed'}, {'id': 1371426392, 'number': 25848, 'closed': datetime.datetime(2023, 7, 6, 23, 11, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 31, 4, 2, 2, tzinfo=datetime.timezone.utc), 'time_taken': 3179347.0, 'time_delta': '36 days, 19:09:07', 'additions': 59, 'deletions': 11, 'state': 'closed'}, {'id': 1366943191, 'number': 25786, 'closed': datetime.datetime(2023, 5, 28, 22, 22, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 26, 22, 8, 9, tzinfo=datetime.timezone.utc), 'time_taken': 173639.0, 'time_delta': '2 days, 0:13:59', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1343176098, 'number': 25486, 'closed': datetime.datetime(2023, 5, 9, 16, 39, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 9, 5, 40, 40, tzinfo=datetime.timezone.utc), 'time_taken': 39547.0, 'time_delta': '10:59:07', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1331118352, 'number': 25322, 'closed': datetime.datetime(2023, 4, 28, 0, 36, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 27, 23, 33, 44, tzinfo=datetime.timezone.utc), 'time_taken': 3784.0, 'time_delta': '1:03:04', 'additions': 7, 'deletions': 0, 'state': 'closed'}, {'id': 1326937908, 'number': 25274, 'closed': datetime.datetime(2023, 9, 29, 20, 8, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 25, 11, 4, 37, tzinfo=datetime.timezone.utc), 'time_taken': 13597433.0, 'time_delta': '157 days, 9:03:53', 'additions': 37, 'deletions': 0, 'state': 'closed'}, {'id': 1319265160, 'number': 25179, 'closed': datetime.datetime(2023, 5, 1, 5, 33, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 19, 5, 5, 44, tzinfo=datetime.timezone.utc), 'time_taken': 1038451.0, 'time_delta': '12 days, 0:27:31', 'additions': 67, 'deletions': 84, 'state': 'closed'}, {'id': 1316357567, 'number': 25150, 'closed': datetime.datetime(2023, 9, 30, 15, 11, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 17, 10, 25, 1, tzinfo=datetime.timezone.utc), 'time_taken': 14359578.0, 'time_delta': '166 days, 4:46:18', 'additions': 1, 'deletions': 4, 'state': 'closed'}, {'id': 1315771246, 'number': 25147, 'closed': datetime.datetime(2023, 4, 18, 17, 3, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 16, 23, 49, 18, tzinfo=datetime.timezone.utc), 'time_taken': 148432.0, 'time_delta': '1 day, 17:13:52', 'additions': 43, 'deletions': 1, 'state': 'closed'}, {'id': 1315504161, 'number': 25144, 'closed': datetime.datetime(2023, 4, 17, 22, 42, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 16, 11, 20, 6, tzinfo=datetime.timezone.utc), 'time_taken': 127336.0, 'time_delta': '1 day, 11:22:16', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1315449154, 'number': 25143, 'closed': None, 'created': datetime.datetime(2023, 4, 16, 9, 36, 45, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 36, 'deletions': 15, 'state': 'open'}, {'id': 1314850365, 'number': 25132, 'closed': datetime.datetime(2023, 4, 19, 17, 5, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 15, 1, 7, 20, tzinfo=datetime.timezone.utc), 'time_taken': 403109.0, 'time_delta': '4 days, 15:58:29', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 1313556571, 'number': 25120, 'closed': datetime.datetime(2023, 4, 21, 20, 52, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 14, 6, 44, 47, tzinfo=datetime.timezone.utc), 'time_taken': 655636.0, 'time_delta': '7 days, 14:07:16', 'additions': 30, 'deletions': 59, 'state': 'closed'}, {'id': 1309000566, 'number': 25075, 'closed': datetime.datetime(2023, 4, 29, 2, 14, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 11, 13, 13, 45, tzinfo=datetime.timezone.utc), 'time_taken': 1515616.0, 'time_delta': '17 days, 13:00:16', 'additions': 39, 'deletions': 11, 'state': 'closed'}, {'id': 1308418089, 'number': 25071, 'closed': None, 'created': datetime.datetime(2023, 4, 11, 5, 33, 36, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 56, 'deletions': 52, 'state': 'open'}, {'id': 1306206574, 'number': 25033, 'closed': None, 'created': datetime.datetime(2023, 4, 7, 20, 27, 36, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 167, 'deletions': 17, 'state': 'open'}, {'id': 1299699455, 'number': 24965, 'closed': datetime.datetime(2023, 4, 24, 18, 45, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 3, 9, 6, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1849168.0, 'time_delta': '21 days, 9:39:28', 'additions': 90, 'deletions': 25, 'state': 'closed'}, {'id': 1299224419, 'number': 24959, 'closed': datetime.datetime(2023, 4, 2, 23, 45, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 2, 21, 45, 52, tzinfo=datetime.timezone.utc), 'time_taken': 7202.0, 'time_delta': '2:00:02', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 1299182734, 'number': 24956, 'closed': datetime.datetime(2023, 4, 13, 20, 16, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 2, 18, 42, 19, tzinfo=datetime.timezone.utc), 'time_taken': 956039.0, 'time_delta': '11 days, 1:33:59', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1283424421, 'number': 24783, 'closed': datetime.datetime(2023, 4, 5, 23, 47, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 20, 23, 14, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1384410.0, 'time_delta': '16 days, 0:33:30', 'additions': 134, 'deletions': 250, 'state': 'closed'}, {'id': 1283322028, 'number': 24781, 'closed': datetime.datetime(2023, 3, 30, 16, 10, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 20, 21, 27, 8, tzinfo=datetime.timezone.utc), 'time_taken': 844993.0, 'time_delta': '9 days, 18:43:13', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1273886508, 'number': 24671, 'closed': datetime.datetime(2024, 4, 10, 20, 19, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 13, 19, 58, 45, tzinfo=datetime.timezone.utc), 'time_taken': 34042858.0, 'time_delta': '394 days, 0:20:58', 'additions': 91, 'deletions': 5, 'state': 'closed'}, {'id': 1271568644, 'number': 24642, 'closed': datetime.datetime(2023, 3, 15, 15, 17, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 10, 18, 34, 50, tzinfo=datetime.timezone.utc), 'time_taken': 420171.0, 'time_delta': '4 days, 20:42:51', 'additions': 23, 'deletions': 1, 'state': 'closed'}, {'id': 1268076201, 'number': 24623, 'closed': datetime.datetime(2023, 4, 11, 5, 38, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 8, 15, 49, 20, tzinfo=datetime.timezone.utc), 'time_taken': 2900957.0, 'time_delta': '33 days, 13:49:17', 'additions': 107, 'deletions': 102, 'state': 'closed'}, {'id': 1262875560, 'number': 24571, 'closed': datetime.datetime(2023, 3, 10, 0, 12, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 4, 1, 41, 45, tzinfo=datetime.timezone.utc), 'time_taken': 513060.0, 'time_delta': '5 days, 22:31:00', 'additions': 62, 'deletions': 62, 'state': 'closed'}, {'id': 1262796262, 'number': 24570, 'closed': datetime.datetime(2023, 3, 21, 18, 23, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 4, 0, 6, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1534639.0, 'time_delta': '17 days, 18:17:19', 'additions': 17, 'deletions': 18, 'state': 'closed'}, {'id': 1259786825, 'number': 24543, 'closed': datetime.datetime(2023, 3, 2, 22, 55, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 2, 3, 40, 6, tzinfo=datetime.timezone.utc), 'time_taken': 69336.0, 'time_delta': '19:15:36', 'additions': 15, 'deletions': 1, 'state': 'closed'}, {'id': 1254352704, 'number': 24487, 'closed': datetime.datetime(2023, 8, 15, 10, 27, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 26, 0, 35, 3, tzinfo=datetime.timezone.utc), 'time_taken': 14723549.0, 'time_delta': '170 days, 9:52:29', 'additions': 29, 'deletions': 13, 'state': 'closed'}, {'id': 1240651515, 'number': 24389, 'closed': datetime.datetime(2023, 10, 2, 0, 54, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 14, 14, 9, 44, tzinfo=datetime.timezone.utc), 'time_taken': 19824278.0, 'time_delta': '229 days, 10:44:38', 'additions': 13, 'deletions': 2, 'state': 'closed'}, {'id': 1235621255, 'number': 24344, 'closed': datetime.datetime(2023, 3, 27, 17, 11, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 9, 19, 31, 33, tzinfo=datetime.timezone.utc), 'time_taken': 3965990.0, 'time_delta': '45 days, 21:39:50', 'additions': 11, 'deletions': 1, 'state': 'closed'}, {'id': 1234191175, 'number': 24328, 'closed': datetime.datetime(2023, 3, 1, 23, 42, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 8, 21, 47, 31, tzinfo=datetime.timezone.utc), 'time_taken': 1821285.0, 'time_delta': '21 days, 1:54:45', 'additions': 16, 'deletions': 4, 'state': 'closed'}, {'id': 1231133001, 'number': 24308, 'closed': datetime.datetime(2024, 8, 6, 7, 1, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 6, 22, 3, 31, tzinfo=datetime.timezone.utc), 'time_taken': 47206681.0, 'time_delta': '546 days, 8:58:01', 'additions': 122, 'deletions': 27, 'state': 'closed'}, {'id': 1226277863, 'number': 24268, 'closed': datetime.datetime(2023, 2, 24, 2, 17, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 2, 9, 57, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1873223.0, 'time_delta': '21 days, 16:20:23', 'additions': 52, 'deletions': 30, 'state': 'closed'}, {'id': 1221960229, 'number': 24223, 'closed': datetime.datetime(2023, 2, 2, 9, 33, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 30, 16, 54, 43, tzinfo=datetime.timezone.utc), 'time_taken': 232728.0, 'time_delta': '2 days, 16:38:48', 'additions': 50, 'deletions': 0, 'state': 'closed'}, {'id': 1220696791, 'number': 24221, 'closed': datetime.datetime(2023, 5, 8, 13, 49, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 29, 16, 52, 31, tzinfo=datetime.timezone.utc), 'time_taken': 8542643.0, 'time_delta': '98 days, 20:57:23', 'additions': 94, 'deletions': 53, 'state': 'closed'}, {'id': 1194696375, 'number': 24043, 'closed': None, 'created': datetime.datetime(2023, 1, 12, 3, 4, 29, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 48, 'deletions': 3, 'state': 'open'}, {'id': 1191489136, 'number': 24022, 'closed': datetime.datetime(2023, 1, 19, 19, 13, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 9, 21, 41, 26, tzinfo=datetime.timezone.utc), 'time_taken': 855128.0, 'time_delta': '9 days, 21:32:08', 'additions': 23, 'deletions': 1, 'state': 'closed'}, {'id': 1189851433, 'number': 24014, 'closed': None, 'created': datetime.datetime(2023, 1, 8, 14, 54, 1, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 467, 'deletions': 8, 'state': 'open'}, {'id': 1183984602, 'number': 23969, 'closed': datetime.datetime(2023, 2, 7, 23, 15, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 3, 21, 56, 42, tzinfo=datetime.timezone.utc), 'time_taken': 3028739.0, 'time_delta': '35 days, 1:18:59', 'additions': 14, 'deletions': 5, 'state': 'closed'}, {'id': 1183826953, 'number': 23966, 'closed': datetime.datetime(2023, 1, 5, 21, 0, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 3, 18, 47, 44, tzinfo=datetime.timezone.utc), 'time_taken': 180792.0, 'time_delta': '2 days, 2:13:12', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1183390244, 'number': 23960, 'closed': datetime.datetime(2023, 1, 25, 22, 32, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 3, 11, 59, 18, tzinfo=datetime.timezone.utc), 'time_taken': 1938815.0, 'time_delta': '22 days, 10:33:35', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1169937863, 'number': 23899, 'closed': None, 'created': datetime.datetime(2022, 12, 18, 20, 21, 36, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 306, 'deletions': 4, 'state': 'open'}, {'id': 1119734958, 'number': 23542, 'closed': datetime.datetime(2023, 1, 31, 0, 49, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 12, 2, 37, 19, tzinfo=datetime.timezone.utc), 'time_taken': 6905510.0, 'time_delta': '79 days, 22:11:50', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1103743499, 'number': 23381, 'closed': datetime.datetime(2022, 11, 8, 19, 12, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 29, 0, 27, 15, tzinfo=datetime.timezone.utc), 'time_taken': 931505.0, 'time_delta': '10 days, 18:45:05', 'additions': 9, 'deletions': 3, 'state': 'closed'}, {'id': 1098353338, 'number': 23335, 'closed': datetime.datetime(2022, 10, 28, 21, 22, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 25, 4, 26, 45, tzinfo=datetime.timezone.utc), 'time_taken': 320170.0, 'time_delta': '3 days, 16:56:10', 'additions': 0, 'deletions': 5, 'state': 'closed'}, {'id': 1076646754, 'number': 23143, 'closed': datetime.datetime(2023, 1, 11, 18, 54, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 5, 0, 14, 5, tzinfo=datetime.timezone.utc), 'time_taken': 8534403.0, 'time_delta': '98 days, 18:40:03', 'additions': 37, 'deletions': 1, 'state': 'closed'}, {'id': 1073642085, 'number': 23119, 'closed': datetime.datetime(2022, 10, 4, 19, 22, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 1, 18, 57, 11, tzinfo=datetime.timezone.utc), 'time_taken': 260744.0, 'time_delta': '3 days, 0:25:44', 'additions': 0, 'deletions': 0, 'state': 'closed'}]"
