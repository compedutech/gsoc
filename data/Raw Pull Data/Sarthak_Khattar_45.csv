pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
515452214,Added dnstwist analyzer,"2 main issues so far:

1. dnstwist is not able to find dictionaries as such (directly running `dnstwist` in shell. I had to clone their source repo (which has a dictionaries folder) and then run it from inside the folder to make it work. It needs absolute path to dictionary. I'm not sure where the dictionaries folder is, when the program is downloaded via PyPi. We might need to store the dictionaries separately.

2. Even though I implemented the `additional_config_params`, the approach could be better. Would like to know how I can make it better.",True,243,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/243,https://github.com/intelowlproject/IntelOwl/pull/243,closed,98,2,7,1,10,7,0,0,[],2020-11-04 15:15:45+00:00,2020-11-10 13:29:21+00:00,512016.0,"5 days, 22:13:36","[{'comment_id': 517483326, 'comment_body': 'I think that this line is not required since `communicate` still waits for the end of the process.', 'comment_created': datetime.datetime(2020, 11, 4, 16, 45, 22, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 517485000, 'comment_body': 'to avoid duplication of code could you please move this code only on `utils.py` under the `CommonTestCases_url_domain` class? In this way you just need to write the test once', 'comment_created': datetime.datetime(2020, 11, 4, 16, 47, 46, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 517499890, 'comment_body': 'You could check the value in `stderr` and trigger an `AnalyzerRunException` in the case is populated.\r\n\r\nAlso, maybe you could verify that the output is supported JSON. Otherwise it would crash unexpectedly', 'comment_created': datetime.datetime(2020, 11, 4, 17, 9, 48, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 520495559, 'comment_body': 'care, this is a variable of the class. I would put this directly inside the `run` function.', 'comment_created': datetime.datetime(2020, 11, 10, 11, 35, 36, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 520496733, 'comment_body': 'Does this work? It would be better if you create an instance of `Logger` outside the function: `logger = logging.getLogger(__name__)` and then call `logger`. You can use as an example the `cymru.py` module.', 'comment_created': datetime.datetime(2020, 11, 10, 11, 37, 46, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 520499179, 'comment_body': ""Oh okay sure. May I ask why ? I don't think I know when to make a variable of the class and when not to."", 'comment_created': datetime.datetime(2020, 11, 10, 11, 42, 8, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 520500915, 'comment_body': ""in this way, that variable is shared among all the instances of the DNStwist class. The report must be different between each execution, so it can't be here. (https://www.digitalocean.com/community/tutorials/understanding-class-and-instance-variables-in-python-3). Otherwise the other strings you put are correctly placed there because they have to be the same in each execution."", 'comment_created': datetime.datetime(2020, 11, 10, 11, 45, 23, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}]","[{'commit_sha': '2bdacefc2918b81260792df45148d89958f90a87', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
521188464,added triage analyzer,"Have added file analyzer part of triage so far. I had a few doubts though:

1. In [triage_scan.py line 63](https://github.com/m0mosenpai/IntelOwl/blob/triage_analyzer/api_app/script_analyzers/file_analyzers/triage_scan.py#L63), I have used `/samples/{id}/events` endpoint to make sure the submitted sample has finished being processed so the subsequent requests to generate reports don't return a `report not available` error in their reponse. I'm not sure if this is ok or is it better to send periodic requests to check if the report has been generated?

2. In `supported_filetypes` in `analyzer_config.json`, I have added most of the supported ones mentioned in their api docs but there were a few i couldn't find a clear mime type for. Have skipped those for now.

3. I only added a test function in `EXETests` section in `test_files.py` for now. Since there are many file types supported, I was wondering if there is a common way to test all of them together or should I add separate tests for each filetype?",True,253,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/253,https://github.com/intelowlproject/IntelOwl/pull/253,closed,136,0,5,4,4,18,0,0,[],2020-11-15 12:32:10+00:00,2020-11-19 09:53:35+00:00,336085.0,"3 days, 21:21:25","[{'comment_id': 523988601, 'comment_body': 'I would remove the ""supported_filetypes"" completely', 'comment_created': datetime.datetime(2020, 11, 16, 8, 58, 57, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 523993666, 'comment_body': '""soft_time_limit"" parameter is missing here. Default is ""300s"". In your experience with the APIs, how much time is required usually to perform an analysis? Consider that this could vary. Please could you try with some of the provided files in the ""test_files.zip"" and paste here the effective time + the report data?', 'comment_created': datetime.datetime(2020, 11, 16, 9, 3, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 523999257, 'comment_body': 'Could you please explain the purpose of this loop?\r\n\r\nthe first iteration would check the previous request status code. It seems an error. Is this wanted? Otherwise, you could manage this with `break` and the check at the end of the cycle.', 'comment_created': datetime.datetime(2020, 11, 16, 9, 8, 44, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 524005258, 'comment_body': 'this is ok I think', 'comment_created': datetime.datetime(2020, 11, 16, 9, 14, 20, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 524005818, 'comment_body': 'could you please provide screenshot or paste of some example reports?', 'comment_created': datetime.datetime(2020, 11, 16, 9, 14, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 525019572, 'comment_body': 'I ran the test on a random sample i took from the publicly available ones. Summary and the other reports might have some redundant stuff. I found these endpoints in their docs and just compiled all the results. Will change/ remove things not needed.\r\n[Tree format from the GUI](https://imgur.com/a/BvdtVgX)\r\n[Raw](https://imgur.com/a/ln0XstJ)', 'comment_created': datetime.datetime(2020, 11, 17, 9, 48, 27, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 525022279, 'comment_body': '![image](https://user-images.githubusercontent.com/17424778/99374233-6364b480-28e8-11eb-8322-a0f0a8ecc78f.png)\r\n![image](https://user-images.githubusercontent.com/17424778/99375276-8a6fb600-28e9-11eb-9e80-a82befbbb5ca.png)\r\n\r\nI tested some random files on the GUI as well. Time to finish varied between ~160s and ~185s', 'comment_created': datetime.datetime(2020, 11, 17, 9, 52, 12, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 525049458, 'comment_body': ""This was intended for retrying sending requests incase response wasn't 200. I took reference from a few other analyzers for this. I can remove it if it's not necessary."", 'comment_created': datetime.datetime(2020, 11, 17, 10, 33, 37, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 525058929, 'comment_body': 'Ok, good idea but the request below is different from the previous one. Is this intended too?', 'comment_created': datetime.datetime(2020, 11, 17, 10, 48, 19, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 525063638, 'comment_body': 'Yes, I was thinking the same. My concern is to avoid duplicated data in the result to avoid confusion.\r\n\r\nAt a first glance it seems that the ""summary"" data are replicated in the ""overview"". So we can remove it I think.\r\n\r\nWhat about the data in the ""static"" report? are they replicated in the ""overview"" too?', 'comment_created': datetime.datetime(2020, 11, 17, 10, 55, 48, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 525065123, 'comment_body': 'They support almost anything so I would leave this empty', 'comment_created': datetime.datetime(2020, 11, 17, 10, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 525066011, 'comment_body': 'ok so we could put the soft_time_limit explicitly to 300 anyway. Otherwise the risk is that if we change the default value we change this too, creating a possible unwanted behavior', 'comment_created': datetime.datetime(2020, 11, 17, 10, 59, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 525428308, 'comment_body': 'I removed summary and added task specific reports. I noticed on the wesbite, that the analyzed report contains 4 or more parts : `overview`, `static_report`, `<task_1>`, `<task_2>` and so on as seen below. So i added a `task_report` alongside `overview` and `static_report` in the final json. I think all these reports share some common info but contain their own unique analysis.\r\n\r\n![image](https://user-images.githubusercontent.com/17424778/99437463-8028d880-2938-11eb-9e10-414c1abc76a1.png)\r\n\r\nThe overall structure looks like this now:\r\n![image](https://user-images.githubusercontent.com/17424778/99438149-6936b600-2939-11eb-81ac-62b223742682.png)\r\n\r\n', 'comment_created': datetime.datetime(2020, 11, 17, 19, 25, 50, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 525428714, 'comment_body': 'Oh no sorry that was a mistake. I made some changes to the way this is handled. Please have a look.', 'comment_created': datetime.datetime(2020, 11, 17, 19, 26, 30, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 526270564, 'comment_body': 'ok but this is still duplicated. you could rewrite this better with a single requests.post', 'comment_created': datetime.datetime(2020, 11, 18, 17, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 526277376, 'comment_body': 'ok, thank you for explaining this! \r\n\r\nAnyway I would change this to avoid too much data in the report. The best option could be to make this configurable. For instance, by default this analyzer could provide only the ""overview"" report. And, with a specific parameter, the analysis report could be ""complete"" with the static and the tasks reports too.', 'comment_created': datetime.datetime(2020, 11, 18, 17, 32, 17, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 526349579, 'comment_body': 'Added an option in `additional_config_params`  for this.', 'comment_created': datetime.datetime(2020, 11, 18, 19, 7, 25, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 526349678, 'comment_body': 'I made some changes to that and also restructured the code a bit.', 'comment_created': datetime.datetime(2020, 11, 18, 19, 7, 35, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}]","[{'commit_sha': 'a7ce03d5f5f130cded721ffd5c051f64329a9645', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7c8317e8201aae90c7cb405a5530ad2d0236d2f', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2815c56e3bfc28fa88cf54d91fe81ce43841d9f8', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59c91a562966725c64aa53585798239bd9863518', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
534708618,Added triage observable analyzer,"# Description

Added triage analyzer for scanning observables - searching through existing reports via URL or Hash query; or submitting a sample for analysis via a URL. Also added documentation for both triage observable and file analyzers.

## Fixes
closes #142 

## Type of change
- [x] New feature (non-breaking change which adds functionality).

# Checklist

- [x] The pull request is for the branch develop
- [x] I changed the file [Usage](https://github.com/intelowlproject/IntelOwl/blob/master/docs/source/Usage.md) and [ReadMe](https://github.com/intelowlproject/IntelOwl/blob/master/README.md) if I added a new analyzer. 
- [x] I have added tests in the [Tests](https://github.com/intelowlproject/IntelOwl/blob/master/tests) folder. 
- [x] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [x] I squashed the commits into a single one.

# Real World Example
1. `submit` config paramenter - submitting file via url (similar report generated as triage file analyzer)
![image](https://user-images.githubusercontent.com/17424778/101536522-214b0200-39c0-11eb-9234-c1d75282777d.png)

2. `search` config parameter - searching for reports via hash.
![image](https://user-images.githubusercontent.com/17424778/101537670-e944be80-39c1-11eb-98f1-16b2a9f17e06.png)
50 results (default) (max 200) in same format as above followed by a `next` key. I haven't implemented pagination using `next` as of now. A bit confused on how to go about it since next contains a date-time stamp of sorts. 
![image](https://user-images.githubusercontent.com/17424778/101537783-142f1280-39c2-11eb-8686-d761e1f3517f.png)

3. `search` config parameter - searching for reports via URL.
I couldn't find a good example of this (a malicious url) but report should be similar to the hash case.",True,283,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/283,https://github.com/intelowlproject/IntelOwl/pull/283,closed,188,3,6,1,2,10,0,0,[],2020-12-08 20:38:09+00:00,2020-12-14 19:17:09+00:00,513540.0,"5 days, 22:39:00","[{'comment_id': 539178914, 'comment_body': 'should be [`AnalyzerConfigurationException`](https://github.com/intelowlproject/IntelOwl/blob/fa472db8c9b3d4c7ec5201ec552f6f928b076814/api_app/exceptions.py#L5).\r\n\r\nThe error message should be something similar to [this](https://github.com/intelowlproject/IntelOwl/blob/1d1d61fd318c686776848d58733e6877d39b5ee1/api_app/script_analyzers/observable_analyzers/shodan.py#L32-L33).', 'comment_created': datetime.datetime(2020, 12, 9, 10, 15, 7, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 539180076, 'comment_body': '`soft_time_limit` should be outside of of `additional_config_param`', 'comment_created': datetime.datetime(2020, 12, 9, 10, 16, 45, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 539182611, 'comment_body': 'should duplicate this test for the case `test_triage_submit` passing `{ ""analysis_type"": ""submit"" }` as `additional_config_param`', 'comment_created': datetime.datetime(2020, 12, 9, 10, 20, 27, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 539182646, 'comment_body': 'should duplicate this test for the case `test_triage_submit` passing `""{ analysis_type"": ""submit"" }`', 'comment_created': datetime.datetime(2020, 12, 9, 10, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 540880918, 'comment_body': 'can you make this equal to 5 instead ', 'comment_created': datetime.datetime(2020, 12, 11, 11, 28, 2, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 540881167, 'comment_body': 'set `max_tries` to a fixed value of 10 or 20 (whichever u think is better in your experience of testing it) and remove it from the `additional_config_params`', 'comment_created': datetime.datetime(2020, 12, 11, 11, 28, 37, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 541558379, 'comment_body': 'please make same change on line number 985', 'comment_created': datetime.datetime(2020, 12, 12, 11, 29, 25, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 542385426, 'comment_body': 'should add `analysis_type: ""search""` parameter. Explicit is better than implicit.', 'comment_created': datetime.datetime(2020, 12, 14, 13, 32, 38, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 542389465, 'comment_body': 'add another key-value `""external_service"": true,`', 'comment_created': datetime.datetime(2020, 12, 14, 13, 38, 46, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 542389837, 'comment_body': 'I think this was left in your previous PR for triage so we can make the change here only, should add another key-value `""external_service"": true,`\r\n', 'comment_created': datetime.datetime(2020, 12, 14, 13, 39, 16, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}]","[{'commit_sha': '44e931c0e255adb4b08e3197ab0d53a473422c43', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
546960692,Added codecov.io coverage support,"# Description

Added necessary files and settings for codecov.io support for coverage reports as well as pull requests.

## Fixes
Point 3 in #229

## Type of change

Please delete options that are not relevant.

- [x] New feature (non-breaking change which adds functionality).
- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected).

# Checklist

- [x] The pull request is for the branch develop
- [x] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [x] I squashed the commits into a single one.

# Real World Example
![image](https://user-images.githubusercontent.com/17424778/103356431-e7f54600-4ad6-11eb-98e9-0ebdc4c91e98.png)

Screenshot of a report generated from a sample PR I made on my own fork of this repo.
",True,305,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/305,https://github.com/intelowlproject/IntelOwl/pull/305,closed,49,3,7,1,4,5,0,0,[],2020-12-30 14:12:58+00:00,2021-01-02 13:10:57+00:00,255479.0,"2 days, 22:57:59","[{'comment_id': 550223925, 'comment_body': 'If this variable is required only for CI, it should be set in the specific docker-compose file (`ci.override.yml`)...or, even better, you can just insert this variable in the specific env_file: `env_file_app_ci`', 'comment_created': datetime.datetime(2020, 12, 30, 15, 1, 8, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 550226108, 'comment_body': 'are these new dependencies required for production? I guess not. Those should be removed from here', 'comment_created': datetime.datetime(2020, 12, 30, 15, 7, 57, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 550229690, 'comment_body': 'please set this to `true`, otherwise we risk to be flooded by coverage comments in some PR. [Ref](https://docs.codecov.io/docs/pull-request-comments#requiring-changes)', 'comment_created': datetime.datetime(2020, 12, 30, 15, 19, 16, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 550462691, 'comment_body': ""well, the `django-nose` package needs to be under `INSTALLED_APPS` in `settings,py`. @m0mosenpai but we don't need the `coverage` package in the production requirements file so it can be removed."", 'comment_created': datetime.datetime(2020, 12, 31, 11, 26, 19, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 550462797, 'comment_body': 'agree with @mlodic ', 'comment_created': datetime.datetime(2020, 12, 31, 11, 26, 47, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}]","[{'commit_sha': 'fedc3eec661e8e6aafac0868a696898bd746eea5', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
574171178,Added PR template for new release,"# Description

Added a PR template for creating a new release

## Related issues
Closes #328 

## Type of change

Please delete options that are not relevant.

- [x] New feature (non-breaking change which adds functionality).

# Checklist

- [x] The pull request is for the branch develop
- [x] I squashed the commits into a single one.

# Real World Example
![image](https://user-images.githubusercontent.com/17424778/108064850-3f4d7680-7083-11eb-99a5-fc728d977f23.png)
",True,338,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/338,https://github.com/intelowlproject/IntelOwl/pull/338,closed,9,0,1,7,0,0,0,0,[],2021-02-16 12:48:55+00:00,2021-02-17 17:46:59+00:00,104284.0,"1 day, 4:58:04",[],"[{'commit_sha': '7463881edc8448fd6f9c78a8ca192412c1a49578', 'committer_username': 'mlodic', 'committer_name': 'Matteo Lodi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 1, 12, 6, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b9da07136a25ea3d050a84024b571f48baaf5ca', 'committer_username': 'mlodic', 'committer_name': 'Matteo Lodi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 1, 12, 6, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5226b098ad667a91961f3ff4fd4e5ec0011eff7', 'committer_username': 'mlodic', 'committer_name': 'Matteo Lodi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 1, 12, 6, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a902c569eb47db9aae30e4b4f4b7233a616844dc', 'committer_username': 'mlodic', 'committer_name': 'Matteo Lodi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 1, 12, 6, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5f1bc809cbb863431eb3bd7e9bb430ccfabb0b8', 'committer_username': 'mlodic', 'committer_name': 'Matteo Lodi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 1, 12, 6, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f2e6b1a400f8c5dec6d504fd15139774eef167a', 'committer_username': 'mlodic', 'committer_name': 'Matteo Lodi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 1, 12, 6, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '496bfa37f5b6cc172e754c64bf3aa892bbf9dc27', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
553402878,"Fixes #229: add tests for job, tag viewsets and other standalone API views | also improve some API view funcs","# Description

Added CRUD tests for Tags and tests for list jobs/ get jobs by id for the API. 

## Related issues
#229 Point 4 and 6.

## Type of change

- [X] New feature (non-breaking change which adds functionality).
- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected).

# Checklist

- [X] The pull request is for the branch develop
- [X] I have added tests in the [Tests](https://github.com/intelowlproject/IntelOwl/blob/master/tests) folder. 
- [x] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [x] I squashed the commits into a single one.

# Current thoughts/ issues

1. So far, I can't even create a tag. Am getting a `Bad Request` so I think I'm sending the data incorrectly in some way. 
2. What's the difference between creating a Tag object via `models.Tag` and sending an API request to create a tag. They might just be 2 completely different things I'm confusing.
3. As discussed on Slack, if the data doesn't persist between tests, I might have to create a tag each time before testing for listing them or deleting them etc. Because as of now, most of the tests give a `404` (creating a tag gives `400` and deleting is `Forbidden`).

Also, in regards to https://github.com/intelowlproject/IntelOwl/issues/229#issuecomment-756870257, I can work on addressing those concerns in this PR as well. Let me know your thoughts.
 ",True,317,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/317,https://github.com/intelowlproject/IntelOwl/pull/317,closed,237,82,2,21,9,18,0,0,[],2021-01-12 11:51:48+00:00,2021-04-02 09:22:37+00:00,6903049.0,"79 days, 21:30:49","[{'comment_id': 555806787, 'comment_body': 'the `label` and `color` here should be different. See my message on slack group.', 'comment_created': datetime.datetime(2021, 1, 12, 14, 22, 5, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 555809478, 'comment_body': '```python3\r\nself.assertEqual(models.Tag.objects.count(), 1)\r\ndata= {""label"": ""newTestLabel"", ""color"": ""#765A54""}\r\nresponse = self.client.post(""/api/tags"", data)\r\nself.assertEqual(response.status_code, 200) # might be 201\r\nself.assertEqual(models.Tag.objects.count(), 2)\r\n```', 'comment_created': datetime.datetime(2021, 1, 12, 14, 25, 38, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 556116302, 'comment_body': 'Listing and creation tests for both jobs and tags work but the rest still give a `404`. Also, still not sure how to go about getting sufficient permission for `delete`.', 'comment_created': datetime.datetime(2021, 1, 12, 21, 46, 25, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 556120304, 'comment_body': 'there is no PUT/DELETE for jobs, only for tags', 'comment_created': datetime.datetime(2021, 1, 12, 21, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 556313069, 'comment_body': ""Yes, sorry I meant listing works for jobs (GET) but get-by-id doesn't. For tags, create and list tags (GET) work but the rest don't, with delete giving a 403."", 'comment_created': datetime.datetime(2021, 1, 13, 7, 31, 52, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 558257718, 'comment_body': ""This is because the test job you create in `setUp` is via admin user and the test user doesn't have permission to view/delete it, \r\n\r\nSo we should test for 2x2 cases:\r\n1. By default, for the `job` created in `setUp`, test user doesn't have permission so the API gives 403. So we can have 2 test cases for this; 404 in view and 403 in delete.\r\n2. In the other 2 `test_job_get_by_id` and `test_job_delete_by_id` functions, we can use the guardian's `assign_perm` method  [(ref.)](https://django-guardian.readthedocs.io/en/stable/api/guardian.shortcuts.html#assign-perm) to give user permission to the test `job` and then we should receive 200 status code. So we can have 2 test cases for this; 200 in view and delete after assigning permission."", 'comment_created': datetime.datetime(2021, 1, 15, 11, 52, 7, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 558263757, 'comment_body': 'better to move this line to `setUp` function like `self.tag_id = os.environ.get(""TEST_TAG_ID"", ""1"")`', 'comment_created': datetime.datetime(2021, 1, 15, 12, 4, 54, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 558263942, 'comment_body': 'so to remove duplication from L228 and L234 too.', 'comment_created': datetime.datetime(2021, 1, 15, 12, 5, 21, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 558845881, 'comment_body': ""Yeah I was also thinking permissions were the issue since I tried sending a request manually via `curl` using `durin-auth-token` from my `django-admin-interface` and then it seemed to work.\r\n\r\nSo, I should split  `test_get<tag/job>_by_id`, `test_update_tag` (you didn't mention `PUT` for tags but I'm assuming it'll apply to this as well) and `test_delete_tag` tests each into 2 tests where in one i'm confirming that the user doesn't have enough permission to make those changes and in the other i'm giving the permission and then confirming that now they can? Did I understand that correctly?"", 'comment_created': datetime.datetime(2021, 1, 16, 11, 52, 12, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 558927960, 'comment_body': 'Yes. And you are right, get_by_id, put and delete.', 'comment_created': datetime.datetime(2021, 1, 16, 15, 29, 27, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 559027153, 'comment_body': 'move this to `setUp`.', 'comment_created': datetime.datetime(2021, 1, 16, 19, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 559027807, 'comment_body': 'i think this should be similar to Line 238.', 'comment_created': datetime.datetime(2021, 1, 16, 20, 0, 17, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 559030131, 'comment_body': 'this should be \r\n\r\n<code>\r\nclass ApiTagTests(<b>TestCase</b>)\r\n</code>', 'comment_created': datetime.datetime(2021, 1, 16, 20, 7, 9, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 559030713, 'comment_body': 'ideally we should rename this to `ApiJobTests` so the schema matches with the other `ApiTagTests`', 'comment_created': datetime.datetime(2021, 1, 16, 20, 8, 36, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 559033315, 'comment_body': ""I'm a bit confused. Previously also I thought about this, but we are not creating any job in the `setUp` of `ApiJobTests` class so why is the test `test_ask_analysis_result` successful when it sends a job id in the `data` field - asking the result for a job that has never been created? Assuming `setUp` runs everytime before each test and creates a new test database."", 'comment_created': datetime.datetime(2021, 1, 16, 20, 16, 15, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 559200003, 'comment_body': ""nice catch! turns out it's unintended behavour since we have hardcoded 200 status code in the `ask_analysis_resutlt` function. (https://github.com/intelowlproject/IntelOwl/blob/7463881edc8448fd6f9c78a8ca192412c1a49578/api_app/api.py#L346)\r\n\r\nSo we have to fix this as well."", 'comment_created': datetime.datetime(2021, 1, 17, 15, 52, 29, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 559239210, 'comment_body': ""Oh that makes sense. Looking at the `api.py` file, this seems to be a common theme followed in other endpoints as well so we could `assert` the response data in this test instead of the reponse code?\r\n\r\n> i think this should be similar to Line 238.\r\n\r\nYes but I wasn't sure what kind of a test job I should create since the model has a lot of parameters - what should the sample job look like. So I was about to come back to it after I had the Tag tests figured out.\r\n"", 'comment_created': datetime.datetime(2021, 1, 17, 21, 13, 31, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}]","[{'commit_sha': '08b58e5c1f1c5eac95953c88d185970353c4015e', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd604465c99d8c66b140e50d8e48826c7f29f9557', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4d6b0304c6d9d20f96d27d68387c9f8472bf9fe', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93f8607459471b2594ea7f8b542a102406bacc24', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd474b507841c13a6a436d7e30b277a5fc3ed333c', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '825466e83ebdc86d19e959a51f1d69d34d1b1788', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '951fb9a3954637ee1b8a5a726fc5c8cfb337f6dd', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '032687644d4876bbcd7bebb16c327b51ca6070ea', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e08698d5d66337ba988997097ea8878694258ae', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fadf6e58445828c200dab2c96586659a7dd73050', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ce68ce2fc4fcfe59a21c9e2d84ef37e7bed1fcc', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b31e4472ad4455ab917f5e466ccbd7b88cc2e221', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '398dad548f58ec7974ee96dcd1a226f9b8449600', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39666914deb3b3e69531fd25e4ddebb276b8dfce', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d2a3c2ef1bbe0d93b93b3dc4759f5f8cb91f394', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4111155180f0c814051a4adb552f260eaaec962b', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3435da0e164fdc1072b8453198c2e5aac360ffde', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c267c369150afaaf2f8bad6ff20c536d00048edd', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63f8f79e2ec2d1077f07f29f08b86cc1a3ce3794', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43bb5e2c0960ff4f637fa921bf79925e446b595e', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e3eefb2fe20e00bfbaaa3193cc2846d6cda3b21', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
601942715,Fixes #71: actions buttons on job page extracted into their own component,"Closes #71 

- [X] Create a new reusable component
- [X] Add template code from existing job-result component
- [x] Implement https://akveo.github.io/nebular/docs/components/actions/overview#nbactionscomponent
- [x] Use new reusable component in Result page
- [x] Finalize and test everything",True,83,https://api.github.com/repos/intelowlproject/IntelOwl-ng/pulls/83,https://github.com/intelowlproject/IntelOwl-ng/pull/83,closed,110,95,7,1,10,19,0,0,[],2021-03-26 22:50:10+00:00,2021-04-02 09:31:58+00:00,556908.0,"6 days, 10:41:48","[{'comment_id': 604779178, 'comment_body': '`job-actions-menu` is enough for the name.', 'comment_created': datetime.datetime(2021, 3, 31, 10, 26, 9, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 604779921, 'comment_body': 'all the code related to polling is not needed in this component.\r\n\r\nLine 18, 37, 105', 'comment_created': datetime.datetime(2021, 3, 31, 10, 27, 19, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 604781155, 'comment_body': 'The `job-actions-menu` folder/component should be placed inside of `/src/app/pages/dashboard/job-result/` folder i.e. the dashboard module, not the themes module.', 'comment_created': datetime.datetime(2021, 3, 31, 10, 29, 12, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 604781977, 'comment_body': 'need to pass the Job object from JobResult to new component. Use `@Input` decorator on the new component for receiving this.', 'comment_created': datetime.datetime(2021, 3, 31, 10, 30, 35, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 604784388, 'comment_body': ""> I'm bit unsure now as to how the program flow will be and how I should connect the 2 components so that I can use this new one inside the old JobResults one.\r\n\r\n@m0mosenpai. You've used the HTML tag correctly. Just need to pass the job object from JobResult component to the actions component (using the angular's `@Input` decorator to receive the prop). Angular has bit of a learning curve, so make sure to read about the basics. Like, how to structure the DOM, how to pass data from components, Input, Output, Event decorators, etc."", 'comment_created': datetime.datetime(2021, 3, 31, 10, 34, 55, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 604826942, 'comment_body': ""what about the subscription code in `ngOnInit()` ? Should only the polling part be removed or the entire thing? And if we aren't subscribing, what will come in `ngOninit()` instead? "", 'comment_created': datetime.datetime(2021, 3, 31, 11, 48, 47, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 604888417, 'comment_body': 'can u rename this to `@Input() job: Job` just for simplicity? Thanks.', 'comment_created': datetime.datetime(2021, 3, 31, 13, 17, 57, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 604889327, 'comment_body': ""> I noticed that the green tick that's present to the left of these buttons after the job finished succesfully, is missing. It was there in the demo firebase app. Did I missing something?\r\n\r\nThis is why. You accidentally removed the job status icon from here."", 'comment_created': datetime.datetime(2021, 3, 31, 13, 19, 4, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 604889669, 'comment_body': 'You should not have removed line 22 to line 28.', 'comment_created': datetime.datetime(2021, 3, 31, 13, 19, 32, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 604890099, 'comment_body': ""don't forget to make corresponding changes in HTML file."", 'comment_created': datetime.datetime(2021, 3, 31, 13, 20, 3, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 604891848, 'comment_body': 'the polling part will stay as is in JobResult and is not required in actions component. The ngOnInit and ngOnDestroy can be removed from the actions component as they are not required either.', 'comment_created': datetime.datetime(2021, 3, 31, 13, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 604893990, 'comment_body': 'Oh right, I must have missed this while moving the html code to the new component.', 'comment_created': datetime.datetime(2021, 3, 31, 13, 25, 5, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 605076092, 'comment_body': 'Lines 16-23 can be removed.', 'comment_created': datetime.datetime(2021, 3, 31, 17, 11, 27, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 605076216, 'comment_body': 'not needed.', 'comment_created': datetime.datetime(2021, 3, 31, 17, 11, 40, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 605076922, 'comment_body': 'not needed, also remove this import.', 'comment_created': datetime.datetime(2021, 3, 31, 17, 12, 44, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 605079797, 'comment_body': 'The button functions use `jobId`. Will that be passed from the parent component as a prop then?', 'comment_created': datetime.datetime(2021, 3, 31, 17, 17, 2, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 605080562, 'comment_body': 'Use `job.id` ', 'comment_created': datetime.datetime(2021, 3, 31, 17, 18, 6, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 605091508, 'comment_body': 'I meant that you can use `this.job.id` instead of `this.jobId` since the `job` variable is an object of `Job` model i.e. no need for an extra `jobId` parameter.', 'comment_created': datetime.datetime(2021, 3, 31, 17, 33, 51, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 605097312, 'comment_body': 'yeah sorry I realised that later ...had made the change already ..fixed it now', 'comment_created': datetime.datetime(2021, 3, 31, 17, 42, 37, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}]","[{'commit_sha': '8fdf8e33d6c7fd2535b000c01f519fc438315d96', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
610024433,Fixes #80 - moved theme-switching logic to a separate component,"Fixes #80 
- [x] Create separate component inside `header`
- [x] Move theme switching logic to new component
- [x] Use new component inside `header`
- [ ] Squash commits",True,90,https://api.github.com/repos/intelowlproject/IntelOwl-ng/pulls/90,https://github.com/intelowlproject/IntelOwl-ng/pull/90,closed,50,37,7,4,8,3,0,0,[],2021-04-06 17:19:19+00:00,2021-04-11 15:10:49+00:00,424290.0,"4 days, 21:51:30","[{'comment_id': 610552828, 'comment_body': 'This can be changed in favor of `ThemeSwitcherComponent.getThemeName()`. No point of duplicating the `getThemeName` method in two components.', 'comment_created': datetime.datetime(2021, 4, 9, 11, 30, 18, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 611394302, 'comment_body': 'The theme switcher not being displayed could be because that the `<nb-action>` is to be under `<nb-actions>`. You could try to keep the `<nb-action>` part of header component and only move the internal tree to the theme switcher.', 'comment_created': datetime.datetime(2021, 4, 12, 7, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 611511740, 'comment_body': ""This was the issue yeah. Fixed it now. I don't see the commits being reflected here. Will I need to make a new PR?"", 'comment_created': datetime.datetime(2021, 4, 12, 10, 30, 48, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}]","[{'commit_sha': 'ce5adbc2dec748b161ec7e690cbe52c2f6e43521', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45884bb747254f72f1db6107a453fed9bea2ce13', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3112bcdc1648731dba7dc5e6826729620ed57d92', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03860a3d13ae45927cec833e82056204cc4f7457', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
685141649,[Fix] add missing secrets to new analyzer config,"# Description

- [X] Add missing secrets to analyzer config
- [X] Update script to include certain secrets specific to a few analyzers

## Related issues
Fixes #525 

## Type of change

- [X] Bug fix (non-breaking change which fixes an issue).

# Checklist
 
- [X] The tests gave 0 errors.
- [X] `Black` gave 0 errors.
- [X] `Flake` gave 0 errors.
",True,526,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/526,https://github.com/intelowlproject/IntelOwl/pull/526,closed,285,32,2,6,0,0,1,1,[{'name': 'bug'}],2021-07-07 12:13:59+00:00,2021-07-08 07:29:51+00:00,69352.0,19:15:52,[],"[{'commit_sha': '5ce5b17da316ba2ead0608b06e82ea2f1644d8e6', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7376f473086cd0e95fb603b0c6133b412c34268', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5322dceedfd434e71e75e0a8d4b951dce18fc57', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5300cda00e57dede5b34b61a3b3d14788740c7a4', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e502c3a9d4d5a2ad2ca49ed50ebcaf64f5592257', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8be7e9c87213b9a9522c51ff7cd032d4f72d23e7', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
674746225,creating analyzer_manager Django sub-app and adding analyzer verification support with new format,"# Description

Refactored `script_analyzers` to it's own Django sub-app: `analyzers_manager`, following the directory structure mentioned in #397. Added basic code for the new `AnalyzerReport` model and script to convert to new config format.

## Related issues
#397 , #392 

## Type of change

- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected).

# To-Do

- [x] Creating `analyzers_manager` sub-app and copying `script_analyzers` into it.
- [x] Replacing `script_analyzers` instances in analyzer files, tests and docs
- [x] Creating new AnalyzerReport model
- [x] Changes in how reports are generated (utils.py, classes.py)
- [x] Creating Serializers and verification function for the new config. 
- [x] Caching config at the start


# Checklist
- [X] The pull request is for the branch develop
- [x] I have added tests in the [Tests](https://github.com/intelowlproject/IntelOwl/blob/master/tests) folder. 
- [ ] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [ ] I squashed the commits into a single one. (optional, they will be squashed anyway by the maintainer)

# Real World Example

TBD
",True,498,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/498,https://github.com/intelowlproject/IntelOwl/pull/498,closed,3450,2096,137,62,1,29,0,0,[],2021-06-21 17:30:35+00:00,2021-06-30 08:46:39+00:00,746164.0,"8 days, 15:16:04","[{'comment_id': 657741987, 'comment_body': '""report"" and ""error"" can be removed from `list_display`.', 'comment_created': datetime.datetime(2021, 6, 24, 8, 32, 50, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657743831, 'comment_body': 'Don\'t hardcode strings like ""failed"". Instead set them like `self.report.status = Job.STATUS_CHOICES.failed`.', 'comment_created': datetime.datetime(2021, 6, 24, 8, 35, 21, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657744045, 'comment_body': 'https://github.com/intelowlproject/IntelOwl/pull/498/files#r657743831', 'comment_created': datetime.datetime(2021, 6, 24, 8, 35, 37, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657744100, 'comment_body': 'https://github.com/intelowlproject/IntelOwl/pull/498/files#r657743831', 'comment_created': datetime.datetime(2021, 6, 24, 8, 35, 40, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657745278, 'comment_body': 'Line 133 can be removed IMO since .save is called in BaseAnalyzerMixin.', 'comment_created': datetime.datetime(2021, 6, 24, 8, 37, 14, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657745539, 'comment_body': 'https://github.com/intelowlproject/IntelOwl/pull/498/files#r657743831', 'comment_created': datetime.datetime(2021, 6, 24, 8, 37, 35, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657745860, 'comment_body': 'https://github.com/intelowlproject/IntelOwl/pull/498/files#r657743831', 'comment_created': datetime.datetime(2021, 6, 24, 8, 38, 4, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657745965, 'comment_body': 'https://github.com/intelowlproject/IntelOwl/pull/498/files#r657743831', 'comment_created': datetime.datetime(2021, 6, 24, 8, 38, 13, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657746579, 'comment_body': ""Oh I see. Yeah, i'll replace that in the many places i did the exact same thing f^_^;"", 'comment_created': datetime.datetime(2021, 6, 24, 8, 39, 2, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 657748674, 'comment_body': 'what is `conf[""value""]` ?', 'comment_created': datetime.datetime(2021, 6, 24, 8, 41, 43, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657751174, 'comment_body': 'Define an `Enum` class for Status. Like:\r\n\r\n```python3\r\nfrom enum import Enum\r\n\r\nclass Statuses(Enum):\r\n     FAILED = 0\r\n     PENDING = 1\r\n     RUNNING = 2\r\n     SUCCESS = 3\r\n```\r\n\r\nand then u may use these values like `Statuses.RUNNING.name` etc.\r\n', 'comment_created': datetime.datetime(2021, 6, 24, 8, 44, 48, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657751726, 'comment_body': 'After the `Statuses` enum, this would be changed to `choices=[(s.name, s.name) for s in Statuses]`', 'comment_created': datetime.datetime(2021, 6, 24, 8, 45, 31, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657753166, 'comment_body': 'Change to `return f""AnalyzerReport(job:#{self.job_id},{self.analyzer_name})""`', 'comment_created': datetime.datetime(2021, 6, 24, 8, 47, 22, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657753692, 'comment_body': ""use `STATUSES` enum, don't hardcode value."", 'comment_created': datetime.datetime(2021, 6, 24, 8, 47, 57, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657754211, 'comment_body': ""use `STATUSES` enum, don't hardcode value."", 'comment_created': datetime.datetime(2021, 6, 24, 8, 48, 33, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657754744, 'comment_body': '```json\r\n""secrets"": {\r\n            ""api_key_name"": {\r\n                ""value"": ""MWDB_KEY"",\r\n                ""type"": ""string"",\r\n                ""required"": true,\r\n                ""default"": null,\r\n                ""description"": """",\r\n                }\r\n           }\r\n```\r\nI found it better to name it `value` instead of `secret_name` because `api_key_name` already denotes secret name and `MWDB_KEY` is it\'s value. Maybe I could change it to `secret_value` for the sake of clarity?', 'comment_created': datetime.datetime(2021, 6, 24, 8, 49, 9, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 657756508, 'comment_body': 'should be just `type`, I assume your IDE must have given a warning because `type` is an inbuilt keyword but it should still work.', 'comment_created': datetime.datetime(2021, 6, 24, 8, 51, 20, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657757837, 'comment_body': 'Yeah it did. Just thought I would avoid reserved keywords so did that', 'comment_created': datetime.datetime(2021, 6, 24, 8, 52, 59, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 657758448, 'comment_body': ""There's no need of `AnalyzerReportViewSet` nor the router."", 'comment_created': datetime.datetime(2021, 6, 24, 8, 53, 43, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657758676, 'comment_body': 'use `Statuses` ENUM.', 'comment_created': datetime.datetime(2021, 6, 24, 8, 54, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657759170, 'comment_body': 'this class is not required.', 'comment_created': datetime.datetime(2021, 6, 24, 8, 54, 36, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657760167, 'comment_body': 'Move the `get_analyzer_configs` method to `api_app/analyzers_manager/views.py` and register it inside `api_app/analyzers_manager/urls.py`.', 'comment_created': datetime.datetime(2021, 6, 24, 8, 55, 49, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657761244, 'comment_body': 'use `Statuses` enum.', 'comment_created': datetime.datetime(2021, 6, 24, 8, 57, 16, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657762107, 'comment_body': 'use `Statuses` enum.', 'comment_created': datetime.datetime(2021, 6, 24, 8, 58, 29, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657763721, 'comment_body': '**Clarification:**\r\n\r\nThe `Statuses` class will be defined outside `AnalyzerReport` but a reference of it will exist inside `AnalyzerReport`. \r\n\r\n```python3\r\nfrom enum import Enum\r\n\r\nclass Statuses(Enum):\r\n     FAILED = 0\r\n     PENDING = 1\r\n     RUNNING = 2\r\n     SUCCESS = 3\r\n\r\nclass AnalyzerReport(models.Model):\r\n    Statuses = Statuses\r\n```\r\n\r\nThis is so we do not have to import `Statuses` everywhere instead we could simply do `AnalyzerReport.Statuses.RUNNING.name` or `self.report.Statuses.RUNNING.name` inside analyzer scripts.', 'comment_created': datetime.datetime(2021, 6, 24, 9, 0, 38, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657766074, 'comment_body': 'This is confusing. `value` especially is confusing because the field does not represent the _value_ instead only the name of the environment variable. Do u think you could rename it to `env_var_key` ? ', 'comment_created': datetime.datetime(2021, 6, 24, 9, 3, 36, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657767114, 'comment_body': 'Take note of: https://github.com/intelowlproject/IntelOwl/pull/498#discussion_r657763721', 'comment_created': datetime.datetime(2021, 6, 24, 9, 4, 56, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657772864, 'comment_body': ""Infact, I'd prefer to use a class view and not a method view for this so: \r\n\r\nMake a class `AnalyzerListView(generics.ListAPIView)` similar to `ConnectorListView`. ([reference](https://github.com/intelowlproject/IntelOwl/blob/d9b1872e344d58f76c454106af7fbffe1498d2dc/api_app/connectors_manager/api.py#L10))"", 'comment_created': datetime.datetime(2021, 6, 24, 9, 12, 27, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 659666955, 'comment_body': 'According to Django internal style guide, `__str__` should come before `init_report`.', 'comment_created': datetime.datetime(2021, 6, 28, 10, 27, 54, tzinfo=datetime.timezone.utc), 'commenter': 'code-review-doctor[bot]', 'type': 'Bot'}]","[{'commit_sha': '7ba04441dd49440a02f4198694e3d9b6548c2494', 'committer_username': 'mlodic', 'committer_name': 'Matteo Lodi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 1, 12, 6, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b2aa1867d489ea5abd44c99290168a04ec90e22', 'committer_username': 'dependabot[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 16, 22, 34, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b6b4aa7dc3d5da791770d5ae2a0f9eb0fe7e8a2', 'committer_username': 'dependabot[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 16, 22, 34, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e09746f9647ba80f52b26caf52b34a889ff93aad', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b7bb21ec89a9e144c1e11bdaa65782f2bd77fbe', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '443505d3618acb98c5a7d86284be64e46f16c73e', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '801edb796e5564962ee0b31d0c05b63500210134', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b4ec3a9fbdefd77c97b48ac4b5b983ddd880a20', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e81e1e549594d5d56655f97d1b97d7a6430ef65', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fd31aaa87fe37aaa5b78da37ce4908fe9356336', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '200cb0b896316a3406c903e1bd5df966c74dd375', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '562acf395d143dce8fea736f92719cc948912f98', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '177eafe937cd38998d9ef2525dbb291d98b933ed', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98fdc0e9eb1ac1e45a1c8110abf4fd952f5fb860', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9015948d20d5611df2d2344008a9fae22c97e04', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce8b0d2cf61b4f57b835046a3592c2467fad66ba', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be7179b9c29a910d752dcaf8eda678eeb205d0c0', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b9460fd86d97a209823c946236fd9ab1e00e661', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82516874c9884a9da3a8396a336cacda4460a84a', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24c00e0469192550f96d48e73f587d7a2a9901c5', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae469f6378ab04b6751bc5d9ae8c5c1fc0474018', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57e13c3e24abe6b166a42494d3926c1ff8507b71', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb2eafe3ce23a8976220820bfc92d9a3325d18d7', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e95846080e477d0e3e350964ff130a2cc4452103', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75d3dc509fd012d07cc1b71db793a2814557de1c', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '275650bcf83c8925470bccf574c65360d155574e', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51f67a8fa6ca9ecde9f984e2351b9127d2d3491f', 'committer_username': 'mlodic', 'committer_name': 'Matteo Lodi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 1, 12, 6, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5eb021789a1df62e984e2d5e6a130235465f64d', 'committer_username': 'mlodic', 'committer_name': 'Matteo Lodi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 1, 12, 6, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6e9e05853589bdd0d86672a2f9d65281dad8281', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19563305bff23af62aedf743d07dd2b254a600a4', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af1e013895aa936e481f9e4dc0b1b8550048b563', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13997ae83ce89db36c7d70ce2c2e26928bda55d5', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cbcba2f39943577e69e411e049a5dc9b54b2e40', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47e19089fc480148ff328ad68d2ae668eca66d2e', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93139d06cc898578934bda99fb75f2deacd20d0b', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c206cfc754e08eafd31e2ebb47bb50c8f27474b', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92d16974e4f4acb999a867572fecf83815011f9d', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2da0106e07e83aeeb34e957a8a5969f7b71d19b8', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '497b914b9fee9de64d2e0ec72c30eba51126cd87', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb37875eb422ced7e2e7baa2a9124f10ccdee584', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48cc18d0449b56db8cc9820087678d76c70dc7ca', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdb2e0f79f61a2f1c95d145d218929bcbbb989bc', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '803e8e5f5848f90521a5f0fcc2bc462e937bf6b8', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81a664b02dd1e8b00e780dfd60e11af3eafafb26', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3154e35e6a1ae14eab5a49a6946525114a70f276', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cfcf70bfa628a1c9eb5d9082a67fd8a1bb3745e', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6ca732c5af9c9d4cdcdd6aa889a222ff661f52f', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07ecf3c29917392a6b9c1eede3ea8e5124c9dd04', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2975c43260de7c499140e82a9f1a6b6712dbfb5a', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bedc3c63b22a6ab3b5760c0bde8b1c822e06d55', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f949c8b114b5c0587bd8b3559d3324747a8534c6', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8223478ef4ed0ddfb463dabb63cef71c91e365b3', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9033837ecbff9e89ec053c94cc7426e0a07169d3', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c2e525c5e30155c3369920307e06d2a69c23b9d', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44beb8636259931d9f44d177098401f4e11e7a2d', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac9287239fc3635fba5de303e6c2ff187a123d8e', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1341c9eb0d6379527c9ac0f7f3573a2b67675d6c', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd96958b28623983f6fc4ede281a9617c50d18a06', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '047f015c23a8e52063967561dc4bc679d1befb76', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90b11f800477bc6abf2d0b86aac44112484e5019', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3114196c8e3caf15b89a17925d9725bb97321fd8', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89df887914f6197199bf35d3a13c723454fafde0', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
683011711,chore: refactor common code in sub-apps | greedy cache configs,"# Description

This overrides AppConfig.ready in subapps to cache configs before server starts

## Type of change

Please delete options that are not relevant.

- [x] New feature (non-breaking change which adds functionality).

# Checklist

- [x] The pull request is for the branch develop-2
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [x] I squashed the commits into a single one. (optional, they will be squashed anyway by the maintainer)
",True,518,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/518,https://github.com/intelowlproject/IntelOwl/pull/518,closed,263,314,12,7,1,3,0,0,[],2021-07-03 11:38:12+00:00,2021-07-05 16:49:05+00:00,191453.0,"2 days, 5:10:53","[{'comment_id': 664020230, 'comment_body': 'According to Django internal style guide, `status` should come before `Meta`.', 'comment_created': datetime.datetime(2021, 7, 5, 15, 45, 2, tzinfo=datetime.timezone.utc), 'commenter': 'code-review-doctor[bot]', 'type': 'Bot'}, {'comment_id': 664020232, 'comment_body': 'As above, `errors` should come before `Meta`.', 'comment_created': datetime.datetime(2021, 7, 5, 15, 45, 3, tzinfo=datetime.timezone.utc), 'commenter': 'code-review-doctor[bot]', 'type': 'Bot'}, {'comment_id': 664020233, 'comment_body': 'Same as above: `errors` should come before `Meta`.', 'comment_created': datetime.datetime(2021, 7, 5, 15, 45, 3, tzinfo=datetime.timezone.utc), 'commenter': 'code-review-doctor[bot]', 'type': 'Bot'}]","[{'commit_sha': '3c6c701084dc7fad3040bdec11ac62cdcccb8bf9', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17b79017cb4b7b4cf5bd64cab1f0471f80d4372c', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36e716eef5f6adb71a66ccb5df6c66291632d3b6', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b35ec8c55a674da98980ebca0b488fbd7bb18ae', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97a2296e5bb44ee15903dace5ca67b3d947169c6', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc775f891d0fe975f35ac82c904cd1ece9a229d2', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00138170a167ee5f7ad5bc285e58917c4cc79616', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
683705605,"[Fixes] remove analysis_reports field, misc fixes ","# Description

- [X] Remove `analysis_reports` field
- [X] Fix misspelt test function name for `pulsedive` analyzer.
- [X] Updated migrations
- [X] Other fixes

## Type of change

- [X] Bug fix (non-breaking change which fixes an issue).
- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected).

# Checklist

- [X] The tests gave 0 errors.
- [X] `Black` gave 0 errors.
- [X] `Flake` gave 0 errors.
",True,523,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/523,https://github.com/intelowlproject/IntelOwl/pull/523,closed,118,25,10,10,1,8,0,1,[],2021-07-05 13:28:30+00:00,2021-07-06 16:37:51+00:00,97761.0,"1 day, 3:09:21","[{'comment_id': 663936456, 'comment_body': ""we don't need `process_time` as it can be calculated dynamically from `start_time` and `end_time`"", 'comment_created': datetime.datetime(2021, 7, 5, 13, 34, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 664050981, 'comment_body': '^ yep. And is now a `@property` field in the `AbstractReport` model.', 'comment_created': datetime.datetime(2021, 7, 5, 16, 52, 43, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 664366640, 'comment_body': 'transaction is not needed now since no change is being made', 'comment_created': datetime.datetime(2021, 7, 6, 8, 54, 11, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 664366765, 'comment_body': 'save call is redundant', 'comment_created': datetime.datetime(2021, 7, 6, 8, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 664367875, 'comment_body': 'uncomment this', 'comment_created': datetime.datetime(2021, 7, 6, 8, 55, 46, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 664373915, 'comment_body': ""Shouldn't adding default value to `start_time` and `end_time` fields as `timezone.now` be better ?"", 'comment_created': datetime.datetime(2021, 7, 6, 9, 3, 35, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 664375882, 'comment_body': 'it makes sense to add for `start_time`', 'comment_created': datetime.datetime(2021, 7, 6, 9, 6, 25, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 664447115, 'comment_body': 'remove the `transaction.atomic` block as well', 'comment_created': datetime.datetime(2021, 7, 6, 10, 50, 6, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}]","[{'commit_sha': 'f0e8ad6bf2bbb52a3f6c8fa5a48de8cc61e35135', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7d5689a5c8be7846ca321d303313d007f0041ca', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9abe2ee1481b78059166b73aff2a19d52adf1b44', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9b5045728f158e67cf0d8d875e9fb440c8fb7a5', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fded232a2ffcaa8b86d2e142d5025bd054e5bbe', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16e56b9bb7655661ee6d377a99a2a7327d706ffc', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1587a4fdf645972f0f73310d6e455f7d6d39a64d', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c6a0a46ac497b130d3ab7bc9183ce722c877b57', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a82377e5445c85299d61ef56931d9bf312ac7c4', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33f01a70c106c725d399377a3db4a5a285ddd2a1', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
679806445,"Updated Analyzers Table to new format, tooltips for config verification","Follow up changes to GUI after https://github.com/intelowlproject/IntelOwl/pull/498
Fixes #115 , #89 

- [X] Update Analyzers Table to new Config Format
- [X] Add Tooltips to `configured` column in the table
- [x] Gray out unconfigured analyzers from dropdown list in FIle/Observable Scans
- [x] Add Tooltips to grayed out analyzers in dropdown list
- [x] Fixed Analyzer report section in lieu of new changes (was done in https://github.com/intelowlproject/IntelOwl-ng/pull/118)
- [x] Refactoring and Testing",True,116,https://api.github.com/repos/intelowlproject/IntelOwl-ng/pulls/116,https://github.com/intelowlproject/IntelOwl-ng/pull/116,closed,103,89,11,8,2,6,1,1,[{'name': 'GSoC-2021'}],2021-06-29 10:26:25+00:00,2021-07-06 16:30:20+00:00,626635.0,"7 days, 6:03:55","[{'comment_id': 662371555, 'comment_body': 'Instead of calling these functions here individually for each analyzer option, I think it could be better if these changes were made in the `ngOnInit` method, so directly setting these attributes on the `analyzersList` variable.', 'comment_created': datetime.datetime(2021, 7, 1, 15, 4, 43, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 663955914, 'comment_body': 'Removed both the functions. For the configured check, we can already access that attribute directly using `analyzerService.rawAnalyzerConfig[analyzer].verification.configured`.\r\nThe tooltip part is on hold rn so I have removed those changes.', 'comment_created': datetime.datetime(2021, 7, 5, 14, 2, 49, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 664914219, 'comment_body': 'to fix: change it back to name', 'comment_created': datetime.datetime(2021, 7, 6, 22, 22, 17, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 664934958, 'comment_body': 'fixed in #119 ', 'comment_created': datetime.datetime(2021, 7, 6, 23, 18, 4, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 664935689, 'comment_body': ""This won't work as this template is not defined in the component. Moreover, this is a part of what's already there."", 'comment_created': datetime.datetime(2021, 7, 6, 23, 20, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 664943860, 'comment_body': 'removed in #119 ', 'comment_created': datetime.datetime(2021, 7, 6, 23, 44, 48, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}]","[{'commit_sha': 'be5b2ec30a2ca2cda1a14a0accc32ec76924d95b', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a5bfdc895b5de83008fa2c0204583331b2ef7d2', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77dcea3ebddc27b0fd49c5af632bd1a7719a0d7a', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3751a18e2ac997378be3f521917a8e16fc6cfde6', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1cac70a5a9e6484032ef2d54b46e2d0e9f9339a', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b38285ea071b1a3e7c9250ce84dc6cf011e0d51', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efc42afbe464cd531c54b17c0fab3933ad350da6', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb9c7bff030e02a614dceaa5371006b9cb065596', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
669258508,Add connector table and section for reports,"Related to #101 

- [x] Add connectors table
- [x] Add Connector service
- [x] Add connector reports section In job analysis page
- [x] Handle connector reports using results service",True,109,https://api.github.com/repos/intelowlproject/IntelOwl-ng/pulls/109,https://github.com/intelowlproject/IntelOwl-ng/pull/109,closed,495,175,20,22,1,7,0,0,[],2021-06-14 06:26:02+00:00,2021-07-01 15:08:46+00:00,1500164.0,"17 days, 8:42:44","[{'comment_id': 651763202, 'comment_body': 'what does this do ?', 'comment_created': datetime.datetime(2021, 6, 15, 12, 56, 54, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 651783260, 'comment_body': ""It's for debugging purpose, will remove that later!"", 'comment_created': datetime.datetime(2021, 6, 15, 13, 20, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 657863808, 'comment_body': 'We should have 3 interfaces. An `IAbstractConfig` interface which could be `extended` into 2: `IConnectorConfig` and `IAnalyzerConfig`. (using the `extends` keyword)', 'comment_created': datetime.datetime(2021, 6, 24, 11, 31, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657865128, 'comment_body': 'No need of extra `return` and curly brackets, would be cleaner if done as an inline arrow function.', 'comment_created': datetime.datetime(2021, 6, 24, 11, 33, 17, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657866107, 'comment_body': ""The renaming is pretty redundant now so I think it's best to revert it back to it's original name."", 'comment_created': datetime.datetime(2021, 6, 24, 11, 34, 49, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 662366297, 'comment_body': 'Have you added a `no_of_connectors_executed = SerializerMethodField()` in the `JobListSerializer` for this ? similar to [get_no_of_analyzers_executed](https://github.com/intelowlproject/IntelOwl/blob/8f14384c315613567d39b3c5aa612d61f05c3b91/api_app/serializers.py#L66).', 'comment_created': datetime.datetime(2021, 7, 1, 14, 58, 24, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 662480987, 'comment_body': 'https://github.com/orgs/intelowlproject/projects/2#card-64203186', 'comment_created': datetime.datetime(2021, 7, 1, 17, 43, 55, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}]","[{'commit_sha': '2a28440f7f8129296ae11019b57218c0d989a9a5', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60695257e4a6f792c2e3a90a9594fe07aefc3c3d', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cec8f3f8409eb3a755b0f129f568af69185e55bc', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77a2ef9db1abda6d8a19a0f019d35ad14ada2498', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3ce0283fcb5a17531a3230d1cfb0d09f8f50a9f', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06d8fb5885b588a450a774b2a35257ff45928e8e', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b24d3b95dfde690cce485d96a55df1d15c9b3e07', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dec157e4af138775647056975d57c98dab1058b2', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0174f72c353083dce3cbe75b120ef09a5550fd8', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6706f1f45fddd1f8b97462d56b81423b41353f76', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d3abbafa2cf7b98e73aa3cbe3bd239b8e747627', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '685787279b2296a3d05f1d99d6f335d07b9c9560', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bd1a62262bdff4ce172266f485a88124a1bf371', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd3684cda92eb6367d5c5420b499b650b0c0f36d', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19fa85950746936fc991cfeec610c6a99353b8a5', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd4eb50bf88331ce6c5743cb4939346b7f149b3d', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8b85237d304b3349eec348974a454c74369685e', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5cd14276d277f422aa01d27a3e05dd5bc8afecd', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1cd6ecc237c5253da5cb5034904a8a2ec4d9f9c', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b979619a700f31c175f107213242a0bdeefb4038', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dddba5a6ba267ec867ee4122e1875b0e69dffa34', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20fea1954d32a004189b809dddf5ba991c804ad5', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
692567150,Fixes and Refactors reflecting Analyzer related changes in `IntelOwl v3`,"- [X] Updated `send_analysis_request` -> `analyze_file` and `analyze_observable`
- [x] Refactor table
- [x] Analyzer Report and other misc changes

-----------------------------------------------------------------------------------------------------------------------------

`pyintelowl get-analyzer-config`
![image](https://user-images.githubusercontent.com/17424778/126294011-75a3a38a-153a-4303-8cb5-49585eb6a475.png)
",True,98,https://api.github.com/repos/intelowlproject/pyintelowl/pulls/98,https://github.com/intelowlproject/pyintelowl/pull/98,closed,21,13,6,6,0,6,1,1,[{'name': 'GSoC-2021'}],2021-07-19 12:35:05+00:00,2021-07-21 08:11:00+00:00,156955.0,"1 day, 19:35:55","[{'comment_id': 673709319, 'comment_body': ""can u move this back between `self` and `filename` ? we shouldn't change the positions of arguments because that can break the code for a lot of people."", 'comment_created': datetime.datetime(2021, 7, 21, 6, 56, 53, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 673709800, 'comment_body': ""can u move this back to after `self` ? we shouldn't change the positions of arguments because that can break the code for a lot of people."", 'comment_created': datetime.datetime(2021, 7, 21, 6, 57, 38, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 673709813, 'comment_body': ""can u move this back to after `self` ? we shouldn't change the positions of arguments because that can break the code for a lot of people."", 'comment_created': datetime.datetime(2021, 7, 21, 6, 57, 41, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 673710442, 'comment_body': 'Lines 576 and 589 should be reverted back as well.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 673710899, 'comment_body': ""I do not understand the purpose of this. The verification/filtering would anyways be done on the IntelOwl server, so aren't we just duplicating processing ?"", 'comment_created': datetime.datetime(2021, 7, 21, 6, 59, 35, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 673734096, 'comment_body': 'I thought there needs to be a way to prevent the user from running the misconfigured analyzers, like there is in the GUI', 'comment_created': datetime.datetime(2021, 7, 21, 7, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}]","[{'commit_sha': '002f815f7a83630b4d6261bd41238fd81b46bcd6', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77987fff36d4aa5bdbe5077238008afbbfff1d19', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd482f522dab9daa3124275f98ca4c7187a5d3d98', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '935c322f7cb2c4f53c9d7cb983b780ab9f566dc0', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91e65af17c337b83fd744dc2bd049365b40c370c', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33ad2e940ce435731fe82d173dd17ef69305fbc2', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
712251285,#87: Added support for connector report in job view command,Fixes Point-3 of #87 ,True,115,https://api.github.com/repos/intelowlproject/pyintelowl/pulls/115,https://github.com/intelowlproject/pyintelowl/pull/115,closed,36,7,2,4,1,1,1,1,[{'name': 'GSoC-2021'}],2021-08-13 10:32:04+00:00,2021-08-13 11:40:24+00:00,4100.0,1:08:20,"[{'comment_id': 688434426, 'comment_body': '```python3\r\nimport typing\r\nreport_type: typing.Literal[""analyzer_reports"", ""connector_reports""]\r\n```\r\n\r\ninclude type hinting.', 'comment_created': datetime.datetime(2021, 8, 13, 11, 12, 17, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}]","[{'commit_sha': 'f78ac4f183a6330e0c366425ef3558873fdd5619', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5ceb3bac05a1ff18183615fff156d1976d32963', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5fe968ce3381988a0df7859202bb7b7ad87250e', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4527d5f9ff9840a23b601b94dc68d3b23312fb0e', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
712263519,#87: Added 'Connectors Called' column in `jobs ls` command,"# Screenshots

![ss-5](https://user-images.githubusercontent.com/17424778/129346702-bb114397-7cfc-4707-a06a-3653d6c0d731.png)
",True,116,https://api.github.com/repos/intelowlproject/pyintelowl/pulls/116,https://github.com/intelowlproject/pyintelowl/pull/116,closed,4,0,1,1,0,0,1,1,[{'name': 'GSoC-2021'}],2021-08-13 10:53:44+00:00,2021-08-13 11:10:59+00:00,1035.0,0:17:15,[],"[{'commit_sha': '2177fa71d167b589c595fe1f5abd13567c4340a5', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
692422434,Fixes #390: Split `send_analysis_request` into `analyze_file` and `analyze_observable`,"# Description

- [X] New views for endpoints
- [X] New Serializers
- [x] Testing and Refactoring

## Related issues
Fixes #390 

## Type of change

- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected).

# Checklist

- [X] I have added tests in the [Tests](https://github.com/intelowlproject/IntelOwl/blob/master/tests) folder. 
- [x] The tests gave 0 errors.
- [X] `Black` gave 0 errors.
- [X] `Flake` gave 0 errors.
",True,551,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/551,https://github.com/intelowlproject/IntelOwl/pull/551,closed,259,274,6,13,7,7,0,1,[],2021-07-19 09:10:24+00:00,2021-07-21 08:09:16+00:00,169132.0,"1 day, 22:58:52","[{'comment_id': 672270306, 'comment_body': 'also rename these function like `test_analyze_observable_ip` or `test_analyze_file` etc.  (basically, the endpoint name and function name should be somewhat similar)', 'comment_created': datetime.datetime(2021, 7, 19, 12, 54, 7, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 672280360, 'comment_body': ""While this approach with 2 common functions (`send_for_analysis` and `prepare_for_analysis`) is okay, there's a better way I just thought of:\r\n\r\nCombine these 2 functions into a single function \r\n\r\n```python3\r\ndef _analysis_request(request, serializer_class):\r\n```\r\n(basically, this function will be similar to the `send_analysis_request` function we had before.\r\n\r\nAnd then the `analyze_file` and `analyze_observable` would look like:\r\n\r\n```python3\r\n@api_view()\r\ndef analyze_file(request):\r\n    return _analysis_request(request, FileAnalysisSerializer)\r\n\r\n@api_view()\r\ndef analyze_observable(request):\r\n    return _analysis_request(request, ObservableAnalysisSerializer)\r\n```\r\n"", 'comment_created': datetime.datetime(2021, 7, 19, 13, 7, 26, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 672396254, 'comment_body': '`ObjectPermissionsAssignmentMixin` and `get_permissions_map` should be moved to the 2 new serializers as well.', 'comment_created': datetime.datetime(2021, 7, 19, 15, 20, 24, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 672398536, 'comment_body': 'Create a base serializer like \r\n\r\n```python3\r\nclass _JobCreateSerializerMixin(ObjectPermissionsAssignmentMixin):\r\n```\r\n\r\nto keep the common code like `validate`, `create`, `get_permissions_map` methods.', 'comment_created': datetime.datetime(2021, 7, 19, 15, 22, 52, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 672991175, 'comment_body': 'We do not need to specify the parameters now, set this like: `request=serializers.FileAnalysisSerializer` \r\n(refer to: https://drf-spectacular.readthedocs.io/en/latest/customization.html#step-2-extend-schema)', 'comment_created': datetime.datetime(2021, 7, 20, 10, 12, 4, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 672991461, 'comment_body': 'same for the `analyze_observable`.', 'comment_created': datetime.datetime(2021, 7, 20, 10, 12, 34, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 673065082, 'comment_body': 'Remove this line. And then in the `_analysis_request` function check the `if` condition again for this. (as was done before)', 'comment_created': datetime.datetime(2021, 7, 20, 12, 12, 7, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}]","[{'commit_sha': '2e8deaba4a57fae7b2e3c30f1858c93b1a9f141f', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb27bab24e049977093f1d3bc37fe5a8ba0cad90', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68069144f68faa3995d02606712a309249209d26', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8139a718b2adf47c8159854e8b3180e3c129d645', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ced4e05ae4969ad14fff08caf77fc33534f88a4b', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c25ebdf9726420eea546250f7fa651fcae86698e', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7269f8b3d1484965210e4d84d56fc2e4f4cdb769', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1321f0843591d81f856619dbc27f21365c6242d', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af195e335a692ca79e201ef1fdf779060e0bce55', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3e7a8650836fa25eaf02340e72176d35ab0dd4c', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a36f9294f2e31f120eda15066197dcdf2f0d0032', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb9da4939cc847ab7fb73ef15f13e4065337440c', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40ba84fba57eaf609569ce7972055b2f26705d1c', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
691578849,Updated endpoints: `send_analysis_request` -> `analyze_file` and `analyze_observable`,Follow up changes to: https://github.com/intelowlproject/IntelOwl/pull/547,True,121,https://api.github.com/repos/intelowlproject/IntelOwl-ng/pulls/121,https://github.com/intelowlproject/IntelOwl-ng/pull/121,closed,2,2,1,1,0,0,1,1,[{'name': 'GSoC-2021'}],2021-07-16 15:34:35+00:00,2021-07-21 08:09:40+00:00,405305.0,"4 days, 16:35:05",[],"[{'commit_sha': '64c3f68ace03b1abf9eeff9da27529fc1d39074c', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
692567150,Fixes and Refactors reflecting Analyzer related changes in `IntelOwl v3`,"- [X] Updated `send_analysis_request` -> `analyze_file` and `analyze_observable`
- [x] Refactor table
- [x] Analyzer Report and other misc changes

-----------------------------------------------------------------------------------------------------------------------------

`pyintelowl get-analyzer-config`
![image](https://user-images.githubusercontent.com/17424778/126294011-75a3a38a-153a-4303-8cb5-49585eb6a475.png)
",True,98,https://api.github.com/repos/intelowlproject/pyintelowl/pulls/98,https://github.com/intelowlproject/pyintelowl/pull/98,closed,21,13,6,6,0,6,1,1,[{'name': 'GSoC-2021'}],2021-07-19 12:35:05+00:00,2021-07-21 08:11:00+00:00,156955.0,"1 day, 19:35:55","[{'comment_id': 673709319, 'comment_body': ""can u move this back between `self` and `filename` ? we shouldn't change the positions of arguments because that can break the code for a lot of people."", 'comment_created': datetime.datetime(2021, 7, 21, 6, 56, 53, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 673709800, 'comment_body': ""can u move this back to after `self` ? we shouldn't change the positions of arguments because that can break the code for a lot of people."", 'comment_created': datetime.datetime(2021, 7, 21, 6, 57, 38, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 673709813, 'comment_body': ""can u move this back to after `self` ? we shouldn't change the positions of arguments because that can break the code for a lot of people."", 'comment_created': datetime.datetime(2021, 7, 21, 6, 57, 41, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 673710442, 'comment_body': 'Lines 576 and 589 should be reverted back as well.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 673710899, 'comment_body': ""I do not understand the purpose of this. The verification/filtering would anyways be done on the IntelOwl server, so aren't we just duplicating processing ?"", 'comment_created': datetime.datetime(2021, 7, 21, 6, 59, 35, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 673734096, 'comment_body': 'I thought there needs to be a way to prevent the user from running the misconfigured analyzers, like there is in the GUI', 'comment_created': datetime.datetime(2021, 7, 21, 7, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}]","[{'commit_sha': '002f815f7a83630b4d6261bd41238fd81b46bcd6', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77987fff36d4aa5bdbe5077238008afbbfff1d19', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd482f522dab9daa3124275f98ca4c7187a5d3d98', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '935c322f7cb2c4f53c9d7cb983b780ab9f566dc0', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91e65af17c337b83fd744dc2bd049365b40c370c', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33ad2e940ce435731fe82d173dd17ef69305fbc2', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
695873624,Added support for downloading analysis sample (`/api/jobs/{id}/download_sample`),"![image](https://user-images.githubusercontent.com/17424778/126775813-b5afdf1b-1fd2-4b0c-b7bd-f39bfcb99843.png)
",True,100,https://api.github.com/repos/intelowlproject/pyintelowl/pulls/100,https://github.com/intelowlproject/pyintelowl/pull/100,closed,55,1,3,3,1,3,1,1,[{'name': 'GSoC-2021'}],2021-07-23 11:31:23+00:00,2021-07-27 13:55:06+00:00,354223.0,"4 days, 2:23:43","[{'comment_id': 676354216, 'comment_body': '```python3\r\ndef download_sample(self, job_id: int) -> bytes:\r\n```\r\n\r\nWe should return directly the `response.content` which is basically the file buffer in bytes format. No point in returning as a `dict`.', 'comment_created': datetime.datetime(2021, 7, 26, 7, 23, 31, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 676354626, 'comment_body': 'This should be above `downloaded = response.status_code == 200` line.', 'comment_created': datetime.datetime(2021, 7, 26, 7, 24, 14, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 676355140, 'comment_body': 'Remember to make corresponding changes in the CLI command too.\r\n', 'comment_created': datetime.datetime(2021, 7, 26, 7, 25, 5, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}]","[{'commit_sha': 'c567b074364d02cff0c85d6f1adab70a1f3bb939', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f07969a099159e43c09a1f8365c45077fc44baed', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91a75150cc29051fbe1b4a11285f7d62f02b4834', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
689690707,"Fixes #540: tests analyzer scripts, use monkeypatch in `Plugin`, update GH action, refactoring","**TODO:**
- [x] define `_monkeypatch` methods in all analyzer subclasses. (except docker based analyzers)
- [x] refactor testing suite (if any bugs/issues found)
- [x] update workflow file",True,532,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/532,https://github.com/intelowlproject/IntelOwl/pull/532,closed,893,1154,40,40,2,6,0,2,[],2021-07-14 08:16:18+00:00,2021-07-22 13:53:40+00:00,711442.0,"8 days, 5:37:22","[{'comment_id': 669504806, 'comment_body': '`self. __api_key` on line 40', 'comment_created': datetime.datetime(2021, 7, 14, 10, 55, 7, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 669629253, 'comment_body': 'maybe too much 5000 seconds?', 'comment_created': datetime.datetime(2021, 7, 14, 13, 44, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 669639492, 'comment_body': 'I am not sure what happens with `celery_app.send_task(` but surely celery is not executed. We could just execute the function directly without involving celery', 'comment_created': datetime.datetime(2021, 7, 14, 13, 56, 23, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 669640087, 'comment_body': 'yeah, I didnt think about this. I have yet to implement a base check + timeout.', 'comment_created': datetime.datetime(2021, 7, 14, 13, 57, 1, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 669641756, 'comment_body': 'the `start_analyzers` function inside fires a celery task for each analyzer, so the problem will still persist.', 'comment_created': datetime.datetime(2021, 7, 14, 13, 58, 54, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 674793946, 'comment_body': 'According to Django internal style guide, `__str__` should come before `get_connector_reports_stats`.', 'comment_created': datetime.datetime(2021, 7, 22, 13, 26, 59, tzinfo=datetime.timezone.utc), 'commenter': 'code-review-doctor[bot]', 'type': 'Bot'}]","[{'commit_sha': '190c65f6667a3be3d2ab9934b2667658e70ced2f', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a5b5903d9aad9dc39a4af31bd325b29b066575d', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3d257ede7a36910f60f73794ab6d0b2483af90c', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efbebe669a811be6b2e93e5b062aa18e0ca67f37', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8202cc84045a9681d56fb6e9a3999d9abd1361c0', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b6d8cc911366245eb0cdfb0a9a32fdb20f613b8', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cad62460dbcb46b19247e43c0ec0b7693061fd55', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f29234c72bd97cbef51135e2cab59bff9e56d3c', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4525b4aff053ade749a893cd4b583ce48bf2d3a6', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61437984446e2939d9dc27ad005e035033c10d1e', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c1994d3fdba44d086dd34c6f70b1d5ac34fac42', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef3eb5a7d09dfeff20ff661cf5a9831419963d02', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cf34ed713d1d981325cc5a8dd068264fa584493', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc35ebf3aaaeebb3cd2e9acb2806e26200db0e4e', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51c4c914a353c8ab665d010689f4fccf8c23c78b', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ba4d69f9e9ff07113d60d389d09381cf6531579', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39b62599f382b175875b2d3a82a5d448c7ac3a2a', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '327e069e276a4888fbf8f9f97fb028da175d1fd6', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c4f57d20232e02ac2a5e2a9c25935cedfd622c2', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4688a0c2a0de77019a9a44fb7f9904d1ae3826df', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cadcdd068c0dd1ccd3be7259e300171c95cccec', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3b63cb8039e4c9dab12abb56b8cc80bfa579830', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed93095255abd3f2d35b4152a63c997cc8103f42', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bef639d02b39935dbaf616f5f1043b9cc1cbec7', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c69749be7cf0f37e85bce062390d35db9c96d44', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6df666ca70b8075aff143719871721c8b2c1c1b', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b4749959f023d98e0677ba2cad5e5aa954b3e46', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97438d74b86910e4ed31da04d92483954a36a1ca', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58e425ffafc67399bd3c2422aec4409b77e223b6', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3611da2719d044cb70998d238b67bdd0eb404ed7', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d834d5b11f95fbc214e52d91c9b53372d8adbfc', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eac08850448b8e9caaf68bdcc1d1a25e6696f078', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e34af08a0ee64ee1b439ee8c7660bcc2745fe8a2', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd751c2372fa8643e026b9e4da6812506317c1468', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3619e1bd7d3dbf808510a5c62c33d0a7c9248de3', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ddf3a565bc5bc2807f45ac704cb53f7b9ef0c08', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4e7034219800a815b936923fb9fbed36334b53e', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53fb4c3d10c0087b87709ce5932063c4cc9c688c', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e852b9786cad4c21dc00299be1254680643856b', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f53a0d1b6bf95a4fa362ed4311d353ccb15f863c', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}]",Eshaan Bansal,16389167,eshaan7bansal@gmail.com,User,,48,,62,158
702097860,Fix: codecov not covering celery tasks in tests,,True,606,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/606,https://github.com/intelowlproject/IntelOwl/pull/606,closed,424,65,29,5,3,0,0,0,[],2021-08-03 09:08:05+00:00,2021-08-03 11:34:06+00:00,8761.0,2:26:01,[],"[{'commit_sha': '2314e0319d61da2ac8c336881345c8413bc9b074', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8468e018f0203b36f380fba5d4170a0ba2f4f44', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d92727ada7a6caa9b46959c1917e7a860df251e', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4daef9d005018273424038fe963b5d12d35946eb', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '973ee2928ba11a53af3bd3e8e2839ad1447d742a', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}]",Eshaan Bansal,16389167,eshaan7bansal@gmail.com,User,,48,,62,158
700136508,gh workflow: fix codecov reporting,,True,599,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/599,https://github.com/intelowlproject/IntelOwl/pull/599,closed,22,23,4,4,1,0,0,0,[],2021-07-30 09:12:56+00:00,2021-07-30 11:25:43+00:00,7967.0,2:12:47,[],"[{'commit_sha': '1dc67ef8c18182118382619cf12aef096e0d90b6', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f96bd5d09293cc49e41eb544f39f4e4ee05766b9', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9715ec2cb95f63a4a4b248003aa8dc0bf79a4ea8', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e264ab3d9224d3ef9a97faadb631d87e9d253836', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}]",Eshaan Bansal,16389167,eshaan7bansal@gmail.com,User,,48,,62,158
702207692,"use seperate DB in test, no mirror in settings.py",,True,607,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/607,https://github.com/intelowlproject/IntelOwl/pull/607,closed,0,4,1,1,1,0,0,0,[],2021-08-03 11:45:22+00:00,2021-08-03 11:59:52+00:00,870.0,0:14:30,[],"[{'commit_sha': '6be3d585ab9f903a4e0c64f177255af880b4b5fd', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}]",Eshaan Bansal,16389167,eshaan7bansal@gmail.com,User,,48,,62,158
695166385,Fixes #69 - Added PR Template for Contributors,,True,99,https://api.github.com/repos/intelowlproject/pyintelowl/pulls/99,https://github.com/intelowlproject/pyintelowl/pull/99,closed,32,0,1,1,0,0,2,1,"[{'name': 'enhancement'}, {'name': 'GSoC-2021'}]",2021-07-22 13:15:15+00:00,2021-07-23 10:08:35+00:00,75200.0,20:53:20,[],"[{'commit_sha': '5b6723e37dba2d7925bc3cba543bb3c6b215c49e', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
697141612,"Fixes #59 - Added new `IntelOwl` class tests for jobs and tags, removed CLI tests","# Checklist

- [X] Removed CLI Tests
- [X] Added tests for `Job` methods in `IntelOwl`
- [X] Added tests for `Tag` methods in `IntelOwl`
- [x] Add tests for other generic functions
- [x] Refactor and testing

## Test Results

![image](https://user-images.githubusercontent.com/17424778/127151207-90b0af0c-7188-4502-af01-db2a07bfd045.png)


",True,102,https://api.github.com/repos/intelowlproject/pyintelowl/pulls/102,https://github.com/intelowlproject/pyintelowl/pull/102,closed,546,158,8,7,1,0,2,1,"[{'name': 'area: tests/ci'}, {'name': 'GSoC-2021'}]",2021-07-26 15:40:54+00:00,2021-07-28 11:16:05+00:00,156911.0,"1 day, 19:35:11",[],"[{'commit_sha': '5b85ce139a3f0d1955729b8d3fedc70073b2e67d', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '357d636c2d930686a3ac66e8b4f731e8054fec34', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50f003e13b6c1f10e500db7635b52d847a191512', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50cb44ac54ed2509a30369dac16f4e11286fac3b', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4643b9cf036ea5c31e4c2bf31e2023981429ab4f', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0c2173423a833bd3a2027a39d1b6ee3d8c3ecba', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88edef64f3355708d69a6179c15bb0de13b05ef0', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
712273833,refactor IntelOwl class and exception,,True,117,https://api.github.com/repos/intelowlproject/pyintelowl/pulls/117,https://github.com/intelowlproject/pyintelowl/pull/117,closed,158,195,6,4,0,0,0,0,[],2021-08-13 11:10:39+00:00,2021-08-13 11:41:00+00:00,1821.0,0:30:21,[],"[{'commit_sha': 'd50bfa5adb83badec30731b79625f2adf2c55a00', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa96cefb15f8c5ac1530dc238ae57ec9ce74ecc9', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c97f15770b1fd6684cc40da20152daf6528e580b', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a97a5f01982f7387b4917d26bc22f853c0e091f', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}]",Eshaan Bansal,16389167,eshaan7bansal@gmail.com,User,,48,,62,158
698482558,"Fixes #65, #104, #106: Added Tox and Codecov support for tests in GH Actions",,True,107,https://api.github.com/repos/intelowlproject/pyintelowl/pulls/107,https://github.com/intelowlproject/pyintelowl/pull/107,closed,92,64,9,13,0,3,2,1,"[{'name': 'area: tests/ci'}, {'name': 'GSoC-2021'}]",2021-07-28 08:36:35+00:00,2021-07-28 14:53:00+00:00,22585.0,6:16:25,"[{'comment_id': 678197651, 'comment_body': ""Instead of defining 2 different jobs, we can combine them into a single one. Because otherwise we are having to duplicate the `checkout` and `install dependencies` step.\r\n\r\nSee the [`test.yml`](https://github.com/Eshaan7/click-creds/blob/main/.github/workflows/test.yml) in click-creds. It's a single job that checks linting as well as runs tests."", 'comment_created': datetime.datetime(2021, 7, 28, 11, 2, 26, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 678203788, 'comment_body': 'These packages should be added to the `test-requirements.txt` file (if not already in it) and then here we should only call `python3 -m pip install -e .[test]`.', 'comment_created': datetime.datetime(2021, 7, 28, 11, 12, 10, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 678207852, 'comment_body': 'Add this before line 36: `unzip -P infected tests/test_files.zip -d .`', 'comment_created': datetime.datetime(2021, 7, 28, 11, 18, 53, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}]","[{'commit_sha': '9b43138032748723ae50cef99d85856f3055f80a', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae373988c85dddba13191a838ed16dbfa4ef7bde', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0396ec121bab48deb2ad6a2b91daf4316fa21e46', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f5cd0257c66119223a956754f6a6d298aca038e', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cea0a1cec03d04b06ddc1c8f3056f2daa472fd5b', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21daba70e2af357206c1202ec66866ffc79a4d12', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3b02ab71f42fb8846ec16d0af5d3bf97f7e547a', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c06e69fbf8cd31a49b774493f43c03d3b2b0f07b', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2073c58cf433fb1b955f27fe4055ea75d04f949a', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c416d79f11ddd22c558a4691974518da9049b3f', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2c2694489c4cf4f8e848c9748042bb4623edb1c', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0aa439d04eda32a345785e3834bd5b8198d9fe2b', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72581a8ea7d31faf2f957b849a82845802d5dd58', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
702062964,Fixes #109 - Updated documentation for analyzer and test related changes,"- [X] Add docs for new analyzer tests
- [x] Other required docs",True,110,https://api.github.com/repos/intelowlproject/pyintelowl/pulls/110,https://github.com/intelowlproject/pyintelowl/pull/110,closed,46,1,2,1,2,0,2,1,"[{'name': 'area: docs'}, {'name': 'GSoC-2021'}]",2021-08-03 08:19:04+00:00,2021-08-03 14:04:12+00:00,20708.0,5:45:08,[],"[{'commit_sha': 'fb528ff2a4bcf5e6f3d37993768a7c61b12932ea', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
704703292,"Fixes #59: `VirusTotalv3` , `behavioral` and `sigma` options, `VirusTotalv3AnalyzerMixin` class","# Description

Updated VirusTotalv3 Analyzer to leverage `/files/{id}/behaviour_summary` and `sigma_analyses/{id}`  to get a summary of behavioral analysis reports and sigma analysis reports in addition to default reports.

## Related issues
#59 

## Type of change

Please delete options that are not relevant.

- [X] New feature (non-breaking change which adds functionality).

# Checklist

- [X] If I added a new analyzer, I updated the file [Usage](https://github.com/intelowlproject/IntelOwl/blob/master/docs/source/Usage.md). If the analyzer provides additional optional configuration, I added the available options here: [Advanced-Usage](./Advanced-Usage.md)
- [x] The tests gave 0 errors.
- [X] `Black` gave 0 errors.
- [X] `Flake` gave 0 errors.
 

# Real World Example

![image](https://user-images.githubusercontent.com/17424778/128508852-c7419d37-35b1-49bc-ab45-a26a5021b92b.png)
![image](https://user-images.githubusercontent.com/17424778/128508912-a0e0da11-4156-467b-ab07-a9f6ee025b9c.png)


",True,617,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/617,https://github.com/intelowlproject/IntelOwl/pull/617,closed,421,373,10,12,3,24,1,1,[{'name': 'new_analyzer'}],2021-08-05 13:21:31+00:00,2021-08-09 15:25:38+00:00,353047.0,"4 days, 2:04:07","[{'comment_id': 683513835, 'comment_body': ""I don't think `run_hash` is necessary, am I right?"", 'comment_created': datetime.datetime(2021, 8, 5, 14, 35, 33, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 683513893, 'comment_body': 'even if this does make sense if seen with only this perspective, in practice we cannot do that because there is already another analyzer that would perform the ""active"" scan if the sample is not available in the DB (`VirusTotal_v3_Get_File_And_Scan`). \r\n\r\nSo, a user that launches ""all analyzers"" would ask to VT to perform an active scan 2 times. This is why other similar endpoints (like `VirusTotal_v3_Get_File`) are disabled by default. This is extremely critical when managing the available quota of an expensive service like VT.\r\n\r\nI would not force the active scanner option.\r\nI would add different options that can be configured:\r\n* force the active scan if the file was not found (useful if this analyzer is run alone), default=False\r\n* force the polling if we know that this analyzer is executed at the same time of another VT scan analyzer (case of `all analyzers` execution, the most common one), default=True. (without this flag, only a single request is done)\r\n\r\nThoughts?', 'comment_created': datetime.datetime(2021, 8, 5, 14, 35, 37, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 683513954, 'comment_body': 'why is this not a method of the previous class?', 'comment_created': datetime.datetime(2021, 8, 5, 14, 35, 40, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 683547433, 'comment_body': ""I think the confusion arisen because in the `files/{id}/behaviour_summary` endpoint as stated in VT's [docs](https://developers.virustotal.com/v3.0/reference#file-all-behaviours-summary), the `id` is the hash to identify a file. "", 'comment_created': datetime.datetime(2021, 8, 5, 15, 12, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 683549006, 'comment_body': 'But this analyzer should be a file analyzer without `run_hash` because we do need the actual _file_ to be able to upload it to VT.', 'comment_created': datetime.datetime(2021, 8, 5, 15, 13, 49, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 683551255, 'comment_body': '> force the active scan if the file was not found (useful if this analyzer is run alone), default=False\r\n\r\nYou mean similar to the `force_active_scan` config variable in the `VirusTotal_v3_Get_File_And_Scan` analyzer, right ?', 'comment_created': datetime.datetime(2021, 8, 5, 15, 16, 27, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 683556076, 'comment_body': '> force the polling if we know that this analyzer is executed at the same time of another VT scan analyzer (case of all analyzers execution, the most common one), default=True. (without this flag, only a single request is done)\r\n\r\nAlthough this can be done easily by checking is the `self._job.run_all_analyzers` is True or not, I was thinking that maybe in that case we just don\'t conduct the analysis and write like ""Please see the VirusTotal_v3_Get_File_And_Scan report instead"" because  doesn\'t the other VT analyzer contain the data of this ""behaviour summary"" too ?', 'comment_created': datetime.datetime(2021, 8, 5, 15, 21, 44, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 683557050, 'comment_body': 'A problem with both of these approaches is that if a user has the other VT analyzer disabled, then this analyzer will break. Maybe we should not make an analyzer dependent on another.', 'comment_created': datetime.datetime(2021, 8, 5, 15, 22, 48, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 683570651, 'comment_body': 'the other VT analyzer does not contain this data unfortunately. You have to call this one to get the aggregated report of the sandboxes. One more request, one more quota gone', 'comment_created': datetime.datetime(2021, 8, 5, 15, 38, 17, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 683572928, 'comment_body': 'If we remove the chance to upload the file, we could just move this analyzer to an `observable` analyzer and add the related `file` analyzer with `run_hash` option only in the configuration. This would be more clear because otherwise we do not have support for hash analysis for this analyzer.\r\n\r\nAbout this, I am also making some changes to Intezer and MWDB analyzers because they have the same problem. They can be used only as file analyzer and not as observable (hash only) analyzers', 'comment_created': datetime.datetime(2021, 8, 5, 15, 41, 6, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 683600652, 'comment_body': ""@Eshaan7 I thought the `id` was the hash of the file and that this endpoint just `GET`s the summary from an already existing file in the database. Else, it's a `404`, in which case we'll have to upload it first."", 'comment_created': datetime.datetime(2021, 8, 5, 16, 16, 20, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 683603800, 'comment_body': ""I think having them not depend on each other would be the best thing as well. If each VT analyzer can have it's own check for sending a file for analysis if required, otherwise just retrieving the result they are designed to, it would be cleaner allbeit a bit redundant."", 'comment_created': datetime.datetime(2021, 8, 5, 16, 20, 41, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 683606098, 'comment_body': ""Another thing could be, what if there's a single analyzer that deals with sending and retrieving a report from VT and we can simply retrieve from different endpoints based on the config options? LIke default could be the default report for analysis but a `report_type = behavioral` could retrieve a behavioral report instead. (Similar to how it's done in Triage Scan currently)"", 'comment_created': datetime.datetime(2021, 8, 5, 16, 23, 47, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 683608077, 'comment_body': ""There was no particular reason (I'm not sure which case would be better). I thought I would be consistent with the formatting of other `VirusTotal` analyzers."", 'comment_created': datetime.datetime(2021, 8, 5, 16, 26, 31, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 683611292, 'comment_body': 'Yes, your last idea is the better one I think. We could add the behavioral report as ""optional"" in the already existing VT 3 analyzer', 'comment_created': datetime.datetime(2021, 8, 5, 16, 30, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 683611906, 'comment_body': 'yeah they are out of the class there because they are called externally but here this is not the case', 'comment_created': datetime.datetime(2021, 8, 5, 16, 31, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 683642304, 'comment_body': 'I love that idea! just a boolean config var `include_behavioral_summary`.', 'comment_created': datetime.datetime(2021, 8, 5, 17, 13, 53, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 684184853, 'comment_body': ""Behavioral analysis works but I'm having some trouble finding files that match to sigma rules. All the samples I tried didn't have that analysis available to them, so the default report is retrieved instead. It should work otherwise."", 'comment_created': datetime.datetime(2021, 8, 6, 12, 9, 37, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 684190364, 'comment_body': ""Instead of a str param like `report_type`, I think it'd be better to have a parameter like: `include_behavioral_summary`, so we will always fetch the relationship/default detail but also include the behavioral data if this param is set to True.\r\n\r\nThe problem I see with `report_type` is that user cannot request multiple types of information in a single analysis only.\r\n\r\n@mlodic, thoughts ?"", 'comment_created': datetime.datetime(2021, 8, 6, 12, 19, 8, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 684199803, 'comment_body': 'I agree with Eshaan.\r\n\r\nTo test some samples already in VT with sigma rules try `478331245c3ad724ce0880ebd911fd54` or `2e74c9eb3caf855ea2d050b4ece174c8` and let me know if it does find anything', 'comment_created': datetime.datetime(2021, 8, 6, 12, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 684201220, 'comment_body': 'Cool. Similar to behaviour one would be the `include_sigma_analyses` for sigma.', 'comment_created': datetime.datetime(2021, 8, 6, 12, 37, 26, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 684203493, 'comment_body': ""That would be better, yeah. Although the way the analyzer is written right now, it's a bit messy. Maybe after we get the report, just before returning it, we can call on these endpoints if the config variable is set to True and append the data to the rest of the dictionary."", 'comment_created': datetime.datetime(2021, 8, 6, 12, 41, 5, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 684212702, 'comment_body': ""yes, that's how it should be. "", 'comment_created': datetime.datetime(2021, 8, 6, 12, 55, 6, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 684283049, 'comment_body': 'Actually, the hashes @mlodic provided are md5 but the `sigma_analyses` API works only with sha256 hash. ([docs reference](https://developers.virustotal.com/v3.0/reference#get-sigma-analysis-id))', 'comment_created': datetime.datetime(2021, 8, 6, 14, 33, 3, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}]","[{'commit_sha': 'e04170cb4b2f691dbeb2a79b3900683871e7db3f', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49d7cb7e7761b6d98ecc9d28d9d75417cb4340a8', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b1d66653c8e29035c490969f5a852fa5ac915c5', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ba9f3064adf962816b04d94b299da50f970d77e', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29ca3ecc3bf77081c7728a89bd46b727312b472e', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c81385ad4cfa8f9cd304236c7f2e93d5798a4ac4', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0a176e7c9bc6e5d5ababb105c81cf0e8bec8b40', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40c5e02c484c7fc6dbe6fd24d5e0bb628410c356', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d9b86927f9786deba795f122506bde2f70dc262', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '156c61dcbc3d660d0f543c190d723dd791045ce9', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4efda5b10ea7cb5e96d6d386f97d1b31848724ea', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2226d6c59a1e8573a88808b04da7e107e903f265', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47
712224239,Fixes #5: Added ClamAV Analyzer,"# Checklist

- [X] Barebones changes + configuration
- [x] Set up `clamd` daemon + configuration
- [x] Test changes
- [x] Update docs

## Related issues
#5 

## Type of change

- [X] New feature (non-breaking change which adds functionality).

# Checklist

- [X] The pull request is for the branch develop
- [ ] If I added a new analyzer, I updated the file [Usage](https://github.com/intelowlproject/IntelOwl/blob/master/docs/source/Usage.md). If the analyzer provides additional optional configuration, I added the available options here: [Advanced-Usage](./Advanced-Usage.md)
- [x] If I added external libraries/packages that use restrictive licenses, please add them in the [ReadMe - Legal Notice](https://github.com/certego/IntelOwl/blob/master/README.md) section
- [ ] The tests gave 0 errors.
- [X] `Black` gave 0 errors.
- [X] `Flake` gave 0 errors.
",True,633,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/633,https://github.com/intelowlproject/IntelOwl/pull/633,closed,164,12,13,16,5,13,1,1,[{'name': 'new_analyzer'}],2021-08-13 09:51:15+00:00,2021-08-26 07:24:54+00:00,1114419.0,"12 days, 21:33:39","[{'comment_id': 693830210, 'comment_body': '`poll_distance` should be 3 seconds, `max_tries` should be 5 and `timeout` should be 15.', 'comment_created': datetime.datetime(2021, 8, 23, 9, 55, 5, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 693830906, 'comment_body': '```suggestion\r\n# start clam service itself and the updater in background as daemon\r\nfreshclam -d &\r\nclamd &\r\n```\r\nso they both run in the background.', 'comment_created': datetime.datetime(2021, 8, 23, 9, 56, 10, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 694571814, 'comment_body': 'I think `clamd` starts in the background only by default and `-d` option for `freshclam` makes it start as a daemon. So,\r\n```bash\r\nfreshclam -d\r\nclamd\r\n```\r\nshould be enough I think', 'comment_created': datetime.datetime(2021, 8, 24, 7, 23, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 696651538, 'comment_body': 'a question, why this?', 'comment_created': datetime.datetime(2021, 8, 26, 13, 51, 30, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 696654587, 'comment_body': 'Because the `report` may not always be JSON, it can be string also.', 'comment_created': datetime.datetime(2021, 8, 26, 13, 54, 38, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 696654718, 'comment_body': 'there is an additional dot here', 'comment_created': datetime.datetime(2021, 8, 26, 13, 54, 46, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 696656728, 'comment_body': 'I hate docker.', 'comment_created': datetime.datetime(2021, 8, 26, 13, 56, 51, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 696657860, 'comment_body': 'fixed https://github.com/intelowlproject/IntelOwl/commit/f9c1b2a1df30e32f9bba1cfe70ca32b2c0f76a5b', 'comment_created': datetime.datetime(2021, 8, 26, 13, 58, 1, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 696660685, 'comment_body': ""is `clamav-milter.conf` required? I don't see any other reference to it. Plus it is a mail filtering tool so I guess it is not needed"", 'comment_created': datetime.datetime(2021, 8, 26, 14, 0, 59, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 696662334, 'comment_body': 'I actually removed the `clamav-milter.conf` file but did not remove this line from docs.', 'comment_created': datetime.datetime(2021, 8, 26, 14, 2, 40, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 696662940, 'comment_body': 'Will make this part of #651.', 'comment_created': datetime.datetime(2021, 8, 26, 14, 3, 21, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 696671135, 'comment_body': ""for example, clamav doesn't give report in JSON format."", 'comment_created': datetime.datetime(2021, 8, 26, 14, 12, 1, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 696693091, 'comment_body': 'ok that is pretty confusing if someone else will look at this code with the risk of having this other person to introduce bugs by possibly changing the code. Could you add a comment please?', 'comment_created': datetime.datetime(2021, 8, 26, 14, 35, 18, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}]","[{'commit_sha': '45ed95b671820ea05ae40baad709d9c5142ec991', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3da93be1828b576649e0e2ae12d90ca585ebaa5', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6329127ba98c8e1a8309eed7f184257bbe6350f1', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8dd464ef3103c7e83bb282019c443e00c294f75', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05c67613117c0afbfffa2b1514aaad6c65079817', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41dd9ab9f88e0a88417799ad8690a110a46a8bfd', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4e55eb725aac12fb88f98f3ffc9ac55cfc4d5fe', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc54b7ba7a9f073e238d18500536bef3caa9985d', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed7aacaaa28473ed8b1cf4f0281e6d5faa73a8b3', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cee80f297eaba310ef79e7b70a871975987b8d3', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8ffd4ec6cbd7bfa195455bd06fcb7f762a51972', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6ac81e4c7a5ddd7ce4eda48ca55a49041330af9', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78f81f2b819a205db94264196b632a9d16544a87', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60c7059ad66b76fa3492a224d8550c7f32a186f3', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '933d4740733264bb49959141db37a1cc5ec62241', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '192262925bd3876b974df412abdfa56c4457e98f', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}]",Sarthak Khattar,17424778,sarthakoct@gmail.com,User,,30,,47,47

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
231109256,IntelOwl,intelowlproject/IntelOwl,Python,421,3667,81,60,2443,79,58,18,"[{'id': 718781744, 'number': 656, 'closed': datetime.datetime(2021, 8, 26, 7, 28, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 24, 14, 9, 13, tzinfo=datetime.timezone.utc), 'time_taken': 148748.0, 'time_delta': '1 day, 17:19:08', 'additions': 58, 'deletions': 34, 'state': 'closed'}, {'id': 712224239, 'number': 633, 'closed': datetime.datetime(2021, 8, 26, 7, 24, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 13, 9, 51, 15, tzinfo=datetime.timezone.utc), 'time_taken': 1114419.0, 'time_delta': '12 days, 21:33:39', 'additions': 164, 'deletions': 12, 'state': 'closed'}, {'id': 710500734, 'number': 630, 'closed': datetime.datetime(2021, 8, 12, 10, 44, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 8, 51, 26, tzinfo=datetime.timezone.utc), 'time_taken': 6765.0, 'time_delta': '1:52:45', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 706501662, 'number': 624, 'closed': datetime.datetime(2021, 8, 9, 15, 35, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 13, 3, 26, tzinfo=datetime.timezone.utc), 'time_taken': 9150.0, 'time_delta': '2:32:30', 'additions': 23, 'deletions': 8, 'state': 'closed'}, {'id': 704703292, 'number': 617, 'closed': datetime.datetime(2021, 8, 9, 15, 25, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 5, 13, 21, 31, tzinfo=datetime.timezone.utc), 'time_taken': 353047.0, 'time_delta': '4 days, 2:04:07', 'additions': 421, 'deletions': 373, 'state': 'closed'}, {'id': 703277120, 'number': 610, 'closed': datetime.datetime(2021, 8, 9, 8, 58, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 10, 44, 47, tzinfo=datetime.timezone.utc), 'time_taken': 425643.0, 'time_delta': '4 days, 22:14:03', 'additions': 439, 'deletions': 276, 'state': 'closed'}, {'id': 701361338, 'number': 605, 'closed': datetime.datetime(2021, 9, 7, 8, 23, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 11, 1, 35, tzinfo=datetime.timezone.utc), 'time_taken': 3100911.0, 'time_delta': '35 days, 21:21:51', 'additions': 34, 'deletions': 1, 'state': 'closed'}, {'id': 699540769, 'number': 598, 'closed': datetime.datetime(2021, 8, 2, 8, 5, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 29, 13, 36, 8, tzinfo=datetime.timezone.utc), 'time_taken': 325761.0, 'time_delta': '3 days, 18:29:21', 'additions': 119, 'deletions': 148, 'state': 'closed'}, {'id': 694376448, 'number': 557, 'closed': datetime.datetime(2021, 7, 26, 7, 20, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 21, 13, 35, 7, tzinfo=datetime.timezone.utc), 'time_taken': 409496.0, 'time_delta': '4 days, 17:44:56', 'additions': 28, 'deletions': 47, 'state': 'closed'}, {'id': 694342180, 'number': 556, 'closed': datetime.datetime(2021, 7, 21, 13, 5, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 21, 12, 50, 18, tzinfo=datetime.timezone.utc), 'time_taken': 891.0, 'time_delta': '0:14:51', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 692422434, 'number': 551, 'closed': datetime.datetime(2021, 7, 21, 8, 9, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 9, 10, 24, tzinfo=datetime.timezone.utc), 'time_taken': 169132.0, 'time_delta': '1 day, 22:58:52', 'additions': 259, 'deletions': 274, 'state': 'closed'}, {'id': 691573981, 'number': 547, 'closed': datetime.datetime(2021, 7, 19, 9, 10, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 15, 27, 5, tzinfo=datetime.timezone.utc), 'time_taken': 236624.0, 'time_delta': '2 days, 17:43:44', 'additions': 962, 'deletions': 1174, 'state': 'closed'}, {'id': 685141649, 'number': 526, 'closed': datetime.datetime(2021, 7, 8, 7, 29, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 12, 13, 59, tzinfo=datetime.timezone.utc), 'time_taken': 69352.0, 'time_delta': '19:15:52', 'additions': 285, 'deletions': 32, 'state': 'closed'}, {'id': 683705605, 'number': 523, 'closed': datetime.datetime(2021, 7, 6, 16, 37, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 13, 28, 30, tzinfo=datetime.timezone.utc), 'time_taken': 97761.0, 'time_delta': '1 day, 3:09:21', 'additions': 118, 'deletions': 25, 'state': 'closed'}, {'id': 674746225, 'number': 498, 'closed': datetime.datetime(2021, 6, 30, 8, 46, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 17, 30, 35, tzinfo=datetime.timezone.utc), 'time_taken': 746164.0, 'time_delta': '8 days, 15:16:04', 'additions': 3450, 'deletions': 2096, 'state': 'closed'}, {'id': 663514295, 'number': 473, 'closed': datetime.datetime(2021, 6, 26, 11, 50, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 7, 12, 22, 21, tzinfo=datetime.timezone.utc), 'time_taken': 1639691.0, 'time_delta': '18 days, 23:28:11', 'additions': 874, 'deletions': 330, 'state': 'closed'}, {'id': 589666293, 'number': 349, 'closed': datetime.datetime(2021, 3, 10, 14, 9, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 10, 14, 4, 46, tzinfo=datetime.timezone.utc), 'time_taken': 279.0, 'time_delta': '0:04:39', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 574171178, 'number': 338, 'closed': datetime.datetime(2021, 2, 17, 17, 46, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 16, 12, 48, 55, tzinfo=datetime.timezone.utc), 'time_taken': 104284.0, 'time_delta': '1 day, 4:58:04', 'additions': 9, 'deletions': 0, 'state': 'closed'}, {'id': 553402878, 'number': 317, 'closed': datetime.datetime(2021, 4, 2, 9, 22, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 12, 11, 51, 48, tzinfo=datetime.timezone.utc), 'time_taken': 6903049.0, 'time_delta': '79 days, 21:30:49', 'additions': 237, 'deletions': 82, 'state': 'closed'}, {'id': 546960692, 'number': 305, 'closed': datetime.datetime(2021, 1, 2, 13, 10, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 30, 14, 12, 58, tzinfo=datetime.timezone.utc), 'time_taken': 255479.0, 'time_delta': '2 days, 22:57:59', 'additions': 49, 'deletions': 3, 'state': 'closed'}, {'id': 534708618, 'number': 283, 'closed': datetime.datetime(2020, 12, 14, 19, 17, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 8, 20, 38, 9, tzinfo=datetime.timezone.utc), 'time_taken': 513540.0, 'time_delta': '5 days, 22:39:00', 'additions': 188, 'deletions': 3, 'state': 'closed'}, {'id': 521188464, 'number': 253, 'closed': datetime.datetime(2020, 11, 19, 9, 53, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 15, 12, 32, 10, tzinfo=datetime.timezone.utc), 'time_taken': 336085.0, 'time_delta': '3 days, 21:21:25', 'additions': 136, 'deletions': 0, 'state': 'closed'}, {'id': 515452214, 'number': 243, 'closed': datetime.datetime(2020, 11, 10, 13, 29, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 4, 15, 15, 45, tzinfo=datetime.timezone.utc), 'time_taken': 512016.0, 'time_delta': '5 days, 22:13:36', 'additions': 98, 'deletions': 2, 'state': 'closed'}]"
263673442,IntelOwl-ng,intelowlproject/IntelOwl-ng,TypeScript,17,86,11,3,160,25,22,16,"[{'id': 718845741, 'number': 141, 'closed': datetime.datetime(2021, 8, 26, 7, 28, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 24, 15, 23, 48, tzinfo=datetime.timezone.utc), 'time_taken': 144296.0, 'time_delta': '1 day, 16:04:56', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 701442331, 'number': 124, 'closed': datetime.datetime(2021, 8, 2, 13, 11, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 12, 58, 19, tzinfo=datetime.timezone.utc), 'time_taken': 764.0, 'time_delta': '0:12:44', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 695224272, 'number': 122, 'closed': datetime.datetime(2021, 7, 26, 7, 20, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 22, 14, 16, 33, tzinfo=datetime.timezone.utc), 'time_taken': 320627.0, 'time_delta': '3 days, 17:03:47', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 691578849, 'number': 121, 'closed': datetime.datetime(2021, 7, 21, 8, 9, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 15, 34, 35, tzinfo=datetime.timezone.utc), 'time_taken': 405305.0, 'time_delta': '4 days, 16:35:05', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 679806445, 'number': 116, 'closed': datetime.datetime(2021, 7, 6, 16, 30, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 29, 10, 26, 25, tzinfo=datetime.timezone.utc), 'time_taken': 626635.0, 'time_delta': '7 days, 6:03:55', 'additions': 103, 'deletions': 89, 'state': 'closed'}, {'id': 613567063, 'number': 93, 'closed': datetime.datetime(2021, 5, 21, 11, 33, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 12, 12, 2, 27, tzinfo=datetime.timezone.utc), 'time_taken': 3367870.0, 'time_delta': '38 days, 23:31:10', 'additions': 47, 'deletions': 28, 'state': 'closed'}, {'id': 610024433, 'number': 90, 'closed': datetime.datetime(2021, 4, 11, 15, 10, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 6, 17, 19, 19, tzinfo=datetime.timezone.utc), 'time_taken': 424290.0, 'time_delta': '4 days, 21:51:30', 'additions': 50, 'deletions': 37, 'state': 'closed'}, {'id': 601942715, 'number': 83, 'closed': datetime.datetime(2021, 4, 2, 9, 31, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 26, 22, 50, 10, tzinfo=datetime.timezone.utc), 'time_taken': 556908.0, 'time_delta': '6 days, 10:41:48', 'additions': 110, 'deletions': 95, 'state': 'closed'}]"
218579196,pyintelowl,intelowlproject/pyintelowl,Python,26,58,9,13,309,13,8,6,"[{'id': 718910339, 'number': 120, 'closed': datetime.datetime(2021, 8, 26, 7, 29, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 24, 16, 52, 1, tzinfo=datetime.timezone.utc), 'time_taken': 139034.0, 'time_delta': '1 day, 14:37:14', 'additions': 10, 'deletions': 8, 'state': 'closed'}, {'id': 712263519, 'number': 116, 'closed': datetime.datetime(2021, 8, 13, 11, 10, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 13, 10, 53, 44, tzinfo=datetime.timezone.utc), 'time_taken': 1035.0, 'time_delta': '0:17:15', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 712251285, 'number': 115, 'closed': datetime.datetime(2021, 8, 13, 11, 40, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 13, 10, 32, 4, tzinfo=datetime.timezone.utc), 'time_taken': 4100.0, 'time_delta': '1:08:20', 'additions': 36, 'deletions': 7, 'state': 'closed'}, {'id': 702062964, 'number': 110, 'closed': datetime.datetime(2021, 8, 3, 14, 4, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 3, 8, 19, 4, tzinfo=datetime.timezone.utc), 'time_taken': 20708.0, 'time_delta': '5:45:08', 'additions': 46, 'deletions': 1, 'state': 'closed'}, {'id': 699430041, 'number': 108, 'closed': datetime.datetime(2021, 7, 29, 11, 33, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 29, 11, 3, 40, tzinfo=datetime.timezone.utc), 'time_taken': 1763.0, 'time_delta': '0:29:23', 'additions': 50, 'deletions': 16, 'state': 'closed'}, {'id': 698482558, 'number': 107, 'closed': datetime.datetime(2021, 7, 28, 14, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 28, 8, 36, 35, tzinfo=datetime.timezone.utc), 'time_taken': 22585.0, 'time_delta': '6:16:25', 'additions': 92, 'deletions': 64, 'state': 'closed'}, {'id': 697141612, 'number': 102, 'closed': datetime.datetime(2021, 7, 28, 11, 16, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 26, 15, 40, 54, tzinfo=datetime.timezone.utc), 'time_taken': 156911.0, 'time_delta': '1 day, 19:35:11', 'additions': 546, 'deletions': 158, 'state': 'closed'}, {'id': 695873624, 'number': 100, 'closed': datetime.datetime(2021, 7, 27, 13, 55, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 23, 11, 31, 23, tzinfo=datetime.timezone.utc), 'time_taken': 354223.0, 'time_delta': '4 days, 2:23:43', 'additions': 55, 'deletions': 1, 'state': 'closed'}, {'id': 695166385, 'number': 99, 'closed': datetime.datetime(2021, 7, 23, 10, 8, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 22, 13, 15, 15, tzinfo=datetime.timezone.utc), 'time_taken': 75200.0, 'time_delta': '20:53:20', 'additions': 32, 'deletions': 0, 'state': 'closed'}, {'id': 692567150, 'number': 98, 'closed': datetime.datetime(2021, 7, 21, 8, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 12, 35, 5, tzinfo=datetime.timezone.utc), 'time_taken': 156955.0, 'time_delta': '1 day, 19:35:55', 'additions': 21, 'deletions': 13, 'state': 'closed'}]"
