pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1377954928,GSoC [M1.2] - New Service to compute Html length,"## Overview

1. This PR does the following: This PR introduces a new service function [M1.2] which will be extended to contributor dashboard component in [M1.3]. This service file computes length of Html string for both text and non text nodes by assigning them a weight.

For p tag and other text nodes, weight is the no of words of text content in it
For images, weight is the no of words in alt text attribute of it + a bonus of 2 (as sometimes image have text which need to be translated as well)
For math svg files, weight is ""1"".
[Proposal](https://docs.google.com/document/d/18rFozOzbcDYWa6sS9gTYu4R_VfMevbM5v3xlf7Gy3zQ/edit#bookmark=id.ldll1ewuhrix)
## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct


## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
",True,18335,https://api.github.com/repos/oppia/oppia/pulls/18335,https://github.com/oppia/oppia/pull/18335,closed,234,1,4,31,19,18,1,1,[{'name': 'PR: LGTM'}],2023-06-04 21:37:25+00:00,2023-06-16 09:15:21+00:00,992276.0,"11 days, 11:37:56","[{'comment_id': 1220734887, 'comment_body': 'Should the contributor experience team also own the associated spec file?', 'comment_created': datetime.datetime(2023, 6, 7, 2, 40, 56, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 1220882983, 'comment_body': 'Done, PTAL', 'comment_created': datetime.datetime(2023, 6, 7, 5, 41, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1222439614, 'comment_body': ""```suggestion\r\n    const htmlString = '';\r\n\r\n    const result = htmlLengthService.computeHtmlLengthInWords(htmlString);\r\n\r\n    expect(result).toBe(0);\r\n```"", 'comment_created': datetime.datetime(2023, 6, 8, 4, 33, 39, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 1222439685, 'comment_body': ""```suggestion\r\n    const htmlString = '<p>Earth Our home planet is the third planet' +\r\n      ' from the sun. Despite the vastness of the Solar System and' +\r\n      ' the rest of space, it is the only place that we know life' +\r\n      ' exists on. It is at just the right distance from the sun to' +\r\n      ' ensure a comfortable temperature for us to exist in.</p>';\r\n  \r\n    const result = htmlLengthService.computeHtmlLengthInWords(htmlString);\r\n\r\n    expect(result).toBe(54);\r\n```"", 'comment_created': datetime.datetime(2023, 6, 8, 4, 33, 48, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 1222439781, 'comment_body': ""```suggestion\r\n    ' descendants text nodes', () => {\r\n    const htmlString = '<p><em>This is a brief exploration about' +\r\n      'conjugations in Spanish.</em>Consider the following sentence' +\r\n      ':<br><br><em> Yo jugar al f√∫tbol con amigos los domingos.<br>' +\r\n      '<br></em> What verb conjugation goes in the blank?</p>';\r\n\r\n    const result = htmlLengthService.computeHtmlLengthInWords(htmlString);\r\n\r\n    expect(result).toBe(26);\r\n```"", 'comment_created': datetime.datetime(2023, 6, 8, 4, 34, 3, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 1222439885, 'comment_body': '```suggestion\r\n    const result = htmlLengthService.computeHtmlLengthInWords(htmlString);\r\n\r\n    expect(result).toBe(expectedLength);\r\n```', 'comment_created': datetime.datetime(2023, 6, 8, 4, 34, 20, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 1222439986, 'comment_body': '```suggestion\r\n    const result = htmlLengthService.computeHtmlLengthInWords(htmlString);\r\n\r\n    expect(result).toBe(expectedLength);\r\n```', 'comment_created': datetime.datetime(2023, 6, 8, 4, 34, 32, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 1223340213, 'comment_body': 'Can you add a test case that covers `ol` and `ul`?', 'comment_created': datetime.datetime(2023, 6, 8, 17, 17, 28, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1224077008, 'comment_body': 'Done, PTAL.', 'comment_created': datetime.datetime(2023, 6, 9, 9, 28, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1225729612, 'comment_body': ""@Ash-2k3 I don't see the new test cases that cover `ol` and `ul`. Can you please point me to them?"", 'comment_created': datetime.datetime(2023, 6, 11, 7, 14, 24, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 1225731110, 'comment_body': ""@gp201 Here's the test case for list."", 'comment_created': datetime.datetime(2023, 6, 11, 7, 16, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1225732777, 'comment_body': 'Can you remove the variable `expectedLength` and directly place the value in the `expect` stmt? Please do this for all the  tests', 'comment_created': datetime.datetime(2023, 6, 11, 7, 23, 7, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 1225732811, 'comment_body': 'Can you add a test of `ol` too?', 'comment_created': datetime.datetime(2023, 6, 11, 7, 23, 25, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 1226405821, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 6, 12, 10, 1, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1226406006, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 6, 12, 10, 1, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1229447295, 'comment_body': 'Hey @Ash-2k3 , I did not really get why there is a +2 here, would you please explain this to me ? Thanks!', 'comment_created': datetime.datetime(2023, 6, 14, 11, 31, 39, tzinfo=datetime.timezone.utc), 'commenter': 'SanjaySajuJacob', 'type': 'User'}, {'comment_id': 1229572257, 'comment_body': '@SanjaySajuJacob For each image instance we will add a small premium of 2 as there are occasionally such cases where images have text which need to be translated as well. Also FYI this was suggested by Sean.', 'comment_created': datetime.datetime(2023, 6, 14, 12, 52, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1230341655, 'comment_body': 'Oh I see, thanks!', 'comment_created': datetime.datetime(2023, 6, 15, 2, 14, 56, tzinfo=datetime.timezone.utc), 'commenter': 'SanjaySajuJacob', 'type': 'User'}]","[{'commit_sha': '85569945a9afda58c0ba6f87bd644e1e4456b72f', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc1520c3621d4f117dd5b35d7162e388f085b7ff', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '940f736d2051d2bf96cea818a0fe2312d464350b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1396c6155a8d35d03fb0ba318381213cb74a578a', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2ad712e67990da9bd790ed9c5ca8a13f96ff597', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97c1edec5066fc7163f6dc8c5cc0694e0110153e', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c04da90f3f78270f881c3f34308fc28bf6cc6da', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61c058b6e8468fdd5d493d980cc1655289af8246', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b12fe3c14ee1ea164eaaa42e546b86cebe6bdcf', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '011127aa35d0ece3a7b87001def9ffa0e3e85f26', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55764315d04b7c74dcd63da66de2135ebd533ba9', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a35018af8835768d79d1c5262dc5b1bcaa5d0838', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e4f46beed1d8522b6f8f5df67bdcd08dbae2e74', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03609175e2218b8a068a00068102084958029f20', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '435102adc0e1ae6f59a1869aa9f7314cdd8272a6', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38a945ae6360b0b32adf17282b59b3cbf979e1f6', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ce04af5e88123b69daf6533f8ccbcb4981453cc', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf9d2000b90e3920551c4d25997811f4f5adea33', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '524739f185a9de416a022fd3080e82e19bcec7f3', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d1ad483ac07522df9e588cfcb4ef4771a80abb8', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '233efce5ecd33c9e3e24dfeeb79cc7c098fa1da7', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49a83932811a8364098d2dc8d3c5bd44d54fa257', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '956cd3eedffca277af7a65abad3646f935ac462a', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b653a575d65d991806373b1516ae04d6a3ea6f66', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26e62f759b7c30bcf3576fcc6dfd2a9745a68deb', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e55f5adb6635b033ce72e76befc72db1a35addc5', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc975971b8e12f927ea86d5b111f28add4b061e0', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b00305718bc3b91c5caf9dd5bafc849f47ffe44d', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30aa6d1c18b5507ca5c3aa7d58fc2abdf0f31ba4', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '636b672e239bfbd2ecd79b51023475f617dc902c', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a01990a721710da1cfb698f9f85bc06c8e20fce5', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}]",Ashwath Kannan,98253080,,User,,67,,4,15
1395875014,GSoC_M1.3 : Add translation Length label,"## Overview

1. This PR does the following: This PR uses the service function created in M1.2 to compute the length of exploration content and use it to determine whether it's ""short"" or ""long"". 

Mocks https://docs.google.com/document/d/18rFozOzbcDYWa6sS9gTYu4R_VfMevbM5v3xlf7Gy3zQ/edit#bookmark=id.ux1yeqo0cdm

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<img width=""1440"" alt=""Screenshot 2023-06-21 at 23 10 07"" src=""https://github.com/oppia/oppia/assets/98253080/8fc13815-79a3-4442-8afe-ed12c5a581bb"">

## Proof of changes on mobile phone

<img width=""1440"" alt=""Screenshot 2023-06-21 at 23 09 46"" src=""https://github.com/oppia/oppia/assets/98253080/19f46e9b-12f1-4f20-9598-a7dd81c57e32"">

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
",True,18392,https://api.github.com/repos/oppia/oppia/pulls/18392,https://github.com/oppia/oppia/pull/18392,closed,105,5,5,30,18,37,1,1,[{'name': 'PR: LGTM'}],2023-06-16 14:55:44+00:00,2023-06-24 04:44:30+00:00,654526.0,"7 days, 13:48:46","[{'comment_id': 1232781503, 'comment_body': '```suggestion\r\n    return this.htmlLengthService.computeHtmlLengthInWords(\r\n      translationHtml);\r\n```', 'comment_created': datetime.datetime(2023, 6, 16, 21, 9, 3, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1232782990, 'comment_body': 'Can you link the mocks in the description? I don\'t see the label in the mocks linked here: https://docs.google.com/document/d/18rFozOzbcDYWa6sS9gTYu4R_VfMevbM5v3xlf7Gy3zQ/edit#heading=h.7256db801f6r. \r\n\r\nI find it a bit odd to have the label be yellow, as I usually associate yellow with ""medium"" or ""in-progress"". Since the intent is to encourage reviewers to quickly look at short translations, I would think we would want the color to be more ""inviting"" if that makes sense.', 'comment_created': datetime.datetime(2023, 6, 16, 21, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1232784331, 'comment_body': 'Why do we need the `span` here?', 'comment_created': datetime.datetime(2023, 6, 16, 21, 14, 16, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1232794121, 'comment_body': 'We should add a test for the `short` case.', 'comment_created': datetime.datetime(2023, 6, 16, 21, 24, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1232795921, 'comment_body': 'Hm are we sure we even want to label ""long"" translations? It might enough to just highlight the short ones. Also since translations near the cutoff don\'t really seem ""long"", e.g. 20 words, so the label doesn\'t seem like a strict dichotomy. ', 'comment_created': datetime.datetime(2023, 6, 16, 21, 26, 43, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1232797664, 'comment_body': ""Doesn't seem necessary to create a new variable for this. We can just access it from the opportunity in the html."", 'comment_created': datetime.datetime(2023, 6, 16, 21, 28, 33, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1232798766, 'comment_body': '```suggestion\r\n  computeTranslationWordCount(translationHtml: string): number {\r\n```', 'comment_created': datetime.datetime(2023, 6, 16, 21, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1232801509, 'comment_body': '```suggestion\r\n  translationWordCount?: number;\r\n```', 'comment_created': datetime.datetime(2023, 6, 16, 21, 32, 39, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1232801692, 'comment_body': '```suggestion\r\n  translationWordCount?: number;\r\n```', 'comment_created': datetime.datetime(2023, 6, 16, 21, 32, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1232806690, 'comment_body': '```suggestion\r\n       *ngIf=""opportunity?.translationWordCount"">\r\n```', 'comment_created': datetime.datetime(2023, 6, 16, 21, 37, 15, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1232808817, 'comment_body': ""I don't know if these variables are necessary. Seems simple enough to do everything in the html."", 'comment_created': datetime.datetime(2023, 6, 16, 21, 39, 30, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1232810216, 'comment_body': 'This logic looks simple enough to just inline below instead of declaring extra variables.', 'comment_created': datetime.datetime(2023, 6, 16, 21, 40, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1232811661, 'comment_body': 'I would expect this to not be `undefined`. I think we need to update this test to have translations data.', 'comment_created': datetime.datetime(2023, 6, 16, 21, 42, 7, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1232990302, 'comment_body': 'I dont think we need to have test cases now, as we have shifted the logic from component to html file. ', 'comment_created': datetime.datetime(2023, 6, 17, 8, 9, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1232990742, 'comment_body': ""I think just having short label won't be of much good here ? That might be confusing as some cards are labelled as short and some are not labeled at all. WDYT ?\r\n\r\nWell there has to be some cutoff ? Also it was mentioned in PRD that 20 is the cutoff to determine whether the translation is short or long, that's why I went with it."", 'comment_created': datetime.datetime(2023, 6, 17, 8, 14, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1232990960, 'comment_body': ""Well I just followed the same pattern we had for other labels. But since these variables are only the use case for a very particular part, it's better to move it to html, Thanks."", 'comment_created': datetime.datetime(2023, 6, 17, 8, 16, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1232991504, 'comment_body': 'Removed, thanks.', 'comment_created': datetime.datetime(2023, 6, 17, 8, 19, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1232993484, 'comment_body': 'I have included the mocks in description(https://docs.google.com/document/d/18rFozOzbcDYWa6sS9gTYu4R_VfMevbM5v3xlf7Gy3zQ/edit#bookmark=id.ux1yeqo0cdm). \r\n\r\nIn that case, do you have any suggestions ? Maybe light-green for short ones and yellow for long ? Or green shade for all. WDYT', 'comment_created': datetime.datetime(2023, 6, 17, 8, 32, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1232993599, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 6, 17, 8, 33, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1235619716, 'comment_body': 'Well the review buttons are already green, so perhaps a blue, e.g. Blumine linked in the color palette: https://www.figma.com/file/nrQrOxSxSg1oabuVE6XJpa/Oppia-Design-Guide?type=design&node-id=0-1&t=QctgZpDYCFNnCAbt-0. ', 'comment_created': datetime.datetime(2023, 6, 20, 17, 52, 40, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1235626364, 'comment_body': 'Well, I believe the intention was to highlight and draw attention to the short ones to identify the ""easy wins"". It feels a bit cluttered and also not accurate to label all others as ""long"" either. ', 'comment_created': datetime.datetime(2023, 6, 20, 17, 59, 31, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1235633165, 'comment_body': ""`exploration_content_html` is actually the content of the exploration (which may have changed after the translation was submitted). I think you want to get the content of the suggestion's change object."", 'comment_created': datetime.datetime(2023, 6, 20, 18, 6, 5, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1235634966, 'comment_body': ""I think you'll want to update this test object to look more like line 1110 above since it's missing some fields."", 'comment_created': datetime.datetime(2023, 6, 20, 18, 7, 30, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1235636173, 'comment_body': '```suggestion\r\n         ngbTooltip=""Translation word count: {{opportunity.translationWordCount}}"">\r\n```', 'comment_created': datetime.datetime(2023, 6, 20, 18, 8, 10, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1235642999, 'comment_body': 'Can we at least test that the `TranslationLengthLabel` element is being displayed with the correct label or not e.g. https://angular.io/guide/testing-components-basics#nativeelement? ', 'comment_created': datetime.datetime(2023, 6, 20, 18, 12, 34, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1235743233, 'comment_body': 'I am not sure if I totally agree with this. @seanlip WDYT, should we have labels only for short translations or both ?', 'comment_created': datetime.datetime(2023, 6, 20, 19, 37, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1235815603, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 6, 20, 20, 52, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1235836068, 'comment_body': 'Done, I picked a lighter shade of blumine as it looked better. Thanks !', 'comment_created': datetime.datetime(2023, 6, 20, 21, 2, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1236860672, 'comment_body': '@sagangwee is right, only short translations need to be labelled. These are just to help reviewers identify ""quick wins"". If you label everything, the short ones stand out less.', 'comment_created': datetime.datetime(2023, 6, 21, 11, 40, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1237369804, 'comment_body': 'Thanks, I have updated accordingly.', 'comment_created': datetime.datetime(2023, 6, 21, 17, 43, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1238880652, 'comment_body': ""Actually this method doesn't seem necessary. Let's just call the `this.htmlLengthService.computeHtmlLengthInWords` function directly above."", 'comment_created': datetime.datetime(2023, 6, 22, 18, 15, 45, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1238881763, 'comment_body': 'Nit: Add new line above. Also the test name should indicate that this is when the translation word count is considered short, and we should have another test when the translation word count is not short where the label is not shown.', 'comment_created': datetime.datetime(2023, 6, 22, 18, 16, 58, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1238883193, 'comment_body': ""Probably can remove this since we're also testing the inner label anyway."", 'comment_created': datetime.datetime(2023, 6, 22, 18, 18, 40, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}]","[{'commit_sha': '4853d8c4b35e3e67e1360e7e39de912dd748bf84', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '190339a32d67f0982d03e20ee1ef9746eec5f79d', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58874fa998abc89baeb2d70716dc60d5ef5888e1', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48b9d89011768db6608eb4bab51ec9ef6fd3871b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '826809f428b18fbc669168c05d4b91a0b39ecaaa', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65b5ffede099f2bf725f4f36a233e4779f16d088', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f243219d4c73cc069f28e30e6b556f098d4fae8', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd1b1806cf9f9e0ea83fd920ee0a174665c4e0a8', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bed3d3e9e1094b96e1ccde68b84a9d807bff288a', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa7740473383cb1cfdef2564b1e9e0c45b8a7930', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d529d66e504fcd89abe491087ed91ac7cfae835', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3fc1951d362fbdafb915b22c1282de1760cc881', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b2320599554bcad1ceea633a826cd291148d979', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96820854d49ea14bd7e068a62f8b108ec8ce95b8', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbeefea8e06c153883451ec34bb303e837ca2b3c', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '624b5d41ddc253d732938425e3f96207dbbc76c7', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4ae424b2f076150ac94efa80d7a4277f364c840', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57b74ba155fa3cab750fd92691f84abf7fc767e9', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0efda5ac29168a0326b84ca68143b73650bd6f81', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1554f7e5fac8b23daca65616c6cd200832db6cc', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f5a2f349d3edb0d1561b44de6255ec8a9140aeb', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb01841e521d387c91d9a2449518590d2313c1b6', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '848d2b787cbe7e6400f3848e69d5fe0e40159d87', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9df378dbab8ed636ec571a681c4c8f232a3396ab', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57cfc3fc20dbc8053ad1bf11b922c826563c21b9', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e1ae764a4db86307eaccc1d3178c6fd67564d0d', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d236c1cc1f14981dc7ffd06b55f4c766efc6392', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3ab863dd700798bede51d63de8fe6bc2ac9c027', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbb66040ef591a451c6fb8689e5f7f118d5320f2', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26fcdfc0fe9afcc93f014e3f18e0d34d4d0e1534', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}]",Ashwath Kannan,98253080,,User,,67,,4,15
1445374570,[GSoC_M1.4]: Sort translation suggestions in CD as per lesson flow,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR does the following: This PR introduces a new sorting function which will be called by the fetch function(fetch function for translation suggestions). This sorting function will be responsible for arranging translation suggestions as per the lesson flow.


## Essential Checklist

- [ ] The **PR title** starts with ""Fix #bugnum: "" or ""Fix part of #bugnum: ..."",
followed by a short, clear summary of the changes.
- [x] I have followed the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- [x] The linter/Karma presubmit checks have passed on my local machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
- [x] I have assigned the correct reviewers to this PR (or will leave a
comment with the phrase ""@{{reviewer_username}} PTAL"" if I don't have
permissions to assign reviewers directly).


## Proof that changes are correct

https://github.com/oppia/oppia/assets/98253080/a873dd11-e648-4643-912e-83980b751439

#### Proof of changes on desktop with slow/throttled network

https://github.com/oppia/oppia/assets/98253080/aa9d60f5-ac53-4dc1-bb91-f54be146c17b
",True,18664,https://api.github.com/repos/oppia/oppia/pulls/18664,https://github.com/oppia/oppia/pull/18664,closed,1174,29,17,88,33,211,1,1,[{'name': 'PR: LGTM'}],2023-07-22 17:15:34+00:00,2023-08-16 12:38:25+00:00,2143371.0,"24 days, 19:22:51","[{'comment_id': 1273619875, 'comment_body': 'Please remove unnecessary comments.', 'comment_created': datetime.datetime(2023, 7, 25, 14, 17, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Lawful2002', 'type': 'User'}, {'comment_id': 1273621416, 'comment_body': 'Why is `unknown` needed here?', 'comment_created': datetime.datetime(2023, 7, 25, 14, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Lawful2002', 'type': 'User'}, {'comment_id': 1273622618, 'comment_body': 'Unnecessary comment', 'comment_created': datetime.datetime(2023, 7, 25, 14, 19, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Lawful2002', 'type': 'User'}, {'comment_id': 1274153430, 'comment_body': 'Instead of this, can we update `get_reviewable_question_suggestions_by_offset` to accept an `Optional[int]` for `limit` for consistency?', 'comment_created': datetime.datetime(2023, 7, 25, 21, 47, 56, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1274154547, 'comment_body': ""```suggestion\r\n    it('should correctly fetch translation suggestions and return ' +\r\n```"", 'comment_created': datetime.datetime(2023, 7, 25, 21, 49, 40, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1274154724, 'comment_body': ""```suggestion\r\n    it('should return translation suggestions for given exploration', async() => {\r\n```"", 'comment_created': datetime.datetime(2023, 7, 25, 21, 49, 56, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1274155058, 'comment_body': 'This comment seems unnecessary.', 'comment_created': datetime.datetime(2023, 7, 25, 21, 50, 28, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1274156113, 'comment_body': '```suggestion\r\n    const fetchSuggestionsResponse = await this.\r\n```', 'comment_created': datetime.datetime(2023, 7, 25, 21, 52, 7, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1274159299, 'comment_body': 'Remove?', 'comment_created': datetime.datetime(2023, 7, 25, 21, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1274159807, 'comment_body': 'This logic feels like it should belong in core/templates/domain/exploration/ExplorationObjectFactory.ts.', 'comment_created': datetime.datetime(2023, 7, 25, 21, 57, 37, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1274163805, 'comment_body': ""This function doesn't seem to provide much value."", 'comment_created': datetime.datetime(2023, 7, 25, 22, 3, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1274171861, 'comment_body': ""Won't this always be false since `fetcher.suggestionIdToDetails` was cleared on line 239?"", 'comment_created': datetime.datetime(2023, 7, 25, 22, 15, 2, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1274173300, 'comment_body': ""Are these parameters even needed? Since we're not fetching one page at a time anymore, then it doesn't seem like we do."", 'comment_created': datetime.datetime(2023, 7, 25, 22, 17, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1274174550, 'comment_body': ""Not sure of the point of this‚Äîcan't you just directly reference `sortedTranslationCards`?"", 'comment_created': datetime.datetime(2023, 7, 25, 22, 19, 31, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1274175272, 'comment_body': 'Nit: Remove.', 'comment_created': datetime.datetime(2023, 7, 25, 22, 20, 47, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1274175774, 'comment_body': ""How can this be `null`? Don't all explorations have an `initStateName`?"", 'comment_created': datetime.datetime(2023, 7, 25, 22, 21, 40, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1274176833, 'comment_body': 'Can we use quotes for all the other keys then for consistency?', 'comment_created': datetime.datetime(2023, 7, 25, 22, 23, 41, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1274176973, 'comment_body': 'Can we extract this out of this function?', 'comment_created': datetime.datetime(2023, 7, 25, 22, 23, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1274178273, 'comment_body': 'The sorting logic should go into a separate function for readability.', 'comment_created': datetime.datetime(2023, 7, 25, 22, 26, 11, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1274179052, 'comment_body': 'Instead of nesting these helper functions, extract them out.', 'comment_created': datetime.datetime(2023, 7, 25, 22, 27, 41, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1274857747, 'comment_body': 'Done, I have made a new method.', 'comment_created': datetime.datetime(2023, 7, 26, 12, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1274861727, 'comment_body': 'In exploration object initStateName can be a null or a string but for `computeGraphService` method it has to be of string type. Thus to avoid assertion error, I added a if condition at line 238.', 'comment_created': datetime.datetime(2023, 7, 26, 12, 8, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1274873091, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 26, 12, 19, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1274884966, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2023, 7, 26, 12, 29, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1274885091, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2023, 7, 26, 12, 29, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1274885280, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2023, 7, 26, 12, 29, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1275328624, 'comment_body': 'Remove?', 'comment_created': datetime.datetime(2023, 7, 26, 18, 11, 40, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1275329038, 'comment_body': 'Remove? Please make sure to do do your own pass to catch things like this.', 'comment_created': datetime.datetime(2023, 7, 26, 18, 12, 8, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1275329148, 'comment_body': 'Remove?', 'comment_created': datetime.datetime(2023, 7, 26, 18, 12, 16, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1275331573, 'comment_body': ""```suggestion\r\n    it('should sort translation cards within each state based ' +\r\n```\r\nRemember to add a space if you're breaking a new line."", 'comment_created': datetime.datetime(2023, 7, 26, 18, 14, 57, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1275332044, 'comment_body': ""```suggestion\r\n  describe('sortTranslationSuggestionsByState', () => {\r\n```"", 'comment_created': datetime.datetime(2023, 7, 26, 18, 15, 28, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1275334737, 'comment_body': ""Can extract this out too: https://github.com/oppia/oppia/pull/18664#discussion_r1274179052. Please make sure to respond to all the comments so that we don't miss anything and the reviewer knows if you've addressed it."", 'comment_created': datetime.datetime(2023, 7, 26, 18, 18, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1275336322, 'comment_body': 'Why not combine these and have a function to create a backend dict directly from the `explorationBackendResponse`?', 'comment_created': datetime.datetime(2023, 7, 26, 18, 19, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1275338845, 'comment_body': '```suggestion\r\n            const suggestionDetails = {\r\n              suggestion: suggestion,\r\n              details: targetIdToDetails[suggestion.target_id]\r\n            };\r\n            responseSuggestionIdToDetails[suggestion.suggestion_id] = suggestionDetails;\r\n```', 'comment_created': datetime.datetime(2023, 7, 26, 18, 22, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1275339187, 'comment_body': 'I would just reference this directly below instead of creating a variable.', 'comment_created': datetime.datetime(2023, 7, 26, 18, 22, 47, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1275339558, 'comment_body': 'What is this suppressing? ', 'comment_created': datetime.datetime(2023, 7, 26, 18, 23, 12, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1275340402, 'comment_body': ""Why is the type `any`? Isn't this `SuggestionBackendDict`?"", 'comment_created': datetime.datetime(2023, 7, 26, 18, 24, 3, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1275341122, 'comment_body': '```suggestion\r\n          const sortedTranslationSuggestions = this.sortTranslationSuggestionsByState(\r\n```', 'comment_created': datetime.datetime(2023, 7, 26, 18, 24, 49, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1275343510, 'comment_body': '```suggestion\r\n    // Sort translation cards within each state based on the content type and index.\r\n```', 'comment_created': datetime.datetime(2023, 7, 26, 18, 27, 28, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1275343970, 'comment_body': 'Nit: Remove new line.', 'comment_created': datetime.datetime(2023, 7, 26, 18, 27, 58, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1275345953, 'comment_body': ""Can't you just pass in the compare function name, e.g. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#creating_displaying_and_sorting_an_array?"", 'comment_created': datetime.datetime(2023, 7, 26, 18, 30, 12, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1275346759, 'comment_body': 'Why not do this in the above loop?', 'comment_created': datetime.datetime(2023, 7, 26, 18, 31, 5, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1275347463, 'comment_body': 'Can also make this its own function for readability.', 'comment_created': datetime.datetime(2023, 7, 26, 18, 31, 45, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1275349901, 'comment_body': ""Let's create a helper function for this too for abstraction and readability. "", 'comment_created': datetime.datetime(2023, 7, 26, 18, 34, 30, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1275450919, 'comment_body': 'I initially tried with `SuggestionBackendDict`, but the ts tests were failing https://github.com/oppia/oppia/actions/runs/5456888895/job/14773325903#step:9:134', 'comment_created': datetime.datetime(2023, 7, 26, 20, 26, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1276601010, 'comment_body': 'Done, Also will keep in mind to have self-pass before assigning reviewers. Thanks :)', 'comment_created': datetime.datetime(2023, 7, 27, 17, 23, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1276601125, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 27, 17, 23, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1276603406, 'comment_body': ""I am not sure why this is being included as a change ? Also I don't know what's the change here."", 'comment_created': datetime.datetime(2023, 7, 27, 17, 26, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1276606961, 'comment_body': ""Um I don't think it's required. It seems pretty straight forward to me. WDYT ?"", 'comment_created': datetime.datetime(2023, 7, 27, 17, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1276708619, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 27, 19, 3, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1276708793, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 27, 19, 3, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1276709440, 'comment_body': 'Done, I have extracted out and made 4 helper functions which I think should be suffice.', 'comment_created': datetime.datetime(2023, 7, 27, 19, 4, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1276714717, 'comment_body': 'We are suppressing lint/ts error caused due to use of any datatype here and elsewhere too.', 'comment_created': datetime.datetime(2023, 7, 27, 19, 7, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1276721411, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 27, 19, 12, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1276721595, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 27, 19, 12, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1276723084, 'comment_body': 'Initially I had three different loops, I have clubbed two of them in a new helper function `groupTranslationSuggestionsByState`.', 'comment_created': datetime.datetime(2023, 7, 27, 19, 14, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1276725145, 'comment_body': 'Should this `limit` be defined as a variable in the constants file and then referenced here? @sagangwee Thoughts?', 'comment_created': datetime.datetime(2023, 7, 27, 19, 16, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Lawful2002', 'type': 'User'}, {'comment_id': 1276728098, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 27, 19, 20, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1276733093, 'comment_body': ""Hey @seanlip, I have made this parameter optional as per  Sagang's suggestion (https://github.com/oppia/oppia/pull/18664#discussion_r1274153430)"", 'comment_created': datetime.datetime(2023, 7, 27, 19, 25, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1276733685, 'comment_body': 'Also, why does this have to be `null`?', 'comment_created': datetime.datetime(2023, 7, 27, 19, 25, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Lawful2002', 'type': 'User'}, {'comment_id': 1276743010, 'comment_body': 'In order to test if `fetchReviewableSuggestionsAsync` was called with null parameter when exploration_id is provided.\r\n\r\nIn CD dashboard, when exp_id is null, we will be fetching reviewable lessons in batches like we do at present. And the feature this PR introduces sorts translation suggestions, which needs all the cards from backend to be fetched at one go. (Also reviewable cards/suggestions are fetched when exp_id is not null)', 'comment_created': datetime.datetime(2023, 7, 27, 19, 35, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1276743735, 'comment_body': ""Isn't there a type for that? `SuggestionDetails` in core/templates/pages/contributor-dashboard-page/contributions-and-review/contributions-and-review.component.ts"", 'comment_created': datetime.datetime(2023, 7, 27, 19, 36, 48, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1276745864, 'comment_body': 'I see, thanks!', 'comment_created': datetime.datetime(2023, 7, 27, 19, 39, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Lawful2002', 'type': 'User'}, {'comment_id': 1276745960, 'comment_body': ""Well since you've already defined a helper function for this, I don't see why you wouldn't just modify it to save you a step and return what you really want, especially since the object factory is primarily for returning `Exploration` objects."", 'comment_created': datetime.datetime(2023, 7, 27, 19, 39, 36, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1276749390, 'comment_body': ""I think you'll need to add `content_id` to `SuggestionChangeBackendDict` and update the related code."", 'comment_created': datetime.datetime(2023, 7, 27, 19, 43, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1276750367, 'comment_body': ""Isn't this also `SuggestionBackendDict` and elsewhere?"", 'comment_created': datetime.datetime(2023, 7, 27, 19, 45, 1, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1276752542, 'comment_body': ""Why declare this as a parameter? I don't think the caller needs to know how the sorting is implemented."", 'comment_created': datetime.datetime(2023, 7, 27, 19, 47, 13, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1276755293, 'comment_body': '```suggestion\r\n  // Returns the content type order for a given content ID.\r\n```\r\n\r\nNit: You don\'t need to say ""helper function"" as it\'s redundant. Ditto below.', 'comment_created': datetime.datetime(2023, 7, 27, 19, 50, 15, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1276760509, 'comment_body': ""Again, aren't the types known here?"", 'comment_created': datetime.datetime(2023, 7, 27, 19, 56, 8, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1276762374, 'comment_body': 'The helper methods below look like they can be declared as `static`: https://www.typescriptlang.org/docs/handbook/2/classes.html#static-members.', 'comment_created': datetime.datetime(2023, 7, 27, 19, 58, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1276767584, 'comment_body': ""Is this even necessary if we're not using the `translationSuggestionsByState` value anymore? Also, wouldn't the value in the map have changed anyway since we sorted in-place?"", 'comment_created': datetime.datetime(2023, 7, 27, 20, 4, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1277227523, 'comment_body': ""You are correct, we don't require it since the sorting is done in-place. Thanks for pointing it out, removing this line."", 'comment_created': datetime.datetime(2023, 7, 28, 7, 50, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1277234659, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 28, 7, 57, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1277283901, 'comment_body': ""@Lawful2002, I think to ensure consistency in the file we should not define limit as variable since in entire file all the instances of url's parameters are hard coded."", 'comment_created': datetime.datetime(2023, 7, 28, 8, 46, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1277451875, 'comment_body': ""I'm not really sure about this -- operations to the datastore should always be bounded. \r\n\r\nI guess you're making this optional to match the other methods in this file, right? But I'm confused about why they got marked optional in the first place. What's the rationale for making things consistent in this direction vs removing the optionality from the other methods? (In general I don't think letting limits be optional is a standard practice in our storage layer, overall.)"", 'comment_created': datetime.datetime(2023, 7, 28, 11, 52, 32, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1277927221, 'comment_body': ""Hm, I'm not actually sure what the full original code looked like here, but thinking this over again, I agree that we shouldn't accept an optional limit for the question suggestion fetch methods since I think question suggestion fetches should always accept a limit. Sorry about that.\r\n\r\nWe're not passing in a limit to `get_reviewable_translation_suggestions_by_offset` though since for this sorting feature we have to fetch all the results from the datastore at once and sort the results client-side. "", 'comment_created': datetime.datetime(2023, 7, 28, 18, 5, 32, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1277929436, 'comment_body': ""Ah, ok. In that case, would it be possible to add detailed comments to the Optional[int] one (about what special circumstances force us to do it there), so that other devs know that it's not a pattern to follow?\r\n\r\n/cc @Ash-2k3 "", 'comment_created': datetime.datetime(2023, 7, 28, 18, 8, 31, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1278091315, 'comment_body': 'Hey @seanlip, PTAL. Thanks', 'comment_created': datetime.datetime(2023, 7, 28, 21, 20, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1278102698, 'comment_body': 'Instead of this, I would flip the check and throw an exception if the limit is `None`.', 'comment_created': datetime.datetime(2023, 7, 28, 21, 37, 46, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1278103800, 'comment_body': 'Here too. We should have a type for this. ', 'comment_created': datetime.datetime(2023, 7, 28, 21, 39, 40, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1278104163, 'comment_body': '```suggestion\r\n                fetchSuggestionsResponse.target_id_to_opportunity_dict[\r\n                  suggestion.target_id])\r\n```', 'comment_created': datetime.datetime(2023, 7, 28, 21, 40, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1278104428, 'comment_body': 'Assuming that fits the line length.', 'comment_created': datetime.datetime(2023, 7, 28, 21, 40, 46, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1278105942, 'comment_body': 'Is this `bind` necessary here? ', 'comment_created': datetime.datetime(2023, 7, 28, 21, 44, 8, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1278106978, 'comment_body': '```suggestion\r\n    translationSuggestions: SuggestionBackendDict[]\r\n  ): Map<string, SuggestionBackendDict[]> {\r\n```', 'comment_created': datetime.datetime(2023, 7, 28, 21, 45, 25, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1278107416, 'comment_body': 'Move these below `compareTranslationSuggestions`. You generally want to order your class in order of usage.', 'comment_created': datetime.datetime(2023, 7, 28, 21, 46, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1278108226, 'comment_body': 'Remove?', 'comment_created': datetime.datetime(2023, 7, 28, 21, 48, 14, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1278108523, 'comment_body': 'This comment seems redundant.', 'comment_created': datetime.datetime(2023, 7, 28, 21, 48, 52, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1278108818, 'comment_body': 'This comment seems redundant with the name.', 'comment_created': datetime.datetime(2023, 7, 28, 21, 49, 32, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1278110224, 'comment_body': '```suggestion\r\n  static compareTranslationSuggestions(\r\n    cardA: SuggestionBackendDict,\r\n    cardB: SuggestionBackendDict\r\n  ): number {\r\n```', 'comment_created': datetime.datetime(2023, 7, 28, 21, 52, 48, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1278112095, 'comment_body': 'Why not make this a `Map` object like you have elsewhere? The API and type declaration is a bit cleaner.', 'comment_created': datetime.datetime(2023, 7, 28, 21, 56, 16, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1278264589, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 29, 7, 42, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1278264612, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 29, 7, 42, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1278264616, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 29, 7, 42, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1278264622, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 29, 7, 42, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1278264631, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2023, 7, 29, 7, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1278264649, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2023, 7, 29, 7, 43, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1278264831, 'comment_body': 'Removed, since we have made the method as static, `bind` is not required anymore, Thanks for pointing out.', 'comment_created': datetime.datetime(2023, 7, 29, 7, 46, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1278265864, 'comment_body': 'Ah alright thanks, Done.', 'comment_created': datetime.datetime(2023, 7, 29, 7, 58, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1278265914, 'comment_body': 'Using a Map object for getTypeOrder is indeed a cleaner approach, Thanks, Done.', 'comment_created': datetime.datetime(2023, 7, 29, 7, 59, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1278350948, 'comment_body': ""Explain this more please -- your explanation should be clear about *why* the client-side implementation requires all entities to be returned. Assume the developer reading this has no idea about what's going on in the frontend and hasn't read your design doc."", 'comment_created': datetime.datetime(2023, 7, 29, 17, 42, 38, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1278367832, 'comment_body': '@seanlip, In regards to our discussion and your prev comment, I decided to add a Note. PTAL and let me know if it can serve the purpose.', 'comment_created': datetime.datetime(2023, 7, 29, 18, 59, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1278509407, 'comment_body': 'The content of this note is good, but please put it in the arg\'s docstring. We don\'t have support for ""Note:"" sections in docstrings (at the same level as Args/Returns/Raises) and we don\'t want to introduce widespread docstring format changes due to just this case.\r\n\r\nThe description could be something like this:\r\n\r\n```\r\nMaximum number of entities to be returned; if None, returns all matching entities. Note that the None case is needed because we sometimes need to fetch all translation suggestions so that they can be sorted client-side based on specific criteria, and the datastore does not efficiently support sorting based on complex client-side criteria. So, we need to fetch all matching entities from the datastore and allow the frontend to perform the sorting as needed. Even in this case, though, the maximum number of entities that will be returned by this query is XXX.\r\n```\r\n\r\nThis also raises one question. When writing this docstring, I felt I needed to put something in at the end to talk about bounding. If we need data for all cards within ONE exploration, then that is capped by the max number of cards in an exploration, which is typically 300 at most (so 500 is a safe limit). However, the interface for this function supports multiple exploration IDs. Do we need to ever fetch data without limit for multiple IDs? If so, why? If not, I suggest you have a separate method that is scoped to a single exploration ID and not support a limit for that method (since you can explain that it\'s bounded above anyway), and keep the limit for the current method required. ', 'comment_created': datetime.datetime(2023, 7, 30, 5, 6, 20, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1279874000, 'comment_body': 'Currently the fetch is made in one other place here: https://github.com/oppia/oppia/blob/develop/core/controllers/contributor_dashboard.py#L387. that fetches data without limit for multiple IDs in order to get all the reviewable suggestions for a particular topic.', 'comment_created': datetime.datetime(2023, 7, 31, 21, 0, 25, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1279880163, 'comment_body': 'Usually we declare constants like this towards the top of the file, either as a `const` outside the class or as a property of the class. But since in this case, the map is only used by `getTypeOrder` and is pretty specific to that implementation, I would just leave in that function.', 'comment_created': datetime.datetime(2023, 7, 31, 21, 8, 15, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1279881169, 'comment_body': ""```suggestion\r\n  private static readonly contentOrders: Map<string, number> = new Map([\r\n```\r\nNit: You don't need to include `Map` in the name since it's redundant with its type."", 'comment_created': datetime.datetime(2023, 7, 31, 21, 9, 31, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1279882498, 'comment_body': 'These functions below can also be made `private` right? In general, we should keep the visibility as low as possible.', 'comment_created': datetime.datetime(2023, 7, 31, 21, 11, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1279885179, 'comment_body': '```suggestion\r\n  static getTranslationContentTypeOrder(contentId: string): number {\r\n```\r\nSince this method is declared at the class level, I would include a bit more context in the name. Ditto below.', 'comment_created': datetime.datetime(2023, 7, 31, 21, 15, 1, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1280268682, 'comment_body': 'Done, Thanks.', 'comment_created': datetime.datetime(2023, 8, 1, 8, 18, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1280272148, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 1, 8, 21, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1280275271, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 1, 8, 23, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1280275421, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 1, 8, 23, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1281077786, 'comment_body': ""This is still in the wrong place. Please don't invent new docstring formats. The place you're putting it makes it look like a new argument.\r\n\r\nPut this explanation in the docstring for the specific argument that it pertains to. If it pertains to the return value then put it there instead."", 'comment_created': datetime.datetime(2023, 8, 1, 19, 44, 29, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1281080044, 'comment_body': 'Wait, why? This needs explanation.', 'comment_created': datetime.datetime(2023, 8, 1, 19, 47, 15, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1281093199, 'comment_body': ""Thanks @sagangwee.  What do we use this data for (why do we need all reviewable suggestions for a particular topic)? From the UI perspective, when the topic is selected in the UI then I see a bunch of lessons; when I click Review on the lesson then I see its cards. At no point would the code actually need to get all suggestions for a topic at once... it would need to do an initial fetch of 1 opportunity per lesson to see whether to show the lesson or not, and then a fetch for all the open opportunities within a specific lesson.\r\n\r\nI think it's fine for this function to have no limit if it's only going to ever be used for one lesson, but I think that setting up this API to handle multiple exploration IDs and have no limit is an invitation for it to break in the future. If the existing usage should be updated based on this observation then I would suggest making a new method for the 1-exploration case and adding a TODO to transition the existing callsite to use that instead (and deprecate the no-limit method)."", 'comment_created': datetime.datetime(2023, 8, 1, 19, 58, 19, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1281161038, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2023, 8, 1, 21, 13, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1281161158, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 1, 21, 13, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1281161337, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 1, 21, 13, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1281161405, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 1, 21, 13, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1281161732, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2023, 8, 1, 21, 14, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1281162108, 'comment_body': 'Yup, updated the return statement, Thanks for pointing out.', 'comment_created': datetime.datetime(2023, 8, 1, 21, 14, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1281162463, 'comment_body': 'Yes, updated the parameters.', 'comment_created': datetime.datetime(2023, 8, 1, 21, 14, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1281162592, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 1, 21, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1281162704, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 1, 21, 15, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1281162850, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 1, 21, 15, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1281162965, 'comment_body': 'Donee', 'comment_created': datetime.datetime(2023, 8, 1, 21, 15, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1281163088, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 1, 21, 15, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1281163826, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 1, 21, 16, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1281172566, 'comment_body': ""Okay, I got confused regarding it's placement, fixed it now. Thanks."", 'comment_created': datetime.datetime(2023, 8, 1, 21, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1281176813, 'comment_body': 'I thought you wanted the note to be what you mentioned here in this thread https://github.com/oppia/oppia/pull/18664#discussion_r1278509407. I have removed this part now, thanks.', 'comment_created': datetime.datetime(2023, 8, 1, 21, 33, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1281177642, 'comment_body': 'Remove?', 'comment_created': datetime.datetime(2023, 8, 1, 21, 34, 56, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1281179187, 'comment_body': 'Got it. Agree with the TODO suggestion.', 'comment_created': datetime.datetime(2023, 8, 1, 21, 37, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1281179963, 'comment_body': 'Nit: Remove new line.', 'comment_created': datetime.datetime(2023, 8, 1, 21, 38, 32, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1283774676, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 3, 22, 21, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1283774749, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 3, 22, 21, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1283775667, 'comment_body': 'I have made a new method for 1-exploration case and added a TODO, PTAL.', 'comment_created': datetime.datetime(2023, 8, 3, 22, 22, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1283861052, 'comment_body': 'Do we still need an offset here if the intention is to return all the results?', 'comment_created': datetime.datetime(2023, 8, 4, 0, 51, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1283863608, 'comment_body': 'I think we should put this in a new service method altogether, since the API is fundamentally different (accept only one exploration ID, no offset, no limit).', 'comment_created': datetime.datetime(2023, 8, 4, 0, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1284165387, 'comment_body': 'No, I have removed it from here, but I am returning offset to ensure consistency among all return types.', 'comment_created': datetime.datetime(2023, 8, 4, 8, 53, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1284165581, 'comment_body': 'Done, PTAL.', 'comment_created': datetime.datetime(2023, 8, 4, 8, 53, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1284201148, 'comment_body': 'In practice, will we ever need to fetch these for more than one language code? If not, restrict this to just one language code.\r\n\r\n(See my other longer comment previously for how to think through this.)', 'comment_created': datetime.datetime(2023, 8, 4, 9, 28, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1284202745, 'comment_body': 'TODOs should always correspond to issue numbers.', 'comment_created': datetime.datetime(2023, 8, 4, 9, 30, 15, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1284202853, 'comment_body': 'Drop this newline.', 'comment_created': datetime.datetime(2023, 8, 4, 9, 30, 22, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1284203174, 'comment_body': ""You should not need this second sentence now that you're not using this method, right?"", 'comment_created': datetime.datetime(2023, 8, 4, 9, 30, 41, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1284203715, 'comment_body': ""Please follow the format of existing docstrings and don't leave lines between the arg names."", 'comment_created': datetime.datetime(2023, 8, 4, 9, 31, 12, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1284206003, 'comment_body': 'In the actual usage of this function, is a sort actually needed or not? In any case, could you restrict this as much as possible so that we reduce the branching logic?\r\n\r\n', 'comment_created': datetime.datetime(2023, 8, 4, 9, 33, 36, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1285224683, 'comment_body': 'No, since we are going to sort it in front-end. Removed it.', 'comment_created': datetime.datetime(2023, 8, 6, 14, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1285224697, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 6, 14, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1285224711, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2023, 8, 6, 14, 14, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1285224722, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 6, 14, 14, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1285224767, 'comment_body': 'No, we will need to fetch suggestions of only one language, changed it.', 'comment_created': datetime.datetime(2023, 8, 6, 14, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1285225798, 'comment_body': 'Done, also I noticed this pattern in some of the files (sll), what does it mean then ?', 'comment_created': datetime.datetime(2023, 8, 6, 14, 23, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1285242564, 'comment_body': ""Bit confused about this. If exp_ids is passed then how do you know it only has 1 element? If that is a necessity then shouldn't there be some kind of assertion or check here?"", 'comment_created': datetime.datetime(2023, 8, 6, 17, 10, 52, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1285242594, 'comment_body': ""preferred is misspelled.\r\n\r\nAlso, what does preferred_translation_language_code (I think that's the language they prefer to use the site in) have to do with anything on the CD?"", 'comment_created': datetime.datetime(2023, 8, 6, 17, 11, 19, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1285242608, 'comment_body': 'Tuple of (results, next_offset), where:', 'comment_created': datetime.datetime(2023, 8, 6, 17, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1285242743, 'comment_body': 'I don\'t really understand this comment. Could you please explain it more clearly? Also, don\'t use abbreviations like ""lang"", write full sentences.', 'comment_created': datetime.datetime(2023, 8, 6, 17, 13, 35, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1285242895, 'comment_body': ""Perhaps you can give this a better name to indicate what's special about these language codes."", 'comment_created': datetime.datetime(2023, 8, 6, 17, 15, 12, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1285242930, 'comment_body': ""Explain how they're sorted, too."", 'comment_created': datetime.datetime(2023, 8, 6, 17, 15, 41, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1285242949, 'comment_body': 'Keep this consistent with other args, remove the parens.', 'comment_created': datetime.datetime(2023, 8, 6, 17, 16, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1285243047, 'comment_body': ""the callsite --> all callsites\r\n\r\nIn the issue, could you please explain more why we are doing this and how to find the callsites? Give a bit more explanation of what specific work has to be done as well (e.g. we need to prevent the frontend from requesting data for multiple exp IDs at a time, which shouldn't be necessary anyway)."", 'comment_created': datetime.datetime(2023, 8, 6, 17, 17, 35, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1285243338, 'comment_body': ""They're probably old holdovers from a long time ago. We should get rid of them."", 'comment_created': datetime.datetime(2023, 8, 6, 17, 20, 32, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1285941236, 'comment_body': 'No, the one you are saying we store that using this method https://github.com/oppia/oppia/blob/794b5d78e88f585efadc366b767889596afccacb/core/domain/user_services.py#L1523. Preferred_translation_language_code is the active language chosen in the language filter of the review-dashboard.', 'comment_created': datetime.datetime(2023, 8, 7, 14, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1285988722, 'comment_body': 'Hm, are you sure? AFAICT, this is the ""language in which the site is shown"" in the user\'s preferences page. I did check that this field is shown to the user in PreferencesHandler in core/controllers/profile.py, and the UI looks like this:\r\n![Screenshot from 2023-08-07 22-48-33](https://github.com/oppia/oppia/assets/10575562/72fbf3c9-919c-449a-8c2e-044a35e2a8ec)\r\n\r\n', 'comment_created': datetime.datetime(2023, 8, 7, 14, 49, 45, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1286007568, 'comment_body': 'The one you are talking about seems to be `preferred_site_language` and the one I am using is `preferred_translation_language_code`.', 'comment_created': datetime.datetime(2023, 8, 7, 14, 59, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1286014533, 'comment_body': ""Ah, sorry, my bad. I misread your comment, apologies.\r\n\r\nBut then, what if the reviewer reviews two languages? Wouldn't the frontend still need to pass in the language we're trying to get the results for?"", 'comment_created': datetime.datetime(2023, 8, 7, 15, 4, 47, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1286018287, 'comment_body': ""I am not sure WDYM here ? Aren't we sorting client side, then why do we need to have a explanation here ?"", 'comment_created': datetime.datetime(2023, 8, 7, 15, 7, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1286019085, 'comment_body': 'Done, I have added a check to check if len(exp_id) is 1 ', 'comment_created': datetime.datetime(2023, 8, 7, 15, 8, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1286019553, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 7, 15, 8, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1286019861, 'comment_body': 'Done, I hope it makes more sense now.', 'comment_created': datetime.datetime(2023, 8, 7, 15, 8, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1286020254, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 7, 15, 9, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1286020492, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 7, 15, 9, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1286030531, 'comment_body': 'I have added a video recording to demonstrate how this would work for the case you mentioned.\r\n\r\n\r\nhttps://github.com/oppia/oppia/assets/98253080/662fb4e6-e059-4590-82ea-a2503e7d573c\r\n\r\n', 'comment_created': datetime.datetime(2023, 8, 7, 15, 17, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1286042132, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 8, 7, 15, 27, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1286621920, 'comment_body': 'Add a comma after ""languages""', 'comment_created': datetime.datetime(2023, 8, 8, 5, 47, 11, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1286623265, 'comment_body': 'Probably you need a TODO here to remove the need for the else branch, right? (corresponding to the same issue you filed before)', 'comment_created': datetime.datetime(2023, 8, 8, 5, 49, 17, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1286624184, 'comment_body': ""Remember, this is a method all the way down the stack in the storage layer. Multiple callers may use this.\r\n\r\nSo, don't design just for your use case. The docstring needs to explain how the results are sorted when they are returned from this function, or that they are not returned in any particular order. (But in general returning in a particular order is better since it's more deterministic, so if you're in doubt, go with whatever default sorting option we currently use and sort the results using that.)"", 'comment_created': datetime.datetime(2023, 8, 8, 5, 50, 48, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1286625057, 'comment_body': 'Wrong indentation.', 'comment_created': datetime.datetime(2023, 8, 8, 5, 52, 12, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1286629069, 'comment_body': ""@Ash-2k3 Thanks, but I think it would also be helpful to get an explanation of *why* it works technically.\r\n\r\nIs it the case that, when the new language is chosen, the user settings are updated, and that's why the preferred language code changes? If so, then I suggest that you get that info somewhere else and pass the language code explicitly as an argument into this function. This is because the function name here (which presumably is intended to be generic) says nothing about the user's preferences (and probably shouldn't).\r\n\r\nIn other words, based on the function's contract (as specified in its name and docstring), this function shouldn't be specific to the user's preferred language. The user is asking for a list of items they are able to review, and we return those items. From a modelling perspective, I think preferences should be dealt with separately so that this lower-level method to be generic for other use cases (or not dealt with at all, and we just pass the language in directly from the frontend or the controller when requesting the relevant results)."", 'comment_created': datetime.datetime(2023, 8, 8, 5, 58, 33, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1287401825, 'comment_body': 'Okay, I understand it. But then I think we should go with the existing approach here like https://github.com/oppia/oppia/blob/2779e1968460f38f243eb0031c667daaf130f59d/core/storage/suggestion/gae_models.py#L748', 'comment_created': datetime.datetime(2023, 8, 8, 16, 47, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1287402532, 'comment_body': 'We pass the language codes which the user can review as parameter from the service function.', 'comment_created': datetime.datetime(2023, 8, 8, 16, 48, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1287403013, 'comment_body': 'Yes, that is what I am suggesting. Just pass one language code though, not several.', 'comment_created': datetime.datetime(2023, 8, 8, 16, 48, 38, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1288404822, 'comment_body': ""Noticed that the approach which I thought of `preferred_translation_language_code` doesn't work for one case, when the dashboard loads for first time as during that time there's no language selected in language filter.\r\n\r\nI think we would want it to be list of language codes, just like we have it in other method. [oppia/core/storage/suggestion/gae_models.py](https://github.com/oppia/oppia/blob/2779e1968460f38f243eb0031c667daaf130f59d/core/storage/suggestion/gae_models.py#L748).\r\n\r\nAlso, I am not able to think of any other way in which we can have language_code not as a list. As there's no component using which we can pass lang_code.\r\n\r\n@seanlip, let me know your thoughts please, Thanks."", 'comment_created': datetime.datetime(2023, 8, 9, 12, 27, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1288518461, 'comment_body': ""I'm a bit confused. Why not pass a single language code? If no language code is selected then the user needs to select a language before data can be displayed, right (so, don't fetch data at that point)?\r\n\r\nOr, alternatively, auto-select their preferred language code and then fetch the single language code for them."", 'comment_created': datetime.datetime(2023, 8, 9, 13, 51, 38, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1288898449, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 9, 16, 53, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1288900372, 'comment_body': ""I don't think so. The if branch fetches the translation suggestions/cards for a reviewable lesson. Else branch fetches reviewable lessons for which cards are available for review."", 'comment_created': datetime.datetime(2023, 8, 9, 16, 55, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1288908106, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 9, 16, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1288913438, 'comment_body': 'Ahn okay, ig option 1 is better, I would prefer not changing existing workflow for this. Also I have made service method to have language_code as a arg, as it makes sense to make it generic. I am passing the language to this method from the handler, as ig it makes sense that way.', 'comment_created': datetime.datetime(2023, 8, 9, 16, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1288931737, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 9, 17, 16, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1288946538, 'comment_body': ""@Ash-2k3 I'm not sure I follow. Didn't we have a discussion earlier about trying to deprecate the get_reviewable_translation_suggestions_by_offset(() method in the long run because its limit is unbounded and it can be given an unlimited number of exp_ids? My comment was addressing that this is one of the places that would need to be cleaned up (and refactored into a single-exploration-id flow) as part of that TODO.\r\n\r\nThe exp_ids are also already being passed in the elif branch so I'm also not sure what your second sentence means."", 'comment_created': datetime.datetime(2023, 8, 9, 17, 29, 26, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1288948350, 'comment_body': 'This is worded quite confusingly. Use the previous wording and add a sentence at the end saying ""The suggestions are ordered by ..."". Sometimes splitting up into multiple sentences is clearer.', 'comment_created': datetime.datetime(2023, 8, 9, 17, 30, 48, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1288950196, 'comment_body': ""You haven't fixed the docstring to include this argument."", 'comment_created': datetime.datetime(2023, 8, 9, 17, 32, 16, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1288952609, 'comment_body': 'Just so I understand: what sequence of events happens (technically) when a user changes the language in the dropdown? Does doing so change the value of user_settings.preferred_translation_language_code, and does that change always happen before the request corresponding to this handler is made? I worry that there might be a race condition here.', 'comment_created': datetime.datetime(2023, 8, 9, 17, 34, 8, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1288981777, 'comment_body': 'Yes the value of `preferred_translation_language_code` is changed whenever user selects a language in dropdown.\r\nAnd yes the change always happen before the request corresponding to this handler is made so I don\'t think there will be a race condition here. User has to always pick language from dropdown before clicking on ""Translations"" button for a lesson, which makes a call to this handler.\r\n', 'comment_created': datetime.datetime(2023, 8, 9, 17, 56, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1288988989, 'comment_body': 'Missed it, sorry! Done.', 'comment_created': datetime.datetime(2023, 8, 9, 18, 1, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1288989671, 'comment_body': 'Done, thanks.', 'comment_created': datetime.datetime(2023, 8, 9, 18, 1, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1288992486, 'comment_body': 'OK, that sounds fine then, thanks. Perhaps add a comment above this line to explain that so a reader knows how the ""preferred language code"" is determined.', 'comment_created': datetime.datetime(2023, 8, 9, 18, 4, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1288996390, 'comment_body': 'Got it, thanks. I got confused earlier. Added a Todo Comment, thanks.', 'comment_created': datetime.datetime(2023, 8, 9, 18, 6, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1289148205, 'comment_body': 'Nit:\r\n```suggestion\r\n    def get_reviewable_translation_suggestions(\r\n```\r\n\r\nThere doesn\'t appear to be any conflicting methods and the ""for single exploration"" behavior should be clear from the method args.', 'comment_created': datetime.datetime(2023, 8, 9, 20, 17, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1289149550, 'comment_body': 'This seems odd. Why two casts here?', 'comment_created': datetime.datetime(2023, 8, 9, 20, 18, 43, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1291131297, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 11, 9, 46, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1291131455, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 11, 9, 47, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1291148141, 'comment_body': 'I have done this to avoid strict type checks to some extent, similar to https://github.com/oppia/oppia/blob/23047b59eea0e29fb46f9cd651398c75d4b15517/core/templates/pages/exploration-editor-page/modal-templates/save-version-mismatch-modal.component.spec.ts#L91', 'comment_created': datetime.datetime(2023, 8, 11, 10, 1, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1291409788, 'comment_body': ""it's --> its"", 'comment_created': datetime.datetime(2023, 8, 11, 14, 27, 2, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1291412674, 'comment_body': 'I looked at the issue you filed and it is not clear. Shouldn\'t we be planning to get rid of this method entirely and use the new method you created instead (rather than ""deprecate just its no-limit behaviour"")? Is there any case which actually requires getting this data for multiple exploration IDs at a time?', 'comment_created': datetime.datetime(2023, 8, 11, 14, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1291413577, 'comment_body': ""Please proofread your comments (and, in general, the PR) before requesting a follow-up review. This comment doesn't scan properly."", 'comment_created': datetime.datetime(2023, 8, 11, 14, 30, 35, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1291443216, 'comment_body': ""I think we should not get rid of that method completely, as the new method which we created works for single exploration without any limit. In this new method we have made args like exp_id strict and not optional and also we are not taking other args like offset here.\r\n\r\nI think for TODO: either we should replace previous method with a new one which doesn't take any exp_id as argument but does take other args such as SORT_KEY, offset etc or just deprecate no-limit behaviour of it."", 'comment_created': datetime.datetime(2023, 8, 11, 14, 56, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1291447252, 'comment_body': 'Sorry for the typo, Corrected now, thanks.', 'comment_created': datetime.datetime(2023, 8, 11, 14, 59, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1291447399, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 11, 15, 0, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1291450499, 'comment_body': 'But why do we need to keep the old method? What user behaviour requires it (as opposed to adding `offset` to the new method and getting rid of the old one entirely)?\r\n\r\n', 'comment_created': datetime.datetime(2023, 8, 11, 15, 2, 37, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1291472625, 'comment_body': 'The old method currently is called to fetch reviewable lessons when exploration_id is not provided. It fetches the lessons for which cards are avail to review.', 'comment_created': datetime.datetime(2023, 8, 11, 15, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1291487303, 'comment_body': ""The new method can't be called for the above case as the above case is supposed to be fetched in batches which is not the behaviour of the new method which we created in this PR."", 'comment_created': datetime.datetime(2023, 8, 11, 15, 18, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1292284309, 'comment_body': '@Ash-2k3 I think this is now clarified more in chat -- please update this per our discussion. (Let me know if you have further questions!)', 'comment_created': datetime.datetime(2023, 8, 12, 13, 1, 32, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}]","[{'commit_sha': '4a87db71a867ad7028c17cb21e7e6a67072cfab5', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28c38189b9832708921b5c577461222c8c8fcc8d', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5e503806c63770975afab752527451d6d2fe070', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '191fdba8bf21aeedd5cf4e5d1aad1abee5ab9eb0', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7afcd3de7960dc509d8345413869619c6de5617a', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b644efd983ca33de07af24d4a30f12097bf5c87', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08ccbf6d67cfb170f932954942a27b5107318eaf', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19a6333ae211529489a39bca882a5f70d3989ad9', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af219785da2cdf9261a6a970f49d30837604f13d', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00197dce9e36b978be5874836c4b7aad6bfaef0a', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ed0edd0198370f1b5d35d993bac122411114337', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52d7ff1fffc154c816da58c7300c574384a9a8f1', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f0f08fe63bdfeb6812758cf2c08d65bbff6fcec', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '417269ed39b50ffa144742aa44860b43946efa11', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bfcc197bfb5a5dc2fb2dbe00ed004c990670b8c', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'beb42eb0d6369aefe313afa1b03373b5314210d7', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dfad74c198d96e03f0ed0e421995ea592e1e0ef', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1143c4721b52713bc3f526049fc111bee3cbb3c8', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae782f875ce55089d4b9bdc295d3fcd40108b642', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff2c921f45744b955caef8858b17b47cffd3a332', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56fa78eadbe03baa24a12b05914827699a26db54', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fb8b6bb18298d367c27c413c146cd39f88a3fe4', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66d29b33ac0c2f5bb978c5853c6f41a91b774c0b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72b93e94f0a1552fb64d6a68006d98b262d79006', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28c290515e37ab5bb82204c6ced79f9332a80e6a', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d9e1b8c992b3367ee2e0453df995932bcf37735', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1213ad3e468f6f39136b5edada4a44992a71c701', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bf2f9a8f91ebf4a6967dea2c06e12e26f1bb3c9', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b5e1be2eb1679205868a3868394e644b4411f2b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a7c0124a30e22af33ceea5f9473399a55ebe427', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d2ff03a31a5e63c4356b5f62be7d0b09eaaa8ef', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d1520527f2811a3082416108cdce166947c000d', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '829274b54f99a954d346227061b63e6134c1b2b0', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '653cab3dbfb1f8226bd6d2efba279a7b1a762f7d', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a64332ea29dcbc8b332d8040cde12774c6ae706', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e649dd2f1bfe69b6245606963b304c539732fd5e', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b04c3c4436dbe241d3e74114ab1d28f475b9911', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efc81dda136b8b08656890ee9c2c407ceaa96a5a', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4aa1c72edfdcba8ab09b8b87ad6eafc50072e7b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da335f428227f8b0fb7b8c140d3d61d2debd08ce', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f6a3e9a99a30c6163ec874d8338b0173db7a155', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18322f9dc94109486a1e1d223801609fcb3d00d7', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa33896b349da966c139d9f72a324e47f5de8495', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06dab3a093187eeccb38c76a2dfd353003b35ba1', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53967d0bdbda1e13090c0eb39138f3b3b1f6fd29', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12ac8c73467b326cef5acbfcb64ddaf60d852416', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4765b6b4c667dba998b980ecd5d6e9ae67a85396', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fbc8b13d92ad9808b4eccb0f25e5f0ef08da967', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b89e32b274a4685c22e6bce25778fce96c2079e3', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02926a7e0a6b5826c5818d180c9fa656e8cda99b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a91c7b69df5bdc46456db277b5957d17fdd0c1fc', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de37f3e482e068f7a0253b5a1122cefb3095a5d1', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9fd14fcb448e24ce876d6a002b68187fa097c49', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b99b93b6c562154ae03343424676f5d9a74fc2b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '611fcd17fb96ac101f51addaec945c2ff6907316', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1331f5658ac8ab0204d6306f1a7eb7d313ae05e5', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41ed5e0d7cf36b25d4c0a5f819e362bf11a26249', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdcf67ad29e3b5f0b319e7a3223f34ae8b73e8e9', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1e5c668caf833c8a72f8c8e8b15227e0fe4ba41', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee7ec0badf268d48120d55e472f3f180d86b6cbd', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2da6e03afd2663b4bef9782d304e38d714b356ac', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a905c9ed8374b292293d8ff342df89e2d3301c17', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6be0701712a81aeb83d791f91cfcaacb28119681', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e546dd435d396f24db4a085bfdbdc929e7c92a3f', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd3015d85a97ab691c8b9549b2b8ab1efe700818', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cd82fd02cd0427e3a153746d2244d803a42e819', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa22ba2c079339e63f31077dbd8accb63cb85045', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99b77fcb58980f0237d317db5e39d5a121f2d116', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4531287213df2afba1b898531bc0529283838b62', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76f3d328bde8386a0d423c2b9fc067a490c1c37b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa99ce50b06e92b8669d7466398a57ed0b37280e', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7a30eaa49d3df57498211e9de6f3416326c0f8c', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '838a48c41d5bb4fdce6113d3dde85533e9b3f81d', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a9c53aed4f57b9ccfdb228eacb45f3ac219722b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b5e21d654b291694cc5bbdc1f30c186d8c72349', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cb2ea1678028ed1a1693bb018e5c51940664865', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '821f00b5810e7d75f0af04ada4eddd392e897d0a', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99d8ac3ae9a6f2ee05d49240bc649128a0733ded', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8662969ccd6d65deb87ca34c8a8a10c8659c26b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '041972ba18957bca9c22ebc69ac3253f6d7c8dc7', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0884d66380517845f4b54d842d732586cd27d9c', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a7d72e5f4afbfe7059e8db1f1f0d1c636bffcf2', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb1384080c84bee049b28bf0a942e1c40c5a7050', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdbcab62a78922011eae086c29f5a8d7072cdb91', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa674f4b2aa61542c53fcf2f8c5cac8714583e09', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72f6b924774d8effbe2674f9f9df0ac4dc0f4d61', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ba1aacdb1a3459b229d6d9dc7b9d0af4f59f137', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a02767cfe8b7220e512031a58f381080b9caafe', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}]",Ashwath Kannan,98253080,,User,,67,,4,15
1409434976,[GSoC_M1.6]: Add a seperate section in translation review modal to show images with their alt text images,"## Overview

This PR does the following: This PR introduces a new section in translation-review-modal which shows images with caption and alt texts/descriptions. This way, reviewers won't have to first click on edit and the select the image to see alt text

We are doing this by making a new function in translation-review-modal-component.ts which will generate a html string which consists of images for both content_html string and translated one too.
These strings will be passed to rte-output component which will render the images and the text tags. 

Mock : https://docs.google.com/document/d/18rFozOzbcDYWa6sS9gTYu4R_VfMevbM5v3xlf7Gy3zQ/edit?pli=1#bookmark=id.xari96c5wxef

## Essential Checklist

- [ ] The **PR title** starts with ""Fix #bugnum: "" or ""Fix part of #bugnum: ..."",
followed by a short, clear summary of the changes.
- [ ] I have followed the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- [ ] The linter/Karma presubmit checks have passed on my local machine.
- [ ] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
- [ ] I have assigned the correct reviewers to this PR (or will leave a
comment with the phrase ""@{{reviewer_username}} PTAL"" if I don't have
permissions to assign reviewers directly).

## Proof that changes are correct
<img width=""1440"" alt=""Screenshot 2023-07-05 at 22 26 10"" src=""https://github.com/oppia/oppia/assets/98253080/66cd4814-8885-47f9-ba73-a36fdee5e119"">

## Proof of changes on mobile phone
<img width=""1440"" alt=""Screenshot 2023-07-05 at 22 26 19"" src=""https://github.com/oppia/oppia/assets/98253080/83c47015-e3fc-4a06-af5e-bb37866733f1"">

## Proof that changes doesn't cause any breakage in existing image component


https://github.com/oppia/oppia/assets/98253080/e825f8f2-d093-41d7-8ad1-dbddb757399b


",True,18550,https://api.github.com/repos/oppia/oppia/pulls/18550,https://github.com/oppia/oppia/pull/18550,closed,110,3,7,23,22,14,1,1,[{'name': 'PR: LGTM'}],2023-06-27 09:16:24+00:00,2023-07-28 18:48:47+00:00,2712743.0,"31 days, 9:32:23","[{'comment_id': 1245484864, 'comment_body': 'Why do we check for this? Could you please explain it before the condition by a comment?', 'comment_created': datetime.datetime(2023, 6, 28, 16, 33, 47, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1245485895, 'comment_body': 'Also here could you please explain what you are doing by a comment?', 'comment_created': datetime.datetime(2023, 6, 28, 16, 34, 42, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1245487313, 'comment_body': 'Can you add a test for `showAltText = false` case?', 'comment_created': datetime.datetime(2023, 6, 28, 16, 36, 8, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1246358956, 'comment_body': 'Images are present in the form of the string not an array. Added a comment too.', 'comment_created': datetime.datetime(2023, 6, 29, 9, 14, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1246360321, 'comment_body': 'Done, thanks', 'comment_created': datetime.datetime(2023, 6, 29, 9, 15, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1246360592, 'comment_body': 'I have now added a comment to explain what the function does.', 'comment_created': datetime.datetime(2023, 6, 29, 9, 15, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1251554852, 'comment_body': 'Could you check if the image component works the same way it used to in the exploration editor page? Please add a video in the PR description for the same.', 'comment_created': datetime.datetime(2023, 7, 4, 6, 35, 28, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 1251555449, 'comment_body': 'Here and elsewhere, avoid starting a variable name with a verb. See [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide#javascript) for suggestions.', 'comment_created': datetime.datetime(2023, 7, 4, 6, 36, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 1253392412, 'comment_body': 'Done, PTAL.', 'comment_created': datetime.datetime(2023, 7, 5, 16, 59, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1253396444, 'comment_body': 'Yup, image component works the same for all the other cases. Please have a look at the PR description for the video, thanks.', 'comment_created': datetime.datetime(2023, 7, 5, 17, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1264348893, 'comment_body': 'Is it expected that the ""oppia-rte-output-display"" components displayed have the same template ref i.e. `#contentPanel` (there are 3 in this component with the same template ref ID)?', 'comment_created': datetime.datetime(2023, 7, 15, 7, 10, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 1271333866, 'comment_body': ""Well, for this case I think it's fine to have the same template. Since we have included a *ngIf for this template, I think it's suffice as the diff is only a text section which shows alt text. WDYT?"", 'comment_created': datetime.datetime(2023, 7, 22, 19, 17, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1272152596, 'comment_body': 'Sorry, I don\'t understand ""we have included a *ngIf for this template"". It seems like the ngIfs are basically the same for all the components with identical refs.', 'comment_created': datetime.datetime(2023, 7, 24, 11, 45, 56, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 1275199133, 'comment_body': ""Ah, Sorry for the misunderstanding, I didn't get it in the first read. I have given it a different temp ref id to avoid ambiguity."", 'comment_created': datetime.datetime(2023, 7, 26, 16, 10, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}]","[{'commit_sha': '8d306927e09e12c834401d98c999491d1774b566', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e816e778b2131a5c31bb55f1f177867b6d7dd90b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5ceebf2d1ec21abd1912f8ce67a3ea074591238', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13426f14e4f196dcf3643b71436332755d881438', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e90a00be7e4fd095cb016c75402e04cd2166812', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c232f984177d5f5f84725557f68b797c7f0b43b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79dbc87052417ac09bb3c35e4fa28491d5e5e27c', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b0f3cf1cd4ea0bad5db26a4521f8a462e0c1807', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6371a9cd20d7d5bfa5645e0ff564d8801e7c53fe', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97b052da444b180f6ec83244381364632ba34c52', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8735e631a6b8eb59a3aa9c99dce27bb1feb875b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45a28393b9ad94d018c7b097ceaea40bfbd3ab4f', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f0a973e7e9da6502b86bde6a1a23996503e321a', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '070aaedf828a52a73222d972a065c4f550537237', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '463748c98082deff4aec824ab3203533343a7877', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de33a2925c553f8c111e9d586e9b4e0af725e14b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e3467dc7caeb29262f6d9ad3cc906a9a24c2942', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10e4b70396cdc9b8f3a146b30512d46a22a21d41', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f0725a5bdf88c3efe15cd92b020c6e8a7f34d7a', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d4c06c675ea200167a49e20eda739c35eb11eab', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '970c9739a7818333679e029ea0c6ebaddb16f58b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90873acc2d4246debb47ec0819df194115beea0a', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43064cc41c70b16f7b7f18ee5659b8882779d442', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}]",Ashwath Kannan,98253080,,User,,67,,4,15
1456255359,Add link to exploration editor lite page,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #18511 .
2. This PR does the following: 
 
This PR enable navigation to a given state_name and content_id from contributor dashboard's translation review modal. It does the following by setting activecontentId and stateName when the link is generated upon clicking it in modal. Then in translation review-modal we fetch these and navigate the user to the correct card.
In order to prevent any breakages in existing workflow, several conditional statements are added in `state-translation.component.ts`.
Also, in translation tab there are five tabs Content, Interaction, Hint, Feedback, Solution and among these Hint, Feedback and interactions are presented in form of array of cards, thus we also compute correct index which should be set as active index upon loading.

## Essential Checklist

- [ ] The **PR title** starts with ""Fix #bugnum: "" or ""Fix part of #bugnum: ..."",
followed by a short, clear summary of the changes.
- [x] I have followed the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- [x] The linter/Karma presubmit checks have passed on my local machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
- [x] I have assigned the correct reviewers to this PR (or will leave a
comment with the phrase ""@{{reviewer_username}} PTAL"" if I don't have
permissions to assign reviewers directly).


## Proof that changes are correct

https://github.com/oppia/oppia/assets/98253080/abb5a689-6b95-4906-89e9-bb5943283aa1

#### Proof of changes on mobile phone

<img width=""1440"" alt=""Screenshot 2023-08-01 at 12 11 49"" src=""https://github.com/oppia/oppia/assets/98253080/2e840e32-479f-43b6-a115-9171bdd48429"">

#### Proof of changes doesn't lead to any workflow breakages


https://github.com/oppia/oppia/assets/98253080/483ee33e-3533-4266-9946-2822d942c49d

",True,18717,https://api.github.com/repos/oppia/oppia/pulls/18717,https://github.com/oppia/oppia/pull/18717,closed,260,6,7,20,16,11,1,1,[{'name': 'PR: LGTM'}],2023-07-31 13:27:28+00:00,2023-08-29 21:42:11+00:00,2535283.0,"29 days, 8:14:43","[{'comment_id': 1280883162, 'comment_body': 'When `newActiveContentId` can be `null`?', 'comment_created': datetime.datetime(2023, 8, 1, 16, 27, 14, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1280885533, 'comment_body': 'What would happen if `stateName` is null?', 'comment_created': datetime.datetime(2023, 8, 1, 16, 29, 14, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1280885733, 'comment_body': 'What would happen if `contentId` is null?', 'comment_created': datetime.datetime(2023, 8, 1, 16, 29, 26, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1283125730, 'comment_body': 'Why returning `null`?', 'comment_created': datetime.datetime(2023, 8, 3, 12, 22, 47, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1299174050, 'comment_body': 'If stateName is null we would just navigate to default state and content id like we do at present. Same explanation for content_id being null as well.', 'comment_created': datetime.datetime(2023, 8, 19, 11, 21, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1299175543, 'comment_body': 'newActiveContentId will be null when we are not visiting translation tab from the link in translation-review-modal. It is set to null to avoid any breakages in workflow of exploration-editor page.', 'comment_created': datetime.datetime(2023, 8, 19, 11, 36, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1299176247, 'comment_body': ""If activeContentId is null, that means we don't have to navigate to any state, which would result to default case.\r\n\r\nIn line 659, we are performing a check for activetabtype, if it's null or disabled, we perform default navigation like we do it presently. "", 'comment_created': datetime.datetime(2023, 8, 19, 11, 44, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1303754249, 'comment_body': 'Can this constant be picked up from a definition instead of being defined here adhoc?', 'comment_created': datetime.datetime(2023, 8, 24, 3, 45, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kapilag96', 'type': 'User'}, {'comment_id': 1305962112, 'comment_body': 'Replied to this comment, in above one.', 'comment_created': datetime.datetime(2023, 8, 25, 17, 42, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1306056920, 'comment_body': ""Umm, I don't think it's required thou since the logic is quite simple and also we are using this for this particular case, WDYT ?"", 'comment_created': datetime.datetime(2023, 8, 25, 19, 12, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}]","[{'commit_sha': '15daae159bb282bdd3ae7f6f3f51255557282ed6', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2ef96b2418dcdc6577de2888e01ebf9fef2e4d2', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25d5a68ff9d746e39501c58d8ca2d317807afc32', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '598b73ba0e2e7d91cac9095eaaa729668991f1ef', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da806c5d4665adb92e446dbcbc5514f2580ff948', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea26f27850036cc0b1ecb52c9662460dbb8e4a7a', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acb7c692379b0b401f16ff372b876eb248a53701', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87d4085d518f6f3df897065a2239afaf03aabb25', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd8d8b4b7abdba55e747c01fcd7117782ea43545', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ec0a9b3ed6a81cd9b7d27d2f7635b298beb19f2', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bb9bd4eb80e3d71e52a914e0b714cfee45b9881', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be322f5884fcfb8f5513ba4088922d1685dff17e', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '593971113cc567b1e72450a00dbabff12b020dbd', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d1c754101ad9204186e360681fa0e244d27397b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7bda7affa842cf81ae0573b7bc5213e455d7c22', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ad85af6a655d9707e233b5a26f4354f285039ab', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11f73ee39653b0e025f1134260a4449d4b3e6fed', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95e43c5d3189d7acd5b03a28ddfbe9e49460a51f', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f2bee0a57b4c41625505082b34955a345163752', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5759ea3004c17d1951902f5c760646027bad1b8', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}]",Ashwath Kannan,98253080,,User,,67,,4,15
1516171328,Add new model for Pinning Lesson,"## Overview


1. This PR does the following: This PR addresses milestone 2.3 of GSoC project(Improvement to translation reviewer workflow), it introduces new storage model for pinning opportunity. For detailed information PTAL at https://docs.google.com/document/d/18rFozOzbcDYWa6sS9gTYu4R_VfMevbM5v3xlf7Gy3zQ/edit?pli=1#bookmark=id.kynjjbuflmvf

## Essential Checklist

- [ ] The **PR title** starts with ""Fix #bugnum: "" or ""Fix part of #bugnum: ..."",
followed by a short, clear summary of the changes.
- [x] I have followed the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- [x] The linter/Karma presubmit checks have passed on my local machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
- [x] My PR follows the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide).
- [x] I have assigned the correct reviewers to this PR (or will leave a
comment with the phrase ""@{{reviewer_username}} PTAL"" if I don't have
permissions to assign reviewers directly).

No Proof of Changes needed, we can confirm the functionality of this model by looking at unit tests instead.

## PR Pointers

- Never force push! If you do, your PR will be closed.
- To reply to reviewers, follow these instructions: https://github.com/oppia/oppia/wiki/Make-a-pull-request#step-5-address-review-comments-until-all-reviewers-approve
- Some e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
- See the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers) for what code owners will expect.
",True,18873,https://api.github.com/repos/oppia/oppia/pulls/18873,https://github.com/oppia/oppia/pull/18873,closed,339,0,4,23,15,16,2,1,"[{'name': 'PR: LGTM'}, {'name': 'PR: Affects datastore layer'}]",2023-09-14 18:25:10+00:00,2023-09-30 03:26:38+00:00,1328488.0,"15 days, 9:01:28","[{'comment_id': 1332749445, 'comment_body': 'You should not include user IDs directly in the exported dict.', 'comment_created': datetime.datetime(2023, 9, 21, 9, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1332750254, 'comment_body': ""Why isn't this following alphabetical order?"", 'comment_created': datetime.datetime(2023, 9, 21, 9, 17, 53, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1332751571, 'comment_body': ""This is personal to a user, right, and is more of a user preference? If so, let's put it in user_models.py."", 'comment_created': datetime.datetime(2023, 9, 21, 9, 18, 57, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1332752363, 'comment_body': 'opportunities --> opportunities in the contributor dashboard', 'comment_created': datetime.datetime(2023, 9, 21, 9, 19, 20, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1332755516, 'comment_body': ""I'm not sure about this, stuff in OPPORTUNITY is typically more related to exploration/skill data than a user. I left a suggestion below to move the storage model into UserModels since the new model you are adding is really a user preference."", 'comment_created': datetime.datetime(2023, 9, 21, 9, 21, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1338833086, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 9, 27, 15, 55, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1338833143, 'comment_body': 'Removed it.', 'comment_created': datetime.datetime(2023, 9, 27, 15, 55, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1338833234, 'comment_body': 'Done, shifted this model to userModels', 'comment_created': datetime.datetime(2023, 9, 27, 15, 56, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1338833357, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 9, 27, 15, 56, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1338834125, 'comment_body': 'Shifted PinnedOpportunityModel to user models.', 'comment_created': datetime.datetime(2023, 9, 27, 15, 56, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1341316259, 'comment_body': 'Add a pre-check before delete_user().', 'comment_created': datetime.datetime(2023, 9, 29, 12, 40, 16, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1341316878, 'comment_body': 'Indentation here seems wrong, should match previous line.', 'comment_created': datetime.datetime(2023, 9, 29, 12, 40, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1341320457, 'comment_body': ""I think it's fine to keep the key as just language code + topic ID. The opportunity ID is not part of the model key and shouldn't be part of the key here. (The opportunity ID probably makes sense as the sole value.)"", 'comment_created': datetime.datetime(2023, 9, 29, 12, 44, 57, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1341420905, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 9, 29, 14, 14, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1341420946, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 9, 29, 14, 14, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1341420998, 'comment_body': 'SG, Done.', 'comment_created': datetime.datetime(2023, 9, 29, 14, 14, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}]","[{'commit_sha': 'a5f893f473a8a39a40955c4a9073077a5f983435', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc90a3b318db03c6ffef2efbb7e0bf78205a1f60', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '789861bfd542d0974634f420b36d33b642b566fc', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a1cc25edeb8cb68bfa24cf828c0a72d856c3feb', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dd90eeedc986865764e596628c1bb0356e8f0a0', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89190aa05be0c4e7cc7d5d36d2de9d5086f3a93a', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cd9b5557444c4ffd081a6dd986d2ea89b83c804', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46e8ac9447db5a07c89f790556d74bc4bca79630', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a5cbfa3c094ee49047c6fde2ddf6e89565c7c74', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f5776edf2f62d79d40a12f33096c8941cde23a8', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b36e2454ad4b5643abb5b07d50cbbf41a0acd56', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dade91e19401124d5c1f95f11141d1b4952ddba', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b0152a0564ccc534a35adf0c15336f12b7ea481', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f031946392244aa73f134694a6f851c89637c46b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78ebd680483b5e20f5ed63ceb687a6b9f5d2157d', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '105a3684cd0a5be3788de066c57940cca14acfc2', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a813624025b66ec2ce9ef48d77c6d55313c6820d', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66eaa8de5f592e50110069d3ab00d4172e5a0d9a', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d1546f602e9cd0cdc0ae09f48419d96a0d68014', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e355edf79ae90466cbfd43ef4d77682d866d062a', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6db11523c7b7f019e9dbba59e681d3af7f1e5fed', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3e68aef88d8f9606cac6685ba1128d2ada10942', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b65b6f891e556e289cb19e8d4beb8817daff7d8', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}]",Ashwath Kannan,98253080,,User,,67,,4,15
1541280211,Add domain objects,"## Overview

1. This PR does the following: This PR adds a domain object and it's two method `to_dict` and `from_dict` for PinnedOpportunityModel, for more info please refer to https://docs.google.com/document/d/18rFozOzbcDYWa6sS9gTYu4R_VfMevbM5v3xlf7Gy3zQ/edit#bookmark=id.kynjjbuflmvf
## Essential Checklist

- [ ] The **PR title** starts with ""Fix #bugnum: "" or ""Fix part of #bugnum: ..."",
followed by a short, clear summary of the changes.
- [x] I have followed the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- [ ] The linter/Karma presubmit checks have passed on my local machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
- [x] My PR follows the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide).
- [x] I have assigned the correct reviewers to this PR (or will leave a
comment with the phrase ""@{{reviewer_username}} PTAL"" if I don't have
permissions to assign reviewers directly).

## Proof that changes are correct

Backend Tests are passing.

## PR Pointers

- Never force push! If you do, your PR will be closed.
- To reply to reviewers, follow these instructions: https://github.com/oppia/oppia/wiki/Make-a-pull-request#step-5-address-review-comments-until-all-reviewers-approve
- Some e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
- See the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers) for what code owners will expect.
",True,18987,https://api.github.com/repos/oppia/oppia/pulls/18987,https://github.com/oppia/oppia/pull/18987,closed,100,0,2,12,6,8,1,1,[{'name': 'PR: LGTM'}],2023-10-04 07:36:55+00:00,2023-10-10 04:23:36+00:00,506801.0,"5 days, 20:46:41","[{'comment_id': 1348891535, 'comment_body': 'Move this above `SkillOpportunityDict`?', 'comment_created': datetime.datetime(2023, 10, 6, 15, 41, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1348891897, 'comment_body': '```suggestion\r\n    """"""A dictionary representing a PinnedOpportunity object.""""""\r\n```', 'comment_created': datetime.datetime(2023, 10, 6, 15, 41, 36, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1348894593, 'comment_body': '```suggestion\r\n            language_code: str. The ISO 639-1 language code for which the opportunity is pinned.\r\n```', 'comment_created': datetime.datetime(2023, 10, 6, 15, 43, 53, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1348894794, 'comment_body': '```suggestion\r\n    """"""The domain object for pinned translation opportunities in the contributor dashboard.""""""\r\n```', 'comment_created': datetime.datetime(2023, 10, 6, 15, 44, 3, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1348895165, 'comment_body': '```suggestion\r\n            topic_id: str. The ID of the topic for which the opportunity is pinned.\r\n```', 'comment_created': datetime.datetime(2023, 10, 6, 15, 44, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1348895620, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2023, 10, 6, 15, 44, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1348896133, 'comment_body': '```suggestion\r\n        """"""Returns a PinnedOpportunity domain object from a dict.\r\n```', 'comment_created': datetime.datetime(2023, 10, 6, 15, 45, 10, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1349536465, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 7, 15, 40, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}]","[{'commit_sha': '44bf27d9a71a34c362c5c0bfa2d4aa3d5d3f748d', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ff9e3dfa78b66b83c0e1ae26b8c68e608670361', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e8f819086041d0475aacde0f3bc917ce2dc8c4e', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '287ddd124440471c93d7c383e837ae02b626b053', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e5d3a0433a4bf4312b1e2ccbd4b800cbe79c0d1', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b309501a6c57c47bc4d3e8971f1041e860fd451c', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed1289ee7586464dbb36d4860d68a04d109ed767', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc7824cd6ec552a9570ff450d2653997a02cfaa4', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c1653932d79b3b6ea7b3a40bbd2d2909ee898c8', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5402af5136ea24ef5e078f23302568c558e3c423', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe3108d66dd3803cd5a6b7c008a3a6938fcb282b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'befba4e253e8000b31317b671cc2259ce2536246', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}]",Ashwath Kannan,98253080,,User,,67,,4,15
1545823776,GSoC: M2.4 : Add new service methods and handler for Pinning opportunities in CD,"## Overview

1. This PR does the following: This PR introduces changes in handler and service methods, to implement pinning of translation opportunities in contributor dashboard. Also it introduces a new field `is_pinned` in ExplorationSummary Domain object, which will be used by frontend to distinguish whether a opportunity is pinned or not.

For more info please refer to: https://docs.google.com/document/d/18rFozOzbcDYWa6sS9gTYu4R_VfMevbM5v3xlf7Gy3zQ/edit#bookmark=id.kynjjbuflmvf

## Essential Checklist

- [ ] The **PR title** starts with ""Fix #bugnum: "" or ""Fix part of #bugnum: ..."",
followed by a short, clear summary of the changes.
- [x] I have followed the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- [ ] The linter/Karma presubmit checks have passed on my local machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
- [ ] My PR follows the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide).
- [x] I have assigned the correct reviewers to this PR (or will leave a
comment with the phrase ""@{{reviewer_username}} PTAL"" if I don't have
permissions to assign reviewers directly).


## Proof that changes are correct

The backend tests are passing

## PR Pointers

- Never force push! If you do, your PR will be closed.
- To reply to reviewers, follow these instructions: https://github.com/oppia/oppia/wiki/Make-a-pull-request#step-5-address-review-comments-until-all-reviewers-approve
- Some e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
- See the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers) for what code owners will expect.
",True,18993,https://api.github.com/repos/oppia/oppia/pulls/18993,https://github.com/oppia/oppia/pull/18993,closed,413,26,10,31,12,8,1,1,[{'name': 'PR: LGTM'}],2023-10-06 18:04:53+00:00,2023-11-04 15:03:12+00:00,2494699.0,"28 days, 20:58:19","[{'comment_id': 1356067453, 'comment_body': '`class LessonsPinningHandler`', 'comment_created': datetime.datetime(2023, 10, 12, 5, 18, 51, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1356068232, 'comment_body': '`class LessonsPinningHandlerNormalizedRequestDict(TypedDict):`', 'comment_created': datetime.datetime(2023, 10, 12, 5, 20, 2, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1356069508, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2023, 10, 12, 5, 22, 34, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1358419271, 'comment_body': '```suggestion\r\n        exp_opp_summaries = (\r\n            opportunity_services.get_exploration_opportunity_summaries_by_ids(\r\n                exp_ids\r\n            )\r\n        )\r\n```', 'comment_created': datetime.datetime(2023, 10, 13, 15, 31, 55, tzinfo=datetime.timezone.utc), 'commenter': 'aasiffaizal', 'type': 'User'}, {'comment_id': 1358421181, 'comment_body': ""```suggestion\r\n            ordered_exp_opp_summaries[\r\n                pinned_opportunity_summary['id']\r\n            ] = pinned_opportunity_summary\r\n```"", 'comment_created': datetime.datetime(2023, 10, 13, 15, 33, 47, tzinfo=datetime.timezone.utc), 'commenter': 'aasiffaizal', 'type': 'User'}, {'comment_id': 1358422422, 'comment_body': '```suggestion\r\n        opportunity_services.update_pinned_opportunity_model(\r\n            self.user_id, language_code, topic_id, opportunity_id\r\n        )\r\n```', 'comment_created': datetime.datetime(2023, 10, 13, 15, 35, 3, tzinfo=datetime.timezone.utc), 'commenter': 'aasiffaizal', 'type': 'User'}, {'comment_id': 1374103323, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 10, 27, 5, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1374103334, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 10, 27, 5, 56, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}]","[{'commit_sha': '090053b9677109b44c3ccd064037b2d19588aa27', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd59ce335390ad2cb22f459e3e10656293af0b312', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf520b7af9d65619532d87ecb9d98508f6af7116', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00194af633657d4bf457364ab519be7dfc5fc31b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5da4f6aed35e653b105d5fc0c9a6671d298190bc', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '732a44b586b216e3a5bbf050df0c7c827fb64e63', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55e59e0a7eaa0348f0782d6bf41b3fb3c11ffce4', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '695841db70bc2dce610404fe99ebbb1f1ed00a5b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88bd5cf1e95da00a666b0e3dd2a425c061f88ca0', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72653d27dcaff28ae906448363ce420833c95548', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdf3e89acd9b72e5c473e69e1b3a09fa534a0bea', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1787a5506e81ba8a00363c9ba8b3ed446f9788d5', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd3b4a822ad8469dcdf5478a5ee6f2a6a5fca895', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b37a8fe389a0d5e4b7ed716f1e14a8cdbc332a52', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de772bb98e25c68b279df406ece715add9b06b26', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f66909a9ca3e272fa27070aefcef0464c7202766', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10aeeae651c5203f4b326a55ad63779bbbf85887', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68c43c121cd9bec937951d22c174c7472fbbb029', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1bb298606c333d1acb01b937e970884269fe5c6', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '425304960a36e0069f5ba3972b929c64fbb8c429', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a87181f3576ffa44cf36de7e43aa42f5212528f', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c715a2899385858657c9c6d77cc1ef872c716c5', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39730d18e175968d6eff09bd617ae36724971bff', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f845115f6516d9a0adc91fb7ff9a1f36d4a4351', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf86c0fd4bd955b62eb8af0eddf6bfb44b940e22', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c65f6e2e199b9c7106835d36ebd26952d8caf891', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b1b74cc7471db491d17ec1d31b02b6a59d964eb', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd8470ff2d36b1d533ace6c459b9ef516ba4dcaf', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '116709181c6461b2c241373060a08fb37ad31936', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd884b018329df1f6b4744f3398fec5aeb8ac443', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31d9996b53edbab527e8bb2ac32250862e139a6e', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}]",Ashwath Kannan,98253080,,User,,67,,4,15
1587333562,GSoC_2.5: Frontend changes to enable pinning of opportunties,"## Overview

1. This PR does the following: This PR introduces frontend changes to enable pinning of reviewable translation opportunities in contributor dashboard, for more details checkout https://docs.google.com/document/d/18rFozOzbcDYWa6sS9gTYu4R_VfMevbM5v3xlf7Gy3zQ/edit?pli=1#bookmark=id.kynjjbuflmvf

Mocks: https://www.figma.com/file/OKGNmo22luDyANM5wwn52S/Oppia-Contributor-Dashboard-Translation-Reviewer-%5Bv01%5D?type=design&node-id=22-434&mode=design

## Essential Checklist

- [ ] The **PR title** starts with ""Fix #bugnum: "" or ""Fix part of #bugnum: ..."",
followed by a short, clear summary of the changes.
- [x] I have followed the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- [x] The linter/Karma presubmit checks have passed on my local machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
- [x] My PR follows the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide).
- [x] I have assigned the correct reviewers to this PR (or will leave a
comment with the phrase ""@{{reviewer_username}} PTAL"" if I don't have
permissions to assign reviewers directly).


## Proof that changes are correct


https://github.com/oppia/oppia/assets/98253080/3b2143eb-9b06-4aa3-83f5-dbffdf0145da



#### Proof of changes on mobile phone

<img width=""1440"" alt=""Screenshot 2023-11-06 at 19 04 37"" src=""https://github.com/oppia/oppia/assets/98253080/2e616e40-cfd5-4714-8e6d-c887580e467e"">


## PR Pointers

- Never force push! If you do, your PR will be closed.
- To reply to reviewers, follow these instructions: https://github.com/oppia/oppia/wiki/Make-a-pull-request#step-5-address-review-comments-until-all-reviewers-approve
- Some e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
- See the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers) for what code owners will expect.
",True,19122,https://api.github.com/repos/oppia/oppia/pulls/19122,https://github.com/oppia/oppia/pull/19122,closed,1370,494,19,34,14,4,1,1,[{'name': 'PR: LGTM'}],2023-11-05 07:48:32+00:00,2024-01-24 13:09:17+00:00,6931245.0,"80 days, 5:20:45","[{'comment_id': 1389614968, 'comment_body': 'Please differ setup, action and evaluation by new lines. Ditto elsewhere.', 'comment_created': datetime.datetime(2023, 11, 10, 16, 20, 23, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1389615511, 'comment_body': 'What is the type of this variable?', 'comment_created': datetime.datetime(2023, 11, 10, 16, 20, 48, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1435963589, 'comment_body': 'It is a list of ExplorationObjectSummary. I have added the type, thanks.', 'comment_created': datetime.datetime(2023, 12, 25, 6, 7, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1435963594, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 12, 25, 6, 7, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}]","[{'commit_sha': '63f0a10e375a3d0ce1f7272fe8771d0fbc9dc6ac', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '902b5f1a55b2660f205c1475cd1852b994b8c343', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72f44a32cb87bf5c78132762036e12e4424465a3', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df536588d3fdf2b303a0aa1760985107380613f7', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db7acc0a6a2d3ccecdc12c3cf747637804cf9ccf', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76f524ba309d2d9735bbf5589f86892ab31d65f1', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7ae668576974ba6efdd940f31074dd771e7b5ff', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43d3b20c5e5d5caceb431dfaaba93c4e5aec9297', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'caeebad5439bf40563fc6865a299c307990f61ed', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56dab74420584f6cb951237a2f6249a002fe59cf', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71684e7a1d65c48d2a09e8f33a8c3932b28e0e7c', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77dda127eb6f252c5f63540dbed2502bf746fa07', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33eae0532158977f360e7101b9bbee4d2b7fdfc8', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1eadbb19e4c738a773fcad9b44a048c578913ddf', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7442fcc659d11a57c469a96f88280e31db8b82c', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e651406d22feefd7ed21b2a92827af65e26c1e2', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b58b03816e3bf2a67fb436add06a7d875c769e1', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16d0bda66c35126dee04ed43dc9d1c07e9e76d22', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89bba42d26f23a845a2f3e22c0416662446cb2ca', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '995adeeee9d1bde863c4ee607e8f4122c1017adb', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77f20c6bf1be3899365c8a30d0adcdea70227a33', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8eb1c2dba8d6cf5f557b0ca1f0aa8ceecf12b202', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13d2e68ed8626f38e6d762a6f0dae24727ec243c', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31fb9061ef5ea67733ec036b8d5bd6e1f07e75e7', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '786ab39d4cde7a2e4fc07e4109bf0683717c4655', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50864f349e421f0e77d9aace6cd9ed563ae07c7b', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b525d484052bcd098fbfefeb62c7823a8833edda', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc6df968174cb94ed1466b64430f1510f32179d8', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62f70e5689b0e00665b195d4a44a388c245d95c6', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d964498a4d6a5c67bc1d0e2df25b3384c4c18b9', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c887e8f419bb366ab6f78aa8ae757b7c6126bf4a', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a07f1433dd743b593866a7b7ce9ca88bc25ded99', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fab1cb84c3041c3de587e69a8676363067cf77a8', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbcc890f6698488925e63d59f7cf8e12283f42d5', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}]",Ashwath Kannan,98253080,,User,,67,,4,15
1499776096,GSoC_M2.2_Implement_Undo_Feature_for_translation_suggestions,"## Overview

1. This PR does the following: This PR implements undo feature for translation-reviewers. The suggestions will be queued and while the suggestion is queued a snackbar will be visible along with two action buttons, (a) Undo and (b) dismiss.

When the user clicks on (a): the queued suggestion will be reverted back to the list of to-review suggestions.
When the user clicks on (b): the queued suggestion will be committed to the backend, and a toast message indicating the success will appear.

If user doesn't click on any button while suggestion is queued, it will be automatically queued once the timer ticks away.

## Essential Checklist

- [ ] The **PR title** starts with ""Fix #bugnum: "" or ""Fix part of #bugnum: ..."",
followed by a short, clear summary of the changes.
- [ ] I have followed the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- [ ] The linter/Karma presubmit checks have passed on my local machine.
- [ ] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
- [ ] My PR follows the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide).
- [ ] I have assigned the correct reviewers to this PR (or will leave a
comment with the phrase ""@{{reviewer_username}} PTAL"" if I don't have
permissions to assign reviewers directly).

## Proof that changes are correct

https://github.com/oppia/oppia/assets/98253080/b1e01530-9955-4cf5-8ab9-789dbc8a7071

#### Proof of changes on mobile phone

<img width=""1440"" alt=""Screenshot 2023-09-29 at 20 33 29"" src=""https://github.com/oppia/oppia/assets/98253080/8c626579-3b67-4ae7-995d-cad96fb23252"">


## PR Pointers

- Never force push! If you do, your PR will be closed.
- To reply to reviewers, follow these instructions: https://github.com/oppia/oppia/wiki/Make-a-pull-request#step-5-address-review-comments-until-all-reviewers-approve
- Some e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
- See the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers) for what code owners will expect.
",False,18831,https://api.github.com/repos/oppia/oppia/pulls/18831,https://github.com/oppia/oppia/pull/18831,closed,289967,370569,3013,29,20,0,1,1,[{'name': 'PR: LGTM'}],2023-09-02 07:20:13+00:00,2024-03-13 19:36:56+00:00,16719403.0,"193 days, 12:16:43",[],"[{'commit_sha': '6c67fd5ccc1fbc2cb252c4bac01091f2fd3d6799', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0332e7abbf326b249cea31f260c19b1b9dd7e4b7', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b3e9b60ab561dd88a787271fc1e5e6014767e53', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da5b9742894bff828268b5d19ef725a930f1c9f5', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dcaeb3ea6226a050f6d8961b0a49f5fb6101a77', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '321b3cb1af6067da8635f21277fbc9ba0b4f633c', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '097c1297657432bd2fe58fce06287cb14fcfbc5f', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7104d45cbff7f0aae8b9855ac55f14791c5d4f73', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fe276b5d0cbdb587d2b8585e147c0cecfaa69b5', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a85f6bfcff5137108a1ad100a7c4dad3d78f743', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6eaf4a39f6dcd3658083f3716d3045f3397684e', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2b5d832b15eaa18306b3bcf949ed21c4678be73', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8422ca5ec8b93015ad69edeecf8426e0ed4a1260', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5162b95a3df2ce8ae557f505354948c1bf5419e3', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c374ee149a4d90e2c963cb88bbfd13222de94ea', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c269d69043fa1e6b240894b287399684515e9a67', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00d67e21e0d9a7e5f33b9db2c83e17c0c256069d', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1df5f4cc3fc63f2511ac4d85d6fcbfdaba941c84', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '374113bf0d18d30855cc6639cac7e2bbec31f017', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63da50931e0931ae2a54eddc8c627d010384117a', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac759c5e0393ad581e1ab45c9dcf25a201efaae2', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d1f40c98a305a92a77b4ef6816abdc74f78169f', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d038cb99d1befa90e5872effb1c6bcd77675901', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfc1b5be24ce46bb1819abb625de0dc8e40aeedc', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e54bba02bebc2a607819ef3adafc13b466292a7c', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b55922ecd97992ee0b03b7a513e8c65b935a426', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee232d0c165ddcfeaefe55c0776a7b67165391ee', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48d787f1a444fce63c0ba181cb4059b7b439bb4f', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2ef0b3e109387f8df378ff768b9ff6770d020ac', 'committer_username': 'Ash-2k3', 'committer_name': 'Ashwath Kannan', 'committer_email': None, 'commit_date': datetime.datetime(2022, 1, 23, 7, 34, 57, tzinfo=datetime.timezone.utc)}]",Ashwath Kannan,98253080,,User,,67,,4,15

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
40687563,oppia,oppia/oppia,Python,3839,5716,240,775,15750,1416,417,25,"[{'id': 1971041850, 'number': 20681, 'closed': datetime.datetime(2024, 7, 27, 11, 5, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 16, 8, 38, 11, tzinfo=datetime.timezone.utc), 'time_taken': 959256.0, 'time_delta': '11 days, 2:27:36', 'additions': 324, 'deletions': 0, 'state': 'closed'}, {'id': 1955658212, 'number': 20637, 'closed': datetime.datetime(2024, 7, 9, 17, 29, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 5, 20, 55, 26, tzinfo=datetime.timezone.utc), 'time_taken': 333215.0, 'time_delta': '3 days, 20:33:35', 'additions': 18, 'deletions': 129, 'state': 'closed'}, {'id': 1953997259, 'number': 20629, 'closed': datetime.datetime(2024, 8, 10, 17, 34, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 4, 17, 34, 44, tzinfo=datetime.timezone.utc), 'time_taken': 3196791.0, 'time_delta': '36 days, 23:59:51', 'additions': 0, 'deletions': 17, 'state': 'closed'}, {'id': 1952108187, 'number': 20626, 'closed': datetime.datetime(2024, 8, 10, 14, 34, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 3, 17, 44, 51, tzinfo=datetime.timezone.utc), 'time_taken': 3271786.0, 'time_delta': '37 days, 20:49:46', 'additions': 3, 'deletions': 26, 'state': 'closed'}, {'id': 1914749344, 'number': 20438, 'closed': datetime.datetime(2024, 6, 12, 11, 23, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 11, 15, 26, 35, tzinfo=datetime.timezone.utc), 'time_taken': 71788.0, 'time_delta': '19:56:28', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1772497555, 'number': 19954, 'closed': datetime.datetime(2024, 3, 31, 21, 26, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 14, 15, 43, 43, tzinfo=datetime.timezone.utc), 'time_taken': 1489374.0, 'time_delta': '17 days, 5:42:54', 'additions': 1789, 'deletions': 350, 'state': 'closed'}, {'id': 1770782143, 'number': 19946, 'closed': datetime.datetime(2024, 3, 15, 9, 33, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 13, 19, 43, 53, tzinfo=datetime.timezone.utc), 'time_taken': 136151.0, 'time_delta': '1 day, 13:49:11', 'additions': 11, 'deletions': 1, 'state': 'closed'}, {'id': 1755224267, 'number': 19874, 'closed': datetime.datetime(2024, 3, 11, 11, 2, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 4, 17, 42, 17, tzinfo=datetime.timezone.utc), 'time_taken': 580787.0, 'time_delta': '6 days, 17:19:47', 'additions': 133, 'deletions': 6, 'state': 'closed'}, {'id': 1707756931, 'number': 19662, 'closed': datetime.datetime(2024, 2, 3, 19, 45, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 2, 6, 12, 48, tzinfo=datetime.timezone.utc), 'time_taken': 135173.0, 'time_delta': '1 day, 13:32:53', 'additions': 43, 'deletions': 3, 'state': 'closed'}, {'id': 1591898681, 'number': 19141, 'closed': datetime.datetime(2023, 11, 11, 8, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 8, 6, 1, 57, tzinfo=datetime.timezone.utc), 'time_taken': 268263.0, 'time_delta': '3 days, 2:31:03', 'additions': 30, 'deletions': 27, 'state': 'closed'}, {'id': 1587333562, 'number': 19122, 'closed': datetime.datetime(2024, 1, 24, 13, 9, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 5, 7, 48, 32, tzinfo=datetime.timezone.utc), 'time_taken': 6931245.0, 'time_delta': '80 days, 5:20:45', 'additions': 1370, 'deletions': 494, 'state': 'closed'}, {'id': 1581034914, 'number': 19087, 'closed': datetime.datetime(2023, 11, 4, 15, 8, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 31, 14, 0, 24, tzinfo=datetime.timezone.utc), 'time_taken': 349662.0, 'time_delta': '4 days, 1:07:42', 'additions': 480, 'deletions': 22, 'state': 'closed'}, {'id': 1569885431, 'number': 19045, 'closed': datetime.datetime(2024, 2, 14, 8, 16, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 23, 20, 17, 30, tzinfo=datetime.timezone.utc), 'time_taken': 9806359.0, 'time_delta': '113 days, 11:59:19', 'additions': 755, 'deletions': 4, 'state': 'closed'}, {'id': 1545823776, 'number': 18993, 'closed': datetime.datetime(2023, 11, 4, 15, 3, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 6, 18, 4, 53, tzinfo=datetime.timezone.utc), 'time_taken': 2494699.0, 'time_delta': '28 days, 20:58:19', 'additions': 413, 'deletions': 26, 'state': 'closed'}, {'id': 1541280211, 'number': 18987, 'closed': datetime.datetime(2023, 10, 10, 4, 23, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 4, 7, 36, 55, tzinfo=datetime.timezone.utc), 'time_taken': 506801.0, 'time_delta': '5 days, 20:46:41', 'additions': 100, 'deletions': 0, 'state': 'closed'}, {'id': 1516171328, 'number': 18873, 'closed': datetime.datetime(2023, 9, 30, 3, 26, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 14, 18, 25, 10, tzinfo=datetime.timezone.utc), 'time_taken': 1328488.0, 'time_delta': '15 days, 9:01:28', 'additions': 339, 'deletions': 0, 'state': 'closed'}, {'id': 1499776096, 'number': 18831, 'closed': datetime.datetime(2024, 3, 13, 19, 36, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 2, 7, 20, 13, tzinfo=datetime.timezone.utc), 'time_taken': 16719403.0, 'time_delta': '193 days, 12:16:43', 'additions': 289967, 'deletions': 370569, 'state': 'closed'}, {'id': 1497552295, 'number': 18825, 'closed': datetime.datetime(2023, 9, 18, 14, 5, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 31, 17, 25, 8, tzinfo=datetime.timezone.utc), 'time_taken': 1543208.0, 'time_delta': '17 days, 20:40:08', 'additions': 147, 'deletions': 3, 'state': 'closed'}, {'id': 1486846326, 'number': 18813, 'closed': datetime.datetime(2023, 8, 31, 12, 4, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 23, 18, 15, 7, tzinfo=datetime.timezone.utc), 'time_taken': 668944.0, 'time_delta': '7 days, 17:49:04', 'additions': 40, 'deletions': 20, 'state': 'closed'}, {'id': 1481751698, 'number': 18802, 'closed': datetime.datetime(2023, 9, 6, 13, 44, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 20, 10, 37, 32, tzinfo=datetime.timezone.utc), 'time_taken': 1480021.0, 'time_delta': '17 days, 3:07:01', 'additions': 65, 'deletions': 32, 'state': 'closed'}, {'id': 1477777578, 'number': 18787, 'closed': datetime.datetime(2023, 8, 17, 7, 4, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 16, 16, 32, 39, tzinfo=datetime.timezone.utc), 'time_taken': 52297.0, 'time_delta': '14:31:37', 'additions': 3, 'deletions': 8, 'state': 'closed'}, {'id': 1457707668, 'number': 18719, 'closed': datetime.datetime(2023, 8, 11, 16, 6, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 9, 19, 4, tzinfo=datetime.timezone.utc), 'time_taken': 888428.0, 'time_delta': '10 days, 6:47:08', 'additions': 17, 'deletions': 22, 'state': 'closed'}, {'id': 1456255359, 'number': 18717, 'closed': datetime.datetime(2023, 8, 29, 21, 42, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 31, 13, 27, 28, tzinfo=datetime.timezone.utc), 'time_taken': 2535283.0, 'time_delta': '29 days, 8:14:43', 'additions': 260, 'deletions': 6, 'state': 'closed'}, {'id': 1455047980, 'number': 18707, 'closed': datetime.datetime(2023, 7, 31, 1, 11, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 30, 6, 0, 42, tzinfo=datetime.timezone.utc), 'time_taken': 69047.0, 'time_delta': '19:10:47', 'additions': 11, 'deletions': 0, 'state': 'closed'}, {'id': 1445374570, 'number': 18664, 'closed': datetime.datetime(2023, 8, 16, 12, 38, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 22, 17, 15, 34, tzinfo=datetime.timezone.utc), 'time_taken': 2143371.0, 'time_delta': '24 days, 19:22:51', 'additions': 1174, 'deletions': 29, 'state': 'closed'}, {'id': 1409434976, 'number': 18550, 'closed': datetime.datetime(2023, 7, 28, 18, 48, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 27, 9, 16, 24, tzinfo=datetime.timezone.utc), 'time_taken': 2712743.0, 'time_delta': '31 days, 9:32:23', 'additions': 110, 'deletions': 3, 'state': 'closed'}, {'id': 1398231550, 'number': 18416, 'closed': datetime.datetime(2023, 7, 22, 17, 14, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 19, 13, 19, 2, tzinfo=datetime.timezone.utc), 'time_taken': 2865344.0, 'time_delta': '33 days, 3:55:44', 'additions': 467, 'deletions': 23, 'state': 'closed'}, {'id': 1395875014, 'number': 18392, 'closed': datetime.datetime(2023, 6, 24, 4, 44, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 16, 14, 55, 44, tzinfo=datetime.timezone.utc), 'time_taken': 654526.0, 'time_delta': '7 days, 13:48:46', 'additions': 105, 'deletions': 5, 'state': 'closed'}, {'id': 1387222971, 'number': 18361, 'closed': datetime.datetime(2023, 6, 16, 14, 56, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 10, 17, 54, 36, tzinfo=datetime.timezone.utc), 'time_taken': 507725.0, 'time_delta': '5 days, 21:02:05', 'additions': 340, 'deletions': 12, 'state': 'closed'}, {'id': 1377954928, 'number': 18335, 'closed': datetime.datetime(2023, 6, 16, 9, 15, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 4, 21, 37, 25, tzinfo=datetime.timezone.utc), 'time_taken': 992276.0, 'time_delta': '11 days, 11:37:56', 'additions': 234, 'deletions': 1, 'state': 'closed'}, {'id': 1375250604, 'number': 18316, 'closed': datetime.datetime(2023, 6, 11, 4, 22, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 2, 7, 28, 59, tzinfo=datetime.timezone.utc), 'time_taken': 766401.0, 'time_delta': '8 days, 20:53:21', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 1368206712, 'number': 18300, 'closed': datetime.datetime(2023, 6, 3, 17, 27, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 28, 22, 51, 33, tzinfo=datetime.timezone.utc), 'time_taken': 498976.0, 'time_delta': '5 days, 18:36:16', 'additions': 13, 'deletions': 3, 'state': 'closed'}, {'id': 1358604868, 'number': 18267, 'closed': datetime.datetime(2023, 6, 11, 10, 32, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 22, 6, 10, 58, tzinfo=datetime.timezone.utc), 'time_taken': 1743680.0, 'time_delta': '20 days, 4:21:20', 'additions': 27, 'deletions': 0, 'state': 'closed'}, {'id': 1315673697, 'number': 18071, 'closed': datetime.datetime(2023, 7, 3, 13, 3, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 16, 18, 25, 8, tzinfo=datetime.timezone.utc), 'time_taken': 6719902.0, 'time_delta': '77 days, 18:38:22', 'additions': 327, 'deletions': 182, 'state': 'closed'}, {'id': 1306667888, 'number': 17988, 'closed': datetime.datetime(2023, 4, 25, 22, 47, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 9, 6, 13, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1442034.0, 'time_delta': '16 days, 16:33:54', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1305596090, 'number': 17974, 'closed': datetime.datetime(2023, 4, 21, 19, 53, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 7, 6, 40, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1257154.0, 'time_delta': '14 days, 13:12:34', 'additions': 54, 'deletions': 10, 'state': 'closed'}, {'id': 1278511118, 'number': 17735, 'closed': datetime.datetime(2023, 4, 10, 18, 58, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 16, 12, 36, 9, tzinfo=datetime.timezone.utc), 'time_taken': 2182944.0, 'time_delta': '25 days, 6:22:24', 'additions': 78, 'deletions': 7, 'state': 'closed'}, {'id': 1272112719, 'number': 17681, 'closed': datetime.datetime(2023, 3, 11, 20, 19, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 11, 17, 38, 7, tzinfo=datetime.timezone.utc), 'time_taken': 9696.0, 'time_delta': '2:41:36', 'additions': 15, 'deletions': 8, 'state': 'closed'}, {'id': 1269353169, 'number': 17654, 'closed': datetime.datetime(2023, 3, 16, 15, 44, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 9, 10, 45, 34, tzinfo=datetime.timezone.utc), 'time_taken': 622739.0, 'time_delta': '7 days, 4:58:59', 'additions': 109, 'deletions': 2, 'state': 'closed'}, {'id': 1247735813, 'number': 17419, 'closed': datetime.datetime(2023, 2, 27, 17, 37, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 20, 19, 22, 56, tzinfo=datetime.timezone.utc), 'time_taken': 598490.0, 'time_delta': '6 days, 22:14:50', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 1246369440, 'number': 17408, 'closed': datetime.datetime(2023, 2, 25, 8, 13, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 19, 17, 23, 37, tzinfo=datetime.timezone.utc), 'time_taken': 485407.0, 'time_delta': '5 days, 14:50:07', 'additions': 81, 'deletions': 29, 'state': 'closed'}, {'id': 1233267000, 'number': 17275, 'closed': datetime.datetime(2023, 2, 20, 8, 17, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 8, 9, 42, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1031679.0, 'time_delta': '11 days, 22:34:39', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 1227605013, 'number': 17227, 'closed': datetime.datetime(2023, 2, 15, 13, 2, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 3, 5, 20, 37, tzinfo=datetime.timezone.utc), 'time_taken': 1064514.0, 'time_delta': '12 days, 7:41:54', 'additions': 22, 'deletions': 13, 'state': 'closed'}, {'id': 1220183415, 'number': 17170, 'closed': datetime.datetime(2023, 2, 15, 5, 50, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 28, 7, 34, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1548955.0, 'time_delta': '17 days, 22:15:55', 'additions': 11, 'deletions': 7, 'state': 'closed'}]"
