pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1416740367,Working on Bingham Material,Issue #9 ,False,13,https://api.github.com/repos/geoelements/diffmpm/pulls/13,https://github.com/geoelements/diffmpm/pull/13,open,387,0,2,2,7,23,0,0,[],2023-07-02 13:26:58+00:00,,0.0,,"[{'comment_id': 1249722017, 'comment_body': 'Python dictionaries don\'t have `has_key` anymore. Is this working for you? It\'ll be better to use\r\n\r\n```suggestion\r\n        if ""incompressible"" in material_properties:\r\n```', 'comment_created': datetime.datetime(2023, 7, 2, 19, 27, 26, tzinfo=datetime.timezone.utc), 'commenter': 'chahak13', 'type': 'User'}, {'comment_id': 1249738249, 'comment_body': 'I am still working it is not ready for merge, I do use black its just I have not executed the indentation command. I will check for has_key ', 'comment_created': datetime.datetime(2023, 7, 2, 19, 58, 42, tzinfo=datetime.timezone.utc), 'commenter': 'SachinJalan', 'type': 'User'}, {'comment_id': 1249763796, 'comment_body': ""Yeah, no worries. I was working so I thought I'd just mention it."", 'comment_created': datetime.datetime(2023, 7, 2, 20, 47, 15, tzinfo=datetime.timezone.utc), 'commenter': 'chahak13', 'type': 'User'}, {'comment_id': 1252347381, 'comment_body': '```suggestion\r\n        if ""incompressible"" in material_properties:\r\n```', 'comment_created': datetime.datetime(2023, 7, 4, 20, 40, 24, tzinfo=datetime.timezone.utc), 'commenter': 'chahak13', 'type': 'User'}, {'comment_id': 1252348665, 'comment_body': '```suggestion\r\n            strain_rate = strain_rate.at[-3:].multiply(0.5)\r\n```', 'comment_created': datetime.datetime(2023, 7, 4, 20, 44, 23, tzinfo=datetime.timezone.utc), 'commenter': 'chahak13', 'type': 'User'}, {'comment_id': 1252354380, 'comment_body': 'Use `lax.fori_loop` instead of a for loop', 'comment_created': datetime.datetime(2023, 7, 4, 20, 56, 47, tzinfo=datetime.timezone.utc), 'commenter': 'chahak13', 'type': 'User'}, {'comment_id': 1252356068, 'comment_body': 'This is not a pure function as it is interacting with ""global"" (compared to its scope) variables. Jax doesn\'t like that. Can you change this to a function such that it interacts only with the variables passed to it as arguments? You can pass all variables like `self` etc in the args. You can take a look at any of the update functions in `element.py` for reference. ', 'comment_created': datetime.datetime(2023, 7, 4, 20, 59, 53, tzinfo=datetime.timezone.utc), 'commenter': 'chahak13', 'type': 'User'}, {'comment_id': 1252358266, 'comment_body': ""Please don't use the same variable name as the attribute."", 'comment_created': datetime.datetime(2023, 7, 4, 21, 3, 41, tzinfo=datetime.timezone.utc), 'commenter': 'chahak13', 'type': 'User'}, {'comment_id': 1252358423, 'comment_body': 'Same as before, different variable names would probably make it more readable', 'comment_created': datetime.datetime(2023, 7, 4, 21, 4, 17, tzinfo=datetime.timezone.utc), 'commenter': 'chahak13', 'type': 'User'}, {'comment_id': 1252360500, 'comment_body': 'Also, this is probably not going to work. `state_vars[""pressure""]` is a `float` whereas `particle.dvolumetric_strain` is going to be an array of shape `(nparticles, 1)`', 'comment_created': datetime.datetime(2023, 7, 4, 21, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'chahak13', 'type': 'User'}, {'comment_id': 1252361480, 'comment_body': ""If each particle is supposed to have its own state variables, then this won't work. You'll need arrays to maintain values for all particles."", 'comment_created': datetime.datetime(2023, 7, 4, 21, 9, 43, tzinfo=datetime.timezone.utc), 'commenter': 'chahak13', 'type': 'User'}, {'comment_id': 1252363093, 'comment_body': 'Are you thinking of making `state_vars` a particle attribute that gets passed here? Because I did not see any call to `initialise_state_variables()`. Also,\r\n\r\n```suggestion\r\n    def compute_stress(self, dstrain, particles, state_vars):\r\n```\r\nas it is a container of particles and not a single particle.', 'comment_created': datetime.datetime(2023, 7, 4, 21, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'chahak13', 'type': 'User'}, {'comment_id': 1263391477, 'comment_body': ""```suggestion\r\n    particles.update_natural_coords(element)\r\n    if element.constraints:\r\n        element.apply_boundary_constraints()\r\n```\r\nThe natural coordinates of the particles would need to be updated based on the elements the particles are in. Since this was not happening, the gradient of the shape function was being calculated incorrectly thereby giving wrong strain values. The reason volumetric strain worked was because volumetric strain is calculated at centroid, which has the same natural coordinates always. Making this change will pass all the test cases.\r\n\r\nAlso, as a note, you should be able to clean up the test cases quite a bit. You don't need to create a separate material variable if you have the particles. You should just use the material of the particles. `element`, `particles` and `state_vars` can be moved to fixtures, instead of declaring it in each test repeatedly since I don't see them changing."", 'comment_created': datetime.datetime(2023, 7, 14, 7, 20, 9, tzinfo=datetime.timezone.utc), 'commenter': 'chahak13', 'type': 'User'}, {'comment_id': 1264586675, 'comment_body': '```suggestion\r\n        if material_properties.get(""incompressible"", False):\r\n            compressibility_multiplier_ = 0.0\r\n```', 'comment_created': datetime.datetime(2023, 7, 16, 0, 12, 14, tzinfo=datetime.timezone.utc), 'commenter': 'chahak13', 'type': 'User'}, {'comment_id': 1264711454, 'comment_body': '```suggestion\r\n        Parameters\r\n        ----------\r\n```', 'comment_created': datetime.datetime(2023, 7, 16, 16, 32, 35, tzinfo=datetime.timezone.utc), 'commenter': 'chahak13', 'type': 'User'}, {'comment_id': 1264727908, 'comment_body': 'Same as above. Just declare `dt` in the test directly.', 'comment_created': datetime.datetime(2023, 7, 16, 18, 43, 33, tzinfo=datetime.timezone.utc), 'commenter': 'chahak13', 'type': 'User'}, {'comment_id': 1264727919, 'comment_body': '```suggestion\r\n@pytest.mark.parametrize(\r\n    ""particles, element, target"",\r\n    particles_element_targets,\r\n)\r\ndef test_compute_stress(particles, element, target):\r\n    state_vars = {""pressure"": jnp.zeros(1)}\r\n    dt = 1\r\n    particles.update_natural_coords(element)\r\n    if element.constraints:\r\n        element.apply_boundary_constraints()\r\n    particles.compute_strain(element, dt)\r\n    stress = particles.material.compute_stress(None, particles, state_vars)\r\n    assert jnp.allclose(stress, target)\r\n```\r\n\r\nNo need to mark them as fixtures if they\'re just returning a value for one test. Just use them in the test directly.', 'comment_created': datetime.datetime(2023, 7, 16, 18, 43, 42, tzinfo=datetime.timezone.utc), 'commenter': 'chahak13', 'type': 'User'}, {'comment_id': 1264727970, 'comment_body': '```suggestion\r\n        Computes the stress for the Bingham material.\r\n```', 'comment_created': datetime.datetime(2023, 7, 16, 18, 44, 26, tzinfo=datetime.timezone.utc), 'commenter': 'chahak13', 'type': 'User'}]","[{'commit_sha': '377a82ac9960455e3023e937034b1cf488ecb9c0', 'committer_username': 'SachinJalan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 3, 25, 16, 29, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16076465b36e0a5b67c1ff8b92b356a4847511e7', 'committer_username': 'SachinJalan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 3, 25, 16, 29, 25, tzinfo=datetime.timezone.utc)}]",,102378053,,User,,15,,1,2
1454184795,VTK Writer Functionality Added,Issue #18 ,False,29,https://api.github.com/repos/geoelements/diffmpm/pulls/29,https://github.com/geoelements/diffmpm/pull/29,open,76,0,8,6,2,2,0,0,[],2023-07-28 17:40:10+00:00,,0.0,,"[{'comment_id': 1285265735, 'comment_body': 'The stresses are all zero...', 'comment_created': datetime.datetime(2023, 8, 6, 21, 46, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kks32', 'type': 'User'}, {'comment_id': 1291094604, 'comment_body': 'yes stress_xx is supposed to be 0 stress_yy is non zero', 'comment_created': datetime.datetime(2023, 8, 11, 9, 9, 33, tzinfo=datetime.timezone.utc), 'commenter': 'SachinJalan', 'type': 'User'}]","[{'commit_sha': 'b787fa221b0f66cc99ac16a16889b49229d455e1', 'committer_username': 'SachinJalan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 3, 25, 16, 29, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7127138624e68695cc7cd784948f489bcec172e3', 'committer_username': 'SachinJalan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 3, 25, 16, 29, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48c1cc925f58311d7701ecefe6f36890ba6c0060', 'committer_username': 'SachinJalan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 3, 25, 16, 29, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3f63f5079a1f98c25c66e649e372cc8cf4496da', 'committer_username': 'SachinJalan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 3, 25, 16, 29, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee6b4a83aa6757d43aee6e868669ba1d0e6569be', 'committer_username': 'SachinJalan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 3, 25, 16, 29, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75f8d35133bdbad02d9de29c8328b1e442b183ba', 'committer_username': 'SachinJalan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 3, 25, 16, 29, 25, tzinfo=datetime.timezone.utc)}]",,102378053,,User,,15,,1,2
1438950183,Utility functions for benchmark input files,Issue #24 ,False,26,https://api.github.com/repos/geoelements/diffmpm/pulls/26,https://github.com/geoelements/diffmpm/pull/26,open,64,0,1,3,0,3,0,0,[],2023-07-18 09:58:30+00:00,,0.0,,"[{'comment_id': 1267551406, 'comment_body': '```suggestion\r\n    with open(input_file_path) as f:\r\n        data = json.load(f)\r\n```', 'comment_created': datetime.datetime(2023, 7, 19, 5, 29, 52, tzinfo=datetime.timezone.utc), 'commenter': 'chahak13', 'type': 'User'}, {'comment_id': 1267551566, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2023, 7, 19, 5, 30, 11, tzinfo=datetime.timezone.utc), 'commenter': 'chahak13', 'type': 'User'}, {'comment_id': 1267552194, 'comment_body': '```suggestion\r\n    with open(output_file_path, ""w"") as outfile:\r\n        json.dump(outfile, indent=2)\r\n```', 'comment_created': datetime.datetime(2023, 7, 19, 5, 31, 15, tzinfo=datetime.timezone.utc), 'commenter': 'chahak13', 'type': 'User'}]","[{'commit_sha': '110c548f510688344c80dd9c85cbf410caca6944', 'committer_username': 'SachinJalan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 3, 25, 16, 29, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34633ebfc41754696b2b5e59915c860ea7abc0ad', 'committer_username': 'SachinJalan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 3, 25, 16, 29, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2050fbed8d6432046967234a51c6a162a5a54dc', 'committer_username': 'SachinJalan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 3, 25, 16, 29, 25, tzinfo=datetime.timezone.utc)}]",,102378053,,User,,15,,1,2
1470804851,Inverse Solver example added,Created an example for inverse solver,False,30,https://api.github.com/repos/geoelements/diffmpm/pulls/30,https://github.com/geoelements/diffmpm/pull/30,open,403,0,2,6,1,0,0,0,[],2023-08-10 18:35:32+00:00,,0.0,,[],"[{'commit_sha': '162a9013d696f0ef0317c198b523789c3babf402', 'committer_username': 'SachinJalan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 3, 25, 16, 29, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a6e079c3ca215b3b04bbcf6f0890b7dafc13451', 'committer_username': 'SachinJalan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 3, 25, 16, 29, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77a4d7f58d28dc0acf813a0a32e372b776343fd1', 'committer_username': 'SachinJalan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 3, 25, 16, 29, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f34507e0fe18f41f8014ea6388cdb29e8baca98', 'committer_username': 'SachinJalan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 3, 25, 16, 29, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e31d8db519650b20387005f5cbfdf8bc53c2fd5e', 'committer_username': 'SachinJalan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 3, 25, 16, 29, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4916f731bb9e824f5a841eb4da8302b178908f38', 'committer_username': 'SachinJalan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 3, 25, 16, 29, 25, tzinfo=datetime.timezone.utc)}]",,102378053,,User,,15,,1,2
1442906975,Plate with hole,Issue #10 ,False,28,https://api.github.com/repos/geoelements/diffmpm/pulls/28,https://github.com/geoelements/diffmpm/pull/28,closed,241361,0,5,3,0,0,0,0,[],2023-07-20 13:40:27+00:00,2023-08-24 10:37:23+00:00,3013016.0,"34 days, 20:56:56",[],"[{'commit_sha': '18d255b366968af9e012689c9569d4533ac3b186', 'committer_username': 'SachinJalan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 3, 25, 16, 29, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14e93eaa8f21fc73cf23429d8da941909de4835f', 'committer_username': 'SachinJalan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 3, 25, 16, 29, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d4466ac334fe85dd1d4421d8ec2a54f3bbf9a0b', 'committer_username': 'SachinJalan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 3, 25, 16, 29, 25, tzinfo=datetime.timezone.utc)}]",,102378053,,User,,15,,1,2

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
575501285,diffmpm,geoelements/diffmpm,Python,6,25,2,2,111,13,1,6,"[{'id': 1470804851, 'number': 30, 'closed': None, 'created': datetime.datetime(2023, 8, 10, 18, 35, 32, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 403, 'deletions': 0, 'state': 'open'}, {'id': 1454184795, 'number': 29, 'closed': None, 'created': datetime.datetime(2023, 7, 28, 17, 40, 10, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 76, 'deletions': 0, 'state': 'open'}, {'id': 1442906975, 'number': 28, 'closed': datetime.datetime(2023, 8, 24, 10, 37, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 20, 13, 40, 27, tzinfo=datetime.timezone.utc), 'time_taken': 3013016.0, 'time_delta': '34 days, 20:56:56', 'additions': 241361, 'deletions': 0, 'state': 'closed'}, {'id': 1438950183, 'number': 26, 'closed': None, 'created': datetime.datetime(2023, 7, 18, 9, 58, 30, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 64, 'deletions': 0, 'state': 'open'}, {'id': 1416740367, 'number': 13, 'closed': None, 'created': datetime.datetime(2023, 7, 2, 13, 26, 58, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 387, 'deletions': 0, 'state': 'open'}]"
