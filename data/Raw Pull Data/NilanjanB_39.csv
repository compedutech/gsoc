pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1003622812,Win32 TestHarness,"Added Win32 TestHarness.

Screenshot uses python Pillow library. Install using system python.",False,2313,https://api.github.com/repos/enigma-dev/enigma-dev/pulls/2313,https://github.com/enigma-dev/enigma-dev/pull/2313,open,848,18,25,5,0,18,0,0,[],2022-07-21 05:10:45+00:00,,0.0,,"[{'comment_id': 995328367, 'comment_body': 'Another option is to extract `/CI/ephemeral-x.sh -w openbox-session` to a variable and only set it to anything on Linux.', 'comment_created': datetime.datetime(2022, 10, 14, 4, 23, 15, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 995329249, 'comment_body': ""Wow, that's an impressive deps list. Nice job tracking those down!"", 'comment_created': datetime.datetime(2022, 10, 14, 4, 25, 40, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 995332819, 'comment_body': 'Probably better to extract this directory name (test-harness-out) as broadly as possible. Across all scripts and the binary would be nice, but sounds impractical for something so trivial. Just a variable with a comment explaining that this name is used elsewhere would be good.', 'comment_created': datetime.datetime(2022, 10, 14, 4, 35, 3, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 996449969, 'comment_body': 'Looks useful; good call!', 'comment_created': datetime.datetime(2022, 10, 16, 14, 32, 13, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 996450016, 'comment_body': ""Thanks for adding this! I think it's up in another PR, actually. Maybe I should merge that before folding this in."", 'comment_created': datetime.datetime(2022, 10, 16, 14, 32, 37, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 996464855, 'comment_body': ""A doc comment on this file might help. Are we parsing the DOM output for information about what tests passed? I think it would be better to upload a JSON payload and let JavaScript generate the HTML from that, rather than generating the JavaScript from the test harness and making the JavaScript parse it. Maybe I'm misreading the flow of things."", 'comment_created': datetime.datetime(2022, 10, 16, 16, 42, 11, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 996465446, 'comment_body': 'This is... an odd choice. Why not use tail for this?\r\n```bash\r\necho ""$head"" > report.html\r\ntail -n +2 TestReport.xml >> report.html\r\necho ""$tail"" >> report.html\r\n```', 'comment_created': datetime.datetime(2022, 10, 16, 16, 47, 5, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 996465958, 'comment_body': ""nit: I'm not personally a fan of starting a block of code with a newline. It's against various style guides. I'm also not one to enforce style guides; just pointing it out."", 'comment_created': datetime.datetime(2022, 10, 16, 16, 51, 51, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 996475109, 'comment_body': ""Does it make sense for `configpool` to be static if it's always kept local to each test? These properties can be recorded within the tests themselves, afaik."", 'comment_created': datetime.datetime(2022, 10, 16, 18, 12, 7, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 996475420, 'comment_body': ""I think we don't need this source at all (and can use the default gtest_main) if the test harness handles attaching those properties."", 'comment_created': datetime.datetime(2022, 10, 16, 18, 14, 58, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 996475567, 'comment_body': ""nit: the `= TestConfig()` doesn't do anything in C++ (this is the usual behavior). Any implementation of default ctor/`operator=` in which that's not the case is problematic."", 'comment_created': datetime.datetime(2022, 10, 16, 18, 15, 57, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 996475662, 'comment_body': 'Why is this commented? Is the loop somewhere else, now?', 'comment_created': datetime.datetime(2022, 10, 16, 18, 17, 16, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 996475906, 'comment_body': 'Might just extract `if (!configpool.empty()) configpool += "","";` to the line before (it\'s less repetition and more readable).', 'comment_created': datetime.datetime(2022, 10, 16, 18, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 996476219, 'comment_body': ""Is this copied from the other TestHarness implementation? It would be good to extract the loop shape and either pass in a predicate (e.g. a std::function to accept a config) if we can't reuse the code in its entirety."", 'comment_created': datetime.datetime(2022, 10, 16, 18, 22, 30, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 996486407, 'comment_body': ""Is this really the easiest way to screenshot in Windows? Win32 has methods for this. We also have a `screen_save` function in ENIGMA; this might be a reason to consider relying on it rather than an external routine.\r\n\r\nAn alternative implementation:  In Win32, you create a new DC, select it in a bitmap, then use BitBlt to copy from the main DC (`GetDC(Null)`) into that. There's a detailed example (with scaling for some reason) [here](https://learn.microsoft.com/en-us/windows/win32/gdi/capturing-an-image). It does seem to be a lot of code compared to this Python business, but it's probably less error-prone (in terms of likelihood of building on Azure in two weeks).\r\n\r\nStill, as utilities go, two lines of python isn't a hefty tax."", 'comment_created': datetime.datetime(2022, 10, 16, 19, 48, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 996516795, 'comment_body': 'This is a lot of CI files at the project root... I understand the .yml files need to be there for the CI services to pick up, but can we move the other utilities into a CI folder? (Probably under //CommandLine/ or //CommandLine/testing/)', 'comment_created': datetime.datetime(2022, 10, 16, 23, 4, 24, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 996517057, 'comment_body': ""(This file in particular probably doesn't belong in the root of the repo...)"", 'comment_created': datetime.datetime(2022, 10, 16, 23, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 996523671, 'comment_body': 'Custom compiler for the test harness? Neat idea.', 'comment_created': datetime.datetime(2022, 10, 16, 23, 22, 54, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}]","[{'commit_sha': '06e2b31d978d9a0a0d5b44efbeb2ecf744510c41', 'committer_username': 'WanderingNullPtr', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 13, 15, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54b92af65248f69f8ce377d1506f41504e4179aa', 'committer_username': 'WanderingNullPtr', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 13, 15, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f2c8992e7eadfe1b54a71b6880e86bf8ab812a5', 'committer_username': 'WanderingNullPtr', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 13, 15, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c4d7ae6c8de1f20469edd4179cede716ee0cbb3', 'committer_username': 'WanderingNullPtr', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 13, 15, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a86f2e4a8d4c8003f697cf6e45d94a2aa9922218', 'committer_username': 'WanderingNullPtr', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 13, 15, 15, 59, tzinfo=datetime.timezone.utc)}]",,49592143,,User,,4,,0,1

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
3319723,enigma-dev,enigma-dev/enigma-dev,C++,120,335,31,69,4788,149,50,37,"[{'id': 1003622812, 'number': 2313, 'closed': None, 'created': datetime.datetime(2022, 7, 21, 5, 10, 45, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 848, 'deletions': 18, 'state': 'open'}, {'id': 911052547, 'number': 2294, 'closed': datetime.datetime(2022, 4, 16, 0, 49, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 15, 19, 28, 12, tzinfo=datetime.timezone.utc), 'time_taken': 19269.0, 'time_delta': '5:21:09', 'additions': 2, 'deletions': 2, 'state': 'closed'}]"
