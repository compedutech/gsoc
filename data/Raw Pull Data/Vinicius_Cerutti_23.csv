pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
471248371,Profiler decorator,"Implemented using a context manager custom class to enable and disable the profiler. I've tested it locally with a test script not related to the bot, and it worked (checked with python 3.7)",True,1131,https://api.github.com/repos/regro/cf-scripts/pulls/1131,https://github.com/regro/cf-scripts/pull/1131,closed,52,0,4,5,3,0,0,1,[],2020-08-20 21:21:33+00:00,2020-09-02 00:07:45+00:00,1046772.0,"12 days, 2:46:12",[],"[{'commit_sha': 'b3893aae21f2d22fcd775fd89482fa1851a58d8a', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8533cdcdaecbe38fb3c721748ee2663c0f031656', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0803fb63ecd31108ae5721202e9bdbd2828a67e', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73b81d892eaafafae82da330ed6ad13bf0a1781c', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71f4122e0d6ae1bde516b24daf4317b2c0e2fdbb', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}]",Vinicius D. Cerutti,51954708,,User,,40,,13,24
426196400,New main update version and sources module.,"As mentioned by @CJ-Wright and @beckermr this new PR aims some alterations on the original version of
`update_upstream_versions` code to generate a JSON file containing the required new versions outside the `graph` structure. Is also, now communicates with the others functions of that module.

Now, I've created a separate module for the upstream sources in the library. A test in a separate repo using Circle CI, was made with an good result (The code runs) [Circle Ci](https://app.circleci.com/pipelines/github/viniciusdc/ts-graph/46/workflows/cf6da52d-df5d-485d-9aaf-6c142ce10962/jobs/51).
There are still some missing alterations as: 
1. Some sources still do some  alterations directly to the `graph` structure;
2. As cited by CJ, I still need to implement it on the `cli.xsh` file to be read (and execute).
3. There is a missing feature, saliented by CJ that I (unfortunately) still could not set:
  
""Changes to make graph (or maybe the version bump code) to look at the source of new version numbers. (I think this is the main piece missing from this PR)""

So these are the next steps. (I would also like to apology myself for the late PR).",True,1027,https://api.github.com/repos/regro/cf-scripts/pulls/1027,https://github.com/regro/cf-scripts/pull/1027,closed,599,0,3,10,44,31,0,0,[],2020-06-01 20:26:23+00:00,2020-06-18 16:58:23+00:00,1456320.0,"16 days, 20:32:00","[{'comment_id': 437586859, 'comment_body': 'The `new_version_attempts` and `new_version_errors` have to stay in the graph data.', 'comment_created': datetime.datetime(2020, 6, 9, 17, 7, 42, tzinfo=datetime.timezone.utc), 'commenter': 'beckermr', 'type': 'User'}, {'comment_id': 437595956, 'comment_body': 'These too.', 'comment_created': datetime.datetime(2020, 6, 9, 17, 23, 18, tzinfo=datetime.timezone.utc), 'commenter': 'beckermr', 'type': 'User'}, {'comment_id': 437596555, 'comment_body': 'We should dump one file per feedstock. ', 'comment_created': datetime.datetime(2020, 6, 9, 17, 24, 24, tzinfo=datetime.timezone.utc), 'commenter': 'beckermr', 'type': 'User'}, {'comment_id': 437632638, 'comment_body': ""Is there a specific path we should use for them ? (like bump on it's Node path)"", 'comment_created': datetime.datetime(2020, 6, 9, 18, 25, 50, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 437863190, 'comment_body': 'Can I create a file on `cf-graph-countyfair` to save these files according to node ?(`cf-graph-countyfair/versions/{node}_new_version.json`)', 'comment_created': datetime.datetime(2020, 6, 10, 5, 9, 40, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 438370035, 'comment_body': 'if so, how can I send this file to that repo ?', 'comment_created': datetime.datetime(2020, 6, 10, 19, 50, 16, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 438503972, 'comment_body': 'You can make a folder using `os.makedirs(foldername, exist_ok=True)`. The files should just be named `{node}.json` since the folder name should be descriptive that they are version numbers.', 'comment_created': datetime.datetime(2020, 6, 11, 2, 10, 51, tzinfo=datetime.timezone.utc), 'commenter': 'CJ-Wright', 'type': 'User'}, {'comment_id': 438507478, 'comment_body': ""oh I see, them as we already have a Job on circle that saves all the alterations made during the running, them it will push the alterations automatically right ? If that's so I will made the corrections right away thanks :+1:"", 'comment_created': datetime.datetime(2020, 6, 11, 2, 25, 32, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 439588008, 'comment_body': ""Done, could someone check if it's ok ?"", 'comment_created': datetime.datetime(2020, 6, 12, 18, 47, 35, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 440480371, 'comment_body': 'Are you sure you want to put this into this PR?', 'comment_created': datetime.datetime(2020, 6, 15, 22, 24, 33, tzinfo=datetime.timezone.utc), 'commenter': 'CJ-Wright', 'type': 'User'}, {'comment_id': 440525510, 'comment_body': ""To be honest, I don't want to put this now, is there a way to remove it ?"", 'comment_created': datetime.datetime(2020, 6, 16, 0, 54, 14, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 440531571, 'comment_body': 'Just committing the ""removing"" will be enough ?', 'comment_created': datetime.datetime(2020, 6, 16, 1, 16, 52, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 440534842, 'comment_body': ""Yes you can add a commit removing it. I would make certain to keep it somewhere though (maybe in a different branch?). The code looks good and we'll need it for the next phase."", 'comment_created': datetime.datetime(2020, 6, 16, 1, 29, 3, tzinfo=datetime.timezone.utc), 'commenter': 'CJ-Wright', 'type': 'User'}, {'comment_id': 440881817, 'comment_body': 'Done! (I saved in a file for later usage)', 'comment_created': datetime.datetime(2020, 6, 16, 14, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 441080334, 'comment_body': ""the cyclomatic complexity here is a bit high, isn't it?\r\nsorry, but can you just give me a brief explanation what this function ``next_version`` is doing? to be sure that is what I think it is"", 'comment_created': datetime.datetime(2020, 6, 16, 19, 7, 47, tzinfo=datetime.timezone.utc), 'commenter': 'marcelotrevisani', 'type': 'User'}, {'comment_id': 441086789, 'comment_body': 'IDK. Actually it was already implemented I just moved it. If I can guess, it should formulate the version to pass forward.But to be honest even thought I know that it kind of stadarize the versions formats it also something pretty complex to know if it only that.', 'comment_created': datetime.datetime(2020, 6, 16, 19, 19, 41, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 441091119, 'comment_body': 'I see, that is fine then, but I think we should add a ``TODO`` here\r\nbecause we can parse it using the ``packaging`` or using ``distutils``\r\nand it would be nice to add tests for it @CJ-Wright ', 'comment_created': datetime.datetime(2020, 6, 16, 19, 27, 52, tzinfo=datetime.timezone.utc), 'commenter': 'marcelotrevisani', 'type': 'User'}, {'comment_id': 441093919, 'comment_body': 'This function has tests: https://github.com/regro/cf-scripts/blob/master/tests/test_upstream_versions.py\r\n\r\nWe are not purely parsing a version here, plus not all versions we parse are semvers. ', 'comment_created': datetime.datetime(2020, 6, 16, 19, 33, 23, tzinfo=datetime.timezone.utc), 'commenter': 'beckermr', 'type': 'User'}, {'comment_id': 441094190, 'comment_body': 'See the code here: https://github.com/regro/cf-scripts/blob/master/tests/test_upstream_versions.py#L170', 'comment_created': datetime.datetime(2020, 6, 16, 19, 33, 56, tzinfo=datetime.timezone.utc), 'commenter': 'beckermr', 'type': 'User'}, {'comment_id': 441096288, 'comment_body': 'Thanks for the reply Matthew, I was wondering if it had a test, good to know this .', 'comment_created': datetime.datetime(2020, 6, 16, 19, 38, 1, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 441148393, 'comment_body': 'Very nice that we have tests for it! :)\r\nbut I think we can try to simplify it, let me try some code', 'comment_created': datetime.datetime(2020, 6, 16, 21, 19, 23, tzinfo=datetime.timezone.utc), 'commenter': 'marcelotrevisani', 'type': 'User'}, {'comment_id': 441148885, 'comment_body': 'I tried to refactor that and it resulted in:\r\n```suggestion\r\n    all_versions = re.findall(r""([a-z0-9]+)"", ver, re.IGNORECASE)\r\n    separators = re.findall(r""([\\-\\_\\.])"", ver)\r\n    re_split_num = re.compile(r""^(\\d+)(.*)"")\r\n\r\n    def join_version(list1, list2):\r\n        result = """"\r\n        for v in chain.from_iterable(zip_longest(list1, list2)):\r\n            if v is None:\r\n                continue\r\n            result += str(v)\r\n        return result\r\n\r\n    for _id, version_number in enumerate(reversed(all_versions), 1):\r\n        if version_number.isdecimal():\r\n            all_versions[-_id] = int(version_number) + 1\r\n            yield join_version(all_versions, separators)\r\n            all_versions[-_id] = ""0""\r\n        else:\r\n            split_num = re_split_num.search(version_number)\r\n            if not split_num:\r\n                continue\r\n            num_ver, rest_ver = split_num.groups()\r\n            all_versions[-_id] = f""{int(num_ver) + 1}{rest_ver}""\r\n            yield join_version(all_versions, separators)\r\n            all_versions[-_id] = f""0{rest_ver}""\r\n```', 'comment_created': datetime.datetime(2020, 6, 16, 21, 20, 24, tzinfo=datetime.timezone.utc), 'commenter': 'marcelotrevisani', 'type': 'User'}, {'comment_id': 441155277, 'comment_body': 'Nothing here is simpler. This version obscures what was clear code phrased in terms of loops and simple string operations into calls into more complicated parts of the python API (the `re` module, `chain_from_iterable`, `zip_longest`). \r\n\r\nFor newcomers to python, the previous version uses the control structures and API elements they know. The goal is to lower the bar to entry so that more ppl can contribute. This is far more important than saving a few lines of code.', 'comment_created': datetime.datetime(2020, 6, 16, 21, 34, 5, tzinfo=datetime.timezone.utc), 'commenter': 'beckermr', 'type': 'User'}, {'comment_id': 441157061, 'comment_body': '```suggestion\r\n    all_versions = re.split(r""([\\-\\_\\.]+)"", ver)\r\n    re_split_num = re.compile(r""^(\\d+)(.*)"")\r\n\r\n    for pos, version_number in enumerate(reversed(all_versions), 1):\r\n        if version_number.isdecimal():\r\n            all_versions[-pos] = int(version_number) + 1\r\n            yield all_versions\r\n            all_versions[-pos] = ""0""\r\n        else:\r\n            split_num = re_split_num.search(version_number)\r\n            if not split_num:\r\n                continue\r\n            num_ver, rest_ver = split_num.groups()\r\n            all_versions[-pos] = f""{int(num_ver) + 1}{rest_ver}""\r\n            yield all_versions\r\n            all_versions[-pos] = f""0{rest_ver}""\r\n```', 'comment_created': datetime.datetime(2020, 6, 16, 21, 38, 11, tzinfo=datetime.timezone.utc), 'commenter': 'marcelotrevisani', 'type': 'User'}, {'comment_id': 441159641, 'comment_body': 'That I will respectfully disagree with you. Those regex which I used are quite simple, anyone with the very basic of basic of regex would know what is happening there, it is nothing fancy\r\nThere are far more regex expressions in ``cf-scripts`` more complex than that\r\nI think it is far more difficult to read 4 nested loops with conditions and all of that, looking for clean code those are considered code smells because they are difficult to read\r\nI even tried to let it more simple\r\nor I can even encapsulate any part in a function and can easily give a better name to it\r\n\r\nIt also eliminates a couple of functions which will not be necessary, regex does just one good job, which is parsing strings, something which we are trying to do here', 'comment_created': datetime.datetime(2020, 6, 16, 21, 44, 4, tzinfo=datetime.timezone.utc), 'commenter': 'marcelotrevisani', 'type': 'User'}, {'comment_id': 441174203, 'comment_body': 'Ok shrug. Commit what you want. ', 'comment_created': datetime.datetime(2020, 6, 16, 22, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'beckermr', 'type': 'User'}, {'comment_id': 441205215, 'comment_body': '@marcelotrevisani the bot code tends to be a bit finicky, mostly because of lack of test coverage in general (if not in this particular case). Would you be interested in opening an independent PR with the refactors you deem necessary? It would be good to be able to look at them without a large feature being implemented in the same PR.', 'comment_created': datetime.datetime(2020, 6, 16, 23, 56, 37, tzinfo=datetime.timezone.utc), 'commenter': 'CJ-Wright', 'type': 'User'}, {'comment_id': 441279869, 'comment_body': 'Usually I would say ""Sure, I would be happy to do it"". But receiving a message such as ""**Ok shrug. Commit what you want**"" I would prefer to avoid any stress from my side, life is already complicated to stress because of opensource projects.\r\n\r\nSo, I am removing myself from any discussion on ``regro`` in general.\r\n\r\nCheers,', 'comment_created': datetime.datetime(2020, 6, 17, 4, 55, 12, tzinfo=datetime.timezone.utc), 'commenter': 'marcelotrevisani', 'type': 'User'}, {'comment_id': 441481240, 'comment_body': 'My apologies for the tone in that message. I meant only to say that I didn’t want to debate this point anymore. We’d ofc love to have your help here!', 'comment_created': datetime.datetime(2020, 6, 17, 11, 40, 25, tzinfo=datetime.timezone.utc), 'commenter': 'beckermr', 'type': 'User'}, {'comment_id': 441590180, 'comment_body': ""Folks. There are two schools of thought here and both are valid. I'm a scientist who learned to code (:cough: Fortran :cough:), and I can appreciate what @beckermr said above. It is close to my coding in general. With that said, @marcelotrevisani is a Computer Scientist by training and has a complete different mind when it comes to coding.\r\n\r\nI have to say that, while I resist the change, most of the time I do not regret it. Marcello's code is cleaner, easier to test, maintain, and most of the time, correct on the first try.\r\n\r\nBTW, I really dislike regex, mostly b/c I don't understand them and it feels like being left out on a very funny joke. However, that can be easily corrected with comments. Different from jokes, that lose their meaning when explained, comments explaining regex are a way to include people into a new world."", 'comment_created': datetime.datetime(2020, 6, 17, 14, 30, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ocefpaf', 'type': 'User'}, {'comment_id': 441609435, 'comment_body': 'My experience with regex is much the same @ocefpaf and I also dislike them. I don’t find they are well known by new developers and they hide lots of logic in parsing into implicit little bits related to single character changes. \r\n\r\nAgain as I said above, please do code with us Marcello! ', 'comment_created': datetime.datetime(2020, 6, 17, 14, 55, 19, tzinfo=datetime.timezone.utc), 'commenter': 'beckermr', 'type': 'User'}]","[{'commit_sha': 'fe15617e4b69e646f25f155af728809ce54bebab', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e97002f1f771da97317dc015108a7909280fafd', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '659e17d12c1a846102426f086eedce71c7bc9c2c', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fab2f148814996490904f6327b5bf4964bf925d9', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5df5ee5f31591bac16e0f839f3c1d0ee238ef6c', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '641b2b9588e0bb37678fd6936addfbaa75fc4f2e', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea484c7fad5c6c91e5ef526ed02f7ccdd5c1ed90', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9eb185f223ad6fb17da0049dff799d60b682105', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '541a4d2a07c219f00be2d73369fc62f1e23219e0', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8892b400dd540b4ff3e174a8fdfad7b69f0eb89b', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}]",Vinicius D. Cerutti,51954708,,User,,40,,13,24
433918085,populate versions folder,"As an extension of [1027], this is the first try to add the `new_update_upstream_versions` to circle workers and integrate with the bot environment.

[1027]: https://github.com/regro/cf-scripts/pull/1027",True,61,https://api.github.com/repos/regro/circle_worker/pulls/61,https://github.com/regro/circle_worker/pull/61,closed,55,1,1,3,9,4,0,0,[],2020-06-12 23:10:33+00:00,2020-06-27 13:57:56+00:00,1262843.0,"14 days, 14:47:23","[{'comment_id': 441046304, 'comment_body': 'I think it would be nice to show the whole information regarding the conda configuration\r\n```suggestion\r\n            conda info --all\r\n```\r\nWhat do you think @ocefpaf  ?', 'comment_created': datetime.datetime(2020, 6, 16, 18, 10, 55, tzinfo=datetime.timezone.utc), 'commenter': 'marcelotrevisani', 'type': 'User'}, {'comment_id': 441052829, 'comment_body': 'I think it is not necessary to change, but I think you can use\r\n``working_directory: ~/cf-graph``\r\n```suggestion\r\n          working_directory: ~/cf-graph\r\n          command: |\r\n```', 'comment_created': datetime.datetime(2020, 6, 16, 18, 20, 17, tzinfo=datetime.timezone.utc), 'commenter': 'marcelotrevisani', 'type': 'User'}, {'comment_id': 441058032, 'comment_body': ""It's a good idea but i need the working directory as `~/regro` to be able to go to `cf-graph-county fair` and run the update upstream there right ?"", 'comment_created': datetime.datetime(2020, 6, 16, 18, 27, 41, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 444378365, 'comment_body': 'Would this be possible to put into an independent PR?', 'comment_created': datetime.datetime(2020, 6, 23, 17, 9, 20, tzinfo=datetime.timezone.utc), 'commenter': 'CJ-Wright', 'type': 'User'}]","[{'commit_sha': '620030b3d7d9558e19351d1bfed777e533f8c481', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '017344494e9e01c75efe312a6ba8323b37ff9fd3', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bac01215d7ab565d30d513eab18499376c6f2664', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}]",Vinicius D. Cerutti,51954708,,User,,40,,13,24
441524481,Attempt to Update upstream version process pool ,"Due to the expensive time consuming usage of the actual `update upstream version` I've inserted the `pool` mode, as also, implements the function to choose the mode accordingly to the current `CONDA_FORGE_TICK_DEBUG` status.
See as references the issue [#842 ] and PR's [#1048 , #1043 ].",True,1049,https://api.github.com/repos/regro/cf-scripts/pulls/1049,https://github.com/regro/cf-scripts/pull/1049,closed,97,24,1,8,8,1,0,0,[],2020-06-29 16:29:59+00:00,2020-06-30 17:23:07+00:00,89588.0,"1 day, 0:53:08","[{'comment_id': 449676415, 'comment_body': 'Change the `max_workers` to 10 for lesser the burden of CircleCI\r\n```suggestion\r\n    with executor(kind=""dask"", max_workers=10) as pool:\r\n```', 'comment_created': datetime.datetime(2020, 7, 3, 18, 20, 14, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}]","[{'commit_sha': '5602467b803bd44fb6e6d47fc5f32278cf7a7f71', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a929aa7b18ca3b89f6bb9851d0628b70046e96f', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '822a0143ceae3b58a3e3fd0e9ca25f7957e5463c', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3f32eb3783a2471f009a4964532d8f01c4ec017', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69b8874e2cca04ca0630c2710c903b961775401a', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1fed388d54bc4a24e7eec259ee136a126dc021f', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f524a95fea0b90adc5469a494bd746749a76aac3', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3236b7bf23b639e13ef4c463201d3b89ab15cc6f', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}]",Vinicius D. Cerutti,51954708,,User,,40,,13,24
442164191,make_graph update versions from .json,Continuing the work from [separate version updates](https://github.com/regro/cf-scripts/issues/842) and [issue](https://github.com/regro/cf-scripts/pull/1049).,True,1050,https://api.github.com/repos/regro/cf-scripts/pulls/1050,https://github.com/regro/cf-scripts/pull/1050,closed,26,4,2,15,15,22,0,0,[],2020-06-30 16:56:23+00:00,2020-07-06 20:21:35+00:00,530712.0,"6 days, 3:25:12","[{'comment_id': 447849590, 'comment_body': 'why are you removing `.json`?', 'comment_created': datetime.datetime(2020, 6, 30, 17, 15, 27, tzinfo=datetime.timezone.utc), 'commenter': 'CJ-Wright', 'type': 'User'}, {'comment_id': 447857695, 'comment_body': '`attrs.update(**version_data))`', 'comment_created': datetime.datetime(2020, 6, 30, 17, 27, 52, tzinfo=datetime.timezone.utc), 'commenter': 'CJ-Wright', 'type': 'User'}, {'comment_id': 447858599, 'comment_body': ""If that doesn't work please add an update method to `LazyJSON`"", 'comment_created': datetime.datetime(2020, 6, 30, 17, 28, 53, tzinfo=datetime.timezone.utc), 'commenter': 'CJ-Wright', 'type': 'User'}, {'comment_id': 447858730, 'comment_body': 'To compute the node name in the graph I think', 'comment_created': datetime.datetime(2020, 6, 30, 17, 29, 5, tzinfo=datetime.timezone.utc), 'commenter': 'beckermr', 'type': 'User'}, {'comment_id': 447916396, 'comment_body': 'To get the node name to update the attrs information regarding that node', 'comment_created': datetime.datetime(2020, 6, 30, 19, 6, 31, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 447916730, 'comment_body': 'I will try that, but I will have to think a way to test that though', 'comment_created': datetime.datetime(2020, 6, 30, 19, 7, 10, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 447917909, 'comment_body': 'Should I add the bad feedstocks too for `update_versions` ? to solve the problems with the outdated `.json` files ?\r\n', 'comment_created': datetime.datetime(2020, 6, 30, 19, 9, 20, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 447918179, 'comment_body': 'Or let it run for now and see that after ?', 'comment_created': datetime.datetime(2020, 6, 30, 19, 9, 49, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 447970217, 'comment_body': ""I was looking into the `LazyJSON` config at `.utils` and there isn't any `.update` method there, so would this be enough ?\r\n```python\r\n    def __update__(self, data: dict) -> None:\r\n        self._load()\r\n        for key in data.items():\r\n            self.data[f'{key}'] = data[f'{key}']\r\n```\r\nit could be something like this too (but it may alter the structure of the object)\r\n```python\r\n    def __update__(self, data: dict) -> None:\r\n        self.__dict__.update(data)\r\n```"", 'comment_created': datetime.datetime(2020, 6, 30, 20, 49, 41, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 448039852, 'comment_body': ""I don't think this needs to be `__update__` it should be `update`"", 'comment_created': datetime.datetime(2020, 6, 30, 23, 47, 48, tzinfo=datetime.timezone.utc), 'commenter': 'CJ-Wright', 'type': 'User'}, {'comment_id': 448040212, 'comment_body': ""I would use the object's `setitem`: `self[key] = data[key]` that way you don't need to do the load and dump"", 'comment_created': datetime.datetime(2020, 6, 30, 23, 49, 5, tzinfo=datetime.timezone.utc), 'commenter': 'CJ-Wright', 'type': 'User'}, {'comment_id': 448042848, 'comment_body': 'I will change that thanks :+1:', 'comment_created': datetime.datetime(2020, 6, 30, 23, 58, 17, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 448042971, 'comment_body': 'this way ? \r\n```python\r\n        for key in data.items():\r\n            self.__setitem__(key, data[f""{key}""])\r\n```', 'comment_created': datetime.datetime(2020, 6, 30, 23, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 448636679, 'comment_body': ""I would just use the `[]` syntax directly. Also you don't need an f-string for the keys, they are already strings."", 'comment_created': datetime.datetime(2020, 7, 1, 21, 55, 15, tzinfo=datetime.timezone.utc), 'commenter': 'CJ-Wright', 'type': 'User'}, {'comment_id': 448639477, 'comment_body': ""> I would just use the `[]` syntax directly. Also you don't need an f-string for the keys, they are already strings.\r\n\r\nOh thanks, I was not sure about the syntax usage."", 'comment_created': datetime.datetime(2020, 7, 1, 22, 2, 48, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 449023393, 'comment_body': 'why did you rename this?', 'comment_created': datetime.datetime(2020, 7, 2, 14, 0, 22, tzinfo=datetime.timezone.utc), 'commenter': 'beckermr', 'type': 'User'}, {'comment_id': 449025748, 'comment_body': 'It was an idea from CJ: ""I don\'t think this needs to be `__update__` it should be `update`""', 'comment_created': datetime.datetime(2020, 7, 2, 14, 3, 57, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 449028994, 'comment_body': 'you have an extra underscore at the front.', 'comment_created': datetime.datetime(2020, 7, 2, 14, 8, 36, tzinfo=datetime.timezone.utc), 'commenter': 'beckermr', 'type': 'User'}, {'comment_id': 449030245, 'comment_body': 'Yup, I saw with your comment thanks 👍 ', 'comment_created': datetime.datetime(2020, 7, 2, 14, 10, 29, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 449059317, 'comment_body': ""Uhm @beckermr I am getting a problem with this statement `update(self, data: dict)` it's saying that it doesn't match the method base definition of a `MutableMapping` wich should be something as `update(self, data: dict, **kwargs)`. Do you know what can I do to solve this ?"", 'comment_created': datetime.datetime(2020, 7, 2, 14, 52, 6, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 449653035, 'comment_body': 'You could structure this as:\r\n```python\r\ndef update(self, data, **kwargs):\r\n    self._load()\r\n    self._data.update(data, **kwargs)\r\n    self._dump()\r\n```', 'comment_created': datetime.datetime(2020, 7, 3, 16, 28, 44, tzinfo=datetime.timezone.utc), 'commenter': 'CJ-Wright', 'type': 'User'}, {'comment_id': 449658923, 'comment_body': 'Ok, Thank you very much 👍 ', 'comment_created': datetime.datetime(2020, 7, 3, 16, 52, 31, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}]","[{'commit_sha': '624b96637eea71ca0574d77e345f768c2eaeef66', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a376c2c2d8c46eab0ba756e4c3923ba54cfd2275', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6638edb221209eb6f8d8582f2d28da4553275fbf', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb9b23387be10b580cb6c312d777b798fc94c061', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b607f24c10eec77c6ac9ca772e758f958d0dd14', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92ca7d53d2a5ece900538059bc80e000d3a2c9d3', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26ddc15533e8ea2d2230e33473e419fd9b1bf458', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69e2046de39b0cdb911812a4a97ba889cd81709f', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3aeed2039cf4ce3e6f0b08323fa13fbdf4d67f6', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b53b3c3f76d77306da3e17647001ac2db0ff96d', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cd393074e667c17d62f094a1d4d2e3a4706a188', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8908fca60f68f4429a23377f6ce9b1f1d6208e37', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe03161640f67dfb55e42ce5ee6aebe85da820e9', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a2907e68aa1366a4566ba70904b852d3c2831e7', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '613a36a234b1ff15426b4a540252e4a0e9fa8f82', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}]",Vinicius D. Cerutti,51954708,,User,,40,,13,24
454804073,run upstream update if bad is from upstream update,"@beckermr @viniciusdc

I think this fixes the issues that a few maintainers have experienced with missing bot updates

closes https://github.com/regro/cf-scripts/issues/1072 (I think)",True,1073,https://api.github.com/repos/regro/cf-scripts/pulls/1073,https://github.com/regro/cf-scripts/pull/1073,closed,6,2,1,1,3,0,0,0,[],2020-07-21 23:53:38+00:00,2020-07-22 00:04:42+00:00,664.0,0:11:04,[],"[{'commit_sha': '9bb2f558a03cdcabeaee0439cb52c4836b264cdd', 'committer_username': 'CJ-Wright', 'committer_name': ""Christopher J. 'CJ' Wright"", 'committer_email': None, 'commit_date': datetime.datetime(2014, 2, 20, 18, 38, 9, tzinfo=datetime.timezone.utc)}]",Christopher J. 'CJ' Wright,6740689,,User,,291,,59,83
455819859,Replace update versions,Replace `update_upstream_versions` and some changes with `test_update_versions` (now with the changes proposed by @CJ-Wright  #1073 ),True,1075,https://api.github.com/repos/regro/cf-scripts/pulls/1075,https://github.com/regro/cf-scripts/pull/1075,closed,85,720,4,6,20,6,0,0,[],2020-07-23 16:16:48+00:00,2020-07-28 15:40:37+00:00,429829.0,"4 days, 23:23:49","[{'comment_id': 460042313, 'comment_body': '```suggestion\r\n            if ""Upstream"" not in attrs.get(""bad"", []) or attrs.get(\r\n```', 'comment_created': datetime.datetime(2020, 7, 24, 13, 11, 4, tzinfo=datetime.timezone.utc), 'commenter': 'CJ-Wright', 'type': 'User'}, {'comment_id': 460153027, 'comment_body': 'Thanks CJ,I did not know that the `.get()` method could be used this way. Should I also add this modification to the other instance too ?', 'comment_created': datetime.datetime(2020, 7, 24, 16, 15, 36, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 461662441, 'comment_body': ""Why was this removed? Don't we still need it in the CLI?"", 'comment_created': datetime.datetime(2020, 7, 28, 15, 14, 47, tzinfo=datetime.timezone.utc), 'commenter': 'CJ-Wright', 'type': 'User'}, {'comment_id': 461663010, 'comment_body': 'We will replace the current one with the new, so this process is redundant now (to be exactly there is none `new_update_versions` anymore)', 'comment_created': datetime.datetime(2020, 7, 28, 15, 15, 29, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 461664635, 'comment_body': 'I think the ideia is to remove `update_versions` for the `make_graph` job, and them update the `update version` job at Circle using the `update_versions` instead\r\n', 'comment_created': datetime.datetime(2020, 7, 28, 15, 17, 51, tzinfo=datetime.timezone.utc), 'commenter': 'viniciusdc', 'type': 'User'}, {'comment_id': 461665305, 'comment_body': 'yup.', 'comment_created': datetime.datetime(2020, 7, 28, 15, 18, 47, tzinfo=datetime.timezone.utc), 'commenter': 'beckermr', 'type': 'User'}]","[{'commit_sha': '9b49f26c48c99213c0cfe43a03c8673fff945b97', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a422b4c0522dafa7a07380fec4829d7f69dc1c8', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '764ef42aab1d5e28c93f1b4174329ffc50689202', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75e7c97c9a19add17a142c56ae9de0486a5a5eec', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dd0497d403c25fa87c08f21284d37e82156f4ac', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd58405b89fb23d29c230066419a09e8172fce344', 'committer_username': 'beckermr', 'committer_name': 'Matthew R. Becker', 'committer_email': None, 'commit_date': datetime.datetime(2013, 8, 23, 16, 59, 15, tzinfo=datetime.timezone.utc)}]",Vinicius D. Cerutti,51954708,,User,,40,,13,24
466369954,only new versions,"This updates the version number in the graph from the other bot process if and only if the new version number is greater than the existing version number. This is helpful for version numbers that tend to wander (eg. we don't always get the latest version from the server). This would also help cut down on some of the thrash associated with flaky servers giving us non existent version numbers while still letting us issue PRs against the version numbers that are ahead of master.

@regro/auto-tick ",True,1099,https://api.github.com/repos/regro/cf-scripts/pulls/1099,https://github.com/regro/cf-scripts/pull/1099,closed,10,1,1,3,6,0,0,0,[],2020-08-11 21:41:23+00:00,2020-09-02 12:19:56+00:00,1867113.0,"21 days, 14:38:33",[],"[{'commit_sha': '28781d388b4e7e3c431143a23d68c3a905790bc4', 'committer_username': 'CJ-Wright', 'committer_name': ""Christopher J. 'CJ' Wright"", 'committer_email': None, 'commit_date': datetime.datetime(2014, 2, 20, 18, 38, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b7fcc2989880b3e755c40487f2f3cef91d34454', 'committer_username': 'CJ-Wright', 'committer_name': ""Christopher J. 'CJ' Wright"", 'committer_email': None, 'commit_date': datetime.datetime(2014, 2, 20, 18, 38, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfc525e161d43fd5d38f427c12b174e0ccd4cf23', 'committer_username': 'CJ-Wright', 'committer_name': ""Christopher J. 'CJ' Wright"", 'committer_email': None, 'commit_date': datetime.datetime(2014, 2, 20, 18, 38, 9, tzinfo=datetime.timezone.utc)}]",Christopher J. 'CJ' Wright,6740689,,User,,291,,59,83
471248371,Profiler decorator,"Implemented using a context manager custom class to enable and disable the profiler. I've tested it locally with a test script not related to the bot, and it worked (checked with python 3.7)",True,1131,https://api.github.com/repos/regro/cf-scripts/pulls/1131,https://github.com/regro/cf-scripts/pull/1131,closed,52,0,4,5,3,0,0,1,[],2020-08-20 21:21:33+00:00,2020-09-02 00:07:45+00:00,1046772.0,"12 days, 2:46:12",[],"[{'commit_sha': 'b3893aae21f2d22fcd775fd89482fa1851a58d8a', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8533cdcdaecbe38fb3c721748ee2663c0f031656', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0803fb63ecd31108ae5721202e9bdbd2828a67e', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73b81d892eaafafae82da330ed6ad13bf0a1781c', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71f4122e0d6ae1bde516b24daf4317b2c0e2fdbb', 'committer_username': 'viniciusdc', 'committer_name': 'Vinicius D. Cerutti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 18, 11, 15, tzinfo=datetime.timezone.utc)}]",Vinicius D. Cerutti,51954708,,User,,40,,13,24

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
122790929,cf-scripts,regro/cf-scripts,Python,72,47,16,60,5894,291,22,18,"[{'id': 491262254, 'number': 1171, 'closed': datetime.datetime(2023, 12, 21, 12, 38, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 23, 0, 25, 26, tzinfo=datetime.timezone.utc), 'time_taken': 102341563.0, 'time_delta': '1184 days, 12:12:43', 'additions': 22, 'deletions': 0, 'state': 'closed'}, {'id': 487295006, 'number': 1159, 'closed': datetime.datetime(2020, 9, 23, 1, 40, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 15, 13, 25, 25, tzinfo=datetime.timezone.utc), 'time_taken': 648889.0, 'time_delta': '7 days, 12:14:49', 'additions': 27, 'deletions': 3, 'state': 'closed'}, {'id': 482165697, 'number': 1151, 'closed': datetime.datetime(2023, 12, 21, 12, 30, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 8, 16, 34, 26, tzinfo=datetime.timezone.utc), 'time_taken': 103578986.0, 'time_delta': '1198 days, 19:56:26', 'additions': 28, 'deletions': 23, 'state': 'closed'}, {'id': 477248271, 'number': 1144, 'closed': datetime.datetime(2023, 12, 21, 12, 38, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 1, 18, 10, 23, tzinfo=datetime.timezone.utc), 'time_taken': 104178489.0, 'time_delta': '1205 days, 18:28:09', 'additions': 10, 'deletions': 15, 'state': 'closed'}, {'id': 474238606, 'number': 1138, 'closed': datetime.datetime(2020, 8, 26, 22, 45, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 26, 22, 34, 51, tzinfo=datetime.timezone.utc), 'time_taken': 632.0, 'time_delta': '0:10:32', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 474079936, 'number': 1137, 'closed': datetime.datetime(2020, 8, 26, 22, 0, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 26, 18, 30, 42, tzinfo=datetime.timezone.utc), 'time_taken': 12578.0, 'time_delta': '3:29:38', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 471248371, 'number': 1131, 'closed': datetime.datetime(2020, 9, 2, 0, 7, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 20, 21, 21, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1046772.0, 'time_delta': '12 days, 2:46:12', 'additions': 52, 'deletions': 0, 'state': 'closed'}, {'id': 468089860, 'number': 1111, 'closed': datetime.datetime(2020, 8, 17, 19, 44, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 14, 17, 6, 29, tzinfo=datetime.timezone.utc), 'time_taken': 268688.0, 'time_delta': '3 days, 2:38:08', 'additions': 32, 'deletions': 15, 'state': 'closed'}, {'id': 468076303, 'number': 1110, 'closed': datetime.datetime(2020, 8, 18, 13, 6, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 14, 16, 33, tzinfo=datetime.timezone.utc), 'time_taken': 333191.0, 'time_delta': '3 days, 20:33:11', 'additions': 40, 'deletions': 42, 'state': 'closed'}, {'id': 466114750, 'number': 1097, 'closed': datetime.datetime(2020, 8, 11, 22, 46, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 11, 13, 45, 5, tzinfo=datetime.timezone.utc), 'time_taken': 32456.0, 'time_delta': '9:00:56', 'additions': 18, 'deletions': 0, 'state': 'closed'}, {'id': 466098748, 'number': 1096, 'closed': datetime.datetime(2023, 12, 21, 12, 36, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 11, 13, 17, 48, tzinfo=datetime.timezone.utc), 'time_taken': 106010303.0, 'time_delta': '1226 days, 23:18:23', 'additions': 9, 'deletions': 21, 'state': 'closed'}, {'id': 455819859, 'number': 1075, 'closed': datetime.datetime(2020, 7, 28, 15, 40, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 23, 16, 16, 48, tzinfo=datetime.timezone.utc), 'time_taken': 429829.0, 'time_delta': '4 days, 23:23:49', 'additions': 85, 'deletions': 720, 'state': 'closed'}, {'id': 453892122, 'number': 1071, 'closed': datetime.datetime(2020, 8, 3, 22, 17, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 20, 22, 21, 8, tzinfo=datetime.timezone.utc), 'time_taken': 1209368.0, 'time_delta': '13 days, 23:56:08', 'additions': 30, 'deletions': 0, 'state': 'closed'}, {'id': 448578633, 'number': 1064, 'closed': datetime.datetime(2020, 7, 23, 16, 1, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 14, 0, 46, 29, tzinfo=datetime.timezone.utc), 'time_taken': 832526.0, 'time_delta': '9 days, 15:15:26', 'additions': 87, 'deletions': 718, 'state': 'closed'}, {'id': 445051226, 'number': 1058, 'closed': datetime.datetime(2020, 7, 7, 0, 22, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 6, 23, 26, 48, tzinfo=datetime.timezone.utc), 'time_taken': 3327.0, 'time_delta': '0:55:27', 'additions': 0, 'deletions': 5, 'state': 'closed'}, {'id': 444954805, 'number': 1056, 'closed': datetime.datetime(2020, 7, 6, 19, 53, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 6, 19, 15, 21, tzinfo=datetime.timezone.utc), 'time_taken': 2318.0, 'time_delta': '0:38:38', 'additions': 52, 'deletions': 53, 'state': 'closed'}, {'id': 444161270, 'number': 1054, 'closed': datetime.datetime(2020, 7, 3, 18, 36, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 3, 18, 34, 15, tzinfo=datetime.timezone.utc), 'time_taken': 142.0, 'time_delta': '0:02:22', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 442164191, 'number': 1050, 'closed': datetime.datetime(2020, 7, 6, 20, 21, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 30, 16, 56, 23, tzinfo=datetime.timezone.utc), 'time_taken': 530712.0, 'time_delta': '6 days, 3:25:12', 'additions': 26, 'deletions': 4, 'state': 'closed'}, {'id': 441524481, 'number': 1049, 'closed': datetime.datetime(2020, 6, 30, 17, 23, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 29, 16, 29, 59, tzinfo=datetime.timezone.utc), 'time_taken': 89588.0, 'time_delta': '1 day, 0:53:08', 'additions': 97, 'deletions': 24, 'state': 'closed'}, {'id': 441042851, 'number': 1048, 'closed': datetime.datetime(2020, 6, 28, 14, 53, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 28, 11, 27, 10, tzinfo=datetime.timezone.utc), 'time_taken': 12381.0, 'time_delta': '3:26:21', 'additions': 29, 'deletions': 33, 'state': 'closed'}, {'id': 438576414, 'number': 1043, 'closed': datetime.datetime(2020, 6, 29, 13, 29, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 23, 13, 36, 5, tzinfo=datetime.timezone.utc), 'time_taken': 518012.0, 'time_delta': '5 days, 23:53:32', 'additions': 125, 'deletions': 54, 'state': 'closed'}, {'id': 426196400, 'number': 1027, 'closed': datetime.datetime(2020, 6, 18, 16, 58, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 1, 20, 26, 23, tzinfo=datetime.timezone.utc), 'time_taken': 1456320.0, 'time_delta': '16 days, 20:32:00', 'additions': 599, 'deletions': 0, 'state': 'closed'}, {'id': 394080185, 'number': 907, 'closed': datetime.datetime(2020, 5, 28, 23, 35, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 26, 10, 25, 12, tzinfo=datetime.timezone.utc), 'time_taken': 5490615.0, 'time_delta': '63 days, 13:10:15', 'additions': 516, 'deletions': 0, 'state': 'closed'}]"
139274807,circle_worker,regro/circle_worker,Python,6,0,5,10,270,3,3,0,"[{'id': 442330291, 'number': 110, 'closed': datetime.datetime(2020, 7, 3, 17, 38, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 30, 22, 30, 10, tzinfo=datetime.timezone.utc), 'time_taken': 241685.0, 'time_delta': '2 days, 19:08:05', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 433918085, 'number': 61, 'closed': datetime.datetime(2020, 6, 27, 13, 57, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 12, 23, 10, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1262843.0, 'time_delta': '14 days, 14:47:23', 'additions': 55, 'deletions': 1, 'state': 'closed'}]"
