pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
988135079,water import development,"![Google-Summer-of-Code-March-1-2017](https://user-images.githubusercontent.com/86368099/189194936-b6488295-2cdc-4f25-9f07-75f8e06bbf99.jpg)

## GSoC 2022 review for Waters Development

### Ion Mobility Data Format Support

All of the commits are in the branch at:  <A HREF = ""https://github.com/Tarush-Singh35/mzmine3/tree/waterdevclean"">Branch</A>

In this project, we added support for the vendor-specific data from Water mass spectrometer to the open-source software Mzmine so that the user can import the raw data directly without prior conversion. We Implemented API using Water SDK Due to different data structures, intermediate structures are created during the import and converted after all metadata has been read. The new import supports data-independent and data-dependent acquisition modes with or without ion mobility resolution.

### Documentation
Maximum Functions are from MassLynxRawInfoReader  & MassLynxRawScanReader that can be found in this documentation:  <A HREF = ""https://drive.google.com/drive/folders/1IoQJeaV8ppce9mIcX117j7gfdsifcot4?usp=sharing"">Docs</A>

### Future Scope
While building a more robust import task for MZmine. I was not able to implement different types of msmsInfo for the precursor. To solve this issue, the data model of MZmine needs to be extended in the future.

### Result

Output:- <A HREF = ""https://docs.google.com/document/d/e/2PACX-1vQShlK_tj-gOyjO-sHmmxdy23YrW-OV7LFqpS_bPlSFDvaX-tToVRLAEENcomZJ2iutFJtU5JTvVbhX/pub""> Result </A>

### Acknowledgments:
I want to thank my mentor, Steffen Heu, for his dedicated guidance and support throughout the project. I have learned much about MZmine 3 ecosystem and coding conventions, Code optimizations, Chemistry, Mass Spectroscopy, JavaFx, and the patch submission process. Also, I would like to thank all the reviewers for their code reviews and helpful comments on my patches. Special thanks to all MZmine3 community members for their advice and for providing a welcoming environment.


GSoC project link: <A HREF = ""https://summerofcode.withgoogle.com/myprojects/details/GDw7Ye9P""> Google Summer of project </A> 
",False,763,https://api.github.com/repos/mzmine/mzmine/pulls/763,https://github.com/mzmine/mzmine/pull/763,open,881,0,10,79,8,102,1,0,[{'name': 'outdated'}],2022-07-06 04:14:29+00:00,,0.0,,"[{'comment_id': 928133936, 'comment_body': 'create the newMZmineFile via MZmineCore.createNewFile here', 'comment_created': datetime.datetime(2022, 7, 23, 15, 14, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 928133992, 'comment_body': 'create the newMZmineFile via MZmineCore.createNewIMSFile here', 'comment_created': datetime.datetime(2022, 7, 23, 15, 15, 14, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 928134157, 'comment_body': 'project.addFile', 'comment_created': datetime.datetime(2022, 7, 23, 15, 16, 45, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 928134460, 'comment_body': 'also add the file to the project', 'comment_created': datetime.datetime(2022, 7, 23, 15, 19, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 928134487, 'comment_body': 'return 1', 'comment_created': datetime.datetime(2022, 7, 23, 15, 19, 58, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 928134504, 'comment_body': 'return 2', 'comment_created': datetime.datetime(2022, 7, 23, 15, 20, 7, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 928135114, 'comment_body': 'update the finishedPercentage during the loading', 'comment_created': datetime.datetime(2022, 7, 23, 15, 26, 37, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 928135553, 'comment_body': 'this is inside the funtioncount loop, it should be outside', 'comment_created': datetime.datetime(2022, 7, 23, 15, 31, 41, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 928135678, 'comment_body': 'create the file in the task, i added comments for that', 'comment_created': datetime.datetime(2022, 7, 23, 15, 32, 45, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 928135712, 'comment_body': 'outside the for loop for now', 'comment_created': datetime.datetime(2022, 7, 23, 15, 33, 5, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 928196491, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 7, 24, 5, 7, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 928196497, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 7, 24, 5, 7, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 928293710, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 7, 24, 18, 7, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 928293830, 'comment_body': 'do i need to add simplescan in addscan function?', 'comment_created': datetime.datetime(2022, 7, 24, 18, 8, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 928293949, 'comment_body': 'done, For frame what needs to be done? how do i add them into single scan? ', 'comment_created': datetime.datetime(2022, 7, 24, 18, 9, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 928294287, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 7, 24, 18, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 928578511, 'comment_body': 'yes', 'comment_created': datetime.datetime(2022, 7, 25, 8, 0, 45, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 928579080, 'comment_body': 'the same way, frame extends scan', 'comment_created': datetime.datetime(2022, 7, 25, 8, 1, 24, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 928590469, 'comment_body': 'add parameter for driftScanCount to store it during the initialization', 'comment_created': datetime.datetime(2022, 7, 25, 8, 14, 35, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 928591156, 'comment_body': 'pass numdriftscan as parameter', 'comment_created': datetime.datetime(2022, 7, 25, 8, 15, 23, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 928591657, 'comment_body': 'remove the ""0"", use the new driftScanCount field', 'comment_created': datetime.datetime(2022, 7, 25, 8, 15, 59, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 928965539, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 7, 25, 14, 40, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 928965825, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 7, 25, 14, 40, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 928978889, 'comment_body': 'driftscan gives different value i think so for each function so how can i move it to outside the for loop', 'comment_created': datetime.datetime(2022, 7, 25, 14, 52, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 929007709, 'comment_body': 'just checked we cannot add IMS file in project do we need to create a functionality over there too?', 'comment_created': datetime.datetime(2022, 7, 25, 15, 18, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 929130646, 'comment_body': 'done, removed for loop i think its not required', 'comment_created': datetime.datetime(2022, 7, 25, 17, 29, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 929133161, 'comment_body': 'i just checked for the files you provided every driftscan value is same for at most 2 function i.e 0 and 1 and the file that has 1 function it is 0 i think so we have to change our IMSfile function, i have made changes accordingly please check', 'comment_created': datetime.datetime(2022, 7, 25, 17, 32, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 929133889, 'comment_body': 'yes will do that ', 'comment_created': datetime.datetime(2022, 7, 25, 17, 33, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 929134920, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 7, 25, 17, 34, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 929135709, 'comment_body': '> line 276 ` int numdriftscan = massLynxRawInfoReader.GetDriftScanCount(3);` i instead of 3\r\n\r\nthis will give error until and unless we have file with 5 function ', 'comment_created': datetime.datetime(2022, 7, 25, 17, 35, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 929537999, 'comment_body': 'It can be required in some cases, just move it outside the for loop', 'comment_created': datetime.datetime(2022, 7, 26, 5, 28, 28, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 929538640, 'comment_body': 'remove  driftScanCount from here', 'comment_created': datetime.datetime(2022, 7, 26, 5, 29, 50, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 929539202, 'comment_body': 'dont forget to add the file to the project', 'comment_created': datetime.datetime(2022, 7, 26, 5, 31, 2, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 929539342, 'comment_body': 'why 3? use i here', 'comment_created': datetime.datetime(2022, 7, 26, 5, 31, 19, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 930118188, 'comment_body': 'done\r\n', 'comment_created': datetime.datetime(2022, 7, 26, 15, 36, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 930120076, 'comment_body': 'yeah sorry was testing something forgot to make changes', 'comment_created': datetime.datetime(2022, 7, 26, 15, 38, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 930191246, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 7, 26, 16, 36, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 930191323, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 7, 26, 16, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 931301075, 'comment_body': 'why is it 3 again?', 'comment_created': datetime.datetime(2022, 7, 27, 17, 2, 22, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 933811130, 'comment_body': 'return 1 if the function number is 0, and 2 if the function number is greater than 0', 'comment_created': datetime.datetime(2022, 7, 30, 14, 12, 54, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 933811142, 'comment_body': 'functionscanvalue is useless', 'comment_created': datetime.datetime(2022, 7, 30, 14, 13, 16, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 933811238, 'comment_body': 'loggers for this. also log the function number, scan number', 'comment_created': datetime.datetime(2022, 7, 30, 14, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 933811247, 'comment_body': 'loggers for this. also log the function number, scan number, drift scan number', 'comment_created': datetime.datetime(2022, 7, 30, 14, 14, 50, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 933811323, 'comment_body': 'remove scanInFunction', 'comment_created': datetime.datetime(2022, 7, 30, 14, 15, 37, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 933811460, 'comment_body': 'having scanInFunction in this object is totally confusing, it does not make sense and was the cause of all problems.... use numscan. this is why we use clear variable naming. ', 'comment_created': datetime.datetime(2022, 7, 30, 14, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 933811781, 'comment_body': ""make this local where it's used."", 'comment_created': datetime.datetime(2022, 7, 30, 14, 20, 8, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 933811817, 'comment_body': 'remove unused comments', 'comment_created': datetime.datetime(2022, 7, 30, 14, 20, 28, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 933811870, 'comment_body': 'why is declaration and assignment split?', 'comment_created': datetime.datetime(2022, 7, 30, 14, 20, 59, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 933811970, 'comment_body': 'update during loading. Give 10 % of progress to create and sort the scans and 90 % for the toFrame/toScan methods.', 'comment_created': datetime.datetime(2022, 7, 30, 14, 22, 14, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 933866826, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 7, 30, 18, 9, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 933869060, 'comment_body': 'okay will remove that', 'comment_created': datetime.datetime(2022, 7, 30, 18, 14, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 933870974, 'comment_body': 'removed', 'comment_created': datetime.datetime(2022, 7, 30, 18, 18, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 933871572, 'comment_body': 'Okay but internal null address is still there', 'comment_created': datetime.datetime(2022, 7, 30, 18, 19, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 933871873, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 7, 30, 18, 20, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 933872615, 'comment_body': 'just for testing values and null', 'comment_created': datetime.datetime(2022, 7, 30, 18, 22, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 933872720, 'comment_body': 'okay will do that', 'comment_created': datetime.datetime(2022, 7, 30, 18, 22, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 934746952, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 1, 17, 12, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 934750345, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 8, 1, 17, 17, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 935525933, 'comment_body': 'remove the system.out when using loggers of course.', 'comment_created': datetime.datetime(2022, 8, 2, 12, 30, 8, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 935526255, 'comment_body': 'same here', 'comment_created': datetime.datetime(2022, 8, 2, 12, 30, 24, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 935527952, 'comment_body': 'in case the frame scan is not initialized, you get an NPE here. -> convert to double in the try/catch, otherwise pass null', 'comment_created': datetime.datetime(2022, 8, 2, 12, 31, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 935529322, 'comment_body': 'What is value? I Mention clear and experessive variable names and this is definitely not it.', 'comment_created': datetime.datetime(2022, 8, 2, 12, 33, 18, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 935529960, 'comment_body': 'renaming i mentioned. everywhere please.', 'comment_created': datetime.datetime(2022, 8, 2, 12, 33, 58, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 938993567, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 8, 5, 16, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 938994179, 'comment_body': 'after Going through Logs i think try catch Method is sustainable we are able to import all 5 files but again some data is not showing in the graph ', 'comment_created': datetime.datetime(2022, 8, 5, 16, 50, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 939005696, 'comment_body': 'Done ', 'comment_created': datetime.datetime(2022, 8, 5, 17, 7, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 939015780, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 8, 5, 17, 21, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 939015955, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 5, 17, 21, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 939022819, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 8, 5, 17, 30, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 944402262, 'comment_body': 'setMass, collisionEnergy to stay with java naming', 'comment_created': datetime.datetime(2022, 8, 12, 12, 12, 26, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 944402699, 'comment_body': 'Definition', 'comment_created': datetime.datetime(2022, 8, 12, 12, 13, 3, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 944403288, 'comment_body': '""#"" + numScan + "" MS"" + msLevel', 'comment_created': datetime.datetime(2022, 8, 12, 12, 13, 53, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 944403612, 'comment_body': '+ "" "" + polarity.asSingleChar() ', 'comment_created': datetime.datetime(2022, 8, 12, 12, 14, 23, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 944411491, 'comment_body': 'remove logging', 'comment_created': datetime.datetime(2022, 8, 12, 12, 25, 10, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 944411588, 'comment_body': 'remove logging', 'comment_created': datetime.datetime(2022, 8, 12, 12, 25, 18, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 944411752, 'comment_body': 'remove logging', 'comment_created': datetime.datetime(2022, 8, 12, 12, 25, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 944411907, 'comment_body': 'remove logging', 'comment_created': datetime.datetime(2022, 8, 12, 12, 25, 43, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 944416754, 'comment_body': 'add a check if the task was cancled and if yes cancel the import.', 'comment_created': datetime.datetime(2022, 8, 12, 12, 32, 11, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 944417409, 'comment_body': 'getFunctionType is called multiple times. extract a local var in this function instead.\r\n\r\nalso it can be TOFD here, too. Same condition as for TOFM in that case', 'comment_created': datetime.datetime(2022, 8, 12, 12, 33, 4, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 944418801, 'comment_body': 'the finished percentage goes higher than 100 %.', 'comment_created': datetime.datetime(2022, 8, 12, 12, 34, 53, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 944418983, 'comment_body': 'add a check if the task was cancled and if yes cancel the import.', 'comment_created': datetime.datetime(2022, 8, 12, 12, 35, 9, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 944699303, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 8, 12, 18, 11, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 944699455, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 8, 12, 18, 12, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 944699565, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 8, 12, 18, 12, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 944700736, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 8, 12, 18, 14, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 944703333, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 8, 12, 18, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 944706128, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 8, 12, 18, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 944706254, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 8, 12, 18, 22, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 944706461, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 8, 12, 18, 22, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 944709392, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 8, 12, 18, 27, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 944747692, 'comment_body': 'causing error', 'comment_created': datetime.datetime(2022, 8, 12, 18, 47, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 944798197, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 8, 12, 19, 57, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 944798335, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 8, 12, 19, 57, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 945083208, 'comment_body': 'Resolved', 'comment_created': datetime.datetime(2022, 8, 13, 5, 6, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 945083486, 'comment_body': 'Done Please Check', 'comment_created': datetime.datetime(2022, 8, 13, 5, 6, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 945180897, 'comment_body': 'move into if clause below', 'comment_created': datetime.datetime(2022, 8, 13, 19, 15, 31, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 945180915, 'comment_body': 'same', 'comment_created': datetime.datetime(2022, 8, 13, 19, 15, 43, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 945181174, 'comment_body': 'this is not what i meant^^.\r\n\r\nyou can use isCanceled() method of the task and check that in the for loop. if it was canceled, return.', 'comment_created': datetime.datetime(2022, 8, 13, 19, 18, 40, tzinfo=datetime.timezone.utc), 'commenter': 'SteffenHeu', 'type': 'User'}, {'comment_id': 945225204, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 8, 14, 4, 1, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 945225237, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 8, 14, 4, 1, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 945225528, 'comment_body': ""yeah but some files load too fast that the user does not have the time to cancel the Task that's why I implemented this check  ex-tea file"", 'comment_created': datetime.datetime(2022, 8, 14, 4, 3, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}, {'comment_id': 945226434, 'comment_body': 'I have fixed the issue.', 'comment_created': datetime.datetime(2022, 8, 14, 4, 17, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Tarush-Singh35', 'type': 'User'}]","[{'commit_sha': '5ad71bed270e0baab0fc439e27251a9186b172c2', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c71df2af0b49af7ff09f855a6623642a2fccb0be', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e70770c7c1cf382a07a75e979f0bce78a0fec498', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2bc98c0d8f8ab0df97a08ac8bff4e233cee8efa1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f11e146539c6e3253f253fb3fbbf937af1325bb2', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3176f6ec24d64303d2b14acf708820446bbc1b86', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd8cdba4d6f94aec6e56e71fd897facd43145dfa7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '24a2e10269049b47a98b5bb5820c2b2e931c058d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'baf42761d56676d74dbd982d43d8079280c037a8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6fc7a7cb4f3544cbafdbc1d41a774bc9130ddb88', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1f03cd70900840f4e1fb309bda377d9ca925e044', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c451429efbfa06a3bcbf834c2fe18e374c3f0f2f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '65b717f3a34fb2536de71e709f7f97a0c07fd447', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1bc4c92cee9bfa73dd24abfc484e4039fa7f1344', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a9ba01afa1e97d31536ae0b8f6ebd60a06b200cf', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46d5d7464abe5258cec5326a1445f10e1d55787e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ca9b402a5c672c71253e37534db52cf55c7ab2b3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5e40dad1a4b622502f2e76f316f332b649adab99', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c2f5bb415615c9316e9084eff4ba96edc613501b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ff4266be5f9b536d35fa33e3428f31871483bc06', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5d921a5589823f0ca803ac9241e276a1d71a00ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b1fe719f9656d3b9b54285319ecfa9ae8fcb0952', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f9a8c5d726a86ea16524a8840c44dfa2fa6d3052', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4293547bea6e0c008df6f45ba7870c1aff6ce5cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a3b39167deea835f15eac1c1ee20a182b23250b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd9512dc8d7dedcf15dee92540d347a36faaa2425', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0602a76747a42b823fdda94b37f95ea2db2ca96b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7e0bca2d442600a6ce1fbe7a3a9e79ee2767b706', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f430c024172890ca887485a586bb222dfe5e1d7a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4d96b18a5b125a2ea35e543a3e3df41ec8d2170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e85941238ab398204d6fd654c2a8595c2e2b20cc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '35c7ce07576fd0108443ede61989beac03c5c19f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b8c975fe359b2335900395efaf4e5d824a894da9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '679948f122ea3fc54a8f95766841e19a98fbb712', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0f753b0aac93fe00cca4a12445d6eeff4dc21c48', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a17424fbc0aee99515eeb1c57ddd629c924a4008', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '71684a7b3d759690e60a85f955297f05a7d80936', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4a5b91498e8c2630e84b21f969366273a0766540', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0f2dcacb8bd77071e4345c64c55bce9127ac119b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ea2f9e67ae74449072e8358dd6a056cf6e5f9cec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6775a384f72ef591eebe4687ef4fa2cc3a905578', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1f70a0119f751c6e8df705c0a37701a2f1cd216a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '89f0736e188dd2c5a641d7f10603b5b7d43a6285', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '77ef7ad8e3d9d08c5f354fe0f54c699f06272825', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '05f4b78a69ac28178d674c2dfef97ae7df555bdd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '680d4bda690c76c96a871e24065e27a930189907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e3cf469f704f0187cb885933412b3a6208bc8370', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e33123fb1b083b76175af7ff3f72ba4b56342b6b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '72ff76b3798c3488f6943a27137d630da0655951', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8a80c8bb751f5a680d2530e4be2855475ae35710', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce376223743868fc12b05d2ad29a86673f7c223a', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1413994071b8f0fa21868a584a839b073f7b5d1', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93764d3ab9f55089289a744a95b2daac335586fb', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a39b6feb9e30c7ed96a4c2dad8cd29d35c88300e', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c2760c810126cf786688ca1b5fdf7a25bb72992', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57da205fd362fc1532c06ea354b1e760218d3980', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb647be1b09c538bdd0416a62f9d96a50d27700f', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9690357e867b8dd4a297ea32a9550cdbcb73baf', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '004ff794d61aac625f461ca0dcd6629f3357cd1e', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0bcd2bfc08131ad21ab8e4fe96cc3258ef0c11b', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4af42c195fc05bfa9d44857480deee2a02ef42c5', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d666f8b0986785cd71e0406cca8e41a9db607a8', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf25308bd60af41dcc4d4a7043e1a64f7c0204e5', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bdbee42cab190a22fc9271c7b84c81b3e75b0ff', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e7b41bf836a0f640f56124d8971c3da7cab9e2a', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9924f6aaf9f0d30cd059a328a2b245a122d75c2', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '323fc281c1048b4bd2a2a3111fd254a80e7f6e30', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80df0f5eb14977b0399d0be46c19499aeb71d871', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cbf69d451242797aa2e45eef1ca2a63460acb68', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc2b5fc055796a398d21bd1ebcf470d6a9e897c1', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '459a3e1bae215ef7dfaf59c3541e86df5825cbca', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d61ce93e8ad247246a629b28e316b00d3fe66ae', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3802c9a09707053c89babe135717d811eadef0f5', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ef218521d8e91049d1ae89b12f5ce7ed99be2c6', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '236222e6fddc3a3f817f46eb9b1884f9225d7089', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eae8240405b52654d9a53cdf6de584ad474876a8', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc834ae7763c186922bec89f23c2220c9d9c9f95', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa71181cff1b108c22b59f7531d7ce389462af5a', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e29d03d70dea9da1af8196d55d2b9658520207c', 'committer_username': 'Tarush-Singh35', 'committer_name': 'Tarush Singh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 6, 23, 15, 20, 34, tzinfo=datetime.timezone.utc)}]",Tarush Singh,86368099,,User,,52,,6,5

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
223040641,mzmine,mzmine/mzmine,Java,122,180,12,83,14880,293,14,37,"[{'id': 988135079, 'number': 763, 'closed': None, 'created': datetime.datetime(2022, 7, 6, 4, 14, 29, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 881, 'deletions': 0, 'state': 'open'}, {'id': 965908979, 'number': 735, 'closed': datetime.datetime(2022, 7, 5, 17, 7, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 13, 15, 48, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1905544.0, 'time_delta': '22 days, 1:19:04', 'additions': 589, 'deletions': 4, 'state': 'closed'}, {'id': 898082764, 'number': 646, 'closed': datetime.datetime(2022, 4, 4, 11, 11, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 2, 15, 21, 27, tzinfo=datetime.timezone.utc), 'time_taken': 157776.0, 'time_delta': '1 day, 19:49:36', 'additions': 104, 'deletions': 13, 'state': 'closed'}, {'id': 882094911, 'number': 604, 'closed': datetime.datetime(2022, 4, 2, 15, 7, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 17, 5, 31, tzinfo=datetime.timezone.utc), 'time_taken': 1416978.0, 'time_delta': '16 days, 9:36:18', 'additions': 1348, 'deletions': 905, 'state': 'closed'}]"
