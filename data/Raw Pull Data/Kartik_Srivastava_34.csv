pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1053277841,Add support for unmuting certain topics within a muted stream.,"This carries forward the work in #21251 and adds support for unmuting certain topics within a muted stream using the UNMUTED topic visibility policy.

Fixes #2517.",False,22923,https://api.github.com/repos/zulip/zulip/pulls/22923,https://github.com/zulip/zulip/pull/22923,closed,224,59,13,5,7,7,2,0,"[{'name': 'size: XL'}, {'name': 'has conflicts'}]",2022-09-12 12:35:15+00:00,2023-03-02 21:36:30+00:00,14806875.0,"171 days, 9:01:15","[{'comment_id': 976851110, 'comment_body': 'I think this comment can be removed now, since do_update_message no longer makes such call.', 'comment_created': datetime.datetime(2022, 9, 21, 18, 18, 10, tzinfo=datetime.timezone.utc), 'commenter': 'akashaviator', 'type': 'User'}, {'comment_id': 981833051, 'comment_body': ""So I'm a bit concerned that we need to rewrite this function. Structurally, if there's an existing row with a given visibility policy, and we're trying to set a different policy, we need to detect that and update the row to the new policy, rather than just trying to make a new row. Usually that's done via a `UserTopic.objects.get_or_create` query or a `select_for_update`.\r\n\r\nI think we'll want to rename this to `do_set_topic_visibility_policy` as part of reworking it to achieve our goals here.\r\n\r\n781107308da36f3a5ab70408a0f95acb3b2a82e4 has some context; I'm not sure why the commit message doesn't have more context, but @alexmv may be able to help (or maybe you can find the PR containing that commit in case it answers that question)."", 'comment_created': datetime.datetime(2022, 9, 28, 0, 25, 45, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 985744699, 'comment_body': ""\r\n\r\n> I think we'll want to rename this to `do_set_topic_visibility_policy` as part of reworking it to achieve our goals here.\r\n\r\n@timabbott  You mean renaming `do_set_unmuted_visibility` (in this PR)  to `do_set_topic_visibility_policy`, and replacing `do_mute_topic` and `do_unmute_topic` with it as well?"", 'comment_created': datetime.datetime(2022, 10, 3, 12, 50, 3, tzinfo=datetime.timezone.utc), 'commenter': 'akashaviator', 'type': 'User'}, {'comment_id': 1088739335, 'comment_body': 'Should this have an [`update_fields`](https://zulip.readthedocs.io/en/latest/contributing/code-style.html#user-profile-save)?', 'comment_created': datetime.datetime(2023, 1, 27, 9, 22, 6, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 1088806015, 'comment_body': 'This adds one more database query in the message send code path. Can we replace this with a single query which returns something like map from `user_id` to `visibility_policy` value for a particular topic?', 'comment_created': datetime.datetime(2023, 1, 27, 10, 31, 39, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 1089652672, 'comment_body': ""Yeah, we should definitely do something like that. Might be cleaner to have the map be the other way (visibility_policy=>set(user_ids)), but I'm not sure as I've not looked at how this is used."", 'comment_created': datetime.datetime(2023, 1, 28, 6, 1, 33, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1089652767, 'comment_body': 'Yes, all saves to update an existing row should use that.', 'comment_created': datetime.datetime(2023, 1, 28, 6, 2, 9, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': 'a3f36dc0f446193bcbf55834581fb9950d09f175', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf0625e24bba34ed06c4dad003596e3defba42ed', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c32dbff880fed5d46ead20eeb7781b913fd89dd', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb0d7c3464a61151cff6091a2b941e2e72f97b80', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5c6932ffebcd5cea181df175fe33b5a04f66e6f', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}]",Kartik Srivastava,12623921,kaushiksri0908@gmail.com,User,,10,,8,24
1064279718,muting: Extract muted_users.js from muting.js.,"This extracts `muted_users.js` in `frontend_tests/node_tests` from `muting.js`, and renames `muting.js` to a more appropriate `user_topics.js` which will contain tests for features related to the new `user_topics` data structure in the future.",True,23024,https://api.github.com/repos/zulip/zulip/pulls/23024,https://github.com/zulip/zulip/pull/23024,closed,106,86,2,3,1,0,1,0,[{'name': 'size: XL'}],2022-09-22 14:46:13+00:00,2022-09-22 15:41:18+00:00,3305.0,0:55:05,[],"[{'commit_sha': 'b35e9dab5141124f1298f6b8aa5f2654cd006e62', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ec3db06a9e946b2c27509f9a86678c5cd928400', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb20419cdb3144506ef275515992c054eb91890b', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}]",Kartik Srivastava,12623921,kaushiksri0908@gmail.com,User,,10,,8,24
864639551,user_topic: Send user_topic event when muting or unmuting topics.,"This adds a new `user_topic` event, which will be sent whenever the relationship between a user-topic pair changes. 

Currently, we send a `muted_topics` event that is an array of tuples while muting/unmuting topics. `muted_topics` represents a stream with its name in every tuple. 
With this change, a `user_topic` event will be sent while muting/unmuting topics as well. Among these two events, the event that is requested by the client is put in its event queue. When a client requests for both of these events, we only send the `user_topic` event.

`user_topic` event represents the stream with a `stream_id` as requested in #21015.

https://chat.zulip.org/#narrow/stream/378-api-design/topic/stream.20IDs.20in.20.60muted_topics.60

Fixes #21015.",True,21251,https://api.github.com/repos/zulip/zulip/pulls/21251,https://github.com/zulip/zulip/pull/21251,closed,324,34,15,3,13,40,2,0,"[{'name': 'size: XL'}, {'name': 'integration review'}]",2022-02-26 12:22:25+00:00,2022-08-05 00:44:00+00:00,13782095.0,"159 days, 12:21:35","[{'comment_id': 825163366, 'comment_body': ""Why do we need `access_stream_by_id` here?  It is an expensive query; is there a security reason for it, or are you just trying to get the stream names to preserve the API here?  \r\n\r\nIf we're going for stream names, the right thing to do is include `stream__name` in what we fetch."", 'comment_created': datetime.datetime(2022, 3, 11, 22, 34, 6, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 841057427, 'comment_body': 'If a client sends in `event_types = None` (meaning, it is requesting for all the `page_params`), then is the intention to send the `muted_topics` events, or not? Because this could be an old client unknowing of `user_topic` event type, we should send it, right?', 'comment_created': datetime.datetime(2022, 4, 2, 10, 4, 48, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 842037156, 'comment_body': '@abhijeetbodas2001 Yes, the intention here is to send both `muted_topics` and `user_topic` when a client sends in `event_types = None`.', 'comment_created': datetime.datetime(2022, 4, 4, 18, 41, 11, tzinfo=datetime.timezone.utc), 'commenter': 'akashaviator', 'type': 'User'}, {'comment_id': 842542759, 'comment_body': ""OK, thanks! So is the following table correct? (where in the first 3 cases, `event_types != None`)\r\n|Client request|What to send|\r\n|-|-|\r\n|Specifically `user_topic`|*Only* `user_topic`|\r\n|Specifically|*Only* `user_topic`|\r\n|Specifically `muted_users`|*Only* `muted_users`|\r\n|None (ie the default `page_params`, with `event_types=None`|Both|\r\n\r\nApologies if this is something that has already been discussed -- I haven't followed the discussion on this closely, but I found the `if` blocks here to be a bit difficult to read/understand (especially since the `want` function itself also checks for `event_types=None`) and so am wondering if some simpler implementation is possible."", 'comment_created': datetime.datetime(2022, 4, 5, 8, 58, 48, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 846749073, 'comment_body': 'In case, when a client requests for both `user_topic` and `muted_topics`, we send only `user_topic` events. In that case, both `want(""user_topic"")` and `want(""muted_topics"")` evaluate to true. So, to decide whether to send the `muted_topics` state, we have to check whether it has been requested alongside all the page_params, or just `user_topic`. So, we check if `event_types==None`. If that\'s true, we send `muted_topics`. If that\'s false, we send `muted_topics`, if the user doesn\'t `want(""user_topic"")`.', 'comment_created': datetime.datetime(2022, 4, 10, 9, 37, 51, tzinfo=datetime.timezone.utc), 'commenter': 'akashaviator', 'type': 'User'}, {'comment_id': 850875332, 'comment_body': 'I think that\'s potentially right, but can you resummarize this in ""#api design"" so we can get confirmation from the mobile developers that this interface makes sense to them?\r\n\r\nWe may end up coming up with a clever way to implement this logic with `want()`.', 'comment_created': datetime.datetime(2022, 4, 14, 22, 56, 20, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 850875974, 'comment_body': ""Replace `0` with the `UserTopic.MUTED` type value that this corresponds to; maybe we need a user `UserTopic.VISIBILITY_POLICY_INHERIT` constant equalling 0 here if we're going with this convention (I have other questions about it)."", 'comment_created': datetime.datetime(2022, 4, 14, 22, 58, 19, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 850877642, 'comment_body': ""Can you define an `UserTopicDict` TypedDict in `zerver/lib/types.py` for the format of the dictionaries this returns? We're trying to get away from any use of `Dict[str, Any]`, and it'll be helpful in this particular place to have a proper type."", 'comment_created': datetime.datetime(2022, 4, 14, 23, 3, 25, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 850878209, 'comment_body': 'This should document the value values, which for now are just:\r\n* 0 => ""None"", used in events to indicate this topic no longer has any user_topic configuration.\r\n* 1 => ""Muted"", used to record muted topics.', 'comment_created': datetime.datetime(2022, 4, 14, 23, 5, 11, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 850878432, 'comment_body': ""Same comment on definitions above, but I guess we don't need to define 0.\r\n\r\n@laurynmm may have additional feedback on the API docs here."", 'comment_created': datetime.datetime(2022, 4, 14, 23, 5, 53, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 851496104, 'comment_body': '@timabbott I am unable to understand `VISIBILITY_POLICY_INHERIT` clearly. Here, `0` is supposed to represent the `default` state, i.e., no special user-topic relationship. Should we name it `VISIBILITY_POLICY_DEFAULT` instead?', 'comment_created': datetime.datetime(2022, 4, 15, 20, 13, tzinfo=datetime.timezone.utc), 'commenter': 'akashaviator', 'type': 'User'}, {'comment_id': 864139314, 'comment_body': 'Yeah, exactly, this is just a code readability thing. A visibility policy of 0 would never be stored in the database, but giving it a readable name for what `0` means in this context would be very helpful for anyone seeing the code to not feel like they need to look up what it means.', 'comment_created': datetime.datetime(2022, 5, 3, 19, 48, 21, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 868169611, 'comment_body': ""You'll need to update / reorder this for recent feature level additions. I believe we're up to 129, so this PR would be 130."", 'comment_created': datetime.datetime(2022, 5, 9, 15, 55, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 868240276, 'comment_body': 'I feel like the information about `muted_topics` could be a separate bullet point, for clarity and since it impacts both the `GET /events` and `POST /register` endpoints return values? Something like ...\r\n\r\n> - `GET /events`, `POST /register`: `muted_topics` array is no longer sent when `user_topic` is specified as an event type.\r\n\r\nAnd this information should be added to the `muted_topics` array descriptions for both endpoints (with a feature level note).', 'comment_created': datetime.datetime(2022, 5, 9, 17, 18, 41, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 868240999, 'comment_body': ""I'd add this bullet point third."", 'comment_created': datetime.datetime(2022, 5, 9, 17, 19, 35, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 868249862, 'comment_body': ""Unlike the `muted_topics` array, this only returns the changed / updated user-topic pair, correct? So maybe ...\r\n\r\n> ... when one of that user's configured user-topic relationships has changed."", 'comment_created': datetime.datetime(2022, 5, 9, 17, 30, 14, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 868254513, 'comment_body': ""Plus, you'll want to add a **Changes** note here with the feature level. The `muted_users` event is nearby in the documentation and can be used as an example."", 'comment_created': datetime.datetime(2022, 5, 9, 17, 36, 10, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 868255608, 'comment_body': 'For formatting here, using an equals sign (=) instead of a dash would be clearer and more consistent with other similar instances in the OpenAPI documentation.\r\n\r\nAlso, instead of putting the quotation marks around the descriptive word, you could just use a period followed by the more detailed explanation.\r\n\r\n> - 0 = None. Used in events to indicate this topic ...', 'comment_created': datetime.datetime(2022, 5, 9, 17, 37, 29, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 868257336, 'comment_body': 'Should this be a dash (-) and not an underscore for consistency? Also, is there no configuration or is it now following the user-stream configuration (e.g. if the stream is muted, the topic would be muted)?', 'comment_created': datetime.datetime(2022, 5, 9, 17, 39, 36, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 868262423, 'comment_body': ""This sentence is not being rendered in the documentation. The `realm_linkifiers` object array also returned by this endpoint would be a good example to follow for formatting this description in the documentation. Again note that you'll want to include a **Changes** note with the feature level here."", 'comment_created': datetime.datetime(2022, 5, 9, 17, 45, 7, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 868263008, 'comment_body': 'Same comment as above about the formatting here.', 'comment_created': datetime.datetime(2022, 5, 9, 17, 45, 44, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 872960833, 'comment_body': 'Right. This should have been ""follows the default user-topic configuration"".', 'comment_created': datetime.datetime(2022, 5, 14, 10, 2, 55, tzinfo=datetime.timezone.utc), 'commenter': 'akashaviator', 'type': 'User'}, {'comment_id': 872975210, 'comment_body': ""I followed the `muted_users` array documentation to write this. Just noticed that a similar sentence there, describing the object, doesn't get rendered as well. Same with `emojiset_choices`. Looks like a bug."", 'comment_created': datetime.datetime(2022, 5, 14, 12, 37, 2, tzinfo=datetime.timezone.utc), 'commenter': 'akashaviator', 'type': 'User'}, {'comment_id': 873924918, 'comment_body': ""For object lists / arrays that are being returned, only the array description is rendered. The short description sentences for the objects mostly helps when reading through the actual OpenAPI documentation file. (I'll make a note to potentially add that to the `realm_linkifiers` object.)\r\n\r\nFor both `muted_users` and `emojiset_choices`, the array description includes information about the objects being returned, so you could do the same here: a short sentence for the object description and a sentence (or two) in the array description describing it and the objects."", 'comment_created': datetime.datetime(2022, 5, 16, 16, 23, 17, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 875130731, 'comment_body': 'Nit: repeated word ""when""', 'comment_created': datetime.datetime(2022, 5, 17, 18, 13, 11, tzinfo=datetime.timezone.utc), 'commenter': 'chrisbobbe', 'type': 'User'}, {'comment_id': 875133185, 'comment_body': 'Hmm, `muted_topics` is not new in Zulip 6.0, right? It\'s just getting a behavior change (that it\'s no longer sent when `user_topic` is specified as an event type).\r\n\r\nAnd, more concretely, does ""specified as an event type"" mean ""present in `fetch_event_types`""? Or does it mean ""present in `fetch_event_types` or `event_types`"", or something else?', 'comment_created': datetime.datetime(2022, 5, 17, 18, 16, 25, tzinfo=datetime.timezone.utc), 'commenter': 'chrisbobbe', 'type': 'User'}, {'comment_id': 875133805, 'comment_body': '(See other comment about ""New in"" and ""specified as an event type"".)', 'comment_created': datetime.datetime(2022, 5, 17, 18, 17, 11, tzinfo=datetime.timezone.utc), 'commenter': 'chrisbobbe', 'type': 'User'}, {'comment_id': 875135186, 'comment_body': '> specified as an event type\r\n\r\nIs this talking about `fetch_event_types`, or `event_types`, or both?', 'comment_created': datetime.datetime(2022, 5, 17, 18, 18, 59, tzinfo=datetime.timezone.utc), 'commenter': 'chrisbobbe', 'type': 'User'}, {'comment_id': 875367071, 'comment_body': 'This description isn\'t quite right -- there isn\'t really such a thing as a ""default user-topic configuration"". Empirically, see where @chrisbobbe was confused upon reading it: https://github.com/zulip/zulip-mobile/pull/5382#discussion_r875163549\r\n\r\nRather what this wants to say is that with this value, this user-topic pair no longer has a configuration of its own; its behavior follows the configuration it inherits from the stream.\r\n\r\nOr more precisely: it has no *visibility policy* of its own, and behaves according to the user\'s visibility policy for the stream. At present the only content that a user-topic configuration has is the visibility policy, so the distinction between ""user-topic configuration"" and ""visibility policy"" currently doesn\'t make a difference in practice, but this API is designed so that there could be another field added here in the future and then it would.\r\n\r\nHere\'s one version:\r\n\r\n```suggestion\r\n                                    - 0 = None. Used in events to indicate that the user no longer has\r\n                                      a visibility policy specific to this topic. The topic will follow\r\n                                      the user\'s policy for the stream (represented by `is_muted`\r\n                                      on the subscription object.)\r\n```\r\n', 'comment_created': datetime.datetime(2022, 5, 18, 0, 14, 42, tzinfo=datetime.timezone.utc), 'commenter': 'gnprice', 'type': 'User'}, {'comment_id': 875468556, 'comment_body': ""@chrisbobbe Yes, both.\r\nFor `POST /register`, `muted_topics` initial data array is not sent when `user_topic` is in `fetch_event_types` or `event_types` (as `event_types` is used to fetch initial state data if `fetch_event_types` is empty).\r\nSimilarly, for `GET /events`, `muted_topics` event (that contains the `muted_topics` array) is not sent when `user_topic` is specified in `event_types` while `POST /register`ing.\r\nThis should have been stated more clearly. I'll update the documentation accordingly for all the places you've pointed out above. Thanks!"", 'comment_created': datetime.datetime(2022, 5, 18, 5, 0, 16, tzinfo=datetime.timezone.utc), 'commenter': 'akashaviator', 'type': 'User'}, {'comment_id': 884041739, 'comment_body': '```suggestion\r\n  when `user_topic` is included in `fetch_event_types`\r\n```\r\n\r\nI don\'t think you mean when `fetch_event_types` is empty -- that\'s not the documented behavior: https://zulip.com/api/register-queue#parameter-fetch_event_types , and it would be an odd behavior to have. The documented behavior is:\r\n> If fetch_event_types is not provided, event_types is used and if event_types is not provided, this parameter defaults to None.\r\n\r\n""Not provided"" means there is no `fetch_event_types` argument in the client\'s request. ""Empty"", given this is a list, would mean there is a `fetch_event_types` argument and its value is `[]`. (If it were a string instead of a list, it\'d mean there is a `fetch_event_types` argument and its value is `\'\'`.)\r\n\r\nBut then also, I think we can avoid trying to duplicate here a description of the fallback/default behavior of the `fetch_event_types` parameter to /api/register-queue. The description at https://zulip.com/api/register-queue#parameter-fetch_event_types already covers that. So ""included in `fetch_event_types`"" here doesn\'t need to be interpreted as literally what the client passed under the name of `fetch_event_types`: rather, it means the logical value of that parameter after defaults are applied.\r\n\r\nFor a similar example where we refer to a parameter name and mean the logical value after defaults, not the literal value provided (or not) by the client, see the mentions of `client_gravatar` on https://zulip.com/api/register-queue . For example:\r\n> avatar_url: string | null\r\n> URL for the user\'s avatar. Will be null if the client_gravatar query parameter was set to True and the user\'s avatar is hosted by the Gravatar provider (i.e. the user has never uploaded an avatar).\r\n\r\nIn fact the default for client_gravatar is true, so this means this will be null if the client didn\'t physically send a client_gravatar argument at all.', 'comment_created': datetime.datetime(2022, 5, 28, 0, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'gnprice', 'type': 'User'}, {'comment_id': 884042530, 'comment_body': '(Similarly at another spot below.)\r\n', 'comment_created': datetime.datetime(2022, 5, 28, 0, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'gnprice', 'type': 'User'}, {'comment_id': 884043154, 'comment_body': '```suggestion\r\n                                    now returned only when `user_topic` is not specified in\r\n                                    `event_types` while registering the event queue.\r\n```\r\n\r\nAlternatively, ""as an event type"" would be acceptable, though less clear than ""in `event_types`"".\r\n\r\nBut ""as an `event_type`"" is wrong. Backticks (or when rendered, a code font) indicate code. So saying ""`event_type`"" means an identifier `event_type`. There is no such identifier in our API. There is `event_types`, but that is a completely different identifier: identifiers don\'t do English grammar, including plurals.\r\n', 'comment_created': datetime.datetime(2022, 5, 28, 0, 50, 32, tzinfo=datetime.timezone.utc), 'commenter': 'gnprice', 'type': 'User'}, {'comment_id': 917177764, 'comment_body': 'Something I love to see in comments is focusing on the ""why"" instead of the ""what"". The what I can already see from reading the code -- checking if `event_types is None` and the true/false cases.\r\n\r\nThe ""why"" would be something like \r\n\r\n> We\'re moving towards using `user_topic` instead of `muted_topics`, so we don\'t send `muted_topics` if `user_topic` was explicitly requested. If `event_types` is None then no events were specifically requested.\r\n\r\nI agree with something Tim said earlier about a refactor of `want` maybe helping with visibility here -- e.g. adding a second optional parameter for `explicitly_wanted` or something.', 'comment_created': datetime.datetime(2022, 7, 8, 22, 56, 19, tzinfo=datetime.timezone.utc), 'commenter': 'evykassirer', 'type': 'User'}, {'comment_id': 917180808, 'comment_body': 'You can do something more pythonic like the line you\'re replacing -- list comprehensions are really popular in Python! Whenever you do something with a for loop to generate a new list of the same size, consider a list comprehension like this :)\r\n\r\n```\r\nreturn [\r\n    (user_topic[""stream__name""], user_topic[""topic_name""], user_topic[""last_updated""])\r\n    for user_topic in user_topics\r\n)\r\n```', 'comment_created': datetime.datetime(2022, 7, 8, 23, 7, 59, tzinfo=datetime.timezone.utc), 'commenter': 'evykassirer', 'type': 'User'}, {'comment_id': 917186310, 'comment_body': ""there's a comment at the top of this function\r\n\r\n```\r\n# Note: If you add any new code to this function, the\r\n# remove_topic_mute call in do_update_message will need to be\r\n# updated for correctness.\r\n```\r\n\r\nAnd I do think you need to add something there. The function in question has a comment that says\r\n\r\n```\r\n                # Otherwise, we move the muted topic record for the user.\r\n                # We call remove_topic_mute rather than do_unmute_topic to\r\n                # avoid sending two events with new muted topics in\r\n                # immediate succession; this is correct only because\r\n                # muted_topics events always send the full set of topics.\r\n```\r\n\r\n`muted_topics` events always send the full set of topics, but that's not the case for `user_topics` events. So I think you do need to send a `user_topic_event` from there. Does that seem right?"", 'comment_created': datetime.datetime(2022, 7, 8, 23, 31, 40, tzinfo=datetime.timezone.utc), 'commenter': 'evykassirer', 'type': 'User'}, {'comment_id': 919354496, 'comment_body': ""@evykassirer Yes, you're right. Thanks!"", 'comment_created': datetime.datetime(2022, 7, 12, 19, 46, 17, tzinfo=datetime.timezone.utc), 'commenter': 'akashaviator', 'type': 'User'}, {'comment_id': 920614288, 'comment_body': ""I've added the code that sends a `user_topic` event after the `remove_topic_mute` call inside `do_update_message`. \r\n\r\nI was looking for tests in `test_events.py` for this piece of code and updating them accordingly but the part inside `test_send_stream_message_events` that checks this scenario( i.e. when a topic, muted by some users, is moved to another stream) doesn't check for `muted_topics` events.\r\nIt checks for events from `do_update_message` calls, but it doesn't check for the `muted_topics` event that gets sent here. I'm unsure if there's a reason behind that. "", 'comment_created': datetime.datetime(2022, 7, 14, 0, 35, 22, tzinfo=datetime.timezone.utc), 'commenter': 'akashaviator', 'type': 'User'}, {'comment_id': 938331471, 'comment_body': 'My guess is that this is an oversight: can you add an extra commit fixing that?', 'comment_created': datetime.datetime(2022, 8, 4, 23, 35, 47, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 938337645, 'comment_body': ""Also, that duplication is really messy; I've added a bonus commit to just refactor to avoid duplicating the remove topic event code."", 'comment_created': datetime.datetime(2022, 8, 4, 23, 51, 52, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '3c3f0011d4c22aa09c510d87f69fb711fb2701f5', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a19cedccd9c77539e911dbed5c3cb7b9351cf2e6', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c207e253edbcbe51bc00fc6caca4509d1e046b7b', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}]",Kartik Srivastava,12623921,kaushiksri0908@gmail.com,User,,10,,8,24
998671533,api: Document /realm/presence API endpoint.,This documents the `/realm/presence` API endpoint and fixes a bug in `render_table` that causes the description of nested objects in the response schema to not get rendered.,False,22509,https://api.github.com/repos/zulip/zulip/pulls/22509,https://github.com/zulip/zulip/pull/22509,closed,94,2,5,2,1,0,1,0,[{'name': 'size: L'}],2022-07-17 15:49:58+00:00,2022-08-04 23:34:36+00:00,1583078.0,"18 days, 7:44:38",[],"[{'commit_sha': '717d88874d39a8d5f8832db3a6208dc2bdee3bd8', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7048a1286f611a568e3ee84d4a5ee9913c9fbbc4', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}]",Kartik Srivastava,12623921,kaushiksri0908@gmail.com,User,,10,,8,24
1012125546,api: Document /users/me/alert_words API endpoint.,"This documents `/users/me/alert_words` API endpoint.

(UPDATED)
Screenshots:
<details><summary>GET /users/me/alert_words </summary>

![11](https://user-images.githubusercontent.com/12623921/184963968-108e70fe-b664-40d3-a559-dcc9b73777fa.png)

![12](https://user-images.githubusercontent.com/12623921/184963977-0660cdc9-673e-4d23-b07a-8a2e92d34954.png)
</details>
<details><summary>POST /users/me/alert_words </summary>

![13](https://user-images.githubusercontent.com/12623921/184964306-069c5e27-9a84-48ed-ba37-947db6911088.png)

![14](https://user-images.githubusercontent.com/12623921/184964321-b78d4f28-bc4d-4a39-94e7-165853080ce0.png)


![15](https://user-images.githubusercontent.com/12623921/184964337-d5b72347-1109-46e1-9780-14a4663181a8.png)

</details>
<details><summary>DELETE /users/me/alert_words </summary>

![16](https://user-images.githubusercontent.com/12623921/184964406-c8f6af34-fbbd-4340-bfc5-daf11f52c66a.png)
![17](https://user-images.githubusercontent.com/12623921/184964427-97a5df8c-34ef-41e1-ac87-791acf81d625.png)

</details>
<details><summary>GET /events </summary>

![18](https://user-images.githubusercontent.com/12623921/184964461-0a7106f7-a96b-4664-ae75-68c736a481bb.png)

</details>",True,22627,https://api.github.com/repos/zulip/zulip/pulls/22627,https://github.com/zulip/zulip/pull/22627,closed,176,2,4,2,2,15,1,0,[{'name': 'size: XL'}],2022-07-29 15:43:40+00:00,2022-08-16 20:39:17+00:00,1572937.0,"18 days, 4:55:37","[{'comment_id': 941445513, 'comment_body': 'The reference link here is broken. You need a dash instead of a space.', 'comment_created': datetime.datetime(2022, 8, 9, 14, 53, 51, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 941456675, 'comment_body': 'Is this an optional parameter? With curl in the dev environment I get this when I don\'t send the `alert_words` parameter ...\r\n\r\n```console\r\n{\r\n   ""code"" : ""REQUEST_VARIABLE_MISSING"",\r\n   ""msg"" : ""Missing \'alert_words\' argument"",\r\n   ""result"" : ""error"",\r\n   ""var_name"" : ""alert_words""\r\n}\r\n\r\n```', 'comment_created': datetime.datetime(2022, 8, 9, 15, 2, 47, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 941461691, 'comment_body': 'Same note as above with the `alert_words` parameter in the POST endpoint, with the same error response for the request variable missing.', 'comment_created': datetime.datetime(2022, 8, 9, 15, 6, 27, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 941464216, 'comment_body': ""Does it make sense to explicitly say that strings that are not in the user's set of alert words are ignored? Or is that implicit / not important since the updated list is sent in the response?"", 'comment_created': datetime.datetime(2022, 8, 9, 15, 8, 35, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 941466697, 'comment_body': 'I\'d update to say, ""Remove words (or phrases) from ..."", since that\'s clearly stated in the help center documentation.', 'comment_created': datetime.datetime(2022, 8, 9, 15, 10, 47, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 941467863, 'comment_body': 'Update to say: ""... an alert word (or phrase) specified ...""', 'comment_created': datetime.datetime(2022, 8, 9, 15, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 941468882, 'comment_body': 'Same note as above for `/add-alert-words` response description.', 'comment_created': datetime.datetime(2022, 8, 9, 15, 12, 41, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 941473468, 'comment_body': 'Do we want to note the string length limitation here? And then also maybe add the error response ...\r\n\r\n```console\r\n{\r\n   ""code"" : ""BAD_REQUEST"",\r\n   ""msg"" : ""alert_words[0] is too long (limit: 100 characters)"",\r\n   ""result"" : ""error""\r\n}\r\n```', 'comment_created': datetime.datetime(2022, 8, 9, 15, 16, 49, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 941474354, 'comment_body': 'Same note as below for `/add-alert-words` response description.', 'comment_created': datetime.datetime(2022, 8, 9, 15, 17, 36, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 941475110, 'comment_body': 'I\'d update to say: ""Add words (or phrases) to the ...""', 'comment_created': datetime.datetime(2022, 8, 9, 15, 18, 18, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 941480727, 'comment_body': 'Update to read: ""# Add words (or phrases) to the ...""', 'comment_created': datetime.datetime(2022, 8, 9, 15, 23, 17, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 941481156, 'comment_body': 'Same as above, add ""(or phrases)"".', 'comment_created': datetime.datetime(2022, 8, 9, 15, 23, 39, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 947123816, 'comment_body': 'I think I missed it while copy-pasting the schema. I think this should ideally be checked by the tests, whether parameters marked as `required: false` return an error in case they are not provided in the request.', 'comment_created': datetime.datetime(2022, 8, 16, 18, 40, 13, tzinfo=datetime.timezone.utc), 'commenter': 'akashaviator', 'type': 'User'}, {'comment_id': 947124382, 'comment_body': ""I've included this information now."", 'comment_created': datetime.datetime(2022, 8, 16, 18, 40, 55, tzinfo=datetime.timezone.utc), 'commenter': 'akashaviator', 'type': 'User'}, {'comment_id': 947125589, 'comment_body': 'Added the error response. I did not find any character limit being documented for similar parameters in the documentation.', 'comment_created': datetime.datetime(2022, 8, 16, 18, 42, 25, tzinfo=datetime.timezone.utc), 'commenter': 'akashaviator', 'type': 'User'}]","[{'commit_sha': '342fd72a1080f1ef6c58b322ff4bbe4579a12e70', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '098effe0a6e6a51a245cfab505275e3aa7a502df', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}]",Kartik Srivastava,12623921,kaushiksri0908@gmail.com,User,,10,,8,24
1013894288,api: Document /default_streams API endpoint.,This documents the `/default_streams` API endpoint.,True,22639,https://api.github.com/repos/zulip/zulip/pulls/22639,https://github.com/zulip/zulip/pull/22639,closed,121,1,4,1,1,4,1,0,[{'name': 'size: XL'}],2022-08-01 13:41:29+00:00,2022-08-09 21:56:43+00:00,720914.0,"8 days, 8:15:14","[{'comment_id': 941373049, 'comment_body': 'Let\'s add the indefinite article to these titles (""Add/Remove a default stream"") - both here and in the endpoint summary descriptions. Both for consistency with the other documented endpoints, and because otherwise it could sound like there is only one default stream allowed / in general.', 'comment_created': datetime.datetime(2022, 8, 9, 13, 54, 55, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 941373941, 'comment_body': 'See note in `rest-endpoints.md`.', 'comment_created': datetime.datetime(2022, 8, 9, 13, 55, 37, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 941374445, 'comment_body': 'See note in `rest-endpoints.md`.', 'comment_created': datetime.datetime(2022, 8, 9, 13, 56, 4, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}, {'comment_id': 941409684, 'comment_body': 'small nit - ""to the default streams set:""', 'comment_created': datetime.datetime(2022, 8, 9, 14, 25, 17, tzinfo=datetime.timezone.utc), 'commenter': 'laurynmm', 'type': 'User'}]","[{'commit_sha': '887233a8eb94a715b41479e1ac563d268541b142', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}]",Kartik Srivastava,12623921,kaushiksri0908@gmail.com,User,,10,,8,24
1025841168,user_topics: Rename muted_topics.js to user_topics.js.,This renames muted_topics.js to user_topics.js as we'll be switching over to using `user_topics` instead of `muted_topics`.,True,22711,https://api.github.com/repos/zulip/zulip/pulls/22711,https://github.com/zulip/zulip/pull/22711,closed,74,80,23,1,1,0,1,0,[{'name': 'size: XL'}],2022-08-14 16:26:48+00:00,2022-08-16 21:39:25+00:00,191557.0,"2 days, 5:12:37",[],"[{'commit_sha': 'd8decc1710c41fc69ac86fd3185edb0bf79cbe55', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}]",Kartik Srivastava,12623921,kaushiksri0908@gmail.com,User,,10,,8,24
1033293651,user_topics: Use user_topics page_param instead of muted_topics in the web app.,"This PR aims to replace the usage of the `muted_topics` page_param with the newer `user_topics` page_param and the  `user_topic` event.

I took the liberty to add a new helper function `set_user_topic` that will be used to initialize the `muted_topics` map as well as set an incoming `user_topic` event (from `server_events_dispatch.js`) accordingly in the `muted_topics` map ( or a `user_topics` map in the future).

",True,22771,https://api.github.com/repos/zulip/zulip/pulls/22771,https://github.com/zulip/zulip/pull/22771,closed,109,51,8,3,1,2,1,0,[{'name': 'size: XL'}],2022-08-22 20:11:29+00:00,2022-08-30 00:24:08+00:00,619959.0,"7 days, 4:12:39","[{'comment_id': 957636144, 'comment_body': ""I think we'll need a more general `user_topics` map in the future. We can rename this `muted_topics` map to `user_topics` and store (`last_updated`, `visibility_policy`) in it just the same way we are storing `date_muted` now.\r\n\r\nAdding and updating `user_topic` data would be easy this way, but in functions like `get_muted_topics`, it won't be as efficient as we'll have to filter through all types of records.\r\n\r\nI'd like some feedback on this thought."", 'comment_created': datetime.datetime(2022, 8, 29, 17, 47, 37, tzinfo=datetime.timezone.utc), 'commenter': 'akashaviator', 'type': 'User'}, {'comment_id': 957896963, 'comment_body': ""Yeah, I think renaming this to `user_topics` seems right. \r\n\r\nI think what we will want is for internal data structures like this to just map (stream => topic => object), rather than a timestamp at the bottom. \r\n\r\nI think it'll still make sense to have API functions like `user_topics.is_topic_muted(stream_id, topic)` that hide the complexity from callers where it's not relevant.\r\n\r\n"", 'comment_created': datetime.datetime(2022, 8, 30, 0, 21, 5, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': 'e3b7d364467729408215f60bc6779d5ee3ecc81e', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7c3a07018ef00b31e72f01ac3e51d67f61d6c11', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8517e5f1393c912a4708edb882364720c97542f', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}]",Kartik Srivastava,12623921,kaushiksri0908@gmail.com,User,,10,,8,24
1053277841,Add support for unmuting certain topics within a muted stream.,"This carries forward the work in #21251 and adds support for unmuting certain topics within a muted stream using the UNMUTED topic visibility policy.

Fixes #2517.",False,22923,https://api.github.com/repos/zulip/zulip/pulls/22923,https://github.com/zulip/zulip/pull/22923,closed,224,59,13,5,7,7,2,0,"[{'name': 'size: XL'}, {'name': 'has conflicts'}]",2022-09-12 12:35:15+00:00,2023-03-02 21:36:30+00:00,14806875.0,"171 days, 9:01:15","[{'comment_id': 976851110, 'comment_body': 'I think this comment can be removed now, since do_update_message no longer makes such call.', 'comment_created': datetime.datetime(2022, 9, 21, 18, 18, 10, tzinfo=datetime.timezone.utc), 'commenter': 'akashaviator', 'type': 'User'}, {'comment_id': 981833051, 'comment_body': ""So I'm a bit concerned that we need to rewrite this function. Structurally, if there's an existing row with a given visibility policy, and we're trying to set a different policy, we need to detect that and update the row to the new policy, rather than just trying to make a new row. Usually that's done via a `UserTopic.objects.get_or_create` query or a `select_for_update`.\r\n\r\nI think we'll want to rename this to `do_set_topic_visibility_policy` as part of reworking it to achieve our goals here.\r\n\r\n781107308da36f3a5ab70408a0f95acb3b2a82e4 has some context; I'm not sure why the commit message doesn't have more context, but @alexmv may be able to help (or maybe you can find the PR containing that commit in case it answers that question)."", 'comment_created': datetime.datetime(2022, 9, 28, 0, 25, 45, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 985744699, 'comment_body': ""\r\n\r\n> I think we'll want to rename this to `do_set_topic_visibility_policy` as part of reworking it to achieve our goals here.\r\n\r\n@timabbott  You mean renaming `do_set_unmuted_visibility` (in this PR)  to `do_set_topic_visibility_policy`, and replacing `do_mute_topic` and `do_unmute_topic` with it as well?"", 'comment_created': datetime.datetime(2022, 10, 3, 12, 50, 3, tzinfo=datetime.timezone.utc), 'commenter': 'akashaviator', 'type': 'User'}, {'comment_id': 1088739335, 'comment_body': 'Should this have an [`update_fields`](https://zulip.readthedocs.io/en/latest/contributing/code-style.html#user-profile-save)?', 'comment_created': datetime.datetime(2023, 1, 27, 9, 22, 6, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 1088806015, 'comment_body': 'This adds one more database query in the message send code path. Can we replace this with a single query which returns something like map from `user_id` to `visibility_policy` value for a particular topic?', 'comment_created': datetime.datetime(2023, 1, 27, 10, 31, 39, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 1089652672, 'comment_body': ""Yeah, we should definitely do something like that. Might be cleaner to have the map be the other way (visibility_policy=>set(user_ids)), but I'm not sure as I've not looked at how this is used."", 'comment_created': datetime.datetime(2023, 1, 28, 6, 1, 33, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1089652767, 'comment_body': 'Yes, all saves to update an existing row should use that.', 'comment_created': datetime.datetime(2023, 1, 28, 6, 2, 9, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': 'a3f36dc0f446193bcbf55834581fb9950d09f175', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf0625e24bba34ed06c4dad003596e3defba42ed', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c32dbff880fed5d46ead20eeb7781b913fd89dd', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb0d7c3464a61151cff6091a2b941e2e72f97b80', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5c6932ffebcd5cea181df175fe33b5a04f66e6f', 'committer_username': 'akashaviator', 'committer_name': 'Kartik Srivastava', 'committer_email': 'kaushiksri0908@gmail.com', 'commit_date': datetime.datetime(2015, 5, 27, 8, 43, 32, tzinfo=datetime.timezone.utc)}]",Kartik Srivastava,12623921,kaushiksri0908@gmail.com,User,,10,,8,24

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
43160685,zulip,zulip/zulip,Python,7618,21026,375,1134,60349,2461,28,796,"[{'id': 1064279718, 'number': 23024, 'closed': datetime.datetime(2022, 9, 22, 15, 41, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 22, 14, 46, 13, tzinfo=datetime.timezone.utc), 'time_taken': 3305.0, 'time_delta': '0:55:05', 'additions': 106, 'deletions': 86, 'state': 'closed'}, {'id': 1053277841, 'number': 22923, 'closed': datetime.datetime(2023, 3, 2, 21, 36, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 12, 12, 35, 15, tzinfo=datetime.timezone.utc), 'time_taken': 14806875.0, 'time_delta': '171 days, 9:01:15', 'additions': 224, 'deletions': 59, 'state': 'closed'}, {'id': 1033293651, 'number': 22771, 'closed': datetime.datetime(2022, 8, 30, 0, 24, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 22, 20, 11, 29, tzinfo=datetime.timezone.utc), 'time_taken': 619959.0, 'time_delta': '7 days, 4:12:39', 'additions': 109, 'deletions': 51, 'state': 'closed'}, {'id': 1025841168, 'number': 22711, 'closed': datetime.datetime(2022, 8, 16, 21, 39, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 14, 16, 26, 48, tzinfo=datetime.timezone.utc), 'time_taken': 191557.0, 'time_delta': '2 days, 5:12:37', 'additions': 74, 'deletions': 80, 'state': 'closed'}, {'id': 1013894288, 'number': 22639, 'closed': datetime.datetime(2022, 8, 9, 21, 56, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 1, 13, 41, 29, tzinfo=datetime.timezone.utc), 'time_taken': 720914.0, 'time_delta': '8 days, 8:15:14', 'additions': 121, 'deletions': 1, 'state': 'closed'}, {'id': 1012125546, 'number': 22627, 'closed': datetime.datetime(2022, 8, 16, 20, 39, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 29, 15, 43, 40, tzinfo=datetime.timezone.utc), 'time_taken': 1572937.0, 'time_delta': '18 days, 4:55:37', 'additions': 176, 'deletions': 2, 'state': 'closed'}, {'id': 998671533, 'number': 22509, 'closed': datetime.datetime(2022, 8, 4, 23, 34, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 17, 15, 49, 58, tzinfo=datetime.timezone.utc), 'time_taken': 1583078.0, 'time_delta': '18 days, 7:44:38', 'additions': 94, 'deletions': 2, 'state': 'closed'}, {'id': 997225436, 'number': 22485, 'closed': datetime.datetime(2022, 7, 17, 15, 59, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 15, 0, 3, 22, tzinfo=datetime.timezone.utc), 'time_taken': 230152.0, 'time_delta': '2 days, 15:55:52', 'additions': 11, 'deletions': 1, 'state': 'closed'}, {'id': 864639551, 'number': 21251, 'closed': datetime.datetime(2022, 8, 5, 0, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 26, 12, 22, 25, tzinfo=datetime.timezone.utc), 'time_taken': 13782095.0, 'time_delta': '159 days, 12:21:35', 'additions': 324, 'deletions': 34, 'state': 'closed'}, {'id': 475827979, 'number': 16234, 'closed': None, 'created': datetime.datetime(2020, 8, 29, 21, 1, 3, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 66, 'deletions': 72, 'state': 'open'}, {'id': 472353833, 'number': 16193, 'closed': datetime.datetime(2021, 2, 16, 23, 8, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 24, 8, 28, 3, tzinfo=datetime.timezone.utc), 'time_taken': 15259242.0, 'time_delta': '176 days, 14:40:42', 'additions': 59, 'deletions': 0, 'state': 'closed'}, {'id': 466356615, 'number': 16107, 'closed': datetime.datetime(2020, 8, 11, 23, 41, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 11, 21, 9, 32, tzinfo=datetime.timezone.utc), 'time_taken': 9090.0, 'time_delta': '2:31:30', 'additions': 22, 'deletions': 4, 'state': 'closed'}, {'id': 465577867, 'number': 16087, 'closed': None, 'created': datetime.datetime(2020, 8, 10, 15, 36, 57, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 286, 'deletions': 51, 'state': 'open'}, {'id': 450174106, 'number': 15825, 'closed': datetime.datetime(2020, 8, 26, 22, 40, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 12, 56, 8, tzinfo=datetime.timezone.utc), 'time_taken': 3577452.0, 'time_delta': '41 days, 9:44:12', 'additions': 108, 'deletions': 47, 'state': 'closed'}, {'id': 444278220, 'number': 15668, 'closed': datetime.datetime(2020, 8, 26, 22, 36, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 4, 12, 20, 32, tzinfo=datetime.timezone.utc), 'time_taken': 4616137.0, 'time_delta': '53 days, 10:15:37', 'additions': 358, 'deletions': 4, 'state': 'closed'}, {'id': 440765331, 'number': 15589, 'closed': None, 'created': datetime.datetime(2020, 6, 26, 20, 6, 41, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 69, 'deletions': 2, 'state': 'open'}, {'id': 437937269, 'number': 15523, 'closed': datetime.datetime(2020, 7, 2, 0, 23, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 13, 18, 17, tzinfo=datetime.timezone.utc), 'time_taken': 817531.0, 'time_delta': '9 days, 11:05:31', 'additions': 43, 'deletions': 38, 'state': 'closed'}, {'id': 433158053, 'number': 15317, 'closed': None, 'created': datetime.datetime(2020, 6, 11, 15, 25, 7, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 22, 'deletions': 77, 'state': 'open'}, {'id': 428742539, 'number': 15228, 'closed': datetime.datetime(2020, 6, 5, 23, 11, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 5, 20, 38, 52, tzinfo=datetime.timezone.utc), 'time_taken': 9134.0, 'time_delta': '2:32:14', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 425643588, 'number': 15158, 'closed': datetime.datetime(2020, 6, 11, 1, 1, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 31, 17, 29, 22, tzinfo=datetime.timezone.utc), 'time_taken': 891134.0, 'time_delta': '10 days, 7:32:14', 'additions': 130, 'deletions': 2, 'state': 'closed'}, {'id': 425431874, 'number': 15152, 'closed': None, 'created': datetime.datetime(2020, 5, 30, 7, 59, 35, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 75, 'deletions': 8, 'state': 'open'}, {'id': 420273515, 'number': 15028, 'closed': datetime.datetime(2020, 5, 20, 6, 10, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 19, 17, 53, 59, tzinfo=datetime.timezone.utc), 'time_taken': 44212.0, 'time_delta': '12:16:52', 'additions': 66, 'deletions': 2, 'state': 'closed'}, {'id': 419011774, 'number': 15000, 'closed': datetime.datetime(2020, 5, 16, 21, 45, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 16, 19, 22, 18, tzinfo=datetime.timezone.utc), 'time_taken': 8610.0, 'time_delta': '2:23:30', 'additions': 3, 'deletions': 19, 'state': 'closed'}, {'id': 411034774, 'number': 14801, 'closed': datetime.datetime(2020, 4, 30, 6, 21, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 30, 0, 19, 48, tzinfo=datetime.timezone.utc), 'time_taken': 21715.0, 'time_delta': '6:01:55', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 409744124, 'number': 14776, 'closed': datetime.datetime(2020, 5, 20, 17, 24, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 27, 20, 59, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1974287.0, 'time_delta': '22 days, 20:24:47', 'additions': 209, 'deletions': 62, 'state': 'closed'}, {'id': 406882094, 'number': 14689, 'closed': datetime.datetime(2020, 5, 20, 17, 33, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 21, 20, 9, 20, tzinfo=datetime.timezone.utc), 'time_taken': 2496256.0, 'time_delta': '28 days, 21:24:16', 'additions': 290, 'deletions': 57, 'state': 'closed'}, {'id': 406804333, 'number': 14686, 'closed': datetime.datetime(2020, 4, 21, 20, 45, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 21, 17, 30, 54, tzinfo=datetime.timezone.utc), 'time_taken': 11705.0, 'time_delta': '3:15:05', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 402621071, 'number': 14564, 'closed': datetime.datetime(2020, 4, 15, 22, 47, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 13, 12, 22, 59, tzinfo=datetime.timezone.utc), 'time_taken': 210246.0, 'time_delta': '2 days, 10:24:06', 'additions': 10, 'deletions': 10, 'state': 'closed'}, {'id': 400567369, 'number': 14505, 'closed': datetime.datetime(2020, 4, 24, 0, 42, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 8, 0, 33, 41, tzinfo=datetime.timezone.utc), 'time_taken': 1382954.0, 'time_delta': '16 days, 0:09:14', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 394919211, 'number': 14371, 'closed': datetime.datetime(2020, 3, 27, 22, 49, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 27, 18, 54, 24, tzinfo=datetime.timezone.utc), 'time_taken': 14096.0, 'time_delta': '3:54:56', 'additions': 2, 'deletions': 11, 'state': 'closed'}, {'id': 392087953, 'number': 14292, 'closed': datetime.datetime(2020, 4, 29, 3, 50, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 22, 23, 6, 22, tzinfo=datetime.timezone.utc), 'time_taken': 3213843.0, 'time_delta': '37 days, 4:44:03', 'additions': 26, 'deletions': 1, 'state': 'closed'}, {'id': 391772987, 'number': 14276, 'closed': datetime.datetime(2020, 6, 18, 1, 37, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 20, 23, 0, 7, tzinfo=datetime.timezone.utc), 'time_taken': 7699033.0, 'time_delta': '89 days, 2:37:13', 'additions': 137, 'deletions': 3, 'state': 'closed'}, {'id': 388708308, 'number': 14206, 'closed': datetime.datetime(2020, 6, 19, 22, 31, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 15, 13, 38, 24, tzinfo=datetime.timezone.utc), 'time_taken': 8326381.0, 'time_delta': '96 days, 8:53:01', 'additions': 131, 'deletions': 1, 'state': 'closed'}, {'id': 386358265, 'number': 14167, 'closed': None, 'created': datetime.datetime(2020, 3, 10, 20, 51, 20, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 167, 'deletions': 3, 'state': 'open'}, {'id': 385310677, 'number': 14148, 'closed': datetime.datetime(2020, 3, 9, 1, 47, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 8, 20, 35, 14, tzinfo=datetime.timezone.utc), 'time_taken': 18733.0, 'time_delta': '5:12:13', 'additions': 33, 'deletions': 24, 'state': 'closed'}, {'id': 385149118, 'number': 14129, 'closed': datetime.datetime(2020, 3, 8, 21, 18, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 7, 14, 19, 40, tzinfo=datetime.timezone.utc), 'time_taken': 111516.0, 'time_delta': '1 day, 6:58:36', 'additions': 26, 'deletions': 16, 'state': 'closed'}, {'id': 381857150, 'number': 14072, 'closed': datetime.datetime(2020, 3, 9, 2, 17, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 29, 14, 16, 32, tzinfo=datetime.timezone.utc), 'time_taken': 734479.0, 'time_delta': '8 days, 12:01:19', 'additions': 136, 'deletions': 31, 'state': 'closed'}, {'id': 375586913, 'number': 13915, 'closed': datetime.datetime(2020, 2, 16, 7, 8, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 14, 21, 50, 8, tzinfo=datetime.timezone.utc), 'time_taken': 119920.0, 'time_delta': '1 day, 9:18:40', 'additions': 443, 'deletions': 1, 'state': 'closed'}, {'id': 373267363, 'number': 13870, 'closed': datetime.datetime(2020, 3, 7, 14, 14, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 10, 17, 45, 20, tzinfo=datetime.timezone.utc), 'time_taken': 2233741.0, 'time_delta': '25 days, 20:29:01', 'additions': 15, 'deletions': 7, 'state': 'closed'}, {'id': 370013535, 'number': 13794, 'closed': datetime.datetime(2020, 2, 3, 2, 55, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 2, 13, 59, 41, tzinfo=datetime.timezone.utc), 'time_taken': 46576.0, 'time_delta': '12:56:16', 'additions': 1, 'deletions': 3, 'state': 'closed'}, {'id': 362841815, 'number': 13669, 'closed': datetime.datetime(2020, 2, 3, 4, 55, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 14, 21, 14, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1669264.0, 'time_delta': '19 days, 7:41:04', 'additions': 105, 'deletions': 79, 'state': 'closed'}, {'id': 358519629, 'number': 13596, 'closed': datetime.datetime(2020, 2, 7, 18, 36, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 1, 21, 36, 32, tzinfo=datetime.timezone.utc), 'time_taken': 3186000.0, 'time_delta': '36 days, 21:00:00', 'additions': 61, 'deletions': 21, 'state': 'closed'}, {'id': 358400790, 'number': 13590, 'closed': datetime.datetime(2020, 1, 1, 21, 33, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 31, 18, 10, 5, tzinfo=datetime.timezone.utc), 'time_taken': 98584.0, 'time_delta': '1 day, 3:23:04', 'additions': 88, 'deletions': 50, 'state': 'closed'}, {'id': 353209464, 'number': 13537, 'closed': datetime.datetime(2020, 5, 11, 7, 22, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 14, 20, 19, 33, tzinfo=datetime.timezone.utc), 'time_taken': 12826977.0, 'time_delta': '148 days, 11:02:57', 'additions': 88, 'deletions': 0, 'state': 'closed'}]"
