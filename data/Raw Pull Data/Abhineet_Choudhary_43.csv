pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
437986035,Tangent Batching for regular ops ,"Tangent Batching for regular ops can be done by vectorizing `_jvp_dispath`.

(cc @allenlavoie)",True,40678,https://api.github.com/repos/tensorflow/tensorflow/pulls/40678,https://github.com/tensorflow/tensorflow/pull/40678,closed,115,13,5,12,5,17,3,1,"[{'name': 'cla: yes'}, {'name': 'ready to pull'}, {'name': 'size:XS'}]",2020-06-22 14:35:55+00:00,2020-06-30 01:50:34+00:00,645279.0,"7 days, 11:14:39","[{'comment_id': 443827280, 'comment_body': 'Do we need `use_pfor`? It seems like we can just check `batch_size` again instead (and maybe condense these if statements).', 'comment_created': datetime.datetime(2020, 6, 22, 21, 8, 30, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}, {'comment_id': 443830939, 'comment_body': ""Fine not to worry about it for now, but one thing to think about is dynamic shapes:\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\n@tf.function(input_signature=[tf.TensorSpec(shape=[], dtype=tf.float32),\r\n                              tf.TensorSpec(shape=None, dtype=tf.float32)])\r\ndef f(batch_size, x):\r\n  [batch_size] + x.shape  # error; tf.concat([[batch_size], tf.shape(x)], axis=0) works\r\n\r\nf(tf.constant(16), tf.constant(1.))\r\n```\r\n\r\nI assume we'll want to allow dynamic batch sizes and undefined tangent shapes at some point."", 'comment_created': datetime.datetime(2020, 6, 22, 21, 15, 53, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}, {'comment_id': 443850788, 'comment_body': 'Made the change.', 'comment_created': datetime.datetime(2020, 6, 22, 22, 2, 19, tzinfo=datetime.timezone.utc), 'commenter': 'abhichou4', 'type': 'User'}, {'comment_id': 443851084, 'comment_body': 'Removed the rank if statement as it would fail anyway.', 'comment_created': datetime.datetime(2020, 6, 22, 22, 3, 3, tzinfo=datetime.timezone.utc), 'commenter': 'abhichou4', 'type': 'User'}, {'comment_id': 443877048, 'comment_body': 'nit: missing a batch_size docstring?\r\n\r\nAnd actually Returns: should include [batch_size] too', 'comment_created': datetime.datetime(2020, 6, 22, 23, 22, 34, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}, {'comment_id': 443878423, 'comment_body': ""You might want to add a test for this error message if you leave it in. `self.assertRaises` or `self.assertRaisesRegexp` have a bunch of uses in the codebase.\r\n\r\nThe concat as it is doesn't look correct. You could do something like `tangent.shape.is_compatible_with([None] + primal.shape)`. It's a slightly looser check since it doesn't use batch_size, but then you don't have to worry about it being a tensor."", 'comment_created': datetime.datetime(2020, 6, 22, 23, 27, 36, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}, {'comment_id': 443878661, 'comment_body': 'nit: remove the second if and just combine with the previous one?', 'comment_created': datetime.datetime(2020, 6, 22, 23, 28, 28, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}, {'comment_id': 444314145, 'comment_body': ""That's way better. It would also allow for a list of primals to have different `batch_size`. We might as well have a bool `use_batch` instead of batch size then. "", 'comment_created': datetime.datetime(2020, 6, 23, 15, 29, 31, tzinfo=datetime.timezone.utc), 'commenter': 'abhichou4', 'type': 'User'}, {'comment_id': 444549708, 'comment_body': 'Shouldn\'t it be ""if not tangent.shape.is_compatible_with([None] + primal.shape):""?\r\n\r\nYou might want to use assertRaisesRegexp; maybe that test was throwing a different ValueError?', 'comment_created': datetime.datetime(2020, 6, 23, 22, 47, 37, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}, {'comment_id': 444560105, 'comment_body': 'My bad, the ValueError was for no same nested structure. ', 'comment_created': datetime.datetime(2020, 6, 23, 23, 20, 5, tzinfo=datetime.timezone.utc), 'commenter': 'abhichou4', 'type': 'User'}, {'comment_id': 445672302, 'comment_body': ""Needs two spaces of indent (and in the other BUILD file too).\r\n\r\nBuild file auto-formatting works pretty well (much better than for Python): https://github.com/bazelbuild/buildtools/blob/master/buildifier/README.md\r\n\r\nI believe we have a test that checks the BUILD file matches Buildifier's formatting, so usually best to run it."", 'comment_created': datetime.datetime(2020, 6, 25, 16, 8, 24, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}, {'comment_id': 445691725, 'comment_body': 'Fixed it.', 'comment_created': datetime.datetime(2020, 6, 25, 16, 37, 55, tzinfo=datetime.timezone.utc), 'commenter': 'abhichou4', 'type': 'User'}, {'comment_id': 446429136, 'comment_body': 'These context lines look like dead code. Can you remove them and the ""context"" import?', 'comment_created': datetime.datetime(2020, 6, 26, 21, 59, 49, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}, {'comment_id': 447182422, 'comment_body': 'Removed. About the `gradient_impl` change, `parallel_for` also depends on `:test_util` which then leads to `python:gradients` again (test_util -> python/client_testlib -> python:gradient_checker). Anything that can be done here? ', 'comment_created': datetime.datetime(2020, 6, 29, 18, 52, 2, tzinfo=datetime.timezone.utc), 'commenter': 'abhichou4', 'type': 'User'}, {'comment_id': 447189207, 'comment_body': ""The BUILD dependencies as you had them seemed fine (parallel_for:control_flow_ops rather than parallel_for:parallel_for). It was just the Python imports that were problematic because of the `__init__.py` file. I made the one gradients -> gradients_impl change and it seemed fine. I think if we do that and you push a commit with the context changes we'll be good to commit this."", 'comment_created': datetime.datetime(2020, 6, 29, 19, 3, 59, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}, {'comment_id': 447191323, 'comment_body': 'Oh sure. Will make changes.', 'comment_created': datetime.datetime(2020, 6, 29, 19, 7, 47, tzinfo=datetime.timezone.utc), 'commenter': 'abhichou4', 'type': 'User'}, {'comment_id': 447200430, 'comment_body': 'Please also remove this import (which is now unused)', 'comment_created': datetime.datetime(2020, 6, 29, 19, 25, 5, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}]","[{'commit_sha': '241a9158334339b565705b86e6ac3aac88d950e4', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de1fc3c67d1e419bd26381ccfdf1a96ae50ad3b8', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be8d4be4f4e75c5d720aa4b4c9da025d5d54c1be', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec4c8f32918e8354aa8aba8a6264f5f7e4f0ffbd', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '686dd8ecd88a65c562e3e698b9f15d66f5d8344a', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fad91e7737761b3e5ec8ba7643486b2a86b9e31', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '672b293cbdbfc5225120a3f46f4665a89fc62acf', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30c8b4a5bf64f982a626fb1f5e3888e5c481dce5', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfa6727d63e69687e25099e80ff1c2716cf43697', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c8db3c6b5e7b33f05dc15e7e2e724579f198f56', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b5ef9c84402d0ff6f6ec82c1f4883a0f51d1644', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '876b655af4714d5283e142e10dec456168dd84e8', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}]",Abhineet Choudhary,39547012,abhichou4@gmail.com,User,,12,,24,22
455127945,Support Batches in ForwardAccumulator,cc @allenlavoie,True,41628,https://api.github.com/repos/tensorflow/tensorflow/pulls/41628,https://github.com/tensorflow/tensorflow/pull/41628,closed,69,19,6,12,3,14,4,1,"[{'name': 'cla: yes'}, {'name': 'comp:eager'}, {'name': 'ready to pull'}, {'name': 'size:L'}]",2020-07-22 13:42:36+00:00,2020-07-31 19:20:01+00:00,797845.0,"9 days, 5:37:25","[{'comment_id': 458899151, 'comment_body': 'If you make this argument a bool, PyBind will handle the conversion from a PyObject automatically. Probably cleaner that way?', 'comment_created': datetime.datetime(2020, 7, 22, 15, 55, 5, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}, {'comment_id': 458902830, 'comment_body': 'ForwardBatchAccumulator?\r\n\r\nPlease add a test that would have caught this.', 'comment_created': datetime.datetime(2020, 7, 22, 16, 0, 17, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}, {'comment_id': 458904341, 'comment_body': 'Not sure what this means', 'comment_created': datetime.datetime(2020, 7, 22, 16, 2, 40, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}, {'comment_id': 458906968, 'comment_body': 'One thing that seems plausible is to just keep the boolean around, then we can add broadcasting for un-batched tangents in Python. Does that work, and do we need different C++ classes then?', 'comment_created': datetime.datetime(2020, 7, 22, 16, 6, 34, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}, {'comment_id': 458907952, 'comment_body': 'A minor nit, but it looks like your editor/code formatter is making lots of unrelated format changes. It makes the diff hard to interpret.', 'comment_created': datetime.datetime(2020, 7, 22, 16, 8, 3, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}, {'comment_id': 463080083, 'comment_body': 'Made change.', 'comment_created': datetime.datetime(2020, 7, 30, 15, 26, 31, tzinfo=datetime.timezone.utc), 'commenter': 'abhichou4', 'type': 'User'}, {'comment_id': 463086030, 'comment_body': 'Why the license block change?', 'comment_created': datetime.datetime(2020, 7, 30, 15, 35, 9, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}, {'comment_id': 463087760, 'comment_body': ""Can we keep this out of the public API to start, e.g. a separate static method with this signature (_batch_accumulator)?\r\n\r\nOnce it's tested with tf.function/custom_gradient/nesting we can start with experimental_use_batch. Just a question of what's guaranteed about API stability."", 'comment_created': datetime.datetime(2020, 7, 30, 15, 37, 44, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}, {'comment_id': 463109811, 'comment_body': 'That seems better. So instead of a `self` argument a function? Can we make it a `@classmethod`?', 'comment_created': datetime.datetime(2020, 7, 30, 16, 10, 7, tzinfo=datetime.timezone.utc), 'commenter': 'abhichou4', 'type': 'User'}, {'comment_id': 463112874, 'comment_body': 'Sure, a new _private classmethod sounds reasonable to me for now.', 'comment_created': datetime.datetime(2020, 7, 30, 16, 15, 3, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}, {'comment_id': 463127984, 'comment_body': ""I think using .jvp for fetching batch jvps is fine once batching is enabled, it's the constructor argument I'm concerned about. Can we take out the constructor argument and instead construct a batching ForwardAccumulator with a classmethod for now?\r\n\r\nThe issue is whether there's a public API for creating/using the batching mode. I don't think there should be until we know it composes with other common transformations."", 'comment_created': datetime.datetime(2020, 7, 30, 16, 39, 19, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}, {'comment_id': 463215128, 'comment_body': 'Can you add a one-line docstring?', 'comment_created': datetime.datetime(2020, 7, 30, 19, 15, 19, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}, {'comment_id': 463216574, 'comment_body': 'use_batch_ (trailing underscore): https://www.tensorflow.org/community/contribute/code_style#c_coding_style / https://google.github.io/styleguide/cppguide.html#Variable_Names', 'comment_created': datetime.datetime(2020, 7, 30, 19, 18, 20, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}, {'comment_id': 463218298, 'comment_body': 'This might be a nice place to do some shape checking. Something like `tangent.shape.assert_is_compatible_with(tf.TensorShape([None]) + primal.shape)`', 'comment_created': datetime.datetime(2020, 7, 30, 19, 21, 40, tzinfo=datetime.timezone.utc), 'commenter': 'allenlavoie', 'type': 'User'}]","[{'commit_sha': 'd4d06a0c28044326ad9acd0e38947bc021b3b7f0', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53c536bb4d24aa2bad123778095fa514943c7425', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e0bc42831fe37e9738a329c9cea2615dd0473aa', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de3213b3889075f9e74e3880ceff04b799a16c8b', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '433496f95564647fc850af6c3b775bd6dc03d449', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16961a1eb8267393f8878c9bec338cb5f38e006a', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea3c5972551b1f363c38ed0bd97bf6d1fbe557ff', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2607cc4668fa2640077619d4632323a82d693194', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cca474757e07f6abc05918a99036b600d2c28b0f', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7b0242474ad781f87b0f1a5fd0db2291517d68f', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dec021360d3f5158eb51cb4d9c3dd2c60f747403', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e29a8a1923c6020c5483ad1ef3a68abaff4cb6a', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}]",Abhineet Choudhary,39547012,abhichou4@gmail.com,User,,12,,24,22
463037959,Add test for nested batch accumulator ,,True,42048,https://api.github.com/repos/tensorflow/tensorflow/pulls/42048,https://github.com/tensorflow/tensorflow/pull/42048,closed,22,0,1,5,5,0,4,1,"[{'name': 'cla: yes'}, {'name': 'comp:eager'}, {'name': 'ready to pull'}, {'name': 'size:S'}]",2020-08-04 22:14:33+00:00,2020-08-14 22:28:34+00:00,864841.0,"10 days, 0:14:01",[],"[{'commit_sha': 'b46dd07f4a03f6be8be94bcdd37335528974fa5a', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eda4b4087bb51782b98badb8fb0bcd4592e2fce3', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26fb3eac4268aa87be7c9e7127bd156606c5970a', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c809c8260f7e8d3b9a0d1c7086f21e18af6a3319', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fba7f221fb909c0955ed834581f02e035a0add07', 'committer_username': 'abhichou4', 'committer_name': 'Abhineet Choudhary', 'committer_email': 'abhichou4@gmail.com', 'commit_date': datetime.datetime(2018, 5, 23, 5, 41, 23, tzinfo=datetime.timezone.utc)}]",Abhineet Choudhary,39547012,abhichou4@gmail.com,User,,12,,24,22

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
45717250,tensorflow,tensorflow/tensorflow,C++,74123,184811,7610,4660,168601,4321,2507,2546,"[{'id': 499666730, 'number': 43864, 'closed': datetime.datetime(2021, 7, 28, 14, 38, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 8, 5, 27, 58, tzinfo=datetime.timezone.utc), 'time_taken': 25348212.0, 'time_delta': '293 days, 9:10:12', 'additions': 35, 'deletions': 0, 'state': 'closed'}, {'id': 463037959, 'number': 42048, 'closed': datetime.datetime(2020, 8, 14, 22, 28, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 4, 22, 14, 33, tzinfo=datetime.timezone.utc), 'time_taken': 864841.0, 'time_delta': '10 days, 0:14:01', 'additions': 22, 'deletions': 0, 'state': 'closed'}, {'id': 455127945, 'number': 41628, 'closed': datetime.datetime(2020, 7, 31, 19, 20, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 13, 42, 36, tzinfo=datetime.timezone.utc), 'time_taken': 797845.0, 'time_delta': '9 days, 5:37:25', 'additions': 69, 'deletions': 19, 'state': 'closed'}, {'id': 437986035, 'number': 40678, 'closed': datetime.datetime(2020, 6, 30, 1, 50, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 14, 35, 55, tzinfo=datetime.timezone.utc), 'time_taken': 645279.0, 'time_delta': '7 days, 11:14:39', 'additions': 115, 'deletions': 13, 'state': 'closed'}, {'id': 437591418, 'number': 40650, 'closed': datetime.datetime(2020, 6, 22, 22, 9, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 21, 19, 41, 43, tzinfo=datetime.timezone.utc), 'time_taken': 95295.0, 'time_delta': '1 day, 2:28:15', 'additions': 41, 'deletions': 0, 'state': 'closed'}, {'id': 420677331, 'number': 39711, 'closed': datetime.datetime(2020, 5, 29, 21, 11, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 20, 11, 5, 16, tzinfo=datetime.timezone.utc), 'time_taken': 813995.0, 'time_delta': '9 days, 10:06:35', 'additions': 38, 'deletions': 0, 'state': 'closed'}]"
