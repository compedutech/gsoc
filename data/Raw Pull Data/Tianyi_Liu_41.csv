pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1455681912,arch/arm64: Support AArch64 binary syscalls,"### Prerequisite checklist

<!--
Please mark items appropriately:
-->

 - [x] Read the [contribution guidelines](https://unikraft.org/docs/contributing/) regarding submitting new changes to the project;
 - [x] Tested your changes against relevant architectures and platforms;
 - [x] Ran the [`checkpatch.uk`](https://github.com/unikraft/unikraft/blob/staging/support/scripts/checkpatch.uk) on your commit series before opening this PR;
 - [ ] Updated relevant documentation.


### Base target

 - Architecture(s): `AArch64`
 - Platform(s): `kvm`

### Description of changes

<!--
Please provide a detailed description of the changes made in this new PR.
-->

A interrupt handler is provided to redirect the interrupts generated by syscalls to the `syscall-shim` layer.
",False,1009,https://api.github.com/repos/unikraft/unikraft/pulls/1009,https://github.com/unikraft/unikraft/pull/1009,closed,29,5,5,1,1,2,9,1,"[{'name': 'area/arch'}, {'name': 'area/plat'}, {'name': 'area/lib'}, {'name': 'plat/kvm'}, {'name': 'lib/syscall_shim'}, {'name': 'lang/c'}, {'name': 'arch/arm'}, {'name': 'arch/arm64'}, {'name': 'plat/common'}]",2023-07-31 07:13:29+00:00,2023-10-11 06:29:29+00:00,6218160.0,"71 days, 23:16:00","[{'comment_id': 1320843686, 'comment_body': 'Maybe we are in the position to remove this TODO question, once we have the answer to it', 'comment_created': datetime.datetime(2023, 9, 10, 18, 41, 11, tzinfo=datetime.timezone.utc), 'commenter': 'razvanvirtan', 'type': 'User'}, {'comment_id': 1320975823, 'comment_body': 'The return address of syscall should be `elr_el1`', 'comment_created': datetime.datetime(2023, 9, 11, 4, 17, 2, tzinfo=datetime.timezone.utc), 'commenter': 'i-Pear', 'type': 'User'}]","[{'commit_sha': '9bb67047857755e1b3f250314bd234a7840db24c', 'committer_username': 'i-Pear', 'committer_name': 'i.Pear', 'committer_email': 'i.pear@outlook.com', 'commit_date': datetime.datetime(2015, 12, 18, 11, 51, 2, tzinfo=datetime.timezone.utc)}]",i.Pear,16350121,i.pear@outlook.com,User,,70,,97,57
1455674487,feat: Support AArch64 architecture,"This adds the support for AArch64 binary syscalls.

Depends on unikraft/unikraft#1009.
Depends on unikraft/unikraft#1096.",True,24,https://api.github.com/repos/unikraft/app-elfloader/pulls/24,https://github.com/unikraft/app-elfloader/pull/24,closed,36,9,3,2,3,6,1,1,[{'name': 'enhancement'}],2023-07-31 07:07:28+00:00,2023-10-12 07:50:50+00:00,6309802.0,"73 days, 0:43:22","[{'comment_id': 1320845480, 'comment_body': 'What is the purpose for this (line 109)? (I think I missed something)', 'comment_created': datetime.datetime(2023, 9, 10, 18, 55, 5, tzinfo=datetime.timezone.utc), 'commenter': 'razvanvirtan', 'type': 'User'}, {'comment_id': 1320979370, 'comment_body': 'The origin macro is in [1], and it does an align. But the align is not allowed here, so I copied the macro and deleted the align.\r\n\r\n[1] https://github.com/unikraft/unikraft/blob/staging/arch/arm/arm64/include/uk/asm/ctx.h#L53', 'comment_created': datetime.datetime(2023, 9, 11, 4, 23, 50, tzinfo=datetime.timezone.utc), 'commenter': 'i-Pear', 'type': 'User'}, {'comment_id': 1320983591, 'comment_body': 'Line 109 is a return value used in https://github.com/unikraft/unikraft/blob/staging/include/uk/arch/ctx.h#L173', 'comment_created': datetime.datetime(2023, 9, 11, 4, 33, 31, tzinfo=datetime.timezone.utc), 'commenter': 'i-Pear', 'type': 'User'}, {'comment_id': 1326973250, 'comment_body': ""Hum... I think it would make sense to move this (macro) function to the Unikraft core as part of `libcontext`. I assume elfloader is not the only use case where you want a packed pushing on the stack of arguments. For sure I'd give it a different name so that it is non conflicting, like `ukarch_rstack_push_packed()`. On x86, we could put an alias macro so that we can use the same code in elfloader. Can you move this macro?"", 'comment_created': datetime.datetime(2023, 9, 15, 8, 26, 30, tzinfo=datetime.timezone.utc), 'commenter': 'skuenzer', 'type': 'User'}, {'comment_id': 1327658837, 'comment_body': ""Sorry, I may not have understood this correctly. I think the code in elfloader can't be the same, because arm64 needs an non-aligned implementation. Is this updated PR and unikraft/unikraft#1096 what you want?"", 'comment_created': datetime.datetime(2023, 9, 15, 18, 40, 55, tzinfo=datetime.timezone.utc), 'commenter': 'i-Pear', 'type': 'User'}, {'comment_id': 1353491538, 'comment_body': 'Yes, the solution looks with PR#1096 good, thanks!', 'comment_created': datetime.datetime(2023, 10, 10, 22, 16, 48, tzinfo=datetime.timezone.utc), 'commenter': 'skuenzer', 'type': 'User'}]","[{'commit_sha': '5804c05ec3fc8737bada1178d0b61aae023c0b84', 'committer_username': 'i-Pear', 'committer_name': 'i.Pear', 'committer_email': 'i.pear@outlook.com', 'commit_date': datetime.datetime(2015, 12, 18, 11, 51, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '274843a1a1973a2d255d688d1ceb81beabcba18e', 'committer_username': 'i-Pear', 'committer_name': 'i.Pear', 'committer_email': 'i.pear@outlook.com', 'commit_date': datetime.datetime(2015, 12, 18, 11, 51, 2, tzinfo=datetime.timezone.utc)}]",i.Pear,16350121,i.pear@outlook.com,User,,70,,97,57
1296508963,Add Node.js static PIE build,"Added Node.js static PIE build.
A sample server is also provided, which displays ""Hello World from unikraft!"" on the returned web page.

",True,85,https://api.github.com/repos/unikraft/static-pie-apps/pulls/85,https://github.com/unikraft/static-pie-apps/pull/85,closed,83,0,6,1,2,0,0,1,[],2023-03-30 16:13:54+00:00,2023-04-21 11:35:17+00:00,1884083.0,"21 days, 19:21:23",[],"[{'commit_sha': 'c1388aabeb7f65051f4e7adab5b81fde54c10fdb', 'committer_username': 'i-Pear', 'committer_name': 'i.Pear', 'committer_email': 'i.pear@outlook.com', 'commit_date': datetime.datetime(2015, 12, 18, 11, 51, 2, tzinfo=datetime.timezone.utc)}]",i.Pear,16350121,i.pear@outlook.com,User,,70,,97,57
1367327298,Add busybox 1.36.1,"Use the [run.sh](https://github.com/unikraft/run-app-elfloader/) script:

./run.sh -k ./app-elfloader_qemu-x86_64_plain /bin/busybox ash

Only NOFORK applets can be used in shell:

basename
dirname
echo
false
fsync
hostid
logname
mkdir
printf
pwd
rmdir
sleep
sync
test
touch
true
usleep
whoami
yes

Other applets can be used through the launch command.",False,17,https://api.github.com/repos/unikraft/dynamic-apps/pulls/17,https://github.com/unikraft/dynamic-apps/pull/17,closed,0,0,0,0,0,0,0,0,[],2023-05-27 13:40:26+00:00,2023-09-09 13:15:32+00:00,9070506.0,"104 days, 23:35:06",[],[],i.Pear,16350121,i.pear@outlook.com,User,,70,,97,57
1448636379,lang/c#: Add binary files for .NET 7.0.7,"Note that the `procfs` is not really implemented, and the `dotnet runtime` needs to read the stack information in `/proc/self/maps`. It may be necessary to modify the address of the stack in `/proc/1/maps` according to the actual situation.",False,60,https://api.github.com/repos/unikraft/dynamic-apps/pulls/60,https://github.com/unikraft/dynamic-apps/pull/60,open,895,0,209,1,1,5,0,1,[],2023-07-25 15:09:05+00:00,,0.0,,"[{'comment_id': 1320567411, 'comment_body': '```suggestion\r\nFor convenience, we patched [EXTERNAL_EnableDiagnostics](https://github.com/dotnet/runtime/blob/v7.0.7/src/coreclr/inc/clrconfigvalues.h#L162)\r\n```', 'comment_created': datetime.datetime(2023, 9, 9, 13, 40, 29, tzinfo=datetime.timezone.utc), 'commenter': 'StefanJum', 'type': 'User'}, {'comment_id': 1320567438, 'comment_body': '```suggestion\r\nFor convince, we patched [EXTERNAL_EnableDiagnostics](https://github.com/dotnet/runtime/blob/v7.0.7/src/coreclr/inc/clrconfigvalues.h#L162) to be `0` by default.\r\n```', 'comment_created': datetime.datetime(2023, 9, 9, 13, 40, 37, tzinfo=datetime.timezone.utc), 'commenter': 'StefanJum', 'type': 'User'}, {'comment_id': 1320567533, 'comment_body': 'Use one sentence per line and one line per sentence.', 'comment_created': datetime.datetime(2023, 9, 9, 13, 40, 52, tzinfo=datetime.timezone.utc), 'commenter': 'StefanJum', 'type': 'User'}, {'comment_id': 1320567606, 'comment_body': '```suggestion\r\nYou have to change the content of `/proc/1/maps` in your `rootfs`, to make your range of stack address contains the real stack area.\r\nOtherwise, the runtime will crash with `Failed to create CoreCLR, HRESULT: 0x8007000E`.\r\n```', 'comment_created': datetime.datetime(2023, 9, 9, 13, 41, 11, tzinfo=datetime.timezone.utc), 'commenter': 'StefanJum', 'type': 'User'}, {'comment_id': 1320568015, 'comment_body': 'Give some detailed information here. Exactly what to run to get the stack address, and how to modify the `maps` file.', 'comment_created': datetime.datetime(2023, 9, 9, 13, 42, 54, tzinfo=datetime.timezone.utc), 'commenter': 'StefanJum', 'type': 'User'}]","[{'commit_sha': '9e0d5d6b9f00d46620c4ce608456ff4d612665b4', 'committer_username': 'i-Pear', 'committer_name': 'i.Pear', 'committer_email': 'i.pear@outlook.com', 'commit_date': datetime.datetime(2015, 12, 18, 11, 51, 2, tzinfo=datetime.timezone.utc)}]",i.Pear,16350121,i.pear@outlook.com,User,,70,,97,57
1448861383,lib/*: Add syscall interfaces for dotnet runtime,"<!--

Thank you for opening a new PR to the Unikraft Open Source Project!  We welcome
new changes, features, fixes, and more!  Please fill in this form to indicate
the status of your PR.  Please ensure you have read the contribution guidelines
before opening a new PR as this will cover the PR process:

  https://unikraft.org/docs/contributing/

-->

### Prerequisite checklist

<!--
Please mark items appropriately:
-->

 - [x] Read the [contribution guidelines](https://unikraft.org/docs/contributing/) regarding submitting new changes to the project;
 - [x] Tested your changes against relevant architectures and platforms;
 - [x] Ran the [`checkpatch.uk`](https://github.com/unikraft/unikraft/blob/staging/support/scripts/checkpatch.uk) on your commit series before opening this PR;
 - [ ] Updated relevant documentation.


### Description of changes

Stub the following syscall interfaces for `dotnet runtime 7.0`:

- `posix-mmap`: `SYS_mlock` and `SYS_msync`
- `uksched`: `SYS_sched_getaffinity` and `SYS_sched_setaffinity`
",False,1004,https://api.github.com/repos/unikraft/unikraft/pulls/1004,https://github.com/unikraft/unikraft/pull/1004,closed,55,0,6,2,17,4,8,1,"[{'name': 'kind/enhancement'}, {'name': 'area/lib'}, {'name': 'lib/uksched'}, {'name': 'lang/c'}, {'name': 'ci/merged'}, {'name': 'topic/mm'}, {'name': 'topic/scheduling'}, {'name': 'topic/syscall'}]",2023-07-25 17:34:50+00:00,2023-08-07 14:19:19+00:00,1111469.0,"12 days, 20:44:29","[{'comment_id': 1274811046, 'comment_body': 'Add these on separate lines (like you did in the `lib/posix-mmap/Makefile.uk` file)', 'comment_created': datetime.datetime(2023, 7, 26, 11, 19, 17, tzinfo=datetime.timezone.utc), 'commenter': 'StefanJum', 'type': 'User'}, {'comment_id': 1277233438, 'comment_body': '```suggestion\r\nUK_PROVIDED_SYSCALLS-$(CONFIG_LIBUKSCHED) += sched_getaffinity-3 \r\nUK_PROVIDED_SYSCALLS-$(CONFIG_LIBUKSCHED) += sched_setaffinity-3\r\n```', 'comment_created': datetime.datetime(2023, 7, 28, 7, 56, 11, tzinfo=datetime.timezone.utc), 'commenter': 'StefanJum', 'type': 'User'}, {'comment_id': 1277234905, 'comment_body': 'Wrap this to ~80 characters.\r\n```suggestion\r\nUK_SYSCALL_R_DEFINE(int, sched_getaffinity, int, pid, long, cpusetsize,\r\n                                           unsigned long*, mask)\r\n```', 'comment_created': datetime.datetime(2023, 7, 28, 7, 57, 46, tzinfo=datetime.timezone.utc), 'commenter': 'StefanJum', 'type': 'User'}, {'comment_id': 1277235311, 'comment_body': 'Same as above, wrap this line to ~80 characters', 'comment_created': datetime.datetime(2023, 7, 28, 7, 58, 9, tzinfo=datetime.timezone.utc), 'commenter': 'StefanJum', 'type': 'User'}]","[{'commit_sha': 'd29781e46001d20e42c9e8fe939823dc4dd503e8', 'committer_username': 'i-Pear', 'committer_name': 'i.Pear', 'committer_email': 'i.pear@outlook.com', 'commit_date': datetime.datetime(2015, 12, 18, 11, 51, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd63309162c389ff7cc8ed6949472ba39142b0d91', 'committer_username': 'i-Pear', 'committer_name': 'i.Pear', 'committer_email': 'i.pear@outlook.com', 'commit_date': datetime.datetime(2015, 12, 18, 11, 51, 2, tzinfo=datetime.timezone.utc)}]",i.Pear,16350121,i.pear@outlook.com,User,,70,,97,57
1453576895,feat: Provide VDSO image and __kernel_vsyscall interface,"This patch provides the capability to automatically generate a VDSO (Virtual Dynamic Shared Object) image and pass it to the application. The VDSO contains only symbols, while its actual implementation is retained in the kernel, with their mapping relationship recorded in `vdso_mapping.conf`.

Additionally, this introduces the `__kernel_vsyscall` interface, which allows libc to access system calls without relying on slow binary syscalls. The difference between `__kernel_vsyscall` and `uk_syscall6_r` lies in considering TLS (Thread Local Storage) switching, enabling both the kernel and user applications to use thread-local storage seamlessly. To utilize this feature, the libc needs to be modified accordingly, please refer to `fork-musl` [1] and `fork-glibc` [2] for further information.

To use the VDSO, please select `Application Options -> Provide VDSO Image`.

[1] https://github.com/unikraft/fork-musl
[2] https://github.com/unikraft/fork-glibc",False,23,https://api.github.com/repos/unikraft/app-elfloader/pulls/23,https://github.com/unikraft/app-elfloader/pull/23,closed,251,0,10,1,0,0,2,1,"[{'name': 'enhancement'}, {'name': 'ci/merged'}]",2023-07-28 10:08:09+00:00,2023-08-11 16:14:00+00:00,1231551.0,"14 days, 6:05:51",[],"[{'commit_sha': '6cf7d7f4d45adfee34c12c85f4c04fdd61005c06', 'committer_username': 'i-Pear', 'committer_name': 'i.Pear', 'committer_email': 'i.pear@outlook.com', 'commit_date': datetime.datetime(2015, 12, 18, 11, 51, 2, tzinfo=datetime.timezone.utc)}]",i.Pear,16350121,i.pear@outlook.com,User,,70,,97,57
1443996780,feat: Binary syscall bypass through VDSO,"MUSL utilizes the `__syscall` macro to perform system calls. Syscalls with varying numbers of parameters are further dispatched to implementations like `__syscall1`, `__syscall2`, and so on. These implementations employ the `syscall` instruction for binary syscalls. To bypass binary syscalls, we extract the `__kernel_vsyscall` symbol from VDSO and replace the `syscall` instruction with a direct call to the kernel functions.

Note that during the initialization process of MUSL, certain syscalls will be used. However, at this point, the `__kernel_vsyscall` symbol has not yet been extracted. It's also possible that the kernel could not provide this interface. In such cases, the `__kernel_vsyscall` pointer remains at its default value of `NULL`, and MUSL will continue to use binary syscalls.

Since we do not support syscalls with cancellation points (syscall_cp), we merely map them to regular syscalls.

This should be used with `app-elfloader`, and only works for dynamic-linked applications. Testcases are also provided by the actual applications on the `app-elfloader`.",True,1,https://api.github.com/repos/unikraft/fork-musl/pulls/1,https://github.com/unikraft/fork-musl/pull/1,closed,103,24,2,1,0,1,1,1,[{'name': 'enhancement'}],2023-07-21 06:44:49+00:00,2023-08-17 05:18:41+00:00,2327632.0,"26 days, 22:33:52","[{'comment_id': 1289743366, 'comment_body': ""Can you please add in the commit message a brief description of the changes from this commit (e.g. why it's needed, what is changed). Thank you.\r\n\r\nAlso, an usage example / test scenario would be useful to be added in the PR description."", 'comment_created': datetime.datetime(2023, 8, 10, 8, 15, 23, tzinfo=datetime.timezone.utc), 'commenter': 'andraprs', 'type': 'User'}]","[{'commit_sha': 'a7b799353f57af23bd4a52fba9bec0dd3d1724f3', 'committer_username': 'i-Pear', 'committer_name': 'i.Pear', 'committer_email': 'i.pear@outlook.com', 'commit_date': datetime.datetime(2015, 12, 18, 11, 51, 2, tzinfo=datetime.timezone.utc)}]",i.Pear,16350121,i.pear@outlook.com,User,,70,,97,57
1443996749,feat: Binary syscall bypass through VDSO,"Glibc utilizes the `INTERNAL_SYSCALL` macro to perform system calls. Syscalls with varying numbers of parameters are further dispatched to implementations like `internal_syscall0`, `internal_syscall1`, and so on. These implementations employ the `syscall` instruction for binary syscalls. To bypass binary syscalls, we extract the `__kernel_vsyscall` symbol from VDSO and replace the `syscall` instruction with a direct call to the kernel functions.

Note that during the initialization process of glibc, certain syscalls will be used. However, at this point, the `__kernel_vsyscall` symbol has not yet been extracted. It's also possible that the kernel could not provide this interface. In such cases, the `__kernel_vsyscall` pointer remains at its default value of `NULL`, and glibc will continue to use binary syscalls.

Since we do not support syscalls with cancellation points (syscall_cp), we merely map them to regular syscalls.

This should be used with `app-elfloader`, and only works for dynamic-linked applications. Testcases are also provided by the actual applications on the `app-elfloader`.",True,1,https://api.github.com/repos/unikraft/fork-glibc/pulls/1,https://github.com/unikraft/fork-glibc/pull/1,closed,40,0,3,1,0,1,1,1,[{'name': 'enhancement'}],2023-07-21 06:44:46+00:00,2023-08-17 05:18:25+00:00,2327619.0,"26 days, 22:33:39","[{'comment_id': 1289742404, 'comment_body': ""Can you please add in the commit message a brief description of the changes from this commit (e.g. why it's needed, what is changed). Thank you.\r\n\r\nAlso, an usage example / test scenario would be useful to be added in the PR description."", 'comment_created': datetime.datetime(2023, 8, 10, 8, 14, 33, tzinfo=datetime.timezone.utc), 'commenter': 'andraprs', 'type': 'User'}]","[{'commit_sha': '0fb84b9af9b0c236076c6895c3d6dfe88a9e2904', 'committer_username': 'i-Pear', 'committer_name': 'i.Pear', 'committer_email': 'i.pear@outlook.com', 'commit_date': datetime.datetime(2015, 12, 18, 11, 51, 2, tzinfo=datetime.timezone.utc)}]",i.Pear,16350121,i.pear@outlook.com,User,,70,,97,57
1295572974,build/Makefile: Force update UK_CONFIG,"
### Prerequisite checklist

 - [x] Read the [contribution guidelines](https://unikraft.org/docs/contributing/) regarding submitting new changes to the project;
 - [x] Tested your changes against relevant architectures and platforms;
 - [x] Ran the [`checkpatch.pl`](https://github.com/unikraft/unikraft/blob/staging/support/scripts/checkpatch.pl) on your commit series before opening this PR;
 - [ ] Updated relevant documentation.

### Description of changes

The builder uses UK_CONFIG to generate files such as KCONFIG_AUTOHEADER in the build directory. When UK_CONFIG changes, these newly generated files will also be regenerated.

However, UK_CONFIG may not remain consistent across multiple builds, for example, in the following command sequence:
```
make C=.config_kvm-x86_64
make C=.config_linuxu-x86_64
make C=.config_kvm-x86_64
```

During the first two builds, the configuration files in the build directory will be regenerated. But when using the same configuration file as the first time in the third build, because .config_kvm-x86_64 is not a new version, the configuration files in the build directory will remain the version of linuxu, which will cause the build to fail.

When using kraftkit, similar issues can also be reproduced. Executing ""kraft build --arch x86_64"" twice, each time is in the order of linuxu, kvm, and xen. When building linuxu for the second time, the configuration files in the build directory are still the configuration of xen, which also causes the build to fail.

This patch forces UK_CONFIG to be recognized as updated, so that the configuration files in the build directory are always updated. It has been tested and can fix this issue.
",False,817,https://api.github.com/repos/unikraft/unikraft/pulls/817,https://github.com/unikraft/unikraft/pull/817,closed,2,0,1,1,1,0,2,1,"[{'name': 'topic/build'}, {'name': 'ci/merged'}]",2023-03-30 03:56:27+00:00,2023-04-27 11:40:33+00:00,2447046.0,"28 days, 7:44:06",[],"[{'commit_sha': '74a7ed7c6cb2ad384a7dab024cc875d077e0128c', 'committer_username': 'i-Pear', 'committer_name': 'i.Pear', 'committer_email': 'i.pear@outlook.com', 'commit_date': datetime.datetime(2015, 12, 18, 11, 51, 2, tzinfo=datetime.timezone.utc)}]",i.Pear,16350121,i.pear@outlook.com,User,,70,,97,57

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
181022316,unikraft,unikraft/unikraft,C,1532,2488,36,114,3286,283,7,111,"[{'id': 1554147668, 'number': 1132, 'closed': datetime.datetime(2023, 10, 14, 4, 44, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 12, 13, 23, 7, tzinfo=datetime.timezone.utc), 'time_taken': 141707.0, 'time_delta': '1 day, 15:21:47', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1517770829, 'number': 1096, 'closed': datetime.datetime(2023, 10, 3, 12, 26, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 15, 18, 33, 16, tzinfo=datetime.timezone.utc), 'time_taken': 1533177.0, 'time_delta': '17 days, 17:52:57', 'additions': 19, 'deletions': 0, 'state': 'closed'}, {'id': 1459954506, 'number': 1014, 'closed': datetime.datetime(2023, 8, 2, 15, 10, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 2, 15, 6, 18, tzinfo=datetime.timezone.utc), 'time_taken': 264.0, 'time_delta': '0:04:24', 'additions': 63, 'deletions': 1, 'state': 'closed'}, {'id': 1455681912, 'number': 1009, 'closed': datetime.datetime(2023, 10, 11, 6, 29, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 31, 7, 13, 29, tzinfo=datetime.timezone.utc), 'time_taken': 6218160.0, 'time_delta': '71 days, 23:16:00', 'additions': 29, 'deletions': 5, 'state': 'closed'}, {'id': 1453155372, 'number': 1007, 'closed': datetime.datetime(2023, 8, 2, 12, 8, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 28, 4, 0, 53, tzinfo=datetime.timezone.utc), 'time_taken': 461247.0, 'time_delta': '5 days, 8:07:27', 'additions': 18, 'deletions': 0, 'state': 'closed'}, {'id': 1448861383, 'number': 1004, 'closed': datetime.datetime(2023, 8, 7, 14, 19, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 25, 17, 34, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1111469.0, 'time_delta': '12 days, 20:44:29', 'additions': 55, 'deletions': 0, 'state': 'closed'}, {'id': 1385627082, 'number': 940, 'closed': datetime.datetime(2023, 6, 14, 14, 55, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 9, 7, 9, 11, tzinfo=datetime.timezone.utc), 'time_taken': 459974.0, 'time_delta': '5 days, 7:46:14', 'additions': 41, 'deletions': 0, 'state': 'closed'}, {'id': 1361685143, 'number': 905, 'closed': datetime.datetime(2023, 7, 28, 3, 55, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 23, 16, 0, 1, tzinfo=datetime.timezone.utc), 'time_taken': 5658934.0, 'time_delta': '65 days, 11:55:34', 'additions': 1427, 'deletions': 0, 'state': 'closed'}, {'id': 1295572974, 'number': 817, 'closed': datetime.datetime(2023, 4, 27, 11, 40, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 30, 3, 56, 27, tzinfo=datetime.timezone.utc), 'time_taken': 2447046.0, 'time_delta': '28 days, 7:44:06', 'additions': 2, 'deletions': 0, 'state': 'closed'}]"
342701964,app-elfloader,unikraft/app-elfloader,C,30,22,11,24,95,27,4,13,"[{'id': 1455674487, 'number': 24, 'closed': datetime.datetime(2023, 10, 12, 7, 50, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 31, 7, 7, 28, tzinfo=datetime.timezone.utc), 'time_taken': 6309802.0, 'time_delta': '73 days, 0:43:22', 'additions': 36, 'deletions': 9, 'state': 'closed'}, {'id': 1453576895, 'number': 23, 'closed': datetime.datetime(2023, 8, 11, 16, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 28, 10, 8, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1231551.0, 'time_delta': '14 days, 6:05:51', 'additions': 251, 'deletions': 0, 'state': 'closed'}, {'id': 1405499954, 'number': 19, 'closed': datetime.datetime(2023, 7, 20, 19, 27, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 23, 18, 57, 1, tzinfo=datetime.timezone.utc), 'time_taken': 2334648.0, 'time_delta': '27 days, 0:30:48', 'additions': 165, 'deletions': 0, 'state': 'closed'}]"
485632946,static-pie-apps,unikraft/static-pie-apps,C,40,7,10,6,23,77,1,33,"[{'id': 1296508963, 'number': 85, 'closed': datetime.datetime(2023, 4, 21, 11, 35, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 30, 16, 13, 54, tzinfo=datetime.timezone.utc), 'time_taken': 1884083.0, 'time_delta': '21 days, 19:21:23', 'additions': 83, 'deletions': 0, 'state': 'closed'}]"
625593341,dynamic-apps,unikraft/dynamic-apps,C++,36,6,6,26,64,36,2,15,"[{'id': 1448636379, 'number': 60, 'closed': None, 'created': datetime.datetime(2023, 7, 25, 15, 9, 5, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 895, 'deletions': 0, 'state': 'open'}, {'id': 1367327298, 'number': 17, 'closed': datetime.datetime(2023, 9, 9, 13, 15, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 27, 13, 40, 26, tzinfo=datetime.timezone.utc), 'time_taken': 9070506.0, 'time_delta': '104 days, 23:35:06', 'additions': 0, 'deletions': 0, 'state': 'closed'}]"
669006386,fork-musl,unikraft/fork-musl,C,0,1,1,122,4835,0,3,0,"[{'id': 1443996780, 'number': 1, 'closed': datetime.datetime(2023, 8, 17, 5, 18, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 21, 6, 44, 49, tzinfo=datetime.timezone.utc), 'time_taken': 2327632.0, 'time_delta': '26 days, 22:33:52', 'additions': 103, 'deletions': 24, 'state': 'closed'}]"
669006290,fork-glibc,unikraft/fork-glibc,C,0,0,1,753,39578,0,3,0,"[{'id': 1443996749, 'number': 1, 'closed': datetime.datetime(2023, 8, 17, 5, 18, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 21, 6, 44, 46, tzinfo=datetime.timezone.utc), 'time_taken': 2327619.0, 'time_delta': '26 days, 22:33:39', 'additions': 40, 'deletions': 0, 'state': 'closed'}]"
