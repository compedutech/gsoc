pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
690059061,ts: Convert util module to TypeScript.,,False,19247,https://api.github.com/repos/zulip/zulip/pulls/19247,https://github.com/zulip/zulip/pull/19247,closed,123,48,5,2,7,17,2,0,"[{'name': 'size: XL'}, {'name': 'has conflicts'}]",2021-07-14 16:29:19+00:00,2023-03-27 18:27:13+00:00,53661474.0,"621 days, 1:57:54","[{'comment_id': 669863569, 'comment_body': 'This looks like a mistake :)', 'comment_created': datetime.datetime(2021, 7, 14, 18, 42, 2, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 669866476, 'comment_body': 'Why the change from `.match` to `.exec`?', 'comment_created': datetime.datetime(2021, 7, 14, 18, 46, 45, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 669944767, 'comment_body': 'We could make this a required argument, and replace the callers that don’t provide it with [`_.sortedIndex`](https://lodash.com/docs/4.17.15#sortedIndex).\r\n\r\n(I would love to launch the [remaining caller](https://github.com/zulip/zulip/blob/a5eb3abc52c9e0c4efd8d37d2627e9c315191518/static/js/message_list_data.js#L342-L362) into the sun, because what the actual frick is going on there, but that’s probably a larger project. Opened #19253.)', 'comment_created': datetime.datetime(2021, 7, 14, 20, 51, 20, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 669947596, 'comment_body': 'These should be marked optional, right?', 'comment_created': datetime.datetime(2021, 7, 14, 20, 55, 36, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 669948546, 'comment_body': 'This could be rewritten without casts with a structure like\r\n\r\n```ts\r\nif (a.type === ""private"" && b.type === ""private"") {\r\n    …\r\n} else if (a.type === ""stream"" && b.type === ""stream"") {\r\n    …\r\n} else {\r\n    return false;\r\n}', 'comment_created': datetime.datetime(2021, 7, 14, 20, 56, 57, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 669951427, 'comment_body': 'Method chaining would be less noisy:\r\n\r\n```ts\r\nreturn recipients\r\n    .split("","")\r\n    .map((s) => s.trim().toLowerCase())\r\n    .filter((s) => s.length > 0)\r\n    .sort()\r\n    .join("","");\r\n```', 'comment_created': datetime.datetime(2021, 7, 14, 21, 1, 36, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 669959915, 'comment_body': 'The previous implementation works here without a non-null assertion, if you replace `unassigned_value_sentinel` with a `Symbol`:\r\n\r\n```ts\r\nconst unassigned_value_sentinel = Symbol(""unassigned_value_sentinel"");\r\nexport class CachedValue<T> {\r\n    _value: T | typeof unassigned_value_sentinel = unassigned_value_sentinel;\r\n    …\r\n}\r\n```\r\n\r\nThis is marginally more optimal since that `reset()` really discards the reference and makes it available for garbage collection.', 'comment_created': datetime.datetime(2021, 7, 14, 21, 15, 59, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 669965604, 'comment_body': 'We should start an `UpdateMessageEvent` type for the `get_edit_event_*` functions ([schema](https://zulip.com/api/get-events#update_message)).', 'comment_created': datetime.datetime(2021, 7, 14, 21, 26, 4, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 669967387, 'comment_body': 'I think we want `title = url.href` above instead of `.toString()` here.', 'comment_created': datetime.datetime(2021, 7, 14, 21, 29, 8, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 669989161, 'comment_body': 'It seems to me that `subject` is the required one and `topic` only exists if we’ve run `convert_message_topic`?\r\n\r\nWe really should finish this migration, or at least come up with a better way to deal with the intermediate state. Perhaps we could `export const TOPIC_NAME = ""subject"" as const` somewhere and use `message[TOPIC_NAME]`, like we do in the backend, rather than putting up with pervasive uncertainty about what our fields are named.', 'comment_created': datetime.datetime(2021, 7, 14, 22, 11, 55, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 670029644, 'comment_body': ""Yeah, agreed -- I don't remember what's left with that migration, but maybe worth starting a thread on what we need to do to finish it.  "", 'comment_created': datetime.datetime(2021, 7, 14, 23, 56, 40, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 672449497, 'comment_body': 'This is because of the [prefer-regexp-exec lint rule](https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/prefer-regexp-exec.md) for TypeScript files. Added a note about this in the commit message.', 'comment_created': datetime.datetime(2021, 7, 19, 16, 25, 24, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 672449540, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 19, 16, 25, 28, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 672449645, 'comment_body': ""Does the `util: Don't depend on msg.topic to be defined.` commit look good? I can also try to attempt to do this for all the modules in a separate PR before we integrate this if needed or we can gradually do this change as we convert modules."", 'comment_created': datetime.datetime(2021, 7, 19, 16, 25, 37, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 672671696, 'comment_body': 'The idea with `TOPIC_NAME` would be to remove `convert_message_topic` and all of the conditional logic that tries to detect which of `topic` or `subject` is present at runtime. It would just always be `subject` and always be accessed via `[TOPIC_NAME]`. (Except, I guess, in locally stored drafts, where we’re already doomed.)\r\n\r\nThis is worth doing as a separate PR before this.', 'comment_created': datetime.datetime(2021, 7, 19, 22, 22, 40, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 672714959, 'comment_body': ""Yeah, I got the idea already, it can't be done here though because I think other places still pass message objects where the `topic` property is updated instead of the `subject` (not fully sure)? I will do another PR for this then. "", 'comment_created': datetime.datetime(2021, 7, 20, 0, 9, 56, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 677037403, 'comment_body': 'OK.', 'comment_created': datetime.datetime(2021, 7, 27, 0, 49, 45, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': 'deb783697b4e164d364718e1fbf869ae87ed814a', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55de829e93e8a2660a430969a6610333066f9452', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}]",Priyank Patel,23620441,,User,,14,,3,23
649560005,Convert most modules with zero module imports to typescript.,"The modules that are converted are ""utility"" modules that don't depend on other modules. The remaining ones are:
- `schema.js`: I think for this one, I am probably going to refactor the code so that we can use a typescript type guard.
- For `keydown_util.js`, I need to look into one minor detail.
- Rest of them are webpack related files that we can hold off on for now.

**Testing plan:** Lint, node tests, and using `git grep` occasionally to verify the types.",True,18566,https://api.github.com/repos/zulip/zulip/pulls/18566,https://github.com/zulip/zulip/pull/18566,closed,45,104,7,6,1,4,1,0,[{'name': 'size: XL'}],2021-05-21 00:09:34+00:00,2021-05-21 23:54:17+00:00,85483.0,23:44:43,"[{'comment_id': 636559932, 'comment_body': 'These are also unused.', 'comment_created': datetime.datetime(2021, 5, 21, 0, 35, 47, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 636562226, 'comment_body': 'I suspect we’ll generally be happier inlining types that are so specific to a single function’s calling convention:\r\n\r\n```ts\r\nexport function vanilla_match(opts: {\r\n    val: string;\r\n    search_terms: string[];\r\n}): boolean {\r\n```\r\n\r\nso that\r\n\r\n* we can look at a function and see immediately how to call it, without referring to an auxiliary type;\r\n* we don’t have to spend effort coming up with names for these auxiliary types;\r\n* we reduce the activation energy for future refactors that change the calling convention.', 'comment_created': datetime.datetime(2021, 5, 21, 0, 43, 48, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 636579610, 'comment_body': 'Updated to remove these methods as well.', 'comment_created': datetime.datetime(2021, 5, 21, 1, 43, 45, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 636579872, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 5, 21, 1, 44, 39, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}]","[{'commit_sha': '3c84a883c50b56b684e15a57624811d8857a657a', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1325b2570432b5abaa7f11229cbab3097b437011', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e18377162c84d277230a948b4adecd9b0c06ed2c', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cafe2b4d11efe3dfdc5fdbae095bda1bcae59a18', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b46ec0e5fe64ec80fd1d163064295beab2f4f62', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4524467e06f828bd783a003bc1ecc0ec708394b', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}]",Priyank Patel,23620441,,User,,14,,3,23
652728470,Convert keydown_util to TypeScript.,**Testing Plan**: Manually tested the last commit by trying out all keys in the settings panel since it uses all the keys you can specify.,True,18595,https://api.github.com/repos/zulip/zulip/pulls/18595,https://github.com/zulip/zulip/pull/18595,closed,67,74,11,2,3,4,1,0,[{'name': 'size: XL'}],2021-05-25 19:20:52+00:00,2021-05-28 06:33:38+00:00,213166.0,"2 days, 11:12:46","[{'comment_id': 639127463, 'comment_body': ""Do we need a function, or could we just do `if (!(key in keys))`?  I guess it's kinda awkward in JS because of how `!` scoping works."", 'comment_created': datetime.datetime(2021, 5, 25, 19, 34, 17, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 639131390, 'comment_body': ""I think this migration is a good idea; we also will want to do it in `hotkey.js` and everywhere else that we do `e.keyCode` in the codebase, so maybe worth forking off a separate series of PRs for that migration in parallel with your typescript work (I'd do one commit per smaller module, and then think hard about doing `hotkey.js`).\r\n\r\nThe one thing we need to be really careful about in said migration is altKey/ctrlKey/shiftKey handling -- while this module doesn't use it, the semantics of what happens when you type `R` via the `Shift+R` keys are different.  \r\n\r\nI think the semantics changes will end up fixing https://github.com/zulip/zulip/issues/18495 if we're thoughtful.\r\n"", 'comment_created': datetime.datetime(2021, 5, 25, 19, 40, 51, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 639134658, 'comment_body': ""AFAIK yes, we need a function here. I tried that and `Object.hasOwnProperty` checks and it doesn't work. Normally, we wouldn't need a function for general types like a `string` or a `number`."", 'comment_created': datetime.datetime(2021, 5, 25, 19, 46, 42, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 639329552, 'comment_body': '```suggestion\r\n    elem: JQuery;\r\n```\r\n\r\nThis type is global and doesn’t need to be imported, but it does need an `.eslintrc.json` exemption. (I’m not totally happy about it being global, but I’m okay with this exemption because TypeScript should catch any incorrect attempt to access `JQuery` as a value rather than a type.)\r\n\r\n```diff\r\n@@ -124,12 +124,15 @@\r\n         {\r\n             ""files"": [""**/*.ts""],\r\n             ""extends"": [""plugin:@typescript-eslint/recommended"", ""plugin:import/typescript""],\r\n             ""parserOptions"": {\r\n                 ""project"": ""tsconfig.json""\r\n             },\r\n+            ""globals"": {\r\n+                ""JQuery"": false\r\n+            },\r\n             ""rules"": {\r\n                 // Disable base rule to avoid conflict\r\n                 ""no-duplicate-imports"": ""off"",\r\n                 ""no-unused-vars"": ""off"",\r\n                 ""no-useless-constructor"": ""off"",\r\n \r\n```', 'comment_created': datetime.datetime(2021, 5, 26, 0, 56, 58, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}]","[{'commit_sha': '6ab66ea17ac8b75f34259f94d606637e0b6780ae', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7999d52400c843ef732f9d600b2ccae070947d7f', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}]",Priyank Patel,23620441,,User,,14,,3,23
669739568,"Convert page_params, i18n, common, ui_report, and blueslip modules to TS.","**Testing plan:** Made sure types were correct by using `git grep` where needed.



",True,18840,https://api.github.com/repos/zulip/zulip/pulls/18840,https://github.com/zulip/zulip/pull/18840,closed,169,98,12,12,3,29,1,0,[{'name': 'size: XL'}],2021-06-14 17:17:11+00:00,2021-06-22 16:09:37+00:00,687146.0,"7 days, 22:52:26","[{'comment_id': 651345252, 'comment_body': 'This is a boolean.', 'comment_created': datetime.datetime(2021, 6, 14, 23, 35, 50, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 651348675, 'comment_body': 'Some numbers are falsy, so be explicit: `last_report_time !== undefined`.', 'comment_created': datetime.datetime(2021, 6, 14, 23, 45, 59, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 651350216, 'comment_body': 'It cannot simultaneously be true that `originalEvent` must be an `ErrorEvent` and that applying the `?.` operator makes sense (it would only make sense if `originalEvent` can be `undefined` or `null`.', 'comment_created': datetime.datetime(2021, 6, 14, 23, 50, 52, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 651352148, 'comment_body': '`replace_key !== undefined`', 'comment_created': datetime.datetime(2021, 6, 14, 23, 56, 9, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 651353914, 'comment_body': 'This isn’t a jQuery object, so call it `element`, not `$el`.\r\n\r\nThe generic argument of `ReferenceElement` is the type of `element._tippy.props`, which doesn’t seem to be anything like an `HTMLElement`.', 'comment_created': datetime.datetime(2021, 6, 15, 0, 1, 11, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 651354903, 'comment_body': 'We should maybe change these globals to module exports and re-export them from `zulip_test`.', 'comment_created': datetime.datetime(2021, 6, 15, 0, 3, 56, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 651357056, 'comment_body': 'FormatJS types this `Record<string, PrimitiveType | FormatXMLElementFn<string, string>>`.', 'comment_created': datetime.datetime(2021, 6, 15, 0, 10, 41, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 651358027, 'comment_body': 'If we’re fixing this, we should just do it numerically: `xhr && xhr.status >= 400 && xhr.status < 500`.', 'comment_created': datetime.datetime(2021, 6, 15, 0, 13, 16, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 651360155, 'comment_body': 'It seems wrong to pass an `HTMLElement` to `.html()`—why does TypeScript allow this?\r\n\r\nI think this was supposed to be `btn.closest(""td"").empty().append($(…).addClass(…).text(…))`.', 'comment_created': datetime.datetime(2021, 6, 15, 0, 19, 43, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 651360877, 'comment_body': 'Use raw strings (`r""…""`) for regexes.', 'comment_created': datetime.datetime(2021, 6, 15, 0, 21, 51, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 652074447, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 15, 19, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 652075834, 'comment_body': ""I think the jQuery types are correct there (unfortunately) -- passing `HTMLElement` and even a `JQuery` object that is not in types work as expected when I tested both. What I didn't know was that this isn't a documented feature. I updated this in a new prep commit."", 'comment_created': datetime.datetime(2021, 6, 15, 19, 6, 49, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 652076046, 'comment_body': 'Updated in the prep commit.', 'comment_created': datetime.datetime(2021, 6, 15, 19, 7, 9, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 652077048, 'comment_body': ""Updated, though do you feel strongly this changed? I feel like it's fine as it was before."", 'comment_created': datetime.datetime(2021, 6, 15, 19, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 652077409, 'comment_body': 'I will do a follow-up PR for this change. Is that fine?', 'comment_created': datetime.datetime(2021, 6, 15, 19, 9, 8, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 652078180, 'comment_body': 'Changed the variable name and updated it to just use `ReferenceElement`.', 'comment_created': datetime.datetime(2021, 6, 15, 19, 10, 23, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 652078741, 'comment_body': 'Added this explicit check for this and another one mentioned above in the prep commit.', 'comment_created': datetime.datetime(2021, 6, 15, 19, 11, 18, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 652078985, 'comment_body': 'Oops, fixed.', 'comment_created': datetime.datetime(2021, 6, 15, 19, 11, 42, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 652080169, 'comment_body': ""I totally forgot to follow up on this. I changed this to use an `instanceof ErrorEvent` check along with checking if it's undefined` or `null`. Can you check now (the change is in the last commit.)"", 'comment_created': datetime.datetime(2021, 6, 15, 19, 13, 43, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 652941716, 'comment_body': 'Use `??` rather than `||` so we don’t turn zeros into empty strings.\r\n\r\nOr better, `_.escape(value?.toString())` seems to work.', 'comment_created': datetime.datetime(2021, 6, 16, 18, 23, 3, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 652945246, 'comment_body': 'We still need this check for `BlueslipError` to avoid duplicate reports from `blueslip.error()` in development.\r\n\r\n(Or we could modify `blueslip.error` so it doesn’t `report_error` in development itself. The `BlueslipError` class predates this `error` event handler and probably isn’t needed anymore.)', 'comment_created': datetime.datetime(2021, 6, 16, 18, 28, 19, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 652952400, 'comment_body': 'We definitely need to accept numbers, for example. And in general, we need `$t_html` to use the same API as `intl.formatMessage` so it can be used with FormatJS message extraction, so I do think it’s better for our types to reflect that.', 'comment_created': datetime.datetime(2021, 6, 16, 18, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 653810710, 'comment_body': 'Changed to `_.escape(value?.toString())`.', 'comment_created': datetime.datetime(2021, 6, 17, 17, 56, 39, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 653811562, 'comment_body': 'I went with a simple fix and added back the `ex instanceof BlueslipError` check.', 'comment_created': datetime.datetime(2021, 6, 17, 17, 57, 59, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 654037754, 'comment_body': '`if (!(originalEvent instanceof ErrorEvent))` suffices, since `instanceof ErrorEvent` rules out `undefined`.', 'comment_created': datetime.datetime(2021, 6, 17, 23, 2, 23, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 654039616, 'comment_body': 'This can be done without the uncertainty of optional chaining (which makes it appear as if `setContent` might not get called), since `tippy()` returns the `Instance` too:\r\n\r\n```js\r\n        const tippy_instance = element._tippy ?? tippy(element);\r\n        tippy_instance.setContent(label);\r\n```', 'comment_created': datetime.datetime(2021, 6, 17, 23, 7, 58, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 654633305, 'comment_body': 'Removed!', 'comment_created': datetime.datetime(2021, 6, 18, 19, 14, 18, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 654633690, 'comment_body': 'Used this approach in the `refactor: Use variables to get TypeScript type narrowing.` commit (plus test changes due to this).', 'comment_created': datetime.datetime(2021, 6, 18, 19, 15, 6, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 655678211, 'comment_body': 'This change needs to be moved back into “refactor: Use variables to get TypeScript type narrowing”.', 'comment_created': datetime.datetime(2021, 6, 21, 20, 21, 3, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}]","[{'commit_sha': '0912ae1d6bd23af975ad8fd279f1851375409414', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6301d300af657db51b5c9859c004ba210b12891c', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ddba5a5869c33aed335cf358cd17e9d4d7ffb46', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19d2867ed395eaef352a9a4c7ec7461723ef6a33', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e62742de288bd5d476c279cc5576dfe1ccf436c', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '512f74d194877fd7010344fbbf0dd1aa94c188a7', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0dbcd731562e5eaffa4f9ee9afe78475d6ef0bf', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18da6fd3ad01570c818f112a7bd606586aef8e34', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ad6f29587e1ec93a7e2fdf618480d1a21324d49', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07315a897a618c8cbe20daa56ff94957879d4367', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89ba41f5687caf5d3499b0ce62c4e27b537b0894', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b30ed9f7271c1f38cac2208856d5b920166697c9', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}]",Priyank Patel,23620441,,User,,14,,3,23
674765821,Convert more modules to TypeScript.,,True,18932,https://api.github.com/repos/zulip/zulip/pulls/18932,https://github.com/zulip/zulip/pull/18932,closed,26,24,7,6,1,0,1,0,[{'name': 'size: M'}],2021-06-21 18:03:30+00:00,2021-06-22 16:14:09+00:00,79839.0,22:10:39,[],"[{'commit_sha': 'f5852e6e5a9d1fc1dde9af838d6a3de000b4e990', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '105f43223707b2896b4d4706c6c87b5844e507ac', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4f7dea8d5782ffae847b7d93e44d5300cad8cdb', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30fbf7b1a77c07d091442d0f74f42a26e94d2f8b', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62cc2e3c0c760e38471a98b95b31b93c866db3b1', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d7314963ea45989423a1cb3ae7c6e42a285b955', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}]",Priyank Patel,23620441,,User,,14,,3,23
678091145,"Convert padded_widget, csrf, loading, components, and ui_util to TS.",,True,19010,https://api.github.com/repos/zulip/zulip/pulls/19010,https://github.com/zulip/zulip/pull/19010,closed,88,33,10,6,2,17,1,0,[{'name': 'size: XL'}],2021-06-25 18:03:35+00:00,2021-07-06 00:04:06+00:00,885631.0,"10 days, 6:00:31","[{'comment_id': 659019518, 'comment_body': 'Why not use the same method syntax here (`maybe_go_left(): boolean`)?', 'comment_created': datetime.datetime(2021, 6, 25, 20, 28, 23, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 659019568, 'comment_body': 'We’ll want to name and export this return type as `Toggle`, since it acts as a pseudo-class, and gets stored in state variables in `info_overlay.js`, `settings_toggle.js`, `subs.js`.\r\n\r\n(At some point, it’d be good to convert it to a real class too.)', 'comment_created': datetime.datetime(2021, 6, 25, 20, 28, 29, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 659024071, 'comment_body': 'Returns `this`, not `void`, and `opts` isn’t a good name for a `string`.\r\n\r\n```suggestion\r\n    tab(action?: ""show""): this; // From static/third/bootstrap\r\n```\r\n\r\n(Based on `@types/bootstrap`, which we could consider pulling in instead.)', 'comment_created': datetime.datetime(2021, 6, 25, 20, 38, 18, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 659025084, 'comment_body': 'TypeScript already knows about `createTextRange` on `HTMLBodyElement`, `HTMLButtonElement`, `HTMLInputElement`, and `HTMLTextAreaElement`. You probably just need a type check somewhere.', 'comment_created': datetime.datetime(2021, 6, 25, 20, 40, 35, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 659027852, 'comment_body': 'Oh I see, it was removed in microsoft/TypeScript@b0584b58fa07ee8c06e6d6f0f1bce2d4c37c7640. Anyway, we don’t support IE anymore, to say nothing of IE 8, so we can remove this path.\r\n\r\n#19014', 'comment_created': datetime.datetime(2021, 6, 25, 20, 47, 1, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 659083001, 'comment_body': 'Merged #19014 :)', 'comment_created': datetime.datetime(2021, 6, 25, 23, 35, 1, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 659214917, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2021, 6, 26, 19, 30, 22, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 659214940, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 26, 19, 30, 35, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 659215139, 'comment_body': ""Changed. It would be great if we can just use `@types/bootstrap` here, but don't you think that the types might have changed for most functions? I couldn't find v2.3.2 in the npm package."", 'comment_created': datetime.datetime(2021, 6, 26, 19, 32, 38, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 659215153, 'comment_body': 'Removed after rebase.', 'comment_created': datetime.datetime(2021, 6, 26, 19, 32, 47, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 659409003, 'comment_body': 'I wonder for things like this if we want to instead be writing an `assert` type statement -- basically if we consider it a bug in the code to call this without those properties set.  ', 'comment_created': datetime.datetime(2021, 6, 28, 1, 22, 47, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 659950637, 'comment_body': ""I don't think it is a bug if this function is called without those properties set for two reasons. The first is that the `csrf_token` is never going to be `undefined`  because we check that it is not undefined before we set up this `beforeSend` handler and never modify it afterward. TypeScript intentionally makes us double-check here because it _can be_ modified outside this handler. For the `settings.url` case, I don't know why it would be undefined but, in any case, I think the handler is supposed to be called for any URL we request for so this is fine."", 'comment_created': datetime.datetime(2021, 6, 28, 16, 47, 10, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 660164601, 'comment_body': 'OK; maybe worth a comment noting that both of these situations should never occur?  ', 'comment_created': datetime.datetime(2021, 6, 28, 22, 49, 43, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 662605272, 'comment_body': 'There seems to have been a miscommunication here. If our understanding is that some condition should not occur, that means it *is* a bug for that condition to occur, and so we should throw an error if we encounter that condition.\r\n\r\nAlso, since `settings.url` is `string | undefined`, testing it for truthiness is ambiguous; it makes it unclear whether you’re testing for `""""` or for `undefined`. Better to be explicit.', 'comment_created': datetime.datetime(2021, 7, 1, 21, 34, 20, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 663155863, 'comment_body': 'OK, I added a `blueslip.error` here.', 'comment_created': datetime.datetime(2021, 7, 2, 17, 22, 53, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 663188915, 'comment_body': ""I think we want `throw new Error` here instead, since that prevents executing the following code (which can't work without these properties).\r\n\r\n`blueslip.error` just logs an error but proceeds from there as normal."", 'comment_created': datetime.datetime(2021, 7, 2, 18, 35, 41, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 663263951, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 2, 22, 1, 55, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}]","[{'commit_sha': '7a9099666a4e5eab38bdd2f22d05b151b4cbbf35', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd79eab0d1638d3655b501a9257779ec5289de418', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5222f8018637051b697a6569a8c818a2ef420cb8', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25c7044cc680a53659058aaf1fb9ae023a94f72c', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57ea7a01f46eba5d0c9f0d40c3ff9144893a9450', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bda9f323b7973b397ee9e08cb0a512a9e1a490f', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}]",Priyank Patel,23620441,,User,,14,,3,23
686186858,"Convert message_parser, password_quality, watchdog, composer_error and upload_widget  to TS",,True,19178,https://api.github.com/repos/zulip/zulip/pulls/19178,https://github.com/zulip/zulip/pull/19178,closed,66,50,9,5,1,11,0,0,[],2021-07-08 17:06:27+00:00,2021-07-09 19:42:32+00:00,95765.0,"1 day, 2:36:05","[{'comment_id': 666469527, 'comment_body': 'I guess this is a workaround until we have a `Message` type for the objects in `message_store.js`?\r\n\r\nMaybe we should mark those with comments of the form `# TODO: need types from message_store.js`?', 'comment_created': datetime.datetime(2021, 7, 8, 19, 40, 10, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 666470524, 'comment_body': 'Is is better to include `:string` here to make sure the type is explicit?', 'comment_created': datetime.datetime(2021, 7, 8, 19, 41, 54, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 666507027, 'comment_body': 'Seems clearer to write this as an optional parameter `bad_input?: JQuery`.', 'comment_created': datetime.datetime(2021, 7, 8, 20, 46, 3, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 666509648, 'comment_body': 'That would trip [`@typescript-eslint/no-inferrable-types`](https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-inferrable-types.md) (from the `plugin:@typescript-eslint/recommended` config). I’m fine with this elision.', 'comment_created': datetime.datetime(2021, 7, 8, 20, 50, 25, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 666511916, 'comment_body': 'Consider changing these `null`s to `undefined` and using optional parameter syntax.', 'comment_created': datetime.datetime(2021, 7, 8, 20, 54, 20, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 666514584, 'comment_body': 'Use real parameter names: based on `upload_realm_logo_or_icon`, these are `file_input: JQuery<HTMLInputElement>, night: boolean | null, icon: boolean`.', 'comment_created': datetime.datetime(2021, 7, 8, 20, 58, 58, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 666518682, 'comment_body': 'We probably want to at least write `type Message = {content: string}` that we can later expand and move as appropriate.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 6, 22, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 667105060, 'comment_body': 'For now, I added a type for this with the comment about moving it to `message_store`. I think we should add a temporary `types.ts` module and move this there. Another option is `global.d.ts`, however, we would need to add it to eslint globals if we want to do this.', 'comment_created': datetime.datetime(2021, 7, 9, 17, 25, 39, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 667105400, 'comment_body': 'Fixed this and another instance. ', 'comment_created': datetime.datetime(2021, 7, 9, 17, 26, 19, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 667105482, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 9, 17, 26, 29, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 667105601, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 9, 17, 26, 40, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}]","[{'commit_sha': 'a31c2830bfb243c3d633e83b4eec66e5b31c14e9', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd828c40191d67e49c54dc20a364758980580cd0b', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '556b1c5ce34438ffcad1771672e139093cab8621', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f22ba2bf64356a693ac83a9245203f84f7fa4749', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1ac4fc1535ef6e991b6dbdd27c763a44cd60237', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}]",Priyank Patel,23620441,,User,,14,,3,23
698920657,"ts: Convert settings_config, settings_data modules to TypeScript.",,True,19419,https://api.github.com/repos/zulip/zulip/pulls/19419,https://github.com/zulip/zulip/pull/19419,closed,120,27,5,2,2,5,1,0,[{'name': 'size: XL'}],2021-07-28 18:23:40+00:00,2021-07-29 18:30:19+00:00,86799.0,"1 day, 0:06:39","[{'comment_id': 678581208, 'comment_body': 'Maybe NotificationSettingCheckbox, since these are all booleans?', 'comment_created': datetime.datetime(2021, 7, 28, 19, 10, 12, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 678581538, 'comment_body': 'Also, would it make sense to declare this as an actual type, rather than an `interface`, and then create objects of that type in the functions below?  ', 'comment_created': datetime.datetime(2021, 7, 28, 19, 10, 42, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 679352065, 'comment_body': ""Renamed and changed to use a type (`type NotificationSettingCheckbox = ...`). In this case, it doesn't matter if we use `type` or `interface` they both do the same thing. "", 'comment_created': datetime.datetime(2021, 7, 29, 17, 31, 15, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 679353167, 'comment_body': 'Here is the [typescript docs](https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#differences-between-type-aliases-and-interfaces) that explains the difference between the two.', 'comment_created': datetime.datetime(2021, 7, 29, 17, 32, 53, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 679390938, 'comment_body': 'Yeah, I think Type seems better for this.', 'comment_created': datetime.datetime(2021, 7, 29, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '5d0e3013aaf0f3af11c5ccb4b149477d3f9867f5', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e9d6a9624ccf92598501bda1e9ca6f897c29d2c', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}]",Priyank Patel,23620441,,User,,14,,3,23
703751728,"ts: Convert timerender, sub_store module to TypeScript.",,True,19504,https://api.github.com/repos/zulip/zulip/pulls/19504,https://github.com/zulip/zulip/pull/19504,closed,133,68,7,2,1,12,1,0,[{'name': 'size: XL'}],2021-08-04 17:18:08+00:00,2021-09-16 00:23:36+00:00,3654328.0,"42 days, 7:05:28","[{'comment_id': 686278254, 'comment_body': 'Might as well skip the array.\r\n\r\n```ts\r\n        elem.append(\r\n            \'<i class=""date-direction fa fa-caret-up""></i>\',\r\n            _.escape(rendered_time_above.time_str),\r\n            \'<hr class=""date-line"">\',\r\n            \'<i class=""date-direction fa fa-caret-down""></i>\',\r\n            _.escape(rendered_time.time_str),\r\n        );\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 19, 55, 27, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 686285780, 'comment_body': 'This should be [100, 200, 300, 400, or 600](https://github.com/zulip/zulip/blob/c99c423c81e5d8737011910a47acbce6066d5312/zerver/models.py#L1508-L1512).\r\n\r\n', 'comment_created': datetime.datetime(2021, 8, 10, 20, 7, 30, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 686287112, 'comment_body': 'Comparing with [zerver/lib/event_schema.py](https://github.com/zulip/zulip/blob/c99c423c81e5d8737011910a47acbce6066d5312/zerver/lib/event_schema.py#L84), this can apparently be `null`.', 'comment_created': datetime.datetime(2021, 8, 10, 20, 9, 35, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 687071747, 'comment_body': 'Sure.', 'comment_created': datetime.datetime(2021, 8, 11, 18, 23, 30, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 687071770, 'comment_body': 'These should be just `20 | 50` based on the [`Subscription` model](https://github.com/zulip/zulip/blob/c99c423c81e5d8737011910a47acbce6066d5312/zerver/models.py#L2934-L2940). I think you mistakenly got these values from `UserProfile` model instead.', 'comment_created': datetime.datetime(2021, 8, 11, 18, 23, 32, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 687071792, 'comment_body': 'Yep, fixed.', 'comment_created': datetime.datetime(2021, 8, 11, 18, 23, 34, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 687103707, 'comment_body': 'Should be `UpdateEntry`—this is not the type of the list.', 'comment_created': datetime.datetime(2021, 8, 11, 19, 12, 11, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 687123469, 'comment_body': 'Do we want to split this into a stream type and a subscription type, mirroring [`event_schema`](https://github.com/zulip/zulip/blob/fc9e5f5187cebb8126eb94c708c28183f31fe106/zerver/lib/event_schema.py#L50-L85)?\r\n\r\n```js\r\ntype Stream = {\r\n    description: string;\r\n    …\r\n};\r\n\r\ntype StreamSubscription = Stream & {\r\n    audible_notifications: boolean | null;\r\n    …\r\n};\r\n```\r\n', 'comment_created': datetime.datetime(2021, 8, 11, 19, 44, 29, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 687143423, 'comment_body': 'Oh, right.\r\n\r\nShould we make an `enum` or `const enum` for this (and `stream_post_policy`)?', 'comment_created': datetime.datetime(2021, 8, 11, 20, 4, 29, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 688012084, 'comment_body': 'Yeah, `const enum` sounds good. I also had to upgrade `@babel/preset-typescript` to get support for constant enums.', 'comment_created': datetime.datetime(2021, 8, 12, 19, 7, 7, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 688012182, 'comment_body': 'Renamed.', 'comment_created': datetime.datetime(2021, 8, 12, 19, 7, 17, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 688012279, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 12, 19, 7, 26, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}]","[{'commit_sha': '0d91472c642587041c98736479b9d7a92d72fb5f', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '397821660f2440c04a4db8886d938398ac1d573a', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}]",Priyank Patel,23620441,,User,,14,,3,23
701696037,ts: Convert user_groups module to TypeScript.,,True,19463,https://api.github.com/repos/zulip/zulip/pulls/19463,https://github.com/zulip/zulip/pull/19463,closed,91,42,7,2,5,21,1,0,[{'name': 'size: XL'}],2021-08-02 18:38:50+00:00,2021-09-16 00:11:13+00:00,3821543.0,"44 days, 5:32:23","[{'comment_id': 681227805, 'comment_body': ""Maybe we should start writing these typescript TODOs as `TODO/typescript: Move ...` so that it's easy to grep for them?  We've used that convention in a few places."", 'comment_created': datetime.datetime(2021, 8, 2, 19, 47, 35, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 681228435, 'comment_body': ""Let's at least add a comment that (1) this function is a bad pattern and (2) this is used in pill contexts where the item should be a union of User, UserGroup, Stream."", 'comment_created': datetime.datetime(2021, 8, 2, 19, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 681382528, 'comment_body': '`Updat` is misspelled.', 'comment_created': datetime.datetime(2021, 8, 3, 2, 11, 39, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 681385975, 'comment_body': 'We should *annotate* it as accepting `User | UserGroup | Stream`, not just comment it. It would be unsound to call `is_user_group({members: ""foo""})`, and we shouldn’t allow that to type check.', 'comment_created': datetime.datetime(2021, 8, 3, 2, 22, 35, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 681388161, 'comment_body': 'Can we just make this error fatal, and have the one caller who wants `suppress_errors` catch the exception? The callers who aren’t expecting `undefined` were going to crash anyway when they try to access, e.g., `group.name`.\r\n\r\nThen this can return `UserGroup` and we don’t need to add separate error messages at each call site.', 'comment_created': datetime.datetime(2021, 8, 3, 2, 29, 36, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 681963387, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 3, 17, 30, 28, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 681963414, 'comment_body': 'Annotated `item` as `User | UserGroup | Stream`.', 'comment_created': datetime.datetime(2021, 8, 3, 17, 30, 30, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 681963438, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2021, 8, 3, 17, 30, 32, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 681963473, 'comment_body': 'Made this error fatal.', 'comment_created': datetime.datetime(2021, 8, 3, 17, 30, 34, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 681967540, 'comment_body': 'This wfm.  @m-e-l-u-h-a-n can help with any refactoring of that form.', 'comment_created': datetime.datetime(2021, 8, 3, 17, 36, 32, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 682455852, 'comment_body': 'These should be stubbed as `never` until we have something to put here, again so we don’t unsoundly allow `is_user_group({members: ""foo""})`.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 38, 52, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 682766490, 'comment_body': 'Oops, fixed!', 'comment_created': datetime.datetime(2021, 8, 4, 16, 17, 21, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 683604507, 'comment_body': 'We need to drop the `true` second argument.', 'comment_created': datetime.datetime(2021, 8, 5, 16, 21, 40, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 683604718, 'comment_body': 'The `true` argument should be removed (same issue).', 'comment_created': datetime.datetime(2021, 8, 5, 16, 21, 56, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 683619950, 'comment_body': 'Fixed both of these.', 'comment_created': datetime.datetime(2021, 8, 5, 16, 42, 43, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 686289909, 'comment_body': 'This is incorrect usage of [`assert.throws`](https://nodejs.org/api/assert.html#assert_assert_throws_fn_error_message).\r\n\r\n> `error` cannot be a string. If a string is provided as the second argument, then `error` is assumed to be omitted and the string will be used for `message` instead. This can lead to easy-to-miss mistakes.\r\n\r\n(See also #19555.)', 'comment_created': datetime.datetime(2021, 8, 10, 20, 14, 12, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 687054434, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2021, 8, 11, 17, 57, 36, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 687138478, 'comment_body': 'Is this actually the `StreamSubscription` type from #19504?', 'comment_created': datetime.datetime(2021, 8, 11, 19, 59, 28, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 688645712, 'comment_body': ""I am fairly certain that this function doesn't get called with the `StreamSubscription` object. Specifically, the callers of the function do have an `item` that is a `StreamSubcription` object but avoids calling this if this is the case AFAIK."", 'comment_created': datetime.datetime(2021, 8, 13, 16, 41, 25, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}, {'comment_id': 688789205, 'comment_body': 'Then perhaps we don’t need `Stream` and we can declare `is_user_group(item: User | UserGroup): item is UserGroup`?', 'comment_created': datetime.datetime(2021, 8, 13, 21, 28, 8, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 688971676, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 14, 17, 26, 31, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}]","[{'commit_sha': '3e6141d03fc3919c4addeccf49a500966db33816', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9de3b2f4fd79cbfc2bf23b6caa74c44d931877df', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}]",Priyank Patel,23620441,,User,,14,,3,23
660327798,"Use Event.key, Event.button instead of deprecated Event.keyCode and Event.which.","The only modules left are `hotkeys` and `emoji_picker`.

**Testing plan:** Manually tested that each handler works as expected (more detailed on how it was tested is in each commit message.)",True,18674,https://api.github.com/repos/zulip/zulip/pulls/18674,https://github.com/zulip/zulip/pull/18674,closed,99,126,28,21,1,1,1,0,[{'name': 'size: XL'}],2021-06-02 19:13:31+00:00,2021-06-02 21:04:53+00:00,6682.0,1:51:22,"[{'comment_id': 644317775, 'comment_body': ""Can we move to a non-regexy way to check whether it's one of those 3 values?  A `switch` statement is one option."", 'comment_created': datetime.datetime(2021, 6, 2, 21, 2, 3, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '131b6f159df7a9375cb704d0f3494aad4911b7b2', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '716c30048af30c3148764d7f2192d042c1b9f30d', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3c0f09f3267307cd83d2b5a22610fc54f582531', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8659dd4d4c59998237936f52f64dfca9d0fb3428', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdf506670a2820099e3db36bea3cfeea6e0cf66f', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8635087f7406e2fd01aee019bcf8708a65a0586', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86d68a263fc0002e5f8e4513ddac0daceabddcde', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a90d06b15891373dd05b78412b09d75e9668489', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b400dc65a08b0f23e3877fdf8d125f625dd66d7d', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a887c59c2499062bf317540ff4b7850e338f6dc', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0cdd913fc3d862af3c82f5de247aa70e5af957d', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '035f3ad5119b6330a08728f0a159c1b67ed19eca', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adadb1a7616f1f4791dc2a6fbf11222326678c16', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8584e87139b5cf86cf9a12feb4f32ddb23183bf5', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f481e072ef54f8f8bb9fb7669c59e1ebd073ccdb', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df2da2b6a934f833238295b55844395e2d135b54', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f0125534e41692416911241e6310a317598ed1a', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a3600460405b00b30ed75366c4852fc6d6f280b', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4eb0a0d0d0f9c15a788babd9cf844c44c97c7515', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec2199058ea4fa208b946e9c5528bc7863b764ca', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c364c1ae98f9d5ae3e1f23ebf98dde6c137e5e9c', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}]",Priyank Patel,23620441,,User,,14,,3,23
692825040,settings_data: Break circular dependency with people.,**Testing plan:** Node tests.,True,19317,https://api.github.com/repos/zulip/zulip/pulls/19317,https://github.com/zulip/zulip/pull/19317,closed,14,11,3,1,1,2,1,0,[{'name': 'size: S'}],2021-07-19 18:20:27+00:00,2021-07-20 21:28:49+00:00,97702.0,"1 day, 3:08:22","[{'comment_id': 672721948, 'comment_body': ""I think we want this function to not include the current time; that way, if the browser stays open for 5 days, we'll start producing incorrect answers.  What we want is to just have this function be passed the user's `date_joined` property )ideally converted to a date object nicely), and save that so that we can do calculations with it later."", 'comment_created': datetime.datetime(2021, 7, 20, 0, 29, 32, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 673338156, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 20, 17, 31, 42, tzinfo=datetime.timezone.utc), 'commenter': 'priyank-p', 'type': 'User'}]","[{'commit_sha': 'a63a6ba852c46608622d8512fe2fd4e03074cc9f', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}]",Priyank Patel,23620441,,User,,14,,3,23
680171884,js: Split out muting_users module from muting.,**Testing plan:** Made sure that `muting_users.initialize` is called in `ui_init` and ensured all imports were migrated to use correct modules.,True,19050,https://api.github.com/repos/zulip/zulip/pulls/19050,https://github.com/zulip/zulip/pull/19050,closed,256,221,40,4,4,0,1,0,[{'name': 'size: XL'}],2021-06-29 16:08:39+00:00,2021-06-30 23:32:55+00:00,113056.0,"1 day, 7:24:16",[],"[{'commit_sha': '83a6179b2ceda6b638f070ee8810578b2f4a4e74', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2c99feb79f61af8522853c40065a68b788b5041', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18b0bfe2640c5fe5e7a2a509da83b78e066899ae', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18990ad6a613b74572d93d4312537360ee82718c', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}]",Priyank Patel,23620441,,User,,14,,3,23
686908024,js: Split muting_ui into muted_topics_ui and muted_users_ui.,"**Testing plan:** Node tests and eslint's (import/namespace) rule. Also, `muted_users_ui` and `muted_topics_ui` are not used in the codebase before this change so there is no variable conflict issue like last time.
",True,19195,https://api.github.com/repos/zulip/zulip/pulls/19195,https://github.com/zulip/zulip/pull/19195,closed,108,97,14,2,1,0,0,0,[],2021-07-09 16:25:59+00:00,2021-07-09 17:00:45+00:00,2086.0,0:34:46,[],"[{'commit_sha': '3a87ff371c97b39c05a12b2f1d71cf2bef1487c9', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6d353f2bcdc648de98349b404149994d30aec96', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}]",Priyank Patel,23620441,,User,,14,,3,23
675635033,js: Export variables instead of setting them on window.,Followup to https://github.com/zulip/zulip/pull/18840#discussion_r651354903,True,18958,https://api.github.com/repos/zulip/zulip/pulls/18958,https://github.com/zulip/zulip/pull/18958,closed,5,8,4,1,1,0,1,0,[{'name': 'size: S'}],2021-06-22 17:43:37+00:00,2021-06-22 23:54:03+00:00,22226.0,6:10:26,[],"[{'commit_sha': '57e01f6a35476418a15e13aba409d70c8ae32b69', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}]",Priyank Patel,23620441,,User,,14,,3,23
682797672,util: Remove unused code for lower_bound.,"We currently do not need support for passing the first and last index to
the lower_bound function, so we just remove it.

**Testing plan:** Node tests",True,19099,https://api.github.com/repos/zulip/zulip/pulls/19099,https://github.com/zulip/zulip/pull/19099,closed,3,19,2,1,1,0,1,0,[{'name': 'size: S'}],2021-07-02 18:06:41+00:00,2021-07-02 18:37:02+00:00,1821.0,0:30:21,[],"[{'commit_sha': '71b4247b8fa75236f5c67e3eaf145283f2c968eb', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}]",Priyank Patel,23620441,,User,,14,,3,23
659250236,settings_org: Fix incorrect selector for the save changes button.,"This change fixes a bug where pressing Enter does not save the
changes as expected, due to an incorrect selector, when the
save/discard changes button shows up in settings. Tested by changing
the Organization name and pressing Enter at Manage Organization >
Organization profile > Organization name.",True,18660,https://api.github.com/repos/zulip/zulip/pulls/18660,https://github.com/zulip/zulip/pull/18660,closed,1,1,1,1,2,0,1,0,[{'name': 'size: XS'}],2021-06-01 18:35:46+00:00,2021-06-01 21:56:10+00:00,12024.0,3:20:24,[],"[{'commit_sha': 'bce80f7f0c2a461011725c86045928afa5227756', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}]",Priyank Patel,23620441,,User,,14,,3,23
674061069,github-actions: Ensure cancel previous run job never fails.,"**Testing plan:** 
- Updated the workflow API url to be incorrect and made sure this job didn't fail.
- Tested by force-pushing and making sure that the previous runs cancel successfully.
",True,18924,https://api.github.com/repos/zulip/zulip/pulls/18924,https://github.com/zulip/zulip/pull/18924,closed,3,1,1,2,1,0,1,0,[{'name': 'size: XS'}],2021-06-20 16:18:26+00:00,2021-06-20 23:53:45+00:00,27319.0,7:35:19,[],"[{'commit_sha': '728b3f1a5a161f40b7464067f5574be1b4a6b873', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f675980fac2518b86522035bd85fe4d7e8adba9e', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}]",Priyank Patel,23620441,,User,,14,,3,23
661120323,Follow-up cleanups,,True,18689,https://api.github.com/repos/zulip/zulip/pulls/18689,https://github.com/zulip/zulip/pull/18689,closed,24,25,5,3,1,0,1,0,[{'name': 'size: M'}],2021-06-03 18:13:51+00:00,2021-06-03 19:41:11+00:00,5240.0,1:27:20,[],"[{'commit_sha': 'a2177508d33c44aef811605ce6f35dc95cfcaf0e', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc05e824ac6b2a3f7ef0e98c18d250047fb88736', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e18c2d62f994e3057a111e089743998e1672678a', 'committer_username': 'priyank-p', 'committer_name': 'Priyank Patel', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 20, 21, 51, 7, tzinfo=datetime.timezone.utc)}]",Priyank Patel,23620441,,User,,14,,3,23

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
43160685,zulip,zulip/zulip,Python,7619,21036,375,1134,60352,2463,28,798,"[{'id': 814513315, 'number': 20691, 'closed': datetime.datetime(2022, 1, 18, 21, 24, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 5, 8, 59, 58, tzinfo=datetime.timezone.utc), 'time_taken': 1167845.0, 'time_delta': '13 days, 12:24:05', 'additions': 102, 'deletions': 83, 'state': 'closed'}, {'id': 703751728, 'number': 19504, 'closed': datetime.datetime(2021, 9, 16, 0, 23, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 17, 18, 8, tzinfo=datetime.timezone.utc), 'time_taken': 3654328.0, 'time_delta': '42 days, 7:05:28', 'additions': 133, 'deletions': 68, 'state': 'closed'}, {'id': 701696037, 'number': 19463, 'closed': datetime.datetime(2021, 9, 16, 0, 11, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 18, 38, 50, tzinfo=datetime.timezone.utc), 'time_taken': 3821543.0, 'time_delta': '44 days, 5:32:23', 'additions': 91, 'deletions': 42, 'state': 'closed'}, {'id': 698920657, 'number': 19419, 'closed': datetime.datetime(2021, 7, 29, 18, 30, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 28, 18, 23, 40, tzinfo=datetime.timezone.utc), 'time_taken': 86799.0, 'time_delta': '1 day, 0:06:39', 'additions': 120, 'deletions': 27, 'state': 'closed'}, {'id': 692825040, 'number': 19317, 'closed': datetime.datetime(2021, 7, 20, 21, 28, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 18, 20, 27, tzinfo=datetime.timezone.utc), 'time_taken': 97702.0, 'time_delta': '1 day, 3:08:22', 'additions': 14, 'deletions': 11, 'state': 'closed'}, {'id': 690059061, 'number': 19247, 'closed': datetime.datetime(2023, 3, 27, 18, 27, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 14, 16, 29, 19, tzinfo=datetime.timezone.utc), 'time_taken': 53661474.0, 'time_delta': '621 days, 1:57:54', 'additions': 123, 'deletions': 48, 'state': 'closed'}, {'id': 686908024, 'number': 19195, 'closed': datetime.datetime(2021, 7, 9, 17, 0, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 16, 25, 59, tzinfo=datetime.timezone.utc), 'time_taken': 2086.0, 'time_delta': '0:34:46', 'additions': 108, 'deletions': 97, 'state': 'closed'}, {'id': 686186858, 'number': 19178, 'closed': datetime.datetime(2021, 7, 9, 19, 42, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 17, 6, 27, tzinfo=datetime.timezone.utc), 'time_taken': 95765.0, 'time_delta': '1 day, 2:36:05', 'additions': 66, 'deletions': 50, 'state': 'closed'}, {'id': 682797672, 'number': 19099, 'closed': datetime.datetime(2021, 7, 2, 18, 37, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 18, 6, 41, tzinfo=datetime.timezone.utc), 'time_taken': 1821.0, 'time_delta': '0:30:21', 'additions': 3, 'deletions': 19, 'state': 'closed'}, {'id': 680171884, 'number': 19050, 'closed': datetime.datetime(2021, 6, 30, 23, 32, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 29, 16, 8, 39, tzinfo=datetime.timezone.utc), 'time_taken': 113056.0, 'time_delta': '1 day, 7:24:16', 'additions': 256, 'deletions': 221, 'state': 'closed'}, {'id': 678091145, 'number': 19010, 'closed': datetime.datetime(2021, 7, 6, 0, 4, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 25, 18, 3, 35, tzinfo=datetime.timezone.utc), 'time_taken': 885631.0, 'time_delta': '10 days, 6:00:31', 'additions': 88, 'deletions': 33, 'state': 'closed'}, {'id': 675635033, 'number': 18958, 'closed': datetime.datetime(2021, 6, 22, 23, 54, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 17, 43, 37, tzinfo=datetime.timezone.utc), 'time_taken': 22226.0, 'time_delta': '6:10:26', 'additions': 5, 'deletions': 8, 'state': 'closed'}, {'id': 674765821, 'number': 18932, 'closed': datetime.datetime(2021, 6, 22, 16, 14, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 18, 3, 30, tzinfo=datetime.timezone.utc), 'time_taken': 79839.0, 'time_delta': '22:10:39', 'additions': 26, 'deletions': 24, 'state': 'closed'}, {'id': 674061069, 'number': 18924, 'closed': datetime.datetime(2021, 6, 20, 23, 53, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 20, 16, 18, 26, tzinfo=datetime.timezone.utc), 'time_taken': 27319.0, 'time_delta': '7:35:19', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 669739568, 'number': 18840, 'closed': datetime.datetime(2021, 6, 22, 16, 9, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 14, 17, 17, 11, tzinfo=datetime.timezone.utc), 'time_taken': 687146.0, 'time_delta': '7 days, 22:52:26', 'additions': 169, 'deletions': 98, 'state': 'closed'}, {'id': 661120323, 'number': 18689, 'closed': datetime.datetime(2021, 6, 3, 19, 41, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 3, 18, 13, 51, tzinfo=datetime.timezone.utc), 'time_taken': 5240.0, 'time_delta': '1:27:20', 'additions': 24, 'deletions': 25, 'state': 'closed'}, {'id': 660327798, 'number': 18674, 'closed': datetime.datetime(2021, 6, 2, 21, 4, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 2, 19, 13, 31, tzinfo=datetime.timezone.utc), 'time_taken': 6682.0, 'time_delta': '1:51:22', 'additions': 99, 'deletions': 126, 'state': 'closed'}, {'id': 659250236, 'number': 18660, 'closed': datetime.datetime(2021, 6, 1, 21, 56, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 1, 18, 35, 46, tzinfo=datetime.timezone.utc), 'time_taken': 12024.0, 'time_delta': '3:20:24', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 652728470, 'number': 18595, 'closed': datetime.datetime(2021, 5, 28, 6, 33, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 25, 19, 20, 52, tzinfo=datetime.timezone.utc), 'time_taken': 213166.0, 'time_delta': '2 days, 11:12:46', 'additions': 67, 'deletions': 74, 'state': 'closed'}, {'id': 649560005, 'number': 18566, 'closed': datetime.datetime(2021, 5, 21, 23, 54, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 21, 0, 9, 34, tzinfo=datetime.timezone.utc), 'time_taken': 85483.0, 'time_delta': '23:44:43', 'additions': 45, 'deletions': 104, 'state': 'closed'}, {'id': 476422884, 'number': 16245, 'closed': datetime.datetime(2020, 8, 31, 18, 21, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 31, 17, 10, 2, tzinfo=datetime.timezone.utc), 'time_taken': 4292.0, 'time_delta': '1:11:32', 'additions': 6, 'deletions': 84, 'state': 'closed'}, {'id': 475936598, 'number': 16237, 'closed': datetime.datetime(2020, 8, 30, 22, 0, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 30, 17, 1, 13, tzinfo=datetime.timezone.utc), 'time_taken': 17980.0, 'time_delta': '4:59:40', 'additions': 24, 'deletions': 5, 'state': 'closed'}, {'id': 471770846, 'number': 16184, 'closed': datetime.datetime(2020, 9, 2, 2, 55, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 21, 18, 4, 47, tzinfo=datetime.timezone.utc), 'time_taken': 982272.0, 'time_delta': '11 days, 8:51:12', 'additions': 470, 'deletions': 390, 'state': 'closed'}, {'id': 463072367, 'number': 16036, 'closed': None, 'created': datetime.datetime(2020, 8, 5, 0, 10, 4, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 301, 'deletions': 3, 'state': 'open'}, {'id': 462321453, 'number': 16016, 'closed': datetime.datetime(2020, 8, 3, 19, 37, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 3, 18, 5, 23, tzinfo=datetime.timezone.utc), 'time_taken': 5518.0, 'time_delta': '1:31:58', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 462315499, 'number': 16015, 'closed': None, 'created': datetime.datetime(2020, 8, 3, 17, 51, 23, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 4, 'deletions': 1, 'state': 'open'}, {'id': 462311460, 'number': 16014, 'closed': datetime.datetime(2020, 8, 4, 21, 32, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 3, 17, 41, 35, tzinfo=datetime.timezone.utc), 'time_taken': 100229.0, 'time_delta': '1 day, 3:50:29', 'additions': 41, 'deletions': 0, 'state': 'closed'}, {'id': 458126787, 'number': 15966, 'closed': None, 'created': datetime.datetime(2020, 7, 29, 0, 33, 11, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 119, 'deletions': 0, 'state': 'open'}, {'id': 457330114, 'number': 15941, 'closed': datetime.datetime(2020, 7, 28, 14, 11, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 27, 18, 30, 1, tzinfo=datetime.timezone.utc), 'time_taken': 70899.0, 'time_delta': '19:41:39', 'additions': 12, 'deletions': 1, 'state': 'closed'}, {'id': 456655002, 'number': 15925, 'closed': datetime.datetime(2020, 7, 26, 23, 3, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 25, 19, 28, 6, tzinfo=datetime.timezone.utc), 'time_taken': 99330.0, 'time_delta': '1 day, 3:35:30', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 451379218, 'number': 15843, 'closed': datetime.datetime(2020, 7, 24, 17, 40, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 17, 19, 12, 59, tzinfo=datetime.timezone.utc), 'time_taken': 599277.0, 'time_delta': '6 days, 22:27:57', 'additions': 207, 'deletions': 19, 'state': 'closed'}, {'id': 445776939, 'number': 15715, 'closed': datetime.datetime(2020, 7, 8, 0, 26, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 7, 23, 53, 16, tzinfo=datetime.timezone.utc), 'time_taken': 1981.0, 'time_delta': '0:33:01', 'additions': 11, 'deletions': 10, 'state': 'closed'}, {'id': 441571263, 'number': 15617, 'closed': datetime.datetime(2020, 8, 20, 18, 51, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 29, 18, 12, 31, tzinfo=datetime.timezone.utc), 'time_taken': 4495168.0, 'time_delta': '52 days, 0:39:28', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 440238242, 'number': 15575, 'closed': datetime.datetime(2020, 7, 7, 1, 9, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 25, 20, 22, 2, tzinfo=datetime.timezone.utc), 'time_taken': 967634.0, 'time_delta': '11 days, 4:47:14', 'additions': 183, 'deletions': 5, 'state': 'closed'}, {'id': 440143907, 'number': 15570, 'closed': datetime.datetime(2020, 6, 25, 17, 33, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 25, 16, 53, 31, tzinfo=datetime.timezone.utc), 'time_taken': 2393.0, 'time_delta': '0:39:53', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 437580046, 'number': 15514, 'closed': datetime.datetime(2020, 6, 22, 19, 30, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 21, 18, 9, 19, tzinfo=datetime.timezone.utc), 'time_taken': 91274.0, 'time_delta': '1 day, 1:21:14', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 435397418, 'number': 15412, 'closed': datetime.datetime(2020, 6, 16, 18, 40, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 16, 18, 32, 24, tzinfo=datetime.timezone.utc), 'time_taken': 487.0, 'time_delta': '0:08:07', 'additions': 24, 'deletions': 45, 'state': 'closed'}, {'id': 430535826, 'number': 15256, 'closed': datetime.datetime(2020, 8, 20, 18, 49, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 8, 0, 50, 5, tzinfo=datetime.timezone.utc), 'time_taken': 6371952.0, 'time_delta': '73 days, 17:59:12', 'additions': 205, 'deletions': 115, 'state': 'closed'}, {'id': 430329005, 'number': 15251, 'closed': datetime.datetime(2020, 6, 7, 20, 1, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 7, 19, 47, 32, tzinfo=datetime.timezone.utc), 'time_taken': 844.0, 'time_delta': '0:14:04', 'additions': 1, 'deletions': 5, 'state': 'closed'}, {'id': 427509911, 'number': 15201, 'closed': datetime.datetime(2020, 8, 20, 18, 50, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 3, 23, 48, 5, tzinfo=datetime.timezone.utc), 'time_taken': 6721370.0, 'time_delta': '77 days, 19:02:50', 'additions': 178, 'deletions': 92, 'state': 'closed'}, {'id': 305676158, 'number': 12960, 'closed': datetime.datetime(2019, 8, 17, 18, 24, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 8, 17, 28, 4, tzinfo=datetime.timezone.utc), 'time_taken': 780977.0, 'time_delta': '9 days, 0:56:17', 'additions': 136, 'deletions': 69, 'state': 'closed'}, {'id': 299447442, 'number': 12829, 'closed': datetime.datetime(2019, 7, 23, 0, 22, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 19, 19, 4, 8, tzinfo=datetime.timezone.utc), 'time_taken': 278295.0, 'time_delta': '3 days, 5:18:15', 'additions': 41, 'deletions': 0, 'state': 'closed'}, {'id': 298166799, 'number': 12797, 'closed': datetime.datetime(2019, 7, 17, 23, 13, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 16, 18, 49, 17, tzinfo=datetime.timezone.utc), 'time_taken': 102233.0, 'time_delta': '1 day, 4:23:53', 'additions': 59, 'deletions': 19, 'state': 'closed'}, {'id': 297148077, 'number': 12775, 'closed': datetime.datetime(2019, 7, 13, 18, 35, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 12, 16, 51, 48, tzinfo=datetime.timezone.utc), 'time_taken': 92630.0, 'time_delta': '1 day, 1:43:50', 'additions': 74, 'deletions': 2, 'state': 'closed'}, {'id': 294270636, 'number': 12707, 'closed': datetime.datetime(2019, 7, 3, 21, 56, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 3, 17, 48, 43, tzinfo=datetime.timezone.utc), 'time_taken': 14891.0, 'time_delta': '4:08:11', 'additions': 108, 'deletions': 6, 'state': 'closed'}, {'id': 288518481, 'number': 12581, 'closed': datetime.datetime(2019, 6, 18, 0, 40, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 15, 0, 37, 26, tzinfo=datetime.timezone.utc), 'time_taken': 259363.0, 'time_delta': '3 days, 0:02:43', 'additions': 83, 'deletions': 14, 'state': 'closed'}, {'id': 285956921, 'number': 12520, 'closed': datetime.datetime(2019, 6, 7, 3, 0, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 6, 20, 26, 16, tzinfo=datetime.timezone.utc), 'time_taken': 23675.0, 'time_delta': '6:34:35', 'additions': 74, 'deletions': 27, 'state': 'closed'}, {'id': 285113733, 'number': 12487, 'closed': datetime.datetime(2019, 6, 4, 23, 43, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 4, 19, 35, 32, tzinfo=datetime.timezone.utc), 'time_taken': 14905.0, 'time_delta': '4:08:25', 'additions': 14, 'deletions': 5, 'state': 'closed'}, {'id': 284780484, 'number': 12478, 'closed': datetime.datetime(2019, 6, 4, 3, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 4, 1, 5, 23, tzinfo=datetime.timezone.utc), 'time_taken': 8197.0, 'time_delta': '2:16:37', 'additions': 38, 'deletions': 14, 'state': 'closed'}, {'id': 284778702, 'number': 12477, 'closed': datetime.datetime(2019, 6, 4, 3, 42, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 4, 0, 53, 14, tzinfo=datetime.timezone.utc), 'time_taken': 10185.0, 'time_delta': '2:49:45', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 284721981, 'number': 12476, 'closed': datetime.datetime(2019, 6, 3, 22, 28, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 3, 20, 39, 1, tzinfo=datetime.timezone.utc), 'time_taken': 6564.0, 'time_delta': '1:49:24', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 284094350, 'number': 12459, 'closed': datetime.datetime(2019, 5, 31, 22, 22, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 5, 31, 15, 31, 35, tzinfo=datetime.timezone.utc), 'time_taken': 24672.0, 'time_delta': '6:51:12', 'additions': 679, 'deletions': 347, 'state': 'closed'}, {'id': 283348507, 'number': 12432, 'closed': datetime.datetime(2019, 5, 31, 23, 12, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 5, 29, 16, 51, 27, tzinfo=datetime.timezone.utc), 'time_taken': 195657.0, 'time_delta': '2 days, 6:20:57', 'additions': 25, 'deletions': 2, 'state': 'closed'}, {'id': 281834920, 'number': 12397, 'closed': datetime.datetime(2019, 5, 28, 6, 0, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 5, 24, 1, 14, 48, tzinfo=datetime.timezone.utc), 'time_taken': 362748.0, 'time_delta': '4 days, 4:45:48', 'additions': 18, 'deletions': 3, 'state': 'closed'}, {'id': 270141619, 'number': 12112, 'closed': datetime.datetime(2019, 4, 12, 23, 50, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 4, 12, 20, 22, 38, tzinfo=datetime.timezone.utc), 'time_taken': 12480.0, 'time_delta': '3:28:00', 'additions': 1, 'deletions': 3, 'state': 'closed'}, {'id': 270039644, 'number': 12107, 'closed': datetime.datetime(2019, 6, 12, 12, 4, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 4, 12, 14, 42, 29, tzinfo=datetime.timezone.utc), 'time_taken': 5260914.0, 'time_delta': '60 days, 21:21:54', 'additions': 10, 'deletions': 1, 'state': 'closed'}, {'id': 224556234, 'number': 10701, 'closed': datetime.datetime(2019, 4, 5, 22, 51, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 10, 21, 17, 28, 37, tzinfo=datetime.timezone.utc), 'time_taken': 14361797.0, 'time_delta': '166 days, 5:23:17', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 203661734, 'number': 10041, 'closed': datetime.datetime(2018, 7, 24, 23, 0, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 7, 24, 21, 35, 18, tzinfo=datetime.timezone.utc), 'time_taken': 5110.0, 'time_delta': '1:25:10', 'additions': 9, 'deletions': 6, 'state': 'closed'}, {'id': 203368379, 'number': 10031, 'closed': datetime.datetime(2020, 3, 30, 23, 42, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 7, 23, 23, 10, 13, tzinfo=datetime.timezone.utc), 'time_taken': 53224366.0, 'time_delta': '616 days, 0:32:46', 'additions': 10, 'deletions': 236, 'state': 'closed'}, {'id': 203340675, 'number': 10028, 'closed': datetime.datetime(2018, 7, 23, 22, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 7, 23, 20, 54, 12, tzinfo=datetime.timezone.utc), 'time_taken': 5148.0, 'time_delta': '1:25:48', 'additions': 19, 'deletions': 26, 'state': 'closed'}, {'id': 192661924, 'number': 9675, 'closed': datetime.datetime(2019, 5, 29, 16, 52, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 6, 5, 10, 35, 10, tzinfo=datetime.timezone.utc), 'time_taken': 30953858.0, 'time_delta': '358 days, 6:17:38', 'additions': 129, 'deletions': 18, 'state': 'closed'}, {'id': 189774587, 'number': 9501, 'closed': datetime.datetime(2018, 5, 23, 10, 39, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 5, 22, 19, 56, 20, tzinfo=datetime.timezone.utc), 'time_taken': 53018.0, 'time_delta': '14:43:38', 'additions': 211, 'deletions': 106, 'state': 'closed'}, {'id': 189244663, 'number': 9465, 'closed': datetime.datetime(2018, 5, 20, 19, 42, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 5, 20, 17, 57, 21, tzinfo=datetime.timezone.utc), 'time_taken': 6331.0, 'time_delta': '1:45:31', 'additions': 1642, 'deletions': 599, 'state': 'closed'}, {'id': 186460406, 'number': 9335, 'closed': datetime.datetime(2018, 5, 8, 17, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 5, 7, 20, 48, 32, tzinfo=datetime.timezone.utc), 'time_taken': 75208.0, 'time_delta': '20:53:28', 'additions': 81, 'deletions': 100, 'state': 'closed'}, {'id': 185738980, 'number': 9301, 'closed': datetime.datetime(2018, 5, 3, 14, 58, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 5, 3, 14, 41, 29, tzinfo=datetime.timezone.utc), 'time_taken': 1011.0, 'time_delta': '0:16:51', 'additions': 5, 'deletions': 14, 'state': 'closed'}, {'id': 184840306, 'number': 9261, 'closed': datetime.datetime(2018, 4, 30, 19, 36, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 4, 29, 15, 37, 40, tzinfo=datetime.timezone.utc), 'time_taken': 100744.0, 'time_delta': '1 day, 3:59:04', 'additions': 4, 'deletions': 6, 'state': 'closed'}, {'id': 183736453, 'number': 9205, 'closed': datetime.datetime(2018, 4, 24, 21, 15, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 4, 24, 13, 29, 26, tzinfo=datetime.timezone.utc), 'time_taken': 27959.0, 'time_delta': '7:45:59', 'additions': 14, 'deletions': 3, 'state': 'closed'}, {'id': 183237200, 'number': 9178, 'closed': datetime.datetime(2018, 4, 23, 19, 27, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 4, 21, 18, 59, 49, tzinfo=datetime.timezone.utc), 'time_taken': 174449.0, 'time_delta': '2 days, 0:27:29', 'additions': 515, 'deletions': 80, 'state': 'closed'}, {'id': 183169301, 'number': 9171, 'closed': datetime.datetime(2018, 4, 20, 23, 33, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 4, 20, 20, 58, 58, tzinfo=datetime.timezone.utc), 'time_taken': 9276.0, 'time_delta': '2:34:36', 'additions': 7, 'deletions': 7, 'state': 'closed'}, {'id': 182606942, 'number': 9141, 'closed': datetime.datetime(2018, 6, 2, 1, 15, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 4, 18, 21, 23, 23, tzinfo=datetime.timezone.utc), 'time_taken': 3815550.0, 'time_delta': '44 days, 3:52:30', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 182603569, 'number': 9140, 'closed': datetime.datetime(2018, 4, 20, 19, 46, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 4, 18, 21, 8, 32, tzinfo=datetime.timezone.utc), 'time_taken': 167877.0, 'time_delta': '1 day, 22:37:57', 'additions': 76, 'deletions': 74, 'state': 'closed'}, {'id': 181343330, 'number': 9077, 'closed': datetime.datetime(2018, 4, 17, 16, 56, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 4, 12, 22, 34, 38, tzinfo=datetime.timezone.utc), 'time_taken': 411708.0, 'time_delta': '4 days, 18:21:48', 'additions': 73, 'deletions': 91, 'state': 'closed'}, {'id': 181265676, 'number': 9073, 'closed': datetime.datetime(2018, 4, 12, 17, 39, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 4, 12, 16, 52, 59, tzinfo=datetime.timezone.utc), 'time_taken': 2795.0, 'time_delta': '0:46:35', 'additions': 3, 'deletions': 10, 'state': 'closed'}, {'id': 180663820, 'number': 9048, 'closed': datetime.datetime(2018, 6, 5, 10, 36, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 4, 10, 16, 45, 13, tzinfo=datetime.timezone.utc), 'time_taken': 4816289.0, 'time_delta': '55 days, 17:51:29', 'additions': 119, 'deletions': 7, 'state': 'closed'}, {'id': 180445073, 'number': 9040, 'closed': datetime.datetime(2018, 4, 12, 23, 12, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 4, 9, 22, 31, 29, tzinfo=datetime.timezone.utc), 'time_taken': 261650.0, 'time_delta': '3 days, 0:40:50', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 179974344, 'number': 8993, 'closed': datetime.datetime(2018, 4, 6, 15, 12, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 4, 6, 15, 2, 37, tzinfo=datetime.timezone.utc), 'time_taken': 599.0, 'time_delta': '0:09:59', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 179806628, 'number': 8984, 'closed': datetime.datetime(2018, 4, 5, 22, 16, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 4, 5, 21, 51, 52, tzinfo=datetime.timezone.utc), 'time_taken': 1453.0, 'time_delta': '0:24:13', 'additions': 19, 'deletions': 19, 'state': 'closed'}, {'id': 179483259, 'number': 8964, 'closed': datetime.datetime(2018, 4, 9, 20, 57, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 4, 4, 19, 3, 55, tzinfo=datetime.timezone.utc), 'time_taken': 438794.0, 'time_delta': '5 days, 1:53:14', 'additions': 22, 'deletions': 6, 'state': 'closed'}, {'id': 176269371, 'number': 8764, 'closed': datetime.datetime(2018, 3, 23, 5, 8, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 3, 20, 17, 38, 36, tzinfo=datetime.timezone.utc), 'time_taken': 214222.0, 'time_delta': '2 days, 11:30:22', 'additions': 10, 'deletions': 0, 'state': 'closed'}, {'id': 176193185, 'number': 8761, 'closed': datetime.datetime(2018, 3, 20, 21, 55, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 3, 20, 13, 39, 27, tzinfo=datetime.timezone.utc), 'time_taken': 29761.0, 'time_delta': '8:16:01', 'additions': 35, 'deletions': 43, 'state': 'closed'}, {'id': 171411549, 'number': 8520, 'closed': datetime.datetime(2018, 3, 9, 22, 16, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 2, 26, 15, 44, 58, tzinfo=datetime.timezone.utc), 'time_taken': 973884.0, 'time_delta': '11 days, 6:31:24', 'additions': 11, 'deletions': 0, 'state': 'closed'}, {'id': 167575881, 'number': 8296, 'closed': datetime.datetime(2018, 4, 4, 19, 0, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 2, 7, 1, 30, 46, tzinfo=datetime.timezone.utc), 'time_taken': 4901394.0, 'time_delta': '56 days, 17:29:54', 'additions': 26, 'deletions': 8, 'state': 'closed'}, {'id': 167042956, 'number': 8267, 'closed': datetime.datetime(2018, 2, 9, 22, 21, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 2, 5, 1, 48, 24, tzinfo=datetime.timezone.utc), 'time_taken': 419609.0, 'time_delta': '4 days, 20:33:29', 'additions': 7, 'deletions': 7, 'state': 'closed'}, {'id': 166971273, 'number': 8259, 'closed': datetime.datetime(2018, 3, 12, 19, 25, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 2, 3, 17, 27, 24, tzinfo=datetime.timezone.utc), 'time_taken': 3203899.0, 'time_delta': '37 days, 1:58:19', 'additions': 61, 'deletions': 2, 'state': 'closed'}, {'id': 166913140, 'number': 8256, 'closed': datetime.datetime(2018, 2, 3, 17, 28, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 2, 2, 21, 58, 41, tzinfo=datetime.timezone.utc), 'time_taken': 70197.0, 'time_delta': '19:29:57', 'additions': 53, 'deletions': 4, 'state': 'closed'}, {'id': 166664222, 'number': 8244, 'closed': datetime.datetime(2018, 3, 3, 23, 45, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 2, 1, 22, 2, 34, tzinfo=datetime.timezone.utc), 'time_taken': 2598154.0, 'time_delta': '30 days, 1:42:34', 'additions': 36, 'deletions': 0, 'state': 'closed'}, {'id': 164990525, 'number': 8165, 'closed': datetime.datetime(2018, 3, 23, 16, 42, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 1, 24, 23, 20, 55, tzinfo=datetime.timezone.utc), 'time_taken': 4987275.0, 'time_delta': '57 days, 17:21:15', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 164880763, 'number': 8157, 'closed': datetime.datetime(2018, 2, 16, 23, 15, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 1, 24, 15, 32, 37, tzinfo=datetime.timezone.utc), 'time_taken': 2014955.0, 'time_delta': '23 days, 7:42:35', 'additions': 376, 'deletions': 0, 'state': 'closed'}, {'id': 159878235, 'number': 7867, 'closed': datetime.datetime(2017, 12, 23, 12, 32, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 12, 22, 14, 33, 41, tzinfo=datetime.timezone.utc), 'time_taken': 79118.0, 'time_delta': '21:58:38', 'additions': 30, 'deletions': 0, 'state': 'closed'}, {'id': 158708033, 'number': 7792, 'closed': datetime.datetime(2017, 12, 18, 14, 19, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 12, 15, 22, 39, 5, tzinfo=datetime.timezone.utc), 'time_taken': 229201.0, 'time_delta': '2 days, 15:40:01', 'additions': 36, 'deletions': 0, 'state': 'closed'}, {'id': 158425750, 'number': 7774, 'closed': datetime.datetime(2017, 12, 18, 14, 57, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 12, 14, 18, 5, 58, tzinfo=datetime.timezone.utc), 'time_taken': 334306.0, 'time_delta': '3 days, 20:51:46', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 158398257, 'number': 7771, 'closed': datetime.datetime(2017, 12, 28, 14, 39, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 12, 14, 16, 12, 7, tzinfo=datetime.timezone.utc), 'time_taken': 1204060.0, 'time_delta': '13 days, 22:27:40', 'additions': 39, 'deletions': 0, 'state': 'closed'}, {'id': 158246760, 'number': 7763, 'closed': datetime.datetime(2018, 1, 18, 1, 45, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 12, 14, 1, 19, tzinfo=datetime.timezone.utc), 'time_taken': 3025587.0, 'time_delta': '35 days, 0:26:27', 'additions': 462, 'deletions': 9, 'state': 'closed'}, {'id': 157293924, 'number': 7707, 'closed': datetime.datetime(2017, 12, 10, 12, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 12, 8, 17, 26, 54, tzinfo=datetime.timezone.utc), 'time_taken': 154686.0, 'time_delta': '1 day, 18:58:06', 'additions': 26, 'deletions': 2, 'state': 'closed'}, {'id': 157136053, 'number': 7698, 'closed': datetime.datetime(2017, 12, 13, 20, 21, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 12, 8, 0, 22, 47, tzinfo=datetime.timezone.utc), 'time_taken': 503917.0, 'time_delta': '5 days, 19:58:37', 'additions': 61, 'deletions': 1, 'state': 'closed'}, {'id': 156889695, 'number': 7682, 'closed': datetime.datetime(2017, 12, 7, 23, 5, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 12, 7, 2, 25, 47, tzinfo=datetime.timezone.utc), 'time_taken': 74399.0, 'time_delta': '20:39:59', 'additions': 15, 'deletions': 0, 'state': 'closed'}, {'id': 156879855, 'number': 7681, 'closed': datetime.datetime(2017, 12, 7, 23, 14, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 12, 7, 1, 1, 57, tzinfo=datetime.timezone.utc), 'time_taken': 79975.0, 'time_delta': '22:12:55', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 156540401, 'number': 7670, 'closed': datetime.datetime(2017, 12, 6, 0, 30, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 12, 5, 18, 32, 14, tzinfo=datetime.timezone.utc), 'time_taken': 21503.0, 'time_delta': '5:58:23', 'additions': 30, 'deletions': 0, 'state': 'closed'}, {'id': 155684826, 'number': 7594, 'closed': datetime.datetime(2017, 12, 3, 22, 1, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 11, 30, 18, 28, 14, tzinfo=datetime.timezone.utc), 'time_taken': 271987.0, 'time_delta': '3 days, 3:33:07', 'additions': 25, 'deletions': 13, 'state': 'closed'}, {'id': 155478242, 'number': 7578, 'closed': datetime.datetime(2017, 11, 30, 14, 25, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 11, 29, 23, 11, 58, tzinfo=datetime.timezone.utc), 'time_taken': 54819.0, 'time_delta': '15:13:39', 'additions': 4, 'deletions': 0, 'state': 'closed'}]"
