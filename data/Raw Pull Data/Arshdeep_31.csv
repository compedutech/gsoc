pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1476931141,Explore: Artist similarity graph,"PR integrates the interactive artist similarity graph for GSoC and can be accessed under /explore/artist-similarity

Dependent on #2665

",True,2549,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/2549,https://github.com/metabrainz/listenbrainz-server/pull/2549,closed,2043,311,27,95,5,61,0,1,[],2023-08-16 06:51:17+00:00,2024-01-26 17:09:37+00:00,14120300.0,"163 days, 10:18:20","[{'comment_id': 1295458440, 'comment_body': ""We don't use react-bootstap and bootstrap currently in the project, so these dependencies should be removed and the code should be replaced with normal html and css classes. Also, we are currently stuck at Bootstrap 3 and can't use Bootstrap 5."", 'comment_created': datetime.datetime(2023, 8, 16, 6, 57, 58, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 1295459427, 'comment_body': 'remove alert. You can throw an error here and capture it in your components to show an error toast.', 'comment_created': datetime.datetime(2023, 8, 16, 6, 59, 7, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 1295461361, 'comment_body': 'This should probably be fixed instead of disabling the eslint check. I think you need to make this a button and then apply appropriate styling.', 'comment_created': datetime.datetime(2023, 8, 16, 7, 1, 13, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 1295467695, 'comment_body': 'I see multiple places where types are imported from component files. I think a better solution would be to create a new `types.d.ts` file inside `explore/artist-similarity` folder and put all the types there except the interfaces for props.', 'comment_created': datetime.datetime(2023, 8, 16, 7, 8, 3, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 1295468494, 'comment_body': ""You don't need to receive the `id` as a prop. Also, if there are multiple usages of this component you may want to change this to a class."", 'comment_created': datetime.datetime(2023, 8, 16, 7, 8, 48, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 1295477922, 'comment_body': 'Remove the alert and catch it the component or otherwise to show the user a toast.', 'comment_created': datetime.datetime(2023, 8, 16, 7, 18, 9, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 1295479916, 'comment_body': 'Can this file be removed to use the existing ReleaseCard from LB codebase?', 'comment_created': datetime.datetime(2023, 8, 16, 7, 20, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 1295480449, 'comment_body': 'Seems unused, can be removed?', 'comment_created': datetime.datetime(2023, 8, 16, 7, 20, 31, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 1295481501, 'comment_body': 'If the issue is now resolved, most of the comment can be removed and a small comment about the implementation can be retained as relevant.', 'comment_created': datetime.datetime(2023, 8, 16, 7, 21, 34, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 1295483428, 'comment_body': 'You can remove the useRef and the useEffect below, useCallback will take of updating the function whenever getArtists changes.', 'comment_created': datetime.datetime(2023, 8, 16, 7, 23, 23, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 1295485934, 'comment_body': '`SearchDropdown` component seems simple enough that you can directly inline the code here. There are no other uses of the component AFAICS and it does not maintain any state either.', 'comment_created': datetime.datetime(2023, 8, 16, 7, 25, 41, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 1295490742, 'comment_body': 'The dependency list needs to be updated.', 'comment_created': datetime.datetime(2023, 8, 16, 7, 30, 12, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 1295491127, 'comment_body': 'The dependency list needs to be updated.', 'comment_created': datetime.datetime(2023, 8, 16, 7, 30, 35, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 1295491503, 'comment_body': 'This should probably be separated into a separate function.', 'comment_created': datetime.datetime(2023, 8, 16, 7, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 1295492319, 'comment_body': 'TODO. I will let you know when this is ready.', 'comment_created': datetime.datetime(2023, 8, 16, 7, 31, 45, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 1297617328, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2023, 8, 17, 18, 52, 53, tzinfo=datetime.timezone.utc), 'commenter': 'arsh331', 'type': 'User'}, {'comment_id': 1297631484, 'comment_body': 'Ok fixed transformed the div into a button and applied required styling', 'comment_created': datetime.datetime(2023, 8, 17, 19, 9, 3, tzinfo=datetime.timezone.utc), 'commenter': 'arsh331', 'type': 'User'}, {'comment_id': 1297633631, 'comment_body': 'I changed the file to suit the project more, we do not require artist name, release data and type here. I made these props optional and am conditionally rendering these. A solution might be to change the existing component with this. But I am not sure about that.', 'comment_created': datetime.datetime(2023, 8, 17, 19, 11, 33, tzinfo=datetime.timezone.utc), 'commenter': 'arsh331', 'type': 'User'}, {'comment_id': 1297760904, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2023, 8, 17, 21, 16, 32, tzinfo=datetime.timezone.utc), 'commenter': 'arsh331', 'type': 'User'}, {'comment_id': 1297828546, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2023, 8, 17, 23, 1, 1, tzinfo=datetime.timezone.utc), 'commenter': 'arsh331', 'type': 'User'}, {'comment_id': 1297829174, 'comment_body': 'I used the same file required for ReleaseCard so should I make any changes to it', 'comment_created': datetime.datetime(2023, 8, 17, 23, 2, 11, tzinfo=datetime.timezone.utc), 'commenter': 'arsh331', 'type': 'User'}, {'comment_id': 1297839405, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2023, 8, 17, 23, 20, 28, tzinfo=datetime.timezone.utc), 'commenter': 'arsh331', 'type': 'User'}, {'comment_id': 1297841256, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2023, 8, 17, 23, 23, 54, tzinfo=datetime.timezone.utc), 'commenter': 'arsh331', 'type': 'User'}, {'comment_id': 1297963282, 'comment_body': 'If I use searchQuery as a dependency for the useCallback in getArtists it will update whenever searchQuery updates and does not work as expected. Therefore, we need to ensure getArtists never gets updated. \r\nSo, a change suggested here, https://www.developerway.com/posts/debouncing-in-react, it says I could send the query directly to the getArtists without keeping any dependencies and it works fine this way. As opposed to, when I use a dependency and causing problems.\r\nI have kept the previous solution as well. Let me know what will be better. ', 'comment_created': datetime.datetime(2023, 8, 18, 4, 6, 4, tzinfo=datetime.timezone.utc), 'commenter': 'arsh331', 'type': 'User'}, {'comment_id': 1297964111, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2023, 8, 18, 4, 8, 10, tzinfo=datetime.timezone.utc), 'commenter': 'arsh331', 'type': 'User'}, {'comment_id': 1297964140, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2023, 8, 18, 4, 8, 15, tzinfo=datetime.timezone.utc), 'commenter': 'arsh331', 'type': 'User'}, {'comment_id': 1299215536, 'comment_body': 'It seems like there is no easy way to separate the function. I have added the comment for it if you can please take a closer look.', 'comment_created': datetime.datetime(2023, 8, 19, 16, 4, 49, tzinfo=datetime.timezone.utc), 'commenter': 'arsh331', 'type': 'User'}, {'comment_id': 1299217045, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2023, 8, 19, 16, 19, 13, tzinfo=datetime.timezone.utc), 'commenter': 'arsh331', 'type': 'User'}, {'comment_id': 1299252193, 'comment_body': ""Makes sense, let's ponder over it later."", 'comment_created': datetime.datetime(2023, 8, 19, 20, 14, 6, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 1299252381, 'comment_body': 'I see, I read your code and the article and indeed your way is the correct and the most succint way to do this.', 'comment_created': datetime.datetime(2023, 8, 19, 20, 15, 13, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 1299252440, 'comment_body': 'Sure, I have pushed an updated version.', 'comment_created': datetime.datetime(2023, 8, 19, 20, 15, 51, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 1299253934, 'comment_body': '@arsh331, this feedback is still pending.', 'comment_created': datetime.datetime(2023, 8, 19, 20, 20, 13, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 1318977592, 'comment_body': 'Since #2233 we\'ve moved to React 18, and with it ReactDOM changed the way to render components, and we also recently added a special component for modals:\r\n```suggestion\r\n  const renderRoot = createRoot(domContainer!);\r\n  renderRoot.render(\r\n    <ErrorBoundary>\r\n      <GlobalAppContext.Provider value={globalAppContext}>\r\n        <NiceModal.Provider>\r\n          <ArtistSimilarityPageWithAlertNotifications />\r\n        </NiceModal.Provider>\r\n      </GlobalAppContext.Provider>\r\n    </ErrorBoundary>\r\n  );\r\n```\r\n\r\nAnd you\'ll need these imports at the top of the file:\r\n```\r\nimport NiceModal from ""@ebay/nice-modal-react"";\r\nimport { createRoot } from ""react-dom/client"";\r\n```', 'comment_created': datetime.datetime(2023, 9, 7, 18, 28, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1321464980, 'comment_body': 'I wonder if this URL (or the algorithm string) should be passed by the server as a prop instead, to make it easier to change which algorithm is used. What are your thoughts on that @amCap1712 ?', 'comment_created': datetime.datetime(2023, 9, 11, 12, 20, 15, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1321466649, 'comment_body': ""Let's make sure this doesn't throw an error if `data` is not defined or if it's empty for some reason:\r\n```suggestion\r\n      setMainArtist(artistsData[0].data?.[0]);\r\n```"", 'comment_created': datetime.datetime(2023, 9, 11, 12, 21, 49, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1321469726, 'comment_body': ""If anything goes wrong, it's possible that `similarArtistsResponse` will be undefined or an empty array.\r\nAs above, let's ensure this doesn't throw an error.\r\nWe can also rewrite this if-else block a bit shorter with the [nullish coalescing operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing):\r\n\r\n```suggestion\r\n      setCompleteSimilarArtistsList(similarArtistsResponse?.data ?? []);\r\n```\r\n"", 'comment_created': datetime.datetime(2023, 9, 11, 12, 24, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1321471260, 'comment_body': ""This comment doesn't seem to be up to date"", 'comment_created': datetime.datetime(2023, 9, 11, 12, 25, 46, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1321473547, 'comment_body': ""I'm not sure what you were trying to achieve with this code, but these events should only be sent by BrainzPlayer itself, and only when actually playing a track.\r\n\r\nWhat was the goal, maybe I can help you out?"", 'comment_created': datetime.datetime(2023, 9, 11, 12, 27, 41, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1321476509, 'comment_body': ""Brainzplayer shouldn't be rendered conditionally.\r\nInstead, we can pass a default empty array if there is no `currentTracks`:\r\n```suggestion\r\n      <BrainzPlayer\r\n        listens={currentTracks ?? []}\r\n        listenBrainzAPIBaseURI={APIService.APIBaseURI}\r\n        refreshSpotifyToken={APIService.refreshSpotifyToken}\r\n        refreshYoutubeToken={APIService.refreshYoutubeToken}\r\n        refreshSoundcloudToken={APIService.refreshSoundcloudToken}\r\n      />\r\n```"", 'comment_created': datetime.datetime(2023, 9, 11, 12, 30, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1321479782, 'comment_body': 'I initially started a comment about the vertical centering of the text, which looks off, but offering no solution.\r\nThen I dug in deep and found an acceptable solution for good text wrapping and centering with a mask !\r\n\r\nIt uses a `<foreignObject>` SVG node containing an HTML `<div>`, which allows us to use CSS to wrap, center and mask the text. As you\'ve discovered, automatically wrapping text in SVG is not supported, and all the other solutions I looked at gave poor results and/or required the use of third-party libraries (best I found: `d3plus.textWrap`: [codepen](https://jsfiddle.net/IPWright83/22ahj15o/)).\r\nWhat a pain !\r\n\r\nSo here it is:\r\n<img width=""176"" alt=""image"" src=""https://github.com/metabrainz/listenbrainz-server/assets/6179856/06a88aad-0cb5-467a-986a-d9db409f05ba"">\r\n\r\nThe code and CSS looks like this:\r\nhttps://codepen.io/Monkeyyyy/pen/yLGbYew\r\n\r\nNote that the `word-wrap: break-word;` in the inner `<p>` element doesn\'t always give the best result, but without it any long words would not be displayed at all because of the lack of multiline ellipsis text overflow!\r\n\r\n\r\nSo I tried this other solution that does not use a CSS shape as a mask but instead uses a `border-radius` and a new class `.ellipsis-3-lines` based on the existing class `.ellipsis-2-lines` ([code in LB](https://github.com/metabrainz/listenbrainz-server/blob/73114d062eac716eb0cfb6c3f95f2fadf165a0a4/frontend/css/brainzplayer.less#L173-L178)):\r\nhttps://codepen.io/Monkeyyyy/pen/MWZmKjj\r\n<img width=""172"" alt=""image"" src=""https://github.com/metabrainz/listenbrainz-server/assets/6179856/2552ece9-ce5f-457b-84f8-e3f10895e3b1"">\r\n\r\nThat\'s the best i was able to come up with, but I think in a lot of cases it will result in a better look. Try it out and let me know :)', 'comment_created': datetime.datetime(2023, 9, 11, 12, 33, 7, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1321782768, 'comment_body': 'I\'m not sure exactly how to use this properly, but for me currently the graph ends up cropped if I\'m not at the expected screen size ratio:\r\n<img width=""883"" alt=""image"" src=""https://github.com/metabrainz/listenbrainz-server/assets/6179856/b718c39f-6f84-4b1e-96e6-6b99927ff2e0"">\r\n', 'comment_created': datetime.datetime(2023, 9, 11, 16, 14, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1321784056, 'comment_body': 'FYI, this centers the text vertically as one would expect (but I suggested an alternative option above)\r\n```suggestion\r\n        dominantBaseline=""central""\r\n```', 'comment_created': datetime.datetime(2023, 9, 11, 16, 15, 39, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1321785634, 'comment_body': 'It would be nice to give these elements a class name so that we can target them.\r\n\r\nFor example, adding `cursor: pointer`  one these group elements would make it clearer that the graph is interactive', 'comment_created': datetime.datetime(2023, 9, 11, 16, 17, 7, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1321787898, 'comment_body': ""Why the comparison to Infinity here, out of curiosity?\r\nIt's not the clearest way to ensure `score` is a number. For example maybe look at [Lodash's isFinite](https://lodash.com/docs/4.17.15#isFinite)"", 'comment_created': datetime.datetime(2023, 9, 11, 16, 19, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1321788979, 'comment_body': ""It might be worth throttling handleResize with [lodash's `throttle` utility](https://lodash.com/docs/4.17.15#throttle)\r\n\r\nYou would create a function `throttledHandleResize` which would be passed as the event listener.\r\nThat function would only be called once every, say, 500 milliseconds."", 'comment_created': datetime.datetime(2023, 9, 11, 16, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1321791755, 'comment_body': '```suggestion\r\n    if (artistInfo?.topTrack?.recording_name) {\r\n```', 'comment_created': datetime.datetime(2023, 9, 11, 16, 22, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1321802749, 'comment_body': 'This doesn\'t look very nice on my screen; if there is not a lot of height everything is smooshed together and overlapping itself:\r\n<img width=""358"" alt=""image"" src=""https://github.com/metabrainz/listenbrainz-server/assets/6179856/bcd2dc15-c29b-4f69-823b-d3ef3031f971"">\r\n\r\nPlease look into how to make this work better for other screen ratios (including mobile phones preferably)\r\n', 'comment_created': datetime.datetime(2023, 9, 11, 16, 30, 56, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1321806699, 'comment_body': 'We are not going to want this hardcoded.\r\nHowever the server route should send an optional seed artist MBID (where we have `props=orjson.dumps(…` in the route) and support passing one as query parameters', 'comment_created': datetime.datetime(2023, 9, 11, 16, 34, 47, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1321810286, 'comment_body': ""There should probably be a helpful message displayed on screen if the user hasn't yet selected an artist (cf. comment above about not having a default hardcoded)"", 'comment_created': datetime.datetime(2023, 9, 11, 16, 37, 38, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1413206386, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2023, 12, 3, 20, 57, 34, tzinfo=datetime.timezone.utc), 'commenter': 'anshg1214', 'type': 'User'}, {'comment_id': 1413206466, 'comment_body': 'Done :)', 'comment_created': datetime.datetime(2023, 12, 3, 20, 58, 6, tzinfo=datetime.timezone.utc), 'commenter': 'anshg1214', 'type': 'User'}, {'comment_id': 1436142523, 'comment_body': ""Here I'm fetching the top artist. Alternatively we can fetch the sitewide trending artist for this month / this week. Which option would be the best here? @MonkeyDo"", 'comment_created': datetime.datetime(2023, 12, 25, 19, 15, 28, tzinfo=datetime.timezone.utc), 'commenter': 'anshg1214', 'type': 'User'}, {'comment_id': 1440519955, 'comment_body': ""Let's start with this and revisit the options if users are unhappy with it"", 'comment_created': datetime.datetime(2024, 1, 3, 14, 31, 22, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1440521130, 'comment_body': 'This is now unused', 'comment_created': datetime.datetime(2024, 1, 3, 14, 32, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1440576832, 'comment_body': 'I still think this solution is not ideal.\r\nIt looks a bit skewed, but also sometimes there is enough space for the whole artist name but it still gets cropped:\r\n<img width=""391"" alt=""image"" src=""https://github.com/metabrainz/listenbrainz-server/assets/6179856/6d115c35-f3ed-46a3-83f0-969c3d1d678a"">\r\n\r\n\r\nDid you try the solution I posted in the comment above?\r\nI think the solution should work better.\r\nhttps://github.com/metabrainz/listenbrainz-server/pull/2549/files#r1321479782', 'comment_created': datetime.datetime(2024, 1, 3, 15, 21, 45, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1440580328, 'comment_body': 'I think maybe some code is missing in this file?\r\n\r\nI deployed the PR to test.LB and is it not working properly, which I see is caused by the `/popularity/top-release-groups-for-artist` API endpoint not existing and returning a 404.', 'comment_created': datetime.datetime(2024, 1, 3, 15, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1440632824, 'comment_body': 'Both the toolbar at the top and the graph underneath are looking a bit rough on smaller screens:\r\n<img width=""301"" alt=""image"" src=""https://github.com/metabrainz/listenbrainz-server/assets/6179856/9c2658d7-df6d-4995-9227-ca05d7476aa0"">\r\n\r\nI wonder if the values for repulsivity, distanceMax and nodeSize should be different depending on the available screen size, or maybe the size of the nodes, or…\r\nI tried looking for some examples or to see if there are other solutions, but didn\'t find anything useful.\r\n\r\nI do notice that I get some cropped nodes also in other non-mobile screen sizes:\r\n\r\n<img width=""789"" alt=""image"" src=""https://github.com/metabrainz/listenbrainz-server/assets/6179856/3dfae830-2879-4481-af14-0e3d1cfb5c6b"">\r\n\r\nI wonder if it has to do with the size of the nodes being ignored, meaning the center of the top-most node is just about in frame but the node scaled from that center point is out of bounds', 'comment_created': datetime.datetime(2024, 1, 3, 16, 11, 22, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1440643480, 'comment_body': 'Usually everywhere on the website we use the bootstrap css class `form-control` on all the input elements to homogenize the styling.\r\nThat might be at odds with the custom css for these inputs (i.e. where you define a fixed height for example)\r\n\r\nSame goes for the other inputs in this page', 'comment_created': datetime.datetime(2024, 1, 3, 16, 21, 47, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1443330374, 'comment_body': 'Yes, this is because I created this endpoint in a separate PR. #2665', 'comment_created': datetime.datetime(2024, 1, 5, 20, 12, 51, tzinfo=datetime.timezone.utc), 'commenter': 'anshg1214', 'type': 'User'}, {'comment_id': 1443396640, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2024, 1, 5, 21, 48, 20, tzinfo=datetime.timezone.utc), 'commenter': 'anshg1214', 'type': 'User'}, {'comment_id': 1443820047, 'comment_body': ""Fixed, I've refactored the entire component now"", 'comment_created': datetime.datetime(2024, 1, 6, 18, 34, 16, tzinfo=datetime.timezone.utc), 'commenter': 'anshg1214', 'type': 'User'}]","[{'commit_sha': '14c0b739248f6a03adb6ea362f3f18b807b38518', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc001d3ab63a222c851ea51fbddb85f4d4906bd6', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6148b3cd5517f559d9432d470c19dccd1e59f0b6', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ed69c8b2824ff23e3b66a8d8e137c36efce1da7', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '652dd0866263f8da0dd09f2bda8207eb9fd8ed42', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78355a37947deb99599739a2cb3063d268ca6683', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4987900a853750f9f75e24ea165d87080170d76', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f484922b8a25e2b32212e40f93c6083bf804c60', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06337f6abab6fca5040e836f75b087795312b634', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17127b0e1076681e4a41f4cf1c8cb48996aaf689', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c0b3a5ddc3219fc27186b98de121a9ade8ddd6f', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '054dbc18bc318ecf9f4dfaa95891c793c5c69f2c', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d35d8ea418227ed4fe664a10e0456fb4009fcb7', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acd4a4e3e14ab4352752c704c827362a28c46e58', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80c341b1aa235c4469883db67332d30a2ce1569f', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba6ca44472051513243cb1dc2805ed7f6ac8273f', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c85939fabd88f401759ec4d9f34427a6e7b9638', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a0874de198e57d9793ece9a04366db695c4c6ae', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cb23b8c6af64e26018c921786aff418726198b4', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6099d6b8c7b887a9120fe3c6d2bc625bfd143b68', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '524898fc7dc717d4df5705c43deccebbc9b9444b', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a4c9130019ebf5d21487a9bd398b2ff91107d85', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f4cff3af6946b20ed1c170413a8bf4c671f4041', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63ee1daa2162fe00cb9ea2032fe180b128d6a5d5', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a88a80eedbaff063ac50559bf64e51687fb478f', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cf1999c8723c582184f9184a0a3320a7844f481', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2e36f460067014dcef3d3af67854b1ef97f435b', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b967ea43ce90ca54c797f0d2e48c2b748cc68b39', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3558f5214945e61e1973470c5671009a7992ebda', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70cf04ddac62e5975ca2b45bdb42e15ffef0524b', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd43991815fbb0db1a82440d99dfe40c4a8b83aa', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6c77dcbdd10fe95e7d14a1410bab704dab79a4a', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f276091344e7c326c7ba525a4db71ab41a39906', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8b3a3e4d176466e0945f0dc7e891ca86bcbb338', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9341b6b7e5471f1a596152645e829378edfd361c', 'committer_username': 'amCap1712', 'committer_name': 'Kartik Ohri', 'committer_email': 'kartikohri13@gmail.com', 'commit_date': datetime.datetime(2017, 4, 19, 2, 7, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0765f6a93737a2f8926500dc180a9dd7d961e49', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9dd5a61d77c8599c3288f414e1a669ecba99b15', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7681c8d8e63883b42eea202d4d495ae8221da741', 'committer_username': 'arsh331', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 13, 35, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f266d75f7bc5fe76698f87356ff8c1a680db33a', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '082c8329ac95318d02a1c97cb55f0cecbc93e16d', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01fde626be876d0ad66bae2aac0ab6e92e027e05', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcb883f044a177576c7692b1686d229f38e85b58', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bba20c002700c2aecb6c0cef424c65efb9b4fd6', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a402a460897d65685b7859acb1cda053822011e', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fc231040c51a351cb0149962a2668e96074f7ec', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ee0e56bbbac6bee461eed0304dd47ac7ba47aea', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bb9889589c70ed5ac88b2592a7fa550c676d80d', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aab99cc3a39393d6cc65fa1ba4a5cf3e99a45687', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84e473d85c0b31e786d2b711f863cb94235a7167', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35eccc880ba48b627714cefe16e1d644c2bca5e8', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a6019649e49461ee039c343e2054a21f513b78e', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e0ed50c13e4d3a17eb6e045fcbe987c1d8a213b', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5590d6bf949bcd44bb706dd9ac7d0cdc49987a7', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8acd4efe54f49ca39f8c8c60cb9820d9c94716d', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c876baa570a7f8d7b22469b6b841459a3827b9d', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4f2e87096507d67b4707440f1c6aa51221cd7d8', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a3846e951bc685e59a3090839ab8cec19f7e8c7', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7da9c9b5e5281979bcf59ace6354c4f0e9066adf', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db97b7d1d4adab73aebeb357bd06b79199020fb8', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13d45a9493c24a74d4579973fb5de3f0d15de71b', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d0ae342f8c053d4b159c99ab47c893b34d76d81', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e76bfbb17acae86b802d72ea815b8a6a5960bf63', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79f14e3d7388b4bb52f7872df77ac10b61b264a4', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd21443a609ed250d19a0c8f2b1d153759bc86de2', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7d9db4d95d786b94a36570868ab99e42240d90f', 'committer_username': 'anshg1214', 'committer_name': 'Ansh Goyal', 'committer_email': 'anshg1214@gmail.com', 'commit_date': datetime.datetime(2021, 5, 12, 12, 54, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0a6e4364ca7615e7bc17becbd8f210ca94128c0', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df3f02bffaffb00046accddf3245b89afa16c7ae', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '338418a6965e27ff2e0a33fac018b494d95494e1', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89b1ef9f51e8a7631ac259efcb7c724e8cb73f14', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2fa41badb659b5681bd30e4d1790c7a36ede566', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae9c723044e955f8529a9c50b31336f1086431d8', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c3f05d3239607a5e0ae0a82eb1ec0485cdc1c0c', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '777cae9f94118b0cc278142bcf0a00bf1bb57b11', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8587ea304293d203cd8c4ab654e5253b8d3f6946', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd94de2f8dc14f4e72c0658098aa3175c124bd597', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71ab1c566cbdc4b3cbe72957f6fce72a89084f60', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c86ccafb9bcb5ad2d88910f8c7d45d0fac19b99b', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96ebe56c9f18a58a4ba4c1540a79bbd331db0a46', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5300d5ddde1aeaa3ca1fa9665c6fd6bf7524f27', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c840fd55ef6bc53c6c952a680da2c0bd786eb41', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7dcd3d298138df95e57fe4eb7ec93a5bd0c66e6', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '168683e8166bfa2516afa8337695a2fc49462100', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7730f0595e601ff4a197b28ed317c123f0c06c59', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd70cbf095b7319bacd887d35634400f2e7efa7ff', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '117a9820a64d1945df173bd7f5b745564378a8ca', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab45885def1ccaf9cbd2dd443857b8c4bdd81ea7', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94193f4857ffead5dc738bfbea43d6407d5e6751', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '657e36117232f58b4cfe2dcb23b816e36477acb4', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '530c0866a7d35a0f2ed6cdc76ae07ac5c2c63d98', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '175dd2676195d2ff71d0fbcb5041106b27157019', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cddbdaf2058dfb064bc37e04e3eb7607f139c144', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8fcd906729e4d1d703a14b2fd575f518c30c719', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66ed51b1341cae8c4ff75ade96a3cb7d51e62d77', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '934d79e1bff75aca5024aa00a6dd108bd3dccfb1', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39bcb12f04abca6060236a45c02f2cd421ef8768', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}]",,55950385,,User,,15,,2,0

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
41960013,listenbrainz-server,metabrainz/listenbrainz-server,Python,208,669,33,120,11807,14,83,14,"[{'id': 1476931141, 'number': 2549, 'closed': datetime.datetime(2024, 1, 26, 17, 9, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 16, 6, 51, 17, tzinfo=datetime.timezone.utc), 'time_taken': 14120300.0, 'time_delta': '163 days, 10:18:20', 'additions': 2043, 'deletions': 311, 'state': 'closed'}, {'id': 1445210355, 'number': 2530, 'closed': datetime.datetime(2023, 8, 3, 14, 49, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 22, 5, 13, 52, tzinfo=datetime.timezone.utc), 'time_taken': 1071350.0, 'time_delta': '12 days, 9:35:50', 'additions': 20067, 'deletions': 15, 'state': 'closed'}, {'id': 1422312911, 'number': 2517, 'closed': datetime.datetime(2023, 7, 11, 10, 9, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 6, 27, 21, tzinfo=datetime.timezone.utc), 'time_taken': 445337.0, 'time_delta': '5 days, 3:42:17', 'additions': 18854, 'deletions': 15, 'state': 'closed'}, {'id': 1298833667, 'number': 2440, 'closed': datetime.datetime(2023, 4, 13, 13, 1, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 1, 20, 5, 45, tzinfo=datetime.timezone.utc), 'time_taken': 1011318.0, 'time_delta': '11 days, 16:55:18', 'additions': 16970, 'deletions': 32716, 'state': 'closed'}, {'id': 1294007072, 'number': 2430, 'closed': datetime.datetime(2023, 4, 3, 15, 40, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 29, 6, 5, 11, tzinfo=datetime.timezone.utc), 'time_taken': 466527.0, 'time_delta': '5 days, 9:35:27', 'additions': 59, 'deletions': 0, 'state': 'closed'}]"
