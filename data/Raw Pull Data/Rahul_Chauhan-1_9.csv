pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
714869968,Added support for cs3 api,"CS3APIs are a set of interfaces used to communicate between various entities within science mesh. 

This PR aims to add compatibility within the gfal multiplexer to perform third party copies with science mesh endpoints running the interoperability platform reva. 

We extend the `http-plugin` with the ability to fetch and initialise `Davix::RequestParams` with `Davix::RequestProtocol::CS3` for transfer endpoints with `cs3:` prefix.
Relevant interfaces were added to `libdavix` in PR https://github.com/cern-fts/davix/pull/72


",False,7,https://api.github.com/repos/cern-fts/gfal2/pulls/7,https://github.com/cern-fts/gfal2/pull/7,closed,36,8,7,2,3,11,0,0,[],2021-08-18 08:43:09+00:00,2021-09-06 15:14:15+00:00,1665066.0,"19 days, 6:31:06","[{'comment_id': 693320953, 'comment_body': ""I'd drop any unneeded code, like this..."", 'comment_created': datetime.datetime(2021, 8, 21, 7, 47, 44, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 693321001, 'comment_body': 'also this should be left as in the original code', 'comment_created': datetime.datetime(2021, 8, 21, 7, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 693321027, 'comment_body': '...and this can be removed as well', 'comment_created': datetime.datetime(2021, 8, 21, 7, 48, 27, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 693321575, 'comment_body': 'Here I would add a comment stating that\r\n```\r\nThe authentication with Reva is yet to be properly designed. Nevertheless, there is a need to associate tokens to URLs given that a token issued for a destination must have write rights, whereas right now GFAL issues a `stat()` == `HEAD` request also to the destination without requiring write rights. To be further developed.\r\n```', 'comment_created': datetime.datetime(2021, 8, 21, 7, 53, 53, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 693321840, 'comment_body': 'Not sure this is in line with how GFAL is compiled, up to @mpatrascoiu to approve it (apart the small typo).', 'comment_created': datetime.datetime(2021, 8, 21, 7, 56, 32, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 700039297, 'comment_body': 'Hello @glpatcern,\r\n\r\nWe can leave the build folder in there. Correct the typo, remove the extra trailing whiteline :slightly_smiling_face: ', 'comment_created': datetime.datetime(2021, 9, 1, 9, 24, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}, {'comment_id': 700041649, 'comment_body': ""I'm of the same opinion. This example file should be left as it was originally, except for the addition of the `\\n` symbol in the print statement."", 'comment_created': datetime.datetime(2021, 9, 1, 9, 27, 33, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}, {'comment_id': 700042615, 'comment_body': ""I would revert even this. It's too specific to a protocol of a particular plugin to be part of the main `gfal_copy` example."", 'comment_created': datetime.datetime(2021, 9, 1, 9, 28, 48, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}, {'comment_id': 700043449, 'comment_body': ""If you're adding `cs3s` in [Davix](https://github.com/cern-fts/davix/pull/72#discussion_r700010963), make sure to add it also here."", 'comment_created': datetime.datetime(2021, 9, 1, 9, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}, {'comment_id': 700077468, 'comment_body': 'I see your point. But then we need to document these env vars are required by the plugin -> in Davix?', 'comment_created': datetime.datetime(2021, 9, 1, 10, 16, 19, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 700125980, 'comment_body': 'Either Davix or the [gfal_http_plugin.cpp](https://github.com/cern-fts/gfal2/blob/master/src/plugins/http/gfal_http_plugin.cpp) file.', 'comment_created': datetime.datetime(2021, 9, 1, 11, 31, 47, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}]","[{'commit_sha': '0ce3690a824b5187995a223d8a37782729a816cf', 'committer_username': 'dynamic-entropy', 'committer_name': 'Rahul Chauhan', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 15, 5, 56, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cec625ab9e0c590a42f69f85f7c2d1983e0973cc', 'committer_username': 'dynamic-entropy', 'committer_name': 'Rahul Chauhan', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 15, 5, 56, 40, tzinfo=datetime.timezone.utc)}]",Rahul Chauhan,69708588,,User,,52,,4,3
714861641,Added support for cs3 api,"This PR extends `libdavix` with `CS3 Request Protocol` interface and corresponding Authorisation, Authentication and Transfer Request parameters, and methods to interact with them as required by PR https://github.com/cern-fts/gfal2/pull/7. 

A transfer between a ScienceMesh site and a Grid Site introduces a possibility for FTS to Authenticate with two different tokens for certain transfers.  And these identities should be provided by the user on whose behalf the transfers are made. 
Later Transfer Headers are determined based on role (active, passive) of endpoints and mode ( push, pull, streamed) of transfer.



",True,72,https://api.github.com/repos/cern-fts/davix/pulls/72,https://github.com/cern-fts/davix/pull/72,closed,309,4,13,4,1,23,0,0,[],2021-08-18 08:31:36+00:00,2021-09-06 14:59:03+00:00,1664847.0,"19 days, 6:27:27","[{'comment_id': 693322209, 'comment_body': 'Maybe add a comment referring the code mentioned in https://github.com/cern-fts/gfal2/pull/7#discussion_r693321575', 'comment_created': datetime.datetime(2021, 8, 21, 8, 0, 38, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 700004292, 'comment_body': ""I believe the role of this method would be clearer if it's made static."", 'comment_created': datetime.datetime(2021, 9, 1, 8, 38, 28, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}, {'comment_id': 700006452, 'comment_body': 'Is the `struct` necessary?', 'comment_created': datetime.datetime(2021, 9, 1, 8, 41, 18, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}, {'comment_id': 700006526, 'comment_body': 'Using `credMap->emplace(uri, cred)` is a good idea here.', 'comment_created': datetime.datetime(2021, 9, 1, 8, 41, 23, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}, {'comment_id': 700007260, 'comment_body': 'Line deletion.', 'comment_created': datetime.datetime(2021, 9, 1, 8, 42, 24, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}, {'comment_id': 700007928, 'comment_body': 'Line deletion again, but this one removes any empty lines between the two functions.', 'comment_created': datetime.datetime(2021, 9, 1, 8, 43, 19, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}, {'comment_id': 700009015, 'comment_body': '`token` can be mode `const&` reference.', 'comment_created': datetime.datetime(2021, 9, 1, 8, 44, 43, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}, {'comment_id': 700010117, 'comment_body': ""Regarding `token_write_access`, I found it a bit difficult to convert from this role to `isDst` role, which is the flag's corresponding purpose in the `Credential` object."", 'comment_created': datetime.datetime(2021, 9, 1, 8, 46, 9, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}, {'comment_id': 700010963, 'comment_body': 'Would we have Reva tokens over `https`?\r\nIf so, shouldn\'t also `d_ptr->proto == ""cs3s""` be added?', 'comment_created': datetime.datetime(2021, 9, 1, 8, 47, 17, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}, {'comment_id': 700013188, 'comment_body': ""Is this an iteration over the whole map?\r\nWouldn't that mean the `active_token` and `passive_token` values depend only on the last element in the map?\r\n\r\nShouldn't there be a filtering by `uri`?"", 'comment_created': datetime.datetime(2021, 9, 1, 8, 50, 8, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}, {'comment_id': 700072482, 'comment_body': ""I'd turn around this to another question: what is the meaning of say `s3s` vs. `s3`? I understood that the `s` suffix means secure vs. plain/unsecure (`https` over `http`, SSL-encrypted `rfios` over plain `rfio`, etc.), but `s3` or `gcloud` ARE `https` only, right? what's the purpose of defining both prefixes if only the secure one is to be used?\r\n\r\nLikewise, `cs3` is GRPC over `https` and there's no option to have unsecure `cs3`."", 'comment_created': datetime.datetime(2021, 9, 1, 10, 8, 58, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 700124515, 'comment_body': ""> but `s3` or `gcloud` ARE `https` only, right?\r\n\r\nThat's not necessarily the case. I've seen occurrences of `s3://` calls hanging, as the actual request was sent over `http://` and not `https://`.\r\n\r\nFor Reva, the translation from `cs3://` might always be to `https://`, in which case my proposed change is not needed."", 'comment_created': datetime.datetime(2021, 9, 1, 11, 29, 36, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}, {'comment_id': 701813409, 'comment_body': ""OK, after checking around it turns out we may have Reva running over `http` (though not for general production), therefore your proposed change is indeed fully relevant. In fact, Reva itself is typically deployed to listen to `http` and a reverse proxy is deployed in front for `https` (K8s, nginx, ...).\r\n\r\nGiven all that, let's go for `cs3` -> `http` and `cs3s` as an extra prefix resolved to `https`. @dynamic-entropy can you please add the `cs3s` prefix?"", 'comment_created': datetime.datetime(2021, 9, 3, 11, 23, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 702418031, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 9, 5, 12, 31, 51, tzinfo=datetime.timezone.utc), 'commenter': 'dynamic-entropy', 'type': 'User'}, {'comment_id': 702418056, 'comment_body': 'Done. Thanks.', 'comment_created': datetime.datetime(2021, 9, 5, 12, 32, 7, tzinfo=datetime.timezone.utc), 'commenter': 'dynamic-entropy', 'type': 'User'}, {'comment_id': 702418121, 'comment_body': 'Thankyou. Done.', 'comment_created': datetime.datetime(2021, 9, 5, 12, 32, 30, tzinfo=datetime.timezone.utc), 'commenter': 'dynamic-entropy', 'type': 'User'}, {'comment_id': 702418513, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 9, 5, 12, 35, 42, tzinfo=datetime.timezone.utc), 'commenter': 'dynamic-entropy', 'type': 'User'}, {'comment_id': 702423408, 'comment_body': 'Earlier we misunderstood the implications of `token_write_access`. We were trying to add an extra var. I missed to correct it here. Changed it back to `token_write_access`. ', 'comment_created': datetime.datetime(2021, 9, 5, 13, 12, 26, tzinfo=datetime.timezone.utc), 'commenter': 'dynamic-entropy', 'type': 'User'}, {'comment_id': 702424321, 'comment_body': 'This credMap is supposed to live only in the context of that transfer. So we only have two token at any time. \r\nIf this is not destroyed when that transfer job completes then we would have to find an alternative. ', 'comment_created': datetime.datetime(2021, 9, 5, 13, 19, 19, tzinfo=datetime.timezone.utc), 'commenter': 'dynamic-entropy', 'type': 'User'}, {'comment_id': 702764058, 'comment_body': ""Hello,\r\n\r\nOn second thought, to keep this consistent with the `gcloud::CredentialProvider` and the way it is used in Gfal2, let's keep `reva::updateCredentials(..)` without static in it."", 'comment_created': datetime.datetime(2021, 9, 6, 9, 45, 59, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}, {'comment_id': 702779439, 'comment_body': ""I understand. If the map is guaranteed to only have 2 elements in it, it's ok.\r\n\r\nMaking sure I have to have the correct rationale:\r\n- `active_token` / `passive_token` naming is influenced primarily by 3rd push/pull role (E.g.: destination is active for 3rd pull / source is active for 3rd push) "", 'comment_created': datetime.datetime(2021, 9, 6, 10, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}, {'comment_id': 702897332, 'comment_body': 'Yes, that is correct. The names are borrowed from a draft RFC on HTTP-TPC.', 'comment_created': datetime.datetime(2021, 9, 6, 13, 21, tzinfo=datetime.timezone.utc), 'commenter': 'dynamic-entropy', 'type': 'User'}, {'comment_id': 702898885, 'comment_body': 'Sure.', 'comment_created': datetime.datetime(2021, 9, 6, 13, 22, 59, tzinfo=datetime.timezone.utc), 'commenter': 'dynamic-entropy', 'type': 'User'}]","[{'commit_sha': '49e84bbd08878ff2f587aef33865be1ba805eddc', 'committer_username': 'dynamic-entropy', 'committer_name': 'Rahul Chauhan', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 15, 5, 56, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b98bd2803ed567b0a8e026f7cbfcbb669a3249d7', 'committer_username': 'dynamic-entropy', 'committer_name': 'Rahul Chauhan', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 15, 5, 56, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c460679f181f1821a7a9ae7054283d2ce555345', 'committer_username': 'dynamic-entropy', 'committer_name': 'Rahul Chauhan', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 15, 5, 56, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3faf40c33a0734d4eb4b8f8f8b54479ded3a6e49', 'committer_username': 'dynamic-entropy', 'committer_name': 'Rahul Chauhan', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 15, 5, 56, 40, tzinfo=datetime.timezone.utc)}]",Rahul Chauhan,69708588,,User,,52,,4,3
714869968,Added support for cs3 api,"CS3APIs are a set of interfaces used to communicate between various entities within science mesh. 

This PR aims to add compatibility within the gfal multiplexer to perform third party copies with science mesh endpoints running the interoperability platform reva. 

We extend the `http-plugin` with the ability to fetch and initialise `Davix::RequestParams` with `Davix::RequestProtocol::CS3` for transfer endpoints with `cs3:` prefix.
Relevant interfaces were added to `libdavix` in PR https://github.com/cern-fts/davix/pull/72


",False,7,https://api.github.com/repos/cern-fts/gfal2/pulls/7,https://github.com/cern-fts/gfal2/pull/7,closed,36,8,7,2,3,11,0,0,[],2021-08-18 08:43:09+00:00,2021-09-06 15:14:15+00:00,1665066.0,"19 days, 6:31:06","[{'comment_id': 693320953, 'comment_body': ""I'd drop any unneeded code, like this..."", 'comment_created': datetime.datetime(2021, 8, 21, 7, 47, 44, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 693321001, 'comment_body': 'also this should be left as in the original code', 'comment_created': datetime.datetime(2021, 8, 21, 7, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 693321027, 'comment_body': '...and this can be removed as well', 'comment_created': datetime.datetime(2021, 8, 21, 7, 48, 27, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 693321575, 'comment_body': 'Here I would add a comment stating that\r\n```\r\nThe authentication with Reva is yet to be properly designed. Nevertheless, there is a need to associate tokens to URLs given that a token issued for a destination must have write rights, whereas right now GFAL issues a `stat()` == `HEAD` request also to the destination without requiring write rights. To be further developed.\r\n```', 'comment_created': datetime.datetime(2021, 8, 21, 7, 53, 53, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 693321840, 'comment_body': 'Not sure this is in line with how GFAL is compiled, up to @mpatrascoiu to approve it (apart the small typo).', 'comment_created': datetime.datetime(2021, 8, 21, 7, 56, 32, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 700039297, 'comment_body': 'Hello @glpatcern,\r\n\r\nWe can leave the build folder in there. Correct the typo, remove the extra trailing whiteline :slightly_smiling_face: ', 'comment_created': datetime.datetime(2021, 9, 1, 9, 24, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}, {'comment_id': 700041649, 'comment_body': ""I'm of the same opinion. This example file should be left as it was originally, except for the addition of the `\\n` symbol in the print statement."", 'comment_created': datetime.datetime(2021, 9, 1, 9, 27, 33, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}, {'comment_id': 700042615, 'comment_body': ""I would revert even this. It's too specific to a protocol of a particular plugin to be part of the main `gfal_copy` example."", 'comment_created': datetime.datetime(2021, 9, 1, 9, 28, 48, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}, {'comment_id': 700043449, 'comment_body': ""If you're adding `cs3s` in [Davix](https://github.com/cern-fts/davix/pull/72#discussion_r700010963), make sure to add it also here."", 'comment_created': datetime.datetime(2021, 9, 1, 9, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}, {'comment_id': 700077468, 'comment_body': 'I see your point. But then we need to document these env vars are required by the plugin -> in Davix?', 'comment_created': datetime.datetime(2021, 9, 1, 10, 16, 19, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 700125980, 'comment_body': 'Either Davix or the [gfal_http_plugin.cpp](https://github.com/cern-fts/gfal2/blob/master/src/plugins/http/gfal_http_plugin.cpp) file.', 'comment_created': datetime.datetime(2021, 9, 1, 11, 31, 47, tzinfo=datetime.timezone.utc), 'commenter': 'mpatrascoiu', 'type': 'User'}]","[{'commit_sha': '0ce3690a824b5187995a223d8a37782729a816cf', 'committer_username': 'dynamic-entropy', 'committer_name': 'Rahul Chauhan', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 15, 5, 56, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cec625ab9e0c590a42f69f85f7c2d1983e0973cc', 'committer_username': 'dynamic-entropy', 'committer_name': 'Rahul Chauhan', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 15, 5, 56, 40, tzinfo=datetime.timezone.utc)}]",Rahul Chauhan,69708588,,User,,52,,4,3
715613526,Added support for HTTP TPC ,"Added support for HTTP Third Party Copy to the ocdav package. 
HTTP-TPC is a protocol, based on HTTP, for copying an entity located on one server to a different server.  
The main benefit is to allow for optimal the network use.  
One typical optimisation is achieved by allowing the two servers to communicate directly so that the data representing the 
entity is not relayed through the controlling client.

**TODO:**
- ~[ ] Add ability to supply storage issued token~ -> this is addressed by mapping OIDC tokens


Closes #1787 ",True,2007,https://api.github.com/repos/cs3org/reva/pulls/2007,https://github.com/cs3org/reva/pull/2007,closed,1051,191,19,24,67,37,1,0,[{'name': 'GSoC'}],2021-08-19 05:30:39+00:00,2022-02-14 15:41:24+00:00,15502245.0,"179 days, 10:10:45","[{'comment_id': 692130527, 'comment_body': '@dynamic-entropy to avoid the else branch just `return` here', 'comment_created': datetime.datetime(2021, 8, 19, 13, 51, 13, tzinfo=datetime.timezone.utc), 'commenter': 'labkode', 'type': 'User'}, {'comment_id': 692205389, 'comment_body': 'Ah! Thankyou.', 'comment_created': datetime.datetime(2021, 8, 19, 15, 10, 39, tzinfo=datetime.timezone.utc), 'commenter': 'dynamic-entropy', 'type': 'User'}, {'comment_id': 693358698, 'comment_body': ""Is this header documented somewhere? I don't seem to find it in GFAL2 nor in Davix..."", 'comment_created': datetime.datetime(2021, 8, 21, 14, 3, 44, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 693408168, 'comment_body': 'Nope. It is not. I have used this in davix for reva specific queries to differentiate between a remote and a local transfer (site managed by same server). So I used this additional header to differentiate.\r\n', 'comment_created': datetime.datetime(2021, 8, 21, 22, 22, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dynamic-entropy', 'type': 'User'}, {'comment_id': 693457596, 'comment_body': ""I see. But then as we can't assume clients use Davix, we should stick to probing the specific HTTP TPC headers: I'd check whether the `TransferAuthorization` or `TransferX-Access-Token` headers are present in order to assert this is a TPC."", 'comment_created': datetime.datetime(2021, 8, 22, 7, 30, 11, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 693458236, 'comment_body': 'Also a more general comment, which goes beyond GSoC: we will have to see how to use `TransferAuthorization` / `Authorization` as headers as opposed to `TransferX-Access-Token`, because when we interact with grid sites they will likely send us (Reva) an `Authorization` header, not an `X-Access-Token` one, as their implementation again does not necessarily use Davix and would just stick to the HTTP TPC specs (exactly like we use the go http client in Reva, not Davix).', 'comment_created': datetime.datetime(2021, 8, 22, 7, 35, 5, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 693459576, 'comment_body': '1. Sure, I will change to using `TransferHeaderAuthorisation` or `TransferHeaderX-Access-Token` to attest it as TPC.\r\n2. Yeah, I had this in my head. We will figure it out based on the authentication mechanism we finalise. ', 'comment_created': datetime.datetime(2021, 8, 22, 7, 45, 11, tzinfo=datetime.timezone.utc), 'commenter': 'dynamic-entropy', 'type': 'User'}, {'comment_id': 719279383, 'comment_body': '@dynamic-entropy can you remove the reference to `ThirdPartyCopy` and replace it with `TransferHeaderAuthorization`?', 'comment_created': datetime.datetime(2021, 9, 30, 10, 38, 6, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 719281220, 'comment_body': ""And here, given the ongoing discussions we'll have to support `TransferHeaderAuthorization` only, not `TransferHeaderX-Access-Token`, so this should be changed accordingly.\r\n(But then do we have to change Davix again? I missed this line earlier...)"", 'comment_created': datetime.datetime(2021, 9, 30, 10, 40, 47, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 719281382, 'comment_body': 'And same here', 'comment_created': datetime.datetime(2021, 9, 30, 10, 41, 2, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 719294808, 'comment_body': 'Well, yeah, since the other copy flow does not use/mention this header, `TransferHeaderAuthorization` will do the work.', 'comment_created': datetime.datetime(2021, 9, 30, 11, 0, 49, tzinfo=datetime.timezone.utc), 'commenter': 'dynamic-entropy', 'type': 'User'}, {'comment_id': 738495652, 'comment_body': 'To keep track, this is indeed also to be changed in Davix.', 'comment_created': datetime.datetime(2021, 10, 28, 15, 12, 47, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 766745635, 'comment_body': ""I'd recommend using a [string builder](https://pkg.go.dev/strings#Builder), for better performance, without impact on readability"", 'comment_created': datetime.datetime(2021, 12, 10, 14, 59, 3, tzinfo=datetime.timezone.utc), 'commenter': 'refs', 'type': 'User'}, {'comment_id': 766746662, 'comment_body': ""I wouldn't leave this here. You could use the logger, and log this on debug level, so when developing against you just need to raise the logging level"", 'comment_created': datetime.datetime(2021, 12, 10, 15, 0, 17, tzinfo=datetime.timezone.utc), 'commenter': 'refs', 'type': 'User'}, {'comment_id': 766747644, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 12, 10, 15, 1, 32, tzinfo=datetime.timezone.utc), 'commenter': 'refs', 'type': 'User'}, {'comment_id': 766748921, 'comment_body': '```suggestion\r\n\t// send performance markers periodically every PerfMarkerResponseTime (5 seconds) unless configured.\r\n```', 'comment_created': datetime.datetime(2021, 12, 10, 15, 3, 4, tzinfo=datetime.timezone.utc), 'commenter': 'refs', 'type': 'User'}, {'comment_id': 766760519, 'comment_body': 'Good point, @dynamic-entropy could you please look into that?', 'comment_created': datetime.datetime(2021, 12, 10, 15, 17, 39, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 767550538, 'comment_body': 'Sure.', 'comment_created': datetime.datetime(2021, 12, 13, 9, 35, 41, tzinfo=datetime.timezone.utc), 'commenter': 'dynamic-entropy', 'type': 'User'}, {'comment_id': 786660685, 'comment_body': 'Shouldn\'t both local as well as third party copies be supported when TPC is enabled? We can carry out checks based on the headers.\r\n- If source != """" -> TPC pull\r\n- If dst is a proper URL -> TPC push\r\n- Else if dst != """" -> local copy\r\n- Else return error', 'comment_created': datetime.datetime(2022, 1, 18, 11, 30, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ishank011', 'type': 'User'}, {'comment_id': 786664424, 'comment_body': 'Call the `extractOverwrite` and `extractDepth` methods here', 'comment_created': datetime.datetime(2022, 1, 18, 11, 35, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ishank011', 'type': 'User'}, {'comment_id': 786665675, 'comment_body': 'This needs to be checked only if `dstStatRes.Status.Code == rpc.Code_CODE_OK`', 'comment_created': datetime.datetime(2022, 1, 18, 11, 37, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ishank011', 'type': 'User'}, {'comment_id': 786671056, 'comment_body': ""We have a `sizedeferred` parameter which can be passed. It's already handled in the file systems (https://github.com/cs3org/reva/blob/master/pkg/storage/utils/localfs/upload.go#L109). Just need to handle it in the storageprovider https://github.com/cs3org/reva/blob/master/internal/grpc/services/storageprovider/storageprovider.go#L457\r\n\r\nSince you're using the simple upload protocol, the size does not need to be provided, so I'd prefer this approach rather than passing an arbitrary constant"", 'comment_created': datetime.datetime(2022, 1, 18, 11, 45, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ishank011', 'type': 'User'}, {'comment_id': 786674614, 'comment_body': 'Cases where depth is infinity are not handled and will result in errors', 'comment_created': datetime.datetime(2022, 1, 18, 11, 50, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ishank011', 'type': 'User'}, {'comment_id': 786676283, 'comment_body': 'Add it as a constant here https://github.com/cs3org/reva/blob/master/internal/http/services/owncloud/ocdav/webdav.go#L57', 'comment_created': datetime.datetime(2022, 1, 18, 11, 52, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ishank011', 'type': 'User'}, {'comment_id': 786678163, 'comment_body': ""Won't work for directories. Depending on whether depth is infinity or not, you'll have to recurse"", 'comment_created': datetime.datetime(2022, 1, 18, 11, 55, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ishank011', 'type': 'User'}, {'comment_id': 786680595, 'comment_body': ""I wouldn't recommend refactoring both the oidc drivers into one. This one has a really specific use case and I would really want to keep it separate from the other generic one."", 'comment_created': datetime.datetime(2022, 1, 18, 11, 58, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ishank011', 'type': 'User'}, {'comment_id': 786741105, 'comment_body': 'That\'s absolutely correct, the question was more if we may want to have TPC only enabled (or disabled altogether) on a given deployment. But I see the advantage in having the config flag AND still supporting local copies in the same endpoint, so I\'d implement that logic still behind the config flag, what do you think? something like:\r\n```\r\nif source != """" and enableTPC -> TPC pull\r\nelse if dst is a proper URL and enableTPC -> TPC push\r\nelse if dst != """" -> local copy\r\nelse return error\r\n```', 'comment_created': datetime.datetime(2022, 1, 18, 13, 7, 2, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 788010448, 'comment_body': ""Good catch. I learned that for HTTP TPC the `depth` parameter is not relevant and folders are not supported! Therefore I'll modify the code to return `HttpBadRequest` when the target is a folder and will actually remove any reference to `depth` (including the not-implemented `recurse` parameter)."", 'comment_created': datetime.datetime(2022, 1, 19, 18, 3, 40, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 788011044, 'comment_body': ""As discussed I'll try to factorize the mapping-specific code so as to leave the `Authorize` function the cleanest and most generic possible."", 'comment_created': datetime.datetime(2022, 1, 19, 18, 4, 26, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 803632734, 'comment_body': ""Can we refactor this like this? It's cleaner\r\n```\r\nif s.c.EnableHTTPTpc {\r\nif source, pull\r\nelse if destination, push\r\nelse, bad request\r\n}\r\n```"", 'comment_created': datetime.datetime(2022, 2, 10, 12, 41, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ishank011', 'type': 'User'}, {'comment_id': 803637831, 'comment_body': 'Move this after the call to `performHTTPPull`', 'comment_created': datetime.datetime(2022, 2, 10, 12, 47, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ishank011', 'type': 'User'}, {'comment_id': 803640052, 'comment_body': 'Please use errtypes instead of errors.New and Errorf', 'comment_created': datetime.datetime(2022, 2, 10, 12, 50, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ishank011', 'type': 'User'}, {'comment_id': 803640757, 'comment_body': ""A `StatusNotImplemented` can't always be inferred as the case that the source is a folder. I'd remove the comment and change the error message.\r\n\r\nAlso move this check before calling InitiateFileUpload, as that would leave some stale metadata if the upload is not completed"", 'comment_created': datetime.datetime(2022, 2, 10, 12, 51, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ishank011', 'type': 'User'}, {'comment_id': 803647011, 'comment_body': 'regardless of', 'comment_created': datetime.datetime(2022, 2, 10, 12, 57, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ishank011', 'type': 'User'}, {'comment_id': 805894114, 'comment_body': ""You're never really sending the performance marker, are you?"", 'comment_created': datetime.datetime(2022, 2, 14, 14, 25, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ishank011', 'type': 'User'}, {'comment_id': 805913191, 'comment_body': 'Yes, they are: the GFAL client understands the response as a kind of progressive HTML. Why do you think they are never sent?\r\n\r\nActually, for reference this is a typical output of a `gfal-copy` operation. Though the Davix layer seems to ignore them, FTS takes them into account:\r\n\r\n```\r\nExecuting TPC in pull mode:\r\ngfal-copy -v --copy-mode pull -D""BEARER:TOKEN=xxxxx"" cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/testtpc.txt cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/testtpc-FnyV\r\nINFO     [gfal_module_load] plugin /usr/lib64/gfal2-plugins//libgfal_plugin_file.so loaded with success \r\nINFO     Davix: Unable to find a proxy or cert/key pair using either X509_USER_* variables or /tmp/x509up_u0\r\nINFO     Davix: Unable to find a proxy or cert/key pair using either X509_USER_* variables or /tmp/x509up_u0\r\nINFO     [gfal_module_load] plugin /usr/lib64/gfal2-plugins//libgfal_plugin_http.so loaded with success \r\nINFO     [gfal_module_load] plugin /usr/lib64/gfal2-plugins//libgfal_plugin_sftp.so loaded with success \r\nINFO     Davix: Negative result for operation: HTTP 404 : File not found . After 1 retry\r\nINFO     Davix: Could not execute operation on cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/testtpc-FnyV, error Result HTTP 404 : File not found  after 1 attempts\r\nINFO     Davix: Try to Recover with Metalink...\r\nINFO     Davix: Impossible to Recover with Metalink: Server does not support Metalink standard\r\nINFO     Davix: Negative result for operation: HTTP 404 : File not found . After 1 retry\r\nINFO     Davix: Could not execute operation on cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/testtpc-FnyV, error Result HTTP 404 : File not found  after 1 attempts\r\nINFO     Davix: Try to Recover with Metalink...\r\nINFO     Davix: Impossible to Recover with Metalink: Server does not support Metalink standard\r\nCopying 2110285696 bytes cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/largefile => cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/testtpc-FnyV\r\nevent: [1644566905599] BOTH   GFAL2:CORE:COPY\tLIST:ENTER\t\r\nINFO     Event triggered: BOTH GFAL2:CORE:COPY LIST:ENTER \r\nevent: [1644566905599] BOTH   GFAL2:CORE:COPY\tLIST:ITEM\tcs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/largefile => cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/testtpc-FnyV\r\nINFO     Event triggered: BOTH GFAL2:CORE:COPY LIST:ITEM cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/largefile => cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/testtpc-FnyV\r\nevent: [1644566905600] BOTH   GFAL2:CORE:COPY\tLIST:EXIT\t\r\nINFO     Event triggered: BOTH GFAL2:CORE:COPY LIST:EXIT \r\nevent: [1644566905600] BOTH   http_plugin\tPREPARE:ENTER\tcs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/largefile => cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/testtpc-FnyV\r\nINFO     Event triggered: BOTH http_plugin PREPARE:ENTER cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/largefile => cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/testtpc-FnyV\r\nINFO     Davix: Negative result for operation: HTTP 404 : File not found . After 1 retry\r\nINFO     Davix: Could not execute operation on cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/testtpc-FnyV, error Result HTTP 404 : File not found  after 1 attempts\r\nINFO     Davix: Try to Recover with Metalink...\r\nINFO     Davix: Impossible to Recover with Metalink: Server does not support Metalink standard\r\nevent: [1644566906306] BOTH   http_plugin\tPREPARE:EXIT\tcs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/largefile => cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/testtpc-FnyV\r\nINFO     Event triggered: BOTH http_plugin PREPARE:EXIT cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/largefile => cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/testtpc-FnyV\r\nevent: [1644566906306] BOTH   http_plugin\tTRANSFER:ENTER\tcs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/largefile => cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/testtpc-FnyV\r\nINFO     Event triggered: BOTH http_plugin TRANSFER:ENTER cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/largefile => cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/testtpc-FnyV\r\nINFO     Trying copying with mode 3rd pull\r\nevent: [1644566906306] BOTH   http_plugin\tTRANSFER:TYPE\t3rd pull\r\nINFO     Event triggered: BOTH http_plugin TRANSFER:TYPE 3rd pull\r\nINFO     Performing a HTTP third party copy\r\nINFO     Davix: Hop: cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/testtpc-FnyV\r\nINFO     Davix: Received: Perf Marker\r\nINFO     Davix: Received: Timestamp: 1644566922\r\nINFO     Davix: Received: Stripe Bytes Transferred: 562821824\r\nINFO     Davix: Received: Strip Index: 0\r\nINFO     Davix: Unknown performance marker, ignoring: Strip Index: 0\r\nINFO     Davix: Received: Total Stripe Count: 1\r\nINFO     Davix: Received: End\r\nINFO     Davix: Received: \r\nINFO     Davix: Unknown performance marker, ignoring: \r\nINFO     Davix: Received: Perf Marker\r\nINFO     Davix: Received: Timestamp: 1644566927\r\nINFO     Davix: Received: Stripe Bytes Transferred: 1116601024\r\nINFO     Davix: Received: Strip Index: 0\r\nINFO     Davix: Unknown performance marker, ignoring: Strip Index: 0\r\nINFO     Davix: Received: Total Stripe Count: 1\r\nINFO     Davix: Received: End\r\nmonitor: cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/largefile cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/testtpc-FnyV 223320204 110755840 1116601024 5\r\nINFO     Davix: Received: \r\nINFO     Davix: Unknown performance marker, ignoring: \r\nINFO     Davix: Received: Perf Marker\r\nINFO     Davix: Received: Timestamp: 1644566932\r\nINFO     Davix: Received: Stripe Bytes Transferred: 1658585087\r\nINFO     Davix: Received: Strip Index: 0\r\nINFO     Davix: Unknown performance marker, ignoring: Strip Index: 0\r\nINFO     Davix: Received: Total Stripe Count: 1\r\nINFO     Davix: Received: End\r\nmonitor: cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/largefile cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/testtpc-FnyV 165858508 108396812 1658585087 10\r\nINFO     Davix: Received: \r\nINFO     Davix: Unknown performance marker, ignoring: \r\nINFO     Davix: Received: success: Created\r\nINFO     Copy succeeded using mode 3rd pull\r\nevent: [1644566950654] BOTH   http_plugin\tTRANSFER:EXIT\tcs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/largefile => cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/testtpc-FnyV\r\nINFO     Event triggered: BOTH http_plugin TRANSFER:EXIT cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/largefile => cs3s://ruciose.cernbox.cern.ch/remote.php/webdav/eos/project/c/cernbox/test/rucio_se/testtpc-FnyV\r\n```\r\n', 'comment_created': datetime.datetime(2022, 2, 14, 14, 43, 13, tzinfo=datetime.timezone.utc), 'commenter': 'glpatcern', 'type': 'User'}, {'comment_id': 805972254, 'comment_body': 'Ah okay, my bad', 'comment_created': datetime.datetime(2022, 2, 14, 15, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ishank011', 'type': 'User'}]","[{'commit_sha': 'b2f2a170218cc2517f50eaa7e20e589e8af8047a', 'committer_username': 'dynamic-entropy', 'committer_name': 'Rahul Chauhan', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 15, 5, 56, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ff933136a482b94aaa2d7a784eb512283511e82', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee86d9238f903f0fb6271ad4e4b68711abf885c4', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9282d17a91c49124c0c8f020132dd2900b931f22', 'committer_username': 'dynamic-entropy', 'committer_name': 'Rahul Chauhan', 'committer_email': None, 'commit_date': datetime.datetime(2020, 8, 15, 5, 56, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e7435889725c10897dda71390f15a154ef2d72e', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9863537788b30856f531ecf7d56f0eed3afafc1', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c75488556f871846395f0bb9d21327b5cc9ee136', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95503b40402ee4ec633cf9b0f56486e7e29499b0', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3608ad3a20dddb4af0945b414aeeaeeb1673b4b4', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ce3e67e78168f3e559b6f2c72a19980a316e6ee', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c22565eb5bee2c202251c554ddbd6dcc41eb8f8', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54161f8f814f15af3d280d7503fa588dedd619eb', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46df7a8d5efafd58b16e0d1fd679573a69bbf45c', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c373bbea18cbdb14bfe5f4d63394da33c5c7f5b', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93033f3e0452ca5d66122c192fea5466a506ca19', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b25ead5612722b766beb38cb65c96e1aae46085', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2553249b21bb667d84b6afae29e170225b7ba18', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f917101b32236371bfdbe3cd5b82283ae7d777b', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef8531ea924ec6b1b99cf44e5fbd0005af8a1d8d', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0da17423d629a1f5aa29c6b9ad0acc4955d45f74', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb4e5766f7a4602fd0e4d13c940e6697c8e9bdf9', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b39ef890e2a4936648b39c4a609207ec04957605', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df15d1378a28befdc7c41cf7469eb84288ca7b24', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3450ac20bccf601672ede2302030e644f876b23d', 'committer_username': 'glpatcern', 'committer_name': 'Giuseppe Lo Presti', 'committer_email': 'giuseppe.lopresti@cern.ch', 'commit_date': datetime.datetime(2014, 3, 6, 9, 17, 51, tzinfo=datetime.timezone.utc)}]",Rahul Chauhan,69708588,,User,,52,,4,3

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
146441881,gfal2,cern-fts/gfal2,C,13,7,8,26,2240,11,25,2,"[{'id': 714869968, 'number': 7, 'closed': datetime.datetime(2021, 9, 6, 15, 14, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 8, 43, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1665066.0, 'time_delta': '19 days, 6:31:06', 'additions': 36, 'deletions': 8, 'state': 'closed'}]"
26170364,davix,cern-fts/davix,C++,34,83,16,29,1983,22,6,1,"[{'id': 714861641, 'number': 72, 'closed': datetime.datetime(2021, 9, 6, 14, 59, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 8, 31, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1664847.0, 'time_delta': '19 days, 6:27:27', 'additions': 309, 'deletions': 4, 'state': 'closed'}]"
168244589,reva,cs3org/reva,Go,113,165,14,84,2304,294,51,70,"[{'id': 715613526, 'number': 2007, 'closed': datetime.datetime(2022, 2, 14, 15, 41, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 19, 5, 30, 39, tzinfo=datetime.timezone.utc), 'time_taken': 15502245.0, 'time_delta': '179 days, 10:10:45', 'additions': 1051, 'deletions': 191, 'state': 'closed'}]"
