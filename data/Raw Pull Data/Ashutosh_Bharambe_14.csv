pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
676528909,Add Integro Differential Equations Support,1. How do I add support for closure inside the `get_numeric_integral`? `get_numeric_integral` cannot be a fixed function since the number of dependent variables may vary.,True,330,https://api.github.com/repos/SciML/NeuralPDE.jl/pulls/330,https://github.com/SciML/NeuralPDE.jl/pull/330,closed,371,38,5,33,5,47,0,0,[],2021-06-23 18:39:10+00:00,2021-08-23 11:12:41+00:00,5243611.0,"60 days, 16:33:31","[{'comment_id': 664748281, 'comment_body': '_transform_expression', 'comment_created': datetime.datetime(2021, 7, 6, 17, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 664803153, 'comment_body': 'all actions with the parser must be performed before starting training. To call the `build_symbolic_loss`  in `integral` function means that it will be called every time during training, so it will take a very long time.', 'comment_created': datetime.datetime(2021, 7, 6, 18, 54, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 667755213, 'comment_body': 'global is bad. it will always lead to trouble. Avoid it', 'comment_created': datetime.datetime(2021, 7, 12, 9, 4, 18, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 672229509, 'comment_body': ""it's some trouble with `FastChain` after the new release of `Flux`, just use `Chain` for a test while `FastChain` won't have been fixed."", 'comment_created': datetime.datetime(2021, 7, 19, 11, 51, 51, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 672231117, 'comment_body': ""what's up?"", 'comment_created': datetime.datetime(2021, 7, 19, 11, 54, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 672233106, 'comment_body': '`initial_params` change behavior after the update in Flux and now it works incorrectly.\r\n```julia\r\nchain = FastChain(FastDense(1,12,Flux.σ),FastDense(12,1))\r\njulia> initθ = DiffEqFlux.initial_params(chain)\r\n26-element Vector{Union{Nothing, Float32}}:\r\n  0.44163412f0\r\n  0.3313627f0\r\n -0.24543865f0\r\n  0.16519924f0\r\n  0.18937507f0\r\n -0.047894925f0\r\n  ⋮\r\n -0.50703824f0\r\n -0.13543157f0\r\n  0.036089323f0\r\n  0.0010503983f0\r\n   nothing\r\n```', 'comment_created': datetime.datetime(2021, 7, 19, 11, 57, 43, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 672244216, 'comment_body': 'Can you try and narrow that down?', 'comment_created': datetime.datetime(2021, 7, 19, 12, 15, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 672521963, 'comment_body': 'ok, I will open the issue in DiffEqFlux as soon as I figure out what exactly is the problem with `DiffEqFlux.initial_params`. ', 'comment_created': datetime.datetime(2021, 7, 19, 18, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 672712523, 'comment_body': '> in this case I needed to use integral outside the `symbolic_discretize` and `discretize`. And hence global declaration. What are other ways to do it?', 'comment_created': datetime.datetime(2021, 7, 20, 0, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 673371726, 'comment_body': ""it work in forward but\r\n```julia\r\nprob.f.f.loss_function(initθ)\r\n1.1225828958232524\r\n```\r\ndonesn't work in backward\r\n```julia\r\njulia> Zygote.gradient(prob.f.f.loss_function,initθ)\r\nERROR: MethodError: no method matching get(::Tuple{Int64, Int64}, ::Int64, ::Int64)\r\n```\r\nI suppose it is related to integral function.\r\nSo you need  that work in both way:\r\n`integral = get_numeric_integral(strategy, _indvars, _depvars, dict_indvars, chain, derivative)`\r\n\r\n```julia\r\nintegral(initθ,... )\r\nintegral_ = (θ) -> integral(θ, ...)\r\nZygote.gradient(integral_,initθ)\r\n```\r\nAll symbolic things should do before calculation because `Zygote.gradient` probably can't handle all of it.  \r\n"", 'comment_created': datetime.datetime(2021, 7, 20, 18, 16, 2, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 676568130, 'comment_body': 'needs a multidimensional test', 'comment_created': datetime.datetime(2021, 7, 26, 12, 43, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 677059256, 'comment_body': 'Yes, regarding that I wanted to ask this, for a multidimensional integral, I wanted to change definition of the symbolic integral to have a vector of symbols. For eg. I wanted it to be like this : `I = Integral([x , y, z], UnitCube())`. Should I proceed?', 'comment_created': datetime.datetime(2021, 7, 27, 1, 53, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 677086138, 'comment_body': ""It should be done in the same way we're describing sets, i.e. `(x , y, z) \\in UnitCube()`"", 'comment_created': datetime.datetime(2021, 7, 27, 3, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 677368291, 'comment_body': 'I am talking about the `Integral`.', 'comment_created': datetime.datetime(2021, 7, 27, 11, 41, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 677390964, 'comment_body': 'yes. `I = Integral(x^2 + y^2 + z^2,(x,y,z) in UnitCube())`', 'comment_created': datetime.datetime(2021, 7, 27, 12, 15, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 680182284, 'comment_body': 'We first define the `Integral` as `Integral(integrating_variable, domain)` and then pass the function. What I meant was using vector of integrating_variables instead. Is it fine? Or do I have to change it?', 'comment_created': datetime.datetime(2021, 7, 30, 19, 45, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 685163478, 'comment_body': '""Resolve conflicts""  to Flux = ""0.12.6""', 'comment_created': datetime.datetime(2021, 8, 9, 12, 50, 6, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 685207336, 'comment_body': 'why is it here? ', 'comment_created': datetime.datetime(2021, 8, 9, 13, 46, 6, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 685386099, 'comment_body': 'So we can re use the `build_symbolic_loss_function` for getting the integral function in our inner representation.', 'comment_created': datetime.datetime(2021, 8, 9, 17, 28, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 685408046, 'comment_body': 'got it', 'comment_created': datetime.datetime(2021, 8, 9, 18, 1, 13, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 686125543, 'comment_body': 'just press the button “resolve conflict” and merge it', 'comment_created': datetime.datetime(2021, 8, 10, 15, 52, 2, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 686145700, 'comment_body': ""why isn't it removed `global` yet"", 'comment_created': datetime.datetime(2021, 8, 10, 16, 45, 23, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 686153312, 'comment_body': 'these  parameters can be remove as no use ` indvars=indvars, depvars=depvars, dict_indvars=dict_indvars, dict_depvars=dict_depvars`', 'comment_created': datetime.datetime(2021, 8, 10, 16, 55, 1, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 686200436, 'comment_body': 'why do you need it? θ should already be flat', 'comment_created': datetime.datetime(2021, 8, 10, 17, 57, 47, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 686221583, 'comment_body': 'if `cord = ones(2,300)`\r\nso then \r\njulia> size(cord)[2]\r\n300\r\nwhy we calculate it for each index?  it is very slow', 'comment_created': datetime.datetime(2021, 8, 10, 18, 27, 54, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 686234342, 'comment_body': 'in order to give the vectorise output. We have each index is a cord point in the data, so we need to calculate integral seperately for each point', 'comment_created': datetime.datetime(2021, 8, 10, 18, 47, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 686234478, 'comment_body': 'I checked it, it wasnt. I ll recheck', 'comment_created': datetime.datetime(2021, 8, 10, 18, 47, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 686238400, 'comment_body': 'I did try `mapslices` but it threw a `Mutating arrays not supported` error', 'comment_created': datetime.datetime(2021, 8, 10, 18, 52, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 686262921, 'comment_body': ""These are used inside the integral function, so shouldn't we pass them?"", 'comment_created': datetime.datetime(2021, 8, 10, 19, 30, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 686280654, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 10, 19, 59, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 686290544, 'comment_body': "" we don't use these for initializing function inside `get_numeric_integral` so we don't need to pass them."", 'comment_created': datetime.datetime(2021, 8, 10, 20, 15, 9, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 686307708, 'comment_body': 'it is a vector we do not need an index, we need a broadcast here for fast performance (see how it works in `get_numeric_derivative`).\r\nIn any case, it works fully correctly, but slow\r\n', 'comment_created': datetime.datetime(2021, 8, 10, 20, 42, 35, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 686313128, 'comment_body': '```julia\r\nusing BenchmarkTools\r\n\r\nf(x) =x^2\r\n\r\nfunction f_index(x)\r\n    for i in 1:size(x)[2]\r\n        x[:,i].^2\r\n    end\r\nend\r\n\r\n\r\njulia> @benchmark f.(data) setup=(data=rand(2,1000))\r\nBenchmarkTools.Trial: 10000 samples with 9 evaluations.\r\n Range (min … max):  2.525 μs …  3.818 ms  ┊ GC (min … max):  0.00% … 99.82%\r\n Time  (median):     3.732 μs              ┊ GC (median):     0.00%\r\n Time  (mean ± σ):   7.412 μs ± 85.571 μs  ┊ GC (mean ± σ):  28.22% ±  2.44%\r\n\r\n  ▁ ▂ █▅▄▇▂ ▁                 ▃▄▅▄▄▄▃▃▃▃▂▂▂▁▁                ▂\r\n  █▄█████████▆▅▄▅▄▅▆▅▅▅▃▅▆▅▅▅▇█████████████████▇▇▇▇▆▄▅▅▆▅▅▅▅ █\r\n  2.52 μs      Histogram: log(frequency) by time     12.2 μs <\r\n\r\n Memory estimate: 15.75 KiB, allocs estimate: 1.\r\n\r\njulia> @benchmark f_index(data) setup=(data=rand(2,1000))\r\nBenchmarkTools.Trial: 10000 samples with 1 evaluation.\r\n Range (min … max):   56.758 μs … 36.600 ms  ┊ GC (min … max):  0.00% … 99.53%\r\n Time  (median):      78.680 μs              ┊ GC (median):     0.00%\r\n Time  (mean ± σ):   118.139 μs ±  1.100 ms  ┊ GC (mean ± σ):  29.35% ±  3.15%\r\n\r\n  ▄▃ ▆█▆▆▆▄▅█▇▃▃▂▂▃▂▃▃▃▂▂▂▂▁▁▁▁▁▁▁▁▁  ▁▁                       ▂\r\n  ████████████████████████████████████████▇▇█▇▇▇▇▇▇▆▆▆▇▆▆▄▅▄▅▅ █\r\n  56.8 μs       Histogram: log(frequency) by time       188 μs <\r\n\r\n Memory estimate: 187.50 KiB, allocs estimate: 2000.\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 20, 51, 15, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 689152358, 'comment_body': 'why is this added?', 'comment_created': datetime.datetime(2021, 8, 15, 22, 32, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 689379874, 'comment_body': 'Oh that got pushed by mistake. I ll remove it.', 'comment_created': datetime.datetime(2021, 8, 16, 9, 29, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 689827178, 'comment_body': '`@named pde_system = PDESystem(eq,bcs,domains,[x,y],[u])`', 'comment_created': datetime.datetime(2021, 8, 16, 20, 12, 43, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 689827660, 'comment_body': '`@named `', 'comment_created': datetime.datetime(2021, 8, 16, 20, 13, 33, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 689827780, 'comment_body': '`@named `', 'comment_created': datetime.datetime(2021, 8, 16, 20, 13, 45, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 689828302, 'comment_body': '`@named`', 'comment_created': datetime.datetime(2021, 8, 16, 20, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 689829574, 'comment_body': 'and here `@named`', 'comment_created': datetime.datetime(2021, 8, 16, 20, 16, 42, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 689833077, 'comment_body': 'remove  all `NeuralPDE.` from doc', 'comment_created': datetime.datetime(2021, 8, 16, 20, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 689851030, 'comment_body': ' \\int_{0}^{x}u(t)dt', 'comment_created': datetime.datetime(2021, 8, 16, 20, 51, 18, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 689897273, 'comment_body': 'add\r\n```julia\r\ncb = function (p,l)\r\n    println(""Current loss is: $l"")\r\n    return false\r\nend\r\n\r\n```', 'comment_created': datetime.datetime(2021, 8, 16, 22, 19, 33, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 689901638, 'comment_body': '`![IDE](https://user-images.githubusercontent.com/12683885/129637036-7fbd8ad7-ce4e-4d3d-83ad-ff0a4114dc47.png)`\r\n', 'comment_created': datetime.datetime(2021, 8, 16, 22, 29, 10, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 689915905, 'comment_body': 'I don\'t think it needs to describe how to define `Differential` and etc, this is already clear and is described in the rest of the documentation. Here it needs to describe in more detail how to define the integral that it was clear how to use it.\r\n \r\nMy draft suggestion: \r\n\r\n# Integro Differential Equations\r\n\r\nThe integral of function u(x),\r\n\r\n```math\r\n\\int_{0}^{t}u(x)dx\r\n```\r\n\r\nwhere x is variable of integral and t is variable of integro differential equation,\r\n\r\nis defined as\r\n\r\n```julia\r\nusing ModelingToolkit\r\n@parameters t\r\n@variables i(..)\r\nIi = Symbolics.Integral(t, t in DomainSets.ClosedInterval(0, t))\r\n```\r\n\r\nIn multidimensional case,\r\n\r\n```julia\r\nIx = Integral([x,y], (x,y) in DomainSets.UnitSquare())\r\n```\r\n\r\n///describe how it work  ///\r\n\r\n```julia\r\nIx = Integral([x,y], (x,y) in DomainSets.ProductDomain(ClosedInterval(0 ,1), ClosedInterval(0 ,x)))\r\n```\r\n\r\n\r\n## 1-dimensional example\r\n\r\nLets take an example of an integro differential equation:\r\n```math\r\n\\frac{∂}{∂x} u(x)  + 2u(x) + 5 \\int_{0}^{x}u(t)dt = 1 for x \\geq 0\r\n```\r\nand boundary condition\r\n```math\r\nu(0) = 0\r\n```\r\n\r\n```julia\r\nusing NeuralPDE, Flux, ModelingToolkit, GalacticOptim, Optim, DiffEqFlux, DomainSets\r\nimport ModelingToolkit: Interval, infimum, supremum\r\n\r\n@parameters t\r\n@variables i(..)\r\nDi = Differential(t)\r\nIi = Integral(t, t in DomainSets.ClosedInterval(0, t))\r\neq = Di(i(t)) + 2*i(t) + 5*Ii(i(t)) ~ 1\r\nbcs = [i(0.) ~ 0.0]\r\ndomains = [t ∈ Interval(0.0,2.0)]\r\nchain = Chain(Dense(1,15,Flux.σ),Dense(15,1))\r\ninitθ = Float64.(DiffEqFlux.initial_params(chain))\r\n\r\nstrategy_ = GridTraining(0.05)\r\ndiscretization = PhysicsInformedNN(chain,\r\n                                   strategy_;\r\n                                   init_params = nothing,\r\n                                   phi = nothing,\r\n                                   derivative = nothing)\r\npde_system = PDESystem(eq,bcs,domains,[t],[i])\r\nprob = NeuralPDE.discretize(pde_system,discretization)\r\ncb = function (p,l)\r\n    println(""Current loss is: $l"")\r\n    return false\r\nend\r\nres = GalacticOptim.solve(prob, BFGS(); cb = cb, maxiters=100)\r\n```\r\n\r\nPlotting the final solution and analytical solution\r\n\r\n```julia\r\nts = [infimum(d.domain):0.01:supremum(d.domain) for d in domains][1]\r\nphi = discretization.phi\r\nu_predict  = [first(phi([t],res.minimizer)) for t in ts]\r\n\r\nanalytic_sol_func(t) = 1/2*(exp(-t))*(sin(2*t))\r\nu_real  = [analytic_sol_func(t) for t in ts]\r\nusing Plots\r\nplot(ts ,u_real, label = ""Analytical Solution"")\r\nplot!(ts, u_predict, label = ""PINN Solution"")\r\n```\r\n\r\n![IDE](https://user-images.githubusercontent.com/12683885/129749371-18b44bbc-18c8-49c5-bf30-0cd97ecdd977.png)\r\n', 'comment_created': datetime.datetime(2021, 8, 16, 23, 3, 48, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 693502824, 'comment_body': ""why is this two outputs? The equations below don't have the right size."", 'comment_created': datetime.datetime(2021, 8, 22, 13, 30, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 693502851, 'comment_body': 'same sizing issue.\r\n', 'comment_created': datetime.datetime(2021, 8, 22, 13, 31, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}]","[{'commit_sha': '0af306d9f2229d9ea12221b7f1e81f8dd0516ebb', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2bf1428bbf2e1cd1ce5a9701d48f1390d59726b', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10443f9c41f423f6f0f37804dabe619366024be1', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93ffad1c359a87e03d47c18dc9a0671bc935d0a9', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '052883044e528250294715598ebf04c7f12195a8', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e84e751e70b504be37842f41bd59b08b2ad4e504', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24950af34fe979a0b4bd268caab6044e1a7de07a', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdf1597316c3575720e62e9e6b0b9deada17a52e', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ca7481866d84b840e70adcaadd03210c6b926ca', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '117dcdc8cfbd215d56b850c96e301c818ecfd7fe', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '386854d0aafd53b81177e10ebe0f8861617b44c1', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a0e61b1fd9987cc0ab88e2a046e502ee51bfce6', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd25cb7c9e07a7173a5bfe2384223f4b2f8f58baf', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74dc2c410381abd536e70bb34d26b75956cd59a8', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '501f6ba7146270e621ecb35f67fe42cf4f3d4f20', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '705c85bd2768af2ca2fb16b9171f6289a1a41a8a', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd4f9693d2f9438f68664a308dc3e4aa1022802f', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb1901ba542aca61196bca8ff5874ac9a9bdacf1', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91b03ca4727eadd2ec2d991cfec5486c3408b48c', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cb3d8d3d38922b8463972ea44af2f8430a49ff1', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f4dbd05c067f8a270c220d97ebb7b9ffcd4eba1', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bec680b5e843bd72c3aa18284d5b6a67c04aa83', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'baeec1afb1eeb2cb93a68ebfc731e33079cf4e16', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa86808bd2abdd929e5947929b248acb31145e37', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed96585fe61d08253bd97a6b0ebb06f9ab0fb585', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4f71afe5874da0f23be001df83de2806c8d3567', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abc965981a3810b0ca23acd6778ff727e19d7a73', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68b591ce41fdeaf00c0a70d67f8ccf37e76eaf6d', 'committer_username': 'KirillZubov', 'committer_name': 'Kirill Zubov', 'committer_email': 'Kirillzubov3@gmail.com', 'commit_date': datetime.datetime(2015, 5, 31, 14, 14, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3ab03bed10a93488cbc337bad3ba47e1e69540b', 'committer_username': 'KirillZubov', 'committer_name': 'Kirill Zubov', 'committer_email': 'Kirillzubov3@gmail.com', 'commit_date': datetime.datetime(2015, 5, 31, 14, 14, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61310cbea240db68918f1b91aaf6703752cd2bf5', 'committer_username': 'KirillZubov', 'committer_name': 'Kirill Zubov', 'committer_email': 'Kirillzubov3@gmail.com', 'commit_date': datetime.datetime(2015, 5, 31, 14, 14, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e34b6708a62bed194b95acf1960b60e4d9a46ecd', 'committer_username': 'KirillZubov', 'committer_name': 'Kirill Zubov', 'committer_email': 'Kirillzubov3@gmail.com', 'commit_date': datetime.datetime(2015, 5, 31, 14, 14, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '532e559f433e11f73bc29ab6f6df7088fbc7c85a', 'committer_username': 'KirillZubov', 'committer_name': 'Kirill Zubov', 'committer_email': 'Kirillzubov3@gmail.com', 'commit_date': datetime.datetime(2015, 5, 31, 14, 14, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5ab956caa0068b5c6679bab996d8f65957bf367', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}]",Ashutosh Bharambe,43771652,,User,,36,,38,47
578708623,Tracking parameters in PINNs,Fixes https://github.com/SciML/NeuralPDE.jl/issues/239 and https://github.com/SciML/NeuralPDE.jl/issues/148,True,256,https://api.github.com/repos/SciML/NeuralPDE.jl/pulls/256,https://github.com/SciML/NeuralPDE.jl/pull/256,closed,241,28,4,42,24,62,0,0,[],2021-02-23 19:43:13+00:00,2021-03-12 17:26:10+00:00,1460577.0,"16 days, 21:42:57","[{'comment_id': 581399435, 'comment_body': 'not quite. We want the `p` here of the parameters to be appended to `theta` so that they are optimized simultaneously, not as hyperparameters.', 'comment_created': datetime.datetime(2021, 2, 23, 21, 24, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 585953243, 'comment_body': 'this only needs to be a test dependency', 'comment_created': datetime.datetime(2021, 3, 2, 22, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 585953821, 'comment_body': 'Split line lengths to the standard of the style guide.', 'comment_created': datetime.datetime(2021, 3, 2, 22, 23, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 585954100, 'comment_body': 'not randomly: based on the adaptivity of the ODE solver. ""This is used to introduce non-uniformity to the time series"".', 'comment_created': datetime.datetime(2021, 3, 2, 22, 24, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 585954956, 'comment_body': 'the the image to this PR in a comment, and then use the link to it to add ![](link) to add the picture to the docs here.', 'comment_created': datetime.datetime(2021, 3, 2, 22, 26, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 585955094, 'comment_body': 'you should show how close the fit is. Also, show the final parameters.', 'comment_created': datetime.datetime(2021, 3, 2, 22, 26, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 585955480, 'comment_body': '@KirillZubov review. How does this intersect with your current PR?', 'comment_created': datetime.datetime(2021, 3, 2, 22, 27, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 585955863, 'comment_body': 'This might need to use ArrayInterface.allowed_get_index` to handle the GPUs well.', 'comment_created': datetime.datetime(2021, 3, 2, 22, 27, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 585958424, 'comment_body': 'why not test all 3 parameters?', 'comment_created': datetime.datetime(2021, 3, 2, 22, 31, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 585958505, 'comment_body': 'can that bound be tightened easily?', 'comment_created': datetime.datetime(2021, 3, 2, 22, 32, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 585977115, 'comment_body': 'I can see a lot of cases where the additional_loss function is unrelated to parameter estimation, we should allow the user to pass it in and use it optimization independent of param_estim here.  The if statement should be whether or not `additional_loss isa Nothing` ', 'comment_created': datetime.datetime(2021, 3, 2, 23, 5, 55, tzinfo=datetime.timezone.utc), 'commenter': 'zoemcc', 'type': 'User'}, {'comment_id': 585978040, 'comment_body': 'Minor typo: ""paramater"" should be ""parameter""', 'comment_created': datetime.datetime(2021, 3, 2, 23, 7, 52, tzinfo=datetime.timezone.utc), 'commenter': 'zoemcc', 'type': 'User'}, {'comment_id': 585978496, 'comment_body': 'Use the github suggest feature for typos.\r\n\r\n```suggestion\r\n    #Add an expression for parameter symbols\r\n```', 'comment_created': datetime.datetime(2021, 3, 2, 23, 8, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 585988664, 'comment_body': 'What is cu[t] here? (and in the test case)', 'comment_created': datetime.datetime(2021, 3, 2, 23, 30, 47, tzinfo=datetime.timezone.utc), 'commenter': 'zoemcc', 'type': 'User'}, {'comment_id': 585989166, 'comment_body': 'Also, is there a cleaner way to just evaluate the test solution and subtract the data from it than this?', 'comment_created': datetime.datetime(2021, 3, 2, 23, 32, 5, tzinfo=datetime.timezone.utc), 'commenter': 'zoemcc', 'type': 'User'}, {'comment_id': 585991711, 'comment_body': ""I don't love that the user has to know that the parameters to estimate are appended to the end of the θ vector internally and then slice off those again to evaluate the neural networks they pass in as part of an additional_loss.  Can we provide functions that abstract that for them?  "", 'comment_created': datetime.datetime(2021, 3, 2, 23, 37, 40, tzinfo=datetime.timezone.utc), 'commenter': 'zoemcc', 'type': 'User'}, {'comment_id': 585994363, 'comment_body': 'In the additional loss interface, we could split out the parameters already (call the last argument `hyperp`)', 'comment_created': datetime.datetime(2021, 3, 2, 23, 43, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 585995364, 'comment_body': 'Yeah, I like that. so the loss function internally splits them before it passes to the user-provided function', 'comment_created': datetime.datetime(2021, 3, 2, 23, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'zoemcc', 'type': 'User'}, {'comment_id': 586003898, 'comment_body': '```suggestion\r\nThen we define the additional loss function `additional_loss(phi, θ , p)`, the function has three arguments, `phi` the trial solution, `θ` the parameters of neural networks, and `p` optional parameters.\r\n```', 'comment_created': datetime.datetime(2021, 3, 3, 0, 7, 38, tzinfo=datetime.timezone.utc), 'commenter': 'zoemcc', 'type': 'User'}, {'comment_id': 586744717, 'comment_body': 'Add all used dependencies so that the example can be easy copied-past like in other examples', 'comment_created': datetime.datetime(2021, 3, 3, 20, 11, 18, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 586744966, 'comment_body': '`using OrdinaryDiffEq`', 'comment_created': datetime.datetime(2021, 3, 3, 20, 11, 46, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 586760022, 'comment_body': '`additional_loss` is better renamed as `optim_p_loss` or something like that', 'comment_created': datetime.datetime(2021, 3, 3, 20, 35, 52, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 586762827, 'comment_body': "">I think that the additional loss function should be excluded from the interface, for this, there is a Low-level API.\r\n\r\nI don't get what you mean by that. The low level API is for inspection. This is for injecting code into the loss.\r\n\r\n>additional_loss is better renamed as optim_p__loss or something like that\r\n\r\nThere are many reasons for adding loss terms other than for optimization of parameters, like regularization."", 'comment_created': datetime.datetime(2021, 3, 3, 20, 40, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 586763933, 'comment_body': 'I think that it is possible to generate a loss function to optimize the parameters inside the methods and not clutter up the external interface', 'comment_created': datetime.datetime(2021, 3, 3, 20, 42, 18, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 586770632, 'comment_body': '```julia\r\ncb = function (p,l)\r\n    println(""Current loss is: $l"")\r\n    return false\r\nend\r\n```', 'comment_created': datetime.datetime(2021, 3, 3, 20, 53, 12, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 586775373, 'comment_body': ""it works fine, there's no need to change `cb` here"", 'comment_created': datetime.datetime(2021, 3, 3, 21, 0, 51, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 586798376, 'comment_body': 'there is no problem with the GPU', 'comment_created': datetime.datetime(2021, 3, 3, 21, 25, 52, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 586828068, 'comment_body': 'for this task, it seems to be better not to use an additional loss function, but to use a loss function specialized for this task to optimize the parameters. And we can not take it out to the external interface, but generate it under the hood. Add method `get_optimize_p_loss_function`.\r\n', 'comment_created': datetime.datetime(2021, 3, 3, 22, 5, 51, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 586828257, 'comment_body': 'Actually, we have already encountered this https://github.com/SciML/NeuralPDE.jl/pull/136', 'comment_created': datetime.datetime(2021, 3, 3, 22, 6, 12, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 586829537, 'comment_body': 'We wont be sure about the type of loss that we want there. Like Chris said, this could be a regularisation loss as well or another loss defined on the data. So passing the loss would be a better option right?\r\n', 'comment_created': datetime.datetime(2021, 3, 3, 22, 8, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 586832313, 'comment_body': 'How do we pass data in that case? By defining a condition over each point in data?', 'comment_created': datetime.datetime(2021, 3, 3, 22, 13, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 586835047, 'comment_body': ""@KirillZubov we'll have to define a regularisation loss separately then?"", 'comment_created': datetime.datetime(2021, 3, 3, 22, 18, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 586861904, 'comment_body': '> How do we pass data in that case? By defining a condition over each point in data?\r\n\r\ndata can be passed to `PhysicsInformedNN` instead of loss func\r\n', 'comment_created': datetime.datetime(2021, 3, 3, 23, 11, 46, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 586868460, 'comment_body': 'we can even create a separate structure that will store everything that needs to optimize the parameters - data and all the thing\r\n\r\n', 'comment_created': datetime.datetime(2021, 3, 3, 23, 18, 45, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 586869098, 'comment_body': '> > How do we pass data in that case? By defining a condition over each point in data?\r\n> \r\n> data can be passed to `PhysicsInformedNN` instead of loss func\r\n\r\nBut then what will our eventual loss function be? It can be L2, L1, or anything that the user might want right?', 'comment_created': datetime.datetime(2021, 3, 3, 23, 19, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 586869623, 'comment_body': 'PhysicsInformedNN([chain1 , chain2, chain3], GridTraining(dt), EstimatiomParametersProblem(data, ...))', 'comment_created': datetime.datetime(2021, 3, 3, 23, 20, 7, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 586871368, 'comment_body': ""> @KirillZubov we'll have to define a regularisation loss separately then?\r\n\r\nwhat do you mean by a regularisation loss?"", 'comment_created': datetime.datetime(2021, 3, 3, 23, 22, 8, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 586877885, 'comment_body': ""If we want to add a regularisation term with the loss, such as Ridge Regression. Even ` EstimatiomParametersProblem(data, ...)` after we define this, we'll still need input for an optional/additional loss "", 'comment_created': datetime.datetime(2021, 3, 3, 23, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 587058261, 'comment_body': ""There isn't even 1 loss function for loss against data. There isn't 1 regularization method either. We tried this in DiffEqParamEstim.jl: you will not cover all loss functions. What about if they only have data for 2 of the 3 series? What if they have data only for the derivatives? What if they want to add first differences? 4DVAR loss? Wasserstein distance? Curve distance? It's completely impossible to handle like that. We already learned this, so I'm going to say that's a hard no. The user needs a hook to define a loss function which encloses data, there isn't a real alternative there."", 'comment_created': datetime.datetime(2021, 3, 4, 3, 48, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 587060192, 'comment_body': ""that `cu` looks like it's a typo?"", 'comment_created': datetime.datetime(2021, 3, 4, 3, 50, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 587130145, 'comment_body': ""Yes that'll get removed in the next commits\r\n"", 'comment_created': datetime.datetime(2021, 3, 4, 5, 18, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 587259912, 'comment_body': 'ok\r\n', 'comment_created': datetime.datetime(2021, 3, 4, 8, 35, 18, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 587317383, 'comment_body': 'it would be nice to avoid explicit indexing inside the loss function and, in general, to make the interface as clear and compact as possible for the user.\r\n```julia\r\nfunction get_separete(chains)\r\n    initθs = DiffEqFlux.initial_params.(chains)\r\n    acum =  [0;accumulate(+, length.(initθs))]\r\n    separete = [acum[i]+1 : acum[i+1] for i in 1:length(acum)-1]\r\nend\r\n\r\nsep = get_separete([chain1,chain2,chain3])\r\n\r\nfunction additional_loss(phi, θ , p)\r\n    _loss(u, t) = sum(abs2, phi[i](t , θ[s])[1] - (u[i])  for (i,s) in enumerate(sep))\r\n    return sum(abs2, _loss(u,[t]) for (u , t) in data)/length(data)\r\nend\r\n```', 'comment_created': datetime.datetime(2021, 3, 4, 9, 48, 6, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 587320974, 'comment_body': 'as @zoemcc   already mentioned, if this is an additional general purpose function then it should not depend on `param_estim` if not and this is a function only for parameter optimization then it should be renamed.', 'comment_created': datetime.datetime(2021, 3, 4, 9, 52, 37, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 587331254, 'comment_body': 'iit turns out that `eqs` and` bcs` are in symbolic representation, and the additional loss function is not. And we get different:  symbolic in one` x(t),  Dt(x(t)),  β`, in other in inner  representation  `phi[1](data[i]), derivative(u, phi, ....eps),  θ[end-1]`.', 'comment_created': datetime.datetime(2021, 3, 4, 10, 7, 3, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 587343826, 'comment_body': 'Maybe it makes sense to have the symbolic optimization condition.\r\nSomething like that:\r\n```julia\r\n@parameters t_d, x_d, y_d, z_d\r\noptim_param_condition = [x(t_d) - x_d,\r\n                         y(t_d) - z_d,\r\n                         z(t_d)) - y_d]\r\nEstimatiomParametersProblem(optim_param_condition,[t_d,x_d,y_d,z_d], data)\r\n```', 'comment_created': datetime.datetime(2021, 3, 4, 10, 24, 54, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 587407492, 'comment_body': ""We shouldn't add another Problem type. It doesn't match the interface."", 'comment_created': datetime.datetime(2021, 3, 4, 11, 54, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 587407864, 'comment_body': '>as @zoemcc already mentioned, if this is an additional general purpose function then it should not depend on param_estim if not and this is a function only for parameter optimization then it should be renamed.\r\n\r\nAgreed on this.', 'comment_created': datetime.datetime(2021, 3, 4, 11, 54, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 589183800, 'comment_body': 'Bump', 'comment_created': datetime.datetime(2021, 3, 8, 5, 49, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 589184214, 'comment_body': 'This is still probably true.', 'comment_created': datetime.datetime(2021, 3, 8, 5, 51, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 589185152, 'comment_body': '```suggestion\r\n            push!(expr_params, :(ArrayInterface.allowed_getindex(p,$i)))\r\n```', 'comment_created': datetime.datetime(2021, 3, 8, 5, 54, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 589249132, 'comment_body': ""`build_loss_function` should be RuntimeGeneratedFunction's wrapper for `build_symbolic_loss_function` and have the same parameter for both. "", 'comment_created': datetime.datetime(2021, 3, 8, 8, 37, 22, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 591044221, 'comment_body': '> @ashutosh-b-b see [#256 (comment)](https://github.com/SciML/NeuralPDE.jl/pull/256#discussion_r589249132)\r\n\r\n\r\n\r\nYes I changed them to have the same parameters.', 'comment_created': datetime.datetime(2021, 3, 10, 5, 3, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 591425603, 'comment_body': ""don't you need to use NeuralPDE at least?"", 'comment_created': datetime.datetime(2021, 3, 10, 12, 9, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 591621446, 'comment_body': 'it is needed to rename inner `θ`\r\n```\r\ndefault_p = 2\r\nθ  = [1,2,3,4,5]\r\njulia> θ = θ[1:end - length(default_p)]\r\n4-element Array{Int64,1}:\r\n 1\r\n 2\r\n 3\r\n 4\r\njulia> p = θ[end - length(default_p):end]\r\n2-element Array{Int64,1}:\r\n 3\r\n 4\r\n```', 'comment_created': datetime.datetime(2021, 3, 10, 15, 29, 43, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 591647672, 'comment_body': '`_θ`. ', 'comment_created': datetime.datetime(2021, 3, 10, 15, 58, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 591688978, 'comment_body': "" θ = [flat_θ; estim_param] \r\nso it's needed here to not grab all param and only flat_θ\r\n\r\n```julia\r\ninitθs = DiffEqFlux.initial_params.([chain1,chain2,chain3])\r\nacum =  [0;accumulate(+, length.(initθs))]\r\nsep = [acum[i]+1 : acum[i+1] for i in 1:length(acum)-1]\r\nlen = length(data)\r\nfunction additional_loss(phi, θ , p)\r\n    _loss(u , t) = sum(abs2, phi[i](t , θ[sep[i]])[1] - u[i]  for i in 1:1:3)\r\n    return sum(abs2, _loss(u,t) for (u , t) in data)/len\r\nend\r\n```"", 'comment_created': datetime.datetime(2021, 3, 10, 16, 45, 41, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 591695106, 'comment_body': ""that's why the test converged so slowly because σ_, ρ, β were redundant and appeared as neural network weights"", 'comment_created': datetime.datetime(2021, 3, 10, 16, 52, 53, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 591736197, 'comment_body': 'here, too, correct the `additional loss function` as in the test', 'comment_created': datetime.datetime(2021, 3, 10, 17, 44, 59, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 591736458, 'comment_body': ""> I think it's good. @KirillZubov any comments?\r\n\r\nI added a couple of comments, everything else is good"", 'comment_created': datetime.datetime(2021, 3, 10, 17, 45, 21, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 593042242, 'comment_body': 'delete it', 'comment_created': datetime.datetime(2021, 3, 12, 9, 47, 58, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}, {'comment_id': 593043119, 'comment_body': 'update plots code how it is in the test, and image ', 'comment_created': datetime.datetime(2021, 3, 12, 9, 49, 21, tzinfo=datetime.timezone.utc), 'commenter': 'KirillZubov', 'type': 'User'}]","[{'commit_sha': '928d3ffa31b3ef43e0713088e730814edc3055b4', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6b53c04ec848610c109bfdeaab80057590b30a4', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb5662797d0f078a8b5c15f10c1472bec4a56d6a', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '754971a9c3e9f614b2655fb03dc3c0e30ba52691', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b54cb7f4d657dca034ba4a9e53f82189e735fbe', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d6a9a0173e84c0c5da63fe75171b72e7dafcdb8', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4aae4d7a0dfc9af358b9da1817ccc18e1396f8ea', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa19c86e42f202c17a48f6b075db34777895a0d2', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8ebc3177d34979113e2d3a5fba94fdb010b30d0', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8c57a412336d1b9ee258feada116c1e17ace742', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '082362998eddb804d548b60a8555df34738e6fb7', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1192a2cb8122ec38eaaab9ee9f1a54988578d4e1', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bfcc3decab40ef0d82d2b0e4201b5ac2a3f4aee', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7582016879b33d8d86f226190f74dd289644882', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9e7e56cf8ca683e52b0703df0220c47d933d017', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '675e187198dfefc508540c418fce467e810ddd6a', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cec2e26b674c3fc636a4c26a278295b61123bf50', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '802c3b039343239208d9f5115f8fbfe9db904c29', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b374c79613daf2fedf52fb2ecdc1d30a024566f', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a2e03c84351b3aa86a694f92e3746299adc2e44', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1441e52bc7a54321a717a0b52304e9c3620820d', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cafdf5e337f5c48580b4ffb4fd79fbc3239aa0c6', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee270b1246480601b6183ed25cf9b7ab1227db9e', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c904988a0668552d7873fad1a4a3d7d6455756d9', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01b5a4d906d8e0f33df0db3a1445c39dad3c9c37', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '728042804600ed3fd825b71c9536ab682b6282bc', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cee85ae6d1b2172fffa48476491ffd52a4dc0eb8', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c907f23736a66664e244d3e873fe6a892afa2a2a', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c57b0fcbe7eed7d67e0bc08517e7eb7376324d2f', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b5e5b356d3ac65d9df479f92e7a6b86640464a8', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b72c3d986edd533c6a7823b5984e7fc76634740a', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e97f95588b69db58b8555d529369643379a9ae4', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed2978404b9d71d060f7fcaaa6c4cc5a359f9689', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0cdd170f289e4f6623149cc7c1d95ce37e74352', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57f326cd7a080c5e96be34bc638c4118527a03c9', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9edd61cd6a6011b53bc801e7213976bedb8b709', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88f0df3b2ef0fb569ed2e1d03c75af7989161851', 'committer_username': 'KirillZubov', 'committer_name': 'Kirill Zubov', 'committer_email': 'Kirillzubov3@gmail.com', 'commit_date': datetime.datetime(2015, 5, 31, 14, 14, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8aa846561f836522acc3bd26cfb445f3b2482db', 'committer_username': 'KirillZubov', 'committer_name': 'Kirill Zubov', 'committer_email': 'Kirillzubov3@gmail.com', 'commit_date': datetime.datetime(2015, 5, 31, 14, 14, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd9103170cba2f5c4791f01b725b730931ca7b7a', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8a9462604bb8d886dde3ac82534dab34270cd92', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1350b9dcfe45aaf34a4bbb38ddd8d91db928107', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a1eca1fc40953bd2d446400008309d35dd6accf', 'committer_username': 'KirillZubov', 'committer_name': 'Kirill Zubov', 'committer_email': 'Kirillzubov3@gmail.com', 'commit_date': datetime.datetime(2015, 5, 31, 14, 14, 56, tzinfo=datetime.timezone.utc)}]",Ashutosh Bharambe,43771652,,User,,36,,38,47
540684821,Full Kolmogorov PDE solution solver,Started working on #184 . ,True,202,https://api.github.com/repos/SciML/NeuralPDE.jl/pulls/202,https://github.com/SciML/NeuralPDE.jl/pull/202,closed,276,3,4,16,3,2,0,0,[],2020-12-15 20:29:15+00:00,2021-03-02 01:03:41+00:00,6582866.0,"76 days, 4:34:26","[{'comment_id': 576512376, 'comment_body': ""How long does this test set take? I don't think it needs to be separated from NNRODE. But if it does, it needs to be added to the Github CI action."", 'comment_created': datetime.datetime(2021, 2, 16, 2, 29, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 576513518, 'comment_body': 'Just in the order of minutes I guess. Yeah we can add it with NNRODE. I ll add this one and check,', 'comment_created': datetime.datetime(2021, 2, 16, 2, 33, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}]","[{'commit_sha': '7cb1fde50e12bf2286d27445ab89810921354403', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3b64fd183316047ab2cbe529d016368f88ad77b', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83263dca6fe161e93e773a0097de7ac9b1b031d8', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa89141b6643923dd612e3e4b9a31f3f8cf9d892', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccef67d9a27b0db0d08d3677f2b26ea597b3ffd7', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e33764f2c25d045ce16d53548a6a4627503accb8', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46f2b730ea51e1e56aba63147dab1cbf33f17833', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44f90234b346131d7f9920bf9d47709fe2e42e62', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce964ffa51f541259e7807c0a4c943bc43aa9d9a', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48587efc308945bcdbccdde89888124d58b7b9e4', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e97f208fda637127af4dd699b79c658a8467d19b', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7577422edbd369e83ea09f5ce50d8b2df1c2fd92', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a092317a0d3c2af9430c982d9ff64a89c0618e5c', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5a0bd8de46af0d14a35c8b1c758f4fe2faf3ec1', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a66c8cf08d41475eb7584c395c289cdd5ace4b55', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f92d4cf773141d81a44ac4dfb7c73083240d0b6f', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}]",Ashutosh Bharambe,43771652,,User,,36,,38,47
649690750,[WIP] Add symbolic integral,"1. Need to change expand_derivatives in order to handle derivative of an integral.
",True,240,https://api.github.com/repos/JuliaSymbolics/Symbolics.jl/pulls/240,https://github.com/JuliaSymbolics/Symbolics.jl/pull/240,closed,79,1,5,22,18,30,0,0,[],2021-05-21 06:21:30+00:00,2021-06-15 20:09:54+00:00,2209704.0,"25 days, 13:48:24","[{'comment_id': 636825511, 'comment_body': '?', 'comment_created': datetime.datetime(2021, 5, 21, 10, 52, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 637258601, 'comment_body': 'Use consistent indentation of a space after a comma and no space before the comma.', 'comment_created': datetime.datetime(2021, 5, 21, 22, 8, 54, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 637258649, 'comment_body': 'Same here', 'comment_created': datetime.datetime(2021, 5, 21, 22, 9, 2, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 650315221, 'comment_body': ""formatting needs to be cleaned up, we also never use camelCase function names. Good to stick to the package's style when you're contributing to it. Where is the `expand_derivatives_` function...?"", 'comment_created': datetime.datetime(2021, 6, 11, 23, 59, 19, tzinfo=datetime.timezone.utc), 'commenter': 'shashi', 'type': 'User'}, {'comment_id': 650315714, 'comment_body': 'you could use `substitute` here.', 'comment_created': datetime.datetime(2021, 6, 12, 0, 1, 46, tzinfo=datetime.timezone.utc), 'commenter': 'shashi', 'type': 'User'}, {'comment_id': 650316123, 'comment_body': 'I think you mean `if` instead of `elseif`? So if both `a` and `b` are terms, it would work out...', 'comment_created': datetime.datetime(2021, 6, 12, 0, 3, 57, tzinfo=datetime.timezone.utc), 'commenter': 'shashi', 'type': 'User'}, {'comment_id': 650441461, 'comment_body': 'I resolved this', 'comment_created': datetime.datetime(2021, 6, 12, 22, 13, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 650441495, 'comment_body': 'Yes, I infact removed `replaceSym`', 'comment_created': datetime.datetime(2021, 6, 12, 22, 13, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 650445947, 'comment_body': 'Could you be more careful about whitespace?', 'comment_created': datetime.datetime(2021, 6, 12, 23, 14, 25, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 650445966, 'comment_body': 'Also here.', 'comment_created': datetime.datetime(2021, 6, 12, 23, 14, 44, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 650446008, 'comment_body': ""Don't use commas in the `@variables` macro."", 'comment_created': datetime.datetime(2021, 6, 12, 23, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 650446032, 'comment_body': 'Here.', 'comment_created': datetime.datetime(2021, 6, 12, 23, 15, 14, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 650446044, 'comment_body': 'Here.', 'comment_created': datetime.datetime(2021, 6, 12, 23, 15, 19, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 650446071, 'comment_body': 'Here.', 'comment_created': datetime.datetime(2021, 6, 12, 23, 15, 26, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 650446088, 'comment_body': 'Why print?', 'comment_created': datetime.datetime(2021, 6, 12, 23, 15, 35, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 650446170, 'comment_body': 'When comparing numbers, we should use `==` instead of `isequal`. Consider `-0.0` vs `0.0`.', 'comment_created': datetime.datetime(2021, 6, 12, 23, 16, 52, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 650446190, 'comment_body': 'Indentation.', 'comment_created': datetime.datetime(2021, 6, 12, 23, 17, 22, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 650446211, 'comment_body': 'Whitespace.', 'comment_created': datetime.datetime(2021, 6, 12, 23, 17, 42, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 650446245, 'comment_body': 'Whitespace.', 'comment_created': datetime.datetime(2021, 6, 12, 23, 18, 3, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 650446272, 'comment_body': 'Whitespace.', 'comment_created': datetime.datetime(2021, 6, 12, 23, 18, 15, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 650446313, 'comment_body': ""Why `isa Term`? Shouldn't it be `istree`? Check SymbolicUtils' docs."", 'comment_created': datetime.datetime(2021, 6, 12, 23, 19, 13, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 650446333, 'comment_body': 'Ah, I guess domains could be symbolic.', 'comment_created': datetime.datetime(2021, 6, 12, 23, 19, 46, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 650560956, 'comment_body': '`== true` is redundant', 'comment_created': datetime.datetime(2021, 6, 13, 18, 29, 7, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 650595537, 'comment_body': 'Just using `Symbolics.derivative` could be fine.', 'comment_created': datetime.datetime(2021, 6, 14, 0, 7, 12, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 650595817, 'comment_body': 'What if you test an integral with the integrand `u^2`? Does it expand the derivative?', 'comment_created': datetime.datetime(2021, 6, 14, 0, 9, 28, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 651258128, 'comment_body': 'Yes, it does expand. Should I add this as a test?', 'comment_created': datetime.datetime(2021, 6, 14, 20, 33, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 651922902, 'comment_body': 'Yes', 'comment_created': datetime.datetime(2021, 6, 15, 15, 46, 10, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 651941717, 'comment_body': 'I did, in the last commit.', 'comment_created': datetime.datetime(2021, 6, 15, 16, 9, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}, {'comment_id': 652088077, 'comment_body': 'Could you be more careful about whitespace?', 'comment_created': datetime.datetime(2021, 6, 15, 19, 26, 5, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 652089569, 'comment_body': 'I m sorry, I fixed that.', 'comment_created': datetime.datetime(2021, 6, 15, 19, 28, 17, tzinfo=datetime.timezone.utc), 'commenter': 'ashutosh-b-b', 'type': 'User'}]","[{'commit_sha': 'b3401bfca2634fe54636e7e84632035a7e833803', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ada0ec56dff0495efa655ac666cbb70e23d7aaf', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ed131b0f2db08ad2c8fcd80d0f3560238555e62', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ac71b3bb835397eed8cf1c3238413898f995289', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f2fe530492686df99ef662d4e0639ff8d741dcb', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dae216fb91418a8a1753b212554f8c84a24a4c3', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76871b3c05b26c643458a13480cea2584f277c6e', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59c7fae74f6bcef6f5694768623df2a5a6ee098d', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53b32276aab5f031076223c383efddd2e7db0945', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c7bd4e1a177f5e88bd400612b506bc972b430fc', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98efa550817ea86e6498ab695f0e3e90a679c79b', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73b3d54152ab3cc997be530b89eedf0de5ee10e6', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b2cb3c7e662b768ae1bb5160678fbd38ebe4173', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '530f3d54314dc740f617bcbe6689978d45af92de', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '061043c7ee76460014e18e8815a0b84feb65584a', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a508dbf00bffc945edc34e093d84e12293af38a2', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29ff9056adf39a2f7eaa0c5d92c01cb4941b82c8', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f4d43f6cabe77f67e3a7b6369eff5eaf8a160b0', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60c1323683fc18933075ac4a2e413ae27f69cef5', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '153463ad569ab275cc75e03f1c28c734fa4ad9a2', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd96f248585ae4e621ff1ef43a5b5c0adc8bf9ded', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '320a71d7285087628e46f24b83a67bbefd52b4b6', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}]",Ashutosh Bharambe,43771652,,User,,36,,38,47
701573252,Moving Integral domain type from Domain to VarDomainPairing,"moves `Integral(x, ClosedInterval(0,1))` to  `Integral(x, x in ClosedInterval(0,1))`",True,330,https://api.github.com/repos/JuliaSymbolics/Symbolics.jl/pulls/330,https://github.com/JuliaSymbolics/Symbolics.jl/pull/330,closed,6,6,3,1,1,0,0,0,[],2021-08-02 15:38:24+00:00,2021-08-03 12:22:23+00:00,74639.0,20:43:59,[],"[{'commit_sha': 'c7708a0ccd30a7586d4fc0721092bd0783187e8c', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}]",Ashutosh Bharambe,43771652,,User,,36,,38,47
712580077,Dispatch for infimum and supremum for type Num,,True,346,https://api.github.com/repos/JuliaSymbolics/Symbolics.jl/pulls/346,https://github.com/JuliaSymbolics/Symbolics.jl/pull/346,closed,10,1,2,2,1,2,0,0,[],2021-08-13 19:25:46+00:00,2021-08-13 20:41:36+00:00,4550.0,1:15:50,"[{'comment_id': 688752823, 'comment_body': 'not needed?', 'comment_created': datetime.datetime(2021, 8, 13, 20, 5, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 688752870, 'comment_body': '?', 'comment_created': datetime.datetime(2021, 8, 13, 20, 5, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}]","[{'commit_sha': '880f2c250d92bbe0a8896a40c3cf712a1911de13', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb6b2f764b56fb642f2cc5d71d57993e3b22eb18', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}]",Ashutosh Bharambe,43771652,,User,,36,,38,47
717368457,"Remove ""x"" from Integral and use ""VarDomainParing""",,True,355,https://api.github.com/repos/JuliaSymbolics/Symbolics.jl/pulls/355,https://github.com/JuliaSymbolics/Symbolics.jl/pull/355,closed,11,12,3,1,1,0,0,0,[],2021-08-22 20:18:55+00:00,2021-08-22 20:31:50+00:00,775.0,0:12:55,[],"[{'commit_sha': '4bda938a1dc8a184c7af11201f1af7052d4f8bd3', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}]",Ashutosh Bharambe,43771652,,User,,36,,38,47
715560486,Add Integral Operator to get_unit,,True,1219,https://api.github.com/repos/SciML/ModelingToolkit.jl/pulls/1219,https://github.com/SciML/ModelingToolkit.jl/pull/1219,closed,11,5,1,1,1,0,0,0,[],2021-08-19 03:18:31+00:00,2021-08-19 10:05:19+00:00,24408.0,6:46:48,[],"[{'commit_sha': '82b86a8c3e1805ed3cf06aef31d19dbee4dea555', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}]",Ashutosh Bharambe,43771652,,User,,36,,38,47
716864689,Fix integral in get_unit for one dimensional case,,True,1226,https://api.github.com/repos/SciML/ModelingToolkit.jl/pulls/1226,https://github.com/SciML/ModelingToolkit.jl/pull/1226,closed,6,2,1,1,0,0,0,0,[],2021-08-20 16:35:04+00:00,2021-08-21 02:23:05+00:00,35281.0,9:48:01,[],"[{'commit_sha': '6eb5443ec2555b2a94d92ef20d74dab12c8181a5', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}]",Ashutosh Bharambe,43771652,,User,,36,,38,47
717471644,Refactor get_unit for Integral,,True,1230,https://api.github.com/repos/SciML/ModelingToolkit.jl/pulls/1230,https://github.com/SciML/ModelingToolkit.jl/pull/1230,closed,9,9,1,1,0,0,0,0,[],2021-08-23 03:57:27+00:00,2021-08-23 09:53:58+00:00,21391.0,5:56:31,[],"[{'commit_sha': '21537f5ed0b1f28f60d60917d9a7801ee0e84df4', 'committer_username': 'ashutosh-b-b', 'committer_name': 'Ashutosh Bharambe', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 2, 4, 49, 53, tzinfo=datetime.timezone.utc)}]",Ashutosh Bharambe,43771652,,User,,36,,38,47

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
84996091,NeuralPDE.jl,SciML/NeuralPDE.jl,Julia,198,951,36,60,2483,127,33,23,"[{'id': 1027274717, 'number': 585, 'closed': None, 'created': datetime.datetime(2022, 8, 16, 7, 54, 6, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 264, 'deletions': 108, 'state': 'open'}, {'id': 676528909, 'number': 330, 'closed': datetime.datetime(2021, 8, 23, 11, 12, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 23, 18, 39, 10, tzinfo=datetime.timezone.utc), 'time_taken': 5243611.0, 'time_delta': '60 days, 16:33:31', 'additions': 371, 'deletions': 38, 'state': 'closed'}, {'id': 595148868, 'number': 266, 'closed': datetime.datetime(2021, 3, 18, 10, 47, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 18, 1, 24, 24, tzinfo=datetime.timezone.utc), 'time_taken': 33788.0, 'time_delta': '9:23:08', 'additions': 71, 'deletions': 0, 'state': 'closed'}, {'id': 578708623, 'number': 256, 'closed': datetime.datetime(2021, 3, 12, 17, 26, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 23, 19, 43, 13, tzinfo=datetime.timezone.utc), 'time_taken': 1460577.0, 'time_delta': '16 days, 21:42:57', 'additions': 241, 'deletions': 28, 'state': 'closed'}, {'id': 540684821, 'number': 202, 'closed': datetime.datetime(2021, 3, 2, 1, 3, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 15, 20, 29, 15, tzinfo=datetime.timezone.utc), 'time_taken': 6582866.0, 'time_delta': '76 days, 4:34:26', 'additions': 276, 'deletions': 3, 'state': 'closed'}, {'id': 455874641, 'number': 127, 'closed': datetime.datetime(2020, 7, 26, 3, 54, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 23, 18, 12, 43, tzinfo=datetime.timezone.utc), 'time_taken': 207692.0, 'time_delta': '2 days, 9:41:32', 'additions': 19, 'deletions': 9, 'state': 'closed'}, {'id': 448656130, 'number': 116, 'closed': datetime.datetime(2020, 7, 14, 13, 25, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 14, 5, 36, 46, tzinfo=datetime.timezone.utc), 'time_taken': 28097.0, 'time_delta': '7:48:17', 'additions': 44, 'deletions': 0, 'state': 'closed'}, {'id': 447678441, 'number': 111, 'closed': datetime.datetime(2020, 7, 12, 10, 32, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 10, 23, 12, 28, tzinfo=datetime.timezone.utc), 'time_taken': 127226.0, 'time_delta': '1 day, 11:20:26', 'additions': 88, 'deletions': 2, 'state': 'closed'}, {'id': 446454005, 'number': 109, 'closed': datetime.datetime(2020, 7, 11, 19, 11, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 8, 19, 59, 25, tzinfo=datetime.timezone.utc), 'time_taken': 256339.0, 'time_delta': '2 days, 23:12:19', 'additions': 59, 'deletions': 1, 'state': 'closed'}, {'id': 444272251, 'number': 107, 'closed': datetime.datetime(2020, 7, 7, 2, 44, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 4, 11, 18, 20, tzinfo=datetime.timezone.utc), 'time_taken': 228350.0, 'time_delta': '2 days, 15:25:50', 'additions': 85, 'deletions': 0, 'state': 'closed'}, {'id': 435963921, 'number': 97, 'closed': datetime.datetime(2020, 6, 17, 23, 5, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 17, 16, 28, 50, tzinfo=datetime.timezone.utc), 'time_taken': 23809.0, 'time_delta': '6:36:49', 'additions': 12, 'deletions': 2, 'state': 'closed'}, {'id': 435089831, 'number': 96, 'closed': datetime.datetime(2020, 6, 28, 20, 29, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 16, 9, 28, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1076449.0, 'time_delta': '12 days, 11:00:49', 'additions': 125, 'deletions': 8, 'state': 'closed'}, {'id': 434110405, 'number': 95, 'closed': datetime.datetime(2020, 6, 14, 15, 26, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 14, 8, 3, 55, tzinfo=datetime.timezone.utc), 'time_taken': 26542.0, 'time_delta': '7:22:22', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 426790857, 'number': 93, 'closed': datetime.datetime(2020, 6, 3, 13, 14, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 2, 19, 40, 8, tzinfo=datetime.timezone.utc), 'time_taken': 63266.0, 'time_delta': '17:34:26', 'additions': 41, 'deletions': 29, 'state': 'closed'}, {'id': 412555013, 'number': 84, 'closed': datetime.datetime(2020, 5, 26, 13, 46, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 3, 6, 3, 55, tzinfo=datetime.timezone.utc), 'time_taken': 2014936.0, 'time_delta': '23 days, 7:42:16', 'additions': 157, 'deletions': 4, 'state': 'closed'}, {'id': 408396503, 'number': 82, 'closed': datetime.datetime(2020, 4, 24, 14, 31, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 24, 8, 6, 57, tzinfo=datetime.timezone.utc), 'time_taken': 23069.0, 'time_delta': '6:24:29', 'additions': 10, 'deletions': 1, 'state': 'closed'}, {'id': 395669272, 'number': 79, 'closed': datetime.datetime(2020, 5, 26, 13, 47, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 30, 13, 56, 55, tzinfo=datetime.timezone.utc), 'time_taken': 4924226.0, 'time_delta': '56 days, 23:50:26', 'additions': 56, 'deletions': 14, 'state': 'closed'}, {'id': 391956295, 'number': 76, 'closed': datetime.datetime(2020, 3, 26, 16, 27, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 22, 4, 45, 21, tzinfo=datetime.timezone.utc), 'time_taken': 387723.0, 'time_delta': '4 days, 11:42:03', 'additions': 78, 'deletions': 34, 'state': 'closed'}, {'id': 389723653, 'number': 75, 'closed': datetime.datetime(2020, 7, 12, 17, 44, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 17, 9, 33, 15, tzinfo=datetime.timezone.utc), 'time_taken': 10138250.0, 'time_delta': '117 days, 8:10:50', 'additions': 143, 'deletions': 5, 'state': 'closed'}, {'id': 381518006, 'number': 62, 'closed': datetime.datetime(2020, 4, 19, 17, 14, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 28, 17, 54, 26, tzinfo=datetime.timezone.utc), 'time_taken': 4403979.0, 'time_delta': '50 days, 23:19:39', 'additions': 31, 'deletions': 1, 'state': 'closed'}, {'id': 378681607, 'number': 61, 'closed': datetime.datetime(2020, 3, 11, 18, 4, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 23, 8, 38, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1502811.0, 'time_delta': '17 days, 9:26:51', 'additions': 126, 'deletions': 2, 'state': 'closed'}, {'id': 370013943, 'number': 56, 'closed': datetime.datetime(2020, 7, 11, 20, 21, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 2, 14, 4, 4, tzinfo=datetime.timezone.utc), 'time_taken': 13846668.0, 'time_delta': '160 days, 6:17:48', 'additions': 164, 'deletions': 63, 'state': 'closed'}]"
331648460,Symbolics.jl,JuliaSymbolics/Symbolics.jl,Julia,150,1340,21,107,2018,439,48,39,"[{'id': 717368457, 'number': 355, 'closed': datetime.datetime(2021, 8, 22, 20, 31, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 22, 20, 18, 55, tzinfo=datetime.timezone.utc), 'time_taken': 775.0, 'time_delta': '0:12:55', 'additions': 11, 'deletions': 12, 'state': 'closed'}, {'id': 712580077, 'number': 346, 'closed': datetime.datetime(2021, 8, 13, 20, 41, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 13, 19, 25, 46, tzinfo=datetime.timezone.utc), 'time_taken': 4550.0, 'time_delta': '1:15:50', 'additions': 10, 'deletions': 1, 'state': 'closed'}, {'id': 701573252, 'number': 330, 'closed': datetime.datetime(2021, 8, 3, 12, 22, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 15, 38, 24, tzinfo=datetime.timezone.utc), 'time_taken': 74639.0, 'time_delta': '20:43:59', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 649690750, 'number': 240, 'closed': datetime.datetime(2021, 6, 15, 20, 9, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 21, 6, 21, 30, tzinfo=datetime.timezone.utc), 'time_taken': 2209704.0, 'time_delta': '25 days, 13:48:24', 'additions': 79, 'deletions': 1, 'state': 'closed'}]"
123055424,ModelingToolkit.jl,SciML/ModelingToolkit.jl,Julia,203,1401,30,127,5999,363,76,63,"[{'id': 717471644, 'number': 1230, 'closed': datetime.datetime(2021, 8, 23, 9, 53, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 23, 3, 57, 27, tzinfo=datetime.timezone.utc), 'time_taken': 21391.0, 'time_delta': '5:56:31', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 716864689, 'number': 1226, 'closed': datetime.datetime(2021, 8, 21, 2, 23, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 20, 16, 35, 4, tzinfo=datetime.timezone.utc), 'time_taken': 35281.0, 'time_delta': '9:48:01', 'additions': 6, 'deletions': 2, 'state': 'closed'}, {'id': 715560486, 'number': 1219, 'closed': datetime.datetime(2021, 8, 19, 10, 5, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 19, 3, 18, 31, tzinfo=datetime.timezone.utc), 'time_taken': 24408.0, 'time_delta': '6:46:48', 'additions': 11, 'deletions': 5, 'state': 'closed'}, {'id': 580117265, 'number': 820, 'closed': datetime.datetime(2021, 2, 25, 16, 53, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 25, 13, 55, 45, tzinfo=datetime.timezone.utc), 'time_taken': 10677.0, 'time_delta': '2:57:57', 'additions': 4, 'deletions': 2, 'state': 'closed'}]"
