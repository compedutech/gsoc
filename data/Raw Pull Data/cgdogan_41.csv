pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1454329816,DICOM,"Main discussion at: https://github.com/camicroscope/caMicroscope/pull/647

- Allow DCM
- Build OpenSlide somewhere else",True,17,https://api.github.com/repos/camicroscope/iipImage/pulls/17,https://github.com/camicroscope/iipImage/pull/17,closed,3,29,2,3,1,0,0,0,[],2023-07-28 19:23:35+00:00,2023-08-02 18:06:45+00:00,427390.0,"4 days, 22:43:10",[],"[{'commit_sha': 'e7f2d4c1a6e5247dddf9eb4e3ec0ba7163d771a4', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ae8ef6ee741f69bbca50936b1a58bd4582de951', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd22aa34ab42bfa726bae3c3d5fd63f13532cbb0e', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1454323493,DICOM files,"Subpullrequests: https://github.com/camicroscope/SlideLoader/pull/68 https://github.com/camicroscope/iipImage/pull/17

1) Allow `.dcm` extension
2) Use `caMicroscope/image-decoders`, our new repo, as the base Dockerfile that builds OpenSlide. If needed, `FROM camicroscope/image-decoders` can replaced with `apt-get install libopenslide0`.

Before merging, Tony and Nan don't have access to caMicroscope Docker so @birm could you please publish an image of currnet https://github.com/camicroscope/image-decoders to Docker Hub so that we can change the images to be downloaded from camicroscope rather than currently my repo for easy testing.

caMicroscope.yml for testing my three pullrequests:

```
version: '3'

services:
  mongo:
    image: mongo:4.2-bionic
    container_name: ca-mongo
    restart: always
    logging:
      options:
          max-file: ""5""
          max-size: ""10m""
    volumes:
      - ./db:/data/db
  back:
    build:
      context: ""https://github.com/cgdogan/caracal.git#patch-2""
      args:
        viewer: ""v3.10.2""
    depends_on:
      - ""mongo""
    ports:
      - ""4010:4010""
    container_name: ca-back
    restart: always
    logging:
      options:
          max-file: ""5""
          max-size: ""10m""
    volumes:
      - ./images/:/images/
      - ./config/login.html:/src/static/login.html
      - ./jwt_keys/:/src/keys/
      - ./config/routes.json:/src/routes.json
      - ./config/contentSecurityPolicy.json:/src/contentSecurityPolicy.json
    environment:
      JWK_URL: ""https://www.googleapis.com/oauth2/v3/certs""
      IIP_PATH: ""http://ca-iip:8080/fcgi-bin/iipsrv.fcgi""
      MONGO_URI: ""mongodb://ca-mongo""
      DISABLE_SEC: ""true""
      GENERATE_KEY_IF_MISSING: ""true""
  iip:
    build: ""https://github.com/CGDogan/iipimage.git#earlydcm""
    container_name: ca-iip
    logging:
      options:
          max-file: ""5""
          max-size: ""10m""
    restart: always
    volumes:
      - ./images/:/images/
  loader:
    build: ""https://github.com/CGDogan/SlideLoader.git#earlydcm""
    container_name: ca-load
    restart: always
    logging:
      options:
          max-file: ""5""
          max-size: ""10m""
    volumes:
      - ./images/:/images/

```

What do you think?",True,647,https://api.github.com/repos/camicroscope/caMicroscope/pulls/647,https://github.com/camicroscope/caMicroscope/pull/647,closed,3,3,3,3,3,0,0,0,[],2023-07-28 19:18:59+00:00,2023-08-02 18:07:04+00:00,427685.0,"4 days, 22:48:05",[],"[{'commit_sha': '0624c55d696d61db5725ac3714a7bed0f38bd7af', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd400dfda508022828d5c054553bbe8bd9e19abe', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9d201c9015bc306920e873d4c72719fe261392a', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1491853758,Bioformats,The easiest way to test this turns out toÄ± be PNGs.,True,18,https://api.github.com/repos/camicroscope/iipImage/pulls/18,https://github.com/camicroscope/iipImage/pull/18,closed,1998,15,18,9,5,2,0,0,[],2023-08-28 10:46:42+00:00,2023-08-31 17:13:54+00:00,282432.0,"3 days, 6:27:12","[{'comment_id': 1307616387, 'comment_body': ""If I'm understanding correctly, you're saying that your options are to either use the dockerfile or add the dependency manually; is that right?"", 'comment_created': datetime.datetime(2023, 8, 28, 16, 2, 30, tzinfo=datetime.timezone.utc), 'commenter': 'birm', 'type': 'User'}, {'comment_id': 1307654511, 'comment_body': 'Yes', 'comment_created': datetime.datetime(2023, 8, 28, 16, 28, 9, tzinfo=datetime.timezone.utc), 'commenter': 'CGDogan', 'type': 'User'}]","[{'commit_sha': 'e7e4fb8846d3a5a00b96242554086df70966bc24', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2491fb1a500b338bfac106f8db1e5e47978f83f5', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '280a8d9178b312f58953961bfab97b42a8e9388a', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab9d2a7f0a79684d1c8881f790982a8d38930ae8', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '917448f839b707f730dd37964927e1947d03265e', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbe67a69a7819a14fee770c91d4046c04d65d8d8', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6b29d0d084f86af5252070f928e96828cd22554', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2912c244327ab0b87e431e4e233cd1e61f601f5a', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08fc35d3ee283d908298b01e299598b39dde6435', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1454327889,Use our openslide,"Main discussion at: https://github.com/camicroscope/caMicroscope/pull/647

To replace with openslide from apt, changing the first line back to python:3 is enough

`--break-system-packages` is due to using an Ubuntu base image rather than a Python one.",True,68,https://api.github.com/repos/camicroscope/SlideLoader/pulls/68,https://github.com/camicroscope/SlideLoader/pull/68,closed,12,11,2,3,1,0,0,0,[],2023-07-28 19:22:07+00:00,2023-08-02 18:06:56+00:00,427489.0,"4 days, 22:44:49",[],"[{'commit_sha': 'b47ce7fe155de6ffdb6863451bee58a684e71938', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c376ffcf03dbcf6f79eb531328b2a0ae41a96480', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ed85b7b74a7b4c99c9ab07ce8cf5b1d5580ea98', 'committer_username': 'birm', 'committer_name': 'Birm', 'committer_email': None, 'commit_date': datetime.datetime(2013, 7, 6, 2, 20, 10, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1481418910,Reuse code for metadata,"## Summary
There were four copies of OpenSlide metadata code which I need to refactor for BioFormats. Now there's only two but not one because I'm keeping NCISlideUtil untouched.

## Testing

Visited `http://127.0.0.1:4010/loader/data/one/fileinimagesfolder.tif`, `http://127.0.0.1:4010/loader/data/many/[%22fileinimagesfolder%22]`. Isolated from Omniload.py, ran the modified code:

```
#import OmniLoad

import dev_utils
# get fields openslide expects
def openslidedata(manifest):
    for img in manifest:
        img['location'] = img.get(""path"", """") or img.get(""location"", """") or img.get(""filename"", """") or img.get(""file"", """")
        metadata = dev_utils.getMetadata(img['location'], False, True)
        print(metadata)
        for k, v in metadata.items():
          if k not in img:
            img[k] = v
        # required values which are often unused
        img['study'] = img.get('study', """")
        img['specimen'] = img.get('specimen', """")
    return manifest

print(openslidedata([{""path"": ""/tiff/file.tiff""}]))
```

## Questions

I hope it's OK to leave NCISlideUtil? That accesses some metadata I couldn't find documentation for so I won't be able to find BioFormats equivalents.",True,72,https://api.github.com/repos/camicroscope/SlideLoader/pulls/72,https://github.com/camicroscope/SlideLoader/pull/72,closed,25,39,5,5,0,2,0,0,[],2023-08-19 10:35:56+00:00,2023-08-23 15:43:09+00:00,364033.0,"4 days, 5:07:13","[{'comment_id': 1300306869, 'comment_body': ""Optinal suggestion for readability, since we're using str's join in these files too.\r\n\r\n```suggestion\r\n    paths = [os.path.join(app.config['UPLOAD_FOLDER'], filename) for filename in filenames]\r\n```"", 'comment_created': datetime.datetime(2023, 8, 21, 15, 46, 35, tzinfo=datetime.timezone.utc), 'commenter': 'birm', 'type': 'User'}, {'comment_id': 1301112076, 'comment_body': '@birm Good idea, done', 'comment_created': datetime.datetime(2023, 8, 22, 6, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'CGDogan', 'type': 'User'}]","[{'commit_sha': 'a096f7645b3643e065a7c60fda619379f153dabf', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a3d0a6a82729ae2e0b6c886cbfa5af922e83ddd', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddd0a140413d546ea63972b235faa88938fb1283', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '690283600edc84f32d47972cb765bf5659a4817a', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6eac56b839c2daf082d6e72855062e6e14661c7', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1488646563,Abstract classes,"## Testing
I've tested (almost) all this code plus the bioformats part as far as I could test on the server. Code outside the server is more straightforward.
",True,78,https://api.github.com/repos/camicroscope/SlideLoader/pulls/78,https://github.com/camicroscope/SlideLoader/pull/78,closed,212,42,9,3,0,0,0,0,[],2023-08-24 20:23:09+00:00,2023-08-25 15:36:52+00:00,69223.0,19:13:43,[],"[{'commit_sha': '0c9687bafb3368f4b4d5d3c9daffaa5bef28b4b0', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0b83a374b969fed37daf2a9010c5edc2b035e75', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '590afb4c103bd2cba7b1ad748426dcdf3ebf09a6', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1489939436,BioFormats,"Ryan, could you please rebuild and update the Dockerhub image for https://github.com/camicroscope/image-decoders/tree/main please? These are the changes from the last time: https://github.com/camicroscope/image-decoders/compare/ab596801cc8b6c5f8e45aa239ca7310f7121356b...e24cce6b905f9d6316e760dd4a3806104d90b883

https://downloads.openmicroscopy.org/images/Olympus-FluoView/imagesc-71616/ is a good testfile for bioformats, I think our code works well.

One solution I couldn't solve (and I'm not sure if it's worth investing time in this, you decide) is that despite having tried two methods to change this, it continues to print at DEBUG level instead of warning level, so console output is helpful but takes space.",True,79,https://api.github.com/repos/camicroscope/SlideLoader/pulls/79,https://github.com/camicroscope/SlideLoader/pull/79,closed,136,3,7,3,8,0,0,0,[],2023-08-25 15:44:31+00:00,2023-08-25 20:55:19+00:00,18648.0,5:10:48,[],"[{'commit_sha': '473bdaf96b3eb0be85ea4325388f76b332aa95c2', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9eb6004b6734071e1f733b307faf2111d79ee0f4', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '234a2fe665f44b72349a32c2a7227334b4c8f374', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1490934499,Bioformats extensions,,True,653,https://api.github.com/repos/camicroscope/caMicroscope/pulls/653,https://github.com/camicroscope/caMicroscope/pull/653,closed,3,3,3,3,2,0,0,0,[],2023-08-27 11:16:40+00:00,2023-08-27 16:49:25+00:00,19965.0,5:32:45,[],"[{'commit_sha': 'fcbedc74f4d904b8de3a4c12580ff75df4ccb241', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b89e37f82d07bc6f6d4600f822dd01ac00751ea', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1799c88e68216df8209d3554526f80289b2d90b9', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1504741386,images in subdirs,Corresponding to https://github.com/camicroscope/SlideLoader/pull/82,True,655,https://api.github.com/repos/camicroscope/caMicroscope/pulls/655,https://github.com/camicroscope/caMicroscope/pull/655,closed,35,19,5,1,2,0,0,0,[],2023-09-06 14:26:41+00:00,2023-09-11 15:55:46+00:00,437345.0,"5 days, 1:29:05",[],"[{'commit_sha': 'b711883d7a6633bea68710f5dfcb9ab1fc0efeb5', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1504749812,Move dicoms to subdir,"UI: https://github.com/camicroscope/caMicroscope/pull/655

1) Accept relative paths through our rest api where it makes sense
2) calculate a hash for dicom files and move them to the directory

which should solve the problem that camicroscope is too slow when birm opened dicom files.

tested batchupload, normal uploader, download slide button",True,82,https://api.github.com/repos/camicroscope/SlideLoader/pulls/82,https://github.com/camicroscope/SlideLoader/pull/82,closed,84,22,4,4,2,0,0,0,[],2023-09-06 14:31:05+00:00,2023-09-11 15:56:15+00:00,437110.0,"5 days, 1:25:10",[],"[{'commit_sha': '24661f5a396d7bde54b5f12b0cf10d5ce8b60bc8', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '281cea143269f291af31a067cd8463ec118bb08c', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eed317b84d604f13a45e45159de01bf2406bcd9b', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eeed0952327f67e4e79c0e47d3d590e5441e05f0', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1393794145,Docker should install OpenSSL,"Because OpenSSL is called by ""[make_key.sh](https://github.com/camicroscope/Caracal/blob/master/keys/make_key.sh)"", not installing it causes a Docker error on my system

## Summary

Caracal does use OpenSSL so it should install it just as it installs Git

## Motivation

## Testing
<!--- Has this been tested beyond the automatic hooks? How so? -->

## Questions
(How did it use to work?)",False,156,https://api.github.com/repos/camicroscope/Caracal/pulls/156,https://github.com/camicroscope/Caracal/pull/156,closed,1,1,1,6,1,0,0,0,[],2023-06-15 09:46:44+00:00,2023-06-15 14:28:19+00:00,16895.0,4:41:35,[],"[{'commit_sha': '4b6d4c01ed3db102a0036fb7ece2a7d491748faa', 'committer_username': 'dependabot[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 16, 22, 34, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3cf4a560ef1fcd15be577e012786ad2527c56b3', 'committer_username': 'birm', 'committer_name': 'Birm', 'committer_email': None, 'commit_date': datetime.datetime(2013, 7, 6, 2, 20, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f2419102ac3839c834fca9de9ca22aba748a0c5', 'committer_username': 'birm', 'committer_name': 'Birm', 'committer_email': None, 'commit_date': datetime.datetime(2013, 7, 6, 2, 20, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aece38e560fd130d22daf967ac6ce20b839dd5dc', 'committer_username': 'birm', 'committer_name': 'Birm', 'committer_email': None, 'commit_date': datetime.datetime(2013, 7, 6, 2, 20, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '945e448e8e03ac72c26a7b4eee2b6f2b41f7d725', 'committer_username': 'birm', 'committer_name': 'Birm', 'committer_email': None, 'commit_date': datetime.datetime(2013, 7, 6, 2, 20, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e624a70cf56089aeaf9edacceaced1d8452c452', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1393812653,"Update Debian apt repo to ""Buster""","Stretch was archived according to an announcement in 2023: https://lists.debian.org/debian-devel-announce/2023/03/msg00006.html I found this while running Docker-compose, when apt looked for packages at stretch but was unable to find them because they were moved to the archives so a Stackoverflow post (https://stackoverflow.com/a/76094521) suggested editing apt links to the archive repo or to update apt to use buster or a newer release. (The Buster repo is expected to move to archives in 2025)

## Testing

I think the important point is that updating the apt repo pointer does not change libraries but if it can cause failures, it'll fail at the build stage

## Questions
<!--- Are there any aspects you're unsure about? Are you looking for any feedback? -->

<!--- Mark a pull request as a draft to signal that it is not ready for review. -->
",False,62,https://api.github.com/repos/camicroscope/SlideLoader/pulls/62,https://github.com/camicroscope/SlideLoader/pull/62,closed,1,1,1,1,1,0,0,0,[],2023-06-15 09:58:50+00:00,2023-06-16 17:13:44+00:00,112494.0,"1 day, 7:14:54",[],"[{'commit_sha': '8f965fc240d43dcf65e8b0042a3f87e828e98729', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1400082697,Flask API typo,"When click click to download an image, I receive a 265-byte text file instead, which turned out to be:

```
<!doctype html>
<html lang=en>
<title>500 Internal Server Error</title>
<h1>Internal Server Error</h1>
<p>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>
```

So I changed these to unnamed parameters as described here: https://tedboy.github.io/flask/generated/flask.send_from_directory.html

Tested, downloading does work now",True,64,https://api.github.com/repos/camicroscope/SlideLoader/pulls/64,https://github.com/camicroscope/SlideLoader/pull/64,closed,2,2,1,1,0,0,0,0,[],2023-06-20 15:25:15+00:00,2023-06-20 18:23:16+00:00,10681.0,2:58:01,[],"[{'commit_sha': 'bfef69d876afd576e70df06a2e31e6ceb3bab0f9', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1401906860,Clone faster,"This saves about 50 seconds on my computer by downloading only the latest commit, which we can use because we run no git commands, we only use the latest source code.",True,158,https://api.github.com/repos/camicroscope/Caracal/pulls/158,https://github.com/camicroscope/Caracal/pull/158,closed,1,1,1,1,0,0,0,0,[],2023-06-21 15:10:29+00:00,2023-06-21 15:36:56+00:00,1587.0,0:26:27,[],"[{'commit_sha': 'f65c4b52337a6dee3e3301140c9cf5187dd102b2', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1474960935,Cache pip result: Faster building after code changes,"This makes rebuilding almost instant.

Note: as many answers say on StackOverflow, COPY will overwrite and won't produce any warnings so it's not a problem that we copy requirements.txt twice",True,69,https://api.github.com/repos/camicroscope/SlideLoader/pulls/69,https://github.com/camicroscope/SlideLoader/pull/69,closed,3,4,1,1,0,0,0,0,[],2023-08-14 19:13:45+00:00,2023-08-14 19:42:51+00:00,1746.0,0:29:06,[],"[{'commit_sha': '4f5db8f9ff278f5a433ade47b734ff3c2ff37b77', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1403345381,Handle uploading filenames with special characters,"Currently, when a user tries to upload a filename such as âslide(1).svsâ, Slideloader will save it as âslide1.svsâ and tell the frontend about this. This happens when finalizing an upload. However the frontend discards this information and after finalizing, validates by calling the metadata API of âslide(1).svsâ, which returns âNot foundâ, and the user never reaches the âsuccessâ stage.

## Summary

Firstly, the frontend should display the sanitized filename on upload finalization, and use this filename for validation.

Secondly, the frontend should also replace the filename with the sanitized one when starting upload.

Doing these both will give us good UX so that we wonât need to list: âthe filename cannot contain (,), â¦ etcâ, but the userâs entered input will have these removed automatically and the user will understand instinctively that some characters arenât allowed and will be removed.

## Motivation
Many filenames have special characters and this needs to be handled correctly

## Testing
I tested this patch with the following:
Filename with no special chars
Filename with ( or any other char
Filename with # (because this would be a special case if treated as a part of a URL)
The previous two cases, but now the user added the special chars after the original filename didnât have them
Again, this time the user readded them after initial sanitizing
Filename with only special chars and extension
The previous but the user made it so after choosing a valid filenamed upload
Filename whose sanitization leads to conflict with a previous one
The previous but the original filename wouldnât


## Questions
~~Say an `a.svs` file already exists. The user would like to upload `a.Svs`. caMicroscope will replace the textbox with `a.svs` and say: ""a.svs already exists!"" The user then thinks, ""No, I really want a.**Svs** and this is a different file!"" The frontend same-query filtering will not show and error message or generate requests and the user won't proceed until he picks a different filename.~~ In short, I thought it's best to not allow redundant queries to the backend in this case, since people, most likely those who would like to explor edge cases of caMicroscope, who would like to upload `a.svs a.Svs a.SvS a.sVs a.sVS ...` as different files are rare.

EDIT: I have now also added the patch for the batch loader",True,640,https://api.github.com/repos/camicroscope/caMicroscope/pulls/640,https://github.com/camicroscope/caMicroscope/pull/640,closed,20,9,2,3,0,0,0,0,[],2023-06-22 11:23:54+00:00,2023-08-10 21:17:54+00:00,4269240.0,"49 days, 9:54:00",[],"[{'commit_sha': 'ce48249ec389b6be7695aff35f1979d2642101e4', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1125b081092034ac55892b58c05883ec58a21b1', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48e9166d4e5c3dbb689a48c81bcc39081368564c', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1403356481,Handle uploading filenames with special characters,"Backend part of #640

- A user can input `#(.svs` and this would be sanitized to `.svs` which is an invisible system file so sanitized again to `svs` which turns out to not have an extension thus not usable. The patch sanitizes this to `noname.svs`
- Send the sanitized filename with ""/upload/start"", which already received the original filename. This allows user to understand that special chared filenames are not allowed early
- Don't allow `a.sVs` etc which can't be viewed already. Don't allow for new files only
- `File with name '"" + filename + ""' already exists` should also return filename",True,65,https://api.github.com/repos/camicroscope/SlideLoader/pulls/65,https://github.com/camicroscope/SlideLoader/pull/65,closed,20,3,1,2,0,0,0,0,[],2023-06-22 11:32:40+00:00,2023-06-22 17:02:33+00:00,19793.0,5:29:53,[],"[{'commit_sha': 'de26bdb1cad231f2751fd96274d57b9b489ca438', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65c573081547ae5303552fcd3b6ed6c974c32293', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1413554719,OpenSlide should autodetect file type,"File extension capitalization used to affect how the files were read which caused quirks. We can try to read everything with OpenSlide and if it fails, run iipsrv standard image viewer code.

Notice that ""suffix='tiff'"" was not one of the conditions. That's why all tiff files were to be opened with other than OpenSlide. This always works because it turns out that tiff wsi keeps the original image as the main image so any tiff viewer can view tiff wsi, but OpenSlide can only read tiff wsi. The new code also early rejects any OpenSlide incompatible tiff early, so it continues its good behavior.

I added code to skip OpenSlide for generic tiff because iipimage also supports these; this was the previous behavior and it can be changed.

## Summary
<!--- Describe the changes in more detail. Feel free to include screenshots if relevant. -->

## Motivation
<!--- Why have you made this Pull Request? Does this fix an open issue? -->

Moving toward checking internal headers rather than file extension

## Testing
It still correctly rejects non-wsi tiff to pass to openslide.

## Questions
<!--- Are there any aspects you're unsure about? Are you looking for any feedback? -->

<!--- Mark a pull request as a draft to signal that it is not ready for review. -->
",True,16,https://api.github.com/repos/camicroscope/iipImage/pulls/16,https://github.com/camicroscope/iipImage/pull/16,closed,4,9,1,2,2,0,0,0,[],2023-06-29 15:24:56+00:00,2023-07-18 20:38:35+00:00,1660419.0,"19 days, 5:13:39",[],"[{'commit_sha': 'c3a9d3eb6844452388a83a9176c9d137cce58443', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e27021bd72ad722b29051348f0e80b2a71a2760', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1416759397,Fix showing level count,This is an always-accessible property of the class: https://openslide.org/api/python/#openslide.OpenSlide.level_count,True,67,https://api.github.com/repos/camicroscope/SlideLoader/pulls/67,https://github.com/camicroscope/SlideLoader/pull/67,closed,1,1,1,1,0,0,0,0,[],2023-07-02 14:29:50+00:00,2023-07-11 18:37:31+00:00,792461.0,"9 days, 4:07:41",[],"[{'commit_sha': 'fe4f0c1a2391aa5fc626949f87bfae9a438789dd', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1476328214,Define max limit for thumbnail size,I think this makes the server more secure?,True,70,https://api.github.com/repos/camicroscope/SlideLoader/pulls/70,https://github.com/camicroscope/SlideLoader/pull/70,closed,1,0,1,1,0,0,0,0,[],2023-08-15 18:43:16+00:00,2023-08-15 18:49:08+00:00,352.0,0:05:52,[],"[{'commit_sha': '9ff2f65a8b14f1cff97610125411703646c9040c', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1486648395,Use text/json mimetype,Another approach would be defining our subclasses.,True,76,https://api.github.com/repos/camicroscope/SlideLoader/pulls/76,https://github.com/camicroscope/SlideLoader/pull/76,closed,52,52,1,1,0,0,0,0,[],2023-08-23 15:36:27+00:00,2023-08-23 15:42:59+00:00,392.0,0:06:32,[],"[{'commit_sha': 'c12b8ae0cdf4642de2a155219a6532ab44eecaa6', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1486659658,small deprecation,"> 'FLASK_ENV' is deprecated and will not be used in Flask 2.3. Use 'FLASK_DEBUG' instead.

docs https://flask.palletsprojects.com/en/2.3.x/config/#DEBUG",True,77,https://api.github.com/repos/camicroscope/SlideLoader/pulls/77,https://github.com/camicroscope/SlideLoader/pull/77,closed,1,1,1,1,0,0,0,0,[],2023-08-23 15:44:26+00:00,2023-08-23 17:57:23+00:00,7977.0,2:12:57,[],"[{'commit_sha': '1f8ec29cd668727c7ae83a8118aa7b76c54972f7', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1436052581,fix aplreader throwing nullptrexception,"If you run this with `/images/a.tif`, you get a nullptr exception. However not for `/a.tif` or for `/images/img/a.tif`. So our case wasn't tested.",False,4051,https://api.github.com/repos/ome/bioformats/pulls/4051,https://github.com/ome/bioformats/pull/4051,closed,2,2,1,1,9,0,1,0,[{'name': 'include'}],2023-07-15 19:55:02+00:00,2023-10-11 10:38:51+00:00,7569829.0,"87 days, 14:43:49",[],"[{'commit_sha': 'e8ac951cc5cea92be0e9fdf086c89996e481ac9c', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1487676897,Fix Lurawave debug error being printed,This should have been removed or was this kept intentionally? @sbesson https://github.com/ome/ome-common-java/pull/81,True,83,https://api.github.com/repos/ome/ome-common-java/pulls/83,https://github.com/ome/ome-common-java/pull/83,closed,0,2,1,1,0,0,0,0,[],2023-08-24 09:18:18+00:00,2023-09-04 13:32:00+00:00,965622.0,"11 days, 4:13:42",[],"[{'commit_sha': '138483d214cb5a58daf217c4eee6f17f1d5b71cc', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1423037985,Bump native-lib-loader for ARM-readiness,"I receive the warning:

```
[main] WARN org.scijava.nativelib.NativeLibraryUtil - No native library available for this platform.
```

and this was because native-lib-loader labeled ARM64 platforms as unknown and was unable to do anything with them (relevant code: https://github.com/scijava/native-lib-loader/blob/21d6c1e9f9e296e5cdbb151d20e0861e1ee3261d/src/main/java/org/scijava/nativelib/NativeLibraryUtil.java#L329-L331). Version 2.4.0 was released in 2021 and so it's mature enough.",True,4041,https://api.github.com/repos/ome/bioformats/pulls/4041,https://github.com/ome/bioformats/pull/4041,closed,2,2,2,2,3,0,1,0,[{'name': 'include'}],2023-07-06 14:51:11+00:00,2023-07-18 12:03:35+00:00,1026744.0,"11 days, 21:12:24",[],"[{'commit_sha': '256800ac755853a2720cddeee6227c9561c29c86', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ff94d6add41c3a28fddabc39387e5d680e997d4', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1423107427,ARM64 libturbojpeg mac,"Fixes #3756 when merged with #4041 . I took the latest branch of 1.2.0 libturbojpeg (1.2.0 to match #159) and `autoreconf -fiv && export CFLAGS=""-I/opt/homebrew/Cellar/openjdk/20.0.1/include"" && export CXXFLAGS=""-I/opt/homebrew/Cellar/openjdk/20.0.1/include -static-libstdc++"" && ./configure --with-java && make && make install && mkdir out &&  prefix=/Users/CGDogan/Downloads/libjpeg-turbo-1.2.x/out`. Compiler is homebrew clang

Tested, I use this daily now",False,4042,https://api.github.com/repos/ome/bioformats/pulls/4042,https://github.com/ome/bioformats/pull/4042,closed,0,0,1,5,1,0,0,0,[],2023-07-06 15:38:09+00:00,2023-07-17 14:21:31+00:00,945802.0,"10 days, 22:43:22",[],"[{'commit_sha': '5ada0ff754a7718e2413d1029408bedbbc1d80a5', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aecd9256274cecaf0f885c8e22b55b44da15b037', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd78479f118d846570c031babebdc21b1be2531b4', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e1c848556bc0a6cdbe48df1486d3816b3dc1043', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e639c123d5a0c8c252ff62cd4af49890af90796', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1424813039,ARM64 libturbojpeg linux,"Deterministically generated using https://github.com/CGDogan/jpegjni/blob/master/Dockerfile , Sha256 `8d5ed1780ab3552ada8981434400be2d8f6e8c4d4030d43229a2d9af8f6afee8`",False,4044,https://api.github.com/repos/ome/bioformats/pulls/4044,https://github.com/ome/bioformats/pull/4044,closed,0,0,1,3,1,0,0,0,[],2023-07-07 15:00:01+00:00,2023-07-17 14:21:36+00:00,861695.0,"9 days, 23:21:35",[],"[{'commit_sha': '113925db79f2f580c2e64721d1485df0afdc890b', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50d6792ce5eca4714320cb47463c06698daeef0f', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22b20aee9e8aa2c12b8a50672343e87f2262c5ea', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1491818011,Throw error when cannot load library,openBytes returned 0 bytes so there was a silent failure,True,4090,https://api.github.com/repos/ome/bioformats/pulls/4090,https://github.com/ome/bioformats/pull/4090,closed,4,2,1,1,2,0,1,0,[{'name': 'include'}],2023-08-28 10:24:20+00:00,2023-10-06 15:31:07+00:00,3388007.0,"39 days, 5:06:47",[],"[{'commit_sha': '39f944f7c7176b513c8247f2f68b30cf8377f4d1', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1450439000,TiffSaver: produce valid 4-channel RGBA images,"As I asked on https://forum.image.sc/t/bfconvert-breaks-images-with-alpha-layer-wrong-interleave/83482, bfconvert, when given 4-channel images, outputs with the monochrome tag. This means that many image decoders will try to read it as monochrome and show an invalid image. In general, we should save 4-channel images like 3-channel ones, because RGBA tagged as RGB is a supported configuration in the TIFF specification (https://www.itu.int/itudoc/itu-t/com16/tiff-fx/docs/tiff6.pdf pg 77), where even the order is specified: R,G,B, then A. This will result in BioFormats producing much more compatible tiff files.

EDIT: **Rebased**, considering that the TIFF specification does not limit the additional alpha channel to RGB, but it limits its premultipliedness property only to RGB. As such, YCbCr can also have an alpha channel",True,4059,https://api.github.com/repos/ome/bioformats/pulls/4059,https://github.com/ome/bioformats/pull/4059,closed,6,1,1,5,4,2,1,0,[{'name': 'include'}],2023-07-26 14:58:18+00:00,2023-11-28 13:42:12+00:00,10795434.0,"124 days, 22:43:54","[{'comment_id': 1402511477, 'comment_body': 'I don\'t think it\'s safe to assume here that the 4th channel is always what the TIFF specification refers to as ""associated alpha data"", which is what the `1` here indicates. That may be true in many cases, but I\'m uncomfortable with this assumption for *every* 4-channel RGB input. As noted in the previous review, I think setting the `ExtraSamples` entry to 0 (""unspecified data"" per the TIFF specification) is the safest option.', 'comment_created': datetime.datetime(2023, 11, 22, 18, 22, 58, tzinfo=datetime.timezone.utc), 'commenter': 'melissalinkert', 'type': 'User'}, {'comment_id': 1402512901, 'comment_body': 'As in line 1037, I am unconvinced that we can safely assume that the 4th channel is ""unassociated alpha data"". I would prefer to see this value changed to 0 unless there is a strong argument to the contrary.', 'comment_created': datetime.datetime(2023, 11, 22, 18, 24, 26, tzinfo=datetime.timezone.utc), 'commenter': 'melissalinkert', 'type': 'User'}]","[{'commit_sha': '54860dff1b9be38229abbf68bc21b365dca48700', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c73ac038d9f50159d4f968b0d44c830e70e8a2d7', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32b6e5fbe8c01b3f26d6585dfca730baf7c65d78', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4be5dd6fb8c1a452d4e98a9895ee1a3d4f0d83b4', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ad16dddb0d879f9ae8be37df3c49d0cf7820de4', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1
1455117443,Don't fail on non-4:4:4 JPEG,"The previous pull request description was hard to read, so I'm rewriting it: MCU size is 8x8 for 4:4:4. We should read relative subsampling ""numbers"" from SOF0 and calculate MCU size accordingly. This way, we won't get IndexOutOfBounds when we read 4:2:0 etc.Closes #3616",True,4061,https://api.github.com/repos/ome/bioformats/pulls/4061,https://github.com/ome/bioformats/pull/4061,closed,57,6,1,8,13,1,1,0,[{'name': 'include'}],2023-07-30 11:46:57+00:00,2024-01-31 18:56:13+00:00,16009756.0,"185 days, 7:09:16","[{'comment_id': 1403219269, 'comment_body': 'I pressed""commit"" before I could name this commit properly: Make MCU sizes properly inferred from subsampling info, as opposed to making general assumptions.', 'comment_created': datetime.datetime(2023, 11, 23, 10, 56, 53, tzinfo=datetime.timezone.utc), 'commenter': 'CGDogan', 'type': 'User'}]","[{'commit_sha': '08892f3450b41014b9d5565651427867d7e95520', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1bed8a64e4aa3d0542b0b02318573e7873aacb4', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a9e62aa24fdfebe35704e2b7d8a0bd945654aa1', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e97d1d7fb2bc62bdcf1ae539579e845a55e518c2', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c82b87d3a0822417563bfd07e883868a72bf4b37', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8977300738111b3cc0815558c23c8f27ee4e2a7', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '954a676f1671a0dcea423156bb0f31c63b37c478', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8d8033df50c4554a90295be0efb89fb8a7a07f6', 'committer_username': 'CGDogan', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2023, 3, 2, 19, 47, tzinfo=datetime.timezone.utc)}]",,126820728,,User,,17,,0,1

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
138927210,iipImage,camicroscope/iipImage,C++,6,1,4,4,96,3,3,0,"[{'id': 1519877744, 'number': 20, 'closed': datetime.datetime(2023, 9, 18, 17, 25, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 18, 16, 47, 14, tzinfo=datetime.timezone.utc), 'time_taken': 2312.0, 'time_delta': '0:38:32', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 1504726462, 'number': 19, 'closed': datetime.datetime(2023, 9, 6, 16, 58, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 6, 14, 19, 8, tzinfo=datetime.timezone.utc), 'time_taken': 9583.0, 'time_delta': '2:39:43', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1491853758, 'number': 18, 'closed': datetime.datetime(2023, 8, 31, 17, 13, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 28, 10, 46, 42, tzinfo=datetime.timezone.utc), 'time_taken': 282432.0, 'time_delta': '3 days, 6:27:12', 'additions': 1998, 'deletions': 15, 'state': 'closed'}, {'id': 1454329816, 'number': 17, 'closed': datetime.datetime(2023, 8, 2, 18, 6, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 28, 19, 23, 35, tzinfo=datetime.timezone.utc), 'time_taken': 427390.0, 'time_delta': '4 days, 22:43:10', 'additions': 3, 'deletions': 29, 'state': 'closed'}, {'id': 1413554719, 'number': 16, 'closed': datetime.datetime(2023, 7, 18, 20, 38, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 29, 15, 24, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1660419.0, 'time_delta': '19 days, 5:13:39', 'additions': 4, 'deletions': 9, 'state': 'closed'}]"
65686302,caMicroscope,camicroscope/caMicroscope,JavaScript,286,243,25,80,3026,110,18,31,"[{'id': 1519587709, 'number': 656, 'closed': datetime.datetime(2023, 9, 18, 15, 55, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 18, 14, 7, 43, tzinfo=datetime.timezone.utc), 'time_taken': 6482.0, 'time_delta': '1:48:02', 'additions': 74, 'deletions': 2, 'state': 'closed'}, {'id': 1504741386, 'number': 655, 'closed': datetime.datetime(2023, 9, 11, 15, 55, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 6, 14, 26, 41, tzinfo=datetime.timezone.utc), 'time_taken': 437345.0, 'time_delta': '5 days, 1:29:05', 'additions': 35, 'deletions': 19, 'state': 'closed'}, {'id': 1490934499, 'number': 653, 'closed': datetime.datetime(2023, 8, 27, 16, 49, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 27, 11, 16, 40, tzinfo=datetime.timezone.utc), 'time_taken': 19965.0, 'time_delta': '5:32:45', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1481455957, 'number': 651, 'closed': datetime.datetime(2023, 8, 21, 15, 42, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 19, 13, 43, 3, tzinfo=datetime.timezone.utc), 'time_taken': 179988.0, 'time_delta': '2 days, 1:59:48', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 1454323493, 'number': 647, 'closed': datetime.datetime(2023, 8, 2, 18, 7, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 28, 19, 18, 59, tzinfo=datetime.timezone.utc), 'time_taken': 427685.0, 'time_delta': '4 days, 22:48:05', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1403345381, 'number': 640, 'closed': datetime.datetime(2023, 8, 10, 21, 17, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 22, 11, 23, 54, tzinfo=datetime.timezone.utc), 'time_taken': 4269240.0, 'time_delta': '49 days, 9:54:00', 'additions': 20, 'deletions': 9, 'state': 'closed'}]"
130237442,SlideLoader,camicroscope/SlideLoader,Python,20,3,7,9,310,3,3,0,"[{'id': 1519877363, 'number': 85, 'closed': datetime.datetime(2023, 9, 29, 18, 29, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 18, 16, 47, 4, tzinfo=datetime.timezone.utc), 'time_taken': 956521.0, 'time_delta': '11 days, 1:42:01', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1518492136, 'number': 84, 'closed': datetime.datetime(2023, 9, 18, 15, 55, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 17, 13, 29, 30, tzinfo=datetime.timezone.utc), 'time_taken': 95161.0, 'time_delta': '1 day, 2:26:01', 'additions': 51, 'deletions': 1, 'state': 'closed'}, {'id': 1504749812, 'number': 82, 'closed': datetime.datetime(2023, 9, 11, 15, 56, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 6, 14, 31, 5, tzinfo=datetime.timezone.utc), 'time_taken': 437110.0, 'time_delta': '5 days, 1:25:10', 'additions': 84, 'deletions': 22, 'state': 'closed'}, {'id': 1502535530, 'number': 81, 'closed': datetime.datetime(2023, 9, 5, 16, 45, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 5, 10, 19, 19, tzinfo=datetime.timezone.utc), 'time_taken': 23194.0, 'time_delta': '6:26:34', 'additions': 3, 'deletions': 55, 'state': 'closed'}, {'id': 1499707994, 'number': 80, 'closed': datetime.datetime(2023, 9, 2, 23, 4, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 2, 5, 54, 11, tzinfo=datetime.timezone.utc), 'time_taken': 61806.0, 'time_delta': '17:10:06', 'additions': 352, 'deletions': 1, 'state': 'closed'}, {'id': 1489939436, 'number': 79, 'closed': datetime.datetime(2023, 8, 25, 20, 55, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 25, 15, 44, 31, tzinfo=datetime.timezone.utc), 'time_taken': 18648.0, 'time_delta': '5:10:48', 'additions': 136, 'deletions': 3, 'state': 'closed'}, {'id': 1488646563, 'number': 78, 'closed': datetime.datetime(2023, 8, 25, 15, 36, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 24, 20, 23, 9, tzinfo=datetime.timezone.utc), 'time_taken': 69223.0, 'time_delta': '19:13:43', 'additions': 212, 'deletions': 42, 'state': 'closed'}, {'id': 1486659658, 'number': 77, 'closed': datetime.datetime(2023, 8, 23, 17, 57, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 23, 15, 44, 26, tzinfo=datetime.timezone.utc), 'time_taken': 7977.0, 'time_delta': '2:12:57', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1486648395, 'number': 76, 'closed': datetime.datetime(2023, 8, 23, 15, 42, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 23, 15, 36, 27, tzinfo=datetime.timezone.utc), 'time_taken': 392.0, 'time_delta': '0:06:32', 'additions': 52, 'deletions': 52, 'state': 'closed'}, {'id': 1481418910, 'number': 72, 'closed': datetime.datetime(2023, 8, 23, 15, 43, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 19, 10, 35, 56, tzinfo=datetime.timezone.utc), 'time_taken': 364033.0, 'time_delta': '4 days, 5:07:13', 'additions': 25, 'deletions': 39, 'state': 'closed'}, {'id': 1477355746, 'number': 71, 'closed': datetime.datetime(2023, 8, 16, 20, 53, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 16, 12, 4, 26, tzinfo=datetime.timezone.utc), 'time_taken': 31769.0, 'time_delta': '8:49:29', 'additions': 7, 'deletions': 4, 'state': 'closed'}, {'id': 1476328214, 'number': 70, 'closed': datetime.datetime(2023, 8, 15, 18, 49, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 15, 18, 43, 16, tzinfo=datetime.timezone.utc), 'time_taken': 352.0, 'time_delta': '0:05:52', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1474960935, 'number': 69, 'closed': datetime.datetime(2023, 8, 14, 19, 42, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 14, 19, 13, 45, tzinfo=datetime.timezone.utc), 'time_taken': 1746.0, 'time_delta': '0:29:06', 'additions': 3, 'deletions': 4, 'state': 'closed'}, {'id': 1454327889, 'number': 68, 'closed': datetime.datetime(2023, 8, 2, 18, 6, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 28, 19, 22, 7, tzinfo=datetime.timezone.utc), 'time_taken': 427489.0, 'time_delta': '4 days, 22:44:49', 'additions': 12, 'deletions': 11, 'state': 'closed'}, {'id': 1416759397, 'number': 67, 'closed': datetime.datetime(2023, 7, 11, 18, 37, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 2, 14, 29, 50, tzinfo=datetime.timezone.utc), 'time_taken': 792461.0, 'time_delta': '9 days, 4:07:41', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1412913389, 'number': 66, 'closed': datetime.datetime(2023, 7, 18, 18, 26, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 29, 8, 10, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1678559.0, 'time_delta': '19 days, 10:15:59', 'additions': 51, 'deletions': 1, 'state': 'closed'}, {'id': 1403356481, 'number': 65, 'closed': datetime.datetime(2023, 6, 22, 17, 2, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 22, 11, 32, 40, tzinfo=datetime.timezone.utc), 'time_taken': 19793.0, 'time_delta': '5:29:53', 'additions': 20, 'deletions': 3, 'state': 'closed'}, {'id': 1400082697, 'number': 64, 'closed': datetime.datetime(2023, 6, 20, 18, 23, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 20, 15, 25, 15, tzinfo=datetime.timezone.utc), 'time_taken': 10681.0, 'time_delta': '2:58:01', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1393812653, 'number': 62, 'closed': datetime.datetime(2023, 6, 16, 17, 13, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 15, 9, 58, 50, tzinfo=datetime.timezone.utc), 'time_taken': 112494.0, 'time_delta': '1 day, 7:14:54', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
226370258,Caracal,camicroscope/Caracal,JavaScript,95,15,6,15,411,25,19,8,"[{'id': 1518453631, 'number': 163, 'closed': datetime.datetime(2023, 9, 18, 15, 55, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 17, 10, 28, 57, tzinfo=datetime.timezone.utc), 'time_taken': 105978.0, 'time_delta': '1 day, 5:26:18', 'additions': 238, 'deletions': 0, 'state': 'closed'}, {'id': 1401906860, 'number': 158, 'closed': datetime.datetime(2023, 6, 21, 15, 36, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 21, 15, 10, 29, tzinfo=datetime.timezone.utc), 'time_taken': 1587.0, 'time_delta': '0:26:27', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1393794145, 'number': 156, 'closed': datetime.datetime(2023, 6, 15, 14, 28, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 15, 9, 46, 44, tzinfo=datetime.timezone.utc), 'time_taken': 16895.0, 'time_delta': '4:41:35', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
2510503,bioformats,ome/bioformats,Java,242,376,29,116,22119,212,7,20,"[{'id': 1491818011, 'number': 4090, 'closed': datetime.datetime(2023, 10, 6, 15, 31, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 28, 10, 24, 20, tzinfo=datetime.timezone.utc), 'time_taken': 3388007.0, 'time_delta': '39 days, 5:06:47', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 1455117443, 'number': 4061, 'closed': datetime.datetime(2024, 1, 31, 18, 56, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 30, 11, 46, 57, tzinfo=datetime.timezone.utc), 'time_taken': 16009756.0, 'time_delta': '185 days, 7:09:16', 'additions': 57, 'deletions': 6, 'state': 'closed'}, {'id': 1450439000, 'number': 4059, 'closed': datetime.datetime(2023, 11, 28, 13, 42, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 26, 14, 58, 18, tzinfo=datetime.timezone.utc), 'time_taken': 10795434.0, 'time_delta': '124 days, 22:43:54', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 1436317499, 'number': 4052, 'closed': datetime.datetime(2023, 7, 18, 20, 0, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 16, 16, 31, 12, tzinfo=datetime.timezone.utc), 'time_taken': 185378.0, 'time_delta': '2 days, 3:29:38', 'additions': 11, 'deletions': 0, 'state': 'closed'}, {'id': 1436052581, 'number': 4051, 'closed': datetime.datetime(2023, 10, 11, 10, 38, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 15, 19, 55, 2, tzinfo=datetime.timezone.utc), 'time_taken': 7569829.0, 'time_delta': '87 days, 14:43:49', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1424813039, 'number': 4044, 'closed': datetime.datetime(2023, 7, 17, 14, 21, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 7, 15, 0, 1, tzinfo=datetime.timezone.utc), 'time_taken': 861695.0, 'time_delta': '9 days, 23:21:35', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 1423107427, 'number': 4042, 'closed': datetime.datetime(2023, 7, 17, 14, 21, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 15, 38, 9, tzinfo=datetime.timezone.utc), 'time_taken': 945802.0, 'time_delta': '10 days, 22:43:22', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 1423037985, 'number': 4041, 'closed': datetime.datetime(2023, 7, 18, 12, 3, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 14, 51, 11, tzinfo=datetime.timezone.utc), 'time_taken': 1026744.0, 'time_delta': '11 days, 21:12:24', 'additions': 2, 'deletions': 2, 'state': 'closed'}]"
46136235,ome-common-java,ome/ome-common-java,Java,19,2,8,28,994,5,1,1,"[{'id': 1487676897, 'number': 83, 'closed': datetime.datetime(2023, 9, 4, 13, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 24, 9, 18, 18, tzinfo=datetime.timezone.utc), 'time_taken': 965622.0, 'time_delta': '11 days, 4:13:42', 'additions': 0, 'deletions': 2, 'state': 'closed'}]"
