pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
465302640,[GSoC] Develop OpenCV.js DNN modules for promising web use cases together with their tutorials,"### Overview
* Proposal: [Develop OpenCV.js DNN modules for promising web use cases together with their tutorials](https://docs.google.com/document/d/159sv9Ose4jdnirLiPdiCIe6pow0dhT6DlC7KHaO_fTs/edit?usp=sharing)
* Mentor: Ningxin Hu @huningxin 
* Student: Zhiming Zeng @akineeic
* [Report](https://gist.github.com/akineeic/61c1f548350fa8dc99f174ed1f06cce8)
* [Video report on Youtube](https://youtu.be/Stbb4hZCkhU)

<cut/>

## Introduction

[OpenCV.js](https://docs.opencv.org/3.4/df/d0a/tutorial_js_intro.html)  comes out as a JavaScript binding for a selected subset of OpenCV functions for the open web platform. It allows emerging web applications involving multimedia processing to benefit from the wide variety of vision functions available in OpenCV. OpenCV.js leverages Emscripten to compile OpenCV functions into ASM.js or WebAssembly targets, and provides JavaScript APIs for web developers.

The dnn module of OpenCV supports several frameworks including caffe, tensorflow, torch, darknet, onnx. It also supports so many types of layers as shown in the wiki, which reveal its potential to develop deep learning applications. OpenCV.js also binds some dnn API which is enough to do deep learning inference on the Web. At the same time, with the optimization through multi-threads and SIMD, the performance of the dnn module in OpenCV.js is impressive. All of these means that OpenCV.js also has the ability and potential to develop attractive deep learning applications on the Web.

But there are lack of tutorials to show the ability or potential of the dnn module of OpenCV.js. Very little information a developer can get from the tutorial even if he is interested in the dnn module of OpenCV.js. Lack of documentation and tutorials becomes a major issue that prevents widespread use of the dnn module in OpenCV.js.

Therefore, the main goal of this project is to develop several deep learning example with OpenCV.js and add them into the tutorial.


## Work structure

### Develop DNN(Deep Neural Networks) examples

This project added several DNN examples into OpenCV.js tutorial, including image classification, object detection, style transfer, semantic segmentation and pose estimation. The process flow of each example is similar. So condensed a function `main` to do inference once, which could be divided into several parts as follows:

1. Load labels from txt file and process it into an array.
2. Fetch model file and save into emscripten file system.
3. Get blob from image as input for net, and standardize it with parameter like `mean`, `std` according to model.
4. Use binding functions `setInput` and `forward` to get the output data.
5. Post-processing to get the final result from the output data.

The first three part have been written into a JS file as help functions since these parts can be re-use between examples. You should only re-write the post-processing function to develop different example and change the parameters to run differents models. 

### Usage of DNN example

Follow the [tutorial](https://docs.opencv.org/master/d4/da1/tutorial_js_setup.html) to build OpenCV.js and append option `--build_doc` to build documents. To try the DNN examples, launch a local web server in <build_dir>/doc/doxygen/html folder. Then click `OpenCV.js Tutorials` and `Deep Neural Networks (dnn module) example` in turn will navigate into the example webpage. You can download models according to the table in the bottom of the webpage or use their own models. Click the `modelFile` button (and `configFile` button if neeed) to upload model and modify the parameters in the first codeSnippet according to the uploaded model. Finally click `Try it` button will run function `main` to do inference once and show the result in the webpage.

## Result

### Test Environment

OS: Ubuntu 18.04<br>
Emscripten: 1.39.15, LLVM upstream backend<br>
Browser: Google Chrome 85.0.4183.83 (Official Build) (64-bit)<br>
Hardware: Core(TM) i7-5960X CPU @ 3.00GHz with 16 logical cores<br>

### Test Result

| Example | Model | Scalar(ms) | SIMD(ms) | Threads(ms) | SIMD && Threads(ms)
|-----|-----|----|----|----|----|
| Image Classifiction | [googleNet caffe](https://github.com/BVLC/caffe/tree/master/models/bvlc_googlenet) | 1139.86 | 285.73 | 325.77 | 93.17 |
| Object Detection | [MobileNet-SSD](https://github.com/chuanqi305/MobileNet-SSD) | 1069.60 | 343.23 | 403.13 | 184.10 |
| Style Transfer | [mosaic](https://github.com/jcjohnson/fast-neural-style) | 1776.86 | 476.94 | 456.84 | 156.38 |
| Semantic Segmentation| [deepLab v3 513](https://drive.google.com/uc?id=1v-hfGenaE9tiGOzo5qdgMNG_gqQ5-Xn4&export=download) | 7224.29 | 2214.53 | 1989.64 | 601.87 |
| Pose Estimation| [openpose](https://github.com/CMU-Perceptual-Computing-Lab/openpose/tree/master/models/pose/coco) | 82167.64 | 16722.71 | 19900.37 | 4291.09 |

### Examples show(test in scalar)

- Image Classification
<img src=""https://gist.github.com/akineeic/61c1f548350fa8dc99f174ed1f06cce8/raw/7daa01bef4846b12fa9b8031c0c23986e5518ed5/IC.png"" width=""750"">

- Object Detection
<img src=""https://gist.github.com/akineeic/61c1f548350fa8dc99f174ed1f06cce8/raw/7daa01bef4846b12fa9b8031c0c23986e5518ed5/OD.png"" width=""750"">

- Style Transfer
<img src=""https://gist.github.com/akineeic/61c1f548350fa8dc99f174ed1f06cce8/raw/7daa01bef4846b12fa9b8031c0c23986e5518ed5/ST.png"" width=""750"">

- Semantic Segmentation
<img src=""https://gist.github.com/akineeic/61c1f548350fa8dc99f174ed1f06cce8/raw/7daa01bef4846b12fa9b8031c0c23986e5518ed5/SS.png"" width=""750"">

- Pose Estimation
<img src=""https://gist.github.com/akineeic/61c1f548350fa8dc99f174ed1f06cce8/raw/7daa01bef4846b12fa9b8031c0c23986e5518ed5/PE.png"" width=""750"">

## Future Work
1. Investigate more models and add their infermation into the tutorials for each example.
2. Try to enable `DetectionModel` for object detection example with the new version of OpenCV. 

```
force_builders_only=docs,Custom
buildworker:Custom=linux-1,linux-2,linux-4
build_image:Docs=docs-js
build_image:Custom=javascript
```",True,18064,https://api.github.com/repos/opencv/opencv/pulls/18064,https://github.com/opencv/opencv/pull/18064,closed,2611,2,23,31,15,72,3,1,"[{'name': 'category: documentation'}, {'name': 'GSoC'}, {'name': 'category: javascript (js)'}]",2020-08-10 06:21:48+00:00,2020-11-29 10:09:43+00:00,9604075.0,"111 days, 3:47:55","[{'comment_id': 467821291, 'comment_body': ""SoftMax is not increasing function that means `softmax(x) > softmax(y) <=> x > y`. So to compute only indices we don't need it. Except you need the probabilities as well."", 'comment_created': datetime.datetime(2020, 8, 10, 10, 43, 39, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 467821547, 'comment_body': ""We don't need this logic - `readNet` can manage it internally"", 'comment_created': datetime.datetime(2020, 8, 10, 10, 44, 16, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 467821795, 'comment_body': 'Do all the models process RGB images or BGR?', 'comment_created': datetime.datetime(2020, 8, 10, 10, 44, 49, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 467823417, 'comment_body': 'Please avoid code duplication - create a separate .js script with common methods', 'comment_created': datetime.datetime(2020, 8, 10, 10, 48, 27, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 467893924, 'comment_body': 'Softmax functionn is necessary to me since I need to show the probabilities in the webpage.', 'comment_created': datetime.datetime(2020, 8, 10, 13, 15, 2, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}, {'comment_id': 467895971, 'comment_body': 'Not really, some models need to change the channel. So I set a global flag to control it.', 'comment_created': datetime.datetime(2020, 8, 10, 13, 18, 4, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}, {'comment_id': 467904135, 'comment_body': 'Got it, thanks!', 'comment_created': datetime.datetime(2020, 8, 10, 13, 30, 22, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 467904606, 'comment_body': 'Sorry, just missed that you use `rgb` flag already.', 'comment_created': datetime.datetime(2020, 8, 10, 13, 31, 5, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 467905911, 'comment_body': 'BTW, seems like you need `!rgb` because\r\n`image (RGBA) -> cvtColor RGB -> blob (RGB if swapRB is false | BGR if swapRB is true)`\r\nand this flag swaps R and B (for RGB) or B and R (for BGR). So to keep RGB input unchanged, you need `!rgb`', 'comment_created': datetime.datetime(2020, 8, 10, 13, 33, 2, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 467913856, 'comment_body': 'That make sense. `rgb` comes from the input argument in the python example. Maybe change the name of this flag to `swapRB` is more suitable?', 'comment_created': datetime.datetime(2020, 8, 10, 13, 45, 9, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}, {'comment_id': 467915794, 'comment_body': ""Thanks for your advice. I'll test and change the logic."", 'comment_created': datetime.datetime(2020, 8, 10, 13, 48, 8, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}, {'comment_id': 467929602, 'comment_body': 'Because my original idea was to show the processing function into each example webpage to users, so I put the similar code in each html file.', 'comment_created': datetime.datetime(2020, 8, 10, 14, 8, 50, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}, {'comment_id': 468294258, 'comment_body': 'It means these model/label files should be hosted within the same path of the HTML/JS files. Is that the case for the opencv docs deployment? Any suggestions? @dkurt @alalek ? ', 'comment_created': datetime.datetime(2020, 8, 11, 2, 43, 56, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 468364632, 'comment_body': ""Not sure. Let's keep the same config (RGB flag) but just manage it in a right way in code."", 'comment_created': datetime.datetime(2020, 8, 11, 6, 54, 59, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 468365771, 'comment_body': ""Not a good idea as for me. If one of the code snippets will have a bug - it's hard to find all the copies. So I'd like to suggest to unite the logic.\r\n"", 'comment_created': datetime.datetime(2020, 8, 11, 6, 57, 33, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 468366189, 'comment_body': 'I believe its possible to use `utils.loadCode` in case of shared `.js` file as well', 'comment_created': datetime.datetime(2020, 8, 11, 6, 58, 30, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 468367252, 'comment_body': 'Seems like these are local paths of downloaded models from\r\n```\r\n {\r\n            ""model"": ""googlenet"",\r\n            ""mean"": ""104, 117, 123"",\r\n            ""std"": ""1"",\r\n            ""labels"": ""1000"",\r\n            ""rgb"": ""true"",\r\n            ""softmax"": ""no"",\r\n            ""modelUrl"": ""http://dl.caffe.berkeleyvision.org/bvlc_googlenet.caffemodel"",\r\n            ""configUrl"": ""https://raw.githubusercontent.com/BVLC/caffe/master/models/bvlc_googlenet/deploy.prototxt""\r\n        },        \r\n```\r\n', 'comment_created': datetime.datetime(2020, 8, 11, 7, 0, 43, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 468403152, 'comment_body': 'Yes, the example can load model from native or by url. But some of the download urls will cause network issue when load model by url.', 'comment_created': datetime.datetime(2020, 8, 11, 8, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}, {'comment_id': 471309719, 'comment_body': 'Can you check in runtime if object is instance of `cv.Mat` (frame) or a canvas? So create a single function', 'comment_created': datetime.datetime(2020, 8, 17, 8, 5, 6, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 471309775, 'comment_body': 'Blod?', 'comment_created': datetime.datetime(2020, 8, 17, 8, 5, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 471310153, 'comment_body': 'Do we really need this logic?', 'comment_created': datetime.datetime(2020, 8, 17, 8, 5, 58, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 471311135, 'comment_body': 'Why we need a config file while the same values are hardcoded in the `.html` pages? Please use the values from config file this way', 'comment_created': datetime.datetime(2020, 8, 17, 8, 8, 2, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 471322333, 'comment_body': 'The values in the `codeSnippet` is not hardcoded, it can be rewrite by users. The webpage will draw a table(as follows) about enabled model according to the config file. Then users can change the values in the `codeSnippet` to investigate more models.\r\n\r\n![modeInfo](https://user-images.githubusercontent.com/44738552/90374811-a5dae300-e0a6-11ea-9a79-4d2173f16061.png)\r\n', 'comment_created': datetime.datetime(2020, 8, 17, 8, 28, 40, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}, {'comment_id': 471325614, 'comment_body': 'I just want to show the name and type of the running model after inference. I can delete this if not needed.', 'comment_created': datetime.datetime(2020, 8, 17, 8, 34, 13, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}, {'comment_id': 471330072, 'comment_body': ""Sorry for this mistake, I'll correct it."", 'comment_created': datetime.datetime(2020, 8, 17, 8, 42, 33, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}, {'comment_id': 475307041, 'comment_body': 'Could you please display the `modelUrl` and `configUrl`? So the users of this tutorial would know which URL they can use to test.', 'comment_created': datetime.datetime(2020, 8, 24, 2, 13, 1, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 475308439, 'comment_body': 'I guess the ""network issue"" is caused by cross origin setting by the web server that hosts the models. \r\n\r\nCould https://docs.opencv.org/ web server can host these models? So the tutorials can load models without the ""cross origin"" issues. @dkurt @alalek , any thoughts?', 'comment_created': datetime.datetime(2020, 8, 24, 2, 19, 11, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 475312494, 'comment_body': 'Please update the UI that indicates the ""running main"" status. Otherwise users would not know what happens.', 'comment_created': datetime.datetime(2020, 8, 24, 2, 38, 39, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 475314198, 'comment_body': 'The model may not recognize the space shuttle. It leads to poor segmentation result. Please use another image.', 'comment_created': datetime.datetime(2020, 8, 24, 2, 47, 21, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 479879458, 'comment_body': 'Any updates on this?', 'comment_created': datetime.datetime(2020, 8, 31, 4, 18, 11, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 479879492, 'comment_body': 'Any updates on this?', 'comment_created': datetime.datetime(2020, 8, 31, 4, 18, 22, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 479879522, 'comment_body': 'Any updates on this?', 'comment_created': datetime.datetime(2020, 8, 31, 4, 18, 32, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 479983638, 'comment_body': 'Fixed by the lastest commit.', 'comment_created': datetime.datetime(2020, 8, 31, 8, 42, 3, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}, {'comment_id': 479983699, 'comment_body': 'Fixed by the lastest commit.', 'comment_created': datetime.datetime(2020, 8, 31, 8, 42, 10, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}, {'comment_id': 479983839, 'comment_body': 'Fixed by the lastest commit.', 'comment_created': datetime.datetime(2020, 8, 31, 8, 42, 27, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}, {'comment_id': 481506195, 'comment_body': 'It would good to mention ""You can find the model URLs and parameters in the model info section"".  It would be even better that you link the model info section here.', 'comment_created': datetime.datetime(2020, 9, 2, 0, 33, 14, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 481506788, 'comment_body': 'When there are no models are selected, if you click the ""try it"" button, the UI will only show ""Running function main()..."". I would suggest you try catch the error and show it in the web page.', 'comment_created': datetime.datetime(2020, 9, 2, 0, 35, 29, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 481507211, 'comment_body': 'Why do you remove the ONNX models? You list models in https://github.com/opencv/opencv/pull/18064#discussion_r471322333', 'comment_created': datetime.datetime(2020, 9, 2, 0, 37, 11, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 481508453, 'comment_body': 'When I try this model, it throws exception\r\n```\r\ncode: -2\r\nmsg: ""OpenCV(3.4.10-dev) /home/zzm/projects/GSoC2020/nx-opencv/modules/dnn/src/caffe/caffe_io.cpp:1157: error: (-2:Unspecified error) FAILED: ReadProtoFromTextFile(param_file, param). Failed to parse NetParameter file: MobileNetSSD_deploy.caffemodel in function \'ReadNetParamsFromTextFileOrDie\'↵""\r\n```', 'comment_created': datetime.datetime(2020, 9, 2, 0, 42, 5, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 481508629, 'comment_body': 'ditto. Link to model info section.', 'comment_created': datetime.datetime(2020, 9, 2, 0, 42, 47, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 481509067, 'comment_body': 'dito.', 'comment_created': datetime.datetime(2020, 9, 2, 0, 44, 33, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 481510570, 'comment_body': 'ditto.', 'comment_created': datetime.datetime(2020, 9, 2, 0, 46, 6, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 481519511, 'comment_body': 'name it `canvasInput` that aligns to other OpenCV.js tutorials, e.g. https://docs.opencv.org/3.4/db/d64/tutorial_js_colorspaces.html', 'comment_created': datetime.datetime(2020, 9, 2, 1, 7, 28, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 481519547, 'comment_body': 'modelFile', 'comment_created': datetime.datetime(2020, 9, 2, 1, 7, 38, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 481519575, 'comment_body': 'configFile', 'comment_created': datetime.datetime(2020, 9, 2, 1, 7, 48, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 481520232, 'comment_body': ""`The config file '${configPath}' is created successfully`"", 'comment_created': datetime.datetime(2020, 9, 2, 1, 10, 26, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 481520344, 'comment_body': ""`The model file '${modelPath}' is created successfully`"", 'comment_created': datetime.datetime(2020, 9, 2, 1, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 481520473, 'comment_body': 'Why do you clear the `configPath`?', 'comment_created': datetime.datetime(2020, 9, 2, 1, 11, 25, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 481520938, 'comment_body': ""There is an error happens when I load a new image. You should call `loadImageToCanvas(e, 'canvasInput')`"", 'comment_created': datetime.datetime(2020, 9, 2, 1, 13, 22, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 481521434, 'comment_body': 'This tutorial show**s** you', 'comment_created': datetime.datetime(2020, 9, 2, 1, 15, 17, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 481762744, 'comment_body': ""It seems these models can't run in this example with opencv.js. I test successfully with opencv python before. This may caused by the difference version between python and opencv.js. I'll investigate these models later."", 'comment_created': datetime.datetime(2020, 9, 2, 6, 8, 11, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}, {'comment_id': 481768813, 'comment_body': ""You can try with [modelUrl](https://raw.githubusercontent.com/chuanqi305/MobileNet-SSD/master/mobilenet_iter_73000.caffemodel) and [configUrl](https://raw.githubusercontent.com/chuanqi305/MobileNet-SSD/master/deploy.prototxt). It seems that I put wrong links. I'll update the url later."", 'comment_created': datetime.datetime(2020, 9, 2, 6, 14, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}, {'comment_id': 481774093, 'comment_body': ""To handle the case like that user run a cafffe model that need config file, then he wants to try some models that don't need config file. And I think it's reasonable to let user re-select config file once he change the model file."", 'comment_created': datetime.datetime(2020, 9, 2, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}, {'comment_id': 481776936, 'comment_body': 'I forgot to modify these code after I changed the function. Thanks for your reminder!', 'comment_created': datetime.datetime(2020, 9, 2, 6, 21, 34, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}, {'comment_id': 484150680, 'comment_body': 'Please investigate whether the root cause is the version of latest ONNX models. Did you try some old models?', 'comment_created': datetime.datetime(2020, 9, 7, 2, 12, 24, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 484151999, 'comment_body': 'That makes sense. Please also clear the configFile input element of UI.', 'comment_created': datetime.datetime(2020, 9, 7, 2, 19, 26, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 484153320, 'comment_body': 'Please remove ""example"", just the module name would be fine.', 'comment_created': datetime.datetime(2020, 9, 7, 2, 25, 40, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 484174116, 'comment_body': ""That may be the root cause. I'll try to find the old model and have a try."", 'comment_created': datetime.datetime(2020, 9, 7, 4, 14, 52, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}, {'comment_id': 484185996, 'comment_body': ""Why 2RGB? C++ and Python users work with BGR images (from `imread`) so by default they expect this layout and `swapRB` means that network process RGB. Current logic is reversed and may confuse so I'd like to recommend to keep `swapRB=true` for RGB and `swapRB=false` for BGR. So \r\n```\r\ncv.cvtColor(mat, matC3, cv.COLOR_RGBA2BGR);\r\n```\r\nfirst"", 'comment_created': datetime.datetime(2020, 9, 7, 5, 11, 40, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 484186408, 'comment_body': '`if (`', 'comment_created': datetime.datetime(2020, 9, 7, 5, 13, 24, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 484187043, 'comment_body': 'There is a number of tested models here: https://github.com/opencv/opencv_extra/blob/master/testdata/dnn/download_models.py\r\n\r\nBut they are not very interesting - almost all the models just ports to Caffe2', 'comment_created': datetime.datetime(2020, 9, 7, 5, 16, 8, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 484187161, 'comment_body': 'code duplication. Can you please move to general file?', 'comment_created': datetime.datetime(2020, 9, 7, 5, 16, 45, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 484187654, 'comment_body': 'Why we need to implement NMS? There is already [NMSBoxes](https://docs.opencv.org/master/d6/d0f/group__dnn.html#ga9d118d70a1659af729d01b10233213ee) in dnn module', 'comment_created': datetime.datetime(2020, 9, 7, 5, 18, 53, tzinfo=datetime.timezone.utc), 'commenter': 'dkurt', 'type': 'User'}, {'comment_id': 488308267, 'comment_body': '@akineeic , any response?', 'comment_created': datetime.datetime(2020, 9, 15, 0, 19, 29, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 488308332, 'comment_body': '@akineeic , any response?', 'comment_created': datetime.datetime(2020, 9, 15, 0, 19, 45, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 488308709, 'comment_body': '@akineeic, could you try the ONNX models listed in download_models.py?', 'comment_created': datetime.datetime(2020, 9, 15, 0, 20, 52, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 488308819, 'comment_body': '@akineeic , any response?', 'comment_created': datetime.datetime(2020, 9, 15, 0, 21, 16, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 488309156, 'comment_body': ""I guess the reason is current dnn module of OpenCV.js doesn't expose NMSBoxes. @akineeic could you clarify that?"", 'comment_created': datetime.datetime(2020, 9, 15, 0, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 488795824, 'comment_body': 'Sorry for the later reply. I missed the mail since I forgot to change the primary email of my github account. The reason is mentioned by @huningxin that the JS binding of NMSBoxes is not implemented yet.', 'comment_created': datetime.datetime(2020, 9, 15, 16, 19, 6, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}, {'comment_id': 488797449, 'comment_body': 'This sounds more suitable. I did that in the latest commit.', 'comment_created': datetime.datetime(2020, 9, 15, 16, 21, 36, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}, {'comment_id': 488799855, 'comment_body': 'Thanks for your review. I have changed the format for  `if` and `for` logic block.', 'comment_created': datetime.datetime(2020, 9, 15, 16, 25, 11, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}, {'comment_id': 488800241, 'comment_body': 'I did that in the latest commit.', 'comment_created': datetime.datetime(2020, 9, 15, 16, 25, 44, tzinfo=datetime.timezone.utc), 'commenter': 'akineeic', 'type': 'User'}]","[{'commit_sha': 'b35568c9362de1af0ea0014bf290ef1b9e2f2aaa', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9596e0cb06a2a3c689291862596a3a0d6a1b066', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26dec2a8d17d8181fafb28d265050763aae61895', 'committer_username': 'huningxin', 'committer_name': 'Ningxin Hu', 'committer_email': 'ningxin.hu@intel.com', 'commit_date': datetime.datetime(2011, 8, 26, 3, 39, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd785b990a3c1f6f702e9f911d101dc3e8fcef48', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b277af18b149a5ada4edc7ae3f4f1d6689dad674', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb342ec8b72a479e554ccbeebc8ffcfb38c6b50d', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70fff504f47ee682680d84834240e3254cfec429', 'committer_username': 'huningxin', 'committer_name': 'Ningxin Hu', 'committer_email': 'ningxin.hu@intel.com', 'commit_date': datetime.datetime(2011, 8, 26, 3, 39, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79e2d816bacb86404addb1c9d5a6880f3c5ba604', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00cab454976f8921376388ee4f1282bd5c7c3689', 'committer_username': 'huningxin', 'committer_name': 'Ningxin Hu', 'committer_email': 'ningxin.hu@intel.com', 'commit_date': datetime.datetime(2011, 8, 26, 3, 39, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6129075a5071adf83d29aaa4886fa4e926669eed', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7892cc03808a757237964e8b28ec3bde774c52f5', 'committer_username': 'huningxin', 'committer_name': 'Ningxin Hu', 'committer_email': 'ningxin.hu@intel.com', 'commit_date': datetime.datetime(2011, 8, 26, 3, 39, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ea14bfc2b5afe1b6a33a365af0800a74940d352', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19efdbb0f4c961a243d38e0ce729aef560304be7', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d512b9b84bb065ab94a3df11c4bcbda9ec00e2b', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9454530d4555d8295df1004b3a737b7b9dd6d3b2', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3631fc74328273b7e892926eb7273b0863879c3', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a11bb6d7804bd36ca24d7d9a501e58b8cbf10403', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30849500a8e435ecc0ee4b516f147ce9765a50c0', 'committer_username': 'huningxin', 'committer_name': 'Ningxin Hu', 'committer_email': 'ningxin.hu@intel.com', 'commit_date': datetime.datetime(2011, 8, 26, 3, 39, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfe0e67a4af5d9da094d2be958155963baf85574', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4ba5ff462f6bce41bdb8f1f0940db6db24a30f8', 'committer_username': 'huningxin', 'committer_name': 'Ningxin Hu', 'committer_email': 'ningxin.hu@intel.com', 'commit_date': datetime.datetime(2011, 8, 26, 3, 39, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b96f1270138eda122248e562699c9742169bd63', 'committer_username': 'huningxin', 'committer_name': 'Ningxin Hu', 'committer_email': 'ningxin.hu@intel.com', 'commit_date': datetime.datetime(2011, 8, 26, 3, 39, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4d0f69c9c4541e236e04872d50066ea33443cff', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e541d7e26468a532d59615e33c38c987bd407573', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a29e8050acafc1c86d3e2e373e3ee4a71fc8737', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0a54f5b05afda3e45dd57b121ddaa3b9cbabe36', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f470459e6efbc4ff0b6f0e437b290de8097d3f2', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aba8fb53d6075cc10a9e4a18b3cf238315fad104', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58d513d6b9eb7ebe15442a4a2ffa0965f8c79bba', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74daac9ffbe81f1e58066862a2967fa5d1ba4b47', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eecd46ce9174877f7a9c901e949c4a385e69b6eb', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '491b5d643d138b8cab2c8eeba407be91a14c3c3a', 'committer_username': 'akineeic', 'committer_name': 'Zhiming-Zeng', 'committer_email': '1773677072@qq.com', 'commit_date': datetime.datetime(2018, 11, 4, 2, 37, 55, tzinfo=datetime.timezone.utc)}]",Zhiming-Zeng,44738552,1773677072@qq.com,User,,17,,3,2

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
5108051,opencv,opencv/opencv,C++,55706,77588,2655,2194,34491,2599,6,133,"[{'id': 465302640, 'number': 18064, 'closed': datetime.datetime(2020, 11, 29, 10, 9, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 10, 6, 21, 48, tzinfo=datetime.timezone.utc), 'time_taken': 9604075.0, 'time_delta': '111 days, 3:47:55', 'additions': 2611, 'deletions': 2, 'state': 'closed'}]"
