pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
425014747,[MU4] [WIP] GSoC 2020: Albums,"Resolves: Albums missing :-)

- [x] I signed [CLA](https://musescore.org/en/cla)
- [x] I made sure the code in the PR follows [the coding rules](https://musescore.org/en/handbook/developers-handbook/finding-your-way-around/musescore-coding-rules)
- [x] I made sure the code compiles on my machine
- [ ] I made sure there are no unnecessary changes in the code
- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving
- [x] I made sure the commit message(s) contain a description and answer the question ""Why do those changes fix that particular issue?"" or ""Why are those changes really necessary as improvements?""
- [ ] I made sure the commit message title starts with ""fix #424242:"" if there is a related issue
- [x] I created the test (mtest, vtest, script test) to verify the changes I made
",False,6145,https://api.github.com/repos/musescore/MuseScore/pulls/6145,https://github.com/musescore/MuseScore/pull/6145,closed,9093,711,87,72,32,169,1,0,[{'name': 'archived'}],2020-05-29 10:15:24+00:00,2022-12-20 10:27:44+00:00,80784740.0,"935 days, 0:12:20","[{'comment_id': 432442626, 'comment_body': 'For me <code>dominantScore</code> is a strange name, I immediate have to think at a dominant chord. I understand it is the first score, so <code>firstScore</code> is a better name?\r\nOr if this a kind of container, containing all the movements <code>albumScore</score> could be fine too.', 'comment_created': datetime.datetime(2020, 5, 29, 12, 14, 53, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 432443721, 'comment_body': 'Since this is based on <code>master</code>, better to start using the new coding standard?', 'comment_created': datetime.datetime(2020, 5, 29, 12, 17, 13, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 432444506, 'comment_body': 'Good to see this kind of comments! Makes it more clear.', 'comment_created': datetime.datetime(2020, 5, 29, 12, 18, 43, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 432446566, 'comment_body': 'Sorry, my Greek is not good enough to read this ;-)', 'comment_created': datetime.datetime(2020, 5, 29, 12, 22, 32, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 432447251, 'comment_body': ""Can't you use <code>toScore(score)</code> instead of this cast?"", 'comment_created': datetime.datetime(2020, 5, 29, 12, 23, 49, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 432448982, 'comment_body': 'Maybe even <code>masterScore</code> could be better name.', 'comment_created': datetime.datetime(2020, 5, 29, 12, 27, 13, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 432450665, 'comment_body': ""This will break compatibility with the old albums? That's fine as long it is intentional."", 'comment_created': datetime.datetime(2020, 5, 29, 12, 30, 43, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 432451067, 'comment_body': 'Again problems reading Greek :wink: ', 'comment_created': datetime.datetime(2020, 5, 29, 12, 31, 36, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 432451528, 'comment_body': 'And again Greek (at least I do recognize it :smiley: ).', 'comment_created': datetime.datetime(2020, 5, 29, 12, 32, 35, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 432452655, 'comment_body': 'And again Greek.', 'comment_created': datetime.datetime(2020, 5, 29, 12, 34, 53, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 432455113, 'comment_body': 'Standard header missing (copyright etc.)', 'comment_created': datetime.datetime(2020, 5, 29, 12, 39, 50, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 432455404, 'comment_body': 'Standard header missing.', 'comment_created': datetime.datetime(2020, 5, 29, 12, 40, 20, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 432458513, 'comment_body': 'Are both <code>.msca</code> and <code>.album</code> identical? Or is one of them a compressed file?', 'comment_created': datetime.datetime(2020, 5, 29, 12, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 432460392, 'comment_body': 'Is this file supposed to check-in???', 'comment_created': datetime.datetime(2020, 5, 29, 12, 50, 14, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 432464119, 'comment_body': 'Having these absolute path makes it difficult to transfer albums.\r\nIs it planned to have albums as compressed folders, containing all scores etc., just like the mscz file is a compressed folder containing the score plus some other files?', 'comment_created': datetime.datetime(2020, 5, 29, 12, 57, 7, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 432714558, 'comment_body': 'It is a terrible name. In the next few days I will make some drastic changes, then I will find a more suitable name :-)\r\n`firstScore` or `firstMovement` seem decent.', 'comment_created': datetime.datetime(2020, 5, 29, 20, 16, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 432714627, 'comment_body': 'Done :-)', 'comment_created': datetime.datetime(2020, 5, 29, 20, 16, 40, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 432715280, 'comment_body': "":laughing: the comments in Greek are my notes, they will be removed. This one says that I've abused `collected`."", 'comment_created': datetime.datetime(2020, 5, 29, 20, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 432715800, 'comment_body': '`toScore` seems to return a `Score*` not a `MasterScore*`', 'comment_created': datetime.datetime(2020, 5, 29, 20, 19, 30, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 432716503, 'comment_body': 'It does not break backwards-compatibility.', 'comment_created': datetime.datetime(2020, 5, 29, 20, 21, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 432716970, 'comment_body': 'These all point out things that seem misplaced to me (related to those drastic changes I mentioned before).', 'comment_created': datetime.datetime(2020, 5, 29, 20, 22, 11, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 432717068, 'comment_body': 'Thanks, I will add it :-) ', 'comment_created': datetime.datetime(2020, 5, 29, 20, 22, 26, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 432717486, 'comment_body': '`.msca` is the new albums file. \r\n`.album` is the MuseScore2 album type.\r\n\r\nThey are same-ish, the new one has more information and is (in my opinion) more fitting. `.album` could be anything.', 'comment_created': datetime.datetime(2020, 5, 29, 20, 23, 24, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 432717712, 'comment_body': ""Ooops, I'll remove that."", 'comment_created': datetime.datetime(2020, 5, 29, 20, 24, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 432718405, 'comment_body': 'I am planning to have both absolute and relative paths (if one does not work, the other might save the day).', 'comment_created': datetime.datetime(2020, 5, 29, 20, 25, 39, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 432826425, 'comment_body': '<code>firstMovement</code> seems the most descriptive name, indeed.', 'comment_created': datetime.datetime(2020, 5, 30, 9, 29, 35, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 432826733, 'comment_body': 'And there is no <code>toMasterScore()</code> (unless you add it in <code>libmscore/scoreElement.h</code> :wink:). In general we try to prevent these kind of casts.', 'comment_created': datetime.datetime(2020, 5, 30, 9, 34, 41, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 432826784, 'comment_body': ':+1: ', 'comment_created': datetime.datetime(2020, 5, 30, 9, 35, 39, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 432826996, 'comment_body': 'How about a compressed file containing all the score of the album, together with the new <code>msca</code> file? But that can be done after the albums itself are finalized.', 'comment_created': datetime.datetime(2020, 5, 30, 9, 39, 31, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 432947211, 'comment_body': ""While I can understand that this a) is Work In Progress and b) Greek is your native language and as such more comfortable to you, I'd still prefer comments in English, as soon as it gets published here on GitHub"", 'comment_created': datetime.datetime(2020, 5, 31, 13, 28, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 432947457, 'comment_body': 'Better install that hook to prevent this. Check https://musescore.org/en/handbook/developers-handbook/finding-your-way-around/git-workflow#Summary step 4: \r\n\r\nIn your clone directory, copy the file build/git/hooks/post-checkout to the directory .git/hooks in order for mscore/revision.h to be maintained automatically by git. See build/git/hooks/README for details. Note that the .git directory is hidden.', 'comment_created': datetime.datetime(2020, 5, 31, 13, 31, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 432984463, 'comment_body': 'I will take care of that tomorrow :-)', 'comment_created': datetime.datetime(2020, 5, 31, 21, 8, 54, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 432984691, 'comment_body': ""Thanks, I'll do that tomorrow."", 'comment_created': datetime.datetime(2020, 5, 31, 21, 11, 13, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 433222959, 'comment_body': 'Done ', 'comment_created': datetime.datetime(2020, 6, 1, 13, 8, 16, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 433223106, 'comment_body': 'Done. Do I need to squash my commits for this to take effect?', 'comment_created': datetime.datetime(2020, 6, 1, 13, 8, 37, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 433283896, 'comment_body': 'Yes, I think so', 'comment_created': datetime.datetime(2020, 6, 1, 14, 55, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 435955171, 'comment_body': 'space between `for`and `(`', 'comment_created': datetime.datetime(2020, 6, 5, 14, 21, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 436280752, 'comment_body': ""I don't think we need a comment chunk so large...\r\n```\r\n//---------------------------------------------------------\r\n//   AlbumItem\r\n//---------------------------------------------------------\r\n```\r\nis good already."", 'comment_created': datetime.datetime(2020, 6, 6, 16, 16, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Harmoniker1', 'type': 'User'}, {'comment_id': 436280843, 'comment_body': ""Make class variables prefixed with `m_`, as stated in the new [code guideline](https://github.com/musescore/Documentation/blob/master/WorkflowAndGuidelines/CodeGuidelines.md). Then we don't need `this->` here."", 'comment_created': datetime.datetime(2020, 6, 6, 16, 18, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Harmoniker1', 'type': 'User'}, {'comment_id': 436280883, 'comment_body': ""It's best to take `: AlbumItem(album)` down a new line."", 'comment_created': datetime.datetime(2020, 6, 6, 16, 18, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Harmoniker1', 'type': 'User'}, {'comment_id': 436280899, 'comment_body': 'Use `qDebug`.', 'comment_created': datetime.datetime(2020, 6, 6, 16, 19, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Harmoniker1', 'type': 'User'}, {'comment_id': 436282675, 'comment_body': ""If it isn't too much of a problem, I would like to keep it like that until I the PR is ready."", 'comment_created': datetime.datetime(2020, 6, 6, 16, 44, 9, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 436282699, 'comment_body': ""Thank you, I'll take care of it"", 'comment_created': datetime.datetime(2020, 6, 6, 16, 44, 33, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 436282768, 'comment_body': 'I agree. I have ignored the line width limits in multiple places. I will take care of that in my next refactor.', 'comment_created': datetime.datetime(2020, 6, 6, 16, 45, 33, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 436282866, 'comment_body': 'I will probably delete it when I reach an acceptable level of stability.', 'comment_created': datetime.datetime(2020, 6, 6, 16, 46, 40, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 436284092, 'comment_body': 'OK', 'comment_created': datetime.datetime(2020, 6, 6, 17, 3, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Harmoniker1', 'type': 'User'}, {'comment_id': 436284158, 'comment_body': ""If you use `qDebug` you probably won't have to delete them :)"", 'comment_created': datetime.datetime(2020, 6, 6, 17, 4, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Harmoniker1', 'type': 'User'}, {'comment_id': 436284453, 'comment_body': ""Hmmm no, final `qDebug`s don't need these details. So fine, you can use `std::cout`s and delete them when they aren't needed anymore."", 'comment_created': datetime.datetime(2020, 6, 6, 17, 7, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Harmoniker1', 'type': 'User'}, {'comment_id': 440832117, 'comment_body': 'We tend to use `qDebug` for messages like this, which also lets us know where the message is coming from if it appears in console, iirc.\r\n\r\nedit: although I see Howard has already mentioned this', 'comment_created': datetime.datetime(2020, 6, 16, 13, 3, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 440832461, 'comment_body': 'Why have this return a `MasterScore`?', 'comment_created': datetime.datetime(2020, 6, 16, 13, 4, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 440832610, 'comment_body': 'Style :)\r\n\r\n`MasterScore *` -> `MasterScore*`', 'comment_created': datetime.datetime(2020, 6, 16, 13, 4, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 440836351, 'comment_body': ""Style, again:\r\n\r\n`const QString &path` -> `const QString& path`\r\n\r\nI won't mention any more things like this, because I _think_ running uncrustify should be enough to fix it."", 'comment_created': datetime.datetime(2020, 6, 16, 13, 10, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 440862247, 'comment_body': '>TODO: should this be removed?\r\n\r\nProbably not! I get 60 results across the codebase.', 'comment_created': datetime.datetime(2020, 6, 16, 13, 46, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 440863681, 'comment_body': ""You can probably use `toMasterScore` here, now that you've implemented it, right?"", 'comment_created': datetime.datetime(2020, 6, 16, 13, 47, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 440867009, 'comment_body': 'this line, and the duplicate above can be moved up one scope (i.e. to after line 248).', 'comment_created': datetime.datetime(2020, 6, 16, 13, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 440867349, 'comment_body': '?', 'comment_created': datetime.datetime(2020, 6, 16, 13, 52, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 440868002, 'comment_body': ""Sorry, what does `throwaway` do? I only ask because I've seen it a couple of times."", 'comment_created': datetime.datetime(2020, 6, 16, 13, 53, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 440871059, 'comment_body': ""Ahhh! I hate to say this, because I know it's really not a massive issue at all, but maybe a few blank lines would make this a bit less... daunting? :)"", 'comment_created': datetime.datetime(2020, 6, 16, 13, 57, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 440874226, 'comment_body': ""Or, \r\n\r\n```cpp\r\nint duration = item->albumItem->score->duration();\r\nint tempSeconds =  duration % 60;\r\nint tempMinutes = (duration / 60) % 60;\r\nint tempHours = duration / 3600;\r\n```\r\nNot that that would make it better, it's just another way of doing it :)"", 'comment_created': datetime.datetime(2020, 6, 16, 14, 0, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 440880025, 'comment_body': ""Well, will they ever have a `nullptr` value as pointers? If the answer to that question is 'yes', then the answer is *no*, you can't convert these to references. That's simply because there's no such thing as a null reference."", 'comment_created': datetime.datetime(2020, 6, 16, 14, 8, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 440885012, 'comment_body': ""Seems so. 'OK' has the behaviour of hiding the window, whereas 'Apply' does not, by convention."", 'comment_created': datetime.datetime(2020, 6, 16, 14, 15, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 440887036, 'comment_body': 'Where does this magic number come from?', 'comment_created': datetime.datetime(2020, 6, 16, 14, 18, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 440887287, 'comment_body': 'Another magic number?', 'comment_created': datetime.datetime(2020, 6, 16, 14, 18, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 440888035, 'comment_body': ""will `/home/boop` work when this is being run by Travis? I'd guess no. "", 'comment_created': datetime.datetime(2020, 6, 16, 14, 19, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 442144910, 'comment_body': ""I'll remove that soon enough."", 'comment_created': datetime.datetime(2020, 6, 18, 11, 2, 30, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 442145114, 'comment_body': ""No reason at all, a mistake that was causing me trouble. I'll change that."", 'comment_created': datetime.datetime(2020, 6, 18, 11, 2, 59, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 442145434, 'comment_body': 'I would think so too, those were from before I found out how to edit my QtCreator settings :-)', 'comment_created': datetime.datetime(2020, 6, 18, 11, 3, 39, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 442146503, 'comment_body': 'This could be replaced by is `MasterScore` (and probably will be in the future if those classes are rewritten) but as of right now a `MasterScore` needs to have `ElementType::SCORE` (otherwise nothing gets drawn on the screenview). So right now `toMasterScore/isMasterScore` are useless.', 'comment_created': datetime.datetime(2020, 6, 18, 11, 5, 42, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 442147230, 'comment_body': 'Can they though? If they are moved the call to `playAlbum` will replay the same score and enter an endless loop of recursive calls. ', 'comment_created': datetime.datetime(2020, 6, 18, 11, 7, 11, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 442147511, 'comment_body': ""https://wiki.qt.io/New_Signal_Slot_Syntax\r\n\r\nEssentially the new syntax does not support default values, so I have a bool that I don't need when clicking buttons."", 'comment_created': datetime.datetime(2020, 6, 18, 11, 7, 45, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 442148207, 'comment_body': ""I agree, but I will probably rewrite all of this if I add the ability to add albums inside of albums (that's why I haven't changed `scoreList` to `itemTable` or something like that). "", 'comment_created': datetime.datetime(2020, 6, 18, 11, 9, 17, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 442148880, 'comment_body': 'Just copy pasted that (comment included) from the `prefsDialog.cpp`.', 'comment_created': datetime.datetime(2020, 6, 18, 11, 10, 44, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 442149135, 'comment_body': 'Copy-paste from `Seq::setScoreView`.', 'comment_created': datetime.datetime(2020, 6, 18, 11, 11, 16, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 442149594, 'comment_body': 'You are right, fixing the paths of the tests is on my ToDo list :-)', 'comment_created': datetime.datetime(2020, 6, 18, 11, 12, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 442347158, 'comment_body': 'And where did you find that out?', 'comment_created': datetime.datetime(2020, 6, 18, 16, 18, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ecstrema', 'type': 'User'}, {'comment_id': 442355932, 'comment_body': ""These comments are so good that you should prefix them with `///` (three slashes) to expose them to Doxygen. Don't use three slashes before the function name (`//    collectPage`) or lines with dashes (`//-----------`)."", 'comment_created': datetime.datetime(2020, 6, 18, 16, 32, 46, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 442395619, 'comment_body': ""@Marr11317 QtCreator Menubar -> Tools -> Options -> C++, then:\r\n\r\n1. Select the built-in Qt style.\r\n2. Press `Copy...` (because you can't edit the built-in style.\r\n3. Press `Edit...`\r\n4. Go to `Pointers and References`.\r\n5. Deselect `Identifier` and select `Type name` (and maybe left const/volatile?)."", 'comment_created': datetime.datetime(2020, 6, 18, 17, 40, 55, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 442413119, 'comment_body': 'Ah, my mistake entirely. I noticed neither that it was recursing or that playbackIndex was a private member of the class. You are correct :) ', 'comment_created': datetime.datetime(2020, 6, 18, 18, 12, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 442413833, 'comment_body': 'Ah, I see. The convention for unused variables tends to be to call them `_`, but you can stick with `throwaway` if you want. ', 'comment_created': datetime.datetime(2020, 6, 18, 18, 14, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 442865988, 'comment_body': 'Would be good to avoid absolute paths where possible to avoid leaking information about the user.', 'comment_created': datetime.datetime(2020, 6, 19, 14, 16, 4, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 443144558, 'comment_body': 'Creating parameters and not using them tiggers compiler warnings. You can avoid the warnings by using the parameter in a no-op statement (`Q_UNUSED` exists for this purpose):\r\n\r\n```c++\r\n// header\r\nvoid addClicked(bool throwaway = false)\r\n\r\n// .cpp\r\nvoid AlbumManager::addClicked(bool throwaway)\r\n{\r\n    Q_UNUSED(throwaway);\r\n    ...\r\n}\r\n```\r\n\r\nOr by not giving the variable any kind of name at all:\r\n\r\n```c++\r\n// header\r\naddClicked(bool = false);\r\n\r\n// .cpp\r\nvoid AlbumManager::addClicked(bool)\r\n{\r\n    ...\r\n}\r\n```\r\nEither way, I would leave a comment in the `.ccp` to say something like *""Unused bool parameter is necessary to connect this function to QClass::function via the signal-slot mechanism""*. If you do give the parameter a name, you could consider giving it the same name as it has in the Qt function.', 'comment_created': datetime.datetime(2020, 6, 20, 16, 54, 40, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 443258025, 'comment_body': ""You don't have to give these `throwaway` parameters a name. This is valid syntax:\r\n\r\n```c++\r\nvoid addClicked(bool = false);\r\n```\r\n\r\nDoing this avoids compiler warnings that appear when you give something a name and never actually use it.\r\n\r\nSee [this comment](https://github.com/musescore/MuseScore/pull/6145/files#r443144558) for an alterative solution using `Q_UNUSED(throwaway)` in the `.cpp` file."", 'comment_created': datetime.datetime(2020, 6, 21, 21, 21, 38, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 443740287, 'comment_body': ""C++ truly has the answer to every problem xD\r\nI had completely forgotten about not naming parameters and didn't know that `Q_UNUSED` existed. I decided to use `Q_UNUSED` because I prefer explicitness. Thanks :-)"", 'comment_created': datetime.datetime(2020, 6, 22, 18, 12, 12, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 443741409, 'comment_body': 'Especially, in this case, absolute paths would need a very smart workaround to not fail. I was thinking to give the users the ability to select whether they want both relative and absolute paths when saving/exporting.', 'comment_created': datetime.datetime(2020, 6, 22, 18, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 443741563, 'comment_body': 'Addressed in the latest push.\r\n', 'comment_created': datetime.datetime(2020, 6, 22, 18, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 447648003, 'comment_body': 'Not sure, might better be a comma separated list', 'comment_created': datetime.datetime(2020, 6, 30, 12, 36, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 447648081, 'comment_body': 'same here', 'comment_created': datetime.datetime(2020, 6, 30, 12, 36, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 454971635, 'comment_body': ':+1: ', 'comment_created': datetime.datetime(2020, 7, 15, 11, 7, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 454973276, 'comment_body': 'Hmm, this method should probably be a `const` method, since it should never change anything about the `Album`.', 'comment_created': datetime.datetime(2020, 7, 15, 11, 10, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 454974899, 'comment_body': ""Also, this can probably be a `const` method. I completely forgot about this last time I reviewed, but I think their are probably a few other methods that need to change in the same way. I'm sure you can figure out what they are though, so I'll stop commenting it.\r\n\r\nIn general, a method should be `const` if it functions as a 'getter', i.e. if it returns a value calculated from the class state. If it has a side effect (e.g. changing a flag, fixing some internal structure), it doesn't need to be const, but consider renaming it to make its purpose clearer. I don't know how applicable that is here,"", 'comment_created': datetime.datetime(2020, 7, 15, 11, 14, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 454975761, 'comment_body': ""I'm interested, what use case do you have for a copy of `m_albumItems`?"", 'comment_created': datetime.datetime(2020, 7, 15, 11, 16, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 454976270, 'comment_body': 'What is the purpose of the new `_albumParent` member of  `Element`? And, how does it differ from `_parent`?', 'comment_created': datetime.datetime(2020, 7, 15, 11, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 454979067, 'comment_body': ""this is hacky, because users can absolutely style other bits of text with the 'composer' `Tid`, but IIRC there probably isn't a better way to do this.\r\n\r\nThis may cause problems if a composer's name is, for whatever reason, displayed on other pages of a score."", 'comment_created': datetime.datetime(2020, 7, 15, 11, 23, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 454982303, 'comment_body': ':+1: ', 'comment_created': datetime.datetime(2020, 7, 15, 11, 29, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 454985893, 'comment_body': 'I am always very suspicious of `goto`s. No good can come of it in my opinion.\r\n\r\nI would personally have a variable just before the start of the inner loop called `lastIndex`. I would then set this variable to the value of `j` at the start of the inner loop. Then, after the inner loop, but still within the outer loop, I would compare this using your `(j == int(m_items.size()) - 1)` condition, breaking from the loop if it were true.\r\n\r\nThat said, if you really feel like `goto` is the best option, I trust you to use it sparingly and _very_ carefully. ', 'comment_created': datetime.datetime(2020, 7, 15, 11, 37, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 454990493, 'comment_body': 'I presume there will eventually be an implementation here ;)', 'comment_created': datetime.datetime(2020, 7, 15, 11, 46, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 454991553, 'comment_body': ""You're using this code in three places. Could it be implemented in a separate function?"", 'comment_created': datetime.datetime(2020, 7, 15, 11, 48, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 454998075, 'comment_body': ""Originally opening a score would add it to `MuseScoreCore::scoreList`. This also opened a new tab for that Score. This is obviously undesired here because if an Album contains 100 Score we don't want 101 tabs for album mode. We also don't want closing a tab to break our Album (because the `AlbumItem` would suddenly have no score). The solution to this is to have 2 different `openScore` functions one for adding the score to the `scoreList` and creating a new tab and one for creating a new `AlbumItem`. `albumItems()` is used to check whether score that is not in the `scoreList` is open in an `albumItem`."", 'comment_created': datetime.datetime(2020, 7, 15, 12, 1, 2, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 455000423, 'comment_body': ""This is used to fix the teleporting `ScoreView` problem. When `layout` is called on a score it deletes and re-adds systems and pages. When `adjustCanvasPosition` is called (while in album-mode) the parent-child relationships of pages-systems-measures might be the ones we are seeing on screen or (if Score::layout has been called for an individual score) the ones that are present if the Score is alone (not part of an album). _albumParent saves the parent system and page when `layout` is called for the Temporary Album Score so that we can consistently get the true position of each element. \r\n\r\nIt's pretty rough and needs some cleaning up."", 'comment_created': datetime.datetime(2020, 7, 15, 12, 5, 39, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 455001051, 'comment_body': ""Hm.... I hadn't thought of that but I believe that I will think of something to deal with it. Duplicates are an easy issue to deal with."", 'comment_created': datetime.datetime(2020, 7, 15, 12, 6, 51, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 455001551, 'comment_body': 'I only ever use `goto` for exiting nested loops. I find it a bit more elegant than adding a new variable and a new condition.', 'comment_created': datetime.datetime(2020, 7, 15, 12, 7, 50, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 455001924, 'comment_body': ':laughing: probably, but I might remove that button.', 'comment_created': datetime.datetime(2020, 7, 15, 12, 8, 33, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 455702055, 'comment_body': 'Why not `qDebug()`', 'comment_created': datetime.datetime(2020, 7, 16, 10, 57, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 457581900, 'comment_body': ""Ok, but why can't it just return a reference to `m_albumItems`? Looking through the full code, I don't see you storing the value returned by this function anywhere, but I may have missed something."", 'comment_created': datetime.datetime(2020, 7, 20, 17, 40, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 460263949, 'comment_body': 'See https://github.com/musescore/MuseScore/pull/6248/commits/bc5bf365ce16f587291d5ebd4cf4e4e85a69e065 for a better fix', 'comment_created': datetime.datetime(2020, 7, 24, 20, 6, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 463163070, 'comment_body': 'This function is not used anymore; in fact, it has been removed. It is not necessary to modify this file. Undoing this change will take care of the merge conflict.', 'comment_created': datetime.datetime(2020, 7, 30, 17, 39, 53, tzinfo=datetime.timezone.utc), 'commenter': 'mattmcclinch', 'type': 'User'}, {'comment_id': 463227312, 'comment_body': 'And since this is the only place `currentScore2()` is called, it seems we no longer have a need for the `cs2` member at all.', 'comment_created': datetime.datetime(2020, 7, 30, 19, 39, 20, tzinfo=datetime.timezone.utc), 'commenter': 'mattmcclinch', 'type': 'User'}, {'comment_id': 463697228, 'comment_body': 'Thank you very much (both for this comment and your PR). `cs2` is indeed unused right now, but I might have a use for it in the future (I am done with refactoring `album.cpp/h` and `albummanager.cpp/h` and I will move on to other classes that I have touched).', 'comment_created': datetime.datetime(2020, 7, 31, 16, 2, 55, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 468468126, 'comment_body': 'static in header but not here', 'comment_created': datetime.datetime(2020, 8, 11, 10, 3, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 468468296, 'comment_body': 'dito', 'comment_created': datetime.datetime(2020, 8, 11, 10, 3, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 468472353, 'comment_body': 'Been that way before too though, just in a different header', 'comment_created': datetime.datetime(2020, 8, 11, 10, 11, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 468500953, 'comment_body': ""This is in accordance with the rules of C++. 'static' can only be specified inside the class definition."", 'comment_created': datetime.datetime(2020, 8, 11, 11, 8, 41, tzinfo=datetime.timezone.utc), 'commenter': 'mattmcclinch', 'type': 'User'}, {'comment_id': 468505159, 'comment_body': ""I'm probably too much of a C person..."", 'comment_created': datetime.datetime(2020, 8, 11, 11, 17, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 469994986, 'comment_body': 'Huh?', 'comment_created': datetime.datetime(2020, 8, 13, 14, 29, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 469997210, 'comment_body': '@mattmcclinch recommended this fix for a build failure that I had with the mtests.', 'comment_created': datetime.datetime(2020, 8, 13, 14, 32, 30, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 469997244, 'comment_body': 'Huh??', 'comment_created': datetime.datetime(2020, 8, 13, 14, 32, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 469999502, 'comment_body': 'Allows me to test private members of the class.', 'comment_created': datetime.datetime(2020, 8, 13, 14, 35, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 470001489, 'comment_body': ""And disabling that didn't help."", 'comment_created': datetime.datetime(2020, 8, 13, 14, 38, 13, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 470005020, 'comment_body': 'This was just a hack to get mtests to compile locally. It was not supposed to be part of the pull request. For some reason, qtquick_compiler_add_resources is not doing the job, so this forces it to fall back to using QT5_ADD_RESOURCES instead. Interestingly enough, however, qtquick_compiler_add_resources seems to work just fine when called from mscore/CMakeLists.txt.', 'comment_created': datetime.datetime(2020, 8, 13, 14, 43, 4, tzinfo=datetime.timezone.utc), 'commenter': 'mattmcclinch', 'type': 'User'}, {'comment_id': 470005700, 'comment_body': ""Yes, of course. I don't plan to include this in the completed pull request. :^)"", 'comment_created': datetime.datetime(2020, 8, 13, 14, 43, 59, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 470006883, 'comment_body': 'It is though, now?', 'comment_created': datetime.datetime(2020, 8, 13, 14, 45, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 470009176, 'comment_body': ""I wouldn't have included it but I have yet to find a way to ignore individual lines."", 'comment_created': datetime.datetime(2020, 8, 13, 14, 48, 43, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 470740993, 'comment_body': 'this empty line causes the formatting check to fail', 'comment_created': datetime.datetime(2020, 8, 14, 16, 53, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 471785661, 'comment_body': ""You can avoid the massive indentation by declaring this lambda expression as a separate function:\r\n\r\n```c++\r\nstatic void excerptCheck(MasterScore* dominant)\r\n{\r\n    for (auto& e : dominant->excerpts()) {\r\n        QCOMPARE(int(e->partScore()->movements()->size()), int(dominant->movements()->size()));\r\n    }\r\n}\r\n```\r\n\r\nDeclaring it `static` means it won't (and can't) be used anywhere except this file, so the compiler is free to inline it and doesn't need to keep track of it for external linkage. In other words, the end result is the same as the lambda expression but the code is neater and Uncrustify doesn't complain.\r\n\r\nIf you go down this route then you should put the static function at the very top of the file because you can't use it before it is declared.\r\n\r\nP.S. You might want to call it `dominantScore` rather than just `dominant` for the sake of people who haven't seen it before."", 'comment_created': datetime.datetime(2020, 8, 17, 21, 29, 37, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 474796290, 'comment_body': ""What? If you want to removed the backup files, remove them compeltely rather than doubling them with the normal ones\r\nThen again this wozld be completly out of score for this Project, wouldn't it? Esp. `*.mscz *.mscx` should rather stay\r\n\r\nThis is not a comma separated list ;-)"", 'comment_created': datetime.datetime(2020, 8, 21, 16, 16, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 474910484, 'comment_body': ""You are very very correct, I got completely confused. I'll fix it."", 'comment_created': datetime.datetime(2020, 8, 21, 19, 50, 45, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 477153038, 'comment_body': ':+1:', 'comment_created': datetime.datetime(2020, 8, 26, 9, 11, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 477157678, 'comment_body': ""This of course assumes that the user hasn't changed the part's name, which may not be a very safe assumption to make..."", 'comment_created': datetime.datetime(2020, 8, 26, 9, 16, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 477158281, 'comment_body': ""I'll try this out and see if I get the same problem ;)"", 'comment_created': datetime.datetime(2020, 8, 26, 9, 17, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 477159138, 'comment_body': 'make this a `qDebug`?', 'comment_created': datetime.datetime(2020, 8, 26, 9, 17, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 477159884, 'comment_body': '@SKefalidis ping :)', 'comment_created': datetime.datetime(2020, 8, 26, 9, 19, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 477160321, 'comment_body': 'Why this magic number? (and others in the vicinity) ', 'comment_created': datetime.datetime(2020, 8, 26, 9, 19, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 477164097, 'comment_body': ""I don't really know how efficient it is to make a copy of `excerpts` and append another load of excerpts to it, but since it's only pointers maybe it's fine."", 'comment_created': datetime.datetime(2020, 8, 26, 9, 26, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 477166181, 'comment_body': 'Why not just:\r\n\r\n```cpp\r\nif (!excerpts().removeOne(ex)) {\r\n    qDebug(""removeExcerpt:: ex not found"");\r\n}\r\n```', 'comment_created': datetime.datetime(2020, 8, 26, 9, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 477170355, 'comment_body': 'I like a bit of humour as much as the next person, but could we remove the `:-(` from the window title, please? :)', 'comment_created': datetime.datetime(2020, 8, 26, 9, 36, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 477171540, 'comment_body': '`// RIGHT HERE`?', 'comment_created': datetime.datetime(2020, 8, 26, 9, 38, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 477177219, 'comment_body': 'Good thinking to add a tour!', 'comment_created': datetime.datetime(2020, 8, 26, 9, 48, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 477182123, 'comment_body': 'or a `std::cerr` at least. But indeed better a `qDebug()`', 'comment_created': datetime.datetime(2020, 8, 26, 9, 56, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 477182925, 'comment_body': ""I'd rather the the style size of a Title text here. Or that size plus some magic number ;-)"", 'comment_created': datetime.datetime(2020, 8, 26, 9, 58, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 477183699, 'comment_body': 'We can have a frownie icon in the msgBox maybe', 'comment_created': datetime.datetime(2020, 8, 26, 9, 59, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 477185452, 'comment_body': 'IIRC `qDebug()` adds the linefeed itself, no `endl` needed. Also causes compiler warnings with Qt 5.15\r\n\r\nHere and throughout your PR', 'comment_created': datetime.datetime(2020, 8, 26, 10, 2, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 477186625, 'comment_body': 'Both strings are not translatable!', 'comment_created': datetime.datetime(2020, 8, 26, 10, 4, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 477187416, 'comment_body': 'I agree, I want to change this. I just could not find (even though I am sure it exists) the instrument id. I think I just found it. The correct way to do this would be to get the instrumentList of the part and compare instrument ids right?', 'comment_created': datetime.datetime(2020, 8, 26, 10, 6, 10, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 477187565, 'comment_body': 'monor nitpick: loose the space between `part` and `:`', 'comment_created': datetime.datetime(2020, 8, 26, 10, 6, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 477187928, 'comment_body': ""I'll delete it, it's useless."", 'comment_created': datetime.datetime(2020, 8, 26, 10, 6, 57, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 477188510, 'comment_body': 'I believe that it would be best to create new styles for the front cover and the contents pages.', 'comment_created': datetime.datetime(2020, 8, 26, 10, 8, 5, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 477189244, 'comment_body': 'Hm... oh right, leftover from when I was working on getting playback to work. Removed.', 'comment_created': datetime.datetime(2020, 8, 26, 10, 9, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 477189423, 'comment_body': ':-)', 'comment_created': datetime.datetime(2020, 8, 26, 10, 9, 53, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 477194031, 'comment_body': ""where are the exits?\r\nI don't like endless loops where the exits are not within sight"", 'comment_created': datetime.datetime(2020, 8, 26, 10, 18, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 477195769, 'comment_body': 'yes, please\r\nBelow too', 'comment_created': datetime.datetime(2020, 8, 26, 10, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 477196581, 'comment_body': 'nitpick: a space too much', 'comment_created': datetime.datetime(2020, 8, 26, 10, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 477198808, 'comment_body': 'Why not remove the code and let git deal with the history?\r\nOr use `if 0`?', 'comment_created': datetime.datetime(2020, 8, 26, 10, 27, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 477199717, 'comment_body': 'I know QtCreator tend to do this, but once is enough.\r\nAnd in this case it should rather stay like before the change', 'comment_created': datetime.datetime(2020, 8, 26, 10, 29, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 477199974, 'comment_body': 'Please add tabstops, good for accessibility', 'comment_created': datetime.datetime(2020, 8, 26, 10, 30, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 477201450, 'comment_body': 'both strings are not translatable!', 'comment_created': datetime.datetime(2020, 8, 26, 10, 33, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 477201718, 'comment_body': 'both strings are not translatable', 'comment_created': datetime.datetime(2020, 8, 26, 10, 33, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 477306755, 'comment_body': 'IIRC this has been resolved differently meanwhile?\r\n\r\nAh, I see, in #6477, not yet merged. Maybe you `git cherry-pick 5919921`  that one meanwhile?', 'comment_created': datetime.datetime(2020, 8, 26, 13, 38, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 477640695, 'comment_body': 'maybe if its hidden 🙃', 'comment_created': datetime.datetime(2020, 8, 26, 22, 56, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 477642290, 'comment_body': ""I'd imagine so, yes. Instrument ids should be constant, whereas user-editable strings... not so much ;) "", 'comment_created': datetime.datetime(2020, 8, 26, 22, 58, 19, tzinfo=datetime.timezone.utc), 'commenter': 'jthistle', 'type': 'User'}, {'comment_id': 478233411, 'comment_body': 'could you change this to `My Album (2.x)`', 'comment_created': datetime.datetime(2020, 8, 27, 8, 5, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 478233450, 'comment_body': 'dito', 'comment_created': datetime.datetime(2020, 8, 27, 8, 5, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 478233604, 'comment_body': 'dito', 'comment_created': datetime.datetime(2020, 8, 27, 8, 5, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 479815319, 'comment_body': ""I don't like them either, but I didn't create this huge endless loop. I could add more comments but I feel like I've commented sufficiently the entire thing."", 'comment_created': datetime.datetime(2020, 8, 30, 21, 2, 45, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 479815920, 'comment_body': ""Hm... I can't remember why I did this. Might have been to not mess with smart pointers outside the scope of this class (since they are not used in many places having the Album return smart pointers looks a bit weird)."", 'comment_created': datetime.datetime(2020, 8, 30, 21, 9, 17, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 479818457, 'comment_body': ""How do I do that? (couldn't find anyhing on the internet)"", 'comment_created': datetime.datetime(2020, 8, 30, 21, 36, 25, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 479818469, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 8, 30, 21, 36, 35, tzinfo=datetime.timezone.utc), 'commenter': 'SKefalidis', 'type': 'User'}, {'comment_id': 479938891, 'comment_body': 'a) by not deleting them in the 1st place\r\nb) by adding them back via QtDesigner, (possible via QtCreator) opening that ui file and going to Edit > Tabstops (or whatever the translation for that might be)', 'comment_created': datetime.datetime(2020, 8, 31, 7, 11, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 481727505, 'comment_body': '???', 'comment_created': datetime.datetime(2020, 9, 2, 5, 33, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 481727631, 'comment_body': '???', 'comment_created': datetime.datetime(2020, 9, 2, 5, 33, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}]","[{'commit_sha': '8a2618fe0d7e3790a63bbfbb424d36700060cc47', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c5317dbbd05122a41c6859449e6b7edb9774024', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fec2ce2faf3326503c2f17669cbb53c4eb89e73f', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70c54f391170f9b8190a4b46d5753cd11d9465e6', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb81b3d6f87ab1d1642dfa4c804943e397adda94', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b77f01521c12aff6dbdadb13578f13c6ca2cae8', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b4e59561bd3e3b169868349b8af5284dbd0ec14', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84fb2ba52befae8343480797d53cb7afad32ae3a', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b9178610c07f364360d7f6e0da8a1b16d1cecbc', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5239802af201155412c09ac8ee597926964ea15', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7a357a7c8c5c0d44397b71dce30608d8f2f59d6', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c73ac7615117b8c54b0ea1c59ea3a5f72585db5', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97bf3d3c09c2e6288e60f186877f917a1210cfe6', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b8f96122b76ab55c6e586cbf617aa8fb8a1c476', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '795975c0a7664142a05f6d225efd499d255ab6f8', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55b98ffceaa2749973dd50e2186dbe53b9a41e64', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4afd0c3d1856a857246336606892df913e6a3088', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14ccf0fbafb9df991115629db21b2a7de148902e', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cb14778842f7d26dadd86573fafeeeee5012930', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4830468a7e501088bd5d86bee4babac58c384cac', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b849f05f40ef5a532cd37c151e8b5bb56055e4a2', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffd606ed1c5b32b7554d34f114385bbc83fc2080', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '061bc0fc84c47f86faad962fd6895d84f20ecafd', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bba733d277488bda9983a7a5afcc69e71553ca0', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '926d28ed03e3e626078f7d4d19421c6e3025a275', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbef0357d1c3900a8720026dda33458d6187fd34', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '236ef30e3bb769aabe6f4f251d9f5967ef8b8867', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77bdef8418bdc437f0b5a77721b85e1f562e24a6', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94b1551c473142022b1aa07ee60519ba25641ba3', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f8de6f59cf83451f653af503abe07275a953e14', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c091e52f709751a7b93ff8a12232335459031a7b', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e74bd7baf97057157c5f4c44e10d3b189f9aa3d5', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4bd9f3c82a7240cd30dd462645599e5108a88a9', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f475a7ceec5de52e3f04bfaeb8d6dabf6234e1bc', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8d8d3e8b71fd644333bf4452a004547253c2ab3', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53de2676616725813a95c63f63e8b28f5515ac1e', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b52a166981f79c3dd58625215cc7b265de7836da', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2344b467f97f2857bd49249f75c6f11e9ba0e047', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34ab37ec38141be64d312f21881a2d9222405da0', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f514ce1ac3a5e115cfc27d62847fbd4eb9dbbe97', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e049f01d7906ac5c45f14639e857e595f2bf7441', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8670a6e88b3a20c35d3c2005891a1fccfcda9e78', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af7188729bd9e6762fb578fdb36caaf026832173', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0d052b495d16dd0e8c014e14286000bf3dcf5f4', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bc09911b60c152f877982961b658f6d9dd1366a', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63b014ff0cd42e68fef96aab10e71e8b766009f3', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08cf170013a897259c785eeaffba881c2a43955e', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77685c490fa35ae17c971a349376e0704269e172', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1459521080a602c9d577641bdd50ab4b7c7207ea', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '013e4a22c0ea15061864dac939844e3c673aae3b', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fae8629edbb4a04d3fd6697e2b9a858e667885a', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebba1df9462d9a0469295e1f7e08810a56c67eef', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0a846451e1d385f694c3a688ba7ce135bb83d95', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54debad99934d0676a0b3a408c3b3d2b675069fc', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64e098c3c99a692c337c0fddd40ff634f35d9cea', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a05400e7c050481ae5772b0e139677951ded4c4', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c9edffd9ef26dcdb4d96e55b8cb012a197d6ad8', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79c2d5ee5e45d8c34d2eef8ba95a5a73709d6dd2', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6488d88fa770965571157dac6a3e68b3781cdae1', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a7f767fe092b2cbcd71e7c40a65309ba33be610', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f96cbec4a2418b9fae47f4e1826d4e4b5caa032', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b0524cb7c0ab8d58aa91643a96c5c906945ed07', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cea65396e26a9cc3e669f2c13ac77d6a09b6019', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd18a6cd335c6e1b133e50acb309c6ba66bbeb432', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf5db99ce46692764bd8598a1831ed3f74de59a2', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e6ec9bae784dd7fc69dc0fd78fcc4b168d0131e', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98efe2bca61105a374be42b0f376269d478ae142', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cff3e3f67b2100dc77581040df1634ae5b7fbff7', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e49d71a3df2c0d9b02012b1da3f52c45a3407d14', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41c9de38a5439e7efcda7123d2751c173f2060a5', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6390f106b597e171fcb4ad8b91c86b0c18a16b2e', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7087861eaf9d71fea1c275470f3bfe1531b88f6f', 'committer_username': 'SKefalidis', 'committer_name': 'Sergios - Anestis Kefalidis', 'committer_email': 'sergioskefalidis@gmail.com', 'commit_date': datetime.datetime(2016, 8, 16, 13, 23, 26, tzinfo=datetime.timezone.utc)}]",Sergios - Anestis Kefalidis,21060365,sergioskefalidis@gmail.com,User,,20,,4,35

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
4454793,MuseScore,musescore/MuseScore,C++,2585,11994,240,428,37297,2736,111,134,"[{'id': 610913108, 'number': 7910, 'closed': datetime.datetime(2021, 9, 5, 7, 37, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 7, 18, 39, 47, tzinfo=datetime.timezone.utc), 'time_taken': 13006679.0, 'time_delta': '150 days, 12:57:59', 'additions': 326, 'deletions': 9, 'state': 'closed'}, {'id': 586337140, 'number': 7703, 'closed': datetime.datetime(2021, 3, 9, 22, 40, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 7, 22, 5, 16, tzinfo=datetime.timezone.utc), 'time_taken': 174909.0, 'time_delta': '2 days, 0:35:09', 'additions': 7, 'deletions': 3, 'state': 'closed'}, {'id': 574806808, 'number': 7546, 'closed': datetime.datetime(2021, 3, 4, 11, 8, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 17, 10, 26, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1298552.0, 'time_delta': '15 days, 0:42:32', 'additions': 5, 'deletions': 4, 'state': 'closed'}, {'id': 543117406, 'number': 7127, 'closed': datetime.datetime(2020, 12, 27, 23, 46, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 20, 19, 26, 23, tzinfo=datetime.timezone.utc), 'time_taken': 620426.0, 'time_delta': '7 days, 4:20:26', 'additions': 155, 'deletions': 51, 'state': 'closed'}, {'id': 477324982, 'number': 6523, 'closed': datetime.datetime(2020, 10, 5, 17, 21, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 1, 20, 45, 54, tzinfo=datetime.timezone.utc), 'time_taken': 2925329.0, 'time_delta': '33 days, 20:35:29', 'additions': 25, 'deletions': 32, 'state': 'closed'}, {'id': 467882746, 'number': 6453, 'closed': datetime.datetime(2020, 8, 26, 23, 11, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 14, 9, 37, 27, tzinfo=datetime.timezone.utc), 'time_taken': 1085621.0, 'time_delta': '12 days, 13:33:41', 'additions': 56, 'deletions': 5, 'state': 'closed'}, {'id': 467824305, 'number': 6451, 'closed': datetime.datetime(2021, 1, 18, 17, 34, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 14, 7, 35, 33, tzinfo=datetime.timezone.utc), 'time_taken': 13600745.0, 'time_delta': '157 days, 9:59:05', 'additions': 9, 'deletions': 12, 'state': 'closed'}, {'id': 467820954, 'number': 6450, 'closed': datetime.datetime(2020, 9, 1, 19, 4, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 14, 7, 27, 45, tzinfo=datetime.timezone.utc), 'time_taken': 1597030.0, 'time_delta': '18 days, 11:37:10', 'additions': 9, 'deletions': 12, 'state': 'closed'}, {'id': 465026123, 'number': 6424, 'closed': datetime.datetime(2021, 1, 18, 17, 37, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 8, 12, 26, 10, tzinfo=datetime.timezone.utc), 'time_taken': 14101880.0, 'time_delta': '163 days, 5:11:20', 'additions': 58, 'deletions': 5, 'state': 'closed'}, {'id': 465023126, 'number': 6423, 'closed': datetime.datetime(2021, 1, 18, 21, 58, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 8, 11, 52, 2, tzinfo=datetime.timezone.utc), 'time_taken': 14119585.0, 'time_delta': '163 days, 10:06:25', 'additions': 30, 'deletions': 37, 'state': 'closed'}, {'id': 447661826, 'number': 6328, 'closed': datetime.datetime(2020, 7, 14, 20, 57, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 10, 22, 1, 27, tzinfo=datetime.timezone.utc), 'time_taken': 341739.0, 'time_delta': '3 days, 22:55:39', 'additions': 64, 'deletions': 10, 'state': 'closed'}, {'id': 444266079, 'number': 6287, 'closed': datetime.datetime(2020, 8, 14, 10, 10, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 4, 10, 7, 56, tzinfo=datetime.timezone.utc), 'time_taken': 3542543.0, 'time_delta': '41 days, 0:02:23', 'additions': 18, 'deletions': 2, 'state': 'closed'}, {'id': 444265593, 'number': 6286, 'closed': datetime.datetime(2020, 7, 28, 8, 2, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 4, 10, 2, 38, tzinfo=datetime.timezone.utc), 'time_taken': 2066383.0, 'time_delta': '23 days, 21:59:43', 'additions': 18, 'deletions': 2, 'state': 'closed'}, {'id': 432388445, 'number': 6198, 'closed': datetime.datetime(2020, 6, 10, 11, 25, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 10, 11, 21, 42, tzinfo=datetime.timezone.utc), 'time_taken': 248.0, 'time_delta': '0:04:08', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 432359808, 'number': 6196, 'closed': datetime.datetime(2020, 8, 3, 13, 0, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 10, 10, 26, 34, tzinfo=datetime.timezone.utc), 'time_taken': 4674854.0, 'time_delta': '54 days, 2:34:14', 'additions': 1581, 'deletions': 567, 'state': 'closed'}, {'id': 432242142, 'number': 6193, 'closed': datetime.datetime(2020, 6, 10, 6, 57, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 10, 6, 54, 34, tzinfo=datetime.timezone.utc), 'time_taken': 195.0, 'time_delta': '0:03:15', 'additions': 56, 'deletions': 19, 'state': 'closed'}, {'id': 432097934, 'number': 6192, 'closed': datetime.datetime(2020, 6, 10, 5, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 9, 22, 27, 6, tzinfo=datetime.timezone.utc), 'time_taken': 26094.0, 'time_delta': '7:14:54', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 432094354, 'number': 6191, 'closed': datetime.datetime(2020, 8, 3, 12, 59, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 9, 22, 17, 22, tzinfo=datetime.timezone.utc), 'time_taken': 4718535.0, 'time_delta': '54 days, 14:42:15', 'additions': 53, 'deletions': 16, 'state': 'closed'}, {'id': 425014747, 'number': 6145, 'closed': datetime.datetime(2022, 12, 20, 10, 27, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 29, 10, 15, 24, tzinfo=datetime.timezone.utc), 'time_taken': 80784740.0, 'time_delta': '935 days, 0:12:20', 'additions': 9093, 'deletions': 711, 'state': 'closed'}, {'id': 414650119, 'number': 6053, 'closed': datetime.datetime(2020, 5, 7, 13, 13, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 7, 12, 19, 52, tzinfo=datetime.timezone.utc), 'time_taken': 3195.0, 'time_delta': '0:53:15', 'additions': 36, 'deletions': 0, 'state': 'closed'}, {'id': 412432418, 'number': 6021, 'closed': datetime.datetime(2021, 4, 30, 21, 13, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 2, 10, 34, 38, tzinfo=datetime.timezone.utc), 'time_taken': 31401525.0, 'time_delta': '363 days, 10:38:45', 'additions': 31, 'deletions': 9, 'state': 'closed'}, {'id': 410360505, 'number': 6007, 'closed': datetime.datetime(2020, 4, 29, 7, 10, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 28, 21, 4, 21, tzinfo=datetime.timezone.utc), 'time_taken': 36367.0, 'time_delta': '10:06:07', 'additions': 0, 'deletions': 3, 'state': 'closed'}, {'id': 410344022, 'number': 6005, 'closed': datetime.datetime(2020, 5, 2, 22, 48, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 28, 20, 28, 41, tzinfo=datetime.timezone.utc), 'time_taken': 353971.0, 'time_delta': '4 days, 2:19:31', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 409494685, 'number': 5997, 'closed': datetime.datetime(2020, 4, 27, 15, 31, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 27, 13, 17, 13, tzinfo=datetime.timezone.utc), 'time_taken': 8063.0, 'time_delta': '2:14:23', 'additions': 45, 'deletions': 44, 'state': 'closed'}, {'id': 407108055, 'number': 5978, 'closed': datetime.datetime(2020, 4, 22, 8, 40, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 22, 7, 43, 55, tzinfo=datetime.timezone.utc), 'time_taken': 3415.0, 'time_delta': '0:56:55', 'additions': 33, 'deletions': 12, 'state': 'closed'}, {'id': 405490255, 'number': 5967, 'closed': datetime.datetime(2020, 6, 6, 20, 49, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 18, 12, 10, 59, tzinfo=datetime.timezone.utc), 'time_taken': 4264715.0, 'time_delta': '49 days, 8:38:35', 'additions': 19, 'deletions': 2, 'state': 'closed'}, {'id': 402882495, 'number': 5935, 'closed': datetime.datetime(2021, 2, 5, 9, 37, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 13, 23, 3, 46, tzinfo=datetime.timezone.utc), 'time_taken': 25698800.0, 'time_delta': '297 days, 10:33:20', 'additions': 114, 'deletions': 34, 'state': 'closed'}, {'id': 402567696, 'number': 5930, 'closed': datetime.datetime(2020, 4, 14, 12, 48, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 13, 9, 47, 53, tzinfo=datetime.timezone.utc), 'time_taken': 97250.0, 'time_delta': '1 day, 3:00:50', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 401854165, 'number': 5922, 'closed': datetime.datetime(2020, 6, 9, 13, 20, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 10, 10, 28, 8, tzinfo=datetime.timezone.utc), 'time_taken': 5194332.0, 'time_delta': '60 days, 2:52:12', 'additions': 1491, 'deletions': 558, 'state': 'closed'}, {'id': 401616449, 'number': 5919, 'closed': datetime.datetime(2020, 4, 20, 12, 46, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 9, 19, 59, 17, tzinfo=datetime.timezone.utc), 'time_taken': 924462.0, 'time_delta': '10 days, 16:47:42', 'additions': 10, 'deletions': 0, 'state': 'closed'}, {'id': 400538134, 'number': 5910, 'closed': datetime.datetime(2020, 4, 9, 20, 47, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 7, 22, 44, 28, tzinfo=datetime.timezone.utc), 'time_taken': 165784.0, 'time_delta': '1 day, 22:03:04', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 399244443, 'number': 5902, 'closed': datetime.datetime(2022, 12, 20, 8, 39, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 5, 21, 8, 6, tzinfo=datetime.timezone.utc), 'time_taken': 85404703.0, 'time_delta': '988 days, 11:31:43', 'additions': 37, 'deletions': 5, 'state': 'closed'}, {'id': 398627956, 'number': 5898, 'closed': datetime.datetime(2020, 4, 29, 12, 5, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 4, 15, 49, 34, tzinfo=datetime.timezone.utc), 'time_taken': 2146556.0, 'time_delta': '24 days, 20:15:56', 'additions': 276, 'deletions': 13, 'state': 'closed'}, {'id': 395279649, 'number': 5887, 'closed': datetime.datetime(2020, 4, 29, 12, 16, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 29, 16, 29, 53, tzinfo=datetime.timezone.utc), 'time_taken': 2663180.0, 'time_delta': '30 days, 19:46:20', 'additions': 63, 'deletions': 23, 'state': 'closed'}, {'id': 395224666, 'number': 5886, 'closed': datetime.datetime(2020, 4, 28, 12, 13, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 29, 9, 43, 3, tzinfo=datetime.timezone.utc), 'time_taken': 2601018.0, 'time_delta': '30 days, 2:30:18', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 395117128, 'number': 5885, 'closed': datetime.datetime(2020, 3, 29, 17, 58, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 28, 16, 15, 51, tzinfo=datetime.timezone.utc), 'time_taken': 92547.0, 'time_delta': '1 day, 1:42:27', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 395111063, 'number': 5884, 'closed': datetime.datetime(2020, 4, 21, 19, 56, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 28, 15, 28, 34, tzinfo=datetime.timezone.utc), 'time_taken': 2089701.0, 'time_delta': '24 days, 4:28:21', 'additions': 21, 'deletions': 13, 'state': 'closed'}, {'id': 394922351, 'number': 5882, 'closed': datetime.datetime(2021, 3, 7, 14, 21, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 27, 19, 2, tzinfo=datetime.timezone.utc), 'time_taken': 29791174.0, 'time_delta': '344 days, 19:19:34', 'additions': 8, 'deletions': 3, 'state': 'closed'}, {'id': 394921147, 'number': 5881, 'closed': datetime.datetime(2020, 4, 20, 12, 36, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 27, 18, 59, 4, tzinfo=datetime.timezone.utc), 'time_taken': 2050672.0, 'time_delta': '23 days, 17:37:52', 'additions': 13, 'deletions': 0, 'state': 'closed'}, {'id': 394626529, 'number': 5875, 'closed': datetime.datetime(2020, 4, 21, 13, 4, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 27, 8, 49, 1, tzinfo=datetime.timezone.utc), 'time_taken': 2175335.0, 'time_delta': '25 days, 4:15:35', 'additions': 14, 'deletions': 2, 'state': 'closed'}, {'id': 394076704, 'number': 5873, 'closed': datetime.datetime(2020, 3, 27, 8, 31, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 26, 10, 18, 15, tzinfo=datetime.timezone.utc), 'time_taken': 80003.0, 'time_delta': '22:13:23', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 393855720, 'number': 5870, 'closed': datetime.datetime(2020, 4, 21, 13, 12, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 25, 22, 18, 36, tzinfo=datetime.timezone.utc), 'time_taken': 2300012.0, 'time_delta': '26 days, 14:53:32', 'additions': 15, 'deletions': 7, 'state': 'closed'}, {'id': 393511252, 'number': 5868, 'closed': datetime.datetime(2020, 12, 31, 0, 5, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 25, 10, 40, 47, tzinfo=datetime.timezone.utc), 'time_taken': 24240298.0, 'time_delta': '280 days, 13:24:58', 'additions': 371, 'deletions': 195, 'state': 'closed'}, {'id': 391840574, 'number': 5855, 'closed': datetime.datetime(2020, 3, 24, 7, 31, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 21, 10, 15, 50, tzinfo=datetime.timezone.utc), 'time_taken': 249331.0, 'time_delta': '2 days, 21:15:31', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 391567151, 'number': 5848, 'closed': datetime.datetime(2020, 3, 20, 20, 13, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 20, 14, 38, 45, tzinfo=datetime.timezone.utc), 'time_taken': 20097.0, 'time_delta': '5:34:57', 'additions': 17, 'deletions': 7, 'state': 'closed'}, {'id': 391424141, 'number': 5845, 'closed': datetime.datetime(2021, 6, 22, 7, 42, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 20, 9, 12, 17, tzinfo=datetime.timezone.utc), 'time_taken': 39652211.0, 'time_delta': '458 days, 22:30:11', 'additions': 7, 'deletions': 2, 'state': 'closed'}, {'id': 391282313, 'number': 5843, 'closed': datetime.datetime(2020, 4, 14, 7, 4, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 19, 23, 20, 56, tzinfo=datetime.timezone.utc), 'time_taken': 2187809.0, 'time_delta': '25 days, 7:43:29', 'additions': 100, 'deletions': 30, 'state': 'closed'}, {'id': 391199343, 'number': 5842, 'closed': datetime.datetime(2021, 1, 18, 18, 55, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 19, 19, 39, 3, tzinfo=datetime.timezone.utc), 'time_taken': 26349404.0, 'time_delta': '304 days, 23:16:44', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 391193825, 'number': 5841, 'closed': datetime.datetime(2020, 4, 20, 12, 36, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 19, 19, 26, 4, tzinfo=datetime.timezone.utc), 'time_taken': 2740218.0, 'time_delta': '31 days, 17:10:18', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 390683306, 'number': 5834, 'closed': datetime.datetime(2020, 4, 20, 12, 35, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 18, 21, 51, 22, tzinfo=datetime.timezone.utc), 'time_taken': 2817861.0, 'time_delta': '32 days, 14:44:21', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 390139434, 'number': 5827, 'closed': datetime.datetime(2021, 6, 22, 7, 46, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 17, 23, 59, 51, tzinfo=datetime.timezone.utc), 'time_taken': 39858379.0, 'time_delta': '461 days, 7:46:19', 'additions': 14, 'deletions': 12, 'state': 'closed'}, {'id': 388368610, 'number': 5816, 'closed': datetime.datetime(2021, 9, 5, 7, 36, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 14, 17, 7, 9, tzinfo=datetime.timezone.utc), 'time_taken': 46621772.0, 'time_delta': '539 days, 14:29:32', 'additions': 246, 'deletions': 175, 'state': 'closed'}, {'id': 387418945, 'number': 5805, 'closed': datetime.datetime(2021, 9, 5, 7, 36, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 12, 18, 55, 16, tzinfo=datetime.timezone.utc), 'time_taken': 46788100.0, 'time_delta': '541 days, 12:41:40', 'additions': 45, 'deletions': 13, 'state': 'closed'}]"
