pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
596339839,Add exponential distribution to random API,,True,4915,https://api.github.com/repos/cupy/cupy/pulls/4915,https://github.com/cupy/cupy/pull/4915,closed,45,0,2,6,7,10,3,1,"[{'name': 'cat:feature'}, {'name': 'st:test-and-merge'}, {'name': 'prio:medium'}]",2021-03-19 09:01:26+00:00,2021-03-20 17:13:16+00:00,115910.0,"1 day, 8:11:50","[{'comment_id': 597513583, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 3, 19, 9, 10, 35, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}, {'comment_id': 597513718, 'comment_body': '```suggestion\r\n    @_condition.repeat_with_success_at_least(10, 3)\r\n```', 'comment_created': datetime.datetime(2021, 3, 19, 9, 10, 50, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}, {'comment_id': 597514371, 'comment_body': 'Exponential seems not to have dtype\r\nhttps://numpy.org/doc/stable/reference/random/generated/numpy.random.Generator.exponential.html\r\n\r\nhttps://github.com/numpy/numpy/blob/60cd9d717524e5a003bee9e4270b9c6b8144a7af/numpy/random/_generator.pyx#L337', 'comment_created': datetime.datetime(2021, 3, 19, 9, 11, 57, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}, {'comment_id': 597515261, 'comment_body': 'This is because and old master branch, it was renamed recently', 'comment_created': datetime.datetime(2021, 3, 19, 9, 13, 30, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}, {'comment_id': 597557764, 'comment_body': 'I added this because currently beta distribution is having dtype in\r\nhttps://github.com/cupy/cupy/blob/master/cupy/random/_generator_api.pyx#L145-L146\r\nbut not in \r\nhttps://github.com/numpy/numpy/blob/60cd9d717524e5a003bee9e4270b9c6b8144a7af/numpy/random/_generator.pyx#L294\r\n\r\nShould we remove that also?\r\n ', 'comment_created': datetime.datetime(2021, 3, 19, 10, 19, 5, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 597559523, 'comment_body': 'yes, that is my mistake ðŸ˜‚\r\nlets do it in another pr', 'comment_created': datetime.datetime(2021, 3, 19, 10, 21, 51, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}, {'comment_id': 597563785, 'comment_body': 'So for exponential, I am changing it in this pr. And for beta will make another.', 'comment_created': datetime.datetime(2021, 3, 19, 10, 28, 32, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 597791320, 'comment_body': '```\r\nWarning, treated as error:\r\ndocstring of cupy.random._generator_api.Generator.exponential:7:Explicit markup ends without a blank line; unexpected unindent.\r\n```\r\nSeems we need to add a blank line here', 'comment_created': datetime.datetime(2021, 3, 19, 15, 54, 42, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}, {'comment_id': 597885218, 'comment_body': 'I think this was due to line 184 as proper space was not there.', 'comment_created': datetime.datetime(2021, 3, 19, 18, 13, 21, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 598054119, 'comment_body': '```suggestion\r\n@testing.parameterize(\r\n```', 'comment_created': datetime.datetime(2021, 3, 20, 3, 17, 40, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}]","[{'commit_sha': 'db8fa2dda63ae746964032ac2bcd851a8ddfcea9', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0794fbdb1eb33460a1f998c4e027143f7b0a067', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8531ea77d6434d3fdedf3f095e7f21e7b3dda6bb', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12a6ce2766ef8eea55235f90bd3b967fba8cea44', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59719ea61b5a0a137842b90c8cd5e1c869b6f2fb', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c03ae08fb06f9d8a6a4ad40c3d5b090a99eb16f', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}]",Praveen Sahu,43993374,povinsahu@gmail.com,User,,27,,22,9
599641281,Add cupyx.scipy.sparse.kronsum(),Implemented kronsum method to calculate kronecker sum of sparse matrices.,True,4968,https://api.github.com/repos/cupy/cupy/pulls/4968,https://github.com/cupy/cupy/pull/4968,closed,89,16,4,9,7,10,2,1,"[{'name': 'cat:feature'}, {'name': 'prio:medium'}]",2021-03-24 12:19:00+00:00,2021-04-06 07:24:53+00:00,1105553.0,"12 days, 19:05:53","[{'comment_id': 605859058, 'comment_body': ""Nitpick: Aren't both L and R already in the target format? We fixed it in #4536.\r\n```suggestion\r\n    return L + R\r\n```"", 'comment_created': datetime.datetime(2021, 4, 1, 18, 21, 54, tzinfo=datetime.timezone.utc), 'commenter': 'leofang', 'type': 'User'}, {'comment_id': 605863543, 'comment_body': '```suggestion\r\n    Kronecker sum is the sum of two Kronecker products\r\n    ``kron(I_n, A) + kron(B, I_m)``, where ``I_n`` and ``I_m`` are identity matrices.\r\n```', 'comment_created': datetime.datetime(2021, 4, 1, 18, 29, 33, tzinfo=datetime.timezone.utc), 'commenter': 'leofang', 'type': 'User'}, {'comment_id': 606892836, 'comment_body': 'Sorry, one last nit: For both safety and clarity, could you rename `arrs` here to, say, `_arrs_kronsum`, and `arrs` in line 383 etc (for `TestKron`) to `_arrs_kron`? I made a bad choice when I added `TestKron`... Thanks.', 'comment_created': datetime.datetime(2021, 4, 5, 2, 41, 9, tzinfo=datetime.timezone.utc), 'commenter': 'leofang', 'type': 'User'}, {'comment_id': 606954134, 'comment_body': 'Maybe we need this to fix flake8?\r\n```suggestion\r\n_arrs_kron = [\r\n        [[0]],\r\n```', 'comment_created': datetime.datetime(2021, 4, 5, 7, 11, tzinfo=datetime.timezone.utc), 'commenter': 'leofang', 'type': 'User'}, {'comment_id': 606954220, 'comment_body': 'ditto\r\n```suggestion\r\n_arrs_kronsum = [\r\n        [[0]],\r\n```', 'comment_created': datetime.datetime(2021, 4, 5, 7, 11, 17, tzinfo=datetime.timezone.utc), 'commenter': 'leofang', 'type': 'User'}, {'comment_id': 606980578, 'comment_body': '```suggestion\r\n        [[5, 4, 4], [1, 0, 0], [6, 0, 8]]\r\n        ]\r\n```\r\nIf doing this will fix the error? ', 'comment_created': datetime.datetime(2021, 4, 5, 8, 25, 55, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 607095731, 'comment_body': 'It looks to be an indentation issue, not an issue with the closing bracket. You can have a look at the `autopep8` error. ', 'comment_created': datetime.datetime(2021, 4, 5, 13, 45, tzinfo=datetime.timezone.utc), 'commenter': 'UmashankarTriforce', 'type': 'User'}, {'comment_id': 607103196, 'comment_body': ""That's right. Unfortunately autopep8 seems to have a stricter requirement on the multi line indentation that flake8 does. Just apply the suggestion given by autopep8 and it should be happy."", 'comment_created': datetime.datetime(2021, 4, 5, 13, 59, 30, tzinfo=datetime.timezone.utc), 'commenter': 'leofang', 'type': 'User'}, {'comment_id': 607491934, 'comment_body': 'This change is causing Jenkins failure. After reverting this change, all test works fine.', 'comment_created': datetime.datetime(2021, 4, 6, 4, 25, 54, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 607494238, 'comment_body': ""I wonder why...Anyway, let's revert it. Thanks!"", 'comment_created': datetime.datetime(2021, 4, 6, 4, 34, 50, tzinfo=datetime.timezone.utc), 'commenter': 'leofang', 'type': 'User'}]","[{'commit_sha': '252f79dafcf3a7195c23e91e8227cf54df64e5d1', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a5adb5f59e50fafcbda376cd7b1ad3dfacf7641', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c632c093a75cfb85018a040756881eb1e54cd87c', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8730b6f87e2d1f3041da298b7f2d239055e0989', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e85ab99c1ab64389dca518e54a06d2bcfc763d8', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7795812a951f271990b1ccd28c766dc97e91150b', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f66132a15a7fe2c39d9e125a26ba1819e2847caa', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9857487caa40528a40f9b831a8e975d1068f0071', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c304e39f588800df3bfa828c5acc0543ba7fe44', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}]",Praveen Sahu,43993374,povinsahu@gmail.com,User,,27,,22,9
658224933,"Add reshape method for COO, CSR and CSC matrices",This PR adds reshape method.,True,5301,https://api.github.com/repos/cupy/cupy/pulls/5301,https://github.com/cupy/cupy/pull/5301,closed,159,6,8,6,4,9,3,1,"[{'name': 'cat:feature'}, {'name': 'st:test-and-merge'}, {'name': 'prio:medium'}]",2021-05-31 11:05:15+00:00,2021-06-03 05:22:58+00:00,238663.0,"2 days, 18:17:43","[{'comment_id': 642515424, 'comment_body': 'You can see the document built from this pull request [here](https://cupy--5301.org.readthedocs.build/en/5301/). It seems you need an additional blank line before `Args:` part; otherwise the description about `shape` is wrongly rendered:\r\n\r\n```suggestion\r\n\r\n        Args:\r\n```', 'comment_created': datetime.datetime(2021, 5, 31, 14, 7, 20, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 642522772, 'comment_body': '```suggestion\r\n        raise TypeError(""function missing 1 required positional argument: ""\r\n```', 'comment_created': datetime.datetime(2021, 5, 31, 14, 19, 13, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 642527872, 'comment_body': '`current_shape` is a small length-2 tuple. Computing it on host with numpy is far more efficient than doing the same on GPU.', 'comment_created': datetime.datetime(2021, 5, 31, 14, 27, 3, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 642528943, 'comment_body': 'Same as `current_shape`. Handling `new_shape` on host is more efficient than on GPU. You can use NumPy here (and the following lines).', 'comment_created': datetime.datetime(2021, 5, 31, 14, 28, 45, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 643631674, 'comment_body': ""With your fix, the line computes `current_size` on the host. You can simply write as below (almost the same with SciPy's):\r\n```suggestion\r\n        current_size = numpy.prod(current_shape)\r\n```\r\n\r\nNote:\r\n`cupy.prod(numpy.asarray(current_shape))` happens to call `numpy.ndarray.prod` [here](https://github.com/cupy/cupy/blob/30934f0b7a9ece99d631302316a8fba33b1805c3/cupy/_math/sumprod.py#L70), but I don't think it is a desired way to pass it a `numpy.ndarray` and `a` should be checked `cupy.ndarray` as commented there."", 'comment_created': datetime.datetime(2021, 6, 2, 3, 48, 51, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 643631820, 'comment_body': 'ditto.\r\n```suggestion\r\n            new_size = numpy.prod(new_shape)\r\n```', 'comment_created': datetime.datetime(2021, 6, 2, 3, 49, 22, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 643631984, 'comment_body': '```suggestion\r\n            specified = numpy.prod(new_shape[0:skip] + new_shape[skip+1:])\r\n```', 'comment_created': datetime.datetime(2021, 6, 2, 3, 49, 58, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 643636513, 'comment_body': ""Would you change the parameter name to `shape` to get along with `cupy.ndarray.reshape`? I know SciPy has the name `args` and overwrites it by docstring on the documentation. It is an exceptional case.\r\n```suggestion\r\n    def reshape(self, *shape, order='C'):\r\n```"", 'comment_created': datetime.datetime(2021, 6, 2, 4, 5, 32, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 643856231, 'comment_body': 'Yeah you are right. I missed this part.:confused:', 'comment_created': datetime.datetime(2021, 6, 2, 11, 9, 49, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}]","[{'commit_sha': 'f2219bcec02e169f7ba8f1e6aa02c034d3c9d59e', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a39f7cb1b3edca334aba08406897c5b7f9f1200', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe5ff9a61995c7b70b5fcc08cfba513af45f9f54', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8a2b4f44588fd1b764db197d9b03aad7d8462ef', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1504ad6812b6344bc3e0648734248e8dfeff150', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91524359dda560025b1bef78e995c60a853c478b', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}]",Praveen Sahu,43993374,povinsahu@gmail.com,User,,27,,22,9
665573786,Add cupyx.scipy.sparse.linalg.lsmr,This PR add `cupyx.sparse.linalg.lsmr`.,True,5331,https://api.github.com/repos/cupy/cupy/pulls/5331,https://github.com/cupy/cupy/pull/5331,closed,410,0,4,11,17,20,3,1,"[{'name': 'cat:feature'}, {'name': 'st:test-and-merge'}, {'name': 'prio:medium'}]",2021-06-09 05:52:27+00:00,2021-07-29 06:51:25+00:00,4323538.0,"50 days, 0:58:58","[{'comment_id': 649668035, 'comment_body': 'Missing `self.damp`?', 'comment_created': datetime.datetime(2021, 6, 11, 3, 45, 28, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 649669287, 'comment_body': ""Now we don't need to use `@testing.gpu` as it was originally introduced when CuPy was a part of Chainer, and does not make any use in CuPy. (Recent [change](https://github.com/cupy/cupy/wiki/Development-policies/_compare/caddfd6f010b3c93a90dd8820db9c0b7426cd86e...072ee9bf3da3d15119f4620b67cbb5aae03eaa18) in our development policy )"", 'comment_created': datetime.datetime(2021, 6, 11, 3, 50, 3, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 649688847, 'comment_body': 'Would you test each matrix format: `csr`, `csc`, `coo`?', 'comment_created': datetime.datetime(2021, 6, 11, 4, 53, 11, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 649717986, 'comment_body': 'Ah forgot to change this. I added this while testing something.', 'comment_created': datetime.datetime(2021, 6, 11, 6, 18, 2, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 649718150, 'comment_body': ""Okay, I'll add matrix format to test."", 'comment_created': datetime.datetime(2021, 6, 11, 6, 18, 25, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 649789451, 'comment_body': 'Would you use in-place oparators, i.g. `*=`, where we can? In-place operators on ndarray invoke in-place kernels and overwrite the contents of the left-hand side ndarray instance. On the other hand, Binary operators, i.g. `*`, on ndarray make a new ndarray instance for the result and allocate GPU memory from the memory pool.', 'comment_created': datetime.datetime(2021, 6, 11, 8, 24, 27, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 653135290, 'comment_body': 'It seems most of `lsmr` call finish with `istop=7` because of the small matrix size, where `maxiter=min([m,n])`. Would you explicitly give it a larger `maxiter`?', 'comment_created': datetime.datetime(2021, 6, 17, 0, 12, 17, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 653226591, 'comment_body': 'I think we should make `maxiter = min([m,n]) * some_constant` similar to what we have for `cg` and `gmres`.', 'comment_created': datetime.datetime(2021, 6, 17, 5, 1, 44, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 668955280, 'comment_body': 'This breaks the contents of `b` during the iterations. Would you assign a copy of `b` here?', 'comment_created': datetime.datetime(2021, 7, 13, 17, 5, 43, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 672073212, 'comment_body': 'b was only used to get beta only single time and after that, there is no use of b. So I think this works well.', 'comment_created': datetime.datetime(2021, 7, 19, 7, 59, 27, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 672139128, 'comment_body': 'Now `u` refers to the same object with `b`, so when the contents of `u` is changed, that of `b` is also.', 'comment_created': datetime.datetime(2021, 7, 19, 9, 28, 35, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 672270193, 'comment_body': 'The contents of `u` is changed here: https://github.com/cupy/cupy/blob/405fe1a67a67b37e0d62acaaa84ca18b1a4e5332/cupyx/scipy/sparse/linalg/_solve.py#L170', 'comment_created': datetime.datetime(2021, 7, 19, 12, 53, 57, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 672571990, 'comment_body': 'I think as there is no use of b(except for beta which is calculated before modifying u) so making a copy of it would be needless. ', 'comment_created': datetime.datetime(2021, 7, 19, 19, 29, 17, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 672741486, 'comment_body': ""`b` and `n` share the same ndarray, so modifying `u` also changes the contents of `b`. Please check if the following assertion passes.\r\n\r\n```Python\r\nimport numpy as np\r\nimport scipy.sparse\r\nimport cupy as cp\r\nfrom cupy import testing\r\nfrom cupyx.scipy.sparse import csr_matrix\r\nfrom cupyx.scipy.sparse.linalg import lsmr\r\n\r\nm = 1000\r\na = scipy.sparse.random(m, m, density=0.001)\r\nb = np.random.rand(m)\r\na = csr_matrix(a)\r\nb = cp.array(b)\r\nb0 = b.copy()\r\nlsmr(a,b)\r\ntesting.assert_array_equal(b, b0)\r\nprint('pass')\r\n```"", 'comment_created': datetime.datetime(2021, 7, 20, 1, 26, 15, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 673113336, 'comment_body': 'Ok, now I got it. ', 'comment_created': datetime.datetime(2021, 7, 20, 13, 17, 51, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 673629838, 'comment_body': 'Would you make the detail of `istop` description a literal block?\r\n```suggestion\r\n            - `istop` (int): istop gives the reason for stopping::\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 3, 14, 54, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 673630866, 'comment_body': 'How about letting it accept `x0` for the initial guess?', 'comment_created': datetime.datetime(2021, 7, 21, 3, 18, 23, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 673656184, 'comment_body': 'Yeah, I will add it.', 'comment_created': datetime.datetime(2021, 7, 21, 4, 43, 1, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 678033344, 'comment_body': ""You compare each element of the tuples that SciPy's and CuPy's`lsmr` return, causing the CI to fail because of a larger error in some values in the tuples. I think comparing the least-square solution returned is enough.\r\n\r\n```suggestion\r\n        return self._test_lsmr(xp, sp, a)[0]\r\n```"", 'comment_created': datetime.datetime(2021, 7, 28, 7, 9, 37, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 678033606, 'comment_body': 'Ditto.\r\n\r\n```suggestion\r\n        return self._test_lsmr(xp, sp, a)[0]\r\n```', 'comment_created': datetime.datetime(2021, 7, 28, 7, 10, 6, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}]","[{'commit_sha': '9b9de4f2dc92739a9148093e510aa6c4b5fd6325', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3ea4f41cf9bc4d4703f316ccb1867000c290b34', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a34cf5acb693b0b60577f8e2c21bcd88c08bf7f', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '405fe1a67a67b37e0d62acaaa84ca18b1a4e5332', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0e8d3cd393b5acb78de942817af6fa28e2d5ada', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fed77a6a301350d189e02810c311464e4aa6e60e', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a04fe6183dd0ec6fcfdb66aa8b95f810efe42567', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91fc1001152a4214367cb5db927b95e4dfdff818', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7dde1280d53d11eb9d69f3e62af7ac5b96c14721', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2972ef406c707b24a9b3efc0abb0af33fe80cb29', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08587c4837698842241059856d0df0a7ccb06c2e', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}]",Praveen Sahu,43993374,povinsahu@gmail.com,User,,27,,22,9
690984847,Add cupyx.scipy.sparse.linalg.cgs,This PR add `cupyx.sparse.linalg.cgs` to sparse linear algebra.,True,5524,https://api.github.com/repos/cupy/cupy/pulls/5524,https://github.com/cupy/cupy/pull/5524,closed,245,0,4,6,12,15,2,1,"[{'name': 'cat:feature'}, {'name': 'prio:medium'}]",2021-07-15 19:34:29+00:00,2021-07-21 01:13:47+00:00,452358.0,"5 days, 5:39:18","[{'comment_id': 671982443, 'comment_body': 'Please use `cupy.sqrt` to take a `cupy.ndarray`.\r\n```suggestion\r\n    r_norm = cupy.sqrt(rho)\r\n```', 'comment_created': datetime.datetime(2021, 7, 19, 4, 42, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 672081523, 'comment_body': 'I used numpy as r_norm has only a single value. And doing sqrt of single value on numpy will be faster than on cupy.', 'comment_created': datetime.datetime(2021, 7, 19, 8, 11, 3, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 672259555, 'comment_body': ""Okay, I got that you want `r_norm` to be a numpy value. However, `rho` is the return value of `cupy.dot`, which is a `cupy.ndarray`, and `numpy.sqrt` taking a `cupy.ndarray` dispatches to `cupy.sqrt`, eventually returning a `cupy.ndarray` for `r_norm`. Please check `print(type(r_norm))`. The following is what you should do.\r\n```suggestion\r\n    r_norm = cupy.sqrt(rho).get().item()\r\n```\r\n\r\nFYI:\r\n```\r\n$ python -c 'import numpy as np, cupy as cp; print(type(np.sqrt(cp.array(4))))'\r\n<class 'cupy._core.core.ndarray'>\r\n```"", 'comment_created': datetime.datetime(2021, 7, 19, 12, 39, 28, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 672266869, 'comment_body': 'BTW, do we need to compute `r_norm` here? ', 'comment_created': datetime.datetime(2021, 7, 19, 12, 49, 27, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 672300027, 'comment_body': 'Would you remove this xfail to see if we really need it?', 'comment_created': datetime.datetime(2021, 7, 19, 13, 32, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 672301286, 'comment_body': 'Would you remove this print?', 'comment_created': datetime.datetime(2021, 7, 19, 13, 33, 30, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 672302977, 'comment_body': 'Is this branch also needed for `cgs`?', 'comment_created': datetime.datetime(2021, 7, 19, 13, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 672561989, 'comment_body': 'According to SciPy this was still there ([here](https://github.com/scipy/scipy/blob/4ec4ab8d6ccc1cdb34b84fdcb66fde2cc0210dbf/scipy/sparse/linalg/isolve/iterative.py#L95-L96)). ', 'comment_created': datetime.datetime(2021, 7, 19, 19, 14, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 672563295, 'comment_body': 'As csc format was used in testing and hip does not support csc [storage](https://rocsparse.readthedocs.io/en/latest/usermanual.html#storage-formats) format. So I thought that this will work as similar  was done with other tests as well (cg, gmres)', 'comment_created': datetime.datetime(2021, 7, 19, 19, 15, 58, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 672563522, 'comment_body': 'I added this print so that the test will have consistency with other tests. ', 'comment_created': datetime.datetime(2021, 7, 19, 19, 16, 23, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 672564793, 'comment_body': ""> numpy.sqrt taking a cupy.ndarray dispatches to cupy.sqrt\r\n\r\nI was unaware of this. \r\nAnd we don't need to calculate r_norm there, I did that for some check while writing it. So will remove this part."", 'comment_created': datetime.datetime(2021, 7, 19, 19, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 672569386, 'comment_body': 'If you search ""csc"" on that page you\'d actually find a lot of routines for CSC. It\'s just not explicitly mentioned because it\'s almost identical to CSR. I agree with @takagi that we can give it a shot and see how it goes. Jenkins now runs ROCm tests as well.', 'comment_created': datetime.datetime(2021, 7, 19, 19, 24, 51, tzinfo=datetime.timezone.utc), 'commenter': 'leofang', 'type': 'User'}, {'comment_id': 672574331, 'comment_body': 'Ok then, will remove and test it.', 'comment_created': datetime.datetime(2021, 7, 19, 19, 33, 22, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 672753240, 'comment_body': ""Okay, then let's keep it. I may make another PR to remove them including other functions, at least they make no sense for test except for debugging purposes."", 'comment_created': datetime.datetime(2021, 7, 20, 2, 1, 41, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 672788513, 'comment_body': ""Alright, looks like for the time being only `csc` needs to be skipped on the ROCm CIs:\r\nhttps://jenkins.preferred.jp/job/chainer/job/cupy_pr/4032/TEST=rocm-4-0,label=mnj-mi50/consoleText\r\nhttps://jenkins.preferred.jp/job/chainer/job/cupy_pr/4032/TEST=rocm-4-2,label=mnj-mi50/consoleText\r\nLet's add an `xfail` to this test (`test_sparse`) for CSC matrices."", 'comment_created': datetime.datetime(2021, 7, 20, 4, 0, 35, tzinfo=datetime.timezone.utc), 'commenter': 'leofang', 'type': 'User'}]","[{'commit_sha': 'c1003013ce74c40281dd5aba2cf28702c22b2c78', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a38154821b9b90d9981a07758839105e2addfb86', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc34d0fa304f32c86ba9709a69b0a48229139355', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0053ff67b219e32b9d56ff74a2de4364cb971337', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a62183bfb7e64d17c8746bc8d2040d1495189ebe', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52d8ad72ef64f637a34abe28aa2a72d5d3f27ed9', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}]",Praveen Sahu,43993374,povinsahu@gmail.com,User,,27,,22,9
700979297,Add cupyx.scipy.sparse.linalg.minres,This PR add MINRES solver to sparse linear algebra. ,True,5585,https://api.github.com/repos/cupy/cupy/pulls/5585,https://github.com/cupy/cupy/pull/5585,closed,345,0,4,7,10,9,2,1,"[{'name': 'cat:feature'}, {'name': 'prio:medium'}]",2021-08-01 20:30:02+00:00,2021-08-06 06:09:34+00:00,380372.0,"4 days, 9:39:32","[{'comment_id': 681426449, 'comment_body': 'Do we need `r2` copied as `r2` is assigned to another ndarray, `y.copy()`, and the ndarray that was assigned to `r2` is not used anymore?', 'comment_created': datetime.datetime(2021, 8, 3, 4, 34, 36, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 681431634, 'comment_body': 'Currently, `beta` is assigned to a ndarray on the device, causing multiple synchronizations in the following lines. How about synchronizing it to the host here, and using the host value below?\r\n', 'comment_created': datetime.datetime(2021, 8, 3, 4, 49, 38, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 681432950, 'comment_body': 'Also, it would be better to make `beta` always keep host value for clarity. (same for other variables)', 'comment_created': datetime.datetime(2021, 8, 3, 4, 53, 36, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 681434380, 'comment_body': 'Seems `alpha` is used for scalar arithmetics below, so it would be better to synchronize it to the host before those.', 'comment_created': datetime.datetime(2021, 8, 3, 4, 57, 57, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 681436325, 'comment_body': 'Also, do we need `y` copied here?', 'comment_created': datetime.datetime(2021, 8, 3, 5, 3, 41, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 681436499, 'comment_body': 'Do we need these copies?', 'comment_created': datetime.datetime(2021, 8, 3, 5, 4, 15, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 681439451, 'comment_body': 'How about making `tnorm2` always have host value, and computing it on the host?', 'comment_created': datetime.datetime(2021, 8, 3, 5, 12, 38, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 681439865, 'comment_body': 'Synchronizing `ynorm` to the host here would be better as it is used in scalar arithmetics and comparison below.', 'comment_created': datetime.datetime(2021, 8, 3, 5, 13, 51, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 683177554, 'comment_body': '`beta` is a scalar so faster on CPU (maybe a couple of percent gain)\r\n```suggestion\r\n        beta = beta.get().item()\r\n        beta = numpy.sqrt(beta)\r\n```', 'comment_created': datetime.datetime(2021, 8, 5, 6, 53, 23, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}]","[{'commit_sha': '2f927baf32e80d8c96ae94dfa3dd33c44d7e0c0f', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e356c7f25b54d1a4233ad927101b1ccfc585817', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '924d1e06add88db5ac4e10a6a2c92f357ccebff8', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f0a9174d5e33ff5cb89a8b74aeb594ab495e408', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ecec7a9f203c920881c68c07934c8367007e51c', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a04db91dc50fb5d44de3064165caf84ed312f16', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9916bdfb531b91bfd90f8e04bdeb9e1625d6e9ca', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}]",Praveen Sahu,43993374,povinsahu@gmail.com,User,,27,,22,9
698986531,Add support for array input in beta distribution of Generator,"This PR will add the support for array input in beta distribution of Generator.

Before:
```python
>>> import cupy as cp
>>> rng = cp.random.default_rng()
>>> a = cp.array([1, 2, 1])
>>> b = cp.array([2, 1, 2])
>>> rng.beta(a,b)
TypeError: only size-1 arrays can be converted to Python scalars

```
After this PR:
```python

>>> import cupy as cp
>>> rng = cp.random.default_rng()
>>> a = cp.array([1, 2, 1])
>>> b = cp.array([2, 1, 1])
>>> rng.beta(a, b)
array([0.49999993, 0.5       , 0.49999997])
```",True,5573,https://api.github.com/repos/cupy/cupy/pulls/5573,https://github.com/cupy/cupy/pull/5573,closed,49,13,4,5,10,4,3,1,"[{'name': 'cat:enhancement'}, {'name': 'st:test-and-merge'}, {'name': 'prio:medium'}]",2021-07-28 20:16:42+00:00,2021-08-06 01:50:02+00:00,711200.0,"8 days, 5:33:20","[{'comment_id': 678859827, 'comment_body': 'Maybe this fixes the failure.\r\n\r\n```suggestion\r\n        b_ptr = b_arr.data.ptr\r\n```', 'comment_created': datetime.datetime(2021, 7, 29, 6, 24, 20, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 681528865, 'comment_body': 'What do the ndarrays returned by `_array_data` contain?\r\n', 'comment_created': datetime.datetime(2021, 8, 3, 8, 1, 35, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 682042884, 'comment_body': 'Here a_arr will have value `cupy.array((a.data.ptr, a.ndim) + a.shape + a.strides)`', 'comment_created': datetime.datetime(2021, 8, 3, 19, 30, 30, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 682259610, 'comment_body': ""`a` and `b` are still of `double` in `beta()`'s arguments. You should fix their types to `intptr_t` to make it take `a_arr.data.ptr` and `b_arr.data.ptr`.\r\n\r\nAlso, You need to cast them to `int64_t*` to pass to `generator_dispatcher` in `beta()`, otherwise the second form of `get_index` (with `std::is_arithmetic<T>`) is selected in `execute_dist`, eventually the pointer values are casted to `double` and used for `a` and `b` to compute `rk_beta`."", 'comment_created': datetime.datetime(2021, 8, 4, 3, 31, 6, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}]","[{'commit_sha': 'da2eea7a3a813b606668e8578eb6420a9e35a10a', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d0070b4029d417574ffb167dab75c2917bec9de', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0983f49e7b6836adc9f71aa534b527f309357144', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8006a34882c1dfb989bdffc84539193a42c7ed05', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06a42fa88118984fc052ac4df907efac7c2d5beb', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}]",Praveen Sahu,43993374,povinsahu@gmail.com,User,,27,,22,9
683638975,Add geometric distribution to new Generator,,True,5443,https://api.github.com/repos/cupy/cupy/pulls/5443,https://github.com/cupy/cupy/pull/5443,closed,136,19,6,5,12,10,3,1,"[{'name': 'cat:feature'}, {'name': 'st:test-and-merge'}, {'name': 'prio:medium'}]",2021-07-05 11:57:49+00:00,2021-07-12 08:10:56+00:00,591187.0,"6 days, 20:13:07","[{'comment_id': 664165998, 'comment_body': 'p can be an array of floats\r\ncheck numpy\r\n\r\nhttps://numpy.org/doc/stable/reference/random/generated/numpy.random.Generator.geometric.html#numpy.random.Generator.geometric', 'comment_created': datetime.datetime(2021, 7, 6, 0, 30, 37, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}, {'comment_id': 664166188, 'comment_body': 'I wonder if we can test arrays, maybe the test will fail due to the statistical checks but I am not sure', 'comment_created': datetime.datetime(2021, 7, 6, 0, 31, 40, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}, {'comment_id': 664832355, 'comment_body': 'I tried passing the array as test parameters, but as of now we have to explicitly pass p as cupy.ndarray for distributions of Generator, but in RandomState there is no such requirement. And tests fails due to broadcast error. ', 'comment_created': datetime.datetime(2021, 7, 6, 19, 45, 3, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 665037058, 'comment_body': '> And tests fails due to broadcast error.\r\n\r\nMaybe the shape of `p` and `size` make a conflict?', 'comment_created': datetime.datetime(2021, 7, 7, 4, 48, 44, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 665049643, 'comment_body': '```suggestion\r\n        y = ndarray(size if size is not None else (), numpy.int64)\r\n```', 'comment_created': datetime.datetime(2021, 7, 7, 5, 17, 1, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 665422386, 'comment_body': ""https://github.com/cupy/cupy/blob/d53212bb87579013ec8a1c4b8d31de8512f92b40/tests/cupy_tests/random_tests/common_distributions.py#L111-L116\r\n\r\nIs there any specific se of defining the numpy_len = 1000? \r\nAs this is causing the broadcast error. I replaced the above line with following and it works well for the p as ndarray, but was failing for the `lognormal` and `normal` by rejecting null hypothesis.\r\n\r\n```python\r\n# kwargs['size'] = numpy_len\r\ndtype = kwargs.pop('dtype', None)\r\nnumpy_rng = self.get_rng(numpy, self.__seed)\r\nfunc_numpy = getattr(numpy_rng, self.target_method)(*args, **kwargs)\r\nvals_numpy = func_numpy\r\ncount = 1 + (numpy_len - 1) // vals_numpy.size\r\nfor _ in range(1, count):\r\n    vals_numpy = numpy.append(vals_numpy, func_numpy)\r\n\r\nif dtype is not None:\r\n    vals_numpy = vals_numpy.astype(dtype, copy=False)\r\nvals_numpy = numpy.stack(vals_numpy).ravel()\r\n```\r\n\r\nNote: This change was only for testing the distribution of RandomState as for Generator `p` is required to be cupy.ndarray or a scalar."", 'comment_created': datetime.datetime(2021, 7, 7, 14, 23, 53, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 665638164, 'comment_body': 'Can we remove this test, as due to this test input array is required to be cupy.ndarray. So something like `rng.geometric([0.2, 0.3, 0.4])` will not work, but was supported by numpy.', 'comment_created': datetime.datetime(2021, 7, 7, 19, 8, 34, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 665882462, 'comment_body': '~~Making p take array-like other than cupy.ndarray is okay.~~', 'comment_created': datetime.datetime(2021, 7, 8, 5, 35, 2, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 665884313, 'comment_body': 'we only allow cupy arrays or scalars in order to avoid implicit synchronization.', 'comment_created': datetime.datetime(2021, 7, 8, 5, 40, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}, {'comment_id': 665904782, 'comment_body': ""I don't think `check_ks` for `p` of ndarray makes much sense, so we can simply skip it. (On making a statistical check, p should be fixed to a value)\r\n"", 'comment_created': datetime.datetime(2021, 7, 8, 6, 28, 4, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}]","[{'commit_sha': 'd07de524895f6a047d15ab48db61dff80e9c1324', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '884238b1bf8b87f0b78bcc739be1ddcc8c526381', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4835f1fbd193befe121b7c863e87a4abe73ffb96', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cea4c9716992f5c45478842f570b587a4187eae', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff4662d2dc7e0bb4548a8f3c94f7b6a3c1feb7cb', 'committer_username': 'takagi', 'committer_name': 'Masayuki Takagi', 'committer_email': 'kamonama@gmail.com', 'commit_date': datetime.datetime(2011, 11, 28, 5, 21, 39, tzinfo=datetime.timezone.utc)}]",Praveen Sahu,43993374,povinsahu@gmail.com,User,,27,,22,9
696559156,Add hypergeometric distribution to new Generator,,True,5560,https://api.github.com/repos/cupy/cupy/pulls/5560,https://github.com/cupy/cupy/pull/5560,closed,224,15,6,4,9,6,3,1,"[{'name': 'cat:feature'}, {'name': 'st:test-and-merge'}, {'name': 'prio:medium'}]",2021-07-25 20:22:40+00:00,2021-07-29 06:00:12+00:00,293852.0,"3 days, 9:37:32","[{'comment_id': 677134079, 'comment_body': '~~Any reason you use float values instead of int here?~~ Would you also include a case with scalar ints?', 'comment_created': datetime.datetime(2021, 7, 27, 5, 41, 30, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 677145052, 'comment_body': ""I don't think this comment makes sense here."", 'comment_created': datetime.datetime(2021, 7, 27, 6, 8, 13, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 677145364, 'comment_body': 'Also (unnecessary comment?)', 'comment_created': datetime.datetime(2021, 7, 27, 6, 8, 48, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 677145517, 'comment_body': 'Also (unnecessary comment?)', 'comment_created': datetime.datetime(2021, 7, 27, 6, 9, 4, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 677148136, 'comment_body': 'Any case `size` is `None` here?', 'comment_created': datetime.datetime(2021, 7, 27, 6, 14, 26, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 677170019, 'comment_body': '```suggestion\r\n            :meth:`numpy.random.Generator.hypergeometric`\r\n```', 'comment_created': datetime.datetime(2021, 7, 27, 6, 56, 6, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}]","[{'commit_sha': '167cb15778a18e5f8e459a4f76b00a60260b6140', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '614114038170adffd729e36f6b5df7679dfcfd2a', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f312bfb545d7eb115171f002add39f06675f1687', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'afab735fb000097b149967e2de2c1d2ad2b1215a', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}]",Praveen Sahu,43993374,povinsahu@gmail.com,User,,27,,22,9
698986531,Add support for array input in beta distribution of Generator,"This PR will add the support for array input in beta distribution of Generator.

Before:
```python
>>> import cupy as cp
>>> rng = cp.random.default_rng()
>>> a = cp.array([1, 2, 1])
>>> b = cp.array([2, 1, 2])
>>> rng.beta(a,b)
TypeError: only size-1 arrays can be converted to Python scalars

```
After this PR:
```python

>>> import cupy as cp
>>> rng = cp.random.default_rng()
>>> a = cp.array([1, 2, 1])
>>> b = cp.array([2, 1, 1])
>>> rng.beta(a, b)
array([0.49999993, 0.5       , 0.49999997])
```",True,5573,https://api.github.com/repos/cupy/cupy/pulls/5573,https://github.com/cupy/cupy/pull/5573,closed,49,13,4,5,10,4,3,1,"[{'name': 'cat:enhancement'}, {'name': 'st:test-and-merge'}, {'name': 'prio:medium'}]",2021-07-28 20:16:42+00:00,2021-08-06 01:50:02+00:00,711200.0,"8 days, 5:33:20","[{'comment_id': 678859827, 'comment_body': 'Maybe this fixes the failure.\r\n\r\n```suggestion\r\n        b_ptr = b_arr.data.ptr\r\n```', 'comment_created': datetime.datetime(2021, 7, 29, 6, 24, 20, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 681528865, 'comment_body': 'What do the ndarrays returned by `_array_data` contain?\r\n', 'comment_created': datetime.datetime(2021, 8, 3, 8, 1, 35, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 682042884, 'comment_body': 'Here a_arr will have value `cupy.array((a.data.ptr, a.ndim) + a.shape + a.strides)`', 'comment_created': datetime.datetime(2021, 8, 3, 19, 30, 30, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 682259610, 'comment_body': ""`a` and `b` are still of `double` in `beta()`'s arguments. You should fix their types to `intptr_t` to make it take `a_arr.data.ptr` and `b_arr.data.ptr`.\r\n\r\nAlso, You need to cast them to `int64_t*` to pass to `generator_dispatcher` in `beta()`, otherwise the second form of `get_index` (with `std::is_arithmetic<T>`) is selected in `execute_dist`, eventually the pointer values are casted to `double` and used for `a` and `b` to compute `rk_beta`."", 'comment_created': datetime.datetime(2021, 8, 4, 3, 31, 6, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}]","[{'commit_sha': 'da2eea7a3a813b606668e8578eb6420a9e35a10a', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d0070b4029d417574ffb167dab75c2917bec9de', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0983f49e7b6836adc9f71aa534b527f309357144', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8006a34882c1dfb989bdffc84539193a42c7ed05', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06a42fa88118984fc052ac4df907efac7c2d5beb', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}]",Praveen Sahu,43993374,povinsahu@gmail.com,User,,27,,22,9
705738843,Add Log Series distribution to Generator,"This PR adds log series distribution to Generator.

Following is the performance comparison on GTX1050.
size(nrows * ncols) | numpy (sec) | cupyx (sec)
---|---|---
10000 * 1 | 0.000 | 0.000
12000 * 1 | 0.000 | 0.000
15000 * 1 | 0.001 | 0.000
20000 * 1 | 0.001 | 0.000
10000 * 1000 | 0.381 | 0.044
12000 * 1000 | 0.468 | 0.056
15000 * 1000 | 0.622 | 0.058
20000 * 1000 | 0.795 | 0.095
10000 * 2000 | 0.788 | 0.081
12000 * 2000 | 0.949 | 0.093
15000 * 2000 | 1.194 | 0.123
20000 * 2000 | 1.643 | 0.155
10000 * 3000 | 1.231 | 0.116
12000 * 3000 | 1.507 | 0.140
15000 * 3000 | 2.034 | 0.174
20000 * 3000 | 3.184 | 0.231

<details>
<summary>script</summary>

```python

import numpy as np
import cupy as cp
import cupyx

n_repeat = 2
n_warmup = 1
crng = cp.random.default_rng()
nrng = np.random.default_rng()

def get_time(perf):
    cpu_time = perf.cpu_times.mean()
    gpu_time = perf.gpu_times.mean()
    return max(cpu_time, gpu_time)

def run(p, q):
    times = []

    perf = cupyx.time.repeat(nrng.logseries, (p,),
                            n_repeat=n_repeat, n_warmup=n_warmup)
    times.append(get_time(perf))
    perf = cupyx.time.repeat(crng.logseries, (q,),
                            n_repeat=n_repeat, n_warmup=n_warmup)
    times.append(get_time(perf))
    return times


print('size(nrows * ncols) | numpy (sec) | cupyx (sec)')
print('---|---|---')
nrows = [10000, 12000, 15000, 20000]
ncols = [1, 1000, 2000, 3000]
for m in ncols:
    for n in nrows:
        p = np.random.random((n, m))
        q = cp.asarray(p)
        times = run(p, q)
        print('{} * {} | {:.3f} | {:.3f}'.format(n, m, times[0], times[1]))
```",True,5618,https://api.github.com/repos/cupy/cupy/pulls/5618,https://github.com/cupy/cupy/pull/5618,closed,134,14,6,5,6,2,3,1,"[{'name': 'cat:feature'}, {'name': 'st:test-and-merge'}, {'name': 'prio:high'}]",2021-08-06 20:47:41+00:00,2021-08-11 04:26:07+00:00,373106.0,"4 days, 7:38:26","[{'comment_id': 685714212, 'comment_body': 'Seems that the first sentence is unexpectedly made bold. \r\n\r\n<img width=""538"" alt=""cap2021-08-10 15 00 28"" src=""https://user-images.githubusercontent.com/1224375/128816020-32ade952-636b-4db5-a662-9adf99336016.png"">\r\n\r\nWould you try to remove the indent as:\r\n\r\n```suggestion\r\n        Its probability mass function is defined as\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 6, 2, 9, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 685828579, 'comment_body': 'Seems sphinx grammar requires a space after the quotes.\r\n\r\n```suggestion\r\n                array. If ``None`` (default), a single value is returned if\r\n                 ``p`` is scalar. Otherwise, ``p.size`` samples are drawn.\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 8, 57, 31, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}]","[{'commit_sha': '8efae2dd5b75ac9b4e407856f46fe14cc2f71e04', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ae6365c5a72442a93faece8b2a89fbac8f8874b', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2bf1f92b8752f58265fca47fe4960d3cc8e68cf', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc60d3ef83d607ab06d5631d4f9bf1c63d30fd18', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b05641a514c93b8371596e258b5b7e3e0cb3902', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}]",Praveen Sahu,43993374,povinsahu@gmail.com,User,,27,,22,9
706734232,Add Power distribution to Generator,"This PR adds power distribution to Generator.

Following is the performance comparison on GTX1050.



size(nrows * ncols) | numpy (sec) | cupyx (sec)
--- | --- | ---
10000 * 1 | 0.000 | 0.000
12000 * 1 | 0.001 | 0.000
15000 * 1 | 0.001 | 0.000
20000 * 1 | 0.001 | 0.000
10000 * 1000 | 0.409 | 0.050
12000 * 1000 | 0.509 | 0.061
15000 * 1000 | 0.616 | 0.079
20000 * 1000 | 0.828 | 0.115
10000 * 2000 | 0.831 | 0.101
12000 * 2000 | 0.988 | 0.120
15000 * 2000 | 1.235 | 0.151
20000 * 2000 | 1.685 | 0.201
10000 * 3000 | 1.306 | 0.169
12000 * 3000 | 1.579 | 0.204
15000 * 3000 | 1.864 | 0.224
20000 * 3000 | 2.522 | 0.312

<details>
<summary>script</summary>

```python

import numpy as np
import cupy as cp
import cupyx

n_repeat = 2
n_warmup = 1
crng = cp.random.default_rng()
nrng = np.random.default_rng()

def get_time(perf):
    cpu_time = perf.cpu_times.mean()
    gpu_time = perf.gpu_times.mean()
    return max(cpu_time, gpu_time)

def run(p, q):
    times = []

    perf = cupyx.time.repeat(nrng.power, (p,),
                            n_repeat=n_repeat, n_warmup=n_warmup)
    times.append(get_time(perf))
    perf = cupyx.time.repeat(crng.power, (q,),
                            n_repeat=n_repeat, n_warmup=n_warmup)
    times.append(get_time(perf))
    return times


print('size(nrows * ncols) | numpy (sec) | cupyx (sec)')
print('---|---|---')
nrows = [10000, 12000, 15000, 20000]
ncols = [1, 1000, 2000, 3000]
for m in ncols:
    for n in nrows:
        p = np.random.random((n, m))
        q = cp.asarray(p)
        times = run(p, q)
        print('{} * {} | {:.3f} | {:.3f}'.format(n, m, times[0], times[1]))
",True,5624,https://api.github.com/repos/cupy/cupy/pulls/5624,https://github.com/cupy/cupy/pull/5624,closed,83,16,4,4,9,7,2,1,"[{'name': 'cat:feature'}, {'name': 'prio:high'}]",2021-08-09 18:14:54+00:00,2021-08-16 06:00:11+00:00,560717.0,"6 days, 11:45:17","[{'comment_id': 685607776, 'comment_body': 'There is already a `standard_exponential_functor` no need to alias it', 'comment_created': datetime.datetime(2021, 8, 10, 0, 29, 39, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}, {'comment_id': 685607885, 'comment_body': 'Also you are not using this one ðŸ˜„', 'comment_created': datetime.datetime(2021, 8, 10, 0, 30, 2, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}, {'comment_id': 685608027, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 0, 30, 26, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}, {'comment_id': 685608194, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 0, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}, {'comment_id': 685608249, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 0, 31, 9, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}, {'comment_id': 685608296, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 0, 31, 19, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}, {'comment_id': 685608386, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 0, 31, 37, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}]","[{'commit_sha': 'c6e19a1dee4b66ee2c4e00198cb492ddf867fd9c', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6f43e527edd69b879fc38533086c89fa1e30c75', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48e4bf3275b3b117c8ae966ee95cbf5104b3cec2', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bed69fafe96d0c7eeb5c0833051827d02a38795a', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}]",Praveen Sahu,43993374,povinsahu@gmail.com,User,,27,,22,9
712929277,Add Chi-square distribution to Generator,"This PR adds chi-square distribution to Generator.

Following is the performance comparison on GTX1050.

size(nrows * ncols) | numpy | cupy 
---|---|---
10000 * 1 | 0.000 | 0.000
12000 * 1 | 0.000 | 0.000
15000 * 1 | 0.000 | 0.000
20000 * 1 | 0.001 | 0.000
10000 * 1000 | 0.318 | 0.059
12000 * 1000 | 0.382 | 0.074
15000 * 1000 | 0.482 | 0.097
20000 * 1000 | 0.640 | 0.131
10000 * 2000 | 0.642 | 0.135
12000 * 2000 | 0.772 | 0.161
15000 * 2000 | 0.976 | 0.210
20000 * 2000 | 1.298 | 0.278
10000 * 3000 | 1.015 | 0.206
12000 * 3000 | 1.215 | 0.252
15000 * 3000 | 1.477 | 0.317
20000 * 3000 | 1.829 | 0.417

<details>
<summary>script</summary>

```python
import numpy as np
import cupy as cp
import cupyx

n_repeat = 2
n_warmup = 1
crng = cp.random.default_rng()
nrng = np.random.default_rng()

def get_time(perf):
    cpu_time = perf.cpu_times.mean()
    gpu_time = perf.gpu_times.mean()
    return max(cpu_time, gpu_time)

def run(p, q):
    times = []

    perf = cupyx.time.repeat(nrng.chisquare, (p,),
                            n_repeat=n_repeat, n_warmup=n_warmup)
    times.append(get_time(perf))
    perf = cupyx.time.repeat(crng.chisquare, (q,),
                            n_repeat=n_repeat, n_warmup=n_warmup)
    times.append(get_time(perf))
    return times


print('size(nrows * ncols) | numpy | cupy ')
print('---|---|---')
nrows = [10000, 12000, 15000, 20000]
ncols = [1, 1000, 2000, 3000]
for m in ncols:
    for n in nrows:
        p = np.random.randint(1, 1000, (n, m))
        q = cp.asarray(p)
        times = run(p, q)
        print('{} * {} | {:.3f} | {:.3f}'.format(n, m, times[0], times[1]))
```",True,5645,https://api.github.com/repos/cupy/cupy/pulls/5645,https://github.com/cupy/cupy/pull/5645,closed,85,18,4,4,3,1,2,1,"[{'name': 'cat:feature'}, {'name': 'prio:high'}]",2021-08-15 12:40:37+00:00,2021-08-16 07:39:04+00:00,68307.0,18:58:27,"[{'comment_id': 689234725, 'comment_body': '```suggestion\r\n        y = self.standard_gamma(df / 2)\r\n```', 'comment_created': datetime.datetime(2021, 8, 16, 4, 41, 32, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}]","[{'commit_sha': 'fcaa4c8804c7ec84d7bd079a35e4db308a11dd30', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58c5324d9ef68f91d09c99c4c9458cf7159646ad', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55a6212b8f99c3a7b6a9824c19a676420855ca1e', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a54867d3755ad4cf64408ffc4a38d4da5d879c9', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}]",Praveen Sahu,43993374,povinsahu@gmail.com,User,,27,,22,9
682101287,Add binomial distribution to new Generator,,True,5429,https://api.github.com/repos/cupy/cupy/pulls/5429,https://github.com/cupy/cupy/pull/5429,closed,321,14,5,11,14,11,2,1,"[{'name': 'cat:feature'}, {'name': 'prio:medium'}]",2021-07-01 19:07:50+00:00,2021-09-16 07:20:27+00:00,6610357.0,"76 days, 12:12:37","[{'comment_id': 662684626, 'comment_body': 'need to add several checks as in https://github.com/cupy/cupy/pull/5182', 'comment_created': datetime.datetime(2021, 7, 2, 1, 48, 49, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}, {'comment_id': 662684805, 'comment_body': ""To be honest, i'd rather have this in a different struct rather than rk_state\r\n(I know the original implementation did this)"", 'comment_created': datetime.datetime(2021, 7, 2, 1, 49, 19, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}, {'comment_id': 662685400, 'comment_body': 'could this be rewritten to use inline functions?', 'comment_created': datetime.datetime(2021, 7, 2, 1, 51, 10, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}, {'comment_id': 663238015, 'comment_body': 'AFAIK, we cannot use inline functions here as both are different variables one is a field of the struct and other is a normal variable', 'comment_created': datetime.datetime(2021, 7, 2, 20, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 663238803, 'comment_body': 'Yeah writing this in a separate struct will increase readability.', 'comment_created': datetime.datetime(2021, 7, 2, 20, 42, 32, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 663240141, 'comment_body': 'Should I also add checks for the input domain like for `p >= 0 and p<=1`?', 'comment_created': datetime.datetime(2021, 7, 2, 20, 46, 49, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 663240642, 'comment_body': ' This check is missing in the distributions.', 'comment_created': datetime.datetime(2021, 7, 2, 20, 48, 3, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 664165707, 'comment_body': 'that check involves device synchronization so I think it is ok not do it, but leave it as a comment\r\n\r\nalso p can be an array so check the above PR to deal with it accordingly :)', 'comment_created': datetime.datetime(2021, 7, 6, 0, 29, 26, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}, {'comment_id': 667447032, 'comment_body': 'I am writing separate class for this, but while doing so I have a doubt. How to use the multiple structs in generator dispatcher.', 'comment_created': datetime.datetime(2021, 7, 11, 8, 52, 51, tzinfo=datetime.timezone.utc), 'commenter': 'povinsahu1909', 'type': 'User'}, {'comment_id': 668342758, 'comment_body': ""You can use a ndarray that has the same size in bytes as the size of the other struct to keep the additional state. The ndarray's dtype can be `uint8`."", 'comment_created': datetime.datetime(2021, 7, 13, 0, 28, 51, tzinfo=datetime.timezone.utc), 'commenter': 'takagi', 'type': 'User'}, {'comment_id': 668361978, 'comment_body': 'https://github.com/cupy/cupy/blob/995ce208dc475525c37b6a449e64d7e40bcb5fdc/cupy/random/_bit_generator.pyx#L77\r\n\r\nYes, this is what we do to allocate the state, you can do this for the binomial and pass the pointer as a parameter to the distribution', 'comment_created': datetime.datetime(2021, 7, 13, 1, 29, 33, tzinfo=datetime.timezone.utc), 'commenter': 'emcastillo', 'type': 'User'}]","[{'commit_sha': 'ea8b9efa9016ff2c7e880a8ef323fbcbbb4db6a7', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c94cabec0217d7e20bdf45d9e0942d1cd1b8b1a', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '300c9f7ba82f6de87235adb3b1d373ab8c5b4bd6', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '995ce208dc475525c37b6a449e64d7e40bcb5fdc', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '657efcf00d2a433514f55ba3d015da5b7fc70471', 'committer_username': 'takagi', 'committer_name': 'Masayuki Takagi', 'committer_email': 'kamonama@gmail.com', 'commit_date': datetime.datetime(2011, 11, 28, 5, 21, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19591fd49eec607824610f7beed1932045a46260', 'committer_username': 'takagi', 'committer_name': 'Masayuki Takagi', 'committer_email': 'kamonama@gmail.com', 'commit_date': datetime.datetime(2011, 11, 28, 5, 21, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25a5b1de69647fd7cb7c2ce246b754bca126074b', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b6a4eb1b25460335ea0a947a4edce2b98dd5765', 'committer_username': 'takagi', 'committer_name': 'Masayuki Takagi', 'committer_email': 'kamonama@gmail.com', 'commit_date': datetime.datetime(2011, 11, 28, 5, 21, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fe08747df9f107e01019f66993f2a3d934e9110', 'committer_username': 'takagi', 'committer_name': 'Masayuki Takagi', 'committer_email': 'kamonama@gmail.com', 'commit_date': datetime.datetime(2011, 11, 28, 5, 21, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f57a49a25b2b22d88f69d8dd280b4943ef1ae19a', 'committer_username': 'takagi', 'committer_name': 'Masayuki Takagi', 'committer_email': 'kamonama@gmail.com', 'commit_date': datetime.datetime(2011, 11, 28, 5, 21, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c6c4205a6a7877d007042c8407e2ffca22c8c78', 'committer_username': 'takagi', 'committer_name': 'Masayuki Takagi', 'committer_email': 'kamonama@gmail.com', 'commit_date': datetime.datetime(2011, 11, 28, 5, 21, 39, tzinfo=datetime.timezone.utc)}]",Praveen Sahu,43993374,povinsahu@gmail.com,User,,27,,22,9
713728396,Add Dirichlet distribution to Generator,"This PR adds Dirichlet distribution to Generator.

Following is the performance comparison on GTX1050.
(The comparison was done only for flattened shape as numpy does not support multi-dimension alpha as input)

size | numpy | cupy 
---|---|---
10000 | 0.001 | 0.001
12000 | 0.002 | 0.001
15000 | 0.002 | 0.001
25000 | 0.002 | 0.001
10000000 | 0.562 | 0.305
12000000 | 0.665 | 0.367
15000000 | 0.830 | 0.459
20000000 | 1.106 | 0.623
24000000 | 1.327 | 0.736
25000000 | 1.381 | 0.764
30000000 | 1.785 | 0.962
36000000 | 2.018 | 1.110
45000000 | 2.639 | 1.439
50000000 | 2.798 | 1.579
75000000 | 6.607 | 2.456

<details>
<summary>script</summary>

```python
import numpy as np
import cupy as cp
import cupyx

n_repeat = 2
n_warmup = 1
crng = cp.random.default_rng()
nrng = np.random.default_rng()

def get_time(perf):
    cpu_time = perf.cpu_times.mean()
    gpu_time = perf.gpu_times.mean()
    return max(cpu_time, gpu_time)

def run(p, q):
    times = []

    perf = cupyx.time.repeat(nrng.dirichlet, (p,),
                            n_repeat=n_repeat, n_warmup=n_warmup)
    times.append(get_time(perf))
    perf = cupyx.time.repeat(crng.dirichlet, (q,),
                            n_repeat=n_repeat, n_warmup=n_warmup)
    times.append(get_time(perf))
    return times


print('size | numpy | cupy ')
print('---|---|---')
nrows = [10000, 12000, 15000, 25000]
ncols = [1, 1000, 2000, 3000]
for m in ncols:
    for n in nrows:
        p = np.random.random( n*m )
        q = cp.asarray(p)
        times = run(p, q)
        print('{} | {:.3f} | {:.3f}'.format(n * m, times[0], times[1]))
```",True,5648,https://api.github.com/repos/cupy/cupy/pulls/5648,https://github.com/cupy/cupy/pull/5648,closed,85,16,4,2,3,0,2,1,"[{'name': 'cat:feature'}, {'name': 'prio:high'}]",2021-08-16 20:34:11+00:00,2021-08-20 07:42:28+00:00,299297.0,"3 days, 11:08:17",[],"[{'commit_sha': 'd2e144c38c6fe82901bd6792dbf03f669a72f077', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e428c473a02b5bb6090628a701956b16cd10949', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}]",Praveen Sahu,43993374,povinsahu@gmail.com,User,,27,,22,9
714543478,Add F distribution to Generator,"This PR add F distribution to Generator.

Following is the performance comparison on GTX1050.

size(nrows * ncols) | numpy | cupy 
--- | --- | ---
10000 * 1 | 0.001 | 0.001
12000 * 1 | 0.001 | 0.001
15000 * 1 | 0.002 | 0.001
10000 * 1000 | 0.971 | 0.293
12000 * 1000 | 1.158 | 0.348
15000 * 1000 | 1.448 | 0.432
10000 * 2000 | 1.939 | 0.624
12000 * 2000 | 2.382 | 0.698
15000 * 2000 | 3.063 | 0.868
10000 * 3000 | 3.158 | 0.867
12000 * 3000 | 5.043 | 1.071
15000 * 3000 | 5.187 | 1.303

<details>
<summary>script</summary>

```python
import numpy as np
import cupy as cp
import cupyx

n_repeat = 2
n_warmup = 1
crng = cp.random.default_rng()
nrng = np.random.default_rng()

def get_time(perf):
    cpu_time = perf.cpu_times.mean()
    gpu_time = perf.gpu_times.mean()
    return max(cpu_time, gpu_time)

def run(dfn, dfd, dfn1, dfd1):
    times = []

    perf = cupyx.time.repeat(nrng.f,
                             (dfn, dfd),
                             n_repeat=n_repeat, n_warmup=n_warmup)
    times.append(get_time(perf))
    perf = cupyx.time.repeat(crng.f,
                             (dfn1, dfd1),
                             n_repeat=n_repeat, n_warmup=n_warmup)
    times.append(get_time(perf))
    return times


print('size(nrows * ncols) | numpy | cupy ')
print('---|---|---')
nrows = [10000, 12000, 15000]
ncols = [1, 1000, 2000, 3000]
for m in ncols:
    for n in nrows:
        dfnum = np.random.random((n,m))
        dfden = np.random.random((n,m))
        dfnum1 = cp.asarray(dfnum)
        dfden1 = cp.asarray(dfden)
        times = run(dfnum, dfden, dfnum1, dfden1)
        print('{} * {} | {:.3f} | {:.3f}'.format(n, m, times[0], times[1]))
```",True,5655,https://api.github.com/repos/cupy/cupy/pulls/5655,https://github.com/cupy/cupy/pull/5655,closed,95,18,4,3,6,0,2,1,"[{'name': 'cat:feature'}, {'name': 'prio:high'}]",2021-08-17 20:26:04+00:00,2021-08-20 16:03:07+00:00,243423.0,"2 days, 19:37:03",[],"[{'commit_sha': '75085487e182fe56b6e523dbab47d7d6528e6c20', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fbb152097d6ea12a606ff65735f2b3e54ee2f10', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72f7f678ab5b4e61257e77a2d298fe6a346e0696', 'committer_username': 'povinsahu1909', 'committer_name': 'Praveen Sahu', 'committer_email': 'povinsahu@gmail.com', 'commit_date': datetime.datetime(2018, 10, 9, 12, 46, 54, tzinfo=datetime.timezone.utc)}]",Praveen Sahu,43993374,povinsahu@gmail.com,User,,27,,22,9

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
72523920,cupy,cupy/cupy,Python,802,8064,128,382,28890,635,19,94,"[{'id': 714543478, 'number': 5655, 'closed': datetime.datetime(2021, 8, 20, 16, 3, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 17, 20, 26, 4, tzinfo=datetime.timezone.utc), 'time_taken': 243423.0, 'time_delta': '2 days, 19:37:03', 'additions': 95, 'deletions': 18, 'state': 'closed'}, {'id': 713728396, 'number': 5648, 'closed': datetime.datetime(2021, 8, 20, 7, 42, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 16, 20, 34, 11, tzinfo=datetime.timezone.utc), 'time_taken': 299297.0, 'time_delta': '3 days, 11:08:17', 'additions': 85, 'deletions': 16, 'state': 'closed'}, {'id': 712929277, 'number': 5645, 'closed': datetime.datetime(2021, 8, 16, 7, 39, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 15, 12, 40, 37, tzinfo=datetime.timezone.utc), 'time_taken': 68307.0, 'time_delta': '18:58:27', 'additions': 85, 'deletions': 18, 'state': 'closed'}, {'id': 706734232, 'number': 5624, 'closed': datetime.datetime(2021, 8, 16, 6, 0, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 18, 14, 54, tzinfo=datetime.timezone.utc), 'time_taken': 560717.0, 'time_delta': '6 days, 11:45:17', 'additions': 83, 'deletions': 16, 'state': 'closed'}, {'id': 705738843, 'number': 5618, 'closed': datetime.datetime(2021, 8, 11, 4, 26, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 6, 20, 47, 41, tzinfo=datetime.timezone.utc), 'time_taken': 373106.0, 'time_delta': '4 days, 7:38:26', 'additions': 134, 'deletions': 14, 'state': 'closed'}, {'id': 700979297, 'number': 5585, 'closed': datetime.datetime(2021, 8, 6, 6, 9, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 1, 20, 30, 2, tzinfo=datetime.timezone.utc), 'time_taken': 380372.0, 'time_delta': '4 days, 9:39:32', 'additions': 345, 'deletions': 0, 'state': 'closed'}, {'id': 698986531, 'number': 5573, 'closed': datetime.datetime(2021, 8, 6, 1, 50, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 28, 20, 16, 42, tzinfo=datetime.timezone.utc), 'time_taken': 711200.0, 'time_delta': '8 days, 5:33:20', 'additions': 49, 'deletions': 13, 'state': 'closed'}, {'id': 696559156, 'number': 5560, 'closed': datetime.datetime(2021, 7, 29, 6, 0, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 25, 20, 22, 40, tzinfo=datetime.timezone.utc), 'time_taken': 293852.0, 'time_delta': '3 days, 9:37:32', 'additions': 224, 'deletions': 15, 'state': 'closed'}, {'id': 690984847, 'number': 5524, 'closed': datetime.datetime(2021, 7, 21, 1, 13, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 15, 19, 34, 29, tzinfo=datetime.timezone.utc), 'time_taken': 452358.0, 'time_delta': '5 days, 5:39:18', 'additions': 245, 'deletions': 0, 'state': 'closed'}, {'id': 683638975, 'number': 5443, 'closed': datetime.datetime(2021, 7, 12, 8, 10, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 11, 57, 49, tzinfo=datetime.timezone.utc), 'time_taken': 591187.0, 'time_delta': '6 days, 20:13:07', 'additions': 136, 'deletions': 19, 'state': 'closed'}, {'id': 682101287, 'number': 5429, 'closed': datetime.datetime(2021, 9, 16, 7, 20, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 1, 19, 7, 50, tzinfo=datetime.timezone.utc), 'time_taken': 6610357.0, 'time_delta': '76 days, 12:12:37', 'additions': 321, 'deletions': 14, 'state': 'closed'}, {'id': 665573786, 'number': 5331, 'closed': datetime.datetime(2021, 7, 29, 6, 51, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 9, 5, 52, 27, tzinfo=datetime.timezone.utc), 'time_taken': 4323538.0, 'time_delta': '50 days, 0:58:58', 'additions': 410, 'deletions': 0, 'state': 'closed'}, {'id': 658224933, 'number': 5301, 'closed': datetime.datetime(2021, 6, 3, 5, 22, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 31, 11, 5, 15, tzinfo=datetime.timezone.utc), 'time_taken': 238663.0, 'time_delta': '2 days, 18:17:43', 'additions': 159, 'deletions': 6, 'state': 'closed'}, {'id': 599641281, 'number': 4968, 'closed': datetime.datetime(2021, 4, 6, 7, 24, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 24, 12, 19, tzinfo=datetime.timezone.utc), 'time_taken': 1105553.0, 'time_delta': '12 days, 19:05:53', 'additions': 89, 'deletions': 16, 'state': 'closed'}, {'id': 597334507, 'number': 4927, 'closed': datetime.datetime(2021, 4, 6, 3, 11, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 20, 18, 12, 51, tzinfo=datetime.timezone.utc), 'time_taken': 1414728.0, 'time_delta': '16 days, 8:58:48', 'additions': 158, 'deletions': 1, 'state': 'closed'}, {'id': 596339839, 'number': 4915, 'closed': datetime.datetime(2021, 3, 20, 17, 13, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 19, 9, 1, 26, tzinfo=datetime.timezone.utc), 'time_taken': 115910.0, 'time_delta': '1 day, 8:11:50', 'additions': 45, 'deletions': 0, 'state': 'closed'}, {'id': 586249052, 'number': 4830, 'closed': datetime.datetime(2021, 3, 9, 11, 46, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 7, 13, 1, 43, tzinfo=datetime.timezone.utc), 'time_taken': 168264.0, 'time_delta': '1 day, 22:44:24', 'additions': 12, 'deletions': 6, 'state': 'closed'}]"
