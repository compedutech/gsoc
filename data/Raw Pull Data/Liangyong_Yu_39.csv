pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1086246006,Update readme.md,Just a couple of minor things.,True,1,https://api.github.com/repos/yuly16/Scala-Native-GSoC-Report/pulls/1,https://github.com/yuly16/Scala-Native-GSoC-Report/pull/1,closed,3,3,1,1,0,0,0,0,[],2022-10-13 15:08:42+00:00,2022-10-20 12:59:55+00:00,597073.0,"6 days, 21:51:13",[],"[{'commit_sha': 'be0d4a9882c2d802ebc754c7777c617d8afd6411', 'committer_username': 'ekrich', 'committer_name': 'Eric K Richardson', 'committer_email': 'ekrichardson@gmail.com', 'commit_date': datetime.datetime(2011, 7, 22, 18, 44, 43, tzinfo=datetime.timezone.utc)}]",Eric K Richardson,933058,ekrichardson@gmail.com,User,,58,,17,62
1019423809,Incremental Compilation,"Add the incremental compilation support for scala native. 

We set `package` as the granularity of the incremental compilation. In other words, in the edit-compile-run loop, we only generate the llvm code of the changed package. The llvm code of unchanged parts(e.g. most of the libraries and unchanged packages) won't be generated again.

We use the [autotest for scala-native incremental compilation](https://github.com/yuly16/incremental-compilation-autotest) to test both the correctness and performance of incremental compilation. The benchmark refers to the [scala native benchmark](https://github.com/scala-native/scala-native-benchmarks). The time cost of `nativeLink` is presented below. All binaries are tested to be correct. 

1. Compiling in the first compilation(sbt clean + sbt nativeLink), the time cost is:
![image](https://user-images.githubusercontent.com/41314695/183267965-431ab380-3210-43b6-8d18-dccc1ce9542b.png)

2. Compiling in later compilations(change a line in scala source code + sbt nativeLink), the time cost is:
![image](https://user-images.githubusercontent.com/41314695/183267957-9d18ecaa-6d09-41f6-a8e0-2762778fbfec.png)

Even if the incremental compilation adds some overhead in the first compilation, it brings significant performance improvement in later compilations. The overhead is caused by generating too many `*.ll` files. In the original version, the number of `*.ll` files equals to the number of cpu cores; when incremental compilation is applied, the number of `*.ll` files equals to the number of packages.

",True,2777,https://api.github.com/repos/scala-native/scala-native/pulls/2777,https://github.com/scala-native/scala-native/pull/2777,closed,312,16,9,20,3,43,0,0,[],2022-08-06 21:53:39+00:00,2022-09-23 11:09:22+00:00,4108543.0,"47 days, 13:15:43","[{'comment_id': 946815133, 'comment_body': '`useIncCompilation` should be moved to `NativeConfig`, we would be then able to access it without adding new argument', 'comment_created': datetime.datetime(2022, 8, 16, 13, 59, 14, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946822676, 'comment_body': ""Having an implicit null is never a good idea. Consider creating empty IncCompilationContext always, but run side-effecting methods like `collectFromPrev` explicitly on it's instance instead of making it a part of the constructor"", 'comment_created': datetime.datetime(2022, 8, 16, 14, 5, 17, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946855497, 'comment_body': 'I think we can make it more stable by usage of `Path.subPath`, it might be more safe then parsing string path, here\'s example, which could be simpler if we were allowed to use collection conventers here (it\'s not possible due to cross compilation with Scala 2.12) \r\n```suggestion\r\n      val packageName = { \r\n       val relPath = (config.workdir relativize path)\r\n       val it = relPath.subPath(0, relPath.getNameCount() - 1).iterator\r\n       // conversion from java to scala iterator\r\n       new Iterator[Path]{def hasNext() = it.hasNext(); def next() = it.next()}\r\n         .mkString(""."")\r\n```', 'comment_created': datetime.datetime(2022, 8, 16, 14, 31, 27, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946857234, 'comment_body': 'this condition can be a part of the previous one, which would eliminate additional nesting level. ', 'comment_created': datetime.datetime(2022, 8, 16, 14, 32, 46, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946861659, 'comment_body': ""I remember it's a fix for passing too many file paths to the clang compiler. It would be useful to  add a comment why are we creating this file. \r\nAs there is just a single usage we can inline it and eventually wrap into braces of `locally{...}` block to not polute namespace."", 'comment_created': datetime.datetime(2022, 8, 16, 14, 36, 23, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946863030, 'comment_body': 'Again, null implicits are bad. Remove the default value of null please', 'comment_created': datetime.datetime(2022, 8, 16, 14, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946863199, 'comment_body': 'Also this null', 'comment_created': datetime.datetime(2022, 8, 16, 14, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946866336, 'comment_body': ""release + LTO.none should still be generated to a single file (for performance reasons in non lto builds) This configuration should also be checked at earlier stages so we don't introduce any additional and not utilize overhead. In such a case a warning should also be logged for the users, to make them aware of this limitation."", 'comment_created': datetime.datetime(2022, 8, 16, 14, 40, 4, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946868919, 'comment_body': 'We can use single char split to make code simpler to read and not use regexes\r\n```suggestion\r\n              defn.name.top.id.split(\'.\').init.mkString(""."")\r\n```', 'comment_created': datetime.datetime(2022, 8, 16, 14, 42, 10, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946871478, 'comment_body': ""File also have `separator` which would allow to skip char -> string conversion\r\n```suggestion\r\n                    packageName.split('.').init.mkString(File.seperator)\r\n```"", 'comment_created': datetime.datetime(2022, 8, 16, 14, 44, 14, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946873448, 'comment_body': 'resolve also accepts String as a parameter, so we can skip pass it directory. In case of multiline method calls please use dots and braces', 'comment_created': datetime.datetime(2022, 8, 16, 14, 45, 58, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946876030, 'comment_body': 'We can use simple replace here\r\n```suggestion\r\n                val packagePath = pack.replace(""."", java.io.File.separator)\r\n```', 'comment_created': datetime.datetime(2022, 8, 16, 14, 48, 8, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946881694, 'comment_body': 'We can use path resolve + normalize to achieve the same effect\r\n```suggestion\r\n                val packagePrefix = config.workdir \r\n                 .resolve(pack.replace(""."", File.separator))\r\n                 .resolve("".."")\r\n                 .normalize\r\n```\r\n', 'comment_created': datetime.datetime(2022, 8, 16, 14, 52, 51, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959320492, 'comment_body': ""This file should not be included, it's copied to scripted tests from the javalib sources."", 'comment_created': datetime.datetime(2022, 8, 31, 8, 41, 57, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959321019, 'comment_body': 'Also the 17.8MB log file should be removed', 'comment_created': datetime.datetime(2022, 8, 31, 8, 42, 31, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959375070, 'comment_body': 'Release + LTO.None should ignore the incremental compilation flag, possibly with a warning for a user. This entry should be moved to the top, allowing to simplify other cases. \r\nThe main point of usage single for  LTO.None + release is to allow for inlining method calls by the LLVM. ', 'comment_created': datetime.datetime(2022, 8, 31, 9, 34, 58, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959376450, 'comment_body': 'All of this fields can probably be private', 'comment_created': datetime.datetime(2022, 8, 31, 9, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959377231, 'comment_body': ""We probably don't want to have it in public API\r\n```suggestion\r\nprivate[build] class IncCompilationContext {\r\n```"", 'comment_created': datetime.datetime(2022, 8, 31, 9, 37, 24, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959378585, 'comment_body': 'workDir can be passed as a constructor argument, allowing to initialize these fields and replace `var` with `val`', 'comment_created': datetime.datetime(2022, 8, 31, 9, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959379836, 'comment_body': 'If we would apply the change to initialization of paths in the constructor, then this call can be done explicitly without no longer needed initialize method', 'comment_created': datetime.datetime(2022, 8, 31, 9, 39, 57, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959380034, 'comment_body': '```suggestion\r\n  }\r\n  \r\n  def collectFromPrev(): Unit = {\r\n```', 'comment_created': datetime.datetime(2022, 8, 31, 9, 40, 12, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959385489, 'comment_body': 'What is a `prev`? I now you refer to previous compilation run, but this name is quite ambiguous.  \r\nMaybe `collectFromPreviousState` or `tryLoadPreviousState` would be more explicit', 'comment_created': datetime.datetime(2022, 8, 31, 9, 46, 5, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959388036, 'comment_body': 'Also in this case name might not be the best, maybe a simple `update` or `addEntry` would be better. If possible we can replace `pack` with `packageName` or `id`', 'comment_created': datetime.datetime(2022, 8, 31, 9, 48, 48, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959388822, 'comment_body': 'This brace is not needed. We can write `_.foreach{vev => ...}` instead of `_.foreach{vev => { ... } }`', 'comment_created': datetime.datetime(2022, 8, 31, 9, 49, 38, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959390512, 'comment_body': 'Is `replace(""\\n"", """")` really needed? Each one should contain a single line already. \r\n', 'comment_created': datetime.datetime(2022, 8, 31, 9, 51, 24, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959392411, 'comment_body': ""What if for some reason splitted line would be malformed, eg. would not contain `,`? \r\nWe should check if each line contains exactly 2 elements\r\n\r\n```\r\nvec.split(',') match {\r\n case Array(packageName, hashCodeString) => // put\r\n case _ => // ignore\r\n}"", 'comment_created': datetime.datetime(2022, 8, 31, 9, 53, 22, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959393099, 'comment_body': 'To-list conversion is probably not needed here. ', 'comment_created': datetime.datetime(2022, 8, 31, 9, 54, 3, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959393974, 'comment_body': 'If pwHash.write would fail close would be never called, this part should use try-finally block', 'comment_created': datetime.datetime(2022, 8, 31, 9, 54, 56, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959394122, 'comment_body': 'The same case below', 'comment_created': datetime.datetime(2022, 8, 31, 9, 55, 6, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959395471, 'comment_body': 'This logic should be moved to IncComilationContext, eg. to `def shouldCompile(packageName: String): Boolean` ', 'comment_created': datetime.datetime(2022, 8, 31, 9, 56, 36, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959399154, 'comment_body': 'The name for boolean variable should be a verb, instead of a noun. Probably the safest choice in this case would be `{use,enable}IncrementalCompilation` or `compileIncrementally`', 'comment_created': datetime.datetime(2022, 8, 31, 10, 0, 35, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959399744, 'comment_body': ""Let's use a full name, `seperateIncrementally`"", 'comment_created': datetime.datetime(2022, 8, 31, 10, 1, 12, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959401058, 'comment_body': 'There should be no `println` in the tests', 'comment_created': datetime.datetime(2022, 8, 31, 10, 2, 38, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959402036, 'comment_body': 'This part seems to be repeated in different tests. We can factor the common part to a helper method', 'comment_created': datetime.datetime(2022, 8, 31, 10, 3, 48, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 962338503, 'comment_body': ""package `scala.scalanative.codegen` also uses `IncCompilationContext`, so we can't make it private in package `scala.scalanative.build`"", 'comment_created': datetime.datetime(2022, 9, 4, 16, 18, 58, tzinfo=datetime.timezone.utc), 'commenter': 'yuly16', 'type': 'User'}, {'comment_id': 963492997, 'comment_body': 'Spurious change, should be reverted', 'comment_created': datetime.datetime(2022, 9, 6, 9, 40, 51, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963528473, 'comment_body': 'Can we try to move this condition to separate line to make it more readable?\r\n```suggestion\r\n      if ((isLl || !Files.exists(objPath)) && \r\n          incCompilationContext.shouldCompile(packageName)) {\r\n```', 'comment_created': datetime.datetime(2022, 9, 6, 10, 16, 22, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963530277, 'comment_body': 'I guess we can remove `use` in the setter to make it more straightforward. The getter `useIncrementalCompilation` is fine, and should not be changed\r\n```suggestion\r\n  def withIncrementalCompilation(value: Boolean): NativeConfig\r\n```', 'comment_created': datetime.datetime(2022, 9, 6, 10, 18, 26, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963535492, 'comment_body': 'We have only a single check for flag here. We can simplify the whole pattern matching expression by excluding boolean and checking it in the case block\r\n```suggestion\r\n        case (ReleaseFast | ReleaseFull, build.LTO.None) => single()\r\n        case _ => \r\n           if (config.compilerConfig.useIncrementalCompilation) seperateIncrementally()\r\n           else separate()\r\n```', 'comment_created': datetime.datetime(2022, 9, 6, 10, 24, 25, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963536162, 'comment_body': 'Spurious change in the .gitignore', 'comment_created': datetime.datetime(2022, 9, 6, 10, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963538971, 'comment_body': 'At this point, there is the last usage of incOmpilationContext. We should be able to clear the underlying maps at this point to allow for their GC. Maybe we can introduce method `clear` to the context which would be called now', 'comment_created': datetime.datetime(2022, 9, 6, 10, 28, 16, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963541618, 'comment_body': ""There's a total of 5 instantiations of `IncCompilationContext` as the default argument. I don't think it should be needed. We probably only should have a single in the `Build::build` method. If for some reason implicit argument would not available we risk losing the state loaded previously."", 'comment_created': datetime.datetime(2022, 9, 6, 10, 31, 17, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 968458567, 'comment_body': 'This parameter is never checked, can be removed', 'comment_created': datetime.datetime(2022, 9, 12, 13, 59, 40, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}]","[{'commit_sha': '48e7d6faa73fe425d4387833d9cf7431e5f21c98', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c47b67c57d0d1f312dc205f3caaf39df0ac60845', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73d34f42ee24aa7b28d9a93bc53fa7b0ec448057', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '28377a64266882f10d0e97fe3b036f67dab8f51d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cd7bf9e45ab97bf6077cbe997ac12e9f860930c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0cfaf76f907a0e0eabe8a10c20f222d7e9ebfb99', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b02e20de7d138b82874024a3e2f337c11c153e76', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '76cb9c93b536272c081a96f0facb172f591b3390', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e505614d9945c295ec290acdb6bfc27defa59118', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a6e9bdd2980f7606731997af169a0ee3808ef2a8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e5c9fd4558c7f0eddc44829532fdb219574269d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e60c49fd98b104d54191a7a693890a7bea91a077', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ba0ebbd004a77bacd81a6b02e2dd1a1620ac4bcd', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e01992bc36ab444cd772f819a83d712b7368cd22', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47435af4d599820133559ceb68e789d11639655c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '20bc4feac0be18269f86da99a8c57d78213e832b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e9cac07322c7f7fa9f2bac35356347b388af0752', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46716567997a432f3f76777c69abc2c88c8fd706', 'committer_username': 'WojciechMazur', 'committer_name': 'Wojciech Mazur', 'committer_email': 'wmazur@virtuslab.com', 'commit_date': datetime.datetime(2016, 5, 13, 21, 51, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38258ecb0bb9223edb1dcaa21f5fcee549cbc1b1', 'committer_username': 'WojciechMazur', 'committer_name': 'Wojciech Mazur', 'committer_email': 'wmazur@virtuslab.com', 'commit_date': datetime.datetime(2016, 5, 13, 21, 51, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a31e0fee383205906c32056100f91cfa6a2c1046', 'committer_username': 'WojciechMazur', 'committer_name': 'Wojciech Mazur', 'committer_email': 'wmazur@virtuslab.com', 'commit_date': datetime.datetime(2016, 5, 13, 21, 51, 33, tzinfo=datetime.timezone.utc)}]",,41314695,,User,,36,,7,5
1041642796,optimization on interflow ,"1. add a framework test. With this framework test, it is easy to debug scala native nativeLink.
2. In the interflow phase, create a unique set to avoid duplicate instances of the same `Global` in `todo`. In the previous version, for example, when using scala-native to compile `scalafmt` project, thousands of instances of the same `Global` appear in `todo` queue, which make the size of `todo` queue too large, while actually we only need to visit this `Global` once. By introducing a set `unique`, when `pushTodo` is called, we check if this `Global` has been in `unique`. If no, we visit the `Global` and push it to `unique`; else, discard this `Global`
3. In the function `advance` in `MergeProcessor`, we change the type of `todo` as SortedSet, which makes the code cleaner and avoids transforming `todo` to array and sort it when executing `advance` as the previous version.
4. Now we can set the max inline depth and max caller/callee size from `NativeConfig`. It is necessary because very large projects(e.g. scalafmt) spend too much time in inlining in releaseFull Mode. In the previous scala-native version, compiling these large projects takes several hours or even causes out of heap memory. Now the optimization phase can be done by limiting the max inline depth or max caller/callee size.

",True,2819,https://api.github.com/repos/scala-native/scala-native/pulls/2819,https://github.com/scala-native/scala-native/pull/2819,closed,205,77,9,13,11,12,0,0,[],2022-08-31 00:06:06+00:00,2022-11-07 14:20:48+00:00,5926482.0,"68 days, 14:14:42","[{'comment_id': 963553510, 'comment_body': '`inlineDepth` can probably can be a part a member of state', 'comment_created': datetime.datetime(2022, 9, 6, 10, 45, 44, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963556101, 'comment_body': 'I think this default value is a bit to big. If we would like allow to infinite number of inlines, then probably on `Option[Int]` would be a better choice. `None` would then mean unlimited', 'comment_created': datetime.datetime(2022, 9, 6, 10, 48, 44, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963558164, 'comment_body': 'Can we put them in a dedicated object, eg. `OptimizerConfig` \r\nI think we can then have \r\n```\r\ntrait NativeConfig {\r\n...\r\ndef optimizerConfig: OptimizerConfig\r\ndef withOptimizerConfig(mapping: OptimizerConfig => OptimizerConfig): NativeConfig\r\n...\r\n```\r\n\r\n', 'comment_created': datetime.datetime(2022, 9, 6, 10, 51, 10, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963559724, 'comment_body': 'With so many arguments, maybe we can make a small refactor and pass config directly to the Interflow?', 'comment_created': datetime.datetime(2022, 9, 6, 10, 52, 24, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963560911, 'comment_body': 'It probably should be immutable field with mutable collection. \r\n```suggestion\r\n  val todo = mutable.SortedSet.empty[Local](todoOrdering)\r\n```', 'comment_created': datetime.datetime(2022, 9, 6, 10, 53, 12, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963563396, 'comment_body': ""In `Inline` we define also a max size of inlined methods. Currently, it's hard coded to 8 instructions. Maybe we can also allow to tune this condition as well "", 'comment_created': datetime.datetime(2022, 9, 6, 10, 54, 58, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963564538, 'comment_body': 'If todoOrdering is not reused, maybe we can inline the Ordering defintion', 'comment_created': datetime.datetime(2022, 9, 6, 10, 55, 51, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 1006261393, 'comment_body': 'This looks like it got put on the `Config` not the `NativeConfig`.', 'comment_created': datetime.datetime(2022, 10, 26, 23, 8, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ekrich', 'type': 'User'}, {'comment_id': 1009574883, 'comment_body': ""I don't think we need a new setting as this is being added into `NativeConfig`."", 'comment_created': datetime.datetime(2022, 10, 31, 15, 46, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ekrich', 'type': 'User'}, {'comment_id': 1009576643, 'comment_body': 'This was removed in a previous PR so I think that is a rebase issue.', 'comment_created': datetime.datetime(2022, 10, 31, 15, 47, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ekrich', 'type': 'User'}, {'comment_id': 1009578123, 'comment_body': ""I don't think this line is needed at all since `OptimizerConfig.empty` is created when `NativeConfig.empty` is created."", 'comment_created': datetime.datetime(2022, 10, 31, 15, 48, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ekrich', 'type': 'User'}, {'comment_id': 1009588401, 'comment_body': 'This is more or less correct now. We only provide a `basedir` for the compiler to do everything and should not have a `workdir`. The `artifactPath` is now calculated by `NativeConfig` and not passed to `build` but returned by `build` or you can retrieve it from `NativeConfig` as well.', 'comment_created': datetime.datetime(2022, 10, 31, 15, 57, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ekrich', 'type': 'User'}]","[{'commit_sha': '98f9c49d58d11cdb2efc51fd7085d9beef448165', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '60b8b8dda2c4be932c05c4150f15deb11e691a89', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78aa4a956afd35d5c4a6c81e912db752e0823188', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '349e4b3a1032a57587e6c04a710cd8b2ff28a8a8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5bd41f2f02071667ae735c6d24f46281ea01b8be', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '701e31f7dbbdc9037d5ad44092a9c97e368ef7a5', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edb11517b5d5b1830bcc0763733899db4e90919b', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15129119b0dbbf672d974a8f45d91f97b85cf83e', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb4680c7f3788ae776ca384264388cd184060f0f', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '559c01c182ce071f05e246d87df9a057960ffd68', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bcb28b4b78d05d9d5762a49de4e833a959bdea4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '87f51e5bb920278fa16d293bc418cc3ab19a1b7f', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a97da6a15cb0b9d6982522569c9095a259a4adf', 'committer_username': 'WojciechMazur', 'committer_name': 'Wojciech Mazur', 'committer_email': 'wmazur@virtuslab.com', 'commit_date': datetime.datetime(2016, 5, 13, 21, 51, 33, tzinfo=datetime.timezone.utc)}]",,41314695,,User,,36,,7,5
1019423809,Incremental Compilation,"Add the incremental compilation support for scala native. 

We set `package` as the granularity of the incremental compilation. In other words, in the edit-compile-run loop, we only generate the llvm code of the changed package. The llvm code of unchanged parts(e.g. most of the libraries and unchanged packages) won't be generated again.

We use the [autotest for scala-native incremental compilation](https://github.com/yuly16/incremental-compilation-autotest) to test both the correctness and performance of incremental compilation. The benchmark refers to the [scala native benchmark](https://github.com/scala-native/scala-native-benchmarks). The time cost of `nativeLink` is presented below. All binaries are tested to be correct. 

1. Compiling in the first compilation(sbt clean + sbt nativeLink), the time cost is:
![image](https://user-images.githubusercontent.com/41314695/183267965-431ab380-3210-43b6-8d18-dccc1ce9542b.png)

2. Compiling in later compilations(change a line in scala source code + sbt nativeLink), the time cost is:
![image](https://user-images.githubusercontent.com/41314695/183267957-9d18ecaa-6d09-41f6-a8e0-2762778fbfec.png)

Even if the incremental compilation adds some overhead in the first compilation, it brings significant performance improvement in later compilations. The overhead is caused by generating too many `*.ll` files. In the original version, the number of `*.ll` files equals to the number of cpu cores; when incremental compilation is applied, the number of `*.ll` files equals to the number of packages.

",True,2777,https://api.github.com/repos/scala-native/scala-native/pulls/2777,https://github.com/scala-native/scala-native/pull/2777,closed,312,16,9,20,3,43,0,0,[],2022-08-06 21:53:39+00:00,2022-09-23 11:09:22+00:00,4108543.0,"47 days, 13:15:43","[{'comment_id': 946815133, 'comment_body': '`useIncCompilation` should be moved to `NativeConfig`, we would be then able to access it without adding new argument', 'comment_created': datetime.datetime(2022, 8, 16, 13, 59, 14, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946822676, 'comment_body': ""Having an implicit null is never a good idea. Consider creating empty IncCompilationContext always, but run side-effecting methods like `collectFromPrev` explicitly on it's instance instead of making it a part of the constructor"", 'comment_created': datetime.datetime(2022, 8, 16, 14, 5, 17, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946855497, 'comment_body': 'I think we can make it more stable by usage of `Path.subPath`, it might be more safe then parsing string path, here\'s example, which could be simpler if we were allowed to use collection conventers here (it\'s not possible due to cross compilation with Scala 2.12) \r\n```suggestion\r\n      val packageName = { \r\n       val relPath = (config.workdir relativize path)\r\n       val it = relPath.subPath(0, relPath.getNameCount() - 1).iterator\r\n       // conversion from java to scala iterator\r\n       new Iterator[Path]{def hasNext() = it.hasNext(); def next() = it.next()}\r\n         .mkString(""."")\r\n```', 'comment_created': datetime.datetime(2022, 8, 16, 14, 31, 27, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946857234, 'comment_body': 'this condition can be a part of the previous one, which would eliminate additional nesting level. ', 'comment_created': datetime.datetime(2022, 8, 16, 14, 32, 46, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946861659, 'comment_body': ""I remember it's a fix for passing too many file paths to the clang compiler. It would be useful to  add a comment why are we creating this file. \r\nAs there is just a single usage we can inline it and eventually wrap into braces of `locally{...}` block to not polute namespace."", 'comment_created': datetime.datetime(2022, 8, 16, 14, 36, 23, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946863030, 'comment_body': 'Again, null implicits are bad. Remove the default value of null please', 'comment_created': datetime.datetime(2022, 8, 16, 14, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946863199, 'comment_body': 'Also this null', 'comment_created': datetime.datetime(2022, 8, 16, 14, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946866336, 'comment_body': ""release + LTO.none should still be generated to a single file (for performance reasons in non lto builds) This configuration should also be checked at earlier stages so we don't introduce any additional and not utilize overhead. In such a case a warning should also be logged for the users, to make them aware of this limitation."", 'comment_created': datetime.datetime(2022, 8, 16, 14, 40, 4, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946868919, 'comment_body': 'We can use single char split to make code simpler to read and not use regexes\r\n```suggestion\r\n              defn.name.top.id.split(\'.\').init.mkString(""."")\r\n```', 'comment_created': datetime.datetime(2022, 8, 16, 14, 42, 10, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946871478, 'comment_body': ""File also have `separator` which would allow to skip char -> string conversion\r\n```suggestion\r\n                    packageName.split('.').init.mkString(File.seperator)\r\n```"", 'comment_created': datetime.datetime(2022, 8, 16, 14, 44, 14, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946873448, 'comment_body': 'resolve also accepts String as a parameter, so we can skip pass it directory. In case of multiline method calls please use dots and braces', 'comment_created': datetime.datetime(2022, 8, 16, 14, 45, 58, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946876030, 'comment_body': 'We can use simple replace here\r\n```suggestion\r\n                val packagePath = pack.replace(""."", java.io.File.separator)\r\n```', 'comment_created': datetime.datetime(2022, 8, 16, 14, 48, 8, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 946881694, 'comment_body': 'We can use path resolve + normalize to achieve the same effect\r\n```suggestion\r\n                val packagePrefix = config.workdir \r\n                 .resolve(pack.replace(""."", File.separator))\r\n                 .resolve("".."")\r\n                 .normalize\r\n```\r\n', 'comment_created': datetime.datetime(2022, 8, 16, 14, 52, 51, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959320492, 'comment_body': ""This file should not be included, it's copied to scripted tests from the javalib sources."", 'comment_created': datetime.datetime(2022, 8, 31, 8, 41, 57, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959321019, 'comment_body': 'Also the 17.8MB log file should be removed', 'comment_created': datetime.datetime(2022, 8, 31, 8, 42, 31, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959375070, 'comment_body': 'Release + LTO.None should ignore the incremental compilation flag, possibly with a warning for a user. This entry should be moved to the top, allowing to simplify other cases. \r\nThe main point of usage single for  LTO.None + release is to allow for inlining method calls by the LLVM. ', 'comment_created': datetime.datetime(2022, 8, 31, 9, 34, 58, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959376450, 'comment_body': 'All of this fields can probably be private', 'comment_created': datetime.datetime(2022, 8, 31, 9, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959377231, 'comment_body': ""We probably don't want to have it in public API\r\n```suggestion\r\nprivate[build] class IncCompilationContext {\r\n```"", 'comment_created': datetime.datetime(2022, 8, 31, 9, 37, 24, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959378585, 'comment_body': 'workDir can be passed as a constructor argument, allowing to initialize these fields and replace `var` with `val`', 'comment_created': datetime.datetime(2022, 8, 31, 9, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959379836, 'comment_body': 'If we would apply the change to initialization of paths in the constructor, then this call can be done explicitly without no longer needed initialize method', 'comment_created': datetime.datetime(2022, 8, 31, 9, 39, 57, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959380034, 'comment_body': '```suggestion\r\n  }\r\n  \r\n  def collectFromPrev(): Unit = {\r\n```', 'comment_created': datetime.datetime(2022, 8, 31, 9, 40, 12, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959385489, 'comment_body': 'What is a `prev`? I now you refer to previous compilation run, but this name is quite ambiguous.  \r\nMaybe `collectFromPreviousState` or `tryLoadPreviousState` would be more explicit', 'comment_created': datetime.datetime(2022, 8, 31, 9, 46, 5, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959388036, 'comment_body': 'Also in this case name might not be the best, maybe a simple `update` or `addEntry` would be better. If possible we can replace `pack` with `packageName` or `id`', 'comment_created': datetime.datetime(2022, 8, 31, 9, 48, 48, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959388822, 'comment_body': 'This brace is not needed. We can write `_.foreach{vev => ...}` instead of `_.foreach{vev => { ... } }`', 'comment_created': datetime.datetime(2022, 8, 31, 9, 49, 38, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959390512, 'comment_body': 'Is `replace(""\\n"", """")` really needed? Each one should contain a single line already. \r\n', 'comment_created': datetime.datetime(2022, 8, 31, 9, 51, 24, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959392411, 'comment_body': ""What if for some reason splitted line would be malformed, eg. would not contain `,`? \r\nWe should check if each line contains exactly 2 elements\r\n\r\n```\r\nvec.split(',') match {\r\n case Array(packageName, hashCodeString) => // put\r\n case _ => // ignore\r\n}"", 'comment_created': datetime.datetime(2022, 8, 31, 9, 53, 22, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959393099, 'comment_body': 'To-list conversion is probably not needed here. ', 'comment_created': datetime.datetime(2022, 8, 31, 9, 54, 3, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959393974, 'comment_body': 'If pwHash.write would fail close would be never called, this part should use try-finally block', 'comment_created': datetime.datetime(2022, 8, 31, 9, 54, 56, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959394122, 'comment_body': 'The same case below', 'comment_created': datetime.datetime(2022, 8, 31, 9, 55, 6, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959395471, 'comment_body': 'This logic should be moved to IncComilationContext, eg. to `def shouldCompile(packageName: String): Boolean` ', 'comment_created': datetime.datetime(2022, 8, 31, 9, 56, 36, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959399154, 'comment_body': 'The name for boolean variable should be a verb, instead of a noun. Probably the safest choice in this case would be `{use,enable}IncrementalCompilation` or `compileIncrementally`', 'comment_created': datetime.datetime(2022, 8, 31, 10, 0, 35, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959399744, 'comment_body': ""Let's use a full name, `seperateIncrementally`"", 'comment_created': datetime.datetime(2022, 8, 31, 10, 1, 12, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959401058, 'comment_body': 'There should be no `println` in the tests', 'comment_created': datetime.datetime(2022, 8, 31, 10, 2, 38, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 959402036, 'comment_body': 'This part seems to be repeated in different tests. We can factor the common part to a helper method', 'comment_created': datetime.datetime(2022, 8, 31, 10, 3, 48, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 962338503, 'comment_body': ""package `scala.scalanative.codegen` also uses `IncCompilationContext`, so we can't make it private in package `scala.scalanative.build`"", 'comment_created': datetime.datetime(2022, 9, 4, 16, 18, 58, tzinfo=datetime.timezone.utc), 'commenter': 'yuly16', 'type': 'User'}, {'comment_id': 963492997, 'comment_body': 'Spurious change, should be reverted', 'comment_created': datetime.datetime(2022, 9, 6, 9, 40, 51, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963528473, 'comment_body': 'Can we try to move this condition to separate line to make it more readable?\r\n```suggestion\r\n      if ((isLl || !Files.exists(objPath)) && \r\n          incCompilationContext.shouldCompile(packageName)) {\r\n```', 'comment_created': datetime.datetime(2022, 9, 6, 10, 16, 22, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963530277, 'comment_body': 'I guess we can remove `use` in the setter to make it more straightforward. The getter `useIncrementalCompilation` is fine, and should not be changed\r\n```suggestion\r\n  def withIncrementalCompilation(value: Boolean): NativeConfig\r\n```', 'comment_created': datetime.datetime(2022, 9, 6, 10, 18, 26, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963535492, 'comment_body': 'We have only a single check for flag here. We can simplify the whole pattern matching expression by excluding boolean and checking it in the case block\r\n```suggestion\r\n        case (ReleaseFast | ReleaseFull, build.LTO.None) => single()\r\n        case _ => \r\n           if (config.compilerConfig.useIncrementalCompilation) seperateIncrementally()\r\n           else separate()\r\n```', 'comment_created': datetime.datetime(2022, 9, 6, 10, 24, 25, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963536162, 'comment_body': 'Spurious change in the .gitignore', 'comment_created': datetime.datetime(2022, 9, 6, 10, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963538971, 'comment_body': 'At this point, there is the last usage of incOmpilationContext. We should be able to clear the underlying maps at this point to allow for their GC. Maybe we can introduce method `clear` to the context which would be called now', 'comment_created': datetime.datetime(2022, 9, 6, 10, 28, 16, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963541618, 'comment_body': ""There's a total of 5 instantiations of `IncCompilationContext` as the default argument. I don't think it should be needed. We probably only should have a single in the `Build::build` method. If for some reason implicit argument would not available we risk losing the state loaded previously."", 'comment_created': datetime.datetime(2022, 9, 6, 10, 31, 17, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 968458567, 'comment_body': 'This parameter is never checked, can be removed', 'comment_created': datetime.datetime(2022, 9, 12, 13, 59, 40, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}]","[{'commit_sha': '48e7d6faa73fe425d4387833d9cf7431e5f21c98', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c47b67c57d0d1f312dc205f3caaf39df0ac60845', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73d34f42ee24aa7b28d9a93bc53fa7b0ec448057', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '28377a64266882f10d0e97fe3b036f67dab8f51d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cd7bf9e45ab97bf6077cbe997ac12e9f860930c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0cfaf76f907a0e0eabe8a10c20f222d7e9ebfb99', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b02e20de7d138b82874024a3e2f337c11c153e76', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '76cb9c93b536272c081a96f0facb172f591b3390', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e505614d9945c295ec290acdb6bfc27defa59118', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a6e9bdd2980f7606731997af169a0ee3808ef2a8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e5c9fd4558c7f0eddc44829532fdb219574269d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e60c49fd98b104d54191a7a693890a7bea91a077', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ba0ebbd004a77bacd81a6b02e2dd1a1620ac4bcd', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e01992bc36ab444cd772f819a83d712b7368cd22', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47435af4d599820133559ceb68e789d11639655c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '20bc4feac0be18269f86da99a8c57d78213e832b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e9cac07322c7f7fa9f2bac35356347b388af0752', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46716567997a432f3f76777c69abc2c88c8fd706', 'committer_username': 'WojciechMazur', 'committer_name': 'Wojciech Mazur', 'committer_email': 'wmazur@virtuslab.com', 'commit_date': datetime.datetime(2016, 5, 13, 21, 51, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38258ecb0bb9223edb1dcaa21f5fcee549cbc1b1', 'committer_username': 'WojciechMazur', 'committer_name': 'Wojciech Mazur', 'committer_email': 'wmazur@virtuslab.com', 'commit_date': datetime.datetime(2016, 5, 13, 21, 51, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a31e0fee383205906c32056100f91cfa6a2c1046', 'committer_username': 'WojciechMazur', 'committer_name': 'Wojciech Mazur', 'committer_email': 'wmazur@virtuslab.com', 'commit_date': datetime.datetime(2016, 5, 13, 21, 51, 33, tzinfo=datetime.timezone.utc)}]",,41314695,,User,,36,,7,5
1041642796,optimization on interflow ,"1. add a framework test. With this framework test, it is easy to debug scala native nativeLink.
2. In the interflow phase, create a unique set to avoid duplicate instances of the same `Global` in `todo`. In the previous version, for example, when using scala-native to compile `scalafmt` project, thousands of instances of the same `Global` appear in `todo` queue, which make the size of `todo` queue too large, while actually we only need to visit this `Global` once. By introducing a set `unique`, when `pushTodo` is called, we check if this `Global` has been in `unique`. If no, we visit the `Global` and push it to `unique`; else, discard this `Global`
3. In the function `advance` in `MergeProcessor`, we change the type of `todo` as SortedSet, which makes the code cleaner and avoids transforming `todo` to array and sort it when executing `advance` as the previous version.
4. Now we can set the max inline depth and max caller/callee size from `NativeConfig`. It is necessary because very large projects(e.g. scalafmt) spend too much time in inlining in releaseFull Mode. In the previous scala-native version, compiling these large projects takes several hours or even causes out of heap memory. Now the optimization phase can be done by limiting the max inline depth or max caller/callee size.

",True,2819,https://api.github.com/repos/scala-native/scala-native/pulls/2819,https://github.com/scala-native/scala-native/pull/2819,closed,205,77,9,13,11,12,0,0,[],2022-08-31 00:06:06+00:00,2022-11-07 14:20:48+00:00,5926482.0,"68 days, 14:14:42","[{'comment_id': 963553510, 'comment_body': '`inlineDepth` can probably can be a part a member of state', 'comment_created': datetime.datetime(2022, 9, 6, 10, 45, 44, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963556101, 'comment_body': 'I think this default value is a bit to big. If we would like allow to infinite number of inlines, then probably on `Option[Int]` would be a better choice. `None` would then mean unlimited', 'comment_created': datetime.datetime(2022, 9, 6, 10, 48, 44, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963558164, 'comment_body': 'Can we put them in a dedicated object, eg. `OptimizerConfig` \r\nI think we can then have \r\n```\r\ntrait NativeConfig {\r\n...\r\ndef optimizerConfig: OptimizerConfig\r\ndef withOptimizerConfig(mapping: OptimizerConfig => OptimizerConfig): NativeConfig\r\n...\r\n```\r\n\r\n', 'comment_created': datetime.datetime(2022, 9, 6, 10, 51, 10, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963559724, 'comment_body': 'With so many arguments, maybe we can make a small refactor and pass config directly to the Interflow?', 'comment_created': datetime.datetime(2022, 9, 6, 10, 52, 24, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963560911, 'comment_body': 'It probably should be immutable field with mutable collection. \r\n```suggestion\r\n  val todo = mutable.SortedSet.empty[Local](todoOrdering)\r\n```', 'comment_created': datetime.datetime(2022, 9, 6, 10, 53, 12, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963563396, 'comment_body': ""In `Inline` we define also a max size of inlined methods. Currently, it's hard coded to 8 instructions. Maybe we can also allow to tune this condition as well "", 'comment_created': datetime.datetime(2022, 9, 6, 10, 54, 58, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963564538, 'comment_body': 'If todoOrdering is not reused, maybe we can inline the Ordering defintion', 'comment_created': datetime.datetime(2022, 9, 6, 10, 55, 51, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 1006261393, 'comment_body': 'This looks like it got put on the `Config` not the `NativeConfig`.', 'comment_created': datetime.datetime(2022, 10, 26, 23, 8, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ekrich', 'type': 'User'}, {'comment_id': 1009574883, 'comment_body': ""I don't think we need a new setting as this is being added into `NativeConfig`."", 'comment_created': datetime.datetime(2022, 10, 31, 15, 46, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ekrich', 'type': 'User'}, {'comment_id': 1009576643, 'comment_body': 'This was removed in a previous PR so I think that is a rebase issue.', 'comment_created': datetime.datetime(2022, 10, 31, 15, 47, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ekrich', 'type': 'User'}, {'comment_id': 1009578123, 'comment_body': ""I don't think this line is needed at all since `OptimizerConfig.empty` is created when `NativeConfig.empty` is created."", 'comment_created': datetime.datetime(2022, 10, 31, 15, 48, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ekrich', 'type': 'User'}, {'comment_id': 1009588401, 'comment_body': 'This is more or less correct now. We only provide a `basedir` for the compiler to do everything and should not have a `workdir`. The `artifactPath` is now calculated by `NativeConfig` and not passed to `build` but returned by `build` or you can retrieve it from `NativeConfig` as well.', 'comment_created': datetime.datetime(2022, 10, 31, 15, 57, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ekrich', 'type': 'User'}]","[{'commit_sha': '98f9c49d58d11cdb2efc51fd7085d9beef448165', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '60b8b8dda2c4be932c05c4150f15deb11e691a89', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78aa4a956afd35d5c4a6c81e912db752e0823188', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '349e4b3a1032a57587e6c04a710cd8b2ff28a8a8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5bd41f2f02071667ae735c6d24f46281ea01b8be', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '701e31f7dbbdc9037d5ad44092a9c97e368ef7a5', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edb11517b5d5b1830bcc0763733899db4e90919b', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15129119b0dbbf672d974a8f45d91f97b85cf83e', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb4680c7f3788ae776ca384264388cd184060f0f', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '559c01c182ce071f05e246d87df9a057960ffd68', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bcb28b4b78d05d9d5762a49de4e833a959bdea4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '87f51e5bb920278fa16d293bc418cc3ab19a1b7f', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a97da6a15cb0b9d6982522569c9095a259a4adf', 'committer_username': 'WojciechMazur', 'committer_name': 'Wojciech Mazur', 'committer_email': 'wmazur@virtuslab.com', 'commit_date': datetime.datetime(2016, 5, 13, 21, 51, 33, tzinfo=datetime.timezone.utc)}]",,41314695,,User,,36,,7,5
1017922261,add onType function on CollectLocalValDeps and Lower.Impl,"`CollectLocalValDeps` and `Lower.Impl` extend `transform`. However, the function `onType` in transform does nothing. Therefore we can add `override def onType(ty: Type): Type = ty` in the two classes to avoid unnecessary calculations. ",True,2772,https://api.github.com/repos/scala-native/scala-native/pulls/2772,https://github.com/scala-native/scala-native/pull/2772,closed,5,0,2,2,0,2,0,0,[],2022-08-04 19:02:05+00:00,2022-08-11 00:03:31+00:00,536486.0,"6 days, 5:01:26","[{'comment_id': 938543830, 'comment_body': ""Can you please add a small comment why are we're overriding `onType` here. It should be easier to follow up the code changes in the future. "", 'comment_created': datetime.datetime(2022, 8, 5, 7, 48, 48, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 938595556, 'comment_body': 'Okay, no problem', 'comment_created': datetime.datetime(2022, 8, 5, 8, 48, 44, tzinfo=datetime.timezone.utc), 'commenter': 'yuly16', 'type': 'User'}]","[{'commit_sha': 'c392baffd9c96ec112375f17806230decf6b0e90', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9db8c11ee9fa0d022640e5e783875d8906a9615', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",,41314695,,User,,36,,7,5
1041642796,optimization on interflow ,"1. add a framework test. With this framework test, it is easy to debug scala native nativeLink.
2. In the interflow phase, create a unique set to avoid duplicate instances of the same `Global` in `todo`. In the previous version, for example, when using scala-native to compile `scalafmt` project, thousands of instances of the same `Global` appear in `todo` queue, which make the size of `todo` queue too large, while actually we only need to visit this `Global` once. By introducing a set `unique`, when `pushTodo` is called, we check if this `Global` has been in `unique`. If no, we visit the `Global` and push it to `unique`; else, discard this `Global`
3. In the function `advance` in `MergeProcessor`, we change the type of `todo` as SortedSet, which makes the code cleaner and avoids transforming `todo` to array and sort it when executing `advance` as the previous version.
4. Now we can set the max inline depth and max caller/callee size from `NativeConfig`. It is necessary because very large projects(e.g. scalafmt) spend too much time in inlining in releaseFull Mode. In the previous scala-native version, compiling these large projects takes several hours or even causes out of heap memory. Now the optimization phase can be done by limiting the max inline depth or max caller/callee size.

",True,2819,https://api.github.com/repos/scala-native/scala-native/pulls/2819,https://github.com/scala-native/scala-native/pull/2819,closed,205,77,9,13,11,12,0,0,[],2022-08-31 00:06:06+00:00,2022-11-07 14:20:48+00:00,5926482.0,"68 days, 14:14:42","[{'comment_id': 963553510, 'comment_body': '`inlineDepth` can probably can be a part a member of state', 'comment_created': datetime.datetime(2022, 9, 6, 10, 45, 44, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963556101, 'comment_body': 'I think this default value is a bit to big. If we would like allow to infinite number of inlines, then probably on `Option[Int]` would be a better choice. `None` would then mean unlimited', 'comment_created': datetime.datetime(2022, 9, 6, 10, 48, 44, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963558164, 'comment_body': 'Can we put them in a dedicated object, eg. `OptimizerConfig` \r\nI think we can then have \r\n```\r\ntrait NativeConfig {\r\n...\r\ndef optimizerConfig: OptimizerConfig\r\ndef withOptimizerConfig(mapping: OptimizerConfig => OptimizerConfig): NativeConfig\r\n...\r\n```\r\n\r\n', 'comment_created': datetime.datetime(2022, 9, 6, 10, 51, 10, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963559724, 'comment_body': 'With so many arguments, maybe we can make a small refactor and pass config directly to the Interflow?', 'comment_created': datetime.datetime(2022, 9, 6, 10, 52, 24, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963560911, 'comment_body': 'It probably should be immutable field with mutable collection. \r\n```suggestion\r\n  val todo = mutable.SortedSet.empty[Local](todoOrdering)\r\n```', 'comment_created': datetime.datetime(2022, 9, 6, 10, 53, 12, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963563396, 'comment_body': ""In `Inline` we define also a max size of inlined methods. Currently, it's hard coded to 8 instructions. Maybe we can also allow to tune this condition as well "", 'comment_created': datetime.datetime(2022, 9, 6, 10, 54, 58, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 963564538, 'comment_body': 'If todoOrdering is not reused, maybe we can inline the Ordering defintion', 'comment_created': datetime.datetime(2022, 9, 6, 10, 55, 51, tzinfo=datetime.timezone.utc), 'commenter': 'WojciechMazur', 'type': 'User'}, {'comment_id': 1006261393, 'comment_body': 'This looks like it got put on the `Config` not the `NativeConfig`.', 'comment_created': datetime.datetime(2022, 10, 26, 23, 8, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ekrich', 'type': 'User'}, {'comment_id': 1009574883, 'comment_body': ""I don't think we need a new setting as this is being added into `NativeConfig`."", 'comment_created': datetime.datetime(2022, 10, 31, 15, 46, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ekrich', 'type': 'User'}, {'comment_id': 1009576643, 'comment_body': 'This was removed in a previous PR so I think that is a rebase issue.', 'comment_created': datetime.datetime(2022, 10, 31, 15, 47, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ekrich', 'type': 'User'}, {'comment_id': 1009578123, 'comment_body': ""I don't think this line is needed at all since `OptimizerConfig.empty` is created when `NativeConfig.empty` is created."", 'comment_created': datetime.datetime(2022, 10, 31, 15, 48, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ekrich', 'type': 'User'}, {'comment_id': 1009588401, 'comment_body': 'This is more or less correct now. We only provide a `basedir` for the compiler to do everything and should not have a `workdir`. The `artifactPath` is now calculated by `NativeConfig` and not passed to `build` but returned by `build` or you can retrieve it from `NativeConfig` as well.', 'comment_created': datetime.datetime(2022, 10, 31, 15, 57, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ekrich', 'type': 'User'}]","[{'commit_sha': '98f9c49d58d11cdb2efc51fd7085d9beef448165', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '60b8b8dda2c4be932c05c4150f15deb11e691a89', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78aa4a956afd35d5c4a6c81e912db752e0823188', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '349e4b3a1032a57587e6c04a710cd8b2ff28a8a8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5bd41f2f02071667ae735c6d24f46281ea01b8be', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '701e31f7dbbdc9037d5ad44092a9c97e368ef7a5', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edb11517b5d5b1830bcc0763733899db4e90919b', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15129119b0dbbf672d974a8f45d91f97b85cf83e', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb4680c7f3788ae776ca384264388cd184060f0f', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '559c01c182ce071f05e246d87df9a057960ffd68', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bcb28b4b78d05d9d5762a49de4e833a959bdea4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '87f51e5bb920278fa16d293bc418cc3ab19a1b7f', 'committer_username': 'yuly16', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 7, 17, 3, 16, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a97da6a15cb0b9d6982522569c9095a259a4adf', 'committer_username': 'WojciechMazur', 'committer_name': 'Wojciech Mazur', 'committer_email': 'wmazur@virtuslab.com', 'commit_date': datetime.datetime(2016, 5, 13, 21, 51, 33, tzinfo=datetime.timezone.utc)}]",,41314695,,User,,36,,7,5

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
533539682,Scala-Native-GSoC-Report,yuly16/Scala-Native-GSoC-Report,,1,4,1,2,11,0,1,0,"[{'id': 1086246006, 'number': 1, 'closed': datetime.datetime(2022, 10, 20, 12, 59, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 13, 15, 8, 42, tzinfo=datetime.timezone.utc), 'time_taken': 597073.0, 'time_delta': '6 days, 21:51:13', 'additions': 3, 'deletions': 3, 'state': 'closed'}]"
27235687,scala-native,scala-native/scala-native,Scala,363,4469,132,152,2667,284,3,34,"[{'id': 2012806977, 'number': 4020, 'closed': datetime.datetime(2024, 8, 16, 9, 41, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 9, 17, 43, 51, tzinfo=datetime.timezone.utc), 'time_taken': 575875.0, 'time_delta': '6 days, 15:57:55', 'additions': 19, 'deletions': 9, 'state': 'closed'}, {'id': 1827727073, 'number': 3882, 'closed': None, 'created': datetime.datetime(2024, 4, 17, 15, 47, 24, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 5, 'deletions': 4, 'state': 'open'}, {'id': 1810272142, 'number': 3866, 'closed': None, 'created': datetime.datetime(2024, 4, 6, 4, 50, 34, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 2, 'deletions': 1, 'state': 'open'}, {'id': 1763715219, 'number': 3821, 'closed': datetime.datetime(2024, 3, 24, 13, 8, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 8, 22, 5, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1350191.0, 'time_delta': '15 days, 15:03:11', 'additions': 27, 'deletions': 9, 'state': 'closed'}, {'id': 1730389215, 'number': 3777, 'closed': datetime.datetime(2024, 2, 17, 0, 52, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 16, 22, 20, 59, tzinfo=datetime.timezone.utc), 'time_taken': 9107.0, 'time_delta': '2:31:47', 'additions': 74, 'deletions': 73, 'state': 'closed'}, {'id': 1682161895, 'number': 3685, 'closed': datetime.datetime(2024, 1, 17, 16, 43, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 17, 2, 26, 4, tzinfo=datetime.timezone.utc), 'time_taken': 51450.0, 'time_delta': '14:17:30', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1679927764, 'number': 3678, 'closed': datetime.datetime(2024, 1, 17, 0, 13, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 15, 23, 19, 48, tzinfo=datetime.timezone.utc), 'time_taken': 89622.0, 'time_delta': '1 day, 0:53:42', 'additions': 10, 'deletions': 0, 'state': 'closed'}, {'id': 1548441947, 'number': 3557, 'closed': datetime.datetime(2023, 10, 10, 8, 32, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 9, 20, 7, 48, tzinfo=datetime.timezone.utc), 'time_taken': 44657.0, 'time_delta': '12:24:17', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1521748343, 'number': 3490, 'closed': datetime.datetime(2023, 9, 20, 8, 7, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 19, 17, 43, 53, tzinfo=datetime.timezone.utc), 'time_taken': 51802.0, 'time_delta': '14:23:22', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 1494086817, 'number': 3463, 'closed': datetime.datetime(2023, 8, 30, 11, 33, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 29, 16, 35, 18, tzinfo=datetime.timezone.utc), 'time_taken': 68264.0, 'time_delta': '18:57:44', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 1492960895, 'number': 3462, 'closed': datetime.datetime(2023, 8, 29, 7, 7, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 29, 2, 8, 14, tzinfo=datetime.timezone.utc), 'time_taken': 17984.0, 'time_delta': '4:59:44', 'additions': 92, 'deletions': 87, 'state': 'closed'}, {'id': 1492355693, 'number': 3461, 'closed': datetime.datetime(2023, 8, 29, 4, 40, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 28, 16, 18, 22, tzinfo=datetime.timezone.utc), 'time_taken': 44535.0, 'time_delta': '12:22:15', 'additions': 2, 'deletions': 3, 'state': 'closed'}, {'id': 1479630964, 'number': 3437, 'closed': datetime.datetime(2023, 10, 9, 17, 49, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 17, 20, 25, 11, tzinfo=datetime.timezone.utc), 'time_taken': 4569852.0, 'time_delta': '52 days, 21:24:12', 'additions': 444, 'deletions': 118, 'state': 'closed'}, {'id': 1478166062, 'number': 3436, 'closed': datetime.datetime(2023, 8, 17, 19, 12, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 16, 23, 3, 14, tzinfo=datetime.timezone.utc), 'time_taken': 72564.0, 'time_delta': '20:09:24', 'additions': 115, 'deletions': 14, 'state': 'closed'}, {'id': 1435401770, 'number': 3389, 'closed': datetime.datetime(2023, 10, 9, 15, 56, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 14, 20, 47, 36, tzinfo=datetime.timezone.utc), 'time_taken': 7499326.0, 'time_delta': '86 days, 19:08:46', 'additions': 331, 'deletions': 106, 'state': 'closed'}, {'id': 1426452194, 'number': 3381, 'closed': datetime.datetime(2023, 7, 10, 14, 34, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 9, 21, 52, 58, tzinfo=datetime.timezone.utc), 'time_taken': 60078.0, 'time_delta': '16:41:18', 'additions': 4, 'deletions': 5, 'state': 'closed'}, {'id': 1415052659, 'number': 3364, 'closed': datetime.datetime(2023, 7, 3, 13, 13, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 30, 15, 44, 56, tzinfo=datetime.timezone.utc), 'time_taken': 250116.0, 'time_delta': '2 days, 21:28:36', 'additions': 37, 'deletions': 0, 'state': 'closed'}, {'id': 1379925352, 'number': 3314, 'closed': datetime.datetime(2023, 6, 30, 14, 29, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 5, 23, 39, 7, tzinfo=datetime.timezone.utc), 'time_taken': 2126994.0, 'time_delta': '24 days, 14:49:54', 'additions': 379, 'deletions': 196, 'state': 'closed'}, {'id': 1348949132, 'number': 3283, 'closed': datetime.datetime(2023, 5, 18, 16, 17, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 12, 16, 47, 26, tzinfo=datetime.timezone.utc), 'time_taken': 516584.0, 'time_delta': '5 days, 23:29:44', 'additions': 82, 'deletions': 47, 'state': 'closed'}, {'id': 1340547865, 'number': 3274, 'closed': datetime.datetime(2023, 5, 6, 13, 36, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 6, 1, 31, 28, tzinfo=datetime.timezone.utc), 'time_taken': 43512.0, 'time_delta': '12:05:12', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 1336935663, 'number': 3267, 'closed': datetime.datetime(2023, 5, 3, 16, 21, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 3, 15, 41, 4, tzinfo=datetime.timezone.utc), 'time_taken': 2436.0, 'time_delta': '0:40:36', 'additions': 101, 'deletions': 57, 'state': 'closed'}, {'id': 1283373237, 'number': 3233, 'closed': datetime.datetime(2023, 8, 25, 16, 38, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 20, 22, 14, 46, tzinfo=datetime.timezone.utc), 'time_taken': 13631014.0, 'time_delta': '157 days, 18:23:34', 'additions': 372, 'deletions': 143, 'state': 'closed'}, {'id': 1279330808, 'number': 3227, 'closed': datetime.datetime(2023, 3, 17, 8, 58, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 16, 21, 20, 59, tzinfo=datetime.timezone.utc), 'time_taken': 41853.0, 'time_delta': '11:37:33', 'additions': 4, 'deletions': 18, 'state': 'closed'}, {'id': 1235942844, 'number': 3152, 'closed': datetime.datetime(2023, 3, 10, 15, 38, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 10, 1, 4, 24, tzinfo=datetime.timezone.utc), 'time_taken': 2471630.0, 'time_delta': '28 days, 14:33:50', 'additions': 154, 'deletions': 213, 'state': 'closed'}, {'id': 1224068881, 'number': 3125, 'closed': datetime.datetime(2023, 2, 9, 17, 3, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 1, 0, 22, 20, tzinfo=datetime.timezone.utc), 'time_taken': 751243.0, 'time_delta': '8 days, 16:40:43', 'additions': 462, 'deletions': 275, 'state': 'closed'}, {'id': 1217334205, 'number': 3110, 'closed': datetime.datetime(2023, 3, 3, 21, 31, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 26, 1, 56, 50, tzinfo=datetime.timezone.utc), 'time_taken': 3180882.0, 'time_delta': '36 days, 19:34:42', 'additions': 324, 'deletions': 216, 'state': 'closed'}, {'id': 1199693385, 'number': 3097, 'closed': datetime.datetime(2023, 1, 19, 10, 57, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 17, 3, 8, 30, tzinfo=datetime.timezone.utc), 'time_taken': 200930.0, 'time_delta': '2 days, 7:48:50', 'additions': 444, 'deletions': 667, 'state': 'closed'}, {'id': 1163330305, 'number': 3035, 'closed': datetime.datetime(2023, 1, 26, 11, 27, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 13, 16, 19, 19, tzinfo=datetime.timezone.utc), 'time_taken': 3784115.0, 'time_delta': '43 days, 19:08:35', 'additions': 77, 'deletions': 90, 'state': 'closed'}, {'id': 1149817561, 'number': 3028, 'closed': datetime.datetime(2022, 12, 13, 9, 28, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 6, 19, 54, 6, tzinfo=datetime.timezone.utc), 'time_taken': 567253.0, 'time_delta': '6 days, 13:34:13', 'additions': 61, 'deletions': 2927, 'state': 'closed'}, {'id': 1120655998, 'number': 2996, 'closed': datetime.datetime(2022, 11, 17, 15, 26, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 14, 2, 20, 49, tzinfo=datetime.timezone.utc), 'time_taken': 306357.0, 'time_delta': '3 days, 13:05:57', 'additions': 170, 'deletions': 86, 'state': 'closed'}, {'id': 1106124920, 'number': 2968, 'closed': datetime.datetime(2022, 11, 1, 21, 19, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 1, 1, 42, 15, tzinfo=datetime.timezone.utc), 'time_taken': 70649.0, 'time_delta': '19:37:29', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 1102371163, 'number': 2951, 'closed': datetime.datetime(2022, 10, 28, 8, 57, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 28, 0, 10, 42, tzinfo=datetime.timezone.utc), 'time_taken': 31632.0, 'time_delta': '8:47:12', 'additions': 9, 'deletions': 3, 'state': 'closed'}, {'id': 1099630883, 'number': 2942, 'closed': datetime.datetime(2022, 10, 29, 20, 30, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 26, 0, 55, 43, tzinfo=datetime.timezone.utc), 'time_taken': 329716.0, 'time_delta': '3 days, 19:35:16', 'additions': 182, 'deletions': 370, 'state': 'closed'}, {'id': 1088606567, 'number': 2910, 'closed': datetime.datetime(2022, 10, 17, 8, 28, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 17, 1, 39, 21, tzinfo=datetime.timezone.utc), 'time_taken': 24545.0, 'time_delta': '6:49:05', 'additions': 78, 'deletions': 3, 'state': 'closed'}, {'id': 1080646470, 'number': 2887, 'closed': datetime.datetime(2022, 10, 14, 15, 45, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 7, 17, 51, 55, tzinfo=datetime.timezone.utc), 'time_taken': 597224.0, 'time_delta': '6 days, 21:53:44', 'additions': 797, 'deletions': 595, 'state': 'closed'}, {'id': 1064638560, 'number': 2862, 'closed': datetime.datetime(2022, 9, 28, 22, 9, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 22, 20, 46, 1, tzinfo=datetime.timezone.utc), 'time_taken': 523392.0, 'time_delta': '6 days, 1:23:12', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1063530050, 'number': 2859, 'closed': datetime.datetime(2022, 10, 10, 18, 34, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 22, 1, 39, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1616120.0, 'time_delta': '18 days, 16:55:20', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1062201059, 'number': 2856, 'closed': datetime.datetime(2022, 9, 22, 17, 42, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 21, 0, 24, 8, tzinfo=datetime.timezone.utc), 'time_taken': 148726.0, 'time_delta': '1 day, 17:18:46', 'additions': 5, 'deletions': 10, 'state': 'closed'}, {'id': 1041778001, 'number': 2820, 'closed': datetime.datetime(2022, 8, 31, 11, 52, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 31, 2, 5, 13, tzinfo=datetime.timezone.utc), 'time_taken': 35227.0, 'time_delta': '9:47:07', 'additions': 3, 'deletions': 8, 'state': 'closed'}, {'id': 1028099627, 'number': 2788, 'closed': datetime.datetime(2022, 10, 17, 8, 32, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 16, 21, 34, 26, tzinfo=datetime.timezone.utc), 'time_taken': 5309909.0, 'time_delta': '61 days, 10:58:29', 'additions': 144, 'deletions': 50, 'state': 'closed'}, {'id': 1018108072, 'number': 2773, 'closed': datetime.datetime(2022, 9, 22, 17, 58, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 4, 23, 43, 26, tzinfo=datetime.timezone.utc), 'time_taken': 4212904.0, 'time_delta': '48 days, 18:15:04', 'additions': 9, 'deletions': 3, 'state': 'closed'}, {'id': 1006092359, 'number': 2744, 'closed': datetime.datetime(2022, 8, 2, 22, 1, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 22, 19, 25, 36, tzinfo=datetime.timezone.utc), 'time_taken': 959751.0, 'time_delta': '11 days, 2:35:51', 'additions': 25, 'deletions': 12, 'state': 'closed'}, {'id': 998467670, 'number': 2732, 'closed': datetime.datetime(2022, 7, 18, 12, 57, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 16, 17, 30, 9, tzinfo=datetime.timezone.utc), 'time_taken': 156422.0, 'time_delta': '1 day, 19:27:02', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 984443209, 'number': 2704, 'closed': datetime.datetime(2022, 7, 18, 18, 3, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 1, 2, 8, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1526100.0, 'time_delta': '17 days, 15:55:00', 'additions': 140, 'deletions': 37, 'state': 'closed'}, {'id': 977742172, 'number': 2686, 'closed': datetime.datetime(2022, 6, 24, 9, 9, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 23, 23, 36, 29, tzinfo=datetime.timezone.utc), 'time_taken': 34385.0, 'time_delta': '9:33:05', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 913656240, 'number': 2605, 'closed': datetime.datetime(2022, 10, 21, 20, 54, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 20, 0, 18, 33, tzinfo=datetime.timezone.utc), 'time_taken': 15971770.0, 'time_delta': '184 days, 20:36:10', 'additions': 187, 'deletions': 105, 'state': 'closed'}, {'id': 883866658, 'number': 2596, 'closed': datetime.datetime(2022, 3, 26, 10, 15, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 19, 0, 4, 36, tzinfo=datetime.timezone.utc), 'time_taken': 641439.0, 'time_delta': '7 days, 10:10:39', 'additions': 242, 'deletions': 7, 'state': 'closed'}, {'id': 879551024, 'number': 2593, 'closed': datetime.datetime(2022, 3, 16, 21, 18, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 14, 21, 41, 51, tzinfo=datetime.timezone.utc), 'time_taken': 171377.0, 'time_delta': '1 day, 23:36:17', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 877949654, 'number': 2589, 'closed': datetime.datetime(2022, 3, 12, 19, 34, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 12, 0, 0, 38, tzinfo=datetime.timezone.utc), 'time_taken': 70423.0, 'time_delta': '19:33:43', 'additions': 28, 'deletions': 33, 'state': 'closed'}, {'id': 869926518, 'number': 2582, 'closed': datetime.datetime(2022, 3, 3, 9, 7, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 2, 20, 3, 45, tzinfo=datetime.timezone.utc), 'time_taken': 47018.0, 'time_delta': '13:03:38', 'additions': 14, 'deletions': 11, 'state': 'closed'}, {'id': 835565996, 'number': 2548, 'closed': datetime.datetime(2022, 2, 1, 11, 41, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 30, 23, 42, 16, tzinfo=datetime.timezone.utc), 'time_taken': 129528.0, 'time_delta': '1 day, 11:58:48', 'additions': 3, 'deletions': 66, 'state': 'closed'}, {'id': 818994365, 'number': 2527, 'closed': datetime.datetime(2022, 2, 1, 11, 42, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 11, 18, 37, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1789485.0, 'time_delta': '20 days, 17:04:45', 'additions': 172, 'deletions': 166, 'state': 'closed'}, {'id': 817779549, 'number': 2522, 'closed': datetime.datetime(2022, 1, 10, 18, 14, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 10, 16, 14, 3, tzinfo=datetime.timezone.utc), 'time_taken': 7244.0, 'time_delta': '2:00:44', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 815154135, 'number': 2508, 'closed': datetime.datetime(2022, 1, 10, 16, 51, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 6, 1, 17, 22, tzinfo=datetime.timezone.utc), 'time_taken': 401650.0, 'time_delta': '4 days, 15:34:10', 'additions': 54, 'deletions': 0, 'state': 'closed'}, {'id': 799469227, 'number': 2455, 'closed': datetime.datetime(2021, 12, 10, 12, 6, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 10, 1, 43, 38, tzinfo=datetime.timezone.utc), 'time_taken': 37350.0, 'time_delta': '10:22:30', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 797434867, 'number': 2451, 'closed': datetime.datetime(2021, 12, 8, 14, 33, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 8, 2, 40, 43, tzinfo=datetime.timezone.utc), 'time_taken': 42780.0, 'time_delta': '11:53:00', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 797427566, 'number': 2450, 'closed': datetime.datetime(2021, 12, 9, 11, 14, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 8, 2, 22, 38, tzinfo=datetime.timezone.utc), 'time_taken': 118302.0, 'time_delta': '1 day, 8:51:42', 'additions': 104, 'deletions': 23, 'state': 'closed'}, {'id': 793228581, 'number': 2442, 'closed': datetime.datetime(2021, 12, 2, 8, 37, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 2, 0, 35, 44, tzinfo=datetime.timezone.utc), 'time_taken': 28894.0, 'time_delta': '8:01:34', 'additions': 6, 'deletions': 19, 'state': 'closed'}, {'id': 768849197, 'number': 2425, 'closed': datetime.datetime(2021, 11, 10, 10, 56, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 29, 2, 22, 32, tzinfo=datetime.timezone.utc), 'time_taken': 1067639.0, 'time_delta': '12 days, 8:33:59', 'additions': 3171, 'deletions': 533, 'state': 'closed'}, {'id': 764970693, 'number': 2423, 'closed': datetime.datetime(2021, 10, 26, 14, 22, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 24, 23, 39, 17, tzinfo=datetime.timezone.utc), 'time_taken': 139421.0, 'time_delta': '1 day, 14:43:41', 'additions': 13, 'deletions': 3, 'state': 'closed'}, {'id': 763392327, 'number': 2416, 'closed': datetime.datetime(2021, 10, 21, 15, 40, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 21, 15, 23, 29, tzinfo=datetime.timezone.utc), 'time_taken': 1015.0, 'time_delta': '0:16:55', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 750009348, 'number': 2404, 'closed': datetime.datetime(2021, 10, 5, 17, 11, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 5, 15, 47, 47, tzinfo=datetime.timezone.utc), 'time_taken': 5049.0, 'time_delta': '1:24:09', 'additions': 21, 'deletions': 11, 'state': 'closed'}, {'id': 739873749, 'number': 2380, 'closed': datetime.datetime(2023, 3, 3, 21, 41, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 22, 1, 2, 44, tzinfo=datetime.timezone.utc), 'time_taken': 45607155.0, 'time_delta': '527 days, 20:39:15', 'additions': 97, 'deletions': 20, 'state': 'closed'}, {'id': 716975838, 'number': 2350, 'closed': datetime.datetime(2021, 8, 22, 9, 23, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 20, 20, 16, 2, tzinfo=datetime.timezone.utc), 'time_taken': 133645.0, 'time_delta': '1 day, 13:07:25', 'additions': 20, 'deletions': 3, 'state': 'closed'}, {'id': 705795088, 'number': 2342, 'closed': datetime.datetime(2021, 8, 9, 12, 23, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 6, 23, 30, 29, tzinfo=datetime.timezone.utc), 'time_taken': 219161.0, 'time_delta': '2 days, 12:52:41', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 705548295, 'number': 2341, 'closed': datetime.datetime(2021, 8, 9, 12, 33, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 6, 14, 56, 21, tzinfo=datetime.timezone.utc), 'time_taken': 250612.0, 'time_delta': '2 days, 21:36:52', 'additions': 40, 'deletions': 27, 'state': 'closed'}, {'id': 693886275, 'number': 2334, 'closed': datetime.datetime(2021, 7, 29, 13, 17, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 20, 21, 55, 55, tzinfo=datetime.timezone.utc), 'time_taken': 746518.0, 'time_delta': '8 days, 15:21:58', 'additions': 80, 'deletions': 15, 'state': 'closed'}, {'id': 672082599, 'number': 2325, 'closed': datetime.datetime(2023, 3, 3, 21, 27, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 17, 1, 39, 54, tzinfo=datetime.timezone.utc), 'time_taken': 53984885.0, 'time_delta': '624 days, 19:48:05', 'additions': 169, 'deletions': 40, 'state': 'closed'}, {'id': 653082747, 'number': 2315, 'closed': datetime.datetime(2021, 7, 8, 8, 43, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 26, 2, 17, 17, tzinfo=datetime.timezone.utc), 'time_taken': 3738387.0, 'time_delta': '43 days, 6:26:27', 'additions': 42687, 'deletions': 34420, 'state': 'closed'}, {'id': 649579907, 'number': 2308, 'closed': datetime.datetime(2021, 5, 21, 22, 21, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 21, 1, 4, 9, tzinfo=datetime.timezone.utc), 'time_taken': 76668.0, 'time_delta': '21:17:48', 'additions': 104, 'deletions': 111, 'state': 'closed'}, {'id': 649527712, 'number': 2307, 'closed': datetime.datetime(2021, 5, 21, 16, 53, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 20, 22, 51, 8, tzinfo=datetime.timezone.utc), 'time_taken': 64938.0, 'time_delta': '18:02:18', 'additions': 45, 'deletions': 49, 'state': 'closed'}, {'id': 648226685, 'number': 2306, 'closed': datetime.datetime(2021, 5, 21, 23, 46, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 20, 0, 13, 8, tzinfo=datetime.timezone.utc), 'time_taken': 171185.0, 'time_delta': '1 day, 23:33:05', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 645943188, 'number': 2298, 'closed': datetime.datetime(2021, 5, 17, 16, 23, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 17, 15, 4, 8, tzinfo=datetime.timezone.utc), 'time_taken': 4736.0, 'time_delta': '1:18:56', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 614061875, 'number': 2256, 'closed': datetime.datetime(2021, 4, 29, 15, 48, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 13, 1, 48, 14, tzinfo=datetime.timezone.utc), 'time_taken': 1432839.0, 'time_delta': '16 days, 14:00:39', 'additions': 13, 'deletions': 1, 'state': 'closed'}, {'id': 607746872, 'number': 2240, 'closed': datetime.datetime(2021, 4, 8, 10, 29, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 2, 0, 46, 18, tzinfo=datetime.timezone.utc), 'time_taken': 553370.0, 'time_delta': '6 days, 9:42:50', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 604816720, 'number': 2234, 'closed': datetime.datetime(2021, 4, 29, 14, 0, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 31, 2, 15, 43, tzinfo=datetime.timezone.utc), 'time_taken': 2547907.0, 'time_delta': '29 days, 11:45:07', 'additions': 275, 'deletions': 281, 'state': 'closed'}, {'id': 602974816, 'number': 2231, 'closed': datetime.datetime(2021, 4, 21, 10, 12, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 29, 17, 40, 21, tzinfo=datetime.timezone.utc), 'time_taken': 1960357.0, 'time_delta': '22 days, 16:32:37', 'additions': 40, 'deletions': 12, 'state': 'closed'}, {'id': 592648498, 'number': 2201, 'closed': datetime.datetime(2021, 3, 15, 19, 0, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 15, 0, 9, 3, tzinfo=datetime.timezone.utc), 'time_taken': 67876.0, 'time_delta': '18:51:16', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 582499341, 'number': 2185, 'closed': datetime.datetime(2021, 3, 2, 21, 32, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 1, 22, 57, 34, tzinfo=datetime.timezone.utc), 'time_taken': 81296.0, 'time_delta': '22:34:56', 'additions': 27, 'deletions': 14, 'state': 'closed'}, {'id': 579720399, 'number': 2177, 'closed': datetime.datetime(2021, 2, 25, 11, 49, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 25, 1, 23, 59, tzinfo=datetime.timezone.utc), 'time_taken': 37534.0, 'time_delta': '10:25:34', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 573946622, 'number': 2159, 'closed': datetime.datetime(2021, 2, 18, 15, 34, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 16, 5, 56, 7, tzinfo=datetime.timezone.utc), 'time_taken': 207479.0, 'time_delta': '2 days, 9:37:59', 'additions': 330, 'deletions': 294, 'state': 'closed'}, {'id': 549840632, 'number': 2103, 'closed': datetime.datetime(2021, 5, 5, 12, 10, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 6, 2, 42, 30, tzinfo=datetime.timezone.utc), 'time_taken': 10315653.0, 'time_delta': '119 days, 9:27:33', 'additions': 75, 'deletions': 57, 'state': 'closed'}, {'id': 548540050, 'number': 2101, 'closed': datetime.datetime(2021, 1, 6, 19, 22, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 4, 23, 49, 23, tzinfo=datetime.timezone.utc), 'time_taken': 156762.0, 'time_delta': '1 day, 19:32:42', 'additions': 7, 'deletions': 13, 'state': 'closed'}, {'id': 547975830, 'number': 2099, 'closed': datetime.datetime(2021, 1, 13, 15, 7, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 4, 2, 9, 45, tzinfo=datetime.timezone.utc), 'time_taken': 824243.0, 'time_delta': '9 days, 12:57:23', 'additions': 67, 'deletions': 82, 'state': 'closed'}, {'id': 546655477, 'number': 2097, 'closed': datetime.datetime(2021, 1, 13, 15, 17, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 29, 22, 13, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1271032.0, 'time_delta': '14 days, 17:03:52', 'additions': 9711, 'deletions': 9627, 'state': 'closed'}, {'id': 526201298, 'number': 2033, 'closed': datetime.datetime(2020, 12, 23, 20, 58, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 24, 6, 10, 23, tzinfo=datetime.timezone.utc), 'time_taken': 2558876.0, 'time_delta': '29 days, 14:47:56', 'additions': 161, 'deletions': 161, 'state': 'closed'}, {'id': 523592875, 'number': 2023, 'closed': datetime.datetime(2020, 11, 29, 17, 41, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 19, 0, 20, 48, tzinfo=datetime.timezone.utc), 'time_taken': 926437.0, 'time_delta': '10 days, 17:20:37', 'additions': 12, 'deletions': 22, 'state': 'closed'}, {'id': 518128629, 'number': 1989, 'closed': datetime.datetime(2020, 11, 16, 19, 7, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 10, 0, 33, 45, tzinfo=datetime.timezone.utc), 'time_taken': 585218.0, 'time_delta': '6 days, 18:33:38', 'additions': 2990, 'deletions': 2624, 'state': 'closed'}, {'id': 516976892, 'number': 1987, 'closed': datetime.datetime(2020, 11, 9, 9, 10, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 6, 20, 59, 19, tzinfo=datetime.timezone.utc), 'time_taken': 216679.0, 'time_delta': '2 days, 12:11:19', 'additions': 37, 'deletions': 16, 'state': 'closed'}, {'id': 513601612, 'number': 1978, 'closed': datetime.datetime(2020, 11, 9, 21, 18, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 1, 11, 9, 40, tzinfo=datetime.timezone.utc), 'time_taken': 727736.0, 'time_delta': '8 days, 10:08:56', 'additions': 2302, 'deletions': 2234, 'state': 'closed'}, {'id': 508691890, 'number': 1970, 'closed': datetime.datetime(2020, 10, 28, 3, 51, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 23, 4, 11, 53, tzinfo=datetime.timezone.utc), 'time_taken': 430759.0, 'time_delta': '4 days, 23:39:19', 'additions': 2537, 'deletions': 2522, 'state': 'closed'}, {'id': 507156257, 'number': 1959, 'closed': datetime.datetime(2020, 10, 21, 1, 50, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 20, 23, 39, 14, tzinfo=datetime.timezone.utc), 'time_taken': 7877.0, 'time_delta': '2:11:17', 'additions': 765, 'deletions': 841, 'state': 'closed'}, {'id': 506057631, 'number': 1955, 'closed': datetime.datetime(2020, 10, 20, 14, 49, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 19, 15, 6, 20, tzinfo=datetime.timezone.utc), 'time_taken': 85369.0, 'time_delta': '23:42:49', 'additions': 1970, 'deletions': 1884, 'state': 'closed'}, {'id': 505512330, 'number': 1954, 'closed': datetime.datetime(2020, 10, 19, 15, 50, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 18, 17, 51, 2, tzinfo=datetime.timezone.utc), 'time_taken': 79186.0, 'time_delta': '21:59:46', 'additions': 898, 'deletions': 856, 'state': 'closed'}, {'id': 500003701, 'number': 1932, 'closed': datetime.datetime(2020, 10, 17, 2, 9, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 8, 15, 20, 28, tzinfo=datetime.timezone.utc), 'time_taken': 730136.0, 'time_delta': '8 days, 10:48:56', 'additions': 4468, 'deletions': 4517, 'state': 'closed'}, {'id': 499363562, 'number': 1923, 'closed': datetime.datetime(2020, 10, 8, 17, 45, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 7, 16, 11, 1, tzinfo=datetime.timezone.utc), 'time_taken': 92058.0, 'time_delta': '1 day, 1:34:18', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 496453134, 'number': 1911, 'closed': datetime.datetime(2020, 10, 15, 12, 46, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 1, 18, 9, 42, tzinfo=datetime.timezone.utc), 'time_taken': 1190181.0, 'time_delta': '13 days, 18:36:21', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 493458969, 'number': 1905, 'closed': datetime.datetime(2020, 12, 8, 3, 6, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 26, 1, 11, 37, tzinfo=datetime.timezone.utc), 'time_taken': 6314109.0, 'time_delta': '73 days, 1:55:09', 'additions': 27, 'deletions': 16, 'state': 'closed'}, {'id': 491226882, 'number': 1902, 'closed': datetime.datetime(2020, 9, 22, 22, 33, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 22, 22, 26, 53, tzinfo=datetime.timezone.utc), 'time_taken': 420.0, 'time_delta': '0:07:00', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 483165006, 'number': 1892, 'closed': datetime.datetime(2020, 9, 30, 4, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 9, 22, 6, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1750678.0, 'time_delta': '20 days, 6:17:58', 'additions': 97, 'deletions': 86, 'state': 'closed'}, {'id': 482985326, 'number': 1891, 'closed': datetime.datetime(2020, 9, 9, 21, 54, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 9, 16, 48, 38, tzinfo=datetime.timezone.utc), 'time_taken': 18332.0, 'time_delta': '5:05:32', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 475708036, 'number': 1885, 'closed': datetime.datetime(2020, 10, 19, 15, 41, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 29, 2, 42, 2, tzinfo=datetime.timezone.utc), 'time_taken': 4453194.0, 'time_delta': '51 days, 12:59:54', 'additions': 296, 'deletions': 232, 'state': 'closed'}, {'id': 471827135, 'number': 1882, 'closed': datetime.datetime(2020, 8, 21, 21, 37, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 21, 19, 49, 42, tzinfo=datetime.timezone.utc), 'time_taken': 6469.0, 'time_delta': '1:47:49', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 468248087, 'number': 1876, 'closed': datetime.datetime(2020, 8, 28, 7, 23, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 15, 2, 27, 19, tzinfo=datetime.timezone.utc), 'time_taken': 1140972.0, 'time_delta': '13 days, 4:56:12', 'additions': 162, 'deletions': 44, 'state': 'closed'}, {'id': 466980782, 'number': 1875, 'closed': datetime.datetime(2020, 8, 18, 13, 57, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 12, 20, 7, 42, tzinfo=datetime.timezone.utc), 'time_taken': 496189.0, 'time_delta': '5 days, 17:49:49', 'additions': 118, 'deletions': 128, 'state': 'closed'}, {'id': 465086097, 'number': 1872, 'closed': datetime.datetime(2020, 8, 9, 7, 40, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 8, 23, 40, 13, tzinfo=datetime.timezone.utc), 'time_taken': 28842.0, 'time_delta': '8:00:42', 'additions': 210, 'deletions': 13, 'state': 'closed'}, {'id': 433282750, 'number': 1821, 'closed': datetime.datetime(2020, 6, 12, 2, 4, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 11, 19, 21, 42, tzinfo=datetime.timezone.utc), 'time_taken': 24173.0, 'time_delta': '6:42:53', 'additions': 12, 'deletions': 0, 'state': 'closed'}, {'id': 432109213, 'number': 1820, 'closed': datetime.datetime(2020, 6, 27, 0, 52, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 9, 23, 4, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1475311.0, 'time_delta': '17 days, 1:48:31', 'additions': 342, 'deletions': 109, 'state': 'closed'}, {'id': 419045129, 'number': 1806, 'closed': datetime.datetime(2020, 5, 19, 9, 12, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 17, 1, 13, 53, tzinfo=datetime.timezone.utc), 'time_taken': 201535.0, 'time_delta': '2 days, 7:58:55', 'additions': 74, 'deletions': 65, 'state': 'closed'}, {'id': 418310560, 'number': 1800, 'closed': datetime.datetime(2020, 5, 15, 6, 7, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 15, 0, 22, 40, tzinfo=datetime.timezone.utc), 'time_taken': 20699.0, 'time_delta': '5:44:59', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 416844771, 'number': 1797, 'closed': datetime.datetime(2020, 5, 12, 18, 2, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 12, 16, 45, 6, tzinfo=datetime.timezone.utc), 'time_taken': 4631.0, 'time_delta': '1:17:11', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 415763184, 'number': 1789, 'closed': datetime.datetime(2021, 2, 15, 17, 30, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 10, 18, 44, 32, tzinfo=datetime.timezone.utc), 'time_taken': 24273957.0, 'time_delta': '280 days, 22:45:57', 'additions': 289, 'deletions': 257, 'state': 'closed'}, {'id': 414408994, 'number': 1775, 'closed': datetime.datetime(2020, 5, 7, 22, 9, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 7, 1, 15, 12, tzinfo=datetime.timezone.utc), 'time_taken': 75255.0, 'time_delta': '20:54:15', 'additions': 47, 'deletions': 27, 'state': 'closed'}, {'id': 401453892, 'number': 1756, 'closed': datetime.datetime(2020, 4, 9, 17, 38, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 9, 14, 22, 24, tzinfo=datetime.timezone.utc), 'time_taken': 11791.0, 'time_delta': '3:16:31', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 400308541, 'number': 1751, 'closed': datetime.datetime(2020, 4, 9, 15, 4, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 7, 14, 36, 52, tzinfo=datetime.timezone.utc), 'time_taken': 174472.0, 'time_delta': '2 days, 0:27:52', 'additions': 18, 'deletions': 7, 'state': 'closed'}, {'id': 369359239, 'number': 1724, 'closed': datetime.datetime(2020, 1, 31, 15, 23, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 31, 0, 48, 14, tzinfo=datetime.timezone.utc), 'time_taken': 52538.0, 'time_delta': '14:35:38', 'additions': 10, 'deletions': 6, 'state': 'closed'}, {'id': 335547065, 'number': 1715, 'closed': datetime.datetime(2020, 1, 25, 10, 38, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 11, 1, 18, 3, 15, tzinfo=datetime.timezone.utc), 'time_taken': 7317327.0, 'time_delta': '84 days, 16:35:27', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 335014912, 'number': 1714, 'closed': datetime.datetime(2020, 4, 27, 20, 26, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 31, 16, 32, 28, tzinfo=datetime.timezone.utc), 'time_taken': 15479625.0, 'time_delta': '179 days, 3:53:45', 'additions': 1069, 'deletions': 1137, 'state': 'closed'}, {'id': 331706548, 'number': 1712, 'closed': datetime.datetime(2020, 2, 3, 15, 7, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 23, 19, 27, 6, tzinfo=datetime.timezone.utc), 'time_taken': 8883635.0, 'time_delta': '102 days, 19:40:35', 'additions': 87, 'deletions': 189, 'state': 'closed'}, {'id': 302270236, 'number': 1675, 'closed': datetime.datetime(2020, 6, 9, 0, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 29, 23, 18, 5, tzinfo=datetime.timezone.utc), 'time_taken': 27221215.0, 'time_delta': '315 days, 1:26:55', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 298705911, 'number': 1653, 'closed': datetime.datetime(2020, 8, 8, 22, 14, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 17, 23, 31, 7, tzinfo=datetime.timezone.utc), 'time_taken': 33518578.0, 'time_delta': '387 days, 22:42:58', 'additions': 933, 'deletions': 63, 'state': 'closed'}, {'id': 296307176, 'number': 1649, 'closed': datetime.datetime(2019, 7, 25, 11, 59, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 10, 19, 16, 54, tzinfo=datetime.timezone.utc), 'time_taken': 1269737.0, 'time_delta': '14 days, 16:42:17', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 292185550, 'number': 1637, 'closed': datetime.datetime(2020, 8, 8, 14, 41, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 26, 22, 41, 58, tzinfo=datetime.timezone.utc), 'time_taken': 35308775.0, 'time_delta': '408 days, 15:59:35', 'additions': 383, 'deletions': 94, 'state': 'closed'}, {'id': 285154583, 'number': 1617, 'closed': datetime.datetime(2019, 6, 5, 9, 28, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 4, 21, 40, 28, tzinfo=datetime.timezone.utc), 'time_taken': 42453.0, 'time_delta': '11:47:33', 'additions': 16, 'deletions': 39, 'state': 'closed'}, {'id': 283081745, 'number': 1611, 'closed': datetime.datetime(2019, 7, 18, 14, 56, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 5, 29, 3, 40, 55, tzinfo=datetime.timezone.utc), 'time_taken': 4360520.0, 'time_delta': '50 days, 11:15:20', 'additions': 161, 'deletions': 263, 'state': 'closed'}, {'id': 281831382, 'number': 1605, 'closed': datetime.datetime(2019, 5, 24, 9, 59, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 5, 24, 0, 48, 48, tzinfo=datetime.timezone.utc), 'time_taken': 33069.0, 'time_delta': '9:11:09', 'additions': 13, 'deletions': 0, 'state': 'closed'}, {'id': 281808156, 'number': 1604, 'closed': datetime.datetime(2019, 5, 24, 10, 3, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 5, 23, 22, 37, 10, tzinfo=datetime.timezone.utc), 'time_taken': 41190.0, 'time_delta': '11:26:30', 'additions': 50, 'deletions': 3, 'state': 'closed'}, {'id': 273608170, 'number': 1567, 'closed': datetime.datetime(2019, 4, 26, 12, 35, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 4, 25, 17, 1, 39, tzinfo=datetime.timezone.utc), 'time_taken': 70410.0, 'time_delta': '19:33:30', 'additions': 9, 'deletions': 0, 'state': 'closed'}, {'id': 273579512, 'number': 1566, 'closed': datetime.datetime(2019, 4, 25, 16, 36, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 4, 25, 15, 39, 1, tzinfo=datetime.timezone.utc), 'time_taken': 3436.0, 'time_delta': '0:57:16', 'additions': 9, 'deletions': 0, 'state': 'closed'}, {'id': 273303587, 'number': 1562, 'closed': datetime.datetime(2019, 4, 25, 16, 37, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 4, 24, 21, 19, 41, tzinfo=datetime.timezone.utc), 'time_taken': 69456.0, 'time_delta': '19:17:36', 'additions': 95, 'deletions': 3, 'state': 'closed'}, {'id': 273263634, 'number': 1561, 'closed': datetime.datetime(2019, 4, 24, 21, 23, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 4, 24, 19, 11, 41, tzinfo=datetime.timezone.utc), 'time_taken': 7899.0, 'time_delta': '2:11:39', 'additions': 18, 'deletions': 10, 'state': 'closed'}, {'id': 263365502, 'number': 1494, 'closed': datetime.datetime(2019, 3, 22, 10, 10, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 3, 21, 19, 1, 19, tzinfo=datetime.timezone.utc), 'time_taken': 54554.0, 'time_delta': '15:09:14', 'additions': 15, 'deletions': 1, 'state': 'closed'}, {'id': 263312226, 'number': 1492, 'closed': datetime.datetime(2019, 3, 21, 18, 35, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 3, 21, 16, 32, 3, tzinfo=datetime.timezone.utc), 'time_taken': 7384.0, 'time_delta': '2:03:04', 'additions': 15, 'deletions': 1, 'state': 'closed'}, {'id': 263281802, 'number': 1490, 'closed': datetime.datetime(2019, 3, 21, 18, 30, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 3, 21, 15, 21, 37, tzinfo=datetime.timezone.utc), 'time_taken': 11326.0, 'time_delta': '3:08:46', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 263274251, 'number': 1489, 'closed': datetime.datetime(2019, 3, 21, 16, 6, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 3, 21, 15, 4, 40, tzinfo=datetime.timezone.utc), 'time_taken': 3719.0, 'time_delta': '1:01:59', 'additions': 245, 'deletions': 1, 'state': 'closed'}, {'id': 263265504, 'number': 1488, 'closed': datetime.datetime(2019, 3, 21, 16, 6, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 3, 21, 14, 45, 19, tzinfo=datetime.timezone.utc), 'time_taken': 4847.0, 'time_delta': '1:20:47', 'additions': 82, 'deletions': 3, 'state': 'closed'}, {'id': 262905056, 'number': 1478, 'closed': datetime.datetime(2019, 3, 21, 11, 22, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 3, 20, 15, 3, 43, tzinfo=datetime.timezone.utc), 'time_taken': 73125.0, 'time_delta': '20:18:45', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 262653056, 'number': 1474, 'closed': datetime.datetime(2019, 3, 20, 15, 45, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 3, 19, 22, 20, 45, tzinfo=datetime.timezone.utc), 'time_taken': 62668.0, 'time_delta': '17:24:28', 'additions': 158, 'deletions': 5, 'state': 'closed'}, {'id': 262144121, 'number': 1467, 'closed': datetime.datetime(2019, 3, 20, 9, 53, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 3, 18, 16, 58, 20, tzinfo=datetime.timezone.utc), 'time_taken': 147301.0, 'time_delta': '1 day, 16:55:01', 'additions': 245, 'deletions': 1, 'state': 'closed'}, {'id': 262124361, 'number': 1466, 'closed': datetime.datetime(2019, 3, 20, 9, 51, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 3, 18, 16, 9, 54, tzinfo=datetime.timezone.utc), 'time_taken': 150106.0, 'time_delta': '1 day, 17:41:46', 'additions': 82, 'deletions': 3, 'state': 'closed'}, {'id': 259638548, 'number': 1452, 'closed': datetime.datetime(2019, 3, 19, 12, 19, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 3, 8, 23, 28, 42, tzinfo=datetime.timezone.utc), 'time_taken': 910270.0, 'time_delta': '10 days, 12:51:10', 'additions': 166, 'deletions': 5, 'state': 'closed'}, {'id': 247050643, 'number': 1425, 'closed': datetime.datetime(2019, 3, 8, 22, 40, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 1, 23, 17, 18, 24, tzinfo=datetime.timezone.utc), 'time_taken': 3820927.0, 'time_delta': '44 days, 5:22:07', 'additions': 166, 'deletions': 5, 'state': 'closed'}, {'id': 244868023, 'number': 1419, 'closed': datetime.datetime(2019, 2, 11, 12, 43, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 1, 15, 16, 59, 48, tzinfo=datetime.timezone.utc), 'time_taken': 2317440.0, 'time_delta': '26 days, 19:44:00', 'additions': 10, 'deletions': 8, 'state': 'closed'}, {'id': 243467081, 'number': 1417, 'closed': datetime.datetime(2019, 2, 6, 12, 18, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 1, 9, 20, 12, 41, tzinfo=datetime.timezone.utc), 'time_taken': 2390723.0, 'time_delta': '27 days, 16:05:23', 'additions': 10, 'deletions': 0, 'state': 'closed'}, {'id': 226614504, 'number': 1375, 'closed': datetime.datetime(2018, 10, 30, 14, 21, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 10, 29, 15, 52, 40, tzinfo=datetime.timezone.utc), 'time_taken': 80910.0, 'time_delta': '22:28:30', 'additions': 16, 'deletions': 16, 'state': 'closed'}, {'id': 218977251, 'number': 1362, 'closed': datetime.datetime(2021, 5, 6, 13, 39, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 9, 28, 13, 57, 53, tzinfo=datetime.timezone.utc), 'time_taken': 82165307.0, 'time_delta': '950 days, 23:41:47', 'additions': 513, 'deletions': 14, 'state': 'closed'}, {'id': 211911094, 'number': 1332, 'closed': datetime.datetime(2018, 9, 10, 12, 7, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 8, 29, 22, 59, 47, tzinfo=datetime.timezone.utc), 'time_taken': 997653.0, 'time_delta': '11 days, 13:07:33', 'additions': 22, 'deletions': 8, 'state': 'closed'}, {'id': 199587664, 'number': 1264, 'closed': datetime.datetime(2018, 11, 6, 21, 1, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 7, 5, 21, 7, 27, tzinfo=datetime.timezone.utc), 'time_taken': 10713216.0, 'time_delta': '123 days, 23:53:36', 'additions': 764, 'deletions': 1, 'state': 'closed'}, {'id': 185242992, 'number': 1238, 'closed': datetime.datetime(2018, 7, 10, 13, 47, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 5, 1, 18, 34, 21, tzinfo=datetime.timezone.utc), 'time_taken': 6030772.0, 'time_delta': '69 days, 19:12:52', 'additions': 11, 'deletions': 11, 'state': 'closed'}, {'id': 176175749, 'number': 1196, 'closed': datetime.datetime(2018, 3, 22, 14, 2, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 3, 20, 12, 33, 58, tzinfo=datetime.timezone.utc), 'time_taken': 178083.0, 'time_delta': '2 days, 1:28:03', 'additions': 400, 'deletions': 1, 'state': 'closed'}, {'id': 165127515, 'number': 1152, 'closed': datetime.datetime(2018, 2, 7, 12, 41, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 1, 25, 14, 8, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1117968.0, 'time_delta': '12 days, 22:32:48', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 164967340, 'number': 1151, 'closed': datetime.datetime(2018, 2, 7, 12, 42, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 1, 24, 21, 27, 57, tzinfo=datetime.timezone.utc), 'time_taken': 1178080.0, 'time_delta': '13 days, 15:14:40', 'additions': 12, 'deletions': 1, 'state': 'closed'}, {'id': 164139992, 'number': 1149, 'closed': datetime.datetime(2018, 1, 21, 10, 41, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 1, 20, 18, 43, 14, tzinfo=datetime.timezone.utc), 'time_taken': 57525.0, 'time_delta': '15:58:45', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 157968644, 'number': 1117, 'closed': datetime.datetime(2018, 2, 7, 13, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 12, 12, 23, 41, 7, tzinfo=datetime.timezone.utc), 'time_taken': 4887773.0, 'time_delta': '56 days, 13:42:53', 'additions': 217, 'deletions': 40, 'state': 'closed'}, {'id': 151750585, 'number': 1075, 'closed': datetime.datetime(2017, 11, 27, 20, 38, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 11, 9, 20, 10, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1556896.0, 'time_delta': '18 days, 0:28:16', 'additions': 38, 'deletions': 35, 'state': 'closed'}, {'id': 146907639, 'number': 1059, 'closed': datetime.datetime(2018, 2, 12, 15, 16, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 10, 16, 22, 57, 14, tzinfo=datetime.timezone.utc), 'time_taken': 10253953.0, 'time_delta': '118 days, 16:19:13', 'additions': 112, 'deletions': 24, 'state': 'closed'}, {'id': 145004362, 'number': 1053, 'closed': datetime.datetime(2017, 10, 10, 9, 46, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 10, 5, 19, 46, 48, tzinfo=datetime.timezone.utc), 'time_taken': 395982.0, 'time_delta': '4 days, 13:59:42', 'additions': 10, 'deletions': 5, 'state': 'closed'}, {'id': 144756104, 'number': 1051, 'closed': datetime.datetime(2017, 10, 5, 11, 43, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 10, 4, 19, 33, 35, tzinfo=datetime.timezone.utc), 'time_taken': 58213.0, 'time_delta': '16:10:13', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 143931191, 'number': 1041, 'closed': datetime.datetime(2017, 12, 12, 23, 42, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 9, 29, 16, 41, 55, tzinfo=datetime.timezone.utc), 'time_taken': 6418844.0, 'time_delta': '74 days, 7:00:44', 'additions': 55, 'deletions': 18, 'state': 'closed'}, {'id': 143131627, 'number': 1034, 'closed': datetime.datetime(2017, 9, 27, 13, 29, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 9, 26, 13, 16, 32, tzinfo=datetime.timezone.utc), 'time_taken': 87192.0, 'time_delta': '1 day, 0:13:12', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 143122486, 'number': 1033, 'closed': datetime.datetime(2017, 9, 26, 12, 37, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 9, 26, 12, 37, 1, tzinfo=datetime.timezone.utc), 'time_taken': 29.0, 'time_delta': '0:00:29', 'additions': 14, 'deletions': 3, 'state': 'closed'}, {'id': 142575243, 'number': 1026, 'closed': datetime.datetime(2017, 11, 5, 11, 38, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 9, 22, 13, 8, 2, tzinfo=datetime.timezone.utc), 'time_taken': 3796247.0, 'time_delta': '43 days, 22:30:47', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 142152832, 'number': 1022, 'closed': datetime.datetime(2017, 9, 21, 14, 14, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 9, 20, 17, 3, 33, tzinfo=datetime.timezone.utc), 'time_taken': 76273.0, 'time_delta': '21:11:13', 'additions': 9, 'deletions': 3, 'state': 'closed'}, {'id': 138737232, 'number': 993, 'closed': datetime.datetime(2017, 9, 1, 12, 27, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 8, 31, 18, 36, 39, tzinfo=datetime.timezone.utc), 'time_taken': 64244.0, 'time_delta': '17:50:44', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 138546542, 'number': 984, 'closed': datetime.datetime(2017, 8, 31, 8, 48, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 8, 30, 22, 53, 24, tzinfo=datetime.timezone.utc), 'time_taken': 35733.0, 'time_delta': '9:55:33', 'additions': 9, 'deletions': 5, 'state': 'closed'}, {'id': 127305171, 'number': 868, 'closed': datetime.datetime(2017, 6, 27, 15, 0, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 6, 23, 23, 31, 53, tzinfo=datetime.timezone.utc), 'time_taken': 314919.0, 'time_delta': '3 days, 15:28:39', 'additions': 23, 'deletions': 22, 'state': 'closed'}, {'id': 125807601, 'number': 838, 'closed': datetime.datetime(2017, 6, 21, 14, 29, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 6, 15, 12, 13, 9, tzinfo=datetime.timezone.utc), 'time_taken': 526556.0, 'time_delta': '6 days, 2:15:56', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 125593697, 'number': 832, 'closed': datetime.datetime(2017, 6, 14, 13, 48, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 6, 14, 13, 20, 20, tzinfo=datetime.timezone.utc), 'time_taken': 1669.0, 'time_delta': '0:27:49', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 125588012, 'number': 831, 'closed': datetime.datetime(2017, 6, 14, 13, 15, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 6, 14, 12, 53, 49, tzinfo=datetime.timezone.utc), 'time_taken': 1306.0, 'time_delta': '0:21:46', 'additions': 777, 'deletions': 0, 'state': 'closed'}, {'id': 121171339, 'number': 722, 'closed': datetime.datetime(2017, 8, 7, 10, 51, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 5, 17, 23, 11, 36, tzinfo=datetime.timezone.utc), 'time_taken': 7040400.0, 'time_delta': '81 days, 11:40:00', 'additions': 888, 'deletions': 0, 'state': 'closed'}, {'id': 119454763, 'number': 713, 'closed': datetime.datetime(2017, 5, 9, 9, 29, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 5, 8, 14, 2, 48, tzinfo=datetime.timezone.utc), 'time_taken': 70028.0, 'time_delta': '19:27:08', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 119223249, 'number': 702, 'closed': datetime.datetime(2017, 5, 16, 18, 45, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 5, 5, 17, 35, 45, tzinfo=datetime.timezone.utc), 'time_taken': 954575.0, 'time_delta': '11 days, 1:09:35', 'additions': 82, 'deletions': 13, 'state': 'closed'}, {'id': 118620947, 'number': 690, 'closed': datetime.datetime(2017, 5, 3, 21, 57, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 5, 2, 18, 50, 5, tzinfo=datetime.timezone.utc), 'time_taken': 97655.0, 'time_delta': '1 day, 3:07:35', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 113834042, 'number': 602, 'closed': datetime.datetime(2017, 4, 11, 12, 52, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 4, 2, 20, 41, 54, tzinfo=datetime.timezone.utc), 'time_taken': 749420.0, 'time_delta': '8 days, 16:10:20', 'additions': 125, 'deletions': 16, 'state': 'closed'}, {'id': 111557594, 'number': 573, 'closed': datetime.datetime(2017, 4, 3, 8, 33, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 3, 20, 13, 57, 13, tzinfo=datetime.timezone.utc), 'time_taken': 1190148.0, 'time_delta': '13 days, 18:35:48', 'additions': 228, 'deletions': 8, 'state': 'closed'}, {'id': 102959488, 'number': 498, 'closed': datetime.datetime(2017, 2, 4, 20, 43, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 1, 24, 16, 56, 59, tzinfo=datetime.timezone.utc), 'time_taken': 963976.0, 'time_delta': '11 days, 3:46:16', 'additions': 384, 'deletions': 4, 'state': 'closed'}]"
