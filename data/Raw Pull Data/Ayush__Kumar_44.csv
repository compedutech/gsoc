pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
978664443,feat: operationalize controllers,"- controllers fully functional
- refactor codebase to make use of FOCA v0.9.0 and remove boilerplate accordingly
- add integration tests
- include linting and integration tests in CI",True,71,https://api.github.com/repos/elixir-cloud-aai/proTES/pulls/71,https://github.com/elixir-cloud-aai/proTES/pull/71,closed,2726,2540,49,20,1,28,0,2,[],2022-06-24 19:40:23+00:00,2022-07-25 18:42:41+00:00,2674938.0,"30 days, 23:02:18","[{'comment_id': 912976118, 'comment_body': ""This is an instance where you can't just copy the WES behavior. TES tasks have their own model for representing an entire task, which is `TesTask`. It has all the properties in here plus others. And `request` isn't a formal property, as TES (unfortunately) makes no distrinction between the schemas/models used for `POST`ing a new task and `GET`ting information about a completed task. E.g., `id` is supposed to be assigned by the server and should _NOT_ be part of the request to `POST` (but rather be part of its response). Likewise, `logs` and `state` aren't expected to be provided by the user `POST`ing a task request, obviously, even if the specs (again, unfortunately) do not explicitly mention it (unlike for `id` where the description says so).\r\n\r\nSo since `TesTask` is already defined, you can delete this model.\r\n\r\n"", 'comment_created': datetime.datetime(2022, 7, 4, 12, 54, 8, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912978486, 'comment_body': 'Rename `run_log` to `task_log` and make it an instance of `TesTask`.', 'comment_created': datetime.datetime(2022, 7, 4, 12, 56, 47, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912978943, 'comment_body': 'Name the database `taskStore` instead.', 'comment_created': datetime.datetime(2022, 7, 4, 12, 57, 17, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912979813, 'comment_body': ""This won't be needed for TES, so please remove the comment and set `validate_responses` to `True`"", 'comment_created': datetime.datetime(2022, 7, 4, 12, 58, 16, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912980700, 'comment_body': 'Not quite sure if storage is actually needed. In WES it is only needed to download file attachments coming in with a workflow run request. But file attachments are not possible with TES.', 'comment_created': datetime.datetime(2022, 7, 4, 12, 59, 18, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912981062, 'comment_body': 'Replace with `list_tasks`', 'comment_created': datetime.datetime(2022, 7, 4, 12, 59, 41, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912982332, 'comment_body': 'Please indicate the exact commit hash (short form of 7 letters) in the file name, exactly like in proWES. And just to be clear: please do never edit this file manually. It should be _exactly_ identical to the file on the TES repo, for the indicated commit.', 'comment_created': datetime.datetime(2022, 7, 4, 13, 1, 5, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912984306, 'comment_body': ""Please remove the commented line. Generally, please don't leave old code in the codebase. If we want old code we can go back in the commit history. One of the beauties of Git ;-)"", 'comment_created': datetime.datetime(2022, 7, 4, 13, 3, 24, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912984923, 'comment_body': 'We may not need data. See comment below.', 'comment_created': datetime.datetime(2022, 7, 4, 13, 4, 11, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912985604, 'comment_body': ""Might as well try to use a newer version of Python if it doesn't break in too many places. Try `3.10` ideally."", 'comment_created': datetime.datetime(2022, 7, 4, 13, 5, 1, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912988180, 'comment_body': ""This will not be relevant to TES. Make sure you only keep definitions of exceptions that you are actually using in your controllers. If you need exceptions that aren't in here, define them and add them to the list of exceptions below (and pick the most appropriate status code for them).\r\n\r\nThis applies to most exceptions here."", 'comment_created': datetime.datetime(2022, 7, 4, 13, 7, 31, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912990362, 'comment_body': 'We are dealing with tasks here, so use `db_client_tasks`. Also update the description accordingly.', 'comment_created': datetime.datetime(2022, 7, 4, 13, 9, 46, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912990545, 'comment_body': 'Add a newline at the end of the file', 'comment_created': datetime.datetime(2022, 7, 4, 13, 9, 58, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912991738, 'comment_body': 'Please use the [latest version of FOCA](https://github.com/elixir-cloud-aai/foca/releases/tag/v0.9.0) and adapt your codebase accordingly.', 'comment_created': datetime.datetime(2022, 7, 4, 13, 11, 18, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912991885, 'comment_body': 'Please delete empty line', 'comment_created': datetime.datetime(2022, 7, 4, 13, 11, 31, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912993475, 'comment_body': 'These will probably have to be adapter for TES vs WES. At least with respect to names, e.g., in line 86, but probably in multiple places', 'comment_created': datetime.datetime(2022, 7, 4, 13, 13, 28, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912994485, 'comment_body': ""Please search in the entire codebase for `run`. Most likely all of them have to be replaced with `task` instead.\r\n\r\nDidn't review this very well. Please provide integration tests first (as in proWES)."", 'comment_created': datetime.datetime(2022, 7, 4, 13, 14, 40, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 920507468, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 13, 20, 57, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Ayush5120', 'type': 'User'}, {'comment_id': 920507603, 'comment_body': 'done.', 'comment_created': datetime.datetime(2022, 7, 13, 20, 57, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Ayush5120', 'type': 'User'}, {'comment_id': 920508231, 'comment_body': 'Discussed in slack.', 'comment_created': datetime.datetime(2022, 7, 13, 20, 58, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Ayush5120', 'type': 'User'}, {'comment_id': 923096202, 'comment_body': 'Please add a comment why this is set to `False` (similar to the comment in pro-WES). You can refer to this issue: https://github.com/ga4gh/task-execution-schemas/issues/136', 'comment_created': datetime.datetime(2022, 7, 18, 8, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 923097718, 'comment_body': 'Guess for consistency, accuracy and semantics, `list_tasks` would make more sense than `list_task`.', 'comment_created': datetime.datetime(2022, 7, 18, 8, 40, 45, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 923100555, 'comment_body': 'Good to use FOCA image instead, but did you try with a 3.10, 3.9 or 3.8 version of FOCA instead of 3.7?', 'comment_created': datetime.datetime(2022, 7, 18, 8, 44, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 923102623, 'comment_body': 'The latest version is 0.9.0', 'comment_created': datetime.datetime(2022, 7, 18, 8, 46, 10, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 923110000, 'comment_body': 'Tests look good as far as I can see. Please include them in GitHub Actions.\r\n\r\nAlso, it seems that there are no tests for service info and canceling tests. Please add them as well.', 'comment_created': datetime.datetime(2022, 7, 18, 8, 54, 23, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 926447068, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 21, 9, 14, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Ayush5120', 'type': 'User'}, {'comment_id': 926455620, 'comment_body': ""Yes, I have tried all versions and updated the image to '3.10'. "", 'comment_created': datetime.datetime(2022, 7, 21, 9, 22, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Ayush5120', 'type': 'User'}, {'comment_id': 926461297, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 21, 9, 28, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Ayush5120', 'type': 'User'}]","[{'commit_sha': '43eac3aa298bdfb9a0910050504e570384d75d5d', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bfc80169a68d360baf5bb054c5c6976a1d326da', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1853d949e860817f76ce9267d255b58049463bfe', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '477995eada23b3da8f431dbcd9a7f1a5c639f5ae', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '164a951ecec244dbe764d32a7ab2b7ad6559eb14', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f771b8de2dd541d9c57072a4c5d36fcd52f1b7aa', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5c146411a0d4f563513d88beca8b9faa3f48ee1', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd74fb4c9bb2576d8c2e3f7b34ce6f251fa6ac515', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd05fddb4d1f3bda367caa9883e339fa7bd062344', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f587a00d4004f1c926cf0d2bf903bc172e9d81e5', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b3fa9b46a41a61bb80ab1b7cfe42813e3814299', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3589b86084b76c8aa0260964273b31a3153da235', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65fa294a19d26f786e5e24d0f160942d297c93f0', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd51bb30f236a07b0ca7c305c2a3b5764aaa18c04', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02fbcbd0e9e84b0e613d3ba05705e3f1e314fe39', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb1a165bbc8be3b14ab2bc26c927fd2f8eb4914b', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5823f3a6a4c04decae3707c22b21825114e38ede', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56b6de3bdb380ca8c4187bfe7039a0ff9f2a55a2', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56568471a19a64ab4233884c69044d7e772887db', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32a27bf6dc866afed5c33a83ac65f7b2254bd6b1', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}]",Ayush Kumar,64720666,,User,,12,,2,1
978664443,feat: operationalize controllers,"- controllers fully functional
- refactor codebase to make use of FOCA v0.9.0 and remove boilerplate accordingly
- add integration tests
- include linting and integration tests in CI",True,71,https://api.github.com/repos/elixir-cloud-aai/proTES/pulls/71,https://github.com/elixir-cloud-aai/proTES/pull/71,closed,2726,2540,49,20,1,28,0,2,[],2022-06-24 19:40:23+00:00,2022-07-25 18:42:41+00:00,2674938.0,"30 days, 23:02:18","[{'comment_id': 912976118, 'comment_body': ""This is an instance where you can't just copy the WES behavior. TES tasks have their own model for representing an entire task, which is `TesTask`. It has all the properties in here plus others. And `request` isn't a formal property, as TES (unfortunately) makes no distrinction between the schemas/models used for `POST`ing a new task and `GET`ting information about a completed task. E.g., `id` is supposed to be assigned by the server and should _NOT_ be part of the request to `POST` (but rather be part of its response). Likewise, `logs` and `state` aren't expected to be provided by the user `POST`ing a task request, obviously, even if the specs (again, unfortunately) do not explicitly mention it (unlike for `id` where the description says so).\r\n\r\nSo since `TesTask` is already defined, you can delete this model.\r\n\r\n"", 'comment_created': datetime.datetime(2022, 7, 4, 12, 54, 8, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912978486, 'comment_body': 'Rename `run_log` to `task_log` and make it an instance of `TesTask`.', 'comment_created': datetime.datetime(2022, 7, 4, 12, 56, 47, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912978943, 'comment_body': 'Name the database `taskStore` instead.', 'comment_created': datetime.datetime(2022, 7, 4, 12, 57, 17, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912979813, 'comment_body': ""This won't be needed for TES, so please remove the comment and set `validate_responses` to `True`"", 'comment_created': datetime.datetime(2022, 7, 4, 12, 58, 16, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912980700, 'comment_body': 'Not quite sure if storage is actually needed. In WES it is only needed to download file attachments coming in with a workflow run request. But file attachments are not possible with TES.', 'comment_created': datetime.datetime(2022, 7, 4, 12, 59, 18, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912981062, 'comment_body': 'Replace with `list_tasks`', 'comment_created': datetime.datetime(2022, 7, 4, 12, 59, 41, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912982332, 'comment_body': 'Please indicate the exact commit hash (short form of 7 letters) in the file name, exactly like in proWES. And just to be clear: please do never edit this file manually. It should be _exactly_ identical to the file on the TES repo, for the indicated commit.', 'comment_created': datetime.datetime(2022, 7, 4, 13, 1, 5, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912984306, 'comment_body': ""Please remove the commented line. Generally, please don't leave old code in the codebase. If we want old code we can go back in the commit history. One of the beauties of Git ;-)"", 'comment_created': datetime.datetime(2022, 7, 4, 13, 3, 24, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912984923, 'comment_body': 'We may not need data. See comment below.', 'comment_created': datetime.datetime(2022, 7, 4, 13, 4, 11, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912985604, 'comment_body': ""Might as well try to use a newer version of Python if it doesn't break in too many places. Try `3.10` ideally."", 'comment_created': datetime.datetime(2022, 7, 4, 13, 5, 1, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912988180, 'comment_body': ""This will not be relevant to TES. Make sure you only keep definitions of exceptions that you are actually using in your controllers. If you need exceptions that aren't in here, define them and add them to the list of exceptions below (and pick the most appropriate status code for them).\r\n\r\nThis applies to most exceptions here."", 'comment_created': datetime.datetime(2022, 7, 4, 13, 7, 31, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912990362, 'comment_body': 'We are dealing with tasks here, so use `db_client_tasks`. Also update the description accordingly.', 'comment_created': datetime.datetime(2022, 7, 4, 13, 9, 46, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912990545, 'comment_body': 'Add a newline at the end of the file', 'comment_created': datetime.datetime(2022, 7, 4, 13, 9, 58, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912991738, 'comment_body': 'Please use the [latest version of FOCA](https://github.com/elixir-cloud-aai/foca/releases/tag/v0.9.0) and adapt your codebase accordingly.', 'comment_created': datetime.datetime(2022, 7, 4, 13, 11, 18, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912991885, 'comment_body': 'Please delete empty line', 'comment_created': datetime.datetime(2022, 7, 4, 13, 11, 31, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912993475, 'comment_body': 'These will probably have to be adapter for TES vs WES. At least with respect to names, e.g., in line 86, but probably in multiple places', 'comment_created': datetime.datetime(2022, 7, 4, 13, 13, 28, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 912994485, 'comment_body': ""Please search in the entire codebase for `run`. Most likely all of them have to be replaced with `task` instead.\r\n\r\nDidn't review this very well. Please provide integration tests first (as in proWES)."", 'comment_created': datetime.datetime(2022, 7, 4, 13, 14, 40, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 920507468, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 13, 20, 57, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Ayush5120', 'type': 'User'}, {'comment_id': 920507603, 'comment_body': 'done.', 'comment_created': datetime.datetime(2022, 7, 13, 20, 57, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Ayush5120', 'type': 'User'}, {'comment_id': 920508231, 'comment_body': 'Discussed in slack.', 'comment_created': datetime.datetime(2022, 7, 13, 20, 58, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Ayush5120', 'type': 'User'}, {'comment_id': 923096202, 'comment_body': 'Please add a comment why this is set to `False` (similar to the comment in pro-WES). You can refer to this issue: https://github.com/ga4gh/task-execution-schemas/issues/136', 'comment_created': datetime.datetime(2022, 7, 18, 8, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 923097718, 'comment_body': 'Guess for consistency, accuracy and semantics, `list_tasks` would make more sense than `list_task`.', 'comment_created': datetime.datetime(2022, 7, 18, 8, 40, 45, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 923100555, 'comment_body': 'Good to use FOCA image instead, but did you try with a 3.10, 3.9 or 3.8 version of FOCA instead of 3.7?', 'comment_created': datetime.datetime(2022, 7, 18, 8, 44, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 923102623, 'comment_body': 'The latest version is 0.9.0', 'comment_created': datetime.datetime(2022, 7, 18, 8, 46, 10, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 923110000, 'comment_body': 'Tests look good as far as I can see. Please include them in GitHub Actions.\r\n\r\nAlso, it seems that there are no tests for service info and canceling tests. Please add them as well.', 'comment_created': datetime.datetime(2022, 7, 18, 8, 54, 23, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 926447068, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 21, 9, 14, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Ayush5120', 'type': 'User'}, {'comment_id': 926455620, 'comment_body': ""Yes, I have tried all versions and updated the image to '3.10'. "", 'comment_created': datetime.datetime(2022, 7, 21, 9, 22, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Ayush5120', 'type': 'User'}, {'comment_id': 926461297, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 7, 21, 9, 28, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Ayush5120', 'type': 'User'}]","[{'commit_sha': '43eac3aa298bdfb9a0910050504e570384d75d5d', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bfc80169a68d360baf5bb054c5c6976a1d326da', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1853d949e860817f76ce9267d255b58049463bfe', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '477995eada23b3da8f431dbcd9a7f1a5c639f5ae', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '164a951ecec244dbe764d32a7ab2b7ad6559eb14', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f771b8de2dd541d9c57072a4c5d36fcd52f1b7aa', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5c146411a0d4f563513d88beca8b9faa3f48ee1', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd74fb4c9bb2576d8c2e3f7b34ce6f251fa6ac515', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd05fddb4d1f3bda367caa9883e339fa7bd062344', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f587a00d4004f1c926cf0d2bf903bc172e9d81e5', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b3fa9b46a41a61bb80ab1b7cfe42813e3814299', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3589b86084b76c8aa0260964273b31a3153da235', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65fa294a19d26f786e5e24d0f160942d297c93f0', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd51bb30f236a07b0ca7c305c2a3b5764aaa18c04', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02fbcbd0e9e84b0e613d3ba05705e3f1e314fe39', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb1a165bbc8be3b14ab2bc26c927fd2f8eb4914b', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5823f3a6a4c04decae3707c22b21825114e38ede', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56b6de3bdb380ca8c4187bfe7039a0ff9f2a55a2', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56568471a19a64ab4233884c69044d7e772887db', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32a27bf6dc866afed5c33a83ac65f7b2254bd6b1', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}]",Ayush Kumar,64720666,,User,,12,,2,1
1017925655,feat: track task progress asynchronously,To add track task progress in the background using celery and rabbitmq for endpoint `POST /tasks.,True,74,https://api.github.com/repos/elixir-cloud-aai/proTES/pulls/74,https://github.com/elixir-cloud-aai/proTES/pull/74,closed,163,309,8,5,0,7,0,1,[],2022-08-04 19:06:33+00:00,2022-08-08 08:27:14+00:00,307241.0,"3 days, 13:20:41","[{'comment_id': 939156723, 'comment_body': ""I actually kinda preferred this over the definition of just the enums in `states.py`, but it's not a big deal, both work."", 'comment_created': datetime.datetime(2022, 8, 5, 19, 15, 15, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 939158959, 'comment_body': ""This section shouldn't be indented that much. `Args:` should be the same indentation as the start of the docstring. Check other docstrings for comparison."", 'comment_created': datetime.datetime(2022, 8, 5, 19, 18, 57, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 939160544, 'comment_body': ""It kinda doesn't make sense to define a separate function here, as it's doing only a single call. Just call it directly. Might be that I have it in proWES like that, didn't check, if so, perhaps you could fix it here and then raise a PR in proWES as well. It's really unnecessarily bloating the codebase and repeating function documentation."", 'comment_created': datetime.datetime(2022, 8, 5, 19, 21, 51, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 939165612, 'comment_body': ""Please mind the order of imports:\n\n1. Imports from built-in modules\n2. Imports from third party packages\n3. Imports from _this_ package\n\nPlease order each group alphabetically by the name of the module/package. And please leave one empty line between each block.\n\nAlso, please leave one line between the imports and any following statements, like the logger initialization.\n\nYou can check other modules for comparison, as well as the official PEP 8 Python style guide and the PEP on docstrings. (Note that these don't prescribe ordering of modules/packages within each of the three blocks, but I find it improves readability and maintainability)"", 'comment_created': datetime.datetime(2022, 8, 5, 19, 30, 52, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 939281591, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 5, 21, 47, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Ayush5120', 'type': 'User'}, {'comment_id': 939281998, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 5, 21, 47, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Ayush5120', 'type': 'User'}, {'comment_id': 939965733, 'comment_body': ""Thanks. Imports from this module aren't actually sorted alphabetically by module, but okay, not a big problem. Just try to stick to it in the future. It's certainly helpful if you have a lot of imports."", 'comment_created': datetime.datetime(2022, 8, 8, 8, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}]","[{'commit_sha': '0b778015772a89fed41569bc5c2c4bf35cfd6b9f', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6e472cbdbaf499d95cb6590f34e5489b13ca8fc', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6427dcbc0c414ad270b4870b7dc7f9c927e3de3', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29c86671e77087c8c5f8067f506888e92c959171', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99f8a78eaebe7af59ed2b72fed6abb9079f5965a', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}]",Ayush Kumar,64720666,,User,,12,,2,1
1031832282,feat: add task distribution middleware,"- add task distribution middleware
- add basic task distribution logic that randomly sends tasks to TES instances on which the task can be executed.",True,75,https://api.github.com/repos/elixir-cloud-aai/proTES/pulls/75,https://github.com/elixir-cloud-aai/proTES/pull/75,closed,129,31,8,6,0,0,0,1,[],2022-08-20 16:59:49+00:00,2022-08-28 12:10:17+00:00,673828.0,"7 days, 19:10:28",[],"[{'commit_sha': '48fc1cd48c1a982de5007f512e321f20d3243254', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33cd16aefe4efe8c7ee6243573505c5e01febfe2', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '976c99ad8419cd809e1d637b596a8b705b0f83dd', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3aa7fc04b0a3a7d144e43170c38c1ec39dc35abb', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a52bc1b871dec28bd59b2232bf33e9bdc108dfd3', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '775323174086950829173adc20daa030a66cf845', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}]",Ayush Kumar,64720666,,User,,12,,2,1
1044045874,test: add unit tests & run integration tests in CI,"### Description

- add integration tests to CI workflow
- add unit tests for all endpoints; caveat: unit tests fail currently (see note below); when commenting out the offending code, coveage is:
  ```console
  Name                                                 Stmts   Miss  Cover   Missing
  ----------------------------------------------------------------------------------
  pro_tes/__init__.py                                      1      0   100%
  pro_tes/exceptions.py                                    9      0   100%
  pro_tes/ga4gh/__init__.py                                0      0   100%
  pro_tes/ga4gh/tes/__init__.py                            0      0   100%
  pro_tes/ga4gh/tes/models.py                            117      0   100%
  pro_tes/ga4gh/tes/server.py                             35      0   100%
  pro_tes/ga4gh/tes/service_info.py                       21      1    95%   57
  pro_tes/ga4gh/tes/states.py                              7      0   100%
  pro_tes/ga4gh/tes/task_runs.py                         168     31    82%   143-145, 183, 190, 199, 203, 238, 328, 336, 344-345, 396-397, 413-417, 460-461, 484, 488, 492, 501-514
  pro_tes/middleware/__init__.py                           0      0   100%
  pro_tes/middleware/middleware.py                        15      2    87%   14, 31
  pro_tes/task_distribution/__init__.py                    0      0   100%
  pro_tes/task_distribution/task_distribution.py          18      1    94%   36
  pro_tes/utils/__init__.py                                0      0   100%
  pro_tes/utils/db_utils.py                               37     16    57%   53-64, 78-89, 117-119
  ----------------------------------------------------------------------------------
  TOTAL                                                  428     51    88%
  ```


### Note

Executing the unit tests raises the following error:

```console
  ============================================= test session starts ==============================================
platform linux -- Python 3.8.10, pytest-7.1.2, pluggy-1.0.0
rootdir: /home/ayush/GsoC/proTES
collected 0 items / 1 error                                                                                    

==================================================== ERRORS ====================================================
_____________________ ERROR collecting tests/unitTest/pro_tes/endpoints/test_endpoints.py ______________________
env/lib/python3.8/site-packages/foca/config/config_parser.py:99: in parse_yaml
    with open(conf) as config_file:
E   FileNotFoundError: [Errno 2] No such file or directory: '/home/ayush/GsoC/proTES/api/9e9c5aa.task_execution_service.openapi.yaml'

The above exception was the direct cause of the following exception:
tests/unitTest/pro_tes/endpoints/test_endpoints.py:8: in <module>
    from pro_tes.ga4gh.tes.server import (
pro_tes/ga4gh/tes/server.py:11: in <module>
    from pro_tes.ga4gh.tes.task_runs import TaskRuns
pro_tes/ga4gh/tes/task_runs.py:32: in <module>
    from pro_tes.tasks.tasks.track_task_progress import task__track_task_progress
pro_tes/tasks/tasks/track_task_progress.py:18: in <module>
    from pro_tes.celery_worker import celery
pro_tes/celery_worker.py:8: in <module>
    flask_app = init_app().app
pro_tes/app.py:10: in init_app
    app = foca.create_app()
env/lib/python3.8/site-packages/foca/foca.py:103: in create_app
    cnx_app = register_openapi(
env/lib/python3.8/site-packages/foca/api/register_openapi.py:40: in register_openapi
    spec_parsed = ConfigParser.merge_yaml(*spec.path)
env/lib/python3.8/site-packages/foca/config/config_parser.py:130: in merge_yaml
    yaml_dict = Addict(ConfigParser.parse_yaml(args_list.pop(0)))
env/lib/python3.8/site-packages/foca/config/config_parser.py:107: in parse_yaml
    raise OSError(
E   OSError: file '/home/ayush/GsoC/proTES/api/9e9c5aa.task_execution_service.openapi.yaml' could not be read
----------------------------------------------- Captured stderr ------------------------------------------------
[2022-09-01 22:59:53,054: INFO    ] Log formatting configured. [foca.foca]
[2022-09-01 22:59:53,054: INFO    ] Configuration file '/home/ayush/GsoC/proTES/pro_tes/config.yaml' parsed. [foca.foca]
[2022-09-01 22:59:53,218: INFO    ] Connexion app created. [foca.foca]
[2022-09-01 22:59:53,218: INFO    ] Error handler registered. [foca.foca]
[2022-09-01 22:59:53,218: INFO    ] CORS enabled. [foca.foca]
=============================================== warnings summary ===============================================
env/lib/python3.8/site-packages/openapi_spec_validator/factories.py:10
  /home/ayush/GsoC/proTES/env/lib/python3.8/site-packages/openapi_spec_validator/factories.py:10: DeprecationWarning: Subclassing validator classes is not intended to be part of their public API. A future version will make doing so an error, as the behavior of subclasses isn't guaranteed to stay the same between releases of jsonschema. Instead, prefer composition of validators, wrapping them in an object owned entirely by the downstream library.
    class Draft4ExtendedValidatorFactory(Draft4Validator):

env/lib/python3.8/site-packages/openapi_schema_validator/validators.py:59
  /home/ayush/GsoC/proTES/env/lib/python3.8/site-packages/openapi_schema_validator/validators.py:59: DeprecationWarning: Subclassing validator classes is not intended to be part of their public API. A future version will make doing so an error, as the behavior of subclasses isn't guaranteed to stay the same between releases of jsonschema. Instead, prefer composition of validators, wrapping them in an object owned entirely by the downstream library.
    class OAS30Validator(BaseOAS30Validator):

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================================== short test summary info ============================================
ERROR tests/unitTest/pro_tes/endpoints/test_endpoints.py - OSError: file '/home/ayush/GsoC/proTES/api/9e9c5aa...
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
========================================= 2 warnings, 1 error in 1.42s =========================================
```

The issue originates from `track_task_run_progress()`. As this is critical functionality, it will be important to resolve that issue.

When commenting out the offending code, current unit test coverage is:

```console
Name                                                 Stmts   Miss  Cover   Missing
----------------------------------------------------------------------------------
pro_tes/__init__.py                                      1      0   100%
pro_tes/exceptions.py                                    9      0   100%
pro_tes/ga4gh/__init__.py                                0      0   100%
pro_tes/ga4gh/tes/__init__.py                            0      0   100%
pro_tes/ga4gh/tes/models.py                            117      0   100%
pro_tes/ga4gh/tes/server.py                             35      0   100%
pro_tes/ga4gh/tes/service_info.py                       21      1    95%   57
pro_tes/ga4gh/tes/states.py                              7      0   100%
pro_tes/ga4gh/tes/task_runs.py                         168     31    82%   143-145, 183, 190, 199, 203, 238, 328, 336, 344-345, 396-397, 413-417, 460-461, 484, 488, 492, 501-514
pro_tes/middleware/__init__.py                           0      0   100%
pro_tes/middleware/middleware.py                        15      2    87%   14, 31
pro_tes/task_distribution/__init__.py                    0      0   100%
pro_tes/task_distribution/task_distribution.py          18      1    94%   36
pro_tes/utils/__init__.py                                0      0   100%
pro_tes/utils/db_utils.py                               37     16    57%   53-64, 78-89, 117-119
tests/__init__.py                                        0      0   100%
tests/unitTest/__init__.py                               0      0   100%
tests/unitTest/mock_data.py                             26      0   100%
tests/unitTest/pro_tes/__init__.py                       0      0   100%
tests/unitTest/pro_tes/endpoints/__init__.py             0      0   100%
tests/unitTest/pro_tes/endpoints/test_endpoints.py     101      0   100%
----------------------------------------------------------------------------------
TOTAL                                                  555     51    91%
```
",True,76,https://api.github.com/repos/elixir-cloud-aai/proTES/pulls/76,https://github.com/elixir-cloud-aai/proTES/pull/76,closed,478,7,10,10,1,3,0,0,[],2022-09-01 17:45:25+00:00,2022-09-04 07:05:13+00:00,220788.0,"2 days, 13:19:48","[{'comment_id': 961499255, 'comment_body': ""You are calculating the coverage of your _test_ code, not the actual application code. This doesn't make sense.\r\n\r\nBtw, in your PR description, I have seen from your unit test coverage report that you also include the test code (along with the application code). I have removed the modules from the test code and have re-calculated the coverage (from 91% to 88%) for the application code only.\r\n\r\nHave a look at the `--source` parameter to tell `coverage` which application code to test. Of course you also need to make sure that only the correct tests (unit _or_ integration) are ran."", 'comment_created': datetime.datetime(2022, 9, 2, 9, 45, 51, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 961759132, 'comment_body': ""But in the case of integration testing, it will not check the application code. What you told me will be applicable for unit testing and I have not added unit tests here(due to the error). Moreover, if I do add `--source pro_tes` in the coverage in case of integration testing it will show 0 coverage. as integration tests don't actually go through all the application code. It will just check that deployed application is returning the expected output."", 'comment_created': datetime.datetime(2022, 9, 2, 14, 43, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Ayush5120', 'type': 'User'}, {'comment_id': 962043541, 'comment_body': ""Okay. But in that case it also doesn't make sense to compute the coverage for it. Certainly we are not interested in the coverage of the test code.\n\nSo please simply remove the coverage from the CI and we should be good to go."", 'comment_created': datetime.datetime(2022, 9, 2, 22, 17, 51, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}]","[{'commit_sha': '880b080b652a5abe02cea4be3b7355750d80e6c3', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdf93bda6a1d035148842a3aae599e344edd9039', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b33d64352bca1704353ef0928e29ac41ffae2d48', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '019c960f85931d77d0a6cf0be17ec649305f7bcd', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e7eb345957b83bba06f81cef2f517804f6dd7a7', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86bc2e9d1d339619873c692fb1cb9a35a411cfc9', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f4a159b287d1b6b7c769b5922dd111724924cea', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '288cca9cd503876c006b0722dd5a02bf13e85889', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c1eef7ccc8795a19ed83fefeefa8c7606aecda4', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c389ba2d3c3eb56e9738492c1d838495d65ea117', 'committer_username': 'Ayush5120', 'committer_name': 'Ayush Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 3, 4, 48, 35, tzinfo=datetime.timezone.utc)}]",Ayush Kumar,64720666,,User,,12,,2,1

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
157390813,proTES,elixir-cloud-aai/proTES,Python,6,5,25,14,149,20,9,1,"[{'id': 1916958383, 'number': 178, 'closed': datetime.datetime(2024, 7, 22, 14, 3, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 12, 16, 26, 24, tzinfo=datetime.timezone.utc), 'time_taken': 3447432.0, 'time_delta': '39 days, 21:37:12', 'additions': 11, 'deletions': 11, 'state': 'closed'}, {'id': 1398193300, 'number': 160, 'closed': datetime.datetime(2023, 10, 20, 1, 34, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 19, 12, 58, 46, tzinfo=datetime.timezone.utc), 'time_taken': 10586141.0, 'time_delta': '122 days, 12:35:41', 'additions': 797, 'deletions': 812, 'state': 'closed'}, {'id': 1351819795, 'number': 157, 'closed': datetime.datetime(2023, 5, 23, 19, 45, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 16, 5, 12, 50, tzinfo=datetime.timezone.utc), 'time_taken': 657140.0, 'time_delta': '7 days, 14:32:20', 'additions': 70, 'deletions': 22, 'state': 'closed'}, {'id': 1303439804, 'number': 156, 'closed': datetime.datetime(2023, 4, 5, 16, 29, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 5, 15, 55, 27, tzinfo=datetime.timezone.utc), 'time_taken': 2025.0, 'time_delta': '0:33:45', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1280979559, 'number': 150, 'closed': datetime.datetime(2023, 3, 19, 9, 46, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 18, 6, 31, 5, tzinfo=datetime.timezone.utc), 'time_taken': 98154.0, 'time_delta': '1 day, 3:15:54', 'additions': 601, 'deletions': 1, 'state': 'closed'}, {'id': 1276450830, 'number': 148, 'closed': datetime.datetime(2023, 3, 16, 20, 30, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 15, 9, 11, 29, tzinfo=datetime.timezone.utc), 'time_taken': 127132.0, 'time_delta': '1 day, 11:18:52', 'additions': 21, 'deletions': 4, 'state': 'closed'}, {'id': 1272658973, 'number': 147, 'closed': datetime.datetime(2023, 3, 13, 10, 58, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 13, 5, 17, 7, tzinfo=datetime.timezone.utc), 'time_taken': 20484.0, 'time_delta': '5:41:24', 'additions': 21, 'deletions': 9, 'state': 'closed'}, {'id': 1268466389, 'number': 144, 'closed': datetime.datetime(2023, 3, 8, 21, 38, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 8, 21, 10, 59, tzinfo=datetime.timezone.utc), 'time_taken': 1656.0, 'time_delta': '0:27:36', 'additions': 21, 'deletions': 4, 'state': 'closed'}, {'id': 1247708094, 'number': 138, 'closed': datetime.datetime(2023, 3, 8, 1, 56, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 20, 18, 55, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1321232.0, 'time_delta': '15 days, 7:00:32', 'additions': 141, 'deletions': 65, 'state': 'closed'}, {'id': 1231601710, 'number': 133, 'closed': datetime.datetime(2023, 2, 16, 20, 39, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 7, 8, 30, tzinfo=datetime.timezone.utc), 'time_taken': 821360.0, 'time_delta': '9 days, 12:09:20', 'additions': 19, 'deletions': 20, 'state': 'closed'}, {'id': 1227373056, 'number': 129, 'closed': datetime.datetime(2023, 2, 3, 10, 23, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 2, 23, 42, 46, tzinfo=datetime.timezone.utc), 'time_taken': 38423.0, 'time_delta': '10:40:23', 'additions': 104, 'deletions': 20, 'state': 'closed'}, {'id': 1223921673, 'number': 128, 'closed': datetime.datetime(2023, 2, 2, 11, 53, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 31, 21, 29, 46, tzinfo=datetime.timezone.utc), 'time_taken': 138226.0, 'time_delta': '1 day, 14:23:46', 'additions': 148, 'deletions': 64, 'state': 'closed'}, {'id': 1210733659, 'number': 119, 'closed': datetime.datetime(2023, 1, 26, 18, 28, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 19, 20, 47, 13, tzinfo=datetime.timezone.utc), 'time_taken': 596450.0, 'time_delta': '6 days, 21:40:50', 'additions': 423, 'deletions': 75, 'state': 'closed'}, {'id': 1194978116, 'number': 118, 'closed': datetime.datetime(2023, 1, 12, 16, 6, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 12, 8, 59, 43, tzinfo=datetime.timezone.utc), 'time_taken': 25615.0, 'time_delta': '7:06:55', 'additions': 9, 'deletions': 8, 'state': 'closed'}, {'id': 1101669472, 'number': 77, 'closed': datetime.datetime(2023, 1, 26, 13, 25, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 27, 13, 4, 23, tzinfo=datetime.timezone.utc), 'time_taken': 7863687.0, 'time_delta': '91 days, 0:21:27', 'additions': 15, 'deletions': 184, 'state': 'closed'}, {'id': 1044045874, 'number': 76, 'closed': datetime.datetime(2022, 9, 4, 7, 5, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 1, 17, 45, 25, tzinfo=datetime.timezone.utc), 'time_taken': 220788.0, 'time_delta': '2 days, 13:19:48', 'additions': 478, 'deletions': 7, 'state': 'closed'}, {'id': 1031832282, 'number': 75, 'closed': datetime.datetime(2022, 8, 28, 12, 10, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 20, 16, 59, 49, tzinfo=datetime.timezone.utc), 'time_taken': 673828.0, 'time_delta': '7 days, 19:10:28', 'additions': 129, 'deletions': 31, 'state': 'closed'}, {'id': 1017925655, 'number': 74, 'closed': datetime.datetime(2022, 8, 8, 8, 27, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 4, 19, 6, 33, tzinfo=datetime.timezone.utc), 'time_taken': 307241.0, 'time_delta': '3 days, 13:20:41', 'additions': 163, 'deletions': 309, 'state': 'closed'}, {'id': 1015539312, 'number': 73, 'closed': datetime.datetime(2022, 8, 4, 19, 7, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 2, 19, 52, 17, tzinfo=datetime.timezone.utc), 'time_taken': 170096.0, 'time_delta': '1 day, 23:14:56', 'additions': 2679, 'deletions': 2542, 'state': 'closed'}, {'id': 978664443, 'number': 71, 'closed': datetime.datetime(2022, 7, 25, 18, 42, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 24, 19, 40, 23, tzinfo=datetime.timezone.utc), 'time_taken': 2674938.0, 'time_delta': '30 days, 23:02:18', 'additions': 2726, 'deletions': 2540, 'state': 'closed'}]"
