pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
979796368,qutip-qip backends for qiskit,This draft PR tracks changes for the GSoC '22 project: making qutip-qip backends for qiskit.,True,155,https://api.github.com/repos/qutip/qutip-qip/pulls/155,https://github.com/qutip/qutip-qip/pull/155,closed,759,0,8,14,1,19,0,0,[],2022-06-27 09:18:05+00:00,2022-08-08 07:44:39+00:00,3623194.0,"41 days, 22:26:34","[{'comment_id': 923131737, 'comment_body': '`parse` is imported but not used? The test fails because `yaml` is not installed. We can include it if necessary but it does not seem like the case?', 'comment_created': datetime.datetime(2022, 7, 18, 9, 19, 36, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 923153763, 'comment_body': 'That was included accidently. Removed it now.', 'comment_created': datetime.datetime(2022, 7, 18, 9, 45, tzinfo=datetime.timezone.utc), 'commenter': 'claretgrace0801', 'type': 'User'}, {'comment_id': 923154578, 'comment_body': 'It is better to specify this in `setup.cfg` instead of here. They are equivalent but we kind of have all additional dependency defined there already. `setup.py` exists only because we want to read the version of the file.', 'comment_created': datetime.datetime(2022, 7, 18, 9, 45, 59, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 923161906, 'comment_body': 'Why round it here?', 'comment_created': datetime.datetime(2022, 7, 18, 9, 54, 37, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 923164132, 'comment_body': 'My understanding is that if there is no measurement, `statistics` only has one state with probability 1?', 'comment_created': datetime.datetime(2022, 7, 18, 9, 57, 16, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 923165239, 'comment_body': 'You can use basis([2]*N, [0]*N)', 'comment_created': datetime.datetime(2022, 7, 18, 9, 58, 40, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 923411365, 'comment_body': 'Maybe we can rename it `convert_qiskit_circuit`?', 'comment_created': datetime.datetime(2022, 7, 18, 14, 2, 35, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 923414880, 'comment_body': 'Duplication? Line 107-111 seems useless.\r\n', 'comment_created': datetime.datetime(2022, 7, 18, 14, 5, 57, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 923423399, 'comment_body': 'We can probably update `_get_qutip_index` such that if the input is a list of integers, it iterates over it and calls itself.', 'comment_created': datetime.datetime(2022, 7, 18, 14, 13, 56, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 923426144, 'comment_body': ""Maybe add an in-line comment that we assume the first element in `qregs` is the control qubit. Maybe this is the convention used for the gate we support at the moment but I don't know if the same follows e.g. for the Toffoli gate."", 'comment_created': datetime.datetime(2022, 7, 18, 14, 16, 28, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 927651038, 'comment_body': 'Yep, that is correct.', 'comment_created': datetime.datetime(2022, 7, 22, 13, 26, 39, tzinfo=datetime.timezone.utc), 'commenter': 'claretgrace0801', 'type': 'User'}, {'comment_id': 927702403, 'comment_body': 'While displaying the result, the non-rounded probabilities are displayed by default.\r\n![image](https://user-images.githubusercontent.com/56979413/180461069-4dbbeea7-2d70-4126-9e95-bd94b06aa09d.png)\r\n![image](https://user-images.githubusercontent.com/56979413/180461248-63262f07-716a-4130-ad9f-0768a54ebbda.png)\r\n', 'comment_created': datetime.datetime(2022, 7, 22, 14, 21, 24, tzinfo=datetime.timezone.utc), 'commenter': 'claretgrace0801', 'type': 'User'}, {'comment_id': 927794327, 'comment_body': ""It is better to keep the default as not rounded. Although the rounded one looks cleaner, it unnecessarily makes the result inaccurate. If we do want a better display, we should only round it when displaying, not the original result. But I guess `.data()` is meant to be raw data and one can define some `.probability` for nice looking and give it some parameters e.g. `truncation`.\r\n\r\nBTW, why does `counts` returns a probability... I know that we don't repeat. So we probably don't have a well-defined `counts`? How does the qiskit circuit simulator handle this?"", 'comment_created': datetime.datetime(2022, 7, 22, 15, 59, 5, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 928305835, 'comment_body': ""Qiskit backends have an option to set the number of `shots`. I haven't implemented any configurable backend options yet and will be doing that soon. After doing that, the probabilities will be replaced by the actual `counts`. We can use random sampling from the obtained probabilities for this purpose."", 'comment_created': datetime.datetime(2022, 7, 24, 20, 2, 20, tzinfo=datetime.timezone.utc), 'commenter': 'claretgrace0801', 'type': 'User'}, {'comment_id': 930131973, 'comment_body': 'Just a comment, for the pulse-based simulator this needs to be read from the input device instance.', 'comment_created': datetime.datetime(2022, 7, 26, 15, 48, 25, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 930183785, 'comment_body': 'This part is a bit strange, the warning message should not be part of the circuit. I understand that you want to pass the message from the converter up to this level. But hiding it as an attribute looks very confusing.\r\n\r\nThere are standard ways to catch a warning message. Just like `try` `except` for the error message, you can also get write a `with` condition that catches warnings:\r\n```python\r\nwith warnings.catch_warnings(record=True) as w:\r\n    pass\r\n```\r\nBut I think this is also not the best way to handle this here.\r\n\r\nMaybe a better way is to the following:\r\n- define a qutip-backend-unique configuration key e.g. `allow_custom_gate` in the configuration with the default `True`.\r\n- Add a key-word parameter `allow_custom_gate=True` to `convert_qiskit_circuit`.\r\n- When converting the circuit here, we read from the `BackendConfiguration` (There should be a way to access it here.) and pass it to `convert_qiskit_circuit`.\r\n- If the custom gate is allowed. Use it without warning. Otherwise, we raise an *error*.\r\n\r\nI think this makes sense especially because, for the pulse-level processor, we cannot use any custom gates.', 'comment_created': datetime.datetime(2022, 7, 26, 16, 29, 20, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 930185446, 'comment_body': ""Let's make it clear that it is the qiskit Instracution, `qutip` also has its own `Instruction`."", 'comment_created': datetime.datetime(2022, 7, 26, 16, 30, 42, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 934230226, 'comment_body': '`Exception` -> `RuntimeError`', 'comment_created': datetime.datetime(2022, 8, 1, 7, 44, 16, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 934392119, 'comment_body': 'There might be faster way to do this.', 'comment_created': datetime.datetime(2022, 8, 1, 10, 46, 18, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}]","[{'commit_sha': '644e5c15b217a0f713da502a4443ede3d3805112', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1784fd00792f8bfde0f708f1c27467db446fadb', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b71f236d56f1319a926e14e436ca1aceeb584240', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1255529b0b879455362b93c85673bae8936dfb3', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1afb44947704ae3d5a25866bb1a866af1b150306', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa9f70ebe5d07dc2a9c7a8d9fb7cd9b6875ef5f9', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fec64ccd0b6c56a3ef0a1875bdc596adceaea8d', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b708d10daa5ae462253e44a3d557a9f123cdc849', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85219dc0d51ca866abe6f957575ed22c7f390794', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '412c15cae09688872fa1133d0f7eacf385af49b7', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7369167114bed8ad8b3098df7b31f43d8d434798', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e9dd25606910e4c4299d2d919fd3e6bc6f7f02b', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7196d14621fa11144288c7dad82e42b3c8efc990', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc423bff9b91d09083878ccc3f2e1b034063448f', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}]",Shreyas Pradhan,56979413,,User,,46,,13,33
1028526368,Pulse Simulator backends for qiskit,This PR tracks the changes while the pulse simulator based backends are being made for the GSoC '22 project - making qutip backends for qiskit.,True,159,https://api.github.com/repos/qutip/qutip-qip/pulls/159,https://github.com/qutip/qutip-qip/pull/159,closed,698,108,13,18,5,24,0,0,[],2022-08-17 08:57:23+00:00,2022-10-19 10:01:46+00:00,5447063.0,"63 days, 1:04:23","[{'comment_id': 959402282, 'comment_body': 'Maybe a better name is `_get_final_circuit_state`', 'comment_created': datetime.datetime(2022, 8, 31, 10, 4, 3, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 959406764, 'comment_body': ""Why do we need this? If there are no collapse operators. Shouldn't we return just a ket?"", 'comment_created': datetime.datetime(2022, 8, 31, 10, 9, 22, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 959463435, 'comment_body': '```python\r\ndef generate_init_processor_state(self, init_circuit_state=None):\r\n    if init_circuit_state is None:\r\n        # Generate all zero states\r\n\r\ndef get_final_circuit_state(self, final_processor_state):\r\n    ....\r\n```\r\n', 'comment_created': datetime.datetime(2022, 8, 31, 11, 18, 42, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 959465796, 'comment_body': '```\r\nprocessor : :obj:`.Processor`\r\n```', 'comment_created': datetime.datetime(2022, 8, 31, 11, 21, 42, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 962618060, 'comment_body': '```suggestion\r\n`qutip-qip` as a Qiskit backend\r\n```', 'comment_created': datetime.datetime(2022, 9, 5, 8, 18, 5, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 962618957, 'comment_body': 'You could also add your name and email to get some credit if you want.', 'comment_created': datetime.datetime(2022, 9, 5, 8, 19, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 962632819, 'comment_body': 'It would be nice to use the [`plot` directive](https://matplotlib.org/stable/api/sphinxext_plot_directive_api.html?highlight=directive#module-matplotlib.sphinxext.plot_directive) of matplotlib so that the figures are generated at run time instead of imported. This guarantees that the results are up-to-date.\r\n\r\nYou can also include the two code blocks using `..plot::` and add the `:context:` option so that they all share the same environment.', 'comment_created': datetime.datetime(2022, 9, 5, 8, 31, 12, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 962637657, 'comment_body': ""Let's add a note here\r\n```\r\n.. note::\r\nThe pulse-level simulator does not support measurement. Please use :obj:`qutip.measure` to process the result manually.\r\n```"", 'comment_created': datetime.datetime(2022, 9, 5, 8, 36, 7, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 962639477, 'comment_body': ""It would be nice to use `doctest` or `testcode` as much as possible because they will be executed when testing the doc build, while `code-block` won't.\r\n\r\nYou can also use [`testsetup`](https://www.sphinx-doc.org/en/master/usage/extensions/doctest.html) to predefine some importation."", 'comment_created': datetime.datetime(2022, 9, 5, 8, 38, 3, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 962646792, 'comment_body': 'Why the indent?', 'comment_created': datetime.datetime(2022, 9, 5, 8, 45, 18, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 962667011, 'comment_body': 'Checking this in the base class looks weird. The base class should not contain any information of the child classes.\r\n\r\nI think we can do the following:\r\nWe always accept `allow_custom_gate`. For the pulse-level simulator, if the gate is not supported by the processor, an error will be raised there. There is no need to prevent the use of `allow_custom_gate` because, in principle, one can define a custom gate and also support it using a custom processor.', 'comment_created': datetime.datetime(2022, 9, 5, 8, 59, 28, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 962670190, 'comment_body': 'Also add `configuration` and `provider` to parameters for both backends.', 'comment_created': datetime.datetime(2022, 9, 5, 9, 2, 37, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 962673751, 'comment_body': '```suggestion\r\n        Returns a parsed object of type `qiskit.result.Result`\r\n```', 'comment_created': datetime.datetime(2022, 9, 5, 9, 6, 25, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 962767175, 'comment_body': 'Remove if else, keep only the if branch.', 'comment_created': datetime.datetime(2022, 9, 5, 10, 47, 7, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 968122403, 'comment_body': '```suggestion\r\n   .. rubric:: Functions\r\n```\r\nMethods typically refer to members of a class.', 'comment_created': datetime.datetime(2022, 9, 12, 8, 22, 31, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 968137417, 'comment_body': 'Could you also add an example code for getting the state vector?', 'comment_created': datetime.datetime(2022, 9, 12, 8, 37, 24, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 968139739, 'comment_body': 'Add \r\n```\r\nDifferent hardware parameters can be supplied here for th:obj:`LinearSpinChain`. Please refer to the documentation for details.\r\n```', 'comment_created': datetime.datetime(2022, 9, 12, 8, 39, 54, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 968141724, 'comment_body': 'Add an example of getting the state/density matrix?', 'comment_created': datetime.datetime(2022, 9, 12, 8, 41, 52, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 968142955, 'comment_body': '```suggestion\r\n        The pulse-level simulator does not support measurement. Please use :obj:`qutip.measure` to process the result manually. By default, all the qubits will be measured at the end of the circuit.\r\n```\r\nWhat happens if there is a measurement in the circuit, an error is raised?', 'comment_created': datetime.datetime(2022, 9, 12, 8, 43, 8, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 968145461, 'comment_body': '```suggestion\r\n    Although you can pass this option while running a circuit on pulse backends, you need to make sure that the gate is supported by the backend simulator :obj:`Processor` in ``qutip-qip``.\r\n```', 'comment_created': datetime.datetime(2022, 9, 12, 8, 45, 43, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 968147390, 'comment_body': 'Why skip?', 'comment_created': datetime.datetime(2022, 9, 12, 8, 47, 38, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 969466983, 'comment_body': '```\r\n>>> circ.measure(1,1);\r\n```', 'comment_created': datetime.datetime(2022, 9, 13, 10, 50, 52, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 969694115, 'comment_body': 'The coverage shows that the `provider.py` is not much tested.\r\nhttps://coveralls.io/builds/52369228/source?filename=src%2Fqutip_qip%2Fqiskit%2Fprovider.py#L21\r\n\r\nIs there a way to add a test for it?', 'comment_created': datetime.datetime(2022, 9, 13, 14, 20, 23, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}, {'comment_id': 969699352, 'comment_body': '`Job.submit` seems to do nothing?', 'comment_created': datetime.datetime(2022, 9, 13, 14, 24, 31, tzinfo=datetime.timezone.utc), 'commenter': 'BoxiLi', 'type': 'User'}]","[{'commit_sha': '9875fa62e6b5ef4e70f8070acefbb92c1bcf3190', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '359b1d2a9e9891363a34e868ec54923303a920f6', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1893b23ef53937ff7297b90a64851c72f417e65a', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc9e6ff1d76579e52d696f686bd355f218ddd053', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e944ddb8b1fc507dec3cd0b66c563cfcfba1ae98', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc1f00a06842521edee00c106213da45b63c9ddd', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6429ca19f9a6bf0e77d824f803e04d96dd5ef855', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fdcd7c1a82cabf0206ad89f6b58b317cbe1ccc9', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45e5c6302d09864490e9610af6346b222241c69f', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '370de8cc531f742fe81ded1c79bc5e5071a60283', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ae6afea65e3da59551be0816ac1ebaa342cd803', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfa84b81943b7735a6c6218eb3bf425d94188ebb', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a5d26a4f3b6bacb2889e4abc42d8c0d2ce20604', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '828c829e5085cbdb260bf1764c024fecd8585faa', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b796d1650d13611e9ed1c8bfe368cf7a94f715f', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5bdbc489aa60d69748fca99abd35241fe480535', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c095a737c09f940b2abefb8b2a5e4958c0d3c17d', 'committer_username': 'claretgrace0801', 'committer_name': 'Shreyas Pradhan', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 19, 58, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89e7fb7c7dfa9282346b561668b7222edc9e4478', 'committer_username': 'BoxiLi', 'committer_name': 'Boxi Li', 'committer_email': 'etamin1201@gmail.com', 'commit_date': datetime.datetime(2015, 4, 26, 17, 45, 21, tzinfo=datetime.timezone.utc)}]",Shreyas Pradhan,56979413,,User,,46,,13,33

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
265206005,qutip-qip,qutip/qutip-qip,Python,63,111,16,63,3087,19,5,8,"[{'id': 1028526368, 'number': 159, 'closed': datetime.datetime(2022, 10, 19, 10, 1, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 17, 8, 57, 23, tzinfo=datetime.timezone.utc), 'time_taken': 5447063.0, 'time_delta': '63 days, 1:04:23', 'additions': 698, 'deletions': 108, 'state': 'closed'}, {'id': 979796368, 'number': 155, 'closed': datetime.datetime(2022, 8, 8, 7, 44, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 9, 18, 5, tzinfo=datetime.timezone.utc), 'time_taken': 3623194.0, 'time_delta': '41 days, 22:26:34', 'additions': 759, 'deletions': 0, 'state': 'closed'}, {'id': 911377269, 'number': 138, 'closed': None, 'created': datetime.datetime(2022, 4, 17, 2, 57, 13, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 33, 'deletions': 0, 'state': 'open'}]"
