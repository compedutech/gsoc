pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1447285780,Change the implementation of the priority queue to use a heap data structure,"### **GSOC'23 TASK**

Fixes #103 

#### Describe the changes you have made in this PR -

 1. I have changed the implementation of the priority queue to use a heap data structure. Previously, it was using a linear data structure. 
Now, It is making use of a binary heap data structure to manage the priority queue. The add() method uses heapify-up to find the correct position for adding an element, and the remove() method uses heapify-down to maintain the heap property after removing an element. These heapify operations have logarithmic time complexity (O(log n)), which makes the binary heap implementation much more efficient for managing a priority queue compared to the linear implementation.
2. Now, as the time complexity reduces to (O(log n)) from (O(n)), I have changed the simulation queue limit to 100000.


Screenshots:-

Before:-

Circuit was not  able to load properly and freezes the simulator

![Screenshot (1774)](https://github.com/CircuitVerse/CircuitVerse/assets/89515816/93fd11fb-9085-4a69-9bdf-f2549315ff96)


https://github.com/CircuitVerse/CircuitVerse/assets/89515816/91ff4eac-59ff-44d0-9f52-b777f5f66866


After:-

![Screenshot (1772)](https://github.com/CircuitVerse/CircuitVerse/assets/89515816/d5f0c437-bae5-464a-ab48-8ffd52846523)

![Screenshot (1771)](https://github.com/CircuitVerse/CircuitVerse/assets/89515816/4e3f3731-fd08-44ee-98bd-c5fc4ae79389)

https://github.com/CircuitVerse/CircuitVerse/assets/89515816/043172e3-640d-4049-9c9f-8a2759909fe1



Note: Please check **Allow edits from maintainers.** If you would like us to assist in the PR. ",True,3916,https://api.github.com/repos/CircuitVerse/CircuitVerse/pulls/3916,https://github.com/CircuitVerse/CircuitVerse/pull/3916,closed,75,41,2,5,4,13,2,0,"[{'name': 'simulator'}, {'name': ""GSoC'23""}]",2023-07-24 19:56:38+00:00,2023-09-05 16:12:51+00:00,3701773.0,"42 days, 20:16:13","[{'comment_id': 1272692302, 'comment_body': 'Similar blocks of code found in 2 locations. Consider refactoring.', 'comment_created': datetime.datetime(2023, 7, 24, 19, 58, 24, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1272692306, 'comment_body': 'Similar blocks of code found in 2 locations. Consider refactoring.', 'comment_created': datetime.datetime(2023, 7, 24, 19, 58, 25, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1272692311, 'comment_body': 'Use object destructuring.', 'comment_created': datetime.datetime(2023, 7, 24, 19, 58, 25, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1272692314, 'comment_body': 'Function `heapifyDown` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring.', 'comment_created': datetime.datetime(2023, 7, 24, 19, 58, 25, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1272692316, 'comment_body': ""Assignment to function parameter 'index'."", 'comment_created': datetime.datetime(2023, 7, 24, 19, 58, 25, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1272692319, 'comment_body': 'Unexpected constant condition.', 'comment_created': datetime.datetime(2023, 7, 24, 19, 58, 25, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1272692322, 'comment_body': ""Assignment to function parameter 'index'."", 'comment_created': datetime.datetime(2023, 7, 24, 19, 58, 25, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1273149956, 'comment_body': 'Function `heapifyDown` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring.', 'comment_created': datetime.datetime(2023, 7, 25, 7, 57, 45, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1306644705, 'comment_body': 'Ignoring ', 'comment_created': datetime.datetime(2023, 8, 27, 11, 2, 14, tzinfo=datetime.timezone.utc), 'commenter': 'gr455', 'type': 'User'}, {'comment_id': 1306644744, 'comment_body': 'Ignoring', 'comment_created': datetime.datetime(2023, 8, 27, 11, 2, 33, tzinfo=datetime.timezone.utc), 'commenter': 'gr455', 'type': 'User'}, {'comment_id': 1306644753, 'comment_body': 'Ignoring', 'comment_created': datetime.datetime(2023, 8, 27, 11, 2, 40, tzinfo=datetime.timezone.utc), 'commenter': 'gr455', 'type': 'User'}, {'comment_id': 1306650540, 'comment_body': 'Similar blocks of code found in 2 locations. Consider refactoring.', 'comment_created': datetime.datetime(2023, 8, 27, 11, 44, 42, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1306650541, 'comment_body': 'Similar blocks of code found in 2 locations. Consider refactoring.', 'comment_created': datetime.datetime(2023, 8, 27, 11, 44, 42, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}]","[{'commit_sha': 'd76c27585085ed230be385117f6f33ab196ddef0', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7505c188cdaa664f937b81edaca3d71c27382024', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '229437697a86eda26f95561455af436a3b3cb61f', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c0a34c7f3237836afd7b9fb9a675942fbd491b9', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3498cc1bef377b763b486cb60a99cc36f0fa0742', 'committer_username': 'gr455', 'committer_name': 'Ruturaj Mohite', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 14, 11, 39, tzinfo=datetime.timezone.utc)}]",Prerna Sharma,89515816,,User,,47,,12,41
1456925510,fix: Moving a component mess up the connected wires,"Fixes #2341, #1493 

#### Describe the changes you have made in this PR -
1. Fixed:- We can work with delay 0, but we can't save a circuit with components having delay 0 (On saving the circuit, the delay automatically returns back to the default value). 
2. Fixed:- Moving a component mess up the connected wires.
3. Fixed:- Error messages do not remove even after resolving the issues.

Screenshots:-

Before:

[moving components before.webm](https://github.com/CircuitVerse/CircuitVerse/assets/89515816/686d5790-37b5-4a5b-88a1-a2666e1d5292)


After:

[moving components.webm](https://github.com/CircuitVerse/CircuitVerse/assets/89515816/56002072-3e78-410a-b4c5-66cdc78072f5)



Note: Please check **Allow edits from maintainers.** if you would like us to assist in the PR. ",True,3928,https://api.github.com/repos/CircuitVerse/CircuitVerse/pulls/3928,https://github.com/CircuitVerse/CircuitVerse/pull/3928,closed,20,7,3,6,4,10,2,0,"[{'name': 'simulator'}, {'name': ""GSoC'23""}]",2023-07-31 20:04:00+00:00,2023-08-27 10:57:03+00:00,2299983.0,"26 days, 14:53:03","[{'comment_id': 1279825248, 'comment_body': ""Expected '===' and instead saw '=='."", 'comment_created': datetime.datetime(2023, 7, 31, 20, 5, 40, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1279825251, 'comment_body': 'Missing semicolon.', 'comment_created': datetime.datetime(2023, 7, 31, 20, 5, 40, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1279825255, 'comment_body': 'Strings must use singlequote.', 'comment_created': datetime.datetime(2023, 7, 31, 20, 5, 41, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1279825260, 'comment_body': ""Expected 'this' to be used by class method 'getSelected'."", 'comment_created': datetime.datetime(2023, 7, 31, 20, 5, 41, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1279825265, 'comment_body': ""Unnecessary 'else' after 'return'."", 'comment_created': datetime.datetime(2023, 7, 31, 20, 5, 41, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1279825267, 'comment_body': 'Block must not be padded by blank lines.', 'comment_created': datetime.datetime(2023, 7, 31, 20, 5, 41, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1279825269, 'comment_body': 'Strings must use singlequote.', 'comment_created': datetime.datetime(2023, 7, 31, 20, 5, 41, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1291220869, 'comment_body': 'Parsing error: Assigning to rvalue', 'comment_created': datetime.datetime(2023, 8, 11, 11, 18, 47, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1299243189, 'comment_body': ""'fadeOutTimeout' was used before it was defined."", 'comment_created': datetime.datetime(2023, 8, 19, 19, 23, 47, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1299243190, 'comment_body': ""'fadeOutTimeout' was used before it was defined."", 'comment_created': datetime.datetime(2023, 8, 19, 19, 23, 47, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}]","[{'commit_sha': '5bc6381910f28acb8ffefdd9489b5b05313d8027', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd95b5b36555cb1ddf7398bd191d2dd2f984b2c6', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '953f69a6703387a1d951fa401b8839e6e42a2618', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7771ebed05ac204d674160f994df5f1870f537a', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b186820caab39ee4aee7e747f868fa3b07a8106', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38b9882d9422c54d000ffcd00aeb75a2d51e2561', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}]",Prerna Sharma,89515816,,User,,47,,12,41
1377856850,Implemented state machine for simulator,"### **GSOC'23 TASK**

#### Describe the changes you have made in this PR -
1. Implemented a state machine with two states: normal and error.
2. The default state is set to ""Normal,"" and the current state is initially assigned as the default state.
3. Implemented a feature to catch uncaught exception errors of the simulator. When an error is caught, the simulator's state is changed from ""Normal"" to ""Error."" Additionally, a notification is displayed to the user indicating that the simulator is in an error state.
4.  In the Error state, the user can only delete or undo components. When the erroneous component is removed, the simulator instantly returns to the normal state.

Screenshots:-

Before:-

https://github.com/CircuitVerse/CircuitVerse/assets/89515816/74ce7d87-c8ae-4256-a1fa-a2e9ec411619

After:-

https://github.com/CircuitVerse/CircuitVerse/assets/89515816/8962d660-cab8-41c3-bcfe-66ad519dafea


Note: Please check **Allow edits from maintainers.** If you would like us to assist in the PR. 
",True,3781,https://api.github.com/repos/CircuitVerse/CircuitVerse/pulls/3781,https://github.com/CircuitVerse/CircuitVerse/pull/3781,closed,101,35,5,14,4,22,2,0,"[{'name': 'simulator'}, {'name': ""GSoC'23""}]",2023-06-04 17:28:19+00:00,2023-08-27 11:39:29+00:00,7236670.0,"83 days, 18:11:10","[{'comment_id': 1216940640, 'comment_body': ""Expected 'this' to be used by class method 'getCurrentState'."", 'comment_created': datetime.datetime(2023, 6, 4, 17, 29, 54, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1216940654, 'comment_body': 'Expected indentation of 8 spaces but found 7.', 'comment_created': datetime.datetime(2023, 6, 4, 17, 29, 54, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1216940665, 'comment_body': 'Expected indentation of 8 spaces but found 7.', 'comment_created': datetime.datetime(2023, 6, 4, 17, 29, 55, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1224594363, 'comment_body': 'Similar blocks of code found in 2 locations. Consider refactoring.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 51, 38, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1224594368, 'comment_body': 'Similar blocks of code found in 2 locations. Consider refactoring.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 51, 38, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1224594370, 'comment_body': 'Missing space before opening brace.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 51, 38, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1224594372, 'comment_body': 'Block must not be padded by blank lines.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 51, 39, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1224594376, 'comment_body': ""Expected 'this' to be used by class method 'currentState'."", 'comment_created': datetime.datetime(2023, 6, 9, 17, 51, 39, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1224594379, 'comment_body': 'Expected space(s) after ""if"".', 'comment_created': datetime.datetime(2023, 6, 9, 17, 51, 39, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1224594382, 'comment_body': 'Unexpected function expression.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 51, 39, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1224594387, 'comment_body': 'Unexpected function expression.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 51, 40, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1245125000, 'comment_body': 'Similar blocks of code found in 2 locations. Consider refactoring.', 'comment_created': datetime.datetime(2023, 6, 28, 12, 19, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1245125005, 'comment_body': 'Similar blocks of code found in 2 locations. Consider refactoring.', 'comment_created': datetime.datetime(2023, 6, 28, 12, 19, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1245125010, 'comment_body': 'Unexpected function expression.', 'comment_created': datetime.datetime(2023, 6, 28, 12, 19, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1250400525, 'comment_body': 'This looks good, but is there any reason for not declaring these states under scope class?', 'comment_created': datetime.datetime(2023, 7, 3, 7, 36, 20, tzinfo=datetime.timezone.utc), 'commenter': 'pulkit-30', 'type': 'User'}, {'comment_id': 1251115713, 'comment_body': 'Nope,  We can also declare this under the scope class. If you want, I can do it.', 'comment_created': datetime.datetime(2023, 7, 3, 16, 55, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Prerna-0202', 'type': 'User'}, {'comment_id': 1251152297, 'comment_body': 'Similar blocks of code found in 2 locations. Consider refactoring.', 'comment_created': datetime.datetime(2023, 7, 3, 17, 44, 49, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1251152301, 'comment_body': 'Similar blocks of code found in 2 locations. Consider refactoring.', 'comment_created': datetime.datetime(2023, 7, 3, 17, 44, 49, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1251157407, 'comment_body': 'Done 👍', 'comment_created': datetime.datetime(2023, 7, 3, 17, 52, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Prerna-0202', 'type': 'User'}, {'comment_id': 1284692592, 'comment_body': 'Expected space(s) after ""if"".', 'comment_created': datetime.datetime(2023, 8, 4, 17, 41, 16, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1284692600, 'comment_body': 'Expected space(s) after ""if"".', 'comment_created': datetime.datetime(2023, 8, 4, 17, 41, 16, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1297181174, 'comment_body': 'Trailing spaces not allowed.', 'comment_created': datetime.datetime(2023, 8, 17, 12, 54, 2, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}]","[{'commit_sha': '0b1889c7b34b280d57695b18c5c87c1ec8e6d6b7', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6c2ec4440a30771924d90fae6b9998bb17bc6af', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b82b5c960de1a1998e6916aa3c17e422ce95942e', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e02c9c8741641e1ee53c79c7669107d31027534e', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e82ede3413d25bee2845ddef9a73dd3dcd6a7065', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eeb425c8dc61255826db23f71279d6a75b47ecd4', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16c8c9195690e1239574eac124d21117cd642d7f', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e86faa307f5354db910c6a0748d7508dc65d36dd', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66fd626adc24ba704aea8483539d2072c196c713', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2aaeac9a5fbbdac5075ad0269831772dbce48118', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e06845c9fe82cdfb7e26de3c3002b413a7ab56e9', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5701274004aab679c12e179b1e89f3d8fde6d68c', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56c7b7a6809982911cfceedc1efd8af08ac37415', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9856fc44a7f7bbccca94762995548d1c788bb780', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}]",Prerna Sharma,89515816,,User,,47,,12,41
1420807545,Added helpful functions for debugging of circuit,"### **GSOC'23 TASK**

Fixes: #3763 

#### Describe the changes you have made in this PR -

Exposing helpful functions In debug mode.
1. load() function to load circuits from circuit data.
2. detctCycle()  function to detect the nodes making cycles in the circuit.
3. previous() function to move to the previous stable state.

To identify the currently selected component (on the canvas) and modify that component's object (in the globalscope):-
1. I have created a function called getCurrentlySelectedComponent() that returns the currently selected component.
2. Then, created a function called modifyCurrentlySelectedComponent(property, value) that takes two parameters. The first parameter is the property of the currently selected component that needs to be modified, and the second parameter is the modified value, and then It modifies the specified property in the globalScope.

Screenshots:-

https://github.com/CircuitVerse/CircuitVerse/assets/89515816/0d28115d-3353-466f-97cd-618d8608fd1a

https://github.com/CircuitVerse/CircuitVerse/assets/89515816/c782b0ee-c1a0-4ade-b5e7-70bd2138b9a1

https://github.com/CircuitVerse/CircuitVerse/assets/89515816/ed7629fe-4a17-4d78-adca-87006f253293

Note: Please check **Allow edits from maintainers.** If you would like us to assist in the PR. 
",True,3870,https://api.github.com/repos/CircuitVerse/CircuitVerse/pulls/3870,https://github.com/CircuitVerse/CircuitVerse/pull/3870,closed,196,0,1,4,2,39,2,0,"[{'name': 'simulator'}, {'name': ""GSoC'23""}]",2023-07-05 10:09:20+00:00,2023-08-24 18:06:18+00:00,4348618.0,"50 days, 7:56:58","[{'comment_id': 1252881374, 'comment_body': ""Expected 'this' to be used by class method 'loadCircuit'."", 'comment_created': datetime.datetime(2023, 7, 5, 10, 11, 31, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1252881380, 'comment_body': 'Closing curly brace does not appear on the same line as the subsequent block.', 'comment_created': datetime.datetime(2023, 7, 5, 10, 11, 31, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1252881387, 'comment_body': 'Unexpected console statement.', 'comment_created': datetime.datetime(2023, 7, 5, 10, 11, 31, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1252881391, 'comment_body': ""Expected 'this' to be used by class method 'removeBugNodes'."", 'comment_created': datetime.datetime(2023, 7, 5, 10, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1252881398, 'comment_body': ""'x' is never reassigned. Use 'const' instead."", 'comment_created': datetime.datetime(2023, 7, 5, 10, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1252881402, 'comment_body': ""'value1' is never reassigned. Use 'const' instead."", 'comment_created': datetime.datetime(2023, 7, 5, 10, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1252881404, 'comment_body': ""Expected 'this' to be used by class method 'next'."", 'comment_created': datetime.datetime(2023, 7, 5, 10, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1252881406, 'comment_body': ""Expected 'this' to be used by class method 'previous'."", 'comment_created': datetime.datetime(2023, 7, 5, 10, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1257530315, 'comment_body': 'Function `detectCycleinCircuit` has a Cognitive Complexity of 18 (exceeds 5 allowed). Consider refactoring.', 'comment_created': datetime.datetime(2023, 7, 9, 19, 23, 36, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1257530316, 'comment_body': ""Expected 'this' to be used by class method 'previous'."", 'comment_created': datetime.datetime(2023, 7, 9, 19, 23, 36, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1257530317, 'comment_body': 'Closing curly brace does not appear on the same line as the subsequent block.', 'comment_created': datetime.datetime(2023, 7, 9, 19, 23, 36, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1257530318, 'comment_body': ""Expected 'this' to be used by class method 'detectCycleinCircuit'."", 'comment_created': datetime.datetime(2023, 7, 9, 19, 23, 36, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1257530319, 'comment_body': 'Use object destructuring.', 'comment_created': datetime.datetime(2023, 7, 9, 19, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1257530320, 'comment_body': 'Use object destructuring.', 'comment_created': datetime.datetime(2023, 7, 9, 19, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1257530321, 'comment_body': 'Use object destructuring.', 'comment_created': datetime.datetime(2023, 7, 9, 19, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1260891142, 'comment_body': 'Function `detectCycle` has 105 lines of code (exceeds 100 allowed). Consider refactoring.', 'comment_created': datetime.datetime(2023, 7, 12, 9, 28, 50, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1260891145, 'comment_body': 'Expected parentheses around arrow function argument having a body with curly braces.', 'comment_created': datetime.datetime(2023, 7, 12, 9, 28, 50, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1260891151, 'comment_body': ""Expected 'this' to be used by class method 'detectCycle'."", 'comment_created': datetime.datetime(2023, 7, 12, 9, 28, 50, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1260891154, 'comment_body': ""Expected '===' and instead saw '=='."", 'comment_created': datetime.datetime(2023, 7, 12, 9, 28, 50, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1260891160, 'comment_body': ""'obj' is already declared in the upper scope."", 'comment_created': datetime.datetime(2023, 7, 12, 9, 28, 51, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1260891166, 'comment_body': ""'globalScope' is already declared in the upper scope."", 'comment_created': datetime.datetime(2023, 7, 12, 9, 28, 51, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1260891171, 'comment_body': ""'result' is already declared in the upper scope."", 'comment_created': datetime.datetime(2023, 7, 12, 9, 28, 51, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1260891175, 'comment_body': 'Function `detectCycle` has a Cognitive Complexity of 55 (exceeds 5 allowed). Consider refactoring.', 'comment_created': datetime.datetime(2023, 7, 12, 9, 28, 51, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1260891180, 'comment_body': 'Expected parentheses around arrow function argument having a body with curly braces.', 'comment_created': datetime.datetime(2023, 7, 12, 9, 28, 51, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1260891184, 'comment_body': 'Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.', 'comment_created': datetime.datetime(2023, 7, 12, 9, 28, 51, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1261160983, 'comment_body': 'Function `detectCycle` has 105 lines of code (exceeds 100 allowed). Consider refactoring.', 'comment_created': datetime.datetime(2023, 7, 12, 13, 12, 13, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1261160994, 'comment_body': 'Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.', 'comment_created': datetime.datetime(2023, 7, 12, 13, 12, 13, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1261160998, 'comment_body': ""Expected 'this' to be used by class method 'detectCycle'."", 'comment_created': datetime.datetime(2023, 7, 12, 13, 12, 14, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1261161004, 'comment_body': 'Function `detectCycle` has a Cognitive Complexity of 55 (exceeds 5 allowed). Consider refactoring.', 'comment_created': datetime.datetime(2023, 7, 12, 13, 12, 14, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1261161007, 'comment_body': 'Unexpected function expression.', 'comment_created': datetime.datetime(2023, 7, 12, 13, 12, 14, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1261161010, 'comment_body': 'Unexpected function expression.', 'comment_created': datetime.datetime(2023, 7, 12, 13, 12, 14, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1261161014, 'comment_body': ""Unnecessary 'else' after 'return'."", 'comment_created': datetime.datetime(2023, 7, 12, 13, 12, 14, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1266674283, 'comment_body': 'Function `detectCycle` has a Cognitive Complexity of 49 (exceeds 5 allowed). Consider refactoring.', 'comment_created': datetime.datetime(2023, 7, 18, 12, 6, 28, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1266674288, 'comment_body': 'Function `modifyCurrentlySelectedComponent` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring.', 'comment_created': datetime.datetime(2023, 7, 18, 12, 6, 28, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1266674293, 'comment_body': 'Unexpected parentheses around single function argument having a body with no curly braces.', 'comment_created': datetime.datetime(2023, 7, 18, 12, 6, 28, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1266674297, 'comment_body': ""Expected 'this' to be used by class method 'findNodeIndexById'."", 'comment_created': datetime.datetime(2023, 7, 18, 12, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1266674300, 'comment_body': ""Expected 'this' to be used by class method 'getCurrentlySelectedComponent'."", 'comment_created': datetime.datetime(2023, 7, 18, 12, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1266674304, 'comment_body': ""Expected 'this' to be used by class method 'getAllSelectedComponents'."", 'comment_created': datetime.datetime(2023, 7, 18, 12, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1266674307, 'comment_body': ""Function declared in a loop contains unsafe references to variable(s) 'globalScope', 'globalScope'."", 'comment_created': datetime.datetime(2023, 7, 18, 12, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}]","[{'commit_sha': 'b9909e44115dbb30adb43744c5659629526e0f58', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4f399fbf1388efdef9c61d2f6bfee31c203c374', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8f54989d9eb98b65a6317c8a868471be4527517', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81f77b2c012d86b61f20f15c890453edbe1db0b1', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}]",Prerna Sharma,89515816,,User,,47,,12,41
1369343373,Implemented_safe_recovery_from_simulator_crash,"### **GSOC'23 TASK**

Fixes #3762 

### Implemented Tasks
Implemented a safe recovery from simulator crashes
The safe recovery flow should ideally let the user restore a previous non-erroneous state of the circuit.

#### Describe the changes you have made in this PR -
1.  Added an autosave() function which autosave the current circuit data.
2.  On an interval of 3 seconds, checkBackups() function will check the globalScope.backups.length, if it is increased then the autosave() function will call.
3. So, when the simulator will crash, the autosave variable in localstorage contains a non-erroneous state of the circuit and let the user restore a non-erroneous state of the circuit.

### Demo-

1. 

https://github.com/CircuitVerse/CircuitVerse/assets/89515816/bf2438d3-c8bb-4f0e-84df-0d1ab2bd0061

2.

https://github.com/CircuitVerse/CircuitVerse/assets/89515816/76e3c1c5-dcc2-4939-b15e-b3a221916f8b


Note: Please check **Allow edits from maintainers.** if you would like us to assist in the PR. 
",True,3767,https://api.github.com/repos/CircuitVerse/CircuitVerse/pulls/3767,https://github.com/CircuitVerse/CircuitVerse/pull/3767,closed,42,6,3,7,2,27,2,0,"[{'name': 'simulator'}, {'name': ""GSoC'23""}]",2023-05-29 16:07:55+00:00,2023-08-11 07:34:09+00:00,6362774.0,"73 days, 15:26:14","[{'comment_id': 1209443049, 'comment_body': 'Similar blocks of code found in 2 locations. Consider refactoring.', 'comment_created': datetime.datetime(2023, 5, 29, 16, 9, 47, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1209443051, 'comment_body': 'Trailing spaces not allowed.', 'comment_created': datetime.datetime(2023, 5, 29, 16, 9, 47, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1209443054, 'comment_body': ""'data' is already defined."", 'comment_created': datetime.datetime(2023, 5, 29, 16, 9, 48, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1209443057, 'comment_body': ""'data' used outside of binding context."", 'comment_created': datetime.datetime(2023, 5, 29, 16, 9, 48, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1209443060, 'comment_body': ""'data' used outside of binding context."", 'comment_created': datetime.datetime(2023, 5, 29, 16, 9, 48, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1209443063, 'comment_body': ""'data' used outside of binding context."", 'comment_created': datetime.datetime(2023, 5, 29, 16, 9, 48, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1209443067, 'comment_body': ""Expected exception block, space or tab after '//' in comment."", 'comment_created': datetime.datetime(2023, 5, 29, 16, 9, 48, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1209443074, 'comment_body': 'Unexpected function expression.', 'comment_created': datetime.datetime(2023, 5, 29, 16, 9, 48, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1209443077, 'comment_body': ""Assignment to property of function parameter 'event'."", 'comment_created': datetime.datetime(2023, 5, 29, 16, 9, 49, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1209443078, 'comment_body': 'Function expected no return value.', 'comment_created': datetime.datetime(2023, 5, 29, 16, 9, 49, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1224625056, 'comment_body': 'Expected indentation of 0 spaces but found 2.', 'comment_created': datetime.datetime(2023, 6, 9, 18, 30, 9, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1224625060, 'comment_body': ""Identifier 'autosave_array' is not in camel case."", 'comment_created': datetime.datetime(2023, 6, 9, 18, 30, 10, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1224625072, 'comment_body': ""Multiple spaces found before 'autosave_array'."", 'comment_created': datetime.datetime(2023, 6, 9, 18, 30, 10, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1225237958, 'comment_body': 'Expected indentation of 4 spaces but found 2.', 'comment_created': datetime.datetime(2023, 6, 10, 9, 36, 44, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1225237959, 'comment_body': 'Expected indentation of 4 spaces but found 2.', 'comment_created': datetime.datetime(2023, 6, 10, 9, 36, 45, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1225237961, 'comment_body': 'Expected indentation of 4 spaces but found 2.', 'comment_created': datetime.datetime(2023, 6, 10, 9, 36, 45, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1225237962, 'comment_body': 'Expected indentation of 8 spaces but found 4.', 'comment_created': datetime.datetime(2023, 6, 10, 9, 36, 45, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1225237963, 'comment_body': 'Expected indentation of 8 spaces but found 4.', 'comment_created': datetime.datetime(2023, 6, 10, 9, 36, 45, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1225237964, 'comment_body': ""'recoverDataFlow' was used before it was defined."", 'comment_created': datetime.datetime(2023, 6, 10, 9, 36, 45, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1225237965, 'comment_body': 'Expected indentation of 4 spaces but found 2.', 'comment_created': datetime.datetime(2023, 6, 10, 9, 36, 45, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1225237967, 'comment_body': 'Expected indentation of 8 spaces but found 4.', 'comment_created': datetime.datetime(2023, 6, 10, 9, 36, 45, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1225237968, 'comment_body': 'Expected indentation of 8 spaces but found 4.', 'comment_created': datetime.datetime(2023, 6, 10, 9, 36, 46, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1225237969, 'comment_body': ""'recoverDataFlow' was used before it was defined."", 'comment_created': datetime.datetime(2023, 6, 10, 9, 36, 46, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1225268934, 'comment_body': ""'recoverDataFlow' was used before it was defined."", 'comment_created': datetime.datetime(2023, 6, 10, 10, 32, 36, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1225268937, 'comment_body': ""'recoverDataFlow' was used before it was defined."", 'comment_created': datetime.datetime(2023, 6, 10, 10, 32, 36, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1225268939, 'comment_body': 'Missing space before function parentheses.', 'comment_created': datetime.datetime(2023, 6, 10, 10, 32, 37, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1225268942, 'comment_body': 'Missing semicolon.', 'comment_created': datetime.datetime(2023, 6, 10, 10, 32, 37, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}]","[{'commit_sha': 'a28b5ddbd3d9898acc7e4390f623c5e9e2991d3c', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12aa7e66cff62b4a3e2d69a3656e1db1f4a29bb9', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d0bd4fb2dda0c457bffb3b8dd5769fd25b1c88e', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53691e6832a7dbef5d7160dba11c39e4f23bcc6d', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1d91ad66c634c70173a93a37418dc0696417fad', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7d350c2849dab2bcfbe896c6bbcc0821026e5ca', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b32af5d4ebe9d763b5b08ab0797a8b61369646a5', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}]",Prerna Sharma,89515816,,User,,47,,12,41
1415267471,Better system for high impedence values,"### **GSOC'23 TASK**

#### Describe the changes you have made in this PR -

1. Fixed Controlled Inverter functionality.
2. Fixed  'https://github.com/CircuitVerse/CircuitVerse/issues/3063' (When the enable pin of the tristate buffer is grounded, not passing through the input, it will cause a Simulation Stack Limit Exceeded error if the output is connected to the input.)
3. Verified the functionality of the tristate and controlled Inverter in the subcircuit.
4.  In [node.js/L363](https://github.com/CircuitVerse/CircuitVerse/blob/master/simulator/src/node.js#L363), added condition to queue the nodes after a tristate if the tristate is in high impedence state. 
5. Updated test of Controlled Inverter.


Note: Please check **Allow edits from maintainers.** If you would like us to assist in the PR. 
",False,3858,https://api.github.com/repos/CircuitVerse/CircuitVerse/pulls/3858,https://github.com/CircuitVerse/CircuitVerse/pull/3858,open,26,15,5,6,1,12,2,0,"[{'name': 'simulator'}, {'name': ""GSoC'23""}]",2023-06-30 18:47:43+00:00,,0.0,,"[{'comment_id': 1248185379, 'comment_body': 'Similar blocks of code found in 2 locations. Consider refactoring.', 'comment_created': datetime.datetime(2023, 6, 30, 18, 50, 41, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1248185385, 'comment_body': 'Unexpected if as the only statement in an else block.', 'comment_created': datetime.datetime(2023, 6, 30, 18, 50, 42, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1248185387, 'comment_body': 'Unexpected if as the only statement in an else block.', 'comment_created': datetime.datetime(2023, 6, 30, 18, 50, 42, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1248185390, 'comment_body': 'Expected indentation of 16 spaces but found 15.', 'comment_created': datetime.datetime(2023, 6, 30, 18, 50, 42, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1248185393, 'comment_body': 'Expected indentation of 16 spaces but found 15.', 'comment_created': datetime.datetime(2023, 6, 30, 18, 50, 42, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1248921215, 'comment_body': 'Consider simplifying this complex logical expression.', 'comment_created': datetime.datetime(2023, 7, 1, 18, 36, 3, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1248921216, 'comment_body': 'Avoid deeply nested control flow statements.', 'comment_created': datetime.datetime(2023, 7, 1, 18, 36, 4, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1248921217, 'comment_body': 'Trailing spaces not allowed.', 'comment_created': datetime.datetime(2023, 7, 1, 18, 36, 4, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1248921218, 'comment_body': 'Trailing spaces not allowed.', 'comment_created': datetime.datetime(2023, 7, 1, 18, 36, 4, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1248921219, 'comment_body': 'Trailing spaces not allowed.', 'comment_created': datetime.datetime(2023, 7, 1, 18, 36, 4, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1248921220, 'comment_body': 'Trailing spaces not allowed.', 'comment_created': datetime.datetime(2023, 7, 1, 18, 36, 4, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}, {'comment_id': 1248921221, 'comment_body': 'Closing curly brace does not appear on the same line as the subsequent block.', 'comment_created': datetime.datetime(2023, 7, 1, 18, 36, 5, tzinfo=datetime.timezone.utc), 'commenter': 'codeclimate[bot]', 'type': 'Bot'}]","[{'commit_sha': '005e56ac0560b70851b102032600a084c8a2b7e7', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae49183b62db8a02dee4eb98dc88d9af3eca520c', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1270876bd353a670889b62c328642ef683df476d', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '587709e574cca86cbeb0a20c4c40d70d87e7962b', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2ce42a5e62d932cb31cd24fce6b719da8090951', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7671aa908a87dccf5fc70d2268259f95b5ea642', 'committer_username': 'Prerna-0202', 'committer_name': 'Prerna Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2021, 8, 25, 9, 5, 25, tzinfo=datetime.timezone.utc)}]",Prerna Sharma,89515816,,User,,47,,12,41

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
153442864,CircuitVerse,CircuitVerse/CircuitVerse,JavaScript,1298,838,21,224,2108,849,85,329,"[{'id': 1536626961, 'number': 4096, 'closed': datetime.datetime(2023, 10, 2, 7, 17, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 30, 15, 17, 27, tzinfo=datetime.timezone.utc), 'time_taken': 143994.0, 'time_delta': '1 day, 15:59:54', 'additions': 41, 'deletions': 75, 'state': 'closed'}, {'id': 1509050798, 'number': 4022, 'closed': datetime.datetime(2023, 9, 10, 7, 55, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 10, 7, 23, 26, tzinfo=datetime.timezone.utc), 'time_taken': 1920.0, 'time_delta': '0:32:00', 'additions': 35, 'deletions': 101, 'state': 'closed'}, {'id': 1456925510, 'number': 3928, 'closed': datetime.datetime(2023, 8, 27, 10, 57, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 31, 20, 4, tzinfo=datetime.timezone.utc), 'time_taken': 2299983.0, 'time_delta': '26 days, 14:53:03', 'additions': 20, 'deletions': 7, 'state': 'closed'}, {'id': 1447285780, 'number': 3916, 'closed': datetime.datetime(2023, 9, 5, 16, 12, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 24, 19, 56, 38, tzinfo=datetime.timezone.utc), 'time_taken': 3701773.0, 'time_delta': '42 days, 20:16:13', 'additions': 75, 'deletions': 41, 'state': 'closed'}, {'id': 1420807545, 'number': 3870, 'closed': datetime.datetime(2023, 8, 24, 18, 6, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 10, 9, 20, tzinfo=datetime.timezone.utc), 'time_taken': 4348618.0, 'time_delta': '50 days, 7:56:58', 'additions': 196, 'deletions': 0, 'state': 'closed'}, {'id': 1415267471, 'number': 3858, 'closed': None, 'created': datetime.datetime(2023, 6, 30, 18, 47, 43, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 26, 'deletions': 15, 'state': 'open'}, {'id': 1377856850, 'number': 3781, 'closed': datetime.datetime(2023, 8, 27, 11, 39, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 4, 17, 28, 19, tzinfo=datetime.timezone.utc), 'time_taken': 7236670.0, 'time_delta': '83 days, 18:11:10', 'additions': 101, 'deletions': 35, 'state': 'closed'}, {'id': 1369343373, 'number': 3767, 'closed': datetime.datetime(2023, 8, 11, 7, 34, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 29, 16, 7, 55, tzinfo=datetime.timezone.utc), 'time_taken': 6362774.0, 'time_delta': '73 days, 15:26:14', 'additions': 42, 'deletions': 6, 'state': 'closed'}, {'id': 1281632049, 'number': 3685, 'closed': datetime.datetime(2023, 3, 19, 14, 12, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 19, 14, 12, 27, tzinfo=datetime.timezone.utc), 'time_taken': 7.0, 'time_delta': '0:00:07', 'additions': 36, 'deletions': 11, 'state': 'closed'}, {'id': 1277457743, 'number': 3674, 'closed': datetime.datetime(2023, 3, 15, 20, 3, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 15, 20, 2, 56, tzinfo=datetime.timezone.utc), 'time_taken': 6.0, 'time_delta': '0:00:06', 'additions': 30, 'deletions': 15, 'state': 'closed'}, {'id': 1220235321, 'number': 3533, 'closed': None, 'created': datetime.datetime(2023, 1, 28, 10, 10, 22, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 30, 'deletions': 0, 'state': 'open'}, {'id': 1212530939, 'number': 3508, 'closed': datetime.datetime(2023, 2, 2, 2, 17, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 22, 7, 28, 1, tzinfo=datetime.timezone.utc), 'time_taken': 931749.0, 'time_delta': '10 days, 18:49:09', 'additions': 64, 'deletions': 54, 'state': 'closed'}, {'id': 1178810470, 'number': 3441, 'closed': datetime.datetime(2022, 12, 28, 15, 39, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 27, 19, 24, 53, tzinfo=datetime.timezone.utc), 'time_taken': 72872.0, 'time_delta': '20:14:32', 'additions': 9, 'deletions': 7, 'state': 'closed'}, {'id': 1145257358, 'number': 3377, 'closed': datetime.datetime(2023, 1, 28, 14, 19, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 4, 19, 12, 7, tzinfo=datetime.timezone.utc), 'time_taken': 4734427.0, 'time_delta': '54 days, 19:07:07', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 1142992538, 'number': 3375, 'closed': None, 'created': datetime.datetime(2022, 12, 2, 9, 50, 33, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 23, 'deletions': 5, 'state': 'open'}, {'id': 1135513445, 'number': 3364, 'closed': datetime.datetime(2022, 12, 26, 14, 26, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 25, 4, 38, 14, tzinfo=datetime.timezone.utc), 'time_taken': 2713696.0, 'time_delta': '31 days, 9:48:16', 'additions': 97, 'deletions': 124, 'state': 'closed'}, {'id': 979128295, 'number': 3215, 'closed': datetime.datetime(2022, 6, 28, 8, 55, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 25, 20, 0, 28, tzinfo=datetime.timezone.utc), 'time_taken': 219330.0, 'time_delta': '2 days, 12:55:30', 'additions': 50, 'deletions': 52, 'state': 'closed'}, {'id': 969178926, 'number': 3189, 'closed': datetime.datetime(2022, 7, 5, 12, 12, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 16, 10, 52, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1646407.0, 'time_delta': '19 days, 1:20:07', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 957244290, 'number': 3160, 'closed': datetime.datetime(2022, 6, 6, 6, 23, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 3, 9, 13, 1, tzinfo=datetime.timezone.utc), 'time_taken': 249025.0, 'time_delta': '2 days, 21:10:25', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 919715698, 'number': 3086, 'closed': datetime.datetime(2022, 6, 11, 16, 49, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 26, 17, 53, 52, tzinfo=datetime.timezone.utc), 'time_taken': 3970539.0, 'time_delta': '45 days, 22:55:39', 'additions': 20, 'deletions': 9, 'state': 'closed'}, {'id': 905807515, 'number': 3068, 'closed': datetime.datetime(2022, 4, 11, 10, 27, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 11, 10, 26, 51, tzinfo=datetime.timezone.utc), 'time_taken': 28.0, 'time_delta': '0:00:28', 'additions': 37, 'deletions': 2, 'state': 'closed'}, {'id': 905716975, 'number': 3067, 'closed': datetime.datetime(2022, 4, 11, 9, 4, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 11, 9, 4, 2, tzinfo=datetime.timezone.utc), 'time_taken': 23.0, 'time_delta': '0:00:23', 'additions': 31, 'deletions': 9, 'state': 'closed'}, {'id': 840100386, 'number': 2891, 'closed': None, 'created': datetime.datetime(2022, 2, 4, 10, 5, 13, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 66, 'deletions': 16, 'state': 'open'}, {'id': 839206772, 'number': 2889, 'closed': None, 'created': datetime.datetime(2022, 2, 3, 11, 37, 37, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 48, 'deletions': 1, 'state': 'open'}, {'id': 835406625, 'number': 2863, 'closed': None, 'created': datetime.datetime(2022, 1, 30, 15, 37, 36, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 459, 'deletions': 177, 'state': 'open'}, {'id': 818676004, 'number': 2775, 'closed': None, 'created': datetime.datetime(2022, 1, 11, 13, 4, 57, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 22, 'deletions': 8, 'state': 'open'}, {'id': 817962065, 'number': 2772, 'closed': datetime.datetime(2022, 1, 10, 19, 40, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 10, 19, 40, 15, tzinfo=datetime.timezone.utc), 'time_taken': 35.0, 'time_delta': '0:00:35', 'additions': 26, 'deletions': 8, 'state': 'closed'}, {'id': 817937798, 'number': 2771, 'closed': datetime.datetime(2022, 1, 10, 19, 17, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 10, 19, 8, 13, tzinfo=datetime.timezone.utc), 'time_taken': 529.0, 'time_delta': '0:08:49', 'additions': 28, 'deletions': 16, 'state': 'closed'}, {'id': 806814346, 'number': 2724, 'closed': datetime.datetime(2021, 12, 22, 12, 16, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 20, 16, 40, 20, tzinfo=datetime.timezone.utc), 'time_taken': 156983.0, 'time_delta': '1 day, 19:36:23', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 795260824, 'number': 2672, 'closed': datetime.datetime(2021, 12, 8, 13, 26, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 5, 9, 43, 36, tzinfo=datetime.timezone.utc), 'time_taken': 272580.0, 'time_delta': '3 days, 3:43:00', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 795256685, 'number': 2671, 'closed': datetime.datetime(2021, 12, 5, 9, 15, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 5, 9, 15, 7, tzinfo=datetime.timezone.utc), 'time_taken': 11.0, 'time_delta': '0:00:11', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 789912957, 'number': 2653, 'closed': datetime.datetime(2023, 2, 3, 5, 24, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 27, 10, 49, 43, tzinfo=datetime.timezone.utc), 'time_taken': 37391704.0, 'time_delta': '432 days, 18:35:04', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 788273275, 'number': 2644, 'closed': datetime.datetime(2021, 12, 13, 4, 11, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 24, 20, 15, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1583736.0, 'time_delta': '18 days, 7:55:36', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 785191623, 'number': 2622, 'closed': datetime.datetime(2021, 11, 25, 14, 26, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 20, 10, 46, 49, tzinfo=datetime.timezone.utc), 'time_taken': 445203.0, 'time_delta': '5 days, 3:40:03', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 782986666, 'number': 2609, 'closed': datetime.datetime(2022, 4, 10, 10, 20, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 17, 18, 3, 10, tzinfo=datetime.timezone.utc), 'time_taken': 12413847.0, 'time_delta': '143 days, 16:17:27', 'additions': 112, 'deletions': 3, 'state': 'closed'}, {'id': 781964462, 'number': 2606, 'closed': datetime.datetime(2021, 11, 20, 15, 2, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 16, 18, 43, tzinfo=datetime.timezone.utc), 'time_taken': 332356.0, 'time_delta': '3 days, 20:19:16', 'additions': 7, 'deletions': 2, 'state': 'closed'}, {'id': 774819588, 'number': 2593, 'closed': None, 'created': datetime.datetime(2021, 11, 6, 16, 8, 24, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 35, 'deletions': 20, 'state': 'open'}, {'id': 764723544, 'number': 2566, 'closed': None, 'created': datetime.datetime(2021, 10, 23, 18, 2, 37, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 5, 'deletions': 2, 'state': 'open'}, {'id': 754480153, 'number': 2535, 'closed': datetime.datetime(2023, 2, 3, 10, 16, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 9, 9, 18, 23, tzinfo=datetime.timezone.utc), 'time_taken': 41648314.0, 'time_delta': '482 days, 0:58:34', 'additions': 25, 'deletions': 4, 'state': 'closed'}]"
