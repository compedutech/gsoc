pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
684554546,California Housing Price Predictions Notebook,Sorry Marcus :(,True,167,https://api.github.com/repos/mlpack/examples/pulls/167,https://github.com/mlpack/examples/pull/167,closed,3204,378,15,17,5,26,2,0,"[{'name': 't: added feature'}, {'name': 'notebook'}]",2021-07-06 17:26:54+00:00,2021-07-11 15:41:20+00:00,425666.0,"4 days, 22:14:26","[{'comment_id': 664895372, 'comment_body': '```suggestion\r\n  if (pModule != NULL)\r\n  {\r\n    pFunc = PyObject_GetAttrString(pModule, ""cpandasscattercolor"");\r\n    if (pFunc && PyCallable_Check(pFunc))\r\n    {\r\n```', 'comment_created': datetime.datetime(2021, 7, 6, 21, 39, 29, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664895488, 'comment_body': '```suggestion\r\n```\r\n\r\nRemove the extra line here.', 'comment_created': datetime.datetime(2021, 7, 6, 21, 39, 47, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664895578, 'comment_body': '```suggestion\r\n      if (PyErr_Occurred())\r\n```', 'comment_created': datetime.datetime(2021, 7, 6, 21, 39, 56, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664895853, 'comment_body': '```suggestion\r\n                      const std::string& imgFile,\r\n                      const std::string& x,\r\n                      const std::string& y,\r\n                      const std::string& label,\r\n                      const std::string& c,\r\n                      const std::string& outFile,\r\n                      const int width = 10,\r\n                      const int height= 10)\r\n```', 'comment_created': datetime.datetime(2021, 7, 6, 21, 40, 28, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664896025, 'comment_body': '```suggestion\r\n  if (pModule != NULL)\r\n  {\r\n    pFunc = PyObject_GetAttrString(pModule, ""cpandasscattermap"");\r\n    if (pFunc && PyCallable_Check(pFunc))\r\n    {\r\n```', 'comment_created': datetime.datetime(2021, 7, 6, 21, 40, 49, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664896078, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 7, 6, 21, 40, 56, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664896191, 'comment_body': '```suggestion\r\n      if (PyErr_Occurred())\r\n```', 'comment_created': datetime.datetime(2021, 7, 6, 21, 41, 6, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664896423, 'comment_body': '```suggestion\r\n    fig = dataset.plot(kind=""scatter"", x=x, y=y, alpha=0.4,s=dataset[""population""]/100,\r\n                       label=label, c=c, cmap=plt.get_cmap(""jet""), colorbar=True,\r\n                       sharex = False)\r\n```', 'comment_created': datetime.datetime(2021, 7, 6, 21, 41, 36, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664896796, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 7, 6, 21, 42, 22, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664896937, 'comment_body': '```suggestion\r\n    // This has to be adapted if you run this on your local system,\r\n    // so whenever you call the python script it can find the correct\r\n    // module -> PYTHONPATH, on lab.mlpack.org we put all the utility\r\n    // functions in the utils folder so we add that path\r\n    // to the Python search path.\r\n    Py_Initialize();\r\n```', 'comment_created': datetime.datetime(2021, 7, 6, 21, 42, 39, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664897081, 'comment_body': '```suggestion\r\n    if (pModule != NULL)\r\n    {\r\n        // The Python function from the impute.py script\r\n        // we like to call - cimputer\r\n        pFunc = PyObject_GetAttrString(pModule, ""cimputer"");\r\n\r\n        if (pFunc && PyCallable_Check(pFunc))\r\n        {\r\n```', 'comment_created': datetime.datetime(2021, 7, 6, 21, 43, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664897269, 'comment_body': '```suggestion\r\n            // We call the object with function name and arguments provided in c++ notebook.\r\n```', 'comment_created': datetime.datetime(2021, 7, 6, 21, 43, 25, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664897308, 'comment_body': '```suggestion\r\n            else\r\n            {\r\n```', 'comment_created': datetime.datetime(2021, 7, 6, 21, 43, 33, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664897380, 'comment_body': '```suggestion\r\n        else\r\n        {\r\n```', 'comment_created': datetime.datetime(2021, 7, 6, 21, 43, 40, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 664897430, 'comment_body': '```suggestion\r\n        else\r\n        {\r\n```', 'comment_created': datetime.datetime(2021, 7, 6, 21, 43, 48, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 665218400, 'comment_body': ""<p>Lets add spaces between operators.</p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/mlpack/examples/pull/167/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='RESOLVED' data-cellIndex='15'/>"", 'comment_created': datetime.datetime(2021, 7, 7, 9, 48, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 665218404, 'comment_body': ""<p>Maybe we should move this comment above the fillna portion of code and explain why median will work there.</p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/mlpack/examples/pull/167/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='RESOLVED' data-cellIndex='21'/>"", 'comment_created': datetime.datetime(2021, 7, 7, 9, 48, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 665218405, 'comment_body': ""<p>Lets add spaces between operators.</p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/mlpack/examples/pull/167/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='RESOLVED' data-cellIndex='28'/>"", 'comment_created': datetime.datetime(2021, 7, 7, 9, 48, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 665238902, 'comment_body': ""<p>Lets add a comment to signify what 14 means.</p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/mlpack/examples/pull/167/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='RESOLVED' data-cellIndex='16'/>"", 'comment_created': datetime.datetime(2021, 7, 7, 10, 17, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 665238903, 'comment_body': ""<p>Add space between comments.</p><p> </p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/mlpack/examples/pull/167/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='RESOLVED' data-cellIndex='19'/>"", 'comment_created': datetime.datetime(2021, 7, 7, 10, 17, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 665238906, 'comment_body': ""<p>Lets add space after //.</p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/mlpack/examples/pull/167/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='RESOLVED' data-cellIndex='25'/>"", 'comment_created': datetime.datetime(2021, 7, 7, 10, 17, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 667133098, 'comment_body': '```suggestion\r\n                  [&](const arma::mat& /* param */)\r\n```\r\n\r\nThis was correct before.', 'comment_created': datetime.datetime(2021, 7, 9, 18, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 667134562, 'comment_body': ""We should use the dataset uploaded to https://datasets.mlpack.org/, it's compressed, so we have to extract it before as well."", 'comment_created': datetime.datetime(2021, 7, 9, 18, 21, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 667140638, 'comment_body': ""I'm not sure what happened to the file here, but I think it was correct before, so let us remove the changes from the PR."", 'comment_created': datetime.datetime(2021, 7, 9, 18, 32, 42, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 667267427, 'comment_body': ""Ohh..it's not an issue.So, as this file was messed up, I just copied it from different branch. What happened in the process is, all the outputs from jupyter notebook is removed(and nothing else). So, I just ran the notebook once, there is no change in any code."", 'comment_created': datetime.datetime(2021, 7, 10, 0, 56, 4, tzinfo=datetime.timezone.utc), 'commenter': 'swaingotnochill', 'type': 'User'}, {'comment_id': 667268076, 'comment_body': 'So, the problem is the dataset is different compared to original dataset. @rcurtin can you please add the original housing.csv in the dataset.mlpack.org ', 'comment_created': datetime.datetime(2021, 7, 10, 1, 1, 46, tzinfo=datetime.timezone.utc), 'commenter': 'swaingotnochill', 'type': 'User'}]","[{'commit_sha': '482412ab2d347de389bb0cae607f718bb4f788e3', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ac1442866f05aab82de8143296ba8f2f7d38815', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '312364a76f12aa8f23820bac7c5be0e9732637b6', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d5e9ac283092906abc413ab4fdde0c0dacf111f', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd82ea2894fe292b379cfa92dfcb94407c96887dd', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bbcbfd570760ecb86e8975a5d952106a4eb5911', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '708e27e08c69fa5f7bc39ee95594180117338be1', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eac8daf068f40a908654aebb392d13e25a9e7b19', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f77410ce42fc661b499cc4de14ef9320c7c385b8', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff862f556c607bc3a274cb2b1cda5e1ea9e6cfe1', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '510229e166d5c1b75d1e36bd6b10c2ec733a68da', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c04b8850e35dfd230b06eb859f8b597b90b0750', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '069beb5f5ef6894b73f9c2b906113b6c84a7bacd', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee376904d1cd968a97761f98720df7f38d72caf0', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a5e9cd619c746084f1f8140d37adb0fb09dc68e', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0444c61ff9404f16744d25fcd2a4eb6e3b540f27', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bf52d3128afd1f535bab6e09f7898c7adc10e3e', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}]",Roshan Swain,54025913,,User,,157,,13,27
696499321,GANs mnist,"@kartikdutt18 @zoq I have created this new pull request coz in the earlier branch a lot of stuff has been messed up. 
To do:
1. Document Model architecture( It's half done).
2. Notebook to create samples( but this can be done after we train the model).

 Please check the correctness of script, especially the Evaluate Function and model save method.
 @zoq If this training file is correct, can you please train the model? 
Right now, the model will on 657 cycles with 1 epoch per cycle. May be we can improve on this? Your thoughts.


P.S: Ignore the file path, and make file configurations, I will fix them later on.",False,172,https://api.github.com/repos/mlpack/examples/pulls/172,https://github.com/mlpack/examples/pull/172,open,653,0,8,22,14,47,3,0,"[{'name': 's: needs review'}, {'name': 's: keep open'}, {'name': 'notebook'}]",2021-07-25 13:08:32+00:00,,0.0,,"[{'comment_id': 677110250, 'comment_body': ""We don't need to use loops anymore, You can refer to [mnist_cnn](https://github.com/mlpack/examples/blob/4b93fecbf053d796bf3b0337e6f49a14ef17b335/mnist_cnn/mnist_cnn.cpp#L173)."", 'comment_created': datetime.datetime(2021, 7, 27, 4, 34, 1, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 677482901, 'comment_body': 'For saving periodically, you can use https://github.com/mlpack/models/blob/master/ensmallen_utils/periodic_save.hpp \r\nYou can download the file and use it temporarily for testing / forming the notebook.', 'comment_created': datetime.datetime(2021, 7, 27, 14, 4, 15, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 682264227, 'comment_body': 'If I check the output against the master build it looks good. Did you run this against the master branch as well or the latest stable release? If you run this against the latest stable release did you remove the header from the csv file?', 'comment_created': datetime.datetime(2021, 8, 4, 3, 45, 51, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 682264986, 'comment_body': ""I was using the master branch while compiling( we made those changes together if you remember). I haven't tested with the stable release version."", 'comment_created': datetime.datetime(2021, 8, 4, 3, 48, 29, tzinfo=datetime.timezone.utc), 'commenter': 'swaingotnochill', 'type': 'User'}, {'comment_id': 682265425, 'comment_body': 'Can you post the output you get?', 'comment_created': datetime.datetime(2021, 8, 4, 3, 49, 51, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 682265882, 'comment_body': ""It's simple as the Validation dataset size is (0,0) . Edit[ it as (----, 0)."", 'comment_created': datetime.datetime(2021, 8, 4, 3, 51, 17, tzinfo=datetime.timezone.utc), 'commenter': 'swaingotnochill', 'type': 'User'}, {'comment_id': 682267686, 'comment_body': ""This is so strange, I'm using the exact same code and get:\r\n```\r\n785x42000\r\n Dataset Loaded\r\n Train Dataset Size : (784, 8400)\r\n Validation Dataset Size : (784, 33600)\r\n```"", 'comment_created': datetime.datetime(2021, 8, 4, 3, 57, 3, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 682269142, 'comment_body': 'Can you run:\r\n\r\n`const size_t testSize = static_cast<size_t>(mnistDataset.n_cols * trainRatio);`\r\n\r\nand drop the output here, that line is used inside the split function to set the size of the test matrix.', 'comment_created': datetime.datetime(2021, 8, 4, 4, 1, 38, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 682272774, 'comment_body': '``` 785x42000\r\n Dataset Loaded \r\n Train Dataset Size : (784, 42000)\r\n Validation Dataset Size : (784, 0)\r\n testSize : 0 \r\n```\r\n', 'comment_created': datetime.datetime(2021, 8, 4, 4, 13, 43, tzinfo=datetime.timezone.utc), 'commenter': 'swaingotnochill', 'type': 'User'}, {'comment_id': 682273457, 'comment_body': ""I am rebuilding from master ( just to make sure its not my build issue)...I think its already past 12 am midnight...you should get some sleep...let's talk back in morning..."", 'comment_created': datetime.datetime(2021, 8, 4, 4, 15, 32, tzinfo=datetime.timezone.utc), 'commenter': 'swaingotnochill', 'type': 'User'}, {'comment_id': 682274399, 'comment_body': 'Hm, can you also print `mnistDataset.n_cols` and `trainRatio`. The size of `mnistDataset` should not change after you call the split function, and I think you are still using `trainRatio = 0.8`?', 'comment_created': datetime.datetime(2021, 8, 4, 4, 18, 43, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 682274958, 'comment_body': '`Train Dataset Size : (784, 42000)` --> `42000`  is also the entire dataset.', 'comment_created': datetime.datetime(2021, 8, 4, 4, 20, 39, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 682275679, 'comment_body': 'I can reproduce the output if I set `trainRatio = 0`, so I wanted to make sure `0.8` is what you use for your test as well.', 'comment_created': datetime.datetime(2021, 8, 4, 4, 22, 48, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 682276050, 'comment_body': 'Ohh, wait, `size_t trainRatio = 0.8;`, the data type is wrong, it should be `double`.', 'comment_created': datetime.datetime(2021, 8, 4, 4, 24, 1, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 682276862, 'comment_body': ""```\r\nAfter Split: \r\n testSize0\r\n Mnist_Dataset cols:  42000\r\n TrainRatio: 0\r\n```\r\nNow this is interesting...after split trainRatio value becomes 0. \r\nwill a const keyword fix it? No, it doesn't :(\r\nPS- testSize is 0...i just forgot to add some spaces there :("", 'comment_created': datetime.datetime(2021, 8, 4, 4, 27, tzinfo=datetime.timezone.utc), 'commenter': 'swaingotnochill', 'type': 'User'}, {'comment_id': 682277361, 'comment_body': 'No, see the comment above.', 'comment_created': datetime.datetime(2021, 8, 4, 4, 28, 23, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 684697502, 'comment_body': 'I think that was solved the in the latest version, can you push the updated version?', 'comment_created': datetime.datetime(2021, 8, 8, 1, 14, 58, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 684700309, 'comment_body': 'Sure..I will clean up a bit and update by 18:00utc', 'comment_created': datetime.datetime(2021, 8, 8, 1, 52, 58, tzinfo=datetime.timezone.utc), 'commenter': 'swaingotnochill', 'type': 'User'}, {'comment_id': 685051102, 'comment_body': '@zoq @kartikdutt18 Is it the correct way to use the Gan class. I declared generator, discriminator and gaussian above to use the Gan class. Let me know.', 'comment_created': datetime.datetime(2021, 8, 9, 9, 42, 50, tzinfo=datetime.timezone.utc), 'commenter': 'swaingotnochill', 'type': 'User'}, {'comment_id': 690844577, 'comment_body': 'Does, this function fail right away, or does this actually generate the image and fail afterwards?', 'comment_created': datetime.datetime(2021, 8, 18, 2, 2, 58, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 690852049, 'comment_body': 'The Python Script works..but when I use the C++ Function, it throws ""Call Failed"".', 'comment_created': datetime.datetime(2021, 8, 18, 2, 25, 43, tzinfo=datetime.timezone.utc), 'commenter': 'swaingotnochill', 'type': 'User'}, {'comment_id': 690852159, 'comment_body': 'Is it working on your system? ', 'comment_created': datetime.datetime(2021, 8, 18, 2, 26, 5, tzinfo=datetime.timezone.utc), 'commenter': 'swaingotnochill', 'type': 'User'}, {'comment_id': 690853009, 'comment_body': ""I just looked at the code, and haven't seen an issue, so I was wondering if the python script is called, generates an image but fails afterwards. Because in some cases we don't check for errors see https://github.com/mlpack/examples/blob/master/utils/plot.hpp"", 'comment_created': datetime.datetime(2021, 8, 18, 2, 28, 45, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 690855316, 'comment_body': 'Yaa..not sure why it is throwing an issue...I think, even though the python script seems to be working fine alone, maybe the object(""File Saved"") is the root cause of this issue. I will try with different save image function, and see if this continues. I will update you by evening. ', 'comment_created': datetime.datetime(2021, 8, 18, 2, 35, 55, tzinfo=datetime.timezone.utc), 'commenter': 'swaingotnochill', 'type': 'User'}, {'comment_id': 692184563, 'comment_body': 'Its working now. Resolving this.', 'comment_created': datetime.datetime(2021, 8, 19, 14, 50, 23, tzinfo=datetime.timezone.utc), 'commenter': 'swaingotnochill', 'type': 'User'}, {'comment_id': 693268564, 'comment_body': 'The indentation is off by one space.', 'comment_created': datetime.datetime(2021, 8, 20, 23, 51, 49, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 693268629, 'comment_body': '```suggestion\r\n```\r\n\r\nRemove the extra empty line here.', 'comment_created': datetime.datetime(2021, 8, 20, 23, 52, 5, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 693268945, 'comment_body': 'Would be a good idea to print something before that e.g. `Dataset shape:`, so the user knows what the output is.', 'comment_created': datetime.datetime(2021, 8, 20, 23, 53, 22, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 693268993, 'comment_body': '```suggestion\r\n```\r\n\r\nRemove the extra empty line here.', 'comment_created': datetime.datetime(2021, 8, 20, 23, 53, 45, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 693269039, 'comment_body': '```suggestion\r\n```\r\n\r\nRemove the extra empty line here.', 'comment_created': datetime.datetime(2021, 8, 20, 23, 54, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 693269117, 'comment_body': '```suggestion\r\n        56, 56);\r\n```\r\n\r\nShould be tabbed twice (4 spaces).', 'comment_created': datetime.datetime(2021, 8, 20, 23, 54, 19, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 693269248, 'comment_body': '```suggestion\r\n    // Adding first ReLU.\r\n```\r\n\r\nMissing stop at the end, this applies to some other lines below as well.', 'comment_created': datetime.datetime(2021, 8, 20, 23, 54, 58, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 693269321, 'comment_body': '```suggestion\r\n        std::function<double()> > gan(generator, discriminator,\r\n        gaussian, noiseFunction, noiseDim, batchSize, generatorUpdateStep,\r\n        discriminatorPreTrain, multiplier);\r\n```\r\n\r\nShould be tabbed twice (4 spaces).', 'comment_created': datetime.datetime(2021, 8, 20, 23, 55, 25, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 693269443, 'comment_body': '```suggestion\r\n    for (size_t i = 0; i < cycles; ++i)\r\n```\r\n\r\nTo be consistent with the codebase.\r\n\r\n', 'comment_created': datetime.datetime(2021, 8, 20, 23, 56, 8, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 693269684, 'comment_body': '```suggestion\r\n     arma::mat samples;\r\n```\r\n\r\nIndentation is wrong, applies to the lines below as well.', 'comment_created': datetime.datetime(2021, 8, 20, 23, 56, 59, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 693269927, 'comment_body': '```suggestion\r\n    ""// Import the generate image script from utils folder.\\n"",\r\n```\r\n\r\nMissing stop at the end.', 'comment_created': datetime.datetime(2021, 8, 20, 23, 58, 22, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 693270000, 'comment_body': '```suggestion\r\n    ""// Let\'s generate image from csv files.\\n"",\r\n```\r\n\r\nMinor spelling fix and missing stop at the end.', 'comment_created': datetime.datetime(2021, 8, 20, 23, 58, 49, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 693270189, 'comment_body': 'All of this is covered in https://github.com/mlpack/examples/blob/master/.gitignore, so we can remove this one.', 'comment_created': datetime.datetime(2021, 8, 21, 0, 0, 5, tzinfo=datetime.timezone.utc), 'commenter': 'zoq', 'type': 'User'}, {'comment_id': 694032415, 'comment_body': 'Lets add an new line here (same for the file below).', 'comment_created': datetime.datetime(2021, 8, 23, 14, 37, 25, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 694034677, 'comment_body': 'The spacing is off here.', 'comment_created': datetime.datetime(2021, 8, 23, 14, 39, 56, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 694036175, 'comment_body': '```suggestion\r\n    std::function<double()> noiseFunction = []() {\r\n        return math::RandNormal(0, 1);};\r\n```', 'comment_created': datetime.datetime(2021, 8, 23, 14, 41, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 694037764, 'comment_body': 'Indentation seems off here. ', 'comment_created': datetime.datetime(2021, 8, 23, 14, 43, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 694038249, 'comment_body': '```suggestion\r\n    noise.imbue([&]() { return noiseFunction(); });\r\n```', 'comment_created': datetime.datetime(2021, 8, 23, 14, 43, 40, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 694038982, 'comment_body': 'We can add a new line here.', 'comment_created': datetime.datetime(2021, 8, 23, 14, 44, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}, {'comment_id': 696643404, 'comment_body': 'I removed this gitignore entirely.', 'comment_created': datetime.datetime(2021, 8, 26, 13, 42, 58, tzinfo=datetime.timezone.utc), 'commenter': 'swaingotnochill', 'type': 'User'}, {'comment_id': 696644557, 'comment_body': ""I didn't get it. Can you elaborate a little more?"", 'comment_created': datetime.datetime(2021, 8, 26, 13, 44, 10, tzinfo=datetime.timezone.utc), 'commenter': 'swaingotnochill', 'type': 'User'}, {'comment_id': 696647630, 'comment_body': 'I meant just add a new line to fix eol issue.', 'comment_created': datetime.datetime(2021, 8, 26, 13, 47, 25, tzinfo=datetime.timezone.utc), 'commenter': 'kartikdutt18', 'type': 'User'}]","[{'commit_sha': '8ff8b7535e954caddf2c5daccb452c5997b26dcb', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0ea62c475c1ceca96630f73c6bd8fd7ee9a4c61', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1bf251a7ac37f8df258f8ab25c6131219782cd6', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a68c83c77a8e9869a1c5a62b1a02876635a1af7', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acb204813ef5ae575634083fad131d1d56ac33cc', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90214b6015b1b85a50fb62b8226354f53531d253', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f9bafe20f1573aa9690bb235147f9674b2e759c', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ebecff6199b3da58f6264b80dfc90b8c89b8112', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ded9fc7635f7069e7f0e3e6e49b40f4b0d7d61d', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e55e29e62480275a3a534bbbfb52a3463ea16bf0', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a6a590e2c4526231acefd8e34382a2d82137713', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abfcd330fb8580e4d8e3282fbdda700237f56b6e', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e155073d47b0fd9d678c45abb7998a8ef47fdd92', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc3afc2f7f41c5e0cb90bc7bce5d18e1c307715d', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3f9003a0dee004349c42e60e5887e59a377ed3a', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ba21fd972722cd4ab1d327c7d9830a2ab9ff875', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9d50116a0cfb320e464071d8b6b19e8754b996a', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a45d9274a3da0257f7c4a9de1b9a83be2771233', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ea30b2bdc11a32a82794f509446c288943b34d6', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cac2a4ca8593a1a896bbe0978d705b82092c91f', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25abdc9c79fb5d016832dc298f5d6a8407f2926c', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3281b0a2aa7ae8f429a39922c7691da8a97a1a4f', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}]",Roshan Swain,54025913,,User,,157,,13,27
607879950,Refactor tests to use approx_equal() ,"I refactored tests for file 'ann_dist_test.cpp' in location  mlpack/tests/ . I am also still searching to see if there are any similar issues in other tests.
The link to the issue : https://github.com/mlpack/mlpack/issues/2897

The current one used abs(x-y) to check if values are almost equal. I refactored it with approx_value() funciton provided by armadillo.
",True,2901,https://api.github.com/repos/mlpack/mlpack/pulls/2901,https://github.com/mlpack/mlpack/pull/2901,closed,3,3,1,6,10,16,1,0,[{'name': 'c: testing'}],2021-04-02 07:34:43+00:00,2021-04-20 00:25:41+00:00,1529458.0,"17 days, 16:50:58","[{'comment_id': 606607463, 'comment_body': ""I don't understand your indentation changes. Am I missing something?"", 'comment_created': datetime.datetime(2021, 4, 3, 2, 59, 21, tzinfo=datetime.timezone.utc), 'commenter': 'birm', 'type': 'User'}, {'comment_id': 606607577, 'comment_body': 'Also, please be consistent with spaces after commas.', 'comment_created': datetime.datetime(2021, 4, 3, 3, 0, 1, tzinfo=datetime.timezone.utc), 'commenter': 'birm', 'type': 'User'}, {'comment_id': 606609027, 'comment_body': 'Yes, sorry that was mistake on my part. I will review and make necessary changes', 'comment_created': datetime.datetime(2021, 4, 3, 3, 19, 26, tzinfo=datetime.timezone.utc), 'commenter': 'swaingotnochill', 'type': 'User'}, {'comment_id': 606682277, 'comment_body': 'Any particular reason why you changed the tolerance?\r\nShouldn\'t it be this:-\r\n```suggestion\r\n    REQUIRE(arma::approx_equal(jacobianA, jacobianB, ""both"", 3e-5, 3e-5));\r\n```\r\n', 'comment_created': datetime.datetime(2021, 4, 3, 16, 22, 19, tzinfo=datetime.timezone.utc), 'commenter': 'RishabhGarg108', 'type': 'User'}, {'comment_id': 606682632, 'comment_body': '```suggestion\r\n  REQUIRE(arma::as_scalar(arma::abs(arma::mean(output) - (1 - p))) <= 0.05);\r\n```\r\nMinor style fix :)', 'comment_created': datetime.datetime(2021, 4, 3, 16, 26, 16, tzinfo=datetime.timezone.utc), 'commenter': 'RishabhGarg108', 'type': 'User'}, {'comment_id': 606682680, 'comment_body': '```suggestion\r\n```\r\nStyle fix.', 'comment_created': datetime.datetime(2021, 4, 3, 16, 26, 50, tzinfo=datetime.timezone.utc), 'commenter': 'RishabhGarg108', 'type': 'User'}, {'comment_id': 606682774, 'comment_body': '```suggestion\r\n```\r\nStyle fix.', 'comment_created': datetime.datetime(2021, 4, 3, 16, 27, 34, tzinfo=datetime.timezone.utc), 'commenter': 'RishabhGarg108', 'type': 'User'}, {'comment_id': 606692513, 'comment_body': ':(', 'comment_created': datetime.datetime(2021, 4, 3, 18, 1, 10, tzinfo=datetime.timezone.utc), 'commenter': 'swaingotnochill', 'type': 'User'}, {'comment_id': 611093776, 'comment_body': 'Please do remove trailing whitespace.', 'comment_created': datetime.datetime(2021, 4, 10, 21, 11, 19, tzinfo=datetime.timezone.utc), 'commenter': 'birm', 'type': 'User'}, {'comment_id': 611668160, 'comment_body': 'This check is also an absolute value check---maybe we should rework it too to be a relative value check?', 'comment_created': datetime.datetime(2021, 4, 12, 14, 15, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rcurtin', 'type': 'User'}, {'comment_id': 611668582, 'comment_body': ""I don't think I follow this change.  (Also, this test is using absolute value checks; maybe it should be a relative value check?  I am not sure if that makes sense for this test---I have not understood it closely at the moment.)"", 'comment_created': datetime.datetime(2021, 4, 12, 14, 16, 7, tzinfo=datetime.timezone.utc), 'commenter': 'rcurtin', 'type': 'User'}, {'comment_id': 612137345, 'comment_body': ""Actually the ann_layer_test was not in scope of changes of this PR, but the test cases failed, so I fixed it also. The approx_value function didn't worked for this, so I just made a quick fix for this and left it for further discussion. The reason I didn't go fixing all the test cases as it was quite difficult to understand all at once. So, I plan on fixing one test file at a time. "", 'comment_created': datetime.datetime(2021, 4, 13, 5, 21, 27, tzinfo=datetime.timezone.utc), 'commenter': 'swaingotnochill', 'type': 'User'}, {'comment_id': 612810789, 'comment_body': ""Ok, thanks for the explanation.  But, in this case, if you didn't have time to dig through the test to see if this was a reasonable change, actually I'd prefer to not make the change in this PR.  Making changes that appear to fix the issue but without a deep understanding of what's going on is a recipe for later confusion. :smile:  If this test does regularly fail in an invalid way, maybe we can address that in a different PR?"", 'comment_created': datetime.datetime(2021, 4, 13, 22, 16, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rcurtin', 'type': 'User'}, {'comment_id': 612877268, 'comment_body': 'Sure... The reason I solved this one on go  the was that I was afraid of it not clearing the azure pipeline tests on GitHub😅. I thought all tests are needed to be cleared for a PR to be accepted, so I did a quick fix to it. Nevertheless, I will make another PR for this issue. ', 'comment_created': datetime.datetime(2021, 4, 14, 1, 31, 45, tzinfo=datetime.timezone.utc), 'commenter': 'swaingotnochill', 'type': 'User'}, {'comment_id': 614445969, 'comment_body': ""I wish that we could see more green builds. 😄 But many of mlpack's tests are probabilistic, and so if you have lots of probabilistic tests, even if the failure probability of each test is pretty low, the aggregate probability of any of those tests failing is actually much higher.\r\n\r\nSo anyway, happy to merge this one in if you want to remove this change (we can save that for another PR), and if the tests that you changed still pass just fine (last I looked, they did, so I think there are no issues there). :+1:"", 'comment_created': datetime.datetime(2021, 4, 15, 23, 3, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rcurtin', 'type': 'User'}, {'comment_id': 615259280, 'comment_body': '@rcurtin You can merge this one.. I have removed this commit. ', 'comment_created': datetime.datetime(2021, 4, 17, 14, 6, 14, tzinfo=datetime.timezone.utc), 'commenter': 'swaingotnochill', 'type': 'User'}]","[{'commit_sha': '65d333377aff8a8f1c9bd02048734e5452db6a92', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53c663ac2453f3c2552b5646a1fb7f58ba933283', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f90c54237bf6b63e2f35421dc7f7cd6e403e298', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f2a184faedf33b95753e14580c0db0ae2c5af18', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b11f9995e28f3b58c891a60999e2d3d8b379e3d1', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed0e2e2b5f2d258132ee0ae5156e1843b7cb0b40', 'committer_username': 'swaingotnochill', 'committer_name': 'Roshan Swain', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 12, 11, 1, 53, tzinfo=datetime.timezone.utc)}]",Roshan Swain,54025913,,User,,157,,13,27

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
92665356,examples,mlpack/examples,Jupyter Notebook,89,116,24,37,1035,5,1,2,"[{'id': 696499321, 'number': 172, 'closed': None, 'created': datetime.datetime(2021, 7, 25, 13, 8, 32, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 653, 'deletions': 0, 'state': 'open'}, {'id': 684554546, 'number': 167, 'closed': datetime.datetime(2021, 7, 11, 15, 41, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 17, 26, 54, tzinfo=datetime.timezone.utc), 'time_taken': 425666.0, 'time_delta': '4 days, 22:14:26', 'additions': 3204, 'deletions': 378, 'state': 'closed'}, {'id': 680769273, 'number': 161, 'closed': datetime.datetime(2021, 7, 25, 13, 9, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 11, 13, 56, tzinfo=datetime.timezone.utc), 'time_taken': 2166931.0, 'time_delta': '25 days, 1:55:31', 'additions': 670, 'deletions': 0, 'state': 'closed'}, {'id': 670666968, 'number': 158, 'closed': datetime.datetime(2021, 7, 6, 17, 9, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 18, 57, 58, tzinfo=datetime.timezone.utc), 'time_taken': 1807907.0, 'time_delta': '20 days, 22:11:47', 'additions': 2815, 'deletions': 391, 'state': 'closed'}]"
28149409,mlpack,mlpack/mlpack,C++,1592,4986,183,321,30199,28,11,17,"[{'id': 723232207, 'number': 3047, 'closed': datetime.datetime(2021, 9, 16, 17, 10, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 31, 10, 23, 41, tzinfo=datetime.timezone.utc), 'time_taken': 1406836.0, 'time_delta': '16 days, 6:47:16', 'additions': 21, 'deletions': 5, 'state': 'closed'}, {'id': 696501435, 'number': 3023, 'closed': datetime.datetime(2021, 7, 26, 12, 11, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 25, 13, 22, 28, tzinfo=datetime.timezone.utc), 'time_taken': 82147.0, 'time_delta': '22:49:07', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 607879950, 'number': 2901, 'closed': datetime.datetime(2021, 4, 20, 0, 25, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 2, 7, 34, 43, tzinfo=datetime.timezone.utc), 'time_taken': 1529458.0, 'time_delta': '17 days, 16:50:58', 'additions': 3, 'deletions': 3, 'state': 'closed'}]"
