pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1380643914,vsock: Add support for multiple guests,"Adds support for instantiating multiple `VhostUserVsockBackend`s parallely to handle multiple guests. Extends the CLI interface to accept the config for multiple VMs in addition to the yaml config file with the `--vm` argument as follows:

```bash
vhost-user-vsock \
--vm guest_cid=3,socket=/tmp/vhost3.socket,uds_path=/tmp/vm3.vsock \ 
--vm guest_cid=4,socket=/tmp/vhost4.socket,uds_path=/tmp/vm4.vsock
```
",True,357,https://api.github.com/repos/rust-vmm/vhost-device/pulls/357,https://github.com/rust-vmm/vhost-device/pull/357,closed,212,38,3,2,0,11,0,0,[],2023-06-06 10:58:44+00:00,2023-06-08 07:39:17+00:00,160833.0,"1 day, 20:40:33","[{'comment_id': 1221104355, 'comment_body': 'Here with the rebase you lost the description of `--vm` and removed `--config` by accident.', 'comment_created': datetime.datetime(2023, 6, 7, 8, 1, 12, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1221113239, 'comment_body': 'Maybe here we can mix `uds_path` and `uds-path` and others', 'comment_created': datetime.datetime(2023, 6, 7, 8, 6, 52, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1221117308, 'comment_body': 'What about extending also the `yaml` example with multiple vms?', 'comment_created': datetime.datetime(2023, 6, 7, 8, 9, 40, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1221134661, 'comment_body': 'Can we reuse the `DEFAULT_GUEST_CID` here?', 'comment_created': datetime.datetime(2023, 6, 7, 8, 21, 3, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1221135269, 'comment_body': 'And `DEFAULT_TX_BUFFER_SIZE` here', 'comment_created': datetime.datetime(2023, 6, 7, 8, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1221139545, 'comment_body': 'Maybe we should return a more specific error, such as `key not found`.', 'comment_created': datetime.datetime(2023, 6, 7, 8, 24, 8, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1221146431, 'comment_body': ""I'd try to propagate the `ParseIntError` to our `Error::ArgsParse`.\r\n\r\nMaybe we can define it as `ArgsParse(std::io::Error)` and then implement `From<ParseIntError> for std::io::Error`, since with `std::io::Error` we can also be more specific when we don't find the key."", 'comment_created': datetime.datetime(2023, 6, 7, 8, 28, 39, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1221151769, 'comment_body': 'We seem to use this error only for `--vm`, right?\r\n\r\nIn that case, I would rename it to VmParse (or something similar) and specify in the message that we are talking about --vm', 'comment_created': datetime.datetime(2023, 6, 7, 8, 32, 8, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1221155180, 'comment_body': 'In order to avoid confusion with the config file, I\'d say: ""Device parameters corresponding to a VM in the form of ...""', 'comment_created': datetime.datetime(2023, 6, 7, 8, 34, 2, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1222024640, 'comment_body': ""I don't understand the significance of using `std::io::Error` here. So for now, I am using a custom error type with descriptive fields "", 'comment_created': datetime.datetime(2023, 6, 7, 18, 46, 31, tzinfo=datetime.timezone.utc), 'commenter': 'techiepriyansh', 'type': 'User'}, {'comment_id': 1222574048, 'comment_body': 'Custom error type is even better ;-)\r\n', 'comment_created': datetime.datetime(2023, 6, 8, 7, 28, 52, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}]","[{'commit_sha': 'a15f7ef141bd638d55b86643fb0ca621bd18c6e5', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '113c2cd48a146db909ebec8c4a69478d33d2f195', 'committer_username': 'vireshk', 'committer_name': 'Viresh Kumar', 'committer_email': 'viresh.kumar@linaro.org', 'commit_date': datetime.datetime(2015, 6, 17, 3, 0, 54, tzinfo=datetime.timezone.utc)}]",Priyansh Rathi,26199781,,User,,45,,41,44
1398826317,vsock: Implement sibling VM communication,Adds support for communication between sibling VMs that use the vhost-user-vsock devices from the same vhost-user-vsock application.,True,370,https://api.github.com/repos/rust-vmm/vhost-device/pulls/370,https://github.com/rust-vmm/vhost-device/pull/370,closed,381,50,5,4,11,13,0,0,[],2023-06-19 20:51:06+00:00,2023-07-03 06:03:13+00:00,1156327.0,"13 days, 9:12:07","[{'comment_id': 1238191299, 'comment_body': '`bknd` is cryptic, I would suggest expanding it, or just use `cid_map` ', 'comment_created': datetime.datetime(2023, 6, 22, 8, 32, 17, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238194011, 'comment_body': 'In the future perhaps we could add the ability to change the configuration at runtime and allow new guests to be added even without having to restart the daemon.\r\n\r\nSo it might make sense to always pass a map, even with only 1 guest?\r\n\r\nThat way it should be easier to extend it.', 'comment_created': datetime.datetime(2023, 6, 22, 8, 34, 38, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238196216, 'comment_body': 'What about adding a test passing the map?\r\n\r\nIn this way maybe we can reduce the coverage decrease', 'comment_created': datetime.datetime(2023, 6, 22, 8, 36, 25, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238205643, 'comment_body': 'maybe a single `return Ok(());` after this block allow us to reduce a bit the code.', 'comment_created': datetime.datetime(2023, 6, 22, 8, 44, 21, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238209206, 'comment_body': 'Maybe we can add a new test in this file to cover the new function and also the new behavior of `send_pkt` with sibling VMs', 'comment_created': datetime.datetime(2023, 6, 22, 8, 47, 18, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238210747, 'comment_body': 'maybe we can rename `thread_event_fd` in `sibling_event_fd`, just because we use it for `SIBLING_VM_EVENT`', 'comment_created': datetime.datetime(2023, 6, 22, 8, 48, 36, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238215242, 'comment_body': 'What about moving this block after `BACKEND_EVENT` to keep the order?', 'comment_created': datetime.datetime(2023, 6, 22, 8, 52, 13, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238226214, 'comment_body': 'This looks like a big code duplication of `process_rx_queue`.\r\nCan we reuse it in some way? maybe passing a parameter or a closure to distinguish whether to take the packet from `self.thread_backend.recv_raw_vsock_pkt` or `self.thread_backend.recv_pkt`?', 'comment_created': datetime.datetime(2023, 6, 22, 8, 59, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238227324, 'comment_body': 'Also here we can think a new test with a map', 'comment_created': datetime.datetime(2023, 6, 22, 8, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238716713, 'comment_body': 'nit: usually, this type of constructors/factory methods are called just `from_` instead of `create_from_`', 'comment_created': datetime.datetime(2023, 6, 22, 15, 42, 40, tzinfo=datetime.timezone.utc), 'commenter': 'germag', 'type': 'User'}, {'comment_id': 1239511899, 'comment_body': 'I am now using a boolean parameter to differentiate between `recv_pkt` and `recv_raw_vsock_pkt`. Should I use an enum instead?', 'comment_created': datetime.datetime(2023, 6, 23, 8, 12, 13, tzinfo=datetime.timezone.utc), 'commenter': 'techiepriyansh', 'type': 'User'}, {'comment_id': 1239516678, 'comment_body': ""I have now added a test (in the same test function) passing the map, but I don't know if it's really meaningful. What do you think?"", 'comment_created': datetime.datetime(2023, 6, 23, 8, 17, 5, tzinfo=datetime.timezone.utc), 'commenter': 'techiepriyansh', 'type': 'User'}, {'comment_id': 1239535426, 'comment_body': 'Yep, maybe enum is even better.\r\n\r\nAnother suggestion, I would remove `vsock` in the function/enum names, `raw_pkt` should be enough.', 'comment_created': datetime.datetime(2023, 6, 23, 8, 35, 55, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}]","[{'commit_sha': '58590af4d4544d76f87a53fcee89dacfaf163b5e', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fa02fef2b2b83fcb5a445291c941e2e224c3699', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89ed07c1eeb63e9b9ccb99ce484f98d7dd98b6f4', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33a1828faf90e0612ecb2f86aa3fe60840e6fcb2', 'committer_username': 'vireshk', 'committer_name': 'Viresh Kumar', 'committer_email': 'viresh.kumar@linaro.org', 'commit_date': datetime.datetime(2015, 6, 17, 3, 0, 54, tzinfo=datetime.timezone.utc)}]",Priyansh Rathi,26199781,,User,,45,,41,44
1421602249,vsock: Fix issues with sibling VM communication,"This PR attempts to resolve issues with sibling VM communication described in #384.
 
 Resolves partially  #384.",True,385,https://api.github.com/repos/rust-vmm/vhost-device/pulls/385,https://github.com/rust-vmm/vhost-device/pull/385,closed,89,52,4,3,11,6,0,0,[],2023-07-05 19:04:02+00:00,2023-07-20 07:59:13+00:00,1256111.0,"14 days, 12:55:11","[{'comment_id': 1254022925, 'comment_body': 'What about adding a function for this?', 'comment_created': datetime.datetime(2023, 7, 6, 7, 5, 1, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1254029823, 'comment_body': 'Or eventually, can we do that directly in `VhostUserVsockBackend::new()`?', 'comment_created': datetime.datetime(2023, 7, 6, 7, 12, 30, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1254105134, 'comment_body': 'Now it seems we call `process_rx` and `process_raw_pkts` (also the pending ones) always together, so might it be better to unify them to avoid future problems?\r\n\r\nEffectively rx now depends on both backend and siblings.\r\n', 'comment_created': datetime.datetime(2023, 7, 6, 8, 22, 59, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1255756357, 'comment_body': 'Right. Now that we are not storing a reference to the backend itself in the map, this should be the way to go.', 'comment_created': datetime.datetime(2023, 7, 7, 12, 34, 18, tzinfo=datetime.timezone.utc), 'commenter': 'techiepriyansh', 'type': 'User'}, {'comment_id': 1262347537, 'comment_body': 'We still need the function to process raw packets only when a `SIBLING_EVENT` is received. So, instead I have modified the logic here to prevent the starvation of one queue by the other.', 'comment_created': datetime.datetime(2023, 7, 13, 10, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'techiepriyansh', 'type': 'User'}, {'comment_id': 1262523450, 'comment_body': ""What about moving this in `VhostUserVsockThread`?\r\n\r\nI think we can also move `last_processed` there.\r\nFor now, we have a single thread that handles all the queue, in the future we can have multiple threads, but I'm expecting that one thread will always handle the same set of queues, so we shouldn't have multiple threads competing for the same queue."", 'comment_created': datetime.datetime(2023, 7, 13, 12, 59, 25, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}]","[{'commit_sha': 'eb3d3c2baa68eee0c2de80d70736b242749fd786', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3258eedc0625e2c9b886c597de809a5f15039c64', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4791e6cf8093cb62cabe0aba15bdbbbeea169514', 'committer_username': 'vireshk', 'committer_name': 'Viresh Kumar', 'committer_email': 'viresh.kumar@linaro.org', 'commit_date': datetime.datetime(2015, 6, 17, 3, 0, 54, tzinfo=datetime.timezone.utc)}]",Priyansh Rathi,26199781,,User,,45,,41,44
1447712731,vsock: Add VM groups in sibling communication," Restrict the VMs a given VM can communicate with by introducing VM groups. A group is simply a name assigned to the device in the configuration. A VM can communicate with another VM only if their devices are assigned the same group name.
 
 While implementing this, I discovered that optional parameters were not being correctly handled in the yaml config file. One needed to provide all the fields (even the optional ones) in the config file otherwise the application paniced. So, I have included a fix for this too.",True,406,https://api.github.com/repos/rust-vmm/vhost-device/pulls/406,https://github.com/rust-vmm/vhost-device/pull/406,closed,195,27,5,2,7,9,0,0,[],2023-07-25 04:18:53+00:00,2023-08-07 11:08:11+00:00,1147758.0,"13 days, 6:49:18","[{'comment_id': 1277422225, 'comment_body': ""I don't have a strong opinion, but since for example for `guest_cid` and `tx_buffer_size` we used Option and then `unwrap_or`, what about doing the same for `group`?"", 'comment_created': datetime.datetime(2023, 7, 28, 11, 17, 54, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1277422599, 'comment_body': 'Also, can we use `DEFAULT_GROUP_NAME`?', 'comment_created': datetime.datetime(2023, 7, 28, 11, 18, 22, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1282817343, 'comment_body': 'What about renaming it in `groups` now that we support multiple groups?', 'comment_created': datetime.datetime(2023, 8, 3, 8, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1282818380, 'comment_body': 'In one of the two vms I would use only one group', 'comment_created': datetime.datetime(2023, 8, 3, 8, 12, 22, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1282819017, 'comment_body': '`s/atleast/at least`', 'comment_created': datetime.datetime(2023, 8, 3, 8, 12, 55, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1282819733, 'comment_body': '""group names""', 'comment_created': datetime.datetime(2023, 8, 3, 8, 13, 26, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1282822358, 'comment_body': 'What about just an `info!`?', 'comment_created': datetime.datetime(2023, 8, 3, 8, 15, 44, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1282823577, 'comment_body': 'What about testing also `+` here in one vm?', 'comment_created': datetime.datetime(2023, 8, 3, 8, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1282830261, 'comment_body': 'I think it is better to split it in `main.rs`, creating directly the HashSet, or just an array of strings, then here we can create the HashSet, as you prefer.\r\n\r\nIMHO the thread should not handle the CLI details.', 'comment_created': datetime.datetime(2023, 8, 3, 8, 22, 31, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}]","[{'commit_sha': 'b91e9c0df0ece22170bad4b976f6f17c98d90315', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a5b30de4dfb277b43cb2c1070a317509285e116', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}]",Priyansh Rathi,26199781,,User,,45,,41,44
1482308889,[WIP] vsock: Add new VMs at runtime,"Implement ability to add new VMs at runtime. Removing or modifying the configuration of an existing VM at runtime is not supported at the moment.

To use this feature, you must use the `--config` CLI argument to specify the initial configuration with the `--watch` flag set. The path to the config file provided must be a symlink to the actual YAML config. To update the VM configuration at runtime, simply change the symlink to point to the YAML config file with the new configuration.
",False,426,https://api.github.com/repos/rust-vmm/vhost-device/pulls/426,https://github.com/rust-vmm/vhost-device/pull/426,open,299,65,3,1,0,0,0,0,[],2023-08-21 07:02:18+00:00,,0.0,,[],"[{'commit_sha': 'ee33fd4bc3c742e76b316d9ebed28ceb9a88017c', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}]",Priyansh Rathi,26199781,,User,,45,,41,44
1453059671,vsock: Add support for connecting to sibling VMs,Allow connection to a sibling VM by setting the `VMADDR_FLAG_TO_HOST` flag in `sockaddr_vm`. Sibling VMs are specified in the client command by specifying the host for the `--client (-c)` CLI argument as the sibling VM CID prefixed with `s` (e.g. `s4`).,True,2,https://api.github.com/repos/stefano-garzarella/iperf-vsock/pulls/2,https://github.com/stefano-garzarella/iperf-vsock/pull/2,closed,23,1,2,1,1,3,0,0,[],2023-07-28 01:49:34+00:00,2023-07-31 11:09:44+00:00,292810.0,"3 days, 9:20:10","[{'comment_id': 1277396804, 'comment_body': 'we can remove this extra blank line', 'comment_created': datetime.datetime(2023, 7, 28, 10, 46, 11, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1277397920, 'comment_body': 'what about doing here also `cid_str++`, so we can use `cid = strtol(cid_str, &end, 10);` in both cases', 'comment_created': datetime.datetime(2023, 7, 28, 10, 47, 33, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1277406680, 'comment_body': 'no, we will break the path for the unix domain socket, so better how you did ;-)', 'comment_created': datetime.datetime(2023, 7, 28, 10, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}]","[{'commit_sha': 'bffaea6ac0b069e8bc8914acb4ce2eab5258bc26', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}]",Priyansh Rathi,26199781,,User,,45,,41,44
1380643914,vsock: Add support for multiple guests,"Adds support for instantiating multiple `VhostUserVsockBackend`s parallely to handle multiple guests. Extends the CLI interface to accept the config for multiple VMs in addition to the yaml config file with the `--vm` argument as follows:

```bash
vhost-user-vsock \
--vm guest_cid=3,socket=/tmp/vhost3.socket,uds_path=/tmp/vm3.vsock \ 
--vm guest_cid=4,socket=/tmp/vhost4.socket,uds_path=/tmp/vm4.vsock
```
",True,357,https://api.github.com/repos/rust-vmm/vhost-device/pulls/357,https://github.com/rust-vmm/vhost-device/pull/357,closed,212,38,3,2,0,11,0,0,[],2023-06-06 10:58:44+00:00,2023-06-08 07:39:17+00:00,160833.0,"1 day, 20:40:33","[{'comment_id': 1221104355, 'comment_body': 'Here with the rebase you lost the description of `--vm` and removed `--config` by accident.', 'comment_created': datetime.datetime(2023, 6, 7, 8, 1, 12, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1221113239, 'comment_body': 'Maybe here we can mix `uds_path` and `uds-path` and others', 'comment_created': datetime.datetime(2023, 6, 7, 8, 6, 52, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1221117308, 'comment_body': 'What about extending also the `yaml` example with multiple vms?', 'comment_created': datetime.datetime(2023, 6, 7, 8, 9, 40, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1221134661, 'comment_body': 'Can we reuse the `DEFAULT_GUEST_CID` here?', 'comment_created': datetime.datetime(2023, 6, 7, 8, 21, 3, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1221135269, 'comment_body': 'And `DEFAULT_TX_BUFFER_SIZE` here', 'comment_created': datetime.datetime(2023, 6, 7, 8, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1221139545, 'comment_body': 'Maybe we should return a more specific error, such as `key not found`.', 'comment_created': datetime.datetime(2023, 6, 7, 8, 24, 8, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1221146431, 'comment_body': ""I'd try to propagate the `ParseIntError` to our `Error::ArgsParse`.\r\n\r\nMaybe we can define it as `ArgsParse(std::io::Error)` and then implement `From<ParseIntError> for std::io::Error`, since with `std::io::Error` we can also be more specific when we don't find the key."", 'comment_created': datetime.datetime(2023, 6, 7, 8, 28, 39, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1221151769, 'comment_body': 'We seem to use this error only for `--vm`, right?\r\n\r\nIn that case, I would rename it to VmParse (or something similar) and specify in the message that we are talking about --vm', 'comment_created': datetime.datetime(2023, 6, 7, 8, 32, 8, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1221155180, 'comment_body': 'In order to avoid confusion with the config file, I\'d say: ""Device parameters corresponding to a VM in the form of ...""', 'comment_created': datetime.datetime(2023, 6, 7, 8, 34, 2, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1222024640, 'comment_body': ""I don't understand the significance of using `std::io::Error` here. So for now, I am using a custom error type with descriptive fields "", 'comment_created': datetime.datetime(2023, 6, 7, 18, 46, 31, tzinfo=datetime.timezone.utc), 'commenter': 'techiepriyansh', 'type': 'User'}, {'comment_id': 1222574048, 'comment_body': 'Custom error type is even better ;-)\r\n', 'comment_created': datetime.datetime(2023, 6, 8, 7, 28, 52, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}]","[{'commit_sha': 'a15f7ef141bd638d55b86643fb0ca621bd18c6e5', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '113c2cd48a146db909ebec8c4a69478d33d2f195', 'committer_username': 'vireshk', 'committer_name': 'Viresh Kumar', 'committer_email': 'viresh.kumar@linaro.org', 'commit_date': datetime.datetime(2015, 6, 17, 3, 0, 54, tzinfo=datetime.timezone.utc)}]",Priyansh Rathi,26199781,,User,,45,,41,44
1398826317,vsock: Implement sibling VM communication,Adds support for communication between sibling VMs that use the vhost-user-vsock devices from the same vhost-user-vsock application.,True,370,https://api.github.com/repos/rust-vmm/vhost-device/pulls/370,https://github.com/rust-vmm/vhost-device/pull/370,closed,381,50,5,4,11,13,0,0,[],2023-06-19 20:51:06+00:00,2023-07-03 06:03:13+00:00,1156327.0,"13 days, 9:12:07","[{'comment_id': 1238191299, 'comment_body': '`bknd` is cryptic, I would suggest expanding it, or just use `cid_map` ', 'comment_created': datetime.datetime(2023, 6, 22, 8, 32, 17, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238194011, 'comment_body': 'In the future perhaps we could add the ability to change the configuration at runtime and allow new guests to be added even without having to restart the daemon.\r\n\r\nSo it might make sense to always pass a map, even with only 1 guest?\r\n\r\nThat way it should be easier to extend it.', 'comment_created': datetime.datetime(2023, 6, 22, 8, 34, 38, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238196216, 'comment_body': 'What about adding a test passing the map?\r\n\r\nIn this way maybe we can reduce the coverage decrease', 'comment_created': datetime.datetime(2023, 6, 22, 8, 36, 25, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238205643, 'comment_body': 'maybe a single `return Ok(());` after this block allow us to reduce a bit the code.', 'comment_created': datetime.datetime(2023, 6, 22, 8, 44, 21, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238209206, 'comment_body': 'Maybe we can add a new test in this file to cover the new function and also the new behavior of `send_pkt` with sibling VMs', 'comment_created': datetime.datetime(2023, 6, 22, 8, 47, 18, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238210747, 'comment_body': 'maybe we can rename `thread_event_fd` in `sibling_event_fd`, just because we use it for `SIBLING_VM_EVENT`', 'comment_created': datetime.datetime(2023, 6, 22, 8, 48, 36, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238215242, 'comment_body': 'What about moving this block after `BACKEND_EVENT` to keep the order?', 'comment_created': datetime.datetime(2023, 6, 22, 8, 52, 13, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238226214, 'comment_body': 'This looks like a big code duplication of `process_rx_queue`.\r\nCan we reuse it in some way? maybe passing a parameter or a closure to distinguish whether to take the packet from `self.thread_backend.recv_raw_vsock_pkt` or `self.thread_backend.recv_pkt`?', 'comment_created': datetime.datetime(2023, 6, 22, 8, 59, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238227324, 'comment_body': 'Also here we can think a new test with a map', 'comment_created': datetime.datetime(2023, 6, 22, 8, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238716713, 'comment_body': 'nit: usually, this type of constructors/factory methods are called just `from_` instead of `create_from_`', 'comment_created': datetime.datetime(2023, 6, 22, 15, 42, 40, tzinfo=datetime.timezone.utc), 'commenter': 'germag', 'type': 'User'}, {'comment_id': 1239511899, 'comment_body': 'I am now using a boolean parameter to differentiate between `recv_pkt` and `recv_raw_vsock_pkt`. Should I use an enum instead?', 'comment_created': datetime.datetime(2023, 6, 23, 8, 12, 13, tzinfo=datetime.timezone.utc), 'commenter': 'techiepriyansh', 'type': 'User'}, {'comment_id': 1239516678, 'comment_body': ""I have now added a test (in the same test function) passing the map, but I don't know if it's really meaningful. What do you think?"", 'comment_created': datetime.datetime(2023, 6, 23, 8, 17, 5, tzinfo=datetime.timezone.utc), 'commenter': 'techiepriyansh', 'type': 'User'}, {'comment_id': 1239535426, 'comment_body': 'Yep, maybe enum is even better.\r\n\r\nAnother suggestion, I would remove `vsock` in the function/enum names, `raw_pkt` should be enough.', 'comment_created': datetime.datetime(2023, 6, 23, 8, 35, 55, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}]","[{'commit_sha': '58590af4d4544d76f87a53fcee89dacfaf163b5e', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fa02fef2b2b83fcb5a445291c941e2e224c3699', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89ed07c1eeb63e9b9ccb99ce484f98d7dd98b6f4', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33a1828faf90e0612ecb2f86aa3fe60840e6fcb2', 'committer_username': 'vireshk', 'committer_name': 'Viresh Kumar', 'committer_email': 'viresh.kumar@linaro.org', 'commit_date': datetime.datetime(2015, 6, 17, 3, 0, 54, tzinfo=datetime.timezone.utc)}]",Priyansh Rathi,26199781,,User,,45,,41,44
1421602249,vsock: Fix issues with sibling VM communication,"This PR attempts to resolve issues with sibling VM communication described in #384.
 
 Resolves partially  #384.",True,385,https://api.github.com/repos/rust-vmm/vhost-device/pulls/385,https://github.com/rust-vmm/vhost-device/pull/385,closed,89,52,4,3,11,6,0,0,[],2023-07-05 19:04:02+00:00,2023-07-20 07:59:13+00:00,1256111.0,"14 days, 12:55:11","[{'comment_id': 1254022925, 'comment_body': 'What about adding a function for this?', 'comment_created': datetime.datetime(2023, 7, 6, 7, 5, 1, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1254029823, 'comment_body': 'Or eventually, can we do that directly in `VhostUserVsockBackend::new()`?', 'comment_created': datetime.datetime(2023, 7, 6, 7, 12, 30, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1254105134, 'comment_body': 'Now it seems we call `process_rx` and `process_raw_pkts` (also the pending ones) always together, so might it be better to unify them to avoid future problems?\r\n\r\nEffectively rx now depends on both backend and siblings.\r\n', 'comment_created': datetime.datetime(2023, 7, 6, 8, 22, 59, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1255756357, 'comment_body': 'Right. Now that we are not storing a reference to the backend itself in the map, this should be the way to go.', 'comment_created': datetime.datetime(2023, 7, 7, 12, 34, 18, tzinfo=datetime.timezone.utc), 'commenter': 'techiepriyansh', 'type': 'User'}, {'comment_id': 1262347537, 'comment_body': 'We still need the function to process raw packets only when a `SIBLING_EVENT` is received. So, instead I have modified the logic here to prevent the starvation of one queue by the other.', 'comment_created': datetime.datetime(2023, 7, 13, 10, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'techiepriyansh', 'type': 'User'}, {'comment_id': 1262523450, 'comment_body': ""What about moving this in `VhostUserVsockThread`?\r\n\r\nI think we can also move `last_processed` there.\r\nFor now, we have a single thread that handles all the queue, in the future we can have multiple threads, but I'm expecting that one thread will always handle the same set of queues, so we shouldn't have multiple threads competing for the same queue."", 'comment_created': datetime.datetime(2023, 7, 13, 12, 59, 25, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}]","[{'commit_sha': 'eb3d3c2baa68eee0c2de80d70736b242749fd786', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3258eedc0625e2c9b886c597de809a5f15039c64', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4791e6cf8093cb62cabe0aba15bdbbbeea169514', 'committer_username': 'vireshk', 'committer_name': 'Viresh Kumar', 'committer_email': 'viresh.kumar@linaro.org', 'commit_date': datetime.datetime(2015, 6, 17, 3, 0, 54, tzinfo=datetime.timezone.utc)}]",Priyansh Rathi,26199781,,User,,45,,41,44
1398826317,vsock: Implement sibling VM communication,Adds support for communication between sibling VMs that use the vhost-user-vsock devices from the same vhost-user-vsock application.,True,370,https://api.github.com/repos/rust-vmm/vhost-device/pulls/370,https://github.com/rust-vmm/vhost-device/pull/370,closed,381,50,5,4,11,13,0,0,[],2023-06-19 20:51:06+00:00,2023-07-03 06:03:13+00:00,1156327.0,"13 days, 9:12:07","[{'comment_id': 1238191299, 'comment_body': '`bknd` is cryptic, I would suggest expanding it, or just use `cid_map` ', 'comment_created': datetime.datetime(2023, 6, 22, 8, 32, 17, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238194011, 'comment_body': 'In the future perhaps we could add the ability to change the configuration at runtime and allow new guests to be added even without having to restart the daemon.\r\n\r\nSo it might make sense to always pass a map, even with only 1 guest?\r\n\r\nThat way it should be easier to extend it.', 'comment_created': datetime.datetime(2023, 6, 22, 8, 34, 38, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238196216, 'comment_body': 'What about adding a test passing the map?\r\n\r\nIn this way maybe we can reduce the coverage decrease', 'comment_created': datetime.datetime(2023, 6, 22, 8, 36, 25, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238205643, 'comment_body': 'maybe a single `return Ok(());` after this block allow us to reduce a bit the code.', 'comment_created': datetime.datetime(2023, 6, 22, 8, 44, 21, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238209206, 'comment_body': 'Maybe we can add a new test in this file to cover the new function and also the new behavior of `send_pkt` with sibling VMs', 'comment_created': datetime.datetime(2023, 6, 22, 8, 47, 18, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238210747, 'comment_body': 'maybe we can rename `thread_event_fd` in `sibling_event_fd`, just because we use it for `SIBLING_VM_EVENT`', 'comment_created': datetime.datetime(2023, 6, 22, 8, 48, 36, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238215242, 'comment_body': 'What about moving this block after `BACKEND_EVENT` to keep the order?', 'comment_created': datetime.datetime(2023, 6, 22, 8, 52, 13, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238226214, 'comment_body': 'This looks like a big code duplication of `process_rx_queue`.\r\nCan we reuse it in some way? maybe passing a parameter or a closure to distinguish whether to take the packet from `self.thread_backend.recv_raw_vsock_pkt` or `self.thread_backend.recv_pkt`?', 'comment_created': datetime.datetime(2023, 6, 22, 8, 59, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238227324, 'comment_body': 'Also here we can think a new test with a map', 'comment_created': datetime.datetime(2023, 6, 22, 8, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1238716713, 'comment_body': 'nit: usually, this type of constructors/factory methods are called just `from_` instead of `create_from_`', 'comment_created': datetime.datetime(2023, 6, 22, 15, 42, 40, tzinfo=datetime.timezone.utc), 'commenter': 'germag', 'type': 'User'}, {'comment_id': 1239511899, 'comment_body': 'I am now using a boolean parameter to differentiate between `recv_pkt` and `recv_raw_vsock_pkt`. Should I use an enum instead?', 'comment_created': datetime.datetime(2023, 6, 23, 8, 12, 13, tzinfo=datetime.timezone.utc), 'commenter': 'techiepriyansh', 'type': 'User'}, {'comment_id': 1239516678, 'comment_body': ""I have now added a test (in the same test function) passing the map, but I don't know if it's really meaningful. What do you think?"", 'comment_created': datetime.datetime(2023, 6, 23, 8, 17, 5, tzinfo=datetime.timezone.utc), 'commenter': 'techiepriyansh', 'type': 'User'}, {'comment_id': 1239535426, 'comment_body': 'Yep, maybe enum is even better.\r\n\r\nAnother suggestion, I would remove `vsock` in the function/enum names, `raw_pkt` should be enough.', 'comment_created': datetime.datetime(2023, 6, 23, 8, 35, 55, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}]","[{'commit_sha': '58590af4d4544d76f87a53fcee89dacfaf163b5e', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fa02fef2b2b83fcb5a445291c941e2e224c3699', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89ed07c1eeb63e9b9ccb99ce484f98d7dd98b6f4', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33a1828faf90e0612ecb2f86aa3fe60840e6fcb2', 'committer_username': 'vireshk', 'committer_name': 'Viresh Kumar', 'committer_email': 'viresh.kumar@linaro.org', 'commit_date': datetime.datetime(2015, 6, 17, 3, 0, 54, tzinfo=datetime.timezone.utc)}]",Priyansh Rathi,26199781,,User,,45,,41,44
1421602249,vsock: Fix issues with sibling VM communication,"This PR attempts to resolve issues with sibling VM communication described in #384.
 
 Resolves partially  #384.",True,385,https://api.github.com/repos/rust-vmm/vhost-device/pulls/385,https://github.com/rust-vmm/vhost-device/pull/385,closed,89,52,4,3,11,6,0,0,[],2023-07-05 19:04:02+00:00,2023-07-20 07:59:13+00:00,1256111.0,"14 days, 12:55:11","[{'comment_id': 1254022925, 'comment_body': 'What about adding a function for this?', 'comment_created': datetime.datetime(2023, 7, 6, 7, 5, 1, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1254029823, 'comment_body': 'Or eventually, can we do that directly in `VhostUserVsockBackend::new()`?', 'comment_created': datetime.datetime(2023, 7, 6, 7, 12, 30, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1254105134, 'comment_body': 'Now it seems we call `process_rx` and `process_raw_pkts` (also the pending ones) always together, so might it be better to unify them to avoid future problems?\r\n\r\nEffectively rx now depends on both backend and siblings.\r\n', 'comment_created': datetime.datetime(2023, 7, 6, 8, 22, 59, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1255756357, 'comment_body': 'Right. Now that we are not storing a reference to the backend itself in the map, this should be the way to go.', 'comment_created': datetime.datetime(2023, 7, 7, 12, 34, 18, tzinfo=datetime.timezone.utc), 'commenter': 'techiepriyansh', 'type': 'User'}, {'comment_id': 1262347537, 'comment_body': 'We still need the function to process raw packets only when a `SIBLING_EVENT` is received. So, instead I have modified the logic here to prevent the starvation of one queue by the other.', 'comment_created': datetime.datetime(2023, 7, 13, 10, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'techiepriyansh', 'type': 'User'}, {'comment_id': 1262523450, 'comment_body': ""What about moving this in `VhostUserVsockThread`?\r\n\r\nI think we can also move `last_processed` there.\r\nFor now, we have a single thread that handles all the queue, in the future we can have multiple threads, but I'm expecting that one thread will always handle the same set of queues, so we shouldn't have multiple threads competing for the same queue."", 'comment_created': datetime.datetime(2023, 7, 13, 12, 59, 25, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}]","[{'commit_sha': 'eb3d3c2baa68eee0c2de80d70736b242749fd786', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3258eedc0625e2c9b886c597de809a5f15039c64', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4791e6cf8093cb62cabe0aba15bdbbbeea169514', 'committer_username': 'vireshk', 'committer_name': 'Viresh Kumar', 'committer_email': 'viresh.kumar@linaro.org', 'commit_date': datetime.datetime(2015, 6, 17, 3, 0, 54, tzinfo=datetime.timezone.utc)}]",Priyansh Rathi,26199781,,User,,45,,41,44
1453059671,vsock: Add support for connecting to sibling VMs,Allow connection to a sibling VM by setting the `VMADDR_FLAG_TO_HOST` flag in `sockaddr_vm`. Sibling VMs are specified in the client command by specifying the host for the `--client (-c)` CLI argument as the sibling VM CID prefixed with `s` (e.g. `s4`).,True,2,https://api.github.com/repos/stefano-garzarella/iperf-vsock/pulls/2,https://github.com/stefano-garzarella/iperf-vsock/pull/2,closed,23,1,2,1,1,3,0,0,[],2023-07-28 01:49:34+00:00,2023-07-31 11:09:44+00:00,292810.0,"3 days, 9:20:10","[{'comment_id': 1277396804, 'comment_body': 'we can remove this extra blank line', 'comment_created': datetime.datetime(2023, 7, 28, 10, 46, 11, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1277397920, 'comment_body': 'what about doing here also `cid_str++`, so we can use `cid = strtol(cid_str, &end, 10);` in both cases', 'comment_created': datetime.datetime(2023, 7, 28, 10, 47, 33, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1277406680, 'comment_body': 'no, we will break the path for the unix domain socket, so better how you did ;-)', 'comment_created': datetime.datetime(2023, 7, 28, 10, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}]","[{'commit_sha': 'bffaea6ac0b069e8bc8914acb4ce2eab5258bc26', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}]",Priyansh Rathi,26199781,,User,,45,,41,44
1447712731,vsock: Add VM groups in sibling communication," Restrict the VMs a given VM can communicate with by introducing VM groups. A group is simply a name assigned to the device in the configuration. A VM can communicate with another VM only if their devices are assigned the same group name.
 
 While implementing this, I discovered that optional parameters were not being correctly handled in the yaml config file. One needed to provide all the fields (even the optional ones) in the config file otherwise the application paniced. So, I have included a fix for this too.",True,406,https://api.github.com/repos/rust-vmm/vhost-device/pulls/406,https://github.com/rust-vmm/vhost-device/pull/406,closed,195,27,5,2,7,9,0,0,[],2023-07-25 04:18:53+00:00,2023-08-07 11:08:11+00:00,1147758.0,"13 days, 6:49:18","[{'comment_id': 1277422225, 'comment_body': ""I don't have a strong opinion, but since for example for `guest_cid` and `tx_buffer_size` we used Option and then `unwrap_or`, what about doing the same for `group`?"", 'comment_created': datetime.datetime(2023, 7, 28, 11, 17, 54, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1277422599, 'comment_body': 'Also, can we use `DEFAULT_GROUP_NAME`?', 'comment_created': datetime.datetime(2023, 7, 28, 11, 18, 22, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1282817343, 'comment_body': 'What about renaming it in `groups` now that we support multiple groups?', 'comment_created': datetime.datetime(2023, 8, 3, 8, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1282818380, 'comment_body': 'In one of the two vms I would use only one group', 'comment_created': datetime.datetime(2023, 8, 3, 8, 12, 22, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1282819017, 'comment_body': '`s/atleast/at least`', 'comment_created': datetime.datetime(2023, 8, 3, 8, 12, 55, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1282819733, 'comment_body': '""group names""', 'comment_created': datetime.datetime(2023, 8, 3, 8, 13, 26, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1282822358, 'comment_body': 'What about just an `info!`?', 'comment_created': datetime.datetime(2023, 8, 3, 8, 15, 44, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1282823577, 'comment_body': 'What about testing also `+` here in one vm?', 'comment_created': datetime.datetime(2023, 8, 3, 8, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}, {'comment_id': 1282830261, 'comment_body': 'I think it is better to split it in `main.rs`, creating directly the HashSet, or just an array of strings, then here we can create the HashSet, as you prefer.\r\n\r\nIMHO the thread should not handle the CLI details.', 'comment_created': datetime.datetime(2023, 8, 3, 8, 22, 31, tzinfo=datetime.timezone.utc), 'commenter': 'stefano-garzarella', 'type': 'User'}]","[{'commit_sha': 'b91e9c0df0ece22170bad4b976f6f17c98d90315', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a5b30de4dfb277b43cb2c1070a317509285e116', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}]",Priyansh Rathi,26199781,,User,,45,,41,44
1482308889,[WIP] vsock: Add new VMs at runtime,"Implement ability to add new VMs at runtime. Removing or modifying the configuration of an existing VM at runtime is not supported at the moment.

To use this feature, you must use the `--config` CLI argument to specify the initial configuration with the `--watch` flag set. The path to the config file provided must be a symlink to the actual YAML config. To update the VM configuration at runtime, simply change the symlink to point to the YAML config file with the new configuration.
",False,426,https://api.github.com/repos/rust-vmm/vhost-device/pulls/426,https://github.com/rust-vmm/vhost-device/pull/426,open,299,65,3,1,0,0,0,0,[],2023-08-21 07:02:18+00:00,,0.0,,[],"[{'commit_sha': 'ee33fd4bc3c742e76b316d9ebed28ceb9a88017c', 'committer_username': 'techiepriyansh', 'committer_name': 'Priyansh Rathi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 5, 11, 53, 28, tzinfo=datetime.timezone.utc)}]",Priyansh Rathi,26199781,,User,,45,,41,44

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
370942225,vhost-device,rust-vmm/vhost-device,Rust,46,65,14,35,1080,28,3,11,"[{'id': 1496088349, 'number': 434, 'closed': datetime.datetime(2023, 9, 19, 11, 51, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 30, 20, 16, 55, tzinfo=datetime.timezone.utc), 'time_taken': 1697666.0, 'time_delta': '19 days, 15:34:26', 'additions': 35, 'deletions': 11, 'state': 'closed'}, {'id': 1482308889, 'number': 426, 'closed': None, 'created': datetime.datetime(2023, 8, 21, 7, 2, 18, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 299, 'deletions': 65, 'state': 'open'}, {'id': 1447712731, 'number': 406, 'closed': datetime.datetime(2023, 8, 7, 11, 8, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 25, 4, 18, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1147758.0, 'time_delta': '13 days, 6:49:18', 'additions': 195, 'deletions': 27, 'state': 'closed'}, {'id': 1421625393, 'number': 386, 'closed': datetime.datetime(2023, 7, 5, 20, 10, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 19, 24, 58, tzinfo=datetime.timezone.utc), 'time_taken': 2708.0, 'time_delta': '0:45:08', 'additions': 126, 'deletions': 74, 'state': 'closed'}, {'id': 1421602249, 'number': 385, 'closed': datetime.datetime(2023, 7, 20, 7, 59, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 19, 4, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1256111.0, 'time_delta': '14 days, 12:55:11', 'additions': 89, 'deletions': 52, 'state': 'closed'}, {'id': 1404854025, 'number': 371, 'closed': datetime.datetime(2023, 6, 23, 14, 19, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 23, 10, 33, 30, tzinfo=datetime.timezone.utc), 'time_taken': 13565.0, 'time_delta': '3:46:05', 'additions': 43, 'deletions': 108, 'state': 'closed'}, {'id': 1398826317, 'number': 370, 'closed': datetime.datetime(2023, 7, 3, 6, 3, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 19, 20, 51, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1156327.0, 'time_delta': '13 days, 9:12:07', 'additions': 381, 'deletions': 50, 'state': 'closed'}, {'id': 1380643914, 'number': 357, 'closed': datetime.datetime(2023, 6, 8, 7, 39, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 6, 10, 58, 44, tzinfo=datetime.timezone.utc), 'time_taken': 160833.0, 'time_delta': '1 day, 20:40:33', 'additions': 212, 'deletions': 38, 'state': 'closed'}, {'id': 1309360277, 'number': 321, 'closed': datetime.datetime(2023, 4, 17, 7, 13, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 11, 16, 30, 12, tzinfo=datetime.timezone.utc), 'time_taken': 485005.0, 'time_delta': '5 days, 14:43:25', 'additions': 16, 'deletions': 21, 'state': 'closed'}]"
204276099,iperf-vsock,stefano-garzarella/iperf-vsock,C,11,23,4,87,1157,1,1,0,"[{'id': 1453059671, 'number': 2, 'closed': datetime.datetime(2023, 7, 31, 11, 9, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 28, 1, 49, 34, tzinfo=datetime.timezone.utc), 'time_taken': 292810.0, 'time_delta': '3 days, 9:20:10', 'additions': 23, 'deletions': 1, 'state': 'closed'}]"
